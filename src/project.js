require = (function a(r, s, c) {
    function l(t, e) {
        if (!s[t]) {
            if (!r[t]) {
                var i = 'function' == typeof require && require;
                if (!e && i) return i(t, !0);
                if (u) return u(t, !0);
                var o = new Error("Cannot find module '" + t + "'");
                throw ((o.code = 'MODULE_NOT_FOUND'), o);
            }
            var n = (s[t] = {
                exports: {},
            });
            r[t][0].call(
                n.exports,
                function (e) {
                    return l(r[t][1][e] || e);
                },
                n,
                n.exports,
                a,
                r,
                s,
                c,
            );
        }
        return s[t].exports;
    }
    for (var u = 'function' == typeof require && require, e = 0; e < c.length; e++) l(c[e]);
    return l;
})(
    {
        Activator: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '7db411tZ3pO1LLEgguoEmSW', 'Activator'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('../runtime/ClassType'),
                    o = (function () {
                        function e() {}
                        return (
                            (e.createInstance = function (e) {
                                for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
                                var o,
                                    n = this._types;
                                if (a.Type.isString(e))
                                    if (((e = e), n.has(e))) o = n.get(e);
                                    else {
                                        if ((o = a.Type.getClassType(e)) === String) throw new TypeError("Can not found the type '" + e + "'.");
                                        n.set(e, o);
                                    }
                                else a.Type.isFunction(e) && (o = e);
                                return new (o.bind.apply(o, [void 0].concat(t)))();
                            }),
                            (e._types = new Map()),
                            e
                        );
                    })();
                (i.Activator = o), cc._RF.pop();
            },
            {
                '../runtime/ClassType': 'ClassType',
            },
        ],
        ActivityBean: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '75a70Cc0vZMCYgMQCZHmqd4', 'ActivityBean'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {}
                    return (e.ACTIVITY_ID_SHARE_FOR_SKIN = 'share_for_skin'), (e.ACTIVITY_ID_SHARE_FOR_SONG = 'share_for_song'), (e.ACTIVITY_ID_SHARE_FOR_SKIN_PIECE = 'share_for_piece'), (e.ACTIVITY_ID_SHARE_FOR_UNLOCK_TONE = 'share_for_unlock_tone_'), (e.SHARE_FOR_SKIN_INVITE_PEOPLE_MAX_NUM = 3), (e.SHARE_FOR_SKIN_BE_INVITE_PEOPLE_MAX_NUM = 99), (e.SHARE_FOR_SONG_INVITE_PEOPLE_MAX_NUM = 1), (e.SHARE_FOR_SONG_BE_INVITE_PEOPLE_MAX_NUM = 99), (e.SHARE_FOR_SKIN_PIECE_INVITE_PEOPLE_MAX_NUM = 99), (e.SHARE_FOR_SKIN_PIECE_BE_INVITE_PEOPLE_MAX_NUM = 99), (e.SHARE_FOR_TONE_INVITE_PEOPLE_MAX_NUM = 99), (e.SHARE_FOR_TONE_BE_INVITE_PEOPLE_MAX_NUM = 99), e;
                })();
                i.ActivityConstantConfig = o;
                var n = function () {};
                i.ActivityInviteeBean = n;
                var a = (function () {
                    function e() {
                        (this.isConsume = !1), (this.needMark = !1);
                    }
                    return (
                        (e.prototype.toString = function () {
                            return this.hd_id + '+' + this.invitee_playerid + '+' + this.is_new_player + '+' + this.nickname + '+' + this.avatar_url + '+' + (this.isConsume ? '1' : '0');
                        }),
                        (e.prototype.parseFrom = function (e) {
                            if (null != e) {
                                var t = e.split('+');
                                if (null != t && null != t && 0 != t.length)
                                    if (t.length < 6) console.error('ActivityInviterBean parseFrom 解析错误 => values`s lenght is incorrect, length should be 6 current length = ' + t.length);
                                    else
                                        try {
                                            (this.hd_id = t[0]), (this.invitee_playerid = t[1]), (this.is_new_player = 'true' === t[2]), (this.nickname = t[3]), (this.avatar_url = t[4]), (this.isConsume = '1' == t[5]);
                                        } catch (e) {
                                            console.error('ActivityInviterBean parseFrom 解析错误!'), console.error(e);
                                        }
                                else console.error('ActivityInviterBean parseFrom 解析错误 => values is null or lenght is 0');
                            }
                        }),
                        (e.prototype.toLogString = function () {
                            return 'hd_id:' + this.hd_id + ' invitee_playerid:' + this.invitee_playerid + ' is_new_player:' + this.is_new_player + ' nickname:' + this.nickname + ' avatar_url:' + this.avatar_url;
                        }),
                        e
                    );
                })();
                (i.ActivityInviterBean = a), cc._RF.pop();
            },
            {},
        ],
        ActivityInviteTipsPrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '20d5c8nljRLwqk8uC6Y8iYh', 'ActivityInviteTipsPrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./BasicTouchEvent'),
                    n = e('../../keypad/KeypadNavigator'),
                    a = cc._decorator,
                    r = a.ccclass,
                    s = a.property,
                    c = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.title = null), (e.content = null), (e.bottomTips = null), (e.confirmButton = null), (e.closeBtn = null), (e.mConfirmClickCallback = null), (e.mCloseClickCallback = null), (e.mResolve = null), (e.mCloseCallback = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.onLoad = function () {
                                var e = this;
                                this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                }),
                                    this.confirmButton &&
                                        ((this.mConfirmClickCallback = new o.default(function () {
                                            e.onTapConfirm();
                                        })),
                                        this.confirmButton.node.on(cc.Node.EventType.TOUCH_END, this.mConfirmClickCallback.click, this.mConfirmClickCallback)),
                                    this.closeBtn &&
                                        ((this.mCloseClickCallback = new o.default(function () {
                                            e.onTapClose(), n.default.getInstance().popDialog(e.node, 'InviteTipsPrefab');
                                        })),
                                        this.closeBtn.node.on(cc.Node.EventType.TOUCH_END, this.mCloseClickCallback.click, this.mCloseClickCallback)),
                                    n.default.getInstance().pushDialog(this.node, 'InviteTipsPrefab');
                            }),
                            (e.prototype.onTapClose = function () {
                                this.mCloseCallback && this.mCloseCallback();
                            }),
                            (e.prototype.onTapConfirm = function () {
                                this.mResolve && this.mResolve();
                            }),
                            (e.prototype.setTitle = function (e) {
                                this.title && (this.title.string = e);
                            }),
                            (e.prototype.setContent = function (e) {
                                this.content && (this.content.string = e);
                            }),
                            (e.prototype.setCloseActive = function (e) {
                                this.closeBtn && (this.closeBtn.node.active = e);
                            }),
                            (e.prototype.setBottomTips = function (e) {
                                this.bottomTips && (this.bottomTips.string = e);
                            }),
                            (e.prototype.setConfirmCallback = function (e) {
                                this.mResolve = e;
                            }),
                            (e.prototype.setCloseCallback = function (e) {
                                this.mCloseCallback = e;
                            }),
                            __decorate([s(cc.Label)], e.prototype, 'title', void 0),
                            __decorate([s(cc.Label)], e.prototype, 'content', void 0),
                            __decorate([s(cc.Label)], e.prototype, 'bottomTips', void 0),
                            __decorate([s(cc.Button)], e.prototype, 'confirmButton', void 0),
                            __decorate([s(cc.Button)], e.prototype, 'closeBtn', void 0),
                            (e = __decorate([r], e))
                        );
                    })(cc.Component);
                (i.default = c), cc._RF.pop();
            },
            {
                '../../keypad/KeypadNavigator': 'KeypadNavigator',
                './BasicTouchEvent': 'BasicTouchEvent',
            },
        ],
        ActivityLooper: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'df9b6/89pZGcZx6PAPZYg2I', 'ActivityLooper'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./Looper'),
                    n = (function () {
                        function e() {
                            var e = this;
                            (this.mLooper = null),
                                (this.mLooper = new o.default()),
                                (this.func = function () {
                                    e.mCallback && e.mCallback();
                                }),
                                this.mLooper.setWork(this.func);
                        }
                        return (
                            (e.prototype.start = function (e) {
                                (this.mCallback = e), this.mLooper && this.mLooper.start();
                            }),
                            (e.prototype.stop = function () {
                                this.mLooper && this.mLooper.stop();
                            }),
                            (e.prototype.release = function () {
                                this.mLooper && (this.mLooper.stop(), this.mLooper.destroy(), (this.mLooper = null));
                            }),
                            e
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                './Looper': 'Looper',
            },
        ],
        ActivityManager: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '15eebAGnptD3oT/3FW4fa9F', 'ActivityManager'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('./LevelMgr'),
                    r = e('../Core/GameDefine'),
                    s = e('./Level'),
                    c = e('../DB/CSV/LevelConsumeData'),
                    l = e('../DB/DBMgr'),
                    o = (function () {
                        function e() {
                            (this.mShowLevelList = []), (this.mChoicenessList = []), (this.mAllLevelList = []), (this.mChoicenseeLevelList = null), (this.mChoicenseeMidList = null), this.setMusicLevelMap();
                        }
                        return (
                            (e.getInstance = function () {
                                return e.mInstance || (e.mInstance = new e()), e.mInstance;
                            }),
                            (e.prototype.clearChoicenseeTempData = function () {
                                null == this.mChoicenseeLevelList ? (this.mChoicenseeLevelList = []) : this.mChoicenseeLevelList.splice(0, this.mChoicenseeLevelList.length), null == this.mChoicenseeMidList ? (this.mChoicenseeMidList = []) : this.mChoicenseeMidList.splice(0, this.mChoicenseeMidList.length);
                            }),
                            (e.prototype.setMusicLevelMap = function () {
                                console.log('[ActivityActivity] setMusicLevelMap'), (this.mShowLevelList = []);
                                var e = a.LevelMgr.Ins().getShowLevels();
                                this.clearChoicenseeTempData();
                                for (var t = 0; t < e.length; ++t) {
                                    var i = e[t];
                                    if ((i < r.Constant.DIAMONDSONG_STARTID && i != r.Constant.TRIAL_SONG_ID && (this.mShowLevelList.push(i), this.mAllLevelList.push(i)), i > r.Constant.CHOICENESS_STARTID)) {
                                        var o = a.LevelMgr.Ins().getLevel(i);
                                        if (o && o.type == s.eLevelKind.eLevel_Choiceness) {
                                            var n = a.LevelMgr.Ins().getLevel(i);
                                            n && n.music && (this.mChoicenseeLevelList.push(i), this.mChoicenseeMidList.push(n.music.mid));
                                        }
                                    }
                                }
                                this.sortChoicenessList(), (this.mAllLevelList = this.mAllLevelList.concat(this.mChoicenessList));
                            }),
                            (e.prototype.sortChoicenessList = function () {
                                this.mChoicenessList.splice(0, this.mChoicenessList.length);
                                var e = l.default.Ins().getDBRows(l.eDataBase.eDB_LevelConsume);
                                if (e)
                                    for (var t = 0; t < e.length; t++) {
                                        var i = e[t];
                                        if (i && i instanceof c.LevelConsumeRow) {
                                            var o = i;
                                            if (o) {
                                                var n = this.getIndexFromMidList(o.getMid());
                                                0 <= n && this.mChoicenessList.push(this.mChoicenseeLevelList[n]);
                                            }
                                        }
                                    }
                                (this.mChoicenseeLevelList = null), (this.mChoicenseeMidList = null);
                            }),
                            (e.prototype.getIndexFromMidList = function (e) {
                                for (var t = 0; t < this.mChoicenseeMidList.length; t++) if (this.mChoicenseeMidList[t] == e) return t;
                                return -1;
                            }),
                            (e.prototype.getAllLevels = function () {
                                return this.mAllLevelList;
                            }),
                            (e.prototype.getShowLevels = function () {
                                return this.mShowLevelList;
                            }),
                            (e.prototype.getChoicenessLevels = function () {
                                return this.mChoicenessList;
                            }),
                            e
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../Core/GameDefine': 'GameDefine',
                '../DB/CSV/LevelConsumeData': 'LevelConsumeData',
                '../DB/DBMgr': 'DBMgr',
                './Level': 'Level',
                './LevelMgr': 'LevelMgr',
            },
        ],
        ActivityRewardManager: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '5271bFT5YhIEpUdCgNTT9u3', 'ActivityRewardManager'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var c = e('../Network/Protocol/StorageUtil'),
                    l = e('../../config/LSKey'),
                    o = e('../../util/StringUtil'),
                    r = e('./ActivityBean'),
                    a = e('./ActivityRewardRequest'),
                    n = e('../../util/Dictionary'),
                    u = e('../../base/Log'),
                    s = (function () {
                        function s() {
                            (this.mActivityRewardBeanDic = new n.Dictionary()), this.initFromCache();
                        }
                        return (
                            (s.Ins = function () {
                                return null == this.sInstance && (this.sInstance = new s()), this.sInstance;
                            }),
                            (s.prototype.initFromCache = function () {
                                var n = this,
                                    e = c.default.read(l.default.ACTIVITY_INVITE_BEAN_DIC);
                                if (e) {
                                    var t = e.split(s.ACTIVITY_SEPERATE_STR);
                                    t &&
                                        (t.forEach(function (e) {
                                            var t = e.split(s.SEPERATE_STR),
                                                i = t.pop(),
                                                o = [];
                                            t.forEach(function (e) {
                                                var t = new r.ActivityInviterBean();
                                                t.parseFrom(e), o.push(t);
                                            }),
                                                n.mActivityRewardBeanDic.put(i, o);
                                        }),
                                        console.log('[ActivityRewardManager] 缓存读取出来邀请过的数据 hd_id = ', this.mActivityRewardBeanDic));
                                }
                            }),
                            (s.prototype.getCacheInviteRewardList = function (e) {
                                return this.mActivityRewardBeanDic.get(e);
                            }),
                            (s.prototype.getCacheInviteRewardListSize = function (e) {
                                var t = this.mActivityRewardBeanDic.get(e);
                                return t && 0 < t.length ? t.length : 0;
                            }),
                            (s.prototype.getInviteSuccessListComplete = function (i, o) {
                                var n = this;
                                o &&
                                    (console.log('[ActivityRewardManager] 从服务器获取全量邀请成功列表,' + i),
                                    a.ActivityRewardRequester.queryActivity(i, function (e, t) {
                                        e ? (n.mergeWithCache(i, t), n.updateInviteDateFileCache(), o(t)) : (console.error('[ActivityRewardManager] 查询活动邀请全量列表 网络请求错误了,' + i), o(null));
                                    }));
                            }),
                            (s.prototype.getInviteList = function (i, o) {
                                o &&
                                    a.ActivityRewardRequester.queryActivityCM(i, function (e, t) {
                                        e ? (u.default.i('CMPlayShare: ActivityRewardManager===> getInviteList从服务器获取全量邀请成功列表,' + i), o(t)) : (u.default.e('CMPlayShare: ActivityRewardManager===> getInviteList 查询活动邀请全量列表 网络请求错误了,' + i), o(null));
                                    });
                            }),
                            (s.prototype.mergeWithCache = function (e, t) {
                                if (t) {
                                    for (var i = this.mActivityRewardBeanDic.get(e), o = 0; o < t.length; o++) {
                                        var n = t[o];
                                        n && (n.isConsume = this.isConsume(i, n));
                                    }
                                    this.mActivityRewardBeanDic.put(e, t);
                                }
                            }),
                            (s.prototype.isConsume = function (e, t) {
                                for (var i = !1, o = 0; o < e.length; o++)
                                    if (t.invitee_playerid == e[o].invitee_playerid) {
                                        1 == e[o].isConsume && (i = !0);
                                        break;
                                    }
                                return i;
                            }),
                            (s.prototype.cosumeInviteRewardInfo = function (e) {
                                for (var n = [], t = 1; t < arguments.length; t++) n[t - 1] = arguments[t];
                                if (!o.StringUtil.isEmpty(e) && (console.log('[ActivityRewardManager] cosumeInviteRewardInfo: ' + e, n), null != n && null != n && 0 < n.length)) {
                                    var i = this.mActivityRewardBeanDic.get(e),
                                        a = !1;
                                    i.forEach(function (e) {
                                        for (var t = 0; t < n.length; t++) {
                                            var i = n[t];
                                            if (i && i instanceof r.ActivityInviterBean) {
                                                var o = i;
                                                if (o && o.invitee_playerid == e.invitee_playerid && 1 != o.isConsume) {
                                                    (a = !0), (o.isConsume = !0);
                                                    break;
                                                }
                                            }
                                        }
                                    }),
                                        a && this.updateInviteDateFileCache(),
                                        console.log('[ActivityRewardManager] cosumeInviteRewardInfo isChanged= ' + a);
                                }
                            }),
                            (s.prototype.getBatchInviteSuccessListComplete = function (e, i) {
                                var o = this;
                                i &&
                                    (console.log('[ActivityRewardManager] 从服务器获取多个活动全量邀请成功列表', e),
                                    a.ActivityRewardRequester.queryActivities(e, function (e, t) {
                                        e
                                            ? (t.getPairs().forEach(function (e) {
                                                  o.mergeWithCache(e.key, e.value);
                                              }),
                                              o.updateInviteDateFileCache(),
                                              i(t))
                                            : (console.error('[ActivityRewardManager] 查询活动邀请全量列表 网络请求错误了'), i(null));
                                    }));
                            }),
                            (s.prototype.updateInviteDateFileCache = function () {
                                for (var e = '', t = this.mActivityRewardBeanDic.size(), i = 0; i < t; i++) {
                                    for (var o = this.mActivityRewardBeanDic.getPairs()[i], n = o.key, a = o.value, r = 0; r < a.length; r++) {
                                        e += a[r].toString() + s.SEPERATE_STR;
                                    }
                                    (e += n), i != t - 1 && (e += s.ACTIVITY_SEPERATE_STR);
                                }
                                c.default.save(l.default.ACTIVITY_INVITE_BEAN_DIC, e);
                            }),
                            (s.prototype.acceptInvite = function (i, e, o) {
                                var n = this;
                                o &&
                                    (u.default.i('[ActivityRewardManager] 被邀请者点击分享的卡片接受邀请', i, e),
                                    a.ActivityRewardRequester.reportActivity(
                                        i,
                                        e,
                                        function (e, t) {
                                            e ? (n.mActivityRewardBeanDic.put(i, t), o(e, t)) : o(!1, null);
                                        },
                                        d.getHdInviteNum(i),
                                        d.getHdBeInviteNum(i),
                                    ));
                            }),
                            (s.SEPERATE_STR = '&#&'),
                            (s.ACTIVITY_SEPERATE_STR = '$*$'),
                            (s.sInstance = null),
                            s
                        );
                    })();
                i.ActivityRewardMgr = s;
                var d = (function () {
                    function e() {}
                    return (
                        (e.getHdInviteNum = function (e) {
                            var t = 0;
                            return e == r.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SKIN ? (t = r.ActivityConstantConfig.SHARE_FOR_SKIN_INVITE_PEOPLE_MAX_NUM) : !o.StringUtil.isEmpty(e) && e.startsWith(r.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SONG) ? (t = r.ActivityConstantConfig.SHARE_FOR_SONG_INVITE_PEOPLE_MAX_NUM) : !o.StringUtil.isEmpty(e) && e.startsWith(r.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SKIN_PIECE) ? (t = r.ActivityConstantConfig.SHARE_FOR_SKIN_PIECE_INVITE_PEOPLE_MAX_NUM) : !o.StringUtil.isEmpty(e) && e.startsWith(r.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_UNLOCK_TONE) && (t = r.ActivityConstantConfig.SHARE_FOR_TONE_INVITE_PEOPLE_MAX_NUM), t;
                        }),
                        (e.getHdBeInviteNum = function (e) {
                            var t = 0;
                            return e == r.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SKIN ? (t = r.ActivityConstantConfig.SHARE_FOR_SKIN_BE_INVITE_PEOPLE_MAX_NUM) : !o.StringUtil.isEmpty(e) && e.startsWith(r.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SONG) ? (t = r.ActivityConstantConfig.SHARE_FOR_SONG_BE_INVITE_PEOPLE_MAX_NUM) : !o.StringUtil.isEmpty(e) && e.startsWith(r.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SKIN_PIECE) ? (t = r.ActivityConstantConfig.SHARE_FOR_SKIN_PIECE_BE_INVITE_PEOPLE_MAX_NUM) : !o.StringUtil.isEmpty(e) && e.startsWith(r.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_UNLOCK_TONE) && (t = r.ActivityConstantConfig.SHARE_FOR_TONE_BE_INVITE_PEOPLE_MAX_NUM), t;
                        }),
                        e
                    );
                })();
                (i.ActivityBeanMgr = d), cc._RF.pop();
            },
            {
                '../../base/Log': 'Log',
                '../../config/LSKey': 'LSKey',
                '../../util/Dictionary': 'Dictionary',
                '../../util/StringUtil': 'StringUtil',
                '../Network/Protocol/StorageUtil': 'StorageUtil',
                './ActivityBean': 'ActivityBean',
                './ActivityRewardRequest': 'ActivityRewardRequest',
            },
        ],
        ActivityRewardRequest: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '220f8BO/+tFuIpyNlMBPgfR', 'ActivityRewardRequest'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var d = e('../../base/Log'),
                    p = e('./ActivityBean'),
                    h = e('../../util/Dictionary'),
                    n = e('../../../modules/MGUtils/NetworkUtils'),
                    a = e('../../../modules/MGUtils/TypeDefinition'),
                    o = (function () {
                        function e() {}
                        return (
                            (e.reportActivity = function (s, c, l, e, t) {
                                d.default.i('[cmg] reportShareHdReport=> hd_id ' + s + ' inviter_playerid ' + c),
                                    cmg.platform.reportShareHdReport(s, c, e, t, function (e, t, i, o, n, a) {
                                        if ((d.default.i('[cmg] reportShareHdReport result=> hd_id ' + s + ' inviter_playerid ' + c + ' result ' + e + ' isValid ' + t + ' msg ' + i + ' count ' + o + ' inviter_nickname ' + n + ' inviter_avatar_url ' + a), e)) {
                                            var r = new p.ActivityInviteeBean();
                                            (r.valid = t), (r.count = o), (r.hd_id = s), (r.inviter_avatar_url = a), (r.inviter_nickname = n), l(e, r);
                                        } else l(e, null);
                                    });
                            }),
                            (e.queryActivity = function (a, r) {
                                d.default.i('[cmg] shareHdQuery=> hd_id ' + a),
                                    cmg.platform.shareHdQuery(a, function (e, t) {
                                        var i = new Array();
                                        if (e)
                                            for (var o = 0; o < t.length; o++) {
                                                var n = new p.ActivityInviterBean();
                                                (n.hd_id = a), (n.avatar_url = t[o].avatar_url), (n.invitee_playerid = t[o].invitee_playerid), (n.is_new_player = t[o].is_new_player), (n.nickname = t[o].nickname), i.push(n);
                                            }
                                        d.default.i('[cmg] shareHdQuery=> hd_id result: ' + a, i), r(e, i);
                                    });
                            }),
                            (e.queryActivityCM = function (l, u) {
                                var e = {},
                                    t = window.getUserUid(),
                                    i = d.default.isDebug() ? this.URL_FUNNYGAME_LISTINFO_DEBUG : this.URL_FUNNYGAME_LISTINFO_RELEASE;
                                (e.common = {
                                    uid: t,
                                }),
                                    (e.scene_ids = l),
                                    (e.share_uid = t);
                                var o = {
                                    platform: a.PlatformType.PLATFORM_CMPLAY,
                                    url: i,
                                    method: 'POST',
                                    data: e,
                                    dataType: 'json',
                                    success: function (e) {
                                        var t = new h.Dictionary();
                                        if (e && e.assistance_info_list)
                                            for (var i = e.assistance_info_list, o = 0; o < l.length; o++) {
                                                var n = l[o];
                                                if (i[n] && i[n].assistance_info) {
                                                    for (var a = i[n].assistance_info, r = [], s = 0; s < a.length; s++) {
                                                        var c = new p.ActivityInviterBean();
                                                        try {
                                                            (c.hd_id = n), (c.avatar_url = a[s].avatar_url), (c.invitee_playerid = a[s].uid), (c.is_new_player = a[s].is_new_user), (c.nickname = a[s].nickname), r.push(c);
                                                        } catch (e) {
                                                            d.default.w('CMPlayShare: ActivityRewardRequest parse assistance_info', e);
                                                        }
                                                    }
                                                    t.put(n, r);
                                                }
                                            }
                                        u(!0, t);
                                    },
                                    fail: function (e, t) {
                                        d.default.w('CMPlayShare: ActivityRewardRequest===>query activityCM failed. code:' + e), u(!1, null);
                                    },
                                };
                                n.default.request(o);
                            }),
                            (e.queryActivities = function (l, u) {
                                d.default.i('[cmg] shareQueryBatch=> hd_id ', l),
                                    null == l || null == l || 0 == l.length
                                        ? u(!1, new h.Dictionary())
                                        : cmg.platform.shareQueryBatch(l, function (e, t) {
                                              d.default.i('[cmg] shareQueryBatch=> hd_ids ' + l + ',result =' + e + ',data=', t);
                                              var i = new h.Dictionary();
                                              if (e && t)
                                                  for (var o = 0; o < l.length; o++) {
                                                      var n = l[o],
                                                          a = t[n];
                                                      if (a) {
                                                          for (var r = [], s = 0; s < a.length; s++) {
                                                              var c = new p.ActivityInviterBean();
                                                              (c.hd_id = n), (c.avatar_url = a[s].avatar_url), (c.invitee_playerid = a[s].invitee_playerid), (c.is_new_player = a[s].is_new_player), (c.nickname = a[s].nickname), r.push(c);
                                                          }
                                                          i.put(n, r);
                                                      }
                                                  }
                                              console.info('[cmg] shareQueryBatch=> hd_id result ', i), u(e, i);
                                          });
                            }),
                            (e.URL_FUNNYGAME_LISTINFO_DEBUG = 'http://funnygame.cmzhtest2.hellocwd.com/funny/assistance/info_list'),
                            (e.URL_FUNNYGAME_LISTINFO_FAKE = 'http://apix.kisops.com/mock/349/funny/assistance/info_list'),
                            (e.URL_FUNNYGAME_LISTINFO_RELEASE = 'https://funnygame.cmcm.com/funny/assistance/info_list'),
                            e
                        );
                    })();
                (i.ActivityRewardRequester = o), cc._RF.pop();
            },
            {
                '../../../modules/MGUtils/NetworkUtils': 'NetworkUtils',
                '../../../modules/MGUtils/TypeDefinition': 'TypeDefinition',
                '../../base/Log': 'Log',
                '../../util/Dictionary': 'Dictionary',
                './ActivityBean': 'ActivityBean',
            },
        ],
        AddShortcutPrefb: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'ff6f6InsxFEY5W3ZrwR226p', 'AddShortcutPrefb'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./BasicTouchEvent'),
                    n = cc._decorator,
                    a = n.ccclass,
                    r = n.property,
                    s = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mCloseBtn = null), (e.mAddBtn = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.onLoad = function () {
                                var e = this;
                                this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                });
                                var t = new o.default(function () {
                                    e.mCloseCallBack();
                                });
                                this.mCloseBtn.node.on(cc.Node.EventType.TOUCH_END, t.click, t);
                                var i = new o.default(function () {
                                    e.mAddCallBack();
                                });
                                this.mAddBtn.node.on(cc.Node.EventType.TOUCH_END, i.click, i);
                            }),
                            (e.prototype.start = function () {}),
                            (e.prototype.setCallBack = function (e, t) {
                                (this.mCloseCallBack = e), (this.mAddCallBack = t);
                            }),
                            __decorate([r(cc.Button)], e.prototype, 'mCloseBtn', void 0),
                            __decorate([r(cc.Button)], e.prototype, 'mAddBtn', void 0),
                            (e = __decorate([a], e))
                        );
                    })(cc.Component);
                (i.default = s), cc._RF.pop();
            },
            {
                './BasicTouchEvent': 'BasicTouchEvent',
            },
        ],
        AdditionData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '2eb0eqKamJD84cx5NzWGf2U', 'AdditionData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.findId = function (e) {
                                return this.find('Id', e);
                            }),
                            (t.prototype.getRow = function () {
                                return new a();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.AdditionData = n;
                var a = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getId = function () {
                            return this.getInt('Id');
                        }),
                        (t.prototype.getItemId = function () {
                            return this.getString('itemId');
                        }),
                        (t.prototype.getSceneId = function () {
                            return this.getString('sceneId');
                        }),
                        (t.prototype.getEffectId = function () {
                            return this.getString('effectId');
                        }),
                        (t.prototype.getDesc = function () {
                            return this.getString('desc');
                        }),
                        t
                    );
                })(o.default);
                (i.AdditionRow = a), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        AdvGetPropertyDialog: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '6734aWWGU9COKeHVMcfTAkU', 'AdvGetPropertyDialog'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('../../../property/PropertyDefines'),
                    o = e('../GameEntraScene/ImgCache'),
                    a = e('../GameEntraScene/BasicTouchEvent'),
                    r = e('../../Logic/I18nManager'),
                    s = e('../../keypad/KeypadNavigator'),
                    c = cc._decorator,
                    l = c.ccclass,
                    u = c.property,
                    d = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mContentLabel = null), (e.mPropertyIcon = null), (e.mPropertyCountLabel = null), (e.mOKBtn = null), (e.mContentTxt = ''), (e.mSpriteIconPath = ''), (e.mOKCallback = null), (e.mCloseCallback = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.onLoad = function () {
                                this.initViews(), this.initEvents(), s.default.getInstance().pushDialog(this.node, 'AdvGetPropertyDialog');
                            }),
                            (e.prototype.initViews = function () {
                                (this.mContentLabel.string = this.mContentTxt), o.default.get2(this.mSpriteIconPath, this.mPropertyIcon);
                            }),
                            (e.prototype.initEvents = function () {
                                var e = this;
                                this.node.on(cc.Node.EventType.TOUCH_END, function () {}, this),
                                    (this.mOKCallback = new a.default(function () {
                                        e.mCloseCallback && e.mCloseCallback(), e.node.destroy(), s.default.getInstance().popDialog(e.node, 'AdvGetPropertyDialog');
                                    })),
                                    this.mOKBtn.node.on(cc.Node.EventType.TOUCH_END, this.mOKCallback.click, this.mOKCallback);
                            }),
                            (e.prototype.setCloseCallback = function (e) {
                                this.mCloseCallback = e;
                            }),
                            (e.prototype.setProp = function (e) {
                                if (e) {
                                    var t = 'The falling speed of the piano block is reduced by 50% within 15 seconds after resurrection.',
                                        i = 'Beginning sprint 12 seconds',
                                        o = 'Cancellation of a mistake and no enemy for 8 seconds';
                                    switch ((r.default.getInstance().isEnglish() && (o = i = t = ''), e.type)) {
                                        case n.PROPERTYTYPE.GAME_SLOW:
                                            (this.mContentTxt = t), (this.mSpriteIconPath = '/static_res/property/slow');
                                            break;
                                        case n.PROPERTYTYPE.GAME_DASH:
                                            (this.mContentTxt = i), (this.mSpriteIconPath = '/static_res/property/dash');
                                            break;
                                        case n.PROPERTYTYPE.GAME_SHIELD:
                                            (this.mContentTxt = o), (this.mSpriteIconPath = '/static_res/property/shield');
                                    }
                                }
                            }),
                            __decorate([u(cc.Label)], e.prototype, 'mContentLabel', void 0),
                            __decorate([u(cc.Sprite)], e.prototype, 'mPropertyIcon', void 0),
                            __decorate([u(cc.Label)], e.prototype, 'mPropertyCountLabel', void 0),
                            __decorate([u(cc.Button)], e.prototype, 'mOKBtn', void 0),
                            (e = __decorate([l], e))
                        );
                    })(cc.Component);
                (i.default = d), cc._RF.pop();
            },
            {
                '../../../property/PropertyDefines': 'PropertyDefines',
                '../../Logic/I18nManager': 'I18nManager',
                '../../keypad/KeypadNavigator': 'KeypadNavigator',
                '../GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
                '../GameEntraScene/ImgCache': 'ImgCache',
            },
        ],
        AdvHelperCMplay: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '69b44TcMY5JgJ0LdwBFr4Or', 'AdvHelperCMplay'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../Logic/MgAdvHelper'),
                    r = e('../Logic/MGAdvDefine'),
                    n = e('../../../../scripts/business/UI/GameEntraScene/ToastMgr'),
                    a = e('../../../../scripts/business/keypad/KeypadNavigator'),
                    s = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mIsDebugMode = !1), (e.showPokiBanner = !1), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.isOverPageBannerShowed = function () {
                                return !1;
                            }),
                            (e.prototype.showBanner = function (e, t, i, o) {
                                CMPlay.showBanner(), e && e(r.ADStat.SHOWING_PAGE);
                            }),
                            (e.prototype.isBannerCached = function () {
                                return !0;
                            }),
                            (e.prototype.loadBanner = function (e, t, i, o, n, a) {
                                o && o(r.ADStat.LOAD_SUCCESS);
                            }),
                            (e.prototype.hideBanner = function () {
                                CMPlay.hideBanner();
                            }),
                            (e.prototype.destoryBanner = function () {
                                CMPlay.hideBanner();
                            }),
                            (e.prototype.isNetWorkConnected = function () {
                                return !0;
                            }),
                            (e.prototype.init = function () {
                                this.mIsDebugMode = 'true' == CMPlay.getQueryString('_cm_debug_', 'false');
                            }),
                            (e.prototype.load = function (e, t) {
                                t && t(r.ADStat.LOAD_SUCCESS);
                            }),
                            (e.prototype.destroy = function () {}),
                            (e.prototype.isEnable = function () {
                                return console.log('lll isEnable=true'), !0;
                            }),
                            (e.prototype.isADCached = function (e) {
                                return !0;
                            }),
                            (e.prototype.show = function (e, t, i) {
                                var o = this;
                                this.lock(),
                                    this.mIsDebugMode
                                        ? n.ToastMgr.showToast(
                                              '[测试] 这是RewardVideo广告',
                                              function () {
                                                  t && t(r.ADStat.SHOW_SUCCESS_CLOSE), o.unlock();
                                              },
                                              !0,
                                          )
                                        : CMPlay.startRewardVideo(function (e) {
                                              t && t(e ? r.ADStat.SHOW_SUCCESS_CLOSE : r.ADStat.SHOW_NOT_ENED_CLOSE, '', 0), o.unlock();
                                          });
                            }),
                            (e.prototype.commercialBreak = function (e, t, i) {
                                var o = this;
                                return (
                                    this.lock(),
                                    this.mIsDebugMode
                                        ? n.ToastMgr.showToast(
                                              '[测试] 这是CommercialBreak广告',
                                              function () {
                                                  t && t(r.ADStat.SHOW_SUCCESS_CLOSE), o.unlock();
                                              },
                                              !0,
                                          )
                                        : window.PokiSDK
                                        ? window.PokiSDK.commercialBreak().then(function () {
                                              t && t(r.ADStat.SHOW_SUCCESS_CLOSE), o.unlock();
                                          })
                                        : this.unlock(),
                                    !0
                                );
                            }),
                            (e.prototype.lock = function () {
                                a.default.getInstance().setEnable(!1), (e.mIsRewardVideoPlayed = !0);
                            }),
                            (e.prototype.unlock = function () {
                                setTimeout(function () {
                                    a.default.getInstance().setEnable(!0), (e.mIsRewardVideoPlayed = !1);
                                }, 800);
                            }),
                            (e.prototype.gameplayStart = function () {
                                this.mIsDebugMode ? n.ToastMgr.showToast('[内部测试] 提交数据 上报gameplayStart') : window.PokiSDK ? (window.PokiSDK.gameplayStart(), console.warn('PokiSDK----------------gameplayStart------------------')) : n.ToastMgr.showToast('Load Poki failed');
                            }),
                            (e.prototype.gameplayStop = function () {
                                this.mIsDebugMode ? n.ToastMgr.showToast('[内部测试] 提交数据 上报gameplayStop') : window.PokiSDK ? (window.PokiSDK.gameplayStop(), console.warn('PokiSDK----------------gameplayStop------------------')) : n.ToastMgr.showToast('Load Poki failed');
                            }),
                            (e.prototype.roundStart = function (e) {
                                this.mIsDebugMode ? n.ToastMgr.showToast('[内部测试] 提交数据 上报roundStart') : window.PokiSDK ? (console.warn('PokiSDK----------------roundStart------------------:level_' + e), window.PokiSDK.roundStart('Level_' + e)) : n.ToastMgr.showToast('Load Poki failed');
                            }),
                            (e.prototype.roundEnd = function (e) {
                                this.mIsDebugMode ? n.ToastMgr.showToast('[内部测试] 提交数据 上报roundEnd') : window.PokiSDK ? (console.warn('PokiSDK----------------roundEnd------------------:level_' + e), window.PokiSDK.roundEnd('Level_' + e)) : n.ToastMgr.showToast('Load Poki failed');
                            }),
                            (e.prototype.customEvent = function (e, t, i) {
                                this.mIsDebugMode ? n.ToastMgr.showToast('[内部测试] 提交数据 上报玩家解锁皮肤时，上报customEvent') : window.PokiSDK ? (window.PokiSDK.customEvent(e, t, i), console.warn('PokiSDK---------------customEvent------------------:' + e + ' ' + t + ' ' + i)) : n.ToastMgr.showToast('Load Poki failed');
                            }),
                            (e.prototype.creatAdContainer = function (e) {
                                var t = document.createElement(e);
                                return (t.id = e), (t.style.width = '320'), (t.style.height = '50'), (t.style.width = '320'), (t.style.zIndex = '0'), (t.style.position = 'absolute'), (t.style.backgroundColor = '#990000'), document.getElementById('div').insertBefore(t, null), t;
                            }),
                            (e.prototype.displayAD = function (e) {
                                void 0 === e && (e = !0);
                                var t = document.getElementById('adContainer');
                                this.showPokiBanner != e && ((this.showPokiBanner = e), null != t ? (!e && t && (t.style.zIndex = '0'), this.mIsDebugMode ? (n.ToastMgr.showToast('[内部测试] 这是商业广告banner'), console.warn('PokiSDK----------------displayAD------------------' + t)) : window.PokiSDK ? e && (console.warn('PokiSDK----------------displayAD------------------' + t), (t.style.zIndex = '100'), (t.style.left = 0.5 * (window.innerWidth - 320) + 'px'), window.PokiSDK.displayAd(t, '320x50')) : n.ToastMgr.showToast('Load Poki failed')) : console.error('PokiSDK----------------need new div (adContainer) with displayAD------------------' + e));
                            }),
                            (e.mIsRewardVideoPlayed = !1),
                            e
                        );
                    })(o.default);
                (i.default = s), cc._RF.pop();
            },
            {
                '../../../../scripts/business/UI/GameEntraScene/ToastMgr': 'ToastMgr',
                '../../../../scripts/business/keypad/KeypadNavigator': 'KeypadNavigator',
                '../Logic/MGAdvDefine': 'MGAdvDefine',
                '../Logic/MgAdvHelper': 'MGAdvHelper',
            },
        ],
        AdvHelperWeb: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'b9975OgrYJBYLtK4nlVVhQ8', 'AdvHelperWeb'), cc._RF.pop();
            },
            {},
        ],
        AnimationBackground: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '2261b6PJ6hLKoxosxM8Z2Te', 'AnimationBackground'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('../base/G'),
                    o = e('../gamescene/MUI/MUIBoard'),
                    a = e('../gamescene/animation/MAnimationMgr'),
                    r = e('./Background'),
                    s = e('../gamescene/MUI/MUIDefines'),
                    c = (function (t) {
                        function e() {
                            var e = t.call(this) || this;
                            return (e.androidRenderLimit = 0), (e.uiBoard = new o.default()), (e.animationMgr = new a.default()), (e.sprite = null), (e.spriteCanvas = null), (e.spriteContext = null), (e.spriteTexture = null), e.uiBoard.initilize(s.MUI.global.ctx), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.attachSprite = function (e, t) {
                                (this.androidRenderLimit = 10), (e.active = !1), (t.active = !0), (this.sprite = t.getComponent(cc.Sprite)), this.spriteTexture || this.createRenderTarget(), (this.sprite.spriteFrame = new cc.SpriteFrame(this.spriteTexture));
                                var i = s.MUI.global.rttViewPort;
                                (this.sprite.type = cc.Sprite.Type.TILED), this.sprite.spriteFrame.setRect(new cc.Rect(i[0], i[1], i[2], i[3])), this.sprite.node.setContentSize(i[2], i[3]), this.sprite.node.setScale((n.G.Ap.config.presentWidth + 1) / i[2], -(n.G.Ap.config.presentHeight + 1) / i[3]), s.MUI.global.renderType === s.MUI.RenderType.CANVAS ? (this.sprite.node.scaleY = (n.G.Ap.config.presentHeight + 1) / i[3]) : (this.sprite.node.scaleY = -(n.G.Ap.config.presentHeight + 1) / i[3]);
                                var o = s.MUI.global.ctx;
                                (this.sprite.srcBlendFactor = o.ONE), (this.sprite.dstBlendFactor = o.ONE_MINUS_SRC_ALPHA);
                            }),
                            (e.prototype.load = function (e) {
                                if ((this.animationMgr.stopAllActions(), this.animationMgr.update(0), this.uiBoard.getRootNode().removeAllChildren(), this.uiBoard.getRootNode().setScale(n.G.Ap.config.presentScale), this.uiBoard.getRootNode().addChild(e.node), e.actions)) for (var t = 0, i = e.actions.length; t < i; ++t) this.animationMgr.runActionRepeat(e.node, e.actions[t]);
                                return !0;
                            }),
                            (e.prototype.update = function (e) {
                                this.animationMgr.update(e), cc.sys.os === cc.sys.OS_ANDROID && s.MUI.global.renderType === s.MUI.RenderType.CANVAS ? (6 <= this.androidRenderLimit ? ((this.androidRenderLimit = 0), this.render()) : this.androidRenderLimit++) : this.render();
                            }),
                            (e.prototype.render = function () {
                                if (s.MUI.global.renderType === s.MUI.RenderType.CANVAS) this.uiBoard.renderToTexture(this.spriteContext, null), this.spriteTexture.handleLoadedTexture();
                                else if (this.spriteTexture) {
                                    var e = this.spriteTexture._glID;
                                    this.uiBoard.renderToTexture(s.MUI.global.ctx, e);
                                }
                            }),
                            (e.prototype.createRenderTarget = function () {
                                if (s.MUI.global.renderType === s.MUI.RenderType.CANVAS) (this.sprite.node.scaleY = 1), (this.spriteCanvas = document.createElement('canvas')), (this.spriteCanvas.width = cc.game.canvas.width), (this.spriteCanvas.height = cc.game.canvas.height), (this.spriteContext = this.spriteCanvas.getContext('2d')), (this.spriteTexture = new cc.Texture2D()), this.spriteTexture.releaseTexture(), this.spriteTexture.initWithElement(this.spriteCanvas), this.spriteTexture.handleLoadedTexture();
                                else {
                                    (this.spriteTexture = new cc.Texture2D()), (this.sprite.node.scaleY = -1);
                                    for (var e = new cc.Size(s.MUI.global.rttWidth, s.MUI.global.rttHeight), t = e.width * e.height * 4, i = new Uint8Array(t), o = 0; o < t; o++) i[o] = 0;
                                    this.spriteTexture.initWithData(i, cc.Texture2D.PixelFormat.RGBA8888, e.width, e.height, null);
                                }
                            }),
                            (e.prototype.destroy = function () {
                                this.uiBoard.uninitilize(s.MUI.global.ctx);
                            }),
                            e
                        );
                    })(r.default);
                (i.default = c), cc._RF.pop();
            },
            {
                '../base/G': 'G',
                '../gamescene/MUI/MUIBoard': 'MUIBoard',
                '../gamescene/MUI/MUIDefines': 'MUIDefines',
                '../gamescene/animation/MAnimationMgr': 'MAnimationMgr',
                './Background': 'Background',
            },
        ],
        AnimationWork: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '55016Zroy1CEY6+8xbHqG4d', 'AnimationWork'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {
                        (this._data = null), (this._duration = 0), (this._name = 0), (this._paths = null), (this._rootProps = null), (this._execTime = 0), (this._value = 0), (this._run = !1), (this._allValues = {});
                    }
                    return (
                        (e.prototype.load = function (e) {
                            if (((this._data = e), (this._name = e._name), (this._duration = e._duration), e.curveData.paths)) for (var t in ((this._paths = e.curveData.paths), this._paths)) this._allValues[t] = {};
                            e.curveData.props && ((this._rootProps = e.curveData.props), (this._allValues.root = {}));
                        }),
                        (e.prototype.start = function () {
                            (this._execTime = 0), (this._run = !0);
                        }),
                        (e.prototype.pause = function () {
                            this._run = !1;
                        }),
                        (e.prototype.resume = function () {
                            this._run = !0;
                        }),
                        (e.prototype.stop = function () {
                            (this._execTime = 0), (this._run = !1);
                        }),
                        (e.prototype.update = function (e) {
                            this._run && this._execTime < this._duration && ((this._execTime += e), this.sample());
                        }),
                        (e.prototype.sample = function () {
                            if (this._paths)
                                for (var e in this._paths) {
                                    var t = this._paths[e].props;
                                    for (var i in t) this.sampleValue(e, t, i);
                                }
                            if (this._rootProps) for (var i in this._rootProps) this.sampleValue('root', this._rootProps, i);
                        }),
                        (e.prototype.sampleValue = function (e, t, i) {
                            for (var o = t[i], n = o.length, a = -1, r = -1, s = null, c = this._execTime, l = 0, u = 0; u < n; u++) {
                                var d = o[u];
                                if (this._execTime <= d.frame) {
                                    a = (r = u) - 1;
                                    break;
                                }
                            }
                            if ((-1 === r ? ((a = r = n - 1), (c = o[r].frame), (l = 0)) : 0 === r ? ((c = o[(a = r)].frame), (l = 0)) : (l = (c - o[a].frame) / (o[r].frame - o[a].frame)), 'scale' === i)) {
                                var p = {
                                    x: 0,
                                    y: 0,
                                };
                                (p.x = l * (o[r].value.x - o[a].value.x) + o[a].value.x), (p.y = l * (o[r].value.y - o[a].value.y) + o[a].value.y), (s = p);
                            } else if ('position' === i) {
                                var h = {
                                    x: 0,
                                    y: 0,
                                };
                                (h.x = l * (o[r].value[0] - o[a].value[0]) + o[a].value[0]), (h.y = l * (o[r].value[1] - o[a].value[1]) + o[a].value[1]), (s = h);
                            } else s = l * (o[r].value - o[a].value) + o[a].value;
                            this._allValues[e][i] = s;
                        }),
                        (e.prototype.getValue = function (e, t) {
                            return this._allValues[e][t];
                        }),
                        (e.prototype.getAllValues = function () {
                            return this._allValues;
                        }),
                        (e.prototype.dbgPrint = function (e, t) {
                            var i = this.getValue(e, t);
                            console.log(e, t, i);
                        }),
                        (e.prototype.dbgPrintAll = function () {
                            for (var e in (console.log(this._execTime), this._allValues)) for (var t in this._allValues[e]) this.dbgPrint(e, t);
                        }),
                        e
                    );
                })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        AntiCheatProbe: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'ccc6d8mHsxGpoS8PhKIeIpQ', 'AntiCheatProbe'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o,
                    n,
                    a = e('./OperatingCount'),
                    r = e('../base/Log'),
                    s = e('../../modules/MGBasic/scripts/Logic/MGBasicEntrance'),
                    c = e('../business/keypad/KeypadUtil');
                ((n = o = i.STATUS || (i.STATUS = {}))[(n.Begin = 0)] = 'Begin'), (n[(n.End = 1)] = 'End'), (n[(n.Fail = 2)] = 'Fail');
                var l = (function () {
                    function e() {
                        (this.speedThreshold = 8), (this.probability = 0), (this.operatingCount = new a.default()), (this.hit = !1), (this.skipReset = !1), (this.postCb = null);
                    }
                    return (
                        (e.prototype.initilize = function () {
                            var i = this;
                            cc.sys.isBrowser ||
                                s.MGBasic.networkRequest({
                                    url: 'https://gamecdn.cmcm.com/cn/piano_tiles2/wx/config/acprobe2.json',
                                    data: '',
                                    header: {},
                                    method: 'GET',
                                    dataType: 'json',
                                    checkAuthorization: !1,
                                    complete: function (e, t) {
                                        console.log('k initilize result = ' + e), t && i.applyConfig(t);
                                    },
                                });
                        }),
                        (e.prototype.begin = function () {
                            this.reset(), 0 === this.probability ? (this.hit = !1) : (this.hit = Math.random() <= this.probability), this.setStatus(o.Begin);
                        }),
                        (e.prototype.end = function () {
                            var i = this;
                            console.log('k end');
                            var e = this.getSkipReset();
                            if (this.isHit()) {
                                this.setPostCb(function (e, t) {
                                    !e && i.setStatus(o.Fail);
                                }).post();
                            }
                            (this.hit = !1), !e && this.reset(), this.setStatus(o.End);
                        }),
                        (e.prototype.setPostCb = function (e) {
                            return (this.postCb = e), this;
                        }),
                        (e.prototype.getPostCb = function () {
                            return this.postCb;
                        }),
                        (e.prototype.getOperatingCount = function () {
                            return this.operatingCount;
                        }),
                        (e.prototype.getSpeedThreshold = function () {
                            return this.speedThreshold;
                        }),
                        (e.prototype.isHit = function () {
                            return this.hit;
                        }),
                        (e.prototype.getStatus = function () {
                            return this.status;
                        }),
                        (e.prototype.setStatus = function (e) {
                            this.status = e;
                        }),
                        (e.prototype.getSkipReset = function () {
                            return this.skipReset;
                        }),
                        (e.prototype.setSkipReset = function (e) {
                            this.skipReset = e;
                        }),
                        (e.prototype.applyConfig = function (e) {
                            var t = e.version;
                            if (void 0 !== t && 2 == t) {
                                var i = e.speedThreshold;
                                void 0 !== i && (this.speedThreshold = i);
                                var o = e.probability;
                                void 0 !== o && (this.probability = o);
                                var n = e.itemlimit;
                                void 0 !== n && this.operatingCount.setItemLimit(n);
                            } else console.warn('acprobe applyConfig version not 1');
                        }),
                        (e.prototype.post = function () {
                            var t = this.getPostCb();
                            try {
                                if (!this.operatingCount.usefull()) return void (t && t(!1, null));
                                var e = this.operatingCount.serialize(),
                                    i = r.default.isDebug() ? 'https://pianotiles-minigame.cmcm.com/warty/report/play_data' : 'https://minigame.cmcm.com/warty/report/play_data';
                                c.default.isOversea() && (i = 'https://h5game_oversea.cmcm.com/warty/report/play_data'), cmg.platform.pushCommonMessage(i, e, 1, t), console.log('k hit');
                            } catch (e) {
                                console.log('--- POST ERROR ---', e), t && t(!1, null);
                            }
                        }),
                        (e.prototype.reset = function () {
                            this.operatingCount && this.operatingCount.reset();
                        }),
                        e
                    );
                })();
                (i.default = l), cc._RF.pop();
            },
            {
                '../../modules/MGBasic/scripts/Logic/MGBasicEntrance': 'MGBasicEntrance',
                '../base/Log': 'Log',
                '../business/keypad/KeypadUtil': 'KeypadUtil',
                './OperatingCount': 'OperatingCount',
            },
        ],
        AttendChallengeTask: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '0655fLG7LtH/Z+mcOS5e6iR', 'AttendChallengeTask'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./TaskItemImpl'),
                    n = e('../TaskItem'),
                    a = e('../../../config/LSKey'),
                    r = e('../../Network/Protocol/StorageUtil'),
                    s = e('../../../util/StringUtil'),
                    c = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.update = function () {
                                var e = r.default.read(a.default.HAS_FIGHT_WIN);
                                s.StringUtil.isEmpty(e) ? ((this.currentStep = 0), (this.status = n.TaskStatus.TASK_STATUS_DOING)) : ((this.currentStep = this.totalStep), (this.status = n.TaskStatus.TASK_STATUS_SUCCESS));
                            }),
                            t
                        );
                    })(o.default);
                (i.default = c), cc._RF.pop();
            },
            {
                '../../../config/LSKey': 'LSKey',
                '../../../util/StringUtil': 'StringUtil',
                '../../Network/Protocol/StorageUtil': 'StorageUtil',
                '../TaskItem': 'TaskItem',
                './TaskItemImpl': 'TaskItemImpl',
            },
        ],
        AttentionPrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '8dd9ehx/8FL6qIdraMaNibw', 'AttentionPrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../Logic/SkinDataManager'),
                    n = e('../BasicTouchEvent'),
                    a = e('../../../daily/AttentionUtil'),
                    r = e('../../../../base/G'),
                    s = e('../ImgCache'),
                    c = e('./MainpageBaseComponent'),
                    l = e('../../../../util/PU'),
                    u = e('../../../../infoc/m_p2_daily_activity'),
                    d = e('../../../Logic/NotifyEvent'),
                    p = e('../../../Logic/EventBus'),
                    h = cc._decorator,
                    f = h.ccclass,
                    m = h.property,
                    g = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (
                                (e.mGainBtn = null),
                                (e.mGainTouchCb = null),
                                (e.statusPic = {
                                    enable: 'mainpage/gain_normal',
                                    disable: 'mainpage/gain_disable',
                                    press: 'mainpage/gain_press',
                                }),
                                e
                            );
                        }
                        var i;
                        return (
                            __extends(e, t),
                            ((i = e).prototype.onLoad = function () {
                                this.initEvent(), this.initUI();
                            }),
                            (e.prototype.onUnlockSkin = function (e, t) {
                                e == d.default.UNLOCK_NORMAL_SKIN_EVENT && t[0] == i.skinName && (p.default.remove(d.default.UNLOCK_NORMAL_SKIN_EVENT, this.onUnlockSkin, this), this.invokeCloseCb());
                            }),
                            (e.prototype.initEvent = function () {
                                var e = this;
                                p.default.register(d.default.UNLOCK_NORMAL_SKIN_EVENT, this.onUnlockSkin, this),
                                    l.default.isWeiXin() ? ((this.mWxSprite.node.active = !0), (this.mQQSprite.node.active = !1)) : ((this.mWxSprite.node.active = !1), (this.mQQSprite.node.active = !0)),
                                    (this.mGainTouchCb = new n.default(function () {
                                        o.SkinDataMgr.Ins().unlockSkin(i.skinName), e.disableGainBtn(), p.default.remove(d.default.UNLOCK_NORMAL_SKIN_EVENT, e.onUnlockSkin, e), e.invokeCloseCb(), u.default.report(e.mSource, u.default.ACTION_CLICK_GET);
                                    }));
                            }),
                            (e.prototype.unInitEvent = function () {
                                this.mGainBtn.node.off(cc.Node.EventType.TOUCH_END, this.mGainTouchCb.click, this.mGainTouchCb);
                            }),
                            (e.prototype.initUI = function () {
                                var e = o.SkinDataMgr.Ins().getOwnedSkin(i.skinName);
                                (e && e.isOwnedPermanent()) || !a.AttentionUtil.isLauchFromAttention(r.G.getLaunchOption()) ? this.disableGainBtn() : (this.loadPic(this.statusPic.enable), this.mGainBtn.node.on(cc.Node.EventType.TOUCH_END, this.mGainTouchCb.click, this.mGainTouchCb));
                            }),
                            (e.prototype.loadPic = function (e) {
                                s.default.get2(e, this.mGainBtn);
                            }),
                            (e.prototype.disableGainBtn = function () {
                                this.loadPic(this.statusPic.disable), this.unInitEvent();
                            }),
                            (e.prototype.refreshUi = function () {
                                this.initUI();
                            }),
                            (e.skinName = 'sakura'),
                            __decorate([m(cc.Sprite)], e.prototype, 'mWxSprite', void 0),
                            __decorate([m(cc.Sprite)], e.prototype, 'mQQSprite', void 0),
                            __decorate([m(cc.Sprite)], e.prototype, 'mGainBtn', void 0),
                            (e = i = __decorate([f], e))
                        );
                    })(c.default);
                (i.default = g), cc._RF.pop();
            },
            {
                '../../../../base/G': 'G',
                '../../../../infoc/m_p2_daily_activity': 'm_p2_daily_activity',
                '../../../../util/PU': 'PU',
                '../../../Logic/EventBus': 'EventBus',
                '../../../Logic/NotifyEvent': 'NotifyEvent',
                '../../../Logic/SkinDataManager': 'SkinDataManager',
                '../../../daily/AttentionUtil': 'AttentionUtil',
                '../BasicTouchEvent': 'BasicTouchEvent',
                '../ImgCache': 'ImgCache',
                './MainpageBaseComponent': 'MainpageBaseComponent',
            },
        ],
        AttentionUtil: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '6943e3gHztDt7rTtob0gdjy', 'AttentionUtil'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../util/PU'),
                    n = e('../../base/Log'),
                    a = e('../Network/Protocol/StorageUtil'),
                    r = e('../../config/LSKey'),
                    s = (function () {
                        function i() {}
                        return (
                            (i.isLauchFromAttention = function (e) {
                                n.default.i(i.TAG + 'isLauchFromAttention lauchOption =', e);
                                var t = !1;
                                return e && e.scene && (o.default.isWeiXin() ? '6.7.0' <= o.default.wxVersion && e.scene == i.OPEN_FROM_MY_MINI_GAME && (a.default.save(r.default.HAS_ENTER_FROM_ATTENTION, 'true'), (t = !0)) : o.default.isQQ() && e.scene == i.OPEN_FROM_DESK_ANROID_QQ && (a.default.save(r.default.HAS_ENTER_FROM_ATTENTION, 'true'), (t = !0))), t;
                            }),
                            (i.TAG = '[AttentionUtil]====>>>'),
                            (i.OPEN_FROM_MY_MINI_GAME = 1104),
                            (i.OPEN_FROM_DESK_ANROID_QQ = 222),
                            i
                        );
                    })();
                (i.AttentionUtil = s), cc._RF.pop();
            },
            {
                '../../base/Log': 'Log',
                '../../config/LSKey': 'LSKey',
                '../../util/PU': 'PU',
                '../Network/Protocol/StorageUtil': 'StorageUtil',
            },
        ],
        AutomaticTest: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'eee72WaSgdHJbL5NXRVs8Zq', 'AutomaticTest'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./Performance'),
                    n = e('../base/G'),
                    a = e('../music/MusicPlayCompat'),
                    r = (function () {
                        function e() {
                            (this.items = []), (this.running = !1), (this.game = null), (this.loop = -1), (this.timeSpace = 60), (this.markTime = 0), (this.counter = new o.Performance.CounterImpl(0.022));
                        }
                        return (
                            (e.prototype.initTestItems = function () {
                                var e = n.G.Ap.config;
                                this.items.push({
                                    name: '下落+自动点+声音阶段（并发，普通）',
                                    initilize: function () {
                                        (e.debugNoDetectMission = !1), (e.debugNoBlockAnim = !1), (e.debugNoBlockSound = !1), (e.debugNoScoreAnim = !1), (e.debugNoTouchResponse = !0), (e.debugAutoTouchBlock = !0), (e.debugNoPullParent = !1), (e.debugNoComplicatedPlayMode = !1), a.default.getInstance().updateCompatEnabled(!1);
                                    },
                                }),
                                    this.items.push({
                                        name: '下落+自动点+声音阶段（并发，微信）',
                                        initilize: function () {
                                            (e.debugNoDetectMission = !1), (e.debugNoBlockAnim = !1), (e.debugNoBlockSound = !1), (e.debugNoScoreAnim = !1), (e.debugNoTouchResponse = !0), (e.debugAutoTouchBlock = !0), (e.debugNoPullParent = !1), (e.debugNoComplicatedPlayMode = !1), a.default.getInstance().updateCompatEnabled(!0);
                                        },
                                    }),
                                    this.items.push({
                                        name: '下落+自动点+声音阶段（并发）',
                                        initilize: function () {
                                            (e.debugNoDetectMission = !1), (e.debugNoBlockAnim = !1), (e.debugNoBlockSound = !1), (e.debugNoScoreAnim = !1), (e.debugNoTouchResponse = !0), (e.debugAutoTouchBlock = !0), (e.debugNoPullParent = !1), (e.debugNoComplicatedPlayMode = !1);
                                        },
                                    }),
                                    this.items.push({
                                        name: '下落+自动点+声音阶段（独立）',
                                        initilize: function () {
                                            (e.debugNoDetectMission = !1), (e.debugNoBlockAnim = !1), (e.debugNoBlockSound = !1), (e.debugNoScoreAnim = !1), (e.debugNoTouchResponse = !0), (e.debugAutoTouchBlock = !0), (e.debugNoPullParent = !1), (e.debugNoComplicatedPlayMode = !0);
                                        },
                                    }),
                                    this.items.push({
                                        name: '下落+自动点+声音阶段（独立）2',
                                        initilize: function () {
                                            (e.debugNoDetectMission = !1), (e.debugNoBlockAnim = !1), (e.debugNoBlockSound = !1), (e.debugNoScoreAnim = !1), (e.debugNoTouchResponse = !0), (e.debugAutoTouchBlock = !0), (e.debugNoPullParent = !1), (e.debugNoComplicatedPlayMode = !0);
                                        },
                                    }),
                                    this.items.push({
                                        name: '下落+自动点+声音阶段（并发）2',
                                        initilize: function () {
                                            (e.debugNoDetectMission = !1), (e.debugNoBlockAnim = !1), (e.debugNoBlockSound = !1), (e.debugNoScoreAnim = !1), (e.debugNoTouchResponse = !0), (e.debugAutoTouchBlock = !0), (e.debugNoPullParent = !1), (e.debugNoComplicatedPlayMode = !1);
                                        },
                                    }),
                                    this.items.push({
                                        name: '下落（子节点拉动）+自动点',
                                        initilize: function () {
                                            (e.debugNoDetectMission = !0), (e.debugNoBlockAnim = !0), (e.debugNoBlockSound = !0), (e.debugNoScoreAnim = !0), (e.debugNoTouchResponse = !0), (e.debugAutoTouchBlock = !0), (e.debugNoComplicatedPlayMode = !1), (e.debugNoPullParent = !0);
                                        },
                                    }),
                                    this.items.push({
                                        name: '下落（父节点拉动）+自动点',
                                        initilize: function () {
                                            (e.debugNoDetectMission = !0), (e.debugNoBlockAnim = !0), (e.debugNoBlockSound = !0), (e.debugNoScoreAnim = !0), (e.debugNoTouchResponse = !0), (e.debugAutoTouchBlock = !0), (e.debugNoComplicatedPlayMode = !1), (e.debugNoPullParent = !1);
                                        },
                                    });
                            }),
                            (e.prototype.isStart = function () {
                                return this.running;
                            }),
                            (e.prototype.startTest = function () {
                                this.initTestItems(), console.log('5s后开始测试'), (this.markTime = 5), (this.running = !0);
                            }),
                            (e.prototype.attachGame = function (e) {
                                this.game || ((this.game = e), 0 <= this.loop && this.game.testStartGame());
                            }),
                            (e.prototype.update = function (e) {
                                this.counter.update(e), this.counter.runDuration >= this.markTime && this.startLoop(this.loop + 1);
                            }),
                            (e.prototype.startLoop = function (e) {
                                (this.loop = e), (this.markTime = this.timeSpace);
                                var t = n.G.Ap.config;
                                if (((t.debugNoBlockSound = !1), (t.debugNoBlockAnim = !1), (t.debugNoDetectMission = !1), (t.debugNoTouchResponse = !1), (t.debugNoScoreAnim = !1), (t.debugAutoTouchBlock = !1), (t.debugAutoLog = !1), (t.debugNoHonorAnim = !1), (t.debugNoBackgroundSwitch = !1), (t.debugNoLongBlocks = !1), (t.debugNoPullParent = !1), (t.debugNoComplicatedPlayMode = !1), (t.debugNoFlyMoneyAnim = !1), 0 <= this.loop && this.loop <= this.items.length)) {
                                    if (1 <= this.loop && this.loop <= this.items.length) {
                                        var i = this.items[this.loop - 1];
                                        console.log('结束【' + i.name + '】'), this.counter.reportAndReset();
                                    }
                                    if (this.loop < this.items.length) this.restartGame(), (i = this.items[this.loop]).initilize(), console.log('开始【' + i.name + '】');
                                    else console.log('报告结束'), this.game.testPauseGame();
                                }
                            }),
                            (e.prototype.restartGame = function () {
                                var t = this;
                                (this.running = !1),
                                    (this.game = null),
                                    n.G.Ap.state.reset(!1),
                                    n.G.Ap.config.loadMusic(n.G.Ap.state.mission.musicId, function (e) {
                                        (t.running = !0), n.G.Ap.presenter.enterScene(n.G.GAME_SCENE_NAME, n.G.Ap.state.mission.musicId);
                                    });
                            }),
                            e
                        );
                    })();
                (i.default = r), cc._RF.pop();
            },
            {
                '../base/G': 'G',
                '../music/MusicPlayCompat': 'MusicPlayCompat',
                './Performance': 'Performance',
            },
        ],
        AvatarUtil: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '1e2065qJNRIsL+902AB5j8t', 'AvatarUtil'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    r = e('../LogicPlatform/SpriteCacheLoader'),
                    p = e('../util/PU'),
                    o = e('../util/StringUtil'),
                    n = (function () {
                        function n() {}
                        return (
                            (n.showUserAvatarAndName = function (i, o) {
                                a.MGUser.getUserBasicInfo({
                                    complete: function (e) {
                                        if (null != e) {
                                            i && i(e.nickName);
                                            var t = e.avatarUrl;
                                            n.showUserAvatar(t, o, !0);
                                        }
                                    },
                                });
                            }),
                            (n.showUserAvatarForOther = function (e, c, l, u) {
                                var d;
                                (void 0 === u && (u = null), o.StringUtil.isEmpty(e)) ||
                                    (p.default.isWeiXin() ? (d = wx.createImage()) : ((d = document.createElement('img')).crossOrigin = 'anonymous'),
                                    (d.src = e),
                                    (d.onload = function () {
                                        var e;
                                        e = p.default.isWeiXin() ? wx.createCanvas() : document.createElement('canvas');
                                        var t = c.node.width,
                                            i = c.node.height;
                                        (e.width = t), (e.height = i);
                                        var o = e.getContext('2d', null);
                                        if ((o.clearRect(0, 0, e.width, e.height), (o.imageSmoothingEnabled = !0), (o.mozImageSmoothingEnabled = !0), l)) {
                                            var n = e.width / 2,
                                                a = e.height / 2;
                                            o.beginPath(), o.arc(n, a, e.width / 2, 0, 2 * Math.PI), o.closePath(), o.save(), o.clip(), o.drawImage(d, 0, 0, e.width, e.height), o.restore();
                                        } else o.drawImage(d, 0, 0, e.width, e.height);
                                        u && u(e);
                                        var r = new cc.Texture2D();
                                        r.releaseTexture(), r.initWithElement(e), r.handleLoadedTexture();
                                        var s = new cc.SpriteFrame();
                                        s.setTexture(r), (c.spriteFrame = s);
                                    }));
                            }),
                            (n.showUserAvatarForQQ = function (e, t, i, o) {
                                void 0 === o && (o = null);
                                var n = document.createElement('canvas'),
                                    a = t.node.width,
                                    r = t.node.height;
                                (n.width = a), (n.height = r);
                                var s = n.getContext('2d', null);
                                if ((s.clearRect(0, 0, n.width, n.height), (s.imageSmoothingEnabled = !0), (s.mozImageSmoothingEnabled = !0), i)) {
                                    var c = n.width / 2,
                                        l = n.height / 2;
                                    s.beginPath(), s.arc(c, l, n.width / 2, 0, 2 * Math.PI), s.closePath(), s.save(), s.clip(), s.drawImage(e, 0, 0, n.width, n.height), s.restore();
                                } else s.drawImage(e, 0, 0, n.width, n.height);
                                o && o(n);
                                var u = new cc.Texture2D();
                                u.releaseTexture(), u.initWithElement(n), u.handleLoadedTexture();
                                var d = new cc.SpriteFrame();
                                d.setTexture(u), (t.spriteFrame = d);
                            }),
                            (n.showUserAvatar = function (e, i, t, o) {
                                var n = this;
                                void 0 === o && (o = null);
                                try {
                                    p.default.isQQ()
                                        ? t
                                            ? r.default.loadImageAsyncForQQ(e, function (e, t) {
                                                  e && n.showUserAvatarForQQ(t, i, !0, o);
                                              })
                                            : r.default.load(e, i, o)
                                        : this.showUserAvatarForOther(e, i, t, o);
                                } catch (e) {
                                    console.log('usrInfo getUserInfo catch err = ' + e);
                                }
                            }),
                            (n.initSpriteFromDisk = function (e, t) {
                                var i = document.createElement('canvas'),
                                    o = t.node.width,
                                    n = t.node.height;
                                (i.width = o), (i.height = n);
                                var a = i.getContext('2d', null);
                                a.clearRect(0, 0, i.width, i.height), (a.imageSmoothingEnabled = !0), (a.mozImageSmoothingEnabled = !0), a.drawImage(e, 0, 0, i.width, i.height);
                                var r = new cc.Texture2D();
                                r.releaseTexture(), r.initWithElement(i), r.handleLoadedTexture();
                                var s = new cc.SpriteFrame();
                                s.setTexture(r), (t.spriteFrame = s);
                            }),
                            n
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../LogicPlatform/SpriteCacheLoader': 'SpriteCacheLoader',
                '../util/PU': 'PU',
                '../util/StringUtil': 'StringUtil',
            },
        ],
        AwardController: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'f2ceage/WhPJqw9BEOaeLiQ', 'AwardController'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('../UI/GameEntraScene/ToastPopManager'),
                    a = e('../UI/dailyattendance/AwardResultCommonPrefab'),
                    o = e('../Logic/MoneySystem'),
                    m = e('../Logic/GameItemsManager'),
                    r = e('../skin/SkinManager'),
                    p = e('../../base/Log'),
                    g = e('../../base/G'),
                    _ = e('../Logic/EventBus'),
                    y = e('../Logic/NotifyEvent'),
                    S = e('../../property/PropertyDefines'),
                    s = e('../skin/SkinPieceMgr'),
                    v = e('../Logic/SkinDataManager'),
                    I = e('../../business/Logic/I18nManager'),
                    c = e('../keypad/KeypadNavigator'),
                    l = (function () {
                        function f() {
                            this.AwardPrefab = 'prefab/AwardCommonResultPrefab';
                        }
                        return (
                            (f.getIns = function () {
                                return this.sInstance || (this.sInstance = new f()), this.sInstance;
                            }),
                            (f.filterAwardsForDouble = function (e) {
                                p.default.i('before fillter awards, size=' + e.length);
                                for (var t = [], i = 0, o = 0; o < e.length; o++) {
                                    var n = e[o];
                                    n.awardType != m.GameItemType.TYPE_SKIN && ((t[i] = n), i++);
                                }
                                return p.default.i('after fillter awards, size=' + t.length), t;
                            }),
                            (f.shouldDoubleAward = function (e) {
                                return e && e.awardType != m.GameItemType.TYPE_SKIN;
                            }),
                            (f.shouldDoubleAwards = function (e) {
                                var t = !1;
                                if (e && 0 < e.length)
                                    if (1 == e.length) t = e[0].awardType != m.GameItemType.TYPE_SKIN;
                                    else
                                        for (var i = 0; i < e.length; i++) {
                                            if (e[i].awardType != m.GameItemType.TYPE_SKIN) {
                                                t = !0;
                                                break;
                                            }
                                        }
                                return t;
                            }),
                            (f.getAwardsToastTip = function (e, t) {
                                var i = t || '恭喜您，看视频额外获得：';
                                if ((I.default.getInstance().isEnglish() && (i = t || 'Congratulations, Rerward：'), e && 0 < e.length)) {
                                    for (var o = 0; o < e.length; o++) {
                                        var n = e[o],
                                            a = m.GameItemsManager.getIns().getItemNameSplitTime(n.id);
                                        a || (n.awardType == m.GameItemType.TYPE_PIECE && ((a = '碎片'), I.default.getInstance().isEnglish() && (a = ' puzzle'))), (i += a + 'x' + n.count + '，');
                                    }
                                    i = i.slice(0, i.length - 1);
                                }
                                return i;
                            }),
                            (f.hasOwnAwardSkin = function (e) {
                                for (var t = e.getAwardContentList(), i = 0; i < t.length; i++) {
                                    var o = t[i];
                                    if (o.awardType == m.GameItemType.TYPE_SKIN && r.SkinMgr.isOwnedPermanent(o.id)) return !0;
                                }
                                return !1;
                            }),
                            (f.skinConvertToDiamond = function (e) {
                                var t = 0;
                                if (r.SkinMgr.isOwnedPermanent(e)) {
                                    var i = m.GameItemsManager.getIns().getItemById(e),
                                        o = m.GameItemsManager.getIns().getItemTimeLimitDay(i.getItemId());
                                    switch (o) {
                                        case 1:
                                            t = 10;
                                            break;
                                        case 2:
                                            t = 20;
                                            break;
                                        case 3:
                                            t = 30;
                                            break;
                                        case 0:
                                            t = 199;
                                    }
                                    p.default.i('AwardController skinConvertToDiamond limitsDay: ' + o + ' diamondNum: ' + t);
                                }
                                return t;
                            }),
                            (f.prototype.showCommonAwardResultPage = function (i, o) {
                                p.default.i('AwardController showAwardResultPage', i),
                                    f.divTipsShowIsUserContainSkin(i) && f.mergeAwardContentIfNeed(i),
                                    this.mergeSKinPieceIfNedd(i),
                                    i.isNeedGiveAwardInfo() && f.giveAwardInfo(i.getAwardContentList()),
                                    n.ToastPopManager.getIns().showDynamic(this.AwardPrefab, function (e) {
                                        var t = e.getComponent(a.default);
                                        i.setOnCloseCallback(function () {
                                            n.ToastPopManager.getIns().dismiss(e), o && c.default.getInstance().gotoPage(o);
                                        }),
                                            o && (t.setDoubleBtn = !1),
                                            t.initData(i);
                                    });
                            }),
                            (f.prototype.showAwardResultPage = function (i) {
                                p.default.i('AwardController showAwardResultPage', i),
                                    i.isMergeAward() && (f.mergeAwardContentIfNeed(i), this.mergeSKinPieceIfNedd(i)),
                                    i.isNeedGiveAwardInfo() && f.giveAwardInfo(i.getAwardContentList()),
                                    n.ToastPopManager.getIns().showDynamic(this.AwardPrefab, function (e) {
                                        var t = e.getComponent(a.default);
                                        i.setOnCloseCallback(function () {
                                            n.ToastPopManager.getIns().dismiss(e);
                                        }),
                                            t.initData(i);
                                    });
                            }),
                            (f.prototype.showAwardVipPage = function (i) {
                                p.default.i('AwardController showAwardVipPage', i),
                                    I.default.getInstance().isEnglish() ? f.mergeAwardContentIfNeed(i, 'the skin have transformed into %s diamond', 'use it at skin stroe') : f.mergeAwardContentIfNeed(i, '赠送皮肤已拥有，转为%s钻石奖励', '赠送皮肤请到皮肤商店设置'),
                                    i.isNeedGiveAwardInfo() && f.giveAwardInfo(i.getAwardContentList()),
                                    n.ToastPopManager.getIns().showDynamic(this.AwardPrefab, function (e) {
                                        var t = e.getComponent(a.default);
                                        i.setOnCloseCallback(function () {
                                            n.ToastPopManager.getIns().dismiss(e);
                                        }),
                                            t.initData(i);
                                    });
                            }),
                            (f.prototype.mergeSKinPieceIfNedd = function (e) {
                                for (var t = e.getAwardContentList(), i = e.getAwardItems(), o = 0; o < t.length; o++) {
                                    var n = t[o];
                                    if (n.awardType == m.GameItemType.TYPE_PIECE) break;
                                    n.awardType == m.GameItemType.TYPE_GOLD && (n, i[o]);
                                }
                            }),
                            (f.divTipsShowIsUserContainSkin = function (e) {
                                for (var t = !1, i = !1, o = e.getAwardContentList(), n = 0; n < o.length; n++) {
                                    var a = o[n];
                                    if (a.awardType == m.GameItemType.TYPE_SKIN) {
                                        if (((t = !0), 0 < f.skinConvertToDiamond(a.id))) return !0;
                                        var r = '您可以在皮肤商店设置使用皮肤 ',
                                            s = '去设置';
                                        I.default.getInstance().isEnglish() && ((r = 'You can use it at skin stroe '), (s = 'use it')),
                                            e.setBottomLeftText(r).setBottomRightText(s, function () {
                                                f.getIns().dismissAwardResultPage(e), _.default.fire(y.default.REWARTDPANEL_SHOW_SKINSTORE), e.callCloseParent();
                                            });
                                    } else if (a.awardType == m.GameItemType.TYPE_PIECE) {
                                        var c = 0,
                                            l = v.SkinDataMgr.Ins().getOwnedSkin(v.SkinDataMgr.Ins().getSkinByPieceId(a.id).name);
                                        if ((null != l && l.isOwnedPermanent() && (c = a.count), 0 < c)) return !1;
                                        t || (i = !0);
                                    } else if (a.awardType == m.GameItemType.TYPE_PROP) {
                                        (r = '获得冲刺道具，可在游戏中使用'), (s = '获得减速道具，可在游戏中使用');
                                        var u = '获得护盾道具，可在游戏中使用';
                                        I.default.getInstance().isEnglish() && ((r = 'Recieve Auto tap props, use in game'), (s = 'Recieve slowDown props，to use it in game'), (u = 'Recieve shield props, use in game'));
                                        var d = g.G.Ap.propertyPack.getConfig().getParamByItemId(a.id).key;
                                        if (d)
                                            switch (d.type) {
                                                case S.PROPERTYTYPE.GAME_DASH:
                                                    e.setBottomLeftText(r);
                                                    break;
                                                case S.PROPERTYTYPE.GAME_SLOW:
                                                    e.setBottomLeftText(s);
                                                    break;
                                                case S.PROPERTYTYPE.GAME_SHIELD:
                                                    e.setBottomLeftText(u);
                                            }
                                    } else if (a.awardType == m.GameItemType.TYPE_DIAMONDS) {
                                        var p = e.getBottomLeftText(),
                                            h = p && 0 < p.length;
                                        t || i || h || (I.default.getInstance().isEnglish() ? e.setBottomLeftText('to get more reward in game') : e.setBottomLeftText('去游戏中赢取更多礼包吧'));
                                    }
                                }
                                return !1;
                            }),
                            (f.mergeAwardContentIfNeed = function (e, t, i) {
                                for (var o, n, a = e.getAwardContentList(), r = e.getAwardItems(), s = -1, c = 0, l = !1, u = 0; u < a.length; u++) {
                                    var d = a[u];
                                    d.awardType == m.GameItemType.TYPE_SKIN ? ((l = !0), (s = u), (c = f.skinConvertToDiamond(d.id))) : d.awardType == m.GameItemType.TYPE_DIAMONDS && ((o = d), (n = r[u]));
                                }
                                if (0 < c) {
                                    try {
                                        a.splice(s, 1), e.getAwardItems().splice(s, 1);
                                    } catch (e) {
                                        p.default.i('mergeAwardContentIfNeed error', e);
                                    }
                                    p.default.i('mergeAwardContentIfNeed', e), t ? e.setBottomSecondTip(cc.js.formatStr(t, c)) : e.setBottomSecondTip('奖励的皮肤为你转为' + c + '个钻石'), o ? ((o.count += c), (n.itemText = o.count + '')) : e.addAwardContent(m.GameItemType.TYPE_DIAMONDS, c);
                                } else l && (i ? e.setBottomSecondTip(i) : I.default.getInstance().isEnglish() ? e.setBottomSecondTip('use it at skin stroe') : e.setBottomSecondTip('皮肤商店可设置使用新获得皮肤'));
                            }),
                            (f.giveAwardInfo = function (e) {
                                if (e)
                                    for (var t = 0; t < e.length; t++) {
                                        var i = e[t];
                                        this.giveAwardContent(i);
                                    }
                            }),
                            (f.giveAwardContent = function (e) {
                                switch ((p.default.i('giveAwardContent', e.toString()), e.awardType)) {
                                    case m.GameItemType.TYPE_DIAMONDS:
                                        o.MoneySystem.increaseDiamond(e.count);
                                        break;
                                    case m.GameItemType.TYPE_GOLD:
                                        o.MoneySystem.increaseGold(e.count);
                                        break;
                                    case m.GameItemType.TYPE_HP:
                                        o.MoneySystem.increaseHp(e.count);
                                        break;
                                    case m.GameItemType.TYPE_SKIN:
                                        r.SkinMgr.Ins().receiveSkin(e.id);
                                        break;
                                    case m.GameItemType.TYPE_PIECE:
                                        this.addAChip(e.id, e.count);
                                        break;
                                    case m.GameItemType.TYPE_PROP:
                                        this.addProp(e.id, e.count);
                                }
                            }),
                            (f.addAChip = function (e, t) {
                                var i = new s.Piece(e, t);
                                s.default.Ins().addPiece([i]);
                            }),
                            (f.addProp = function (e, t) {
                                var i = g.G.Ap.propertyPack.getPlayProperty(),
                                    o = g.G.Ap.propertyPack.getConfig().getParamByItemId(e).key;
                                o && (i.addProperty(o, t), g.G.Ap.propertyPack.save());
                            }),
                            (f.prototype.dismissAwardResultPage = function (e) {
                                var t = e.getOnCloseCb();
                                t && t();
                            }),
                            (f.sInstance = null),
                            f
                        );
                    })();
                i.AwardController = l;
                var u = (function () {
                    function e() {
                        (this.mSource = e.SOURCE_NONE), (this.mergeAward = !0), (this.isGiveAwardInfo = !1), (this.titlePicPath = '/static_res/share_gift_congratulation_title'), (this.okBtnText = '好的'), (this.okBtnSpriteNormal = '/static_res/share_gift_ok_normal'), (this.okBtnSpritePressed = '/static_res/share_gift_ok_press'), (this.bottomLeftText = ''), (this.isBottomRightTipVisible = !1), (this.leftNeedLabelString = ''), (this.leftNeedIconPath = ''), (this.bottomRightText = ''), (this.bottomSecondTipText = ''), (this.awardContentList = []), (this.awardItems = []), (this.isSkipLabelVisible = !1), (this.isShowText = !0), I.default.getInstance().isEnglish() && ((this.titlePicPath = '/static_res/share_gift_congratulation_title_en'), (this.okBtnText = 'ok'));
                    }
                    return (
                        (e.prototype.getSource = function () {
                            return this.mSource;
                        }),
                        (e.prototype.steSource = function (e) {
                            return (this.mSource = e), this;
                        }),
                        (e.prototype.isSkipLableVisible = function () {
                            return this.isSkipLabelVisible;
                        }),
                        (e.prototype.getSkipLabelClickCb = function () {
                            return this.onSkipLabelClick;
                        }),
                        (e.prototype.getTitlePicPath = function () {
                            return this.titlePicPath;
                        }),
                        (e.prototype.getOkBtnText = function () {
                            return this.okBtnText;
                        }),
                        (e.prototype.getOkBtnNormalSprite = function () {
                            return this.okBtnSpriteNormal;
                        }),
                        (e.prototype.getOkBtnPressedSprite = function () {
                            return this.okBtnSpritePressed;
                        }),
                        (e.prototype.getBottomLeftText = function () {
                            return this.bottomLeftText;
                        }),
                        (e.prototype.getLeftNeedLabelText = function () {
                            return this.leftNeedLabelString;
                        }),
                        (e.prototype.getNeedIconSpritePath = function () {
                            return this.leftNeedIconPath;
                        }),
                        (e.prototype.isBottomRightTextVisible = function () {
                            return this.isBottomRightTipVisible;
                        }),
                        (e.prototype.getBottomRightText = function () {
                            return this.bottomRightText;
                        }),
                        (e.prototype.getBottomRightTextClickCb = function () {
                            return this.onBottomRightTipClick;
                        }),
                        (e.prototype.getBottomSecondTipText = function () {
                            return this.bottomSecondTipText;
                        }),
                        (e.prototype.getDoubleBtnClickCb = function () {
                            return this.onDoubleBtnClick;
                        }),
                        (e.prototype.getOkBtnClickCb = function () {
                            return this.onOkBtnClick;
                        }),
                        (e.prototype.getOnCloseCb = function () {
                            return this.onCloseCallback;
                        }),
                        (e.prototype.getAwardItems = function () {
                            return this.awardItems;
                        }),
                        (e.prototype.getAwardContentList = function () {
                            return this.awardContentList;
                        }),
                        (e.prototype.isNeedGiveAwardInfo = function () {
                            return this.isGiveAwardInfo;
                        }),
                        (e.prototype.isMergeAward = function () {
                            return this.mergeAward;
                        }),
                        (e.prototype.setMergeAward = function (e) {
                            return (this.mergeAward = e), this;
                        }),
                        (e.prototype.setTitlePicPath = function (e) {
                            return e && (this.titlePicPath = e), this;
                        }),
                        (e.prototype.setIsNeedGiveAwardInfo = function (e) {
                            return (this.isGiveAwardInfo = e), this;
                        }),
                        (e.prototype.addAwardContentItem = function (e) {
                            return e && (this.awardContentList.push(e), this.addAwardItem(e)), this;
                        }),
                        (e.prototype.addAwardContent = function (e, t, i) {
                            var o = new d(e, t, i);
                            return this.awardContentList.push(o), this.addAwardItem(o), this;
                        }),
                        (e.prototype.addAwardItem = function (e) {
                            var t = new h();
                            switch (((t.itemText = 'x' + e.count), e.awardType)) {
                                case m.GameItemType.TYPE_DIAMONDS:
                                    t.itemPicPath = m.GameItemsManager.getIns().getSmallPicByItemId(m.GameItemsDefine.ID_DIAMOND);
                                    break;
                                case m.GameItemType.TYPE_GOLD:
                                    t.itemPicPath = m.GameItemsManager.getIns().getSmallPicByItemId(m.GameItemsDefine.ID_GOLD);
                                    break;
                                case m.GameItemType.TYPE_HP:
                                    t.itemPicPath = m.GameItemsManager.getIns().getSmallPicByItemId(m.GameItemsDefine.ID_POWER);
                                    break;
                                case m.GameItemType.TYPE_SKIN:
                                    (t.itemPicPath = m.GameItemsManager.getIns().getSmallPicByItemId(e.id)), (t.itemText = m.GameItemsManager.getIns().getItemNameSplitTime(e.id) + ' x' + e.count);
                                    var i = m.GameItemsManager.getIns().getItemTimeLimitDay(e.id);
                                    0 < i && (I.default.getInstance().isEnglish() ? (t.itemSecondText = '(Limited time：' + i + ' days)') : (t.itemSecondText = '(限时' + i + '天)'));
                                    break;
                                case m.GameItemType.TYPE_PIECE:
                                    return void (t.itemPicPath = m.GameItemsManager.getIns().getSmallPicByItemId(e.id));
                                case m.GameItemType.TYPE_PROP:
                                    (t.itemPicPath = m.GameItemsManager.getIns().getBigPicByItemId(e.id)), (t.plistPath = m.GameItemsManager.getPropPlistPath());
                            }
                            this.awardItems.push(t);
                        }),
                        (e.prototype.getSkinPieceIconPath = function (e) {}),
                        (e.prototype.setLeftNeedLabel = function (e) {
                            return e && (-1 == e.indexOf('color=') && (e = '<color=#ffffff>' + e + '</c>'), (this.leftNeedLabelString = e)), this;
                        }),
                        (e.prototype.setLeftNeedIconPath = function (e) {
                            return (this.leftNeedIconPath = e || ''), this;
                        }),
                        (e.prototype.setBottomLeftText = function (e) {
                            return e && (-1 == e.indexOf('color=') && (e = '<color=#ffffff>' + e + '</c>'), (this.bottomLeftText = e)), this;
                        }),
                        (e.prototype.setBottomRightText = function (e, t) {
                            return (this.isBottomRightTipVisible = !0), e && (this.bottomRightText = e), t && (this.onBottomRightTipClick = t), this;
                        }),
                        (e.prototype.setBottomSecondTip = function (e) {
                            return e && (this.bottomSecondTipText = e), this;
                        }),
                        (e.prototype.enableSkipLabel = function (e, t) {
                            return t && ((this.isSkipLabelVisible = !0), (this.onSkipLabelClick = t)), this;
                        }),
                        (e.prototype.setDoubleBtn = function (e, t) {
                            return (this.onDoubleBtnClick = t), this;
                        }),
                        (e.prototype.setOkBtn = function (e, t) {
                            return this.setRichOkBtn(e, null, null, t), this;
                        }),
                        (e.prototype.setIsShowText = function (e) {
                            this.isShowText = e;
                        }),
                        (e.prototype.getIsShowText = function () {
                            return this.isShowText;
                        }),
                        (e.prototype.setRichOkBtn = function (e, t, i, o) {
                            return e && (this.okBtnText = e), ('' != e && ' ' != e) || (this.okBtnText = ''), t && (this.okBtnSpriteNormal = t), i && (this.okBtnSpritePressed = i), o && (this.onOkBtnClick = o), this;
                        }),
                        (e.prototype.callCloseParent = function () {
                            this.onCloseParentCallback && this.onCloseParentCallback();
                        }),
                        (e.prototype.setCloseParentCallback = function (e) {
                            return (this.onCloseParentCallback = e), this;
                        }),
                        (e.prototype.setOnCloseCallback = function (e) {
                            e && (this.onCloseCallback = e);
                        }),
                        (e.SOURCE_NONE = 0),
                        (e.SOURCE_LOTTERY = 1),
                        (e.SOURCE_DAILY_ATTENDANCE = 2),
                        (e.SOURCE_GAME_CHEST = 3),
                        e
                    );
                })();
                i.AwardResultInfo = u;
                var d = (function () {
                    function e(e, t, i) {
                        (this.awardType = -1), (this.count = 0), (this.id = ''), (this.awardType = e), (this.count = t), (this.id = i);
                    }
                    return (
                        (e.prototype.toString = function () {
                            return 'awardType: ' + this.awardType + ' count: ' + this.count + ' id: ' + this.id;
                        }),
                        e
                    );
                })();
                i.AwardContent = d;
                var h = function () {
                    (this.plistPath = ''), (this.itemPicPath = ''), (this.itemText = ''), (this.itemSecondText = '');
                };
                (i.AwardResultItem = h), cc._RF.pop();
            },
            {
                '../../base/G': 'G',
                '../../base/Log': 'Log',
                '../../business/Logic/I18nManager': 'I18nManager',
                '../../property/PropertyDefines': 'PropertyDefines',
                '../Logic/EventBus': 'EventBus',
                '../Logic/GameItemsManager': 'GameItemsManager',
                '../Logic/MoneySystem': 'MoneySystem',
                '../Logic/NotifyEvent': 'NotifyEvent',
                '../Logic/SkinDataManager': 'SkinDataManager',
                '../UI/GameEntraScene/ToastPopManager': 'ToastPopManager',
                '../UI/dailyattendance/AwardResultCommonPrefab': 'AwardResultCommonPrefab',
                '../keypad/KeypadNavigator': 'KeypadNavigator',
                '../skin/SkinManager': 'SkinManager',
                '../skin/SkinPieceMgr': 'SkinPieceMgr',
            },
        ],
        AwardInfoFactory: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '68216iKnhxME5ZFSJMkjXFm', 'AwardInfoFactory'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('./DailyAwardBens'),
                    o = e('../Logic/LoginRewardManager'),
                    n = e('../../util/StringUtil'),
                    r = (function () {
                        function e() {
                            (this.mNewbieRewardList = null), (this.mNormalRewardList = null);
                        }
                        return (
                            (e.getInstance = function () {
                                return e.mInstance || (e.mInstance = new e()), e.mInstance;
                            }),
                            (e.prototype.generateUIData = function (e) {
                                for (var t = new Array(), i = 1; i <= 7; i++) {
                                    var o = !1;
                                    3 == i && e == a.AwardCfg.SIGN_TYPE_NEWBIE ? (o = !0) : 7 == i && e == a.AwardCfg.SIGN_TYPE_NORMAL && (o = !0);
                                    var n = new a.DailyDayUIBean(i, o, this.generate(i, e), e);
                                    t.push(n);
                                }
                                return t;
                            }),
                            (e.prototype.getRewardList = function (e) {
                                return e == a.AwardCfg.SIGN_TYPE_NEWBIE ? (null == this.mNewbieRewardList && (this.mNewbieRewardList = o.LoginRewardMgr.Ins().getLoginRewardVM(1)), this.mNewbieRewardList) : (null == this.mNormalRewardList && (this.mNormalRewardList = o.LoginRewardMgr.Ins().getLoginRewardVM(0)), this.mNormalRewardList);
                            }),
                            (e.prototype.generate = function (e, t) {
                                var i = new Array(),
                                    o = this.getRewardList(t)[e - 1];
                                return 0 != o.skins ? i.push(a.AwardInfo.createSkinInfo()) : (0 != o.diamonds && i.push(a.AwardInfo.createDiamondInfo(o.diamonds)), n.StringUtil.isEmpty(o.skinPiece) || i.push(a.AwardInfo.createPieceInfo(o.skinPiece))), i;
                            }),
                            e
                        );
                    })();
                (i.AwardInfoFactory = r), cc._RF.pop();
            },
            {
                '../../util/StringUtil': 'StringUtil',
                '../Logic/LoginRewardManager': 'LoginRewardManager',
                './DailyAwardBens': 'DailyAwardBens',
            },
        ],
        AwardResultCommonPrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'e18deyTt3xAKb/ttw9o26mZ', 'AwardResultCommonPrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('../GameEntraScene/ImgCache'),
                    r = e('../GameEntraScene/BasicTouchEvent'),
                    s = e('../../../util/SceneMusicMgr'),
                    u = e('../../../util/ParticleSystemVM'),
                    c = e('../../../util/StringUtil'),
                    n = e('../../../../modules/MGAdv/scripts/Logic/MGAdvEntrance'),
                    l = e('../../../../modules/MGAdv/scripts/Logic/MGAdvDefine'),
                    d = e('../../../base/Log'),
                    p = e('../../../upgrade/BannerDelayShowToggle'),
                    h = e('../../../upgrade/ToggleBean'),
                    f = e('../../../util/PU'),
                    m = e('../../../util/SUtil'),
                    g = e('../../../../modules/MGUtils/MGPlatform'),
                    _ = e('../../keypad/KeypadNavigator'),
                    y = e('../../Logic/I18nManager'),
                    o = cc._decorator,
                    S = o.ccclass,
                    v = o.property,
                    I = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mMainNode = null), (e.titleSprite = null), (e.awardItem1RootNode = null), (e.awardItem2RootNode = null), (e.awardItem3RootNode = null), (e.awardItem1Sprite = null), (e.awardItem2Sprite = null), (e.awardItem3Sprite = null), (e.awardItem1Label = null), (e.awardItem1SecondLabel = null), (e.awardItem2Label = null), (e.awardItem2SecondLabel = null), (e.awardItem3Label = null), (e.awardItem3SecondLabel = null), (e.bottomTipLeftLabel = null), (e.bottomTipRightLabel = null), (e.bottomSecondTipLable = null), (e.leftNeedlabel = null), (e.leftneedIcon = null), (e.okButton = null), (e.doubleButton = null), (e.closeButton = null), (e.okLabel = null), (e.skipLabel = null), (e.ParticleSystemNode = null), (e.destoryBanner = !0), (e.setDoubleBtn = !0), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.start = function () {
                                this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                });
                                var e = new r.default(this.onBottomRightLableClick.bind(this));
                                this.bottomTipRightLabel.node.on(cc.Node.EventType.TOUCH_END, e.click, e);
                                var t = new r.default(this.onOkBtnClick.bind(this));
                                this.okButton.node.on(cc.Node.EventType.TOUCH_END, t.click, t);
                                var i = new r.default(this.onCloseClick.bind(this));
                                this.closeButton.on(cc.Node.EventType.TOUCH_END, i.click, i);
                                var o = new r.default(this.onSkipLabelClick.bind(this));
                                this.skipLabel.node.on(cc.Node.EventType.TOUCH_END, o.click, o), this.setDoubleBtn && ((this.okButton.node.active = !y.default.getInstance().isEnglish()), (this.doubleButton.node.active = y.default.getInstance().isEnglish()));
                                var n = new r.default(this.onDoubleBtnClick.bind(this));
                                this.doubleButton.node.on(cc.Node.EventType.TOUCH_END, n.click, n), _.default.getInstance().pushDialog(this.node);
                            }),
                            (e.prototype.onSkipLabelClick = function () {
                                this.onSkipLabelClickCb && this.onSkipLabelClickCb();
                            }),
                            (e.prototype.onBottomRightLableClick = function () {
                                this.onBottomRightTipClickCb && this.onBottomRightTipClickCb();
                            }),
                            (e.prototype.onDoubleBtnClick = function () {
                                this.onDoubleBtnClickCb && this.onDoubleBtnClickCb();
                            }),
                            (e.prototype.onOkBtnClick = function () {
                                this.onOkBtnClickCb && this.onOkBtnClickCb();
                            }),
                            (e.prototype.onCloseClick = function () {
                                this.onCloseBtnClickCB && this.onCloseBtnClickCB();
                            }),
                            (e.prototype.initData = function (e) {
                                var i = this;
                                if (e) {
                                    s.default.play(s.default.PATH_SHORT, s.default.PATH_SHORT, !1),
                                        a.default.get(e.getOkBtnNormalSprite(), function (e, t) {
                                            cc.isValid(i, !0) && (i.okButton.normalSprite = t);
                                        }),
                                        a.default.get(e.getOkBtnPressedSprite(), function (e, t) {
                                            cc.isValid(i, !0) && (i.okButton.pressedSprite = t);
                                        }),
                                        a.default.get2(e.getTitlePicPath(), this.titleSprite);
                                    for (var t = 0; t < e.getAwardItems().length; t++) {
                                        var o = e.getAwardItems()[t];
                                        switch (t) {
                                            case 0:
                                                c.StringUtil.isEmpty(o.plistPath)
                                                    ? a.default.get2(o.itemPicPath, this.awardItem1Sprite)
                                                    : a.default.loadAtlasSpriteFrames(o.plistPath, o.itemPicPath, function (e, t) {
                                                          cc.isValid(i, !0) && (i.awardItem1Sprite.spriteFrame = t);
                                                      }),
                                                    (this.awardItem1RootNode.active = !0),
                                                    (this.awardItem1Label.string = o.itemText),
                                                    (this.awardItem1SecondLabel.string = o.itemSecondText);
                                                break;
                                            case 1:
                                                c.StringUtil.isEmpty(o.plistPath)
                                                    ? a.default.get2(o.itemPicPath, this.awardItem2Sprite)
                                                    : a.default.loadAtlasSpriteFrames(o.plistPath, o.itemPicPath, function (e, t) {
                                                          cc.isValid(i, !0) && (i.awardItem2Sprite.spriteFrame = t);
                                                      }),
                                                    (this.awardItem2RootNode.active = !0),
                                                    (this.awardItem2Label.string = o.itemText),
                                                    (this.awardItem2SecondLabel.string = o.itemSecondText);
                                                break;
                                            case 2:
                                                c.StringUtil.isEmpty(o.plistPath)
                                                    ? a.default.get2(o.itemPicPath, this.awardItem3Sprite)
                                                    : a.default.loadAtlasSpriteFrames(o.plistPath, o.itemPicPath, function (e, t) {
                                                          cc.isValid(i, !0) && (i.awardItem3Sprite.spriteFrame = t);
                                                      }),
                                                    (this.awardItem3RootNode.active = !0),
                                                    (this.awardItem3Label.string = o.itemText),
                                                    (this.awardItem3SecondLabel.string = o.itemSecondText);
                                        }
                                    }
                                    (this.bottomSecondTipLable.string = e.getBottomSecondTipText()), (this.bottomTipLeftLabel.string = e.getBottomLeftText()), (this.leftNeedlabel.string = e.getLeftNeedLabelText()), (this.leftneedIcon.node.active = !1), (this.leftNeedlabel.node.active = !1);
                                    var n = e.getNeedIconSpritePath();
                                    '' != n &&
                                        a.default.get(n, function (e, t) {
                                            cc.isValid(i, !0) && ((i.leftneedIcon.node.active = !0), (i.leftNeedlabel.node.active = !0), (i.leftneedIcon.spriteFrame = t));
                                        }),
                                        e.isBottomRightTextVisible() && ((this.bottomTipRightLabel.node.active = !0), (this.bottomTipRightLabel.string = e.getBottomRightText()), (this.onBottomRightTipClickCb = e.getBottomRightTextClickCb())),
                                        (this.onOkBtnClickCb = e.getOkBtnClickCb()),
                                        (this.onDoubleBtnClickCb = e.getDoubleBtnClickCb()),
                                        (this.onCloseBtnClickCB = e.getOkBtnClickCb()),
                                        (this.okLabel.string = e.getOkBtnText()),
                                        e.getIsShowText() ? (this.okLabel.node.active = !0) : (this.okLabel.node.active = !1),
                                        e.isSkipLableVisible() && ((this.skipLabel.node.active = !0), (this.onSkipLabelClickCb = e.getSkipLabelClickCb()), (this.onCloseBtnClickCB = e.getSkipLabelClickCb())),
                                        f.default.isWeiXin() && this.ShowADs();
                                }
                            }),
                            (e.prototype.moveMainNode = function () {
                                var e = cc.moveTo(0.2, 0, 100);
                                this.mMainNode.runAction(e);
                            }),
                            (e.prototype.ShowADs = function () {
                                var o = this;
                                if ((d.default.l('show ads!!!!!'), n.MGAdv.isBannerShow())) d.default.l('已经有banner广告了');
                                else {
                                    var e,
                                        t = g.MGPlatform.getSystemInfoSync();
                                    this.skipLabel.node.active ? ((e = 25 - m.SUtil.ins().getChlidViewPositionInScreen(this.skipLabel.node, this.node).y), d.default.l('the skipLabel.node height is ' + e)) : ((e = 45 - m.SUtil.ins().getChlidViewPositionInScreen(this.okButton.node, this.node).y), d.default.l('the okButton.node height is ' + e));
                                    var i = t.screenHeight / 2 + (e * t.screenHeight) / m.SUtil.ins().mScreenHeight;
                                    n.MGAdv.loadBanner(
                                        300,
                                        0,
                                        i,
                                        function (e, t) {
                                            if (e == l.ADStat.LOAD_SUCCESS)
                                                if (o.destoryBanner) {
                                                    o.destoryBanner = !1;
                                                    var i = p.default.getBannerDelayTime(h.ToggleKey.BANNER_DELAY_REWARD_PAGE);
                                                    d.default.l('call the shwoADS !!!!! the dalaytime is  ' + i.normalDelayTime),
                                                        o.scheduleOnce(function () {
                                                            cc.isValid(o, !0) && n.MGAdv.showBanner(l.ADScene.SOURCE_SHOW_AWARD);
                                                        }, i.normalDelayTime / 1e3);
                                                } else o.destoryBannerAd();
                                        },
                                        l.ADScene.SOURCE_SHOW_AWARD,
                                    );
                                }
                            }),
                            (e.prototype.destoryBannerAd = function () {
                                this.destoryBanner || ((this.destoryBanner = !0), n.MGAdv.hideBanner(l.ADScene.SOURCE_SHOW_AWARD), n.MGAdv.destroyBanner(l.ADScene.SOURCE_SHOW_AWARD));
                            }),
                            (e.prototype.showParticleSystem = function () {
                                if (this.ParticleSystemNode) {
                                    var e = this.ParticleSystemNode.getChildByName('L-node'),
                                        t = this.ParticleSystemNode.getChildByName('R-node'),
                                        i = new u.ParticleSystemChild(!0, !0, 'green', 'particle_levelupgreen_l.plist'),
                                        o = new u.ParticleSystemChild(!0, !0, 'red', 'particle_levelupred_l.plist'),
                                        n = new u.ParticleSystemChild(!0, !0, 'blue', 'particle_levelupblue_r.plist'),
                                        a = new u.ParticleSystemChild(!0, !0, 'yellow', 'particle_yellow_r.plist'),
                                        r = [],
                                        s = [];
                                    r.push(i), r.push(o), s.push(n), s.push(a);
                                    var c = new u.ParticleSystemVM(e, r),
                                        l = new u.ParticleSystemVM(t, s);
                                    c.start(), l.start();
                                }
                            }),
                            (e.prototype.onDestroy = function () {
                                s.default.stop(s.default.NAME_SHORT), this.destoryBannerAd();
                            }),
                            __decorate([v(cc.Node)], e.prototype, 'mMainNode', void 0),
                            __decorate([v(cc.Sprite)], e.prototype, 'titleSprite', void 0),
                            __decorate([v(cc.Node)], e.prototype, 'awardItem1RootNode', void 0),
                            __decorate([v(cc.Node)], e.prototype, 'awardItem2RootNode', void 0),
                            __decorate([v(cc.Node)], e.prototype, 'awardItem3RootNode', void 0),
                            __decorate([v(cc.Sprite)], e.prototype, 'awardItem1Sprite', void 0),
                            __decorate([v(cc.Sprite)], e.prototype, 'awardItem2Sprite', void 0),
                            __decorate([v(cc.Sprite)], e.prototype, 'awardItem3Sprite', void 0),
                            __decorate([v(cc.Label)], e.prototype, 'awardItem1Label', void 0),
                            __decorate([v(cc.Label)], e.prototype, 'awardItem1SecondLabel', void 0),
                            __decorate([v(cc.Label)], e.prototype, 'awardItem2Label', void 0),
                            __decorate([v(cc.Label)], e.prototype, 'awardItem2SecondLabel', void 0),
                            __decorate([v(cc.Label)], e.prototype, 'awardItem3Label', void 0),
                            __decorate([v(cc.Label)], e.prototype, 'awardItem3SecondLabel', void 0),
                            __decorate([v(cc.RichText)], e.prototype, 'bottomTipLeftLabel', void 0),
                            __decorate([v(cc.Label)], e.prototype, 'bottomTipRightLabel', void 0),
                            __decorate([v(cc.Label)], e.prototype, 'bottomSecondTipLable', void 0),
                            __decorate([v(cc.RichText)], e.prototype, 'leftNeedlabel', void 0),
                            __decorate([v(cc.Sprite)], e.prototype, 'leftneedIcon', void 0),
                            __decorate([v(cc.Button)], e.prototype, 'okButton', void 0),
                            __decorate([v(cc.Button)], e.prototype, 'doubleButton', void 0),
                            __decorate([v(cc.Node)], e.prototype, 'closeButton', void 0),
                            __decorate([v(cc.Label)], e.prototype, 'okLabel', void 0),
                            __decorate([v(cc.Label)], e.prototype, 'skipLabel', void 0),
                            __decorate([v(cc.Node)], e.prototype, 'ParticleSystemNode', void 0),
                            (e = __decorate([S], e))
                        );
                    })(cc.Component);
                (i.default = I), cc._RF.pop();
            },
            {
                '../../../../modules/MGAdv/scripts/Logic/MGAdvDefine': 'MGAdvDefine',
                '../../../../modules/MGAdv/scripts/Logic/MGAdvEntrance': 'MGAdvEntrance',
                '../../../../modules/MGUtils/MGPlatform': 'MGPlatform',
                '../../../base/Log': 'Log',
                '../../../upgrade/BannerDelayShowToggle': 'BannerDelayShowToggle',
                '../../../upgrade/ToggleBean': 'ToggleBean',
                '../../../util/PU': 'PU',
                '../../../util/ParticleSystemVM': 'ParticleSystemVM',
                '../../../util/SUtil': 'SUtil',
                '../../../util/SceneMusicMgr': 'SceneMusicMgr',
                '../../../util/StringUtil': 'StringUtil',
                '../../Logic/I18nManager': 'I18nManager',
                '../../keypad/KeypadNavigator': 'KeypadNavigator',
                '../GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
                '../GameEntraScene/ImgCache': 'ImgCache',
            },
        ],
        AwardResultDialogPrefabScript: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '1ab03hpLxhJLK64TBGVMe2r', 'AwardResultDialogPrefabScript'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../GameEntraScene/BasicTouchEvent'),
                    n = cc._decorator,
                    a = n.ccclass,
                    r = n.property,
                    s = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.title = null), (e.content = null), (e.btnTxt = null), (e.confirmButton = null), (e.closeButton = null), (e.mConfirmClickCallback = null), (e.mCloseClickCallback = null), (e.mDialogManager = null), (e.mResolve = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.setPopupDlgManager = function (e) {
                                this.mDialogManager = e;
                            }),
                            (e.prototype.onLoad = function () {
                                var e = this;
                                this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                }),
                                    this.confirmButton &&
                                        ((this.mConfirmClickCallback = new o.default(function () {
                                            e.onTapConfirm();
                                        })),
                                        this.confirmButton.node.on(cc.Node.EventType.TOUCH_END, this.mConfirmClickCallback.click, this.mConfirmClickCallback)),
                                    this.closeButton &&
                                        ((this.mCloseClickCallback = new o.default(function () {
                                            e.onClose();
                                        })),
                                        this.closeButton.node.on(cc.Node.EventType.TOUCH_END, this.mCloseClickCallback.click, this.mCloseClickCallback));
                            }),
                            (e.prototype.init = function (e, t, i, o, n) {
                                this.setTitle(e), this.setContent(t), this.setBtnText(i), (this.mOnClose = n), (this.mOnConfirm = o);
                            }),
                            (e.prototype.onTapConfirm = function () {
                                this.node.destroy(), this.mResolve && this.mResolve(), this.mOnConfirm && this.mOnConfirm();
                            }),
                            (e.prototype.onClose = function () {
                                this.mDialogManager && this.mDialogManager.dismissDialog(this.node), this.mOnClose && this.mOnClose();
                            }),
                            (e.prototype.isNotEmptyStr = function (e) {
                                return e && 1 < e.length;
                            }),
                            (e.prototype.setBtnText = function (e) {
                                this.btnTxt && this.isNotEmptyStr(e) && (this.btnTxt.string = e);
                            }),
                            (e.prototype.setTitle = function (e) {
                                this.title && this.isNotEmptyStr(e) && (this.title.string = e);
                            }),
                            (e.prototype.setContent = function (e) {
                                this.content && this.isNotEmptyStr(e) && (this.content.string = e);
                            }),
                            (e.prototype.setConfirmCallback = function (e) {
                                this.mResolve = e;
                            }),
                            (e.prototype.setClickCallback = function (e, t) {
                                (this.mOnConfirm = e), (this.mOnClose = t);
                            }),
                            __decorate([r(cc.Label)], e.prototype, 'title', void 0),
                            __decorate([r(cc.Label)], e.prototype, 'content', void 0),
                            __decorate([r(cc.Label)], e.prototype, 'btnTxt', void 0),
                            __decorate([r(cc.Button)], e.prototype, 'confirmButton', void 0),
                            __decorate([r(cc.Button)], e.prototype, 'closeButton', void 0),
                            (e = __decorate([a], e))
                        );
                    })(cc.Component);
                (i.default = s), cc._RF.pop();
            },
            {
                '../GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
            },
        ],
        AwardResultItemPrefabScript: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '92053IVOhFHHpaknWZkkSOW', 'AwardResultItemPrefabScript'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = cc._decorator,
                    n = o.ccclass,
                    a = o.property,
                    r = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.txt = null), (e.icon = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.onLoad = function () {}),
                            (e.prototype.initData = function (e) {
                                (this.mBean = e), this.refreshUI();
                            }),
                            (e.prototype.refreshUI = function () {
                                this.mBean && (this.mBean.spriteFrame && (this.icon.spriteFrame = this.mBean.spriteFrame), this.mBean.number && (this.txt.string = 'x' + this.mBean.number));
                            }),
                            __decorate([a(cc.Label)], e.prototype, 'txt', void 0),
                            __decorate([a(cc.Sprite)], e.prototype, 'icon', void 0),
                            (e = __decorate([n], e))
                        );
                    })(cc.Component);
                i.default = r;
                var s = function (e, t) {
                    (this.number = e), (this.spriteFrame = t);
                };
                (i.AwardResultItemBean = s), cc._RF.pop();
            },
            {},
        ],
        BIReportI: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '47194KaispGaKviKqp5HzjF', 'BIReportI'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../util/Dictionary'),
                    n = e('./Infoc'),
                    a = e('../base/Log'),
                    r = (function () {
                        function t() {
                            this.mMap = new o.Dictionary();
                        }
                        return (
                            (t.convertNetwokType = function (e) {
                                return 'wifi' == e ? t.NET_WORK_WIFI : '2g' == e ? t.NET_WORK_2G : '3g' == e ? t.NET_WORK_3G : '4g' == e ? t.NET_WORK_4G : 'unknown' == e ? t.NET_WORK_UNKONOW : 'none' == e ? t.NET_WORK_NONE : t.NET_WORK_UNKONOW;
                            }),
                            (t.prototype.set = function (e, t) {
                                if (null == e || null == e) throw new Error('key cannot be null or undefined!');
                                return (null != t && null != t) || a.default.e('value should not be null or undefined!'), this.mMap.put(e, t), this;
                            }),
                            (t.prototype.buildDataString = function () {
                                for (var e = 'business_index=' + this.getTableID() + '&', t = this.mMap.size(), i = this.mMap.getPairs(), o = 0; o < t; o++) {
                                    var n = i[o];
                                    e += n.key + '=' + n.value + '&';
                                }
                                return 1 < e.length && (e = e.slice(0, e.length - 1)), e;
                            }),
                            (t.prototype.reportData = function (t) {
                                var i = this;
                                void 0 === t && (t = !1),
                                    setTimeout(function () {
                                        var e = i.buildDataString();
                                        n.Infoc.reportInfoc(e, t);
                                    }, 0);
                            }),
                            (t.NET_WORK_IGNORE = 0),
                            (t.NET_WORK_WIFI = 1),
                            (t.NET_WORK_2G = 2),
                            (t.NET_WORK_3G = 3),
                            (t.NET_WORK_4G = 4),
                            (t.NET_WORK_NONE = 99),
                            (t.NET_WORK_UNKONOW = 100),
                            t
                        );
                    })();
                (i.default = r), cc._RF.pop();
            },
            {
                '../base/Log': 'Log',
                '../util/Dictionary': 'Dictionary',
                './Infoc': 'Infoc',
            },
        ],
        BackButton: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'be7529lpl1F4bNjXl4tNuHn', 'BackButton'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../MUI/MUIButton'),
                    n = e('../loader/BeginFrameLoader'),
                    a = e('../../../base/G'),
                    r = e('../../../business/UI/GameEntraScene/GameEntranceScene'),
                    s = e('../../GameSceneSetting'),
                    c = e('../../../business/Logic/GameTryData'),
                    l = e('../../../business/Logic/EventBus'),
                    u = e('../../../business/Logic/NotifyEvent'),
                    d = e('../../GameBus'),
                    p = (function (t) {
                        function e() {
                            var e = t.call(this, n.default.getInstance().getAtlas(), n.default.getInstance().getBackNormal(), n.default.getInstance().getBackPressed()) || this;
                            return (e.onTouchListener = e.onTouched), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.updatePosition = function (e) {
                                this.setPosition(0.028 * a.G.Ap.config.presentWidth, e - this.normalImageItem.rect.height);
                            }),
                            (e.prototype.onTouched = function () {
                                switch (s.default.getInstance().getFromSource()) {
                                    case s.FromSource.SOURCE_DEFAULT:
                                    case s.FromSource.SOURCE_RANK_RESULT:
                                        r.default.DefaultPageIndex = r.default.GAME_ENTRA_SCENE_INDEX.MUSIC_LIB_INDEX;
                                        break;
                                    case s.FromSource.SOURCE_MAIN:
                                    case s.FromSource.SOURCE_RANK_MAIN:
                                        r.default.DefaultPageIndex = r.default.GAME_ENTRA_SCENE_INDEX.HOMEPAGE_INDEX;
                                        break;
                                    case s.FromSource.SOURCE_MUSIC:
                                    case s.FromSource.SOURCE_RANK_MUSIC:
                                        r.default.DefaultPageIndex = r.default.GAME_ENTRA_SCENE_INDEX.MUSIC_LIB_INDEX;
                                        break;
                                    case s.FromSource.SOURCE_SKIN_TRY:
                                        a.G.skinTryData && (a.G.skinTryData.trySkinFinish = !0),
                                            d.default.getInstance().scheduler.scheduleOnce(function () {
                                                l.default.fire(u.default.PLAY_TRIAL_FINISHED);
                                            }, 1);
                                    case s.FromSource.SOURCE_SONG_TRY:
                                        a.G.songTryData && (a.G.songTryData.songTryFinish = !0);
                                        break;
                                    case s.FromSource.SOURCE_PIANO_TRY:
                                        a.G.tryData && a.G.tryData.tryType == c.GameTryType.TYPE_PIANO && (a.G.tryData.tryFinish = !0);
                                }
                                a.G.Ap.presenter.enterScene('MainScene');
                            }),
                            e
                        );
                    })(o.default);
                (i.default = p), cc._RF.pop();
            },
            {
                '../../../base/G': 'G',
                '../../../business/Logic/EventBus': 'EventBus',
                '../../../business/Logic/GameTryData': 'GameTryData',
                '../../../business/Logic/NotifyEvent': 'NotifyEvent',
                '../../../business/UI/GameEntraScene/GameEntranceScene': 'GameEntranceScene',
                '../../GameBus': 'GameBus',
                '../../GameSceneSetting': 'GameSceneSetting',
                '../../MUI/MUIButton': 'MUIButton',
                '../loader/BeginFrameLoader': 'BeginFrameLoader',
            },
        ],
        Background: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '24c96Yko1lGu7KWFmdrKD/b', 'Background'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {}
                    return (
                        (e.prototype.attachSprite = function (e, t) {
                            (e.active = !0), (t.active = !1);
                        }),
                        (e.prototype.load = function (e) {
                            return !0;
                        }),
                        (e.prototype.update = function (e) {}),
                        (e.prototype.destroy = function () {}),
                        e
                    );
                })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        BannerDelayShowToggle: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '795c9OCCZ1D5qCYDPsWeMhT', 'BannerDelayShowToggle'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./ToggleBean'),
                    n = e('./ToggleChecker'),
                    a = e('../util/PU'),
                    r = e('../base/Log'),
                    s = (function () {
                        function e() {}
                        return (
                            (e.getBannerDelayTime = function (e) {
                                var t = new c();
                                if (this.isBannerDelayToggle(e)) {
                                    var i = n.default.ins().getToggle(e);
                                    if (i) {
                                        if (i.platform.includes('all')) return this.handleDelayTime(i);
                                        if (i.platform.includes('qq')) return a.default.isQQ() ? this.handleDelayTime(i) : t;
                                        if (i.platform.includes('wx')) return a.default.isWeiXin() ? this.handleDelayTime(i) : t;
                                    }
                                }
                                return t;
                            }),
                            (e.handleDelayTime = function (e) {
                                var t = new c();
                                return (t.normalDelayTime = e.extra && e.extra.normal ? e.extra.normal : 0), (t.popupDelayTime = e.extra && e.extra.popup ? e.extra.popup : 0), r.default.i('BannerDelayShowToggle===> handleDelayTime  toggle = ', e, ', delayTime = ', t), t;
                            }),
                            (e.isBannerDelayToggle = function (e) {
                                return e == o.ToggleKey.BANNER_DELAY_DAILY_ATTENDANCE || e == o.ToggleKey.BANNER_DELAY_FIGHT_RESULT || e == o.ToggleKey.BANNER_DELAY_LOTTERY_PAGE || e == o.ToggleKey.BANNER_DELAY_NORMAL_RESULT_SHOW_OFF || e == o.ToggleKey.BANNER_DELAY_RELIVE_PAGE || e == o.ToggleKey.BANNER_DELAY_REWARD_PAGE;
                            }),
                            e
                        );
                    })();
                i.default = s;
                var c = function () {
                    (this.normalDelayTime = 0), (this.popupDelayTime = 0);
                };
                (i.BannerDelayTime = c), cc._RF.pop();
            },
            {
                '../base/Log': 'Log',
                '../util/PU': 'PU',
                './ToggleBean': 'ToggleBean',
                './ToggleChecker': 'ToggleChecker',
            },
        ],
        Banner: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'f1078YEtYhKiIFjdv7nck4q', 'Banner'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../MUI/MUISprite'),
                    n = e('../../../base/G'),
                    a = e('../loader/BeginFrameLoader'),
                    r = (function (o) {
                        function e(e, t) {
                            void 0 === e && (e = null);
                            var i = o.call(this, e) || this;
                            return (i.bannerNode = null), (i.mainTitle = null), (i.subTitle = null), (i.adapterY = void 0), (i.bannerNode = t), i.addTitleLabel(), (i.imageData = a.default.getInstance().getAtlas()), (i.imageItem = a.default.getInstance().getBannerBg()), i.initRect(), i;
                        }
                        return (
                            __extends(e, o),
                            (e.prototype.initRect = function () {
                                var e = n.G.Ap.config.presentWidth - 20,
                                    t = (e * this.imageItem.rect.height) / this.imageItem.rect.width,
                                    i = 0.93 * n.G.Ap.config.presentHeight,
                                    o = (this.adapterY || i) - t;
                                this.move(10, o, e, t), this.bannerNode.setAnchorPoint(0.5, 0.5), this.bannerNode.setPosition(-n.G.Ap.config.presentWidth / 2 + 10, -n.G.Ap.config.presentHeight / 2 + o), this.bannerNode.setContentSize(e, t), this.mainTitle.node.setPosition(e / 2, t / 2 + 14), this.subTitle.node.setPosition(e / 2, t / 2 - this.mainTitle.fontSize / 2 - this.subTitle.fontSize / 2 - 14);
                            }),
                            (e.prototype.adaptPosition = function (e) {
                                (this.adapterY = e), 0 !== this.rect.height && (this.setPositionY(e - this.rect.height), this.bannerNode.setPositionY(-n.G.Ap.config.presentHeight / 2 + e - this.rect.height));
                            }),
                            (e.prototype.addTitleLabel = function () {
                                (this.mainTitle = this.createLabel()), (this.mainTitle.fontSize = 40), (this.mainTitle.lineHeight = 46), this.bannerNode.addChild(this.mainTitle.node), (this.subTitle = this.createLabel()), (this.subTitle.node.opacity = 180), (this.subTitle.fontSize = 26), (this.subTitle.lineHeight = 32), this.bannerNode.addChild(this.subTitle.node);
                            }),
                            (e.prototype.createLabel = function () {
                                var e = new cc.Node();
                                return e.setAnchorPoint(0.5, 0.5), (e.color = new cc.Color(54, 91, 114)), e.addComponent(cc.Label);
                            }),
                            (e.prototype.show = function (e, t) {
                                (this.visible = !0), (this.bannerNode.active = !0), (this.mainTitle.string = e), (this.subTitle.string = t);
                            }),
                            (e.prototype.hide = function () {
                                (this.visible = !1), (this.bannerNode.active = !1);
                            }),
                            e
                        );
                    })(o.default);
                (i.default = r), cc._RF.pop();
            },
            {
                '../../../base/G': 'G',
                '../../MUI/MUISprite': 'MUISprite',
                '../loader/BeginFrameLoader': 'BeginFrameLoader',
            },
        ],
        BaseCsvFile: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '069eaz7RN1Jspqwv1HSOUMi', 'BaseCsvFile'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.find = function (e, t) {
                            var i = this.csvGetRow(e, t);
                            if (i) {
                                var o = this.getRow();
                                if (o) return (o.mRowData = i), (o.mCsvFile = this), Object.seal(o);
                            }
                        }),
                        (t.prototype.findId = function (e) {
                            return this.find('Id', e);
                        }),
                        (t.prototype.getRow = function () {
                            return null;
                        }),
                        (t.prototype.getAllData = function () {
                            for (var e = [], t = 0, i = this.getAllDB(); t < i.length; t++) {
                                var o = i[t],
                                    n = this.getRow();
                                n && ((n.mRowData = o), (n.mCsvFile = this), e.push(n));
                            }
                            return Object.seal(e);
                        }),
                        t
                    );
                })(e('./CsvFile').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './CsvFile': 'CsvFile',
            },
        ],
        BaseVersionChecker: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'e8015zya7hD7oLctfffZ14M', 'BaseVersionChecker'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./IChecker'),
                    n = e('./VersionBean'),
                    a = e('../util/NumberUtil'),
                    r = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.onMergeServerToLocal = function (e, t) {}),
                            (t.prototype.validateData = function (e) {
                                return null != e && null != e;
                            }),
                            (t.prototype.populateServerObj = function (e) {
                                if (!e) return null;
                                var t = new n.default();
                                return (t.serverVer = o.default.populateStr(e.ver)), (t.key = o.default.populateStr(e.key)), (t.url = o.default.populateStr(e.url)), (t.md5 = o.default.populateStr(e.md5)), (t.type = o.default.populateStr(e.type)), (t.size = a.default.parseNum(e.size)), (t.enableTime = a.default.parseNum(e.enableTime)), (t.endTime = a.default.parseNum(e.endTime)), (t.platform = o.default.populateStr(e.platform)), t;
                            }),
                            (t.prototype.populateLocalObj = function (e) {
                                return n.default.parseFromJson(e);
                            }),
                            t
                        );
                    })(o.default);
                (i.default = r), cc._RF.pop();
            },
            {
                '../util/NumberUtil': 'NumberUtil',
                './IChecker': 'IChecker',
                './VersionBean': 'VersionBean',
            },
        ],
        BasicHelperCM: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '8b21bUrf2tN5qWLcVYrdM/5', 'BasicHelperCM'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../Logic/MGBasicHelper'),
                    n = e('../../../MGUtils/TypeDefinition'),
                    a = e('../LocalStorageHelplerWeb'),
                    r = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.setStorage = function (e, t) {
                                return a.LocalStorageHelperWeb.setItem(e, t), !0;
                            }),
                            (t.prototype.getStorage = function (e) {
                                return a.LocalStorageHelperWeb.getItem(e);
                            }),
                            (t.prototype.delStorage = function (e) {
                                return a.LocalStorageHelperWeb.removeItem(e), !0;
                            }),
                            (t.prototype.getLaunchParameter = function () {
                                return new n.LaunchOption();
                            }),
                            (t.prototype.navigateToMiniProgram = function (e) {}),
                            (t.prototype.readFile = function (e) {
                                e.complete && e.complete(!1, null), e.fail && e.fail(-1, null);
                            }),
                            t
                        );
                    })(o.default);
                (i.BasicHelperCM = r), cc._RF.pop();
            },
            {
                '../../../MGUtils/TypeDefinition': 'TypeDefinition',
                '../LocalStorageHelplerWeb': 'LocalStorageHelplerWeb',
                '../Logic/MGBasicHelper': 'MGBasicHelper',
            },
        ],
        BasicHelperFB: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '70e145uAo1Bgp+9vCw0nzYs', 'BasicHelperFB'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../Logic/MGBasicHelper'),
                    n = e('../../../MGUtils/TypeDefinition'),
                    a = e('../../../MGUtils/FBHelper'),
                    r = e('../LocalStorageHelplerWeb'),
                    s = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.setStorage = function (e, t) {
                                return r.LocalStorageHelperWeb.setItem(e, t), !0;
                            }),
                            (t.prototype.getStorage = function (e) {
                                return r.LocalStorageHelperWeb.getItem(e);
                            }),
                            (t.prototype.delStorage = function (e) {
                                return r.LocalStorageHelperWeb.removeItem(e), !0;
                            }),
                            (t.prototype.getLaunchParameter = function () {
                                var e = new n.LaunchOption(),
                                    t = a.FBHelper.getEntryPointData();
                                return t && (e.query = t), e;
                            }),
                            (t.prototype.readFile = function (e) {
                                e.complete && e.complete(!1, null), e.fail && e.fail(-1, null);
                            }),
                            (t.prototype.navigateToMiniProgram = function (e) {}),
                            (t.prototype.getChannelId = function () {
                                return '';
                            }),
                            t
                        );
                    })(o.default);
                (i.BasicHelperFB = s), cc._RF.pop();
            },
            {
                '../../../MGUtils/FBHelper': 'FBHelper',
                '../../../MGUtils/TypeDefinition': 'TypeDefinition',
                '../LocalStorageHelplerWeb': 'LocalStorageHelplerWeb',
                '../Logic/MGBasicHelper': 'MGBasicHelper',
            },
        ],
        BasicHelperQQ: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'ae39fislklHSYmcXVZnCo+i', 'BasicHelperQQ'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../Logic/MGBasicHelper'),
                    n = e('../../../MGUtils/QQHelper'),
                    r = e('../../../MGUtils/TypeDefinition'),
                    a = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.setStorage = function (e, t) {
                                return n.QQHelper.setStorage(e, t), !0;
                            }),
                            (t.prototype.getStorage = function (e) {
                                return n.QQHelper.getStorage(e);
                            }),
                            (t.prototype.delStorage = function (e) {
                                return n.QQHelper.delStorage(e), !0;
                            }),
                            (t.prototype.getLaunchParameter = function () {
                                var e = new r.LaunchOption(),
                                    t = GameStatusInfo.gameParam;
                                if (t) {
                                    for (var i = {}, o = ('?' === t[0] ? t.substr(1) : t).split('&'), n = 0; n < o.length; n++) {
                                        var a = o[n].split('=');
                                        i[decodeURIComponent(a[0])] = decodeURIComponent(a[1] || '');
                                    }
                                    e.query = i;
                                }
                                return (e.shareTicket = GameStatusInfo.aioType.toString()), (e.scene = GameStatusInfo.src), e;
                            }),
                            (t.prototype.readFile = function (t) {
                                try {
                                    var e = BK.FileUtil.readFile(t.filePath).readAsString();
                                    t.complete && t.complete(!0, JSON.parse(e)), t.success && t.success(JSON.parse(e));
                                } catch (e) {
                                    t.complete && t.complete(!1, null), t.fail && t.fail();
                                }
                            }),
                            (t.prototype.navigateToMiniProgram = function (e) {
                                var t = '';
                                for (var i in e.extraData) t += i + '=' + e.extraData[i] + '&';
                                '' != t && t.substr(9, t.length - 1), n.QQHelper.skipGame(parseInt(e.appId), t);
                            }),
                            (t.prototype.getChannelId = function () {
                                return '';
                            }),
                            t
                        );
                    })(o.default);
                (i.BasicHelperQQ = a), cc._RF.pop();
            },
            {
                '../../../MGUtils/QQHelper': 'QQHelper',
                '../../../MGUtils/TypeDefinition': 'TypeDefinition',
                '../Logic/MGBasicHelper': 'MGBasicHelper',
            },
        ],
        BasicHelperWX: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '42687BBJ1JBfoIp0LoM2xsG', 'BasicHelperWX'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../Logic/MGBasicHelper'),
                    n = e('../../../MGUtils/WeappHelper'),
                    s = e('../../../../scripts/business/Network/Protocol/StorageUtil'),
                    c = e('../../../../scripts/config/LSKey'),
                    a = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.setStorage = function (e, t) {
                                return n.WeappHelper.setStorageSync(e, t), !0;
                            }),
                            (t.prototype.getStorage = function (e) {
                                return n.WeappHelper.getStorageSync(e);
                            }),
                            (t.prototype.delStorage = function (e) {
                                return n.WeappHelper.removeStorageSync(e), !0;
                            }),
                            (t.prototype.getLaunchParameter = function () {
                                return n.WeappHelper.getLaunchOptionsSync();
                            }),
                            (t.prototype.readFile = function (i) {
                                n.WeappHelper.getFileSystemManager().readFile({
                                    filePath: i.filePath,
                                    encoding: i.encoding,
                                    success: function (e) {
                                        var t = JSON.parse(e.data);
                                        i.complete && i.complete(!0, t), i.success && i.success(t);
                                    },
                                    fail: function (e) {
                                        i.complete && i.complete(!1, null), i.success && i.fail();
                                    },
                                });
                            }),
                            (t.prototype.navigateToMiniProgram = function (e) {
                                n.WeappHelper.navigateToMiniProgram(e);
                            }),
                            (t.prototype.getChannelId = function () {
                                var e = s.default.read(c.default.START_UP_CHANNEL, '');
                                if (e) return e;
                                var t = wx.getLaunchOptionsSync(),
                                    i = this.getChannelByAppId(t),
                                    o = this.getChannelByExtra(t),
                                    n = this.getChannelByOther(t),
                                    a = this.getChannelBySrc(t),
                                    r = 'default';
                                return i ? (r = i) : a ? (r = a) : o ? (r = o) : n && (r = n), s.default.save(c.default.START_UP_CHANNEL, r), r;
                            }),
                            (t.prototype.getChannelByExtra = function (e) {
                                return e && e.query && e.query.channel && e.scene ? e.query.channel : null;
                            }),
                            (t.prototype.getChannelByOther = function (e) {
                                return e && e.path && 'index' != e.path && e.path.startsWith('6') ? e.path : null;
                            }),
                            (t.prototype.getChannelByAppId = function (e) {
                                return e && e.referrerInfo && e.referrerInfo.appId ? e.referrerInfo.appId : null;
                            }),
                            (t.prototype.getChannelBySrc = function (e) {
                                return e && e.query && e.query.source ? e.query.source : null;
                            }),
                            t
                        );
                    })(o.default);
                (i.BasicHelperWX = a), cc._RF.pop();
            },
            {
                '../../../../scripts/business/Network/Protocol/StorageUtil': 'StorageUtil',
                '../../../../scripts/config/LSKey': 'LSKey',
                '../../../MGUtils/WeappHelper': 'WeappHelper',
                '../Logic/MGBasicHelper': 'MGBasicHelper',
            },
        ],
        BasicHelperWeb: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '14dc2yQkhhEhLdDWUXsUQQP', 'BasicHelperWeb'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../Logic/MGBasicHelper'),
                    n = e('../../../MGUtils/TypeDefinition'),
                    a = e('../LocalStorageHelplerWeb'),
                    r = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.setStorage = function (e, t) {
                                return a.LocalStorageHelperWeb.setItem(e, t), !0;
                            }),
                            (t.prototype.getStorage = function (e) {
                                return a.LocalStorageHelperWeb.getItem(e);
                            }),
                            (t.prototype.delStorage = function (e) {
                                return a.LocalStorageHelperWeb.removeItem(e), !0;
                            }),
                            (t.prototype.getLaunchParameter = function () {
                                return new n.LaunchOption();
                            }),
                            (t.prototype.readFile = function (e) {
                                e.complete && e.complete(!1, null), e.fail && e.fail(-1, null);
                            }),
                            (t.prototype.navigateToMiniProgram = function (e) {}),
                            (t.prototype.getChannelId = function () {
                                return '';
                            }),
                            t
                        );
                    })(o.default);
                (i.BasicHelperWeb = r), cc._RF.pop();
            },
            {
                '../../../MGUtils/TypeDefinition': 'TypeDefinition',
                '../LocalStorageHelplerWeb': 'LocalStorageHelplerWeb',
                '../Logic/MGBasicHelper': 'MGBasicHelper',
            },
        ],
        BasicTouchEvent: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '98720LZMtpGz42qwrXk1s/p', 'BasicTouchEvent'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../util/SceneMusicUtil'),
                    n = (function () {
                        function e(e, t) {
                            (this.mClickCallback = e), (this.mReject = t);
                        }
                        return (
                            (e.prototype.click = function (e) {
                                var t = new Date().getTime();
                                Math.abs(t - this.mClickTime) <= 500 ? this.mReject && this.mReject() : ((this.mClickTime = t), o.default.playBtnBeats(), this.mClickCallback && this.mClickCallback(e));
                            }),
                            (e.prototype.clickBeatsLast = function (e) {
                                var t = new Date().getTime();
                                Math.abs(t - this.mClickTime) <= 500 ? this.mReject && this.mReject() : ((this.mClickTime = t), this.mClickCallback && this.mClickCallback(e), o.default.playBtnBeats());
                            }),
                            e
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../../../util/SceneMusicUtil': 'SceneMusicUtil',
            },
        ],
        BattleDataConfig: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'bdde4VAaZdKh553rHKLbcnK', 'BattleDataConfig'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = function (e, t) {
                    (this.property = e.clone()), (this.weight = t), (this.rate = 0);
                };
                i.BattleDataCandidataProperty = o;
                var n = (function () {
                    function e() {
                        (this.comboLevels = []), (this.energeLevels = []), (this.feverThreshold = 200), (this.feverDuration = 8), (this.beginningCountDown = 3), (this.playingCountDown = 30), (this.startSpeed = 0), (this.endSpeed = 0), (this.increasePecentage = 0), (this.deductPercentage = 0), (this.baseBeats = 0), (this.startPutPropertySecond = 0), (this.intervalPutPropertySecond = 0), (this.intervalRetrySecond = 0), (this.startPutPropertyRate = 0), (this.increasePutPropertyRate = 0), (this.candidateProperties = []);
                    }
                    return (
                        (e.prototype.normalizeCandidateProperties = function () {
                            for (var e = 0, t = 0, i = this.candidateProperties.length; t < i; ++t) e += this.candidateProperties[t].weight;
                            0 === e && (e = 1);
                            for (t = 0, i = this.candidateProperties.length; t < i; ++t) {
                                var o = this.candidateProperties[t];
                                o.rate = o.weight / e;
                            }
                        }),
                        (e.MIN_COMBO_NUMBER = 3),
                        (e.OBSTACLE_BLOCK_INTERVAL = 2),
                        e
                    );
                })();
                (i.BattleDataConfig = n), cc._RF.pop();
            },
            {},
        ],
        BattleDataDefines: [
            function (e, t, i) {
                'use strict';
                var o, n, a, r;
                cc._RF.push(t, '0ac9dZUY0BHR6VJEw2mKUSZ', 'BattleDataDefines'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    (o = i.BattleDataDefines || (i.BattleDataDefines = {})),
                    ((n = o.GameProgress || (o.GameProgress = {}))[(n.START = 0)] = 'START'),
                    (n[(n.END = 1)] = 'END'),
                    ((a = o.PlayerState || (o.PlayerState = {}))[(a.NORMAL = 0)] = 'NORMAL'),
                    (a[(a.FEVER = 1)] = 'FEVER'),
                    (a[(a.CONTROL = 2)] = 'CONTROL'),
                    ((r = o.TouchState || (o.TouchState = {}))[(r.COMBO = 0)] = 'COMBO'),
                    (r[(r.MISS = 1)] = 'MISS'),
                    cc._RF.pop();
            },
            {},
        ],
        BattleDataMain: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'b58ddzfyglN57vzU095VB1j', 'BattleDataMain'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./BattleDataPlayer'),
                    n = e('./BattleDataConfig'),
                    r = e('../../../base/G'),
                    a = e('../../../property/PropertyDefines'),
                    s = e('./BattleDataRunning'),
                    c = e('../../../business/DB/DBMgr'),
                    l = (function () {
                        function e(e) {
                            (this.selfData = new o.default()), (this.opponentData = new o.default()), (this.configData = new n.BattleDataConfig()), (this.runningData = new s.default()), (this.robot = e);
                        }
                        return (
                            (e.prototype.initialize = function () {
                                this.readComboInfo(), this.readMusicInfo(), this.readPutPropertyInfo(), this.robot || this.readProperties();
                            }),
                            (e.prototype.getSelf = function () {
                                return this.selfData;
                            }),
                            (e.prototype.getOpponent = function () {
                                return this.opponentData;
                            }),
                            (e.prototype.getConfig = function () {
                                return this.configData;
                            }),
                            (e.prototype.getRunning = function () {
                                return this.runningData;
                            }),
                            (e.prototype.readProperties = function () {
                                var e = r.G.Ap.state;
                                this.selfData.carryProperties.copy(e.carryProperties), e.carryProperties.clear();
                                for (var t = this.getRunning(), i = this.selfData.carryProperties.getPairs(), o = 0, n = i.length; o < n; ++o) {
                                    var a = i[o].value;
                                    t.carryPropertyCount += a.count;
                                }
                            }),
                            (e.prototype.readComboInfo = function () {
                                for (var e = c.default.Ins().getData(c.eDataBase.eDB_FightComboRule).getAllDB(), t = 0, i = e.length; t < i; ++t) {
                                    var o = e[t],
                                        n = parseInt(o[1]);
                                    NaN == n && (n = 0), this.configData.comboLevels.push(n);
                                    var a = parseFloat(o[2]);
                                    NaN == a && (a = 0), this.configData.energeLevels.push(a);
                                }
                            }),
                            (e.prototype.readMusicInfo = function () {
                                var e = r.G.Ap.state.getMission();
                                console.error('BattleDataMain  readMusicInfo, matchType=>' + e.getType()), (this.configData.beginningCountDown = e.beginningCountDown), (this.configData.playingCountDown = e.playingCountDown), (this.configData.baseBeats = e.baseBeats), (this.configData.startSpeed = e.startSpeed), (this.configData.endSpeed = e.endSpeed), (this.configData.deductPercentage = e.deductPercentage), (this.configData.increasePecentage = e.increasePecentage);
                            }),
                            (e.prototype.readPutPropertyInfo = function () {
                                (this.configData.startPutPropertySecond = 20), (this.configData.intervalPutPropertySecond = 20), (this.configData.intervalRetrySecond = 5), (this.configData.startPutPropertyRate = 0.3), (this.configData.increasePutPropertyRate = 0.1), this.configData.candidateProperties.push(new n.BattleDataCandidataProperty(new a.Property(a.PROPERTYTYPE.GAME_FOG), 1)), this.configData.candidateProperties.push(new n.BattleDataCandidataProperty(new a.Property(a.PROPERTYTYPE.GAME_OBSTACLE), 1)), this.configData.normalizeCandidateProperties();
                            }),
                            e
                        );
                    })();
                (i.default = l), cc._RF.pop();
            },
            {
                '../../../base/G': 'G',
                '../../../business/DB/DBMgr': 'DBMgr',
                '../../../property/PropertyDefines': 'PropertyDefines',
                './BattleDataConfig': 'BattleDataConfig',
                './BattleDataPlayer': 'BattleDataPlayer',
                './BattleDataRunning': 'BattleDataRunning',
            },
        ],
        BattleDataPlayer: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'aa24b2ZimJIT5R4wZVGgUDs', 'BattleDataPlayer'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../util/Dictionary'),
                    n = e('../../../property/PropertyDefines'),
                    a = e('../../../base/State'),
                    r = e('./BattleDataDefines'),
                    s = e('../../../business/Logic/GameItemsManager'),
                    c = (function () {
                        function e() {
                            this.reset();
                        }
                        return (
                            (e.prototype.reset = function () {
                                (this.state = r.BattleDataDefines.PlayerState.NORMAL), (this.touchState = r.BattleDataDefines.TouchState.COMBO), (this.comboNumber = 0), (this.maxComboNumber = 0), (this.energy = 0), (this.score = 0), (this.win = !1), (this.carryProperties = new o.Dictionary2(n.Property.compare)), (this.workingProperties = new o.Dictionary2(n.Property.compare)), (this.skinID = '');
                            }),
                            (e.prototype.addCarryProperty = function (e, t) {
                                void 0 === t && (t = 0);
                                var i = this.carryProperties.get(e);
                                null === i && (((i = new a.State_PropertyItem()).count = 0), (i.originCount = 0), this.carryProperties.put(e.clone(), i)), (i.count += t), (i.originCount += t);
                            }),
                            (e.prototype.getCarryPropertyCount = function (e) {
                                var t = this.carryProperties.get(e);
                                return null === t ? 0 : t.count;
                            }),
                            (e.prototype.removeCarryProperty = function (e) {
                                this.carryProperties.remove(e);
                            }),
                            (e.prototype.consumeCarryProperty = function (e) {
                                var t = this.carryProperties.get(e);
                                return !(null === t || t.count <= 0) && (t.count--, !0);
                            }),
                            (e.prototype.getCarryProperties = function () {
                                for (var e = [], t = this.carryProperties.getPairs(), i = 0, o = t.length; i < o; ++i) {
                                    var n = t[i].key;
                                    e.push(n.clone());
                                }
                                return e;
                            }),
                            (e.prototype.isPropertyWorking = function (e) {
                                return null !== this.workingProperties.get(e);
                            }),
                            (e.prototype.startPropertyWork = function (e, t) {
                                void 0 === t && (t = !1);
                                var i = this.workingProperties.get(n.Property);
                                null == i ? (((i = new a.State_PropertyWork()).tempory = t), this.workingProperties.put(e.clone(), i)) : console.warn('property working, type is ' + e.type);
                            }),
                            (e.prototype.accumulatePropertyWork = function (e) {
                                var t = this.workingProperties.get(n.Property);
                                null !== t ? (t.accumulation = !0) : console.warn('property is not working, type is ' + e.type);
                            }),
                            (e.prototype.stopPropertyWork = function (e) {
                                this.workingProperties.remove(e);
                            }),
                            (e.prototype.setSkinID = function (e) {
                                this.skinID = e ? s.GameItemsManager.getIns().getItemIDByIndexID(e) : '5-1-0';
                            }),
                            (e.prototype.getSkinID = function () {
                                return this.skinID;
                            }),
                            Object.defineProperty(e.prototype, 'comboNumber', {
                                get: function () {
                                    return this._comboNumber;
                                },
                                set: function (e) {
                                    e > this.maxComboNumber && (this.maxComboNumber = e), (this._comboNumber = e);
                                },
                                enumerable: !0,
                                configurable: !0,
                            }),
                            e
                        );
                    })();
                (i.default = c), cc._RF.pop();
            },
            {
                '../../../base/State': 'State',
                '../../../business/Logic/GameItemsManager': 'GameItemsManager',
                '../../../property/PropertyDefines': 'PropertyDefines',
                '../../../util/Dictionary': 'Dictionary',
                './BattleDataDefines': 'BattleDataDefines',
            },
        ],
        BattleDataRunning: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'ca0db7nIINDmJz0k+PKCdNj', 'BattleDataRunning'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = function () {
                    (this.runDuration = 0), (this.startRunTimestamp = 0), (this.backgroundTimestamp = 0), (this.waitEndTime = 0), (this.waitStartTime = 0), (this.releasePropertyCount = 0), (this.sufferPropertyCount = 0), (this.savePropertyCount = 0), (this.carryPropertyCount = 0), (this.missTimes = 0), (this.feverTimes = 0);
                };
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        BattleGameSceneViewImpl: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '425319C/nxMPoq/yuCL8n7/', 'BattleGameSceneViewImpl'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var p = e('./IBattleGameSceneView'),
                    S = e('../MUI/MUINode'),
                    v = e('../element/component/MUINumber'),
                    I = e('../element/loader/NumberFrameLoader'),
                    T = e('../MUI/MUISprite'),
                    C = e('../element/loader/GameSceneFrameLoader'),
                    o = e('./UiPropertyIconPanel'),
                    y = e('../../property/PropertyDefines'),
                    E = e('../../base/G'),
                    A = e('../animation/action/MActionFactory'),
                    P = e('../GameBus'),
                    k = e('../MUI/MUIProgressBar'),
                    M = e('../MUI/MUINineScaleSprite'),
                    h = e('../animation/action/MScaleTo'),
                    f = e('../animation/action/MSequence'),
                    n = e('../element/node/MUINodePool'),
                    c = e('../animation/action/MMoveBy'),
                    l = e('../animation/action/MFadeTo'),
                    u = e('../animation/action/MCallFunc'),
                    a = e('../atlas/SimpleAtlas'),
                    r = e('../../util/Utility'),
                    m = e('../../util/SceneMusicMgr'),
                    d = e('../element/loader/BeginFrameLoader'),
                    s = (function () {
                        function _() {
                            (this.uiBoard = null), (this.battleLayerRootNode = null), (this.waitingLabel = null), (this.fanaticalImageNode = null), (this.beginningCountDownLabel = null), (this.beginningReadyNode = null), (this.beginningGoNode = null), (this.playingCountDownLabel = null), (this.playingTimeUpNode = null), (this.selfPropertyPlayNode = null), (this.opponentPropertyPlayNode = null), (this.selfPropertyProtectPlayNode = null), (this.selfDescriptionProtectNode = null), (this.selfDescriptionNode = null), (this.selfHeadNode = null), (this.opponentHeadNode = null), (this.selfPropertyIconPanel = null), (this.opponentPropertyIconPanel = null), (this.propertyEffectNode = null), (this.propertyFogEffectNode = null), (this.enemyOfflineNode = null), (this.commonEffectNode = null), (this.topPercent = null), (this.opponentDestPosition = null), (this.selfDestPosition = null), (this.opponentRepeatAction = null), (this.opponentRepeatAttackAction = null), (this.selfFeverRepeatAction = null), (this.opponentFeverRepeatAction = null), (this.selfHeadScoreAcion = null), (this.opponentHeadScoreAcion = null), (this.selfHeadStateMissAction = null), (this.opponentHeadStateMissAction = null), (this.selfHeadStateComboAction = null), (this.opponentHeadStateComboAction = null), (this.playcountDownAction = null), (this.missEffectNodePool = null), (this.selfHeadIconAtlas = null), (this.opponentHeadIconAtlas = null), (this.selfScore = null), (this.opponentScore = null), (this.skinTipsNode = null), (this.missBackground = null), (this.feverBackground = null), (this.uiBoard = null), (this.battleLayerRootNode = null), (this.battleLayerRootNode = null), (this.beginningCountDownLabel = null), (this.beginningReadyNode = null), (this.beginningGoNode = null), (this.playingCountDownLabel = null), (this.playingTimeUpNode = null), (this.selfHeadNode = null), (this.opponentHeadNode = null), (this.selfPropertyPlayNode = null), (this.opponentPropertyPlayNode = null), (this.selfPropertyProtectPlayNode = null), (this.selfDescriptionProtectNode = null), (this.selfDescriptionNode = null), (this.propertyFogEffectNode = null), (this.propertyEffectNode = null), (this.selfPropertyIconPanel = new o.UiPropertyIconPanel()), (this.opponentPropertyIconPanel = new o.UiPropertyIconPanel()), (this.topPercent = 0.9), (this.opponentDestPosition = cc.v2(0, 0)), (this.selfDestPosition = cc.v2(0, 0)), (this.opponentRepeatAction = null), (this.opponentRepeatAttackAction = null), (this.selfFeverRepeatAction = null), (this.opponentFeverRepeatAction = null), (this.selfHeadScoreAcion = null), (this.opponentHeadScoreAcion = null), (this.selfHeadStateMissAction = null), (this.opponentHeadStateMissAction = null), (this.playcountDownAction = null), (this.commonEffectNode = null), (this.missEffectNodePool = null), (this.selfHeadIconAtlas = new a.default()), (this.opponentHeadIconAtlas = new a.default()), (this.selfScore = 0), (this.opponentScore = 0), (this.missBackground = null), (this.feverBackground = null);
                        }
                        return (
                            (_.prototype.create = function (e) {
                                (this.uiBoard = e), this.createHeadIconAtlas(), this.createBattleLayer(), this.createMissRedNode(), this.createFeverBackgroundNode(), this.createPropertyEffectNode(), this.createBattleBkg(), this.createBeginningCountDownUI(), this.createSelfHeadUI(), this.createOpponentHeadUI(), this.createPropertyPlayNode(), this.createPropertyProtectPlayNode(), this.createPlayingCountDownUI(), this.createWaitingUI(), this.createEnemyOfflineUI(), this.createCommonEffectNode(), this.createOpponentSkinEffectUI(), this.calcPropertyPlayDestPosition();
                            }),
                            (_.prototype.destroy = function () {
                                this.destroyAtlas();
                            }),
                            (_.prototype.showWaittingLabel = function (e) {
                                this.waitingLabel.getChildByIndex(0).setVisible(e), this.waitingLabel.getChildByIndex(1).setVisible(e);
                            }),
                            (_.prototype.updateWaitingLabel = function (e) {
                                this.waitingLabel.getChildByIndex(0).setVisible(!1), this.waitingLabel.getChildByIndex(1).setVisible(!1), e == p.BattleGameSceneViewWaitingType.START ? this.waitingLabel.getChildByIndex(0).setVisible(!0) : this.waitingLabel.getChildByIndex(1).setVisible(!0);
                            }),
                            (_.prototype.showBeginningCountDownLabel = function (e) {
                                this.beginningCountDownLabel.setVisible(e);
                            }),
                            (_.prototype.updateBeginningCountDownLabel = function (e) {
                                this.beginningCountDownLabel.setNumberValue(e), 0 < e && e < 4 && m.default.play(m.default.NAME_COUNT_DOWN, m.default.PATH_COUNT_DOWN, !1);
                            }),
                            (_.prototype.showBeginningReady = function (e, t) {
                                if ((this.beginningReadyNode.setVisible(e), t))
                                    if (e) {
                                        this.beginningReadyNode.setScale(1.8, 1.8), this.beginningReadyNode.setOpacity(0);
                                        var i = A.default.instance.createMScaleTo(1, 1, 0.25),
                                            o = A.default.instance.createMFadeTo(1, 0.25),
                                            n = A.default.instance.createMSpawn(i, o);
                                        P.default.getInstance().getAnimationMgr().runAction(this.beginningReadyNode, n), m.default.play(m.default.NAME_READY, m.default.PATH_READY, !1);
                                    } else {
                                        o = A.default.instance.createMFadeTo(0, 0.3);
                                        P.default.getInstance().getAnimationMgr().runAction(this.beginningReadyNode, o);
                                    }
                            }),
                            (_.prototype.showBeginningGo = function (e, t) {
                                if ((this.beginningGoNode.setVisible(e), t))
                                    if (e) {
                                        this.beginningGoNode.setScale(1.8, 1.8), this.beginningGoNode.setOpacity(0);
                                        var i = A.default.instance.createMScaleTo(1, 1, 0.25),
                                            o = A.default.instance.createMFadeTo(1, 0.25),
                                            n = A.default.instance.createMSpawn(i, o);
                                        P.default.getInstance().getAnimationMgr().runAction(this.beginningGoNode, n), m.default.play(m.default.NAME_START_GO, m.default.PATH_START_GO, !1);
                                    } else {
                                        o = A.default.instance.createMFadeTo(0, 0.3);
                                        P.default.getInstance().getAnimationMgr().runAction(this.beginningGoNode, o);
                                    }
                            }),
                            (_.prototype.showPlayingCountDownLabel = function (e) {
                                this.playingCountDownLabel.setVisible(e);
                            }),
                            (_.prototype.updatePlayingCountDownLabel = function (e) {
                                if ((this.playingCountDownLabel.setNumberValue(e), 6 == e && this.playingCountDownLabel.setNumberColor(v.NumberColor.GOSMALL), e <= 5)) {
                                    if ((m.default.play(m.default.NAME_COUNT_DOWN, m.default.PATH_COUNT_DOWN, !1), !this.playcountDownAction)) {
                                        var t = A.default.instance.createMScaleTo(1, 1, 0.3),
                                            i = A.default.instance.createMFadeTo(1, 0.3),
                                            o = A.default.instance.createMSpawn(t, i);
                                        this.playcountDownAction = o;
                                    }
                                    this.playcountDownAction.getTarget() === this.playingCountDownLabel || (this.playingCountDownLabel.setScale(1.4, 1.4), this.playingCountDownLabel.setOpacity(0), P.default.getInstance().getAnimationMgr().runAction(this.playingCountDownLabel, this.playcountDownAction));
                                }
                            }),
                            (_.prototype.showPlayingTimeup = function (e, t) {
                                if ((this.playingTimeUpNode.setVisible(e), t))
                                    if (e) {
                                        m.default.play(m.default.NAME_TIME_UP, m.default.PATH_TIME_UP, !1), this.playingTimeUpNode.setScale(1.4, 1.4), this.playingTimeUpNode.setOpacity(0);
                                        var i = A.default.instance.createMScaleTo(1, 1, 0.3),
                                            o = A.default.instance.createMFadeTo(1, 0.3),
                                            n = A.default.instance.createMSpawn(i, o);
                                        P.default.getInstance().getAnimationMgr().runAction(this.playingTimeUpNode, n);
                                    } else {
                                        P.default.getInstance().getAnimationMgr().stopTargetActions(this.playingTimeUpNode);
                                        o = A.default.instance.createMFadeTo(0, 0.3);
                                        P.default.getInstance().getAnimationMgr().runAction(this.playingTimeUpNode, o);
                                    }
                            }),
                            (_.prototype.updateHeadNodeScoreText = function (e, t) {
                                var i = this.getHeadNodeById(e),
                                    o = null;
                                switch (e) {
                                    case p.BattleGameSceneViewHeadId.SELF:
                                        if (!this.selfHeadScoreAcion) {
                                            var n = new h.default(1.25, 1.25, 0.1),
                                                a = new h.default(1.1, 1.1, 0.2),
                                                r = new f.default(n, a);
                                            this.selfHeadScoreAcion = r;
                                        }
                                        (o = this.selfHeadScoreAcion), (this.selfScore = t);
                                        break;
                                    case p.BattleGameSceneViewHeadId.OPPONENT:
                                        if (!this.opponentHeadScoreAcion) {
                                            (n = new h.default(1.25, 1.25, 0.1)), (a = new h.default(1.1, 1.1, 0.2)), (r = new f.default(n, a));
                                            this.opponentHeadScoreAcion = r;
                                        }
                                        (o = this.opponentHeadScoreAcion), (this.opponentScore = t);
                                }
                                var s = i.getChildByIndex(_.HEAD_CHILD_SCORE).getChildByIndex(0);
                                s.setNumberValue(t), o.getTarget() == s || P.default.getInstance().animationMgr.runAction(s, o);
                            }),
                            (_.prototype.updateHeadNodeStateEffect = function (e, t, i) {
                                var o = this.getHeadNodeById(e).getChildByIndex(_.HEAD_CHILD_STATE),
                                    n = o.getChildByIndex(0),
                                    a = o.getChildByIndex(1),
                                    r = o.getChildByIndex(2);
                                switch ((n.setVisible(!1), a.setVisible(!1), r.setVisible(!1), t)) {
                                    case p.BattleGameSceneViewHeadType.MISS:
                                        var s = a.getRect();
                                        o.setContentSize(s.width, s.height), a.setVisible(!0);
                                        var c = null;
                                        if (e === p.BattleGameSceneViewHeadId.SELF) {
                                            if (!this.selfHeadStateMissAction) {
                                                var l = new h.default(1.6, 1.6, 0.1),
                                                    u = new h.default(1.15, 1.15, 0.2),
                                                    d = new f.default(l, u);
                                                this.selfHeadStateMissAction = d;
                                            }
                                            c = this.selfHeadStateMissAction;
                                        } else {
                                            if (!this.opponentHeadStateMissAction) {
                                                (l = new h.default(1.6, 1.6, 0.1)), (u = new h.default(1.15, 1.15, 0.2)), (d = new f.default(l, u));
                                                this.opponentHeadStateMissAction = d;
                                            }
                                            c = this.opponentHeadStateMissAction;
                                        }
                                        c.getTarget() || P.default.getInstance().animationMgr.runAction(a, c);
                                        break;
                                    case p.BattleGameSceneViewHeadType.COMBO:
                                        o.setContentSize(181, 15), n.setVisible(!0), r.setNumberValue(i), r.setVisible(!0);
                                        c = null;
                                        if (e === p.BattleGameSceneViewHeadId.SELF) {
                                            if (!this.selfHeadStateComboAction) {
                                                (l = new h.default(1.2, 1.2, 0.1)), (u = new h.default(1, 1, 0.2)), (d = new f.default(l, u));
                                                this.selfHeadStateComboAction = d;
                                            }
                                            c = this.selfHeadStateComboAction;
                                        } else {
                                            if (!this.opponentHeadStateComboAction) {
                                                (l = new h.default(1.2, 1.2, 0.1)), (u = new h.default(1, 1, 0.2)), (d = new f.default(l, u));
                                                this.opponentHeadStateComboAction = d;
                                            }
                                            c = this.opponentHeadStateComboAction;
                                        }
                                        c.getTarget() || P.default.getInstance().animationMgr.runAction(r, c);
                                }
                            }),
                            (_.prototype.updateHeadNodeStateText = function (e, t, i) {
                                this.updateHeadNodeStateEffect(e, t, i);
                            }),
                            (_.prototype.updateHeadNodeFever = function (e, t, i, o) {
                                var n = this.getHeadNodeById(e),
                                    a = null;
                                if (e === p.BattleGameSceneViewHeadId.SELF) {
                                    if (null === this.selfFeverRepeatAction) {
                                        var r = A.default.instance.createMFadeTo(0.3, 0.333),
                                            s = A.default.instance.createMFadeTo(1, 0.333),
                                            c = A.default.instance.createMSequence(r, s);
                                        this.selfFeverRepeatAction = c;
                                    }
                                    a = this.selfFeverRepeatAction;
                                } else {
                                    if (null === this.opponentFeverRepeatAction) {
                                        (r = A.default.instance.createMFadeTo(0.3, 0.333)), (s = A.default.instance.createMFadeTo(1, 0.333)), (c = A.default.instance.createMSequence(r, s));
                                        this.opponentFeverRepeatAction = c;
                                    }
                                    a = this.opponentFeverRepeatAction;
                                }
                                var l = n.getChildByIndex(_.HEAD_CHILD_FEVER_PROGRESSBAR);
                                if (t) n.getChildByIndex(_.HEAD_CHILD_PROGRESSBAR).setVisible(!1), n.getChildByIndex(_.HEAD_CHILD_FEVER).setVisible(!0), l.setOpacity(1), l.setVisible(!0), a.getTarget() === l || P.default.getInstance().getAnimationMgr().runActionRepeat(l, a), e == p.BattleGameSceneViewHeadId.SELF && (m.default.play(m.default.NAME_FANASTICAL, m.default.PATH_FANASTICAL, !1), this.fanaticalImageNode.setVisible(!0)), e == p.BattleGameSceneViewHeadId.SELF && this.feverBackground.setVisible(!0);
                                else if (i) {
                                    n.getChildByIndex(_.HEAD_CHILD_PROGRESSBAR).setVisible(!0), n.getChildByIndex(_.HEAD_CHILD_FEVER).setVisible(!1), l.setVisible(!1), P.default.getInstance().getAnimationMgr().stopAction(a), (u = n.getChildByIndex(_.HEAD_CHILD_SCORE).getChildByIndex(1)).setVisible(!1), e == p.BattleGameSceneViewHeadId.SELF && (this.fanaticalImageNode.setVisible(!1), this.feverBackground.setVisible(!1));
                                } else {
                                    l.setProgress(1 - o);
                                    var u = n.getChildByIndex(_.HEAD_CHILD_SCORE).getChildByIndex(1),
                                        d = this.selfScore;
                                    e == p.BattleGameSceneViewHeadId.OPPONENT && (d = this.opponentScore), u.setVisible(d < 1e3);
                                }
                            }),
                            (_.prototype.updateHeadNodeEnergy = function (e, t) {
                                this.getHeadNodeById(e).getChildByIndex(_.HEAD_CHILD_PROGRESSBAR).setProgress(t);
                            }),
                            (_.prototype.updatePropertyIconPanel = function (e, t) {
                                var i = null;
                                i = e == p.BattleGameSceneViewHeadId.SELF ? this.selfPropertyIconPanel : this.opponentPropertyIconPanel;
                                var o = 0;
                                (o = t.getCarryPropertyCount(new y.Property(y.PROPERTYTYPE.GAME_AVOID))), i.avoid.root.setVisible(0 < o), i.avoid.showNormal(), (o = t.getCarryPropertyCount(new y.Property(y.PROPERTYTYPE.GAME_CONVERSION))), i.conversion.root.setVisible(0 < o), i.conversion.showNormal(), (o = t.getCarryPropertyCount(new y.Property(y.PROPERTYTYPE.GAME_FANATICAL))), i.fanatical.root.setVisible(0 < o), i.fanatical.showNormal(), i.rearrange();
                            }),
                            (_.prototype.updatePropertyIconPanelSingle = function (e, t, i) {
                                var o = null;
                                o = e == p.BattleGameSceneViewHeadId.SELF ? this.selfPropertyIconPanel : this.opponentPropertyIconPanel;
                                var n = 0;
                                i.type == y.PROPERTYTYPE.GAME_AVOID ? ((n = t.getCarryPropertyCount(new y.Property(y.PROPERTYTYPE.GAME_AVOID))), o.avoid.root.setVisible(0 < n), o.avoid.showNormal()) : i.type == y.PROPERTYTYPE.GAME_CONVERSION ? ((n = t.getCarryPropertyCount(new y.Property(y.PROPERTYTYPE.GAME_CONVERSION))), o.conversion.root.setVisible(0 < n), o.conversion.showNormal()) : i.type == y.PROPERTYTYPE.GAME_FANATICAL && ((n = t.getCarryPropertyCount(new y.Property(y.PROPERTYTYPE.GAME_FANATICAL))), o.fanatical.root.setVisible(0 < n), o.fanatical.showNormal()), o.rearrange();
                            }),
                            (_.prototype.propertyStart = function (e, t) {
                                var i = (e == p.BattleGameSceneViewHeadId.SELF ? this.selfPropertyIconPanel : this.opponentPropertyIconPanel).getProperty(t.type);
                                null != i && i.showActive();
                            }),
                            (_.prototype.propertyEnd = function (e, t) {
                                var i = (e == p.BattleGameSceneViewHeadId.SELF ? this.selfPropertyIconPanel : this.opponentPropertyIconPanel).getProperty(t.type);
                                null != i && i.showNormal();
                            }),
                            (_.prototype.showFog = function (e) {
                                if (1 == e) {
                                    this.propertyEffectNode.getRect();
                                    var t = new S.default('Fog');
                                    this.propertyEffectNode.addChild(t);
                                    var i = C.default.getInstance().getAtlas2(),
                                        o = new T.default('fog');
                                    return o.setOpacity(255), (o.imageItem = i.getItem('fog')), (o.imageData = i), o.setContentSize(E.G.Ap.config.presentWidth, E.G.Ap.config.presentHeight), o.setPosition(0, 0), t.addChild(o), void (this.propertyFogEffectNode = t);
                                }
                                null != this.propertyFogEffectNode && this.propertyFogEffectNode.removeFromParent();
                            }),
                            (_.prototype.displayReleasePropertyAction = function (e, t, i, o) {
                                var n = this;
                                if (e) {
                                    var a = C.default.getInstance().getAtlas();
                                    if ((this.opponentPropertyPlayNode.setVisible(!0), this.opponentPropertyPlayNode.setOpacity(1), this.opponentPropertyPlayNode.setScale(1, 1), this.opponentPropertyPlayNode.setImageItem(a.getItem('propertyicon' + t.type)), this.opponentPropertyPlayNode.setPosition(i.x - _.ICON_SIZE / 2, i.y - _.ICON_SIZE / 2), P.default.getInstance().getAnimationMgr().stopTargetActions(this.opponentPropertyPlayNode), null === this.opponentRepeatAction)) {
                                        var r = A.default.instance.createMScaleTo(1.2, 1.2, 0.5),
                                            s = A.default.instance.createMScaleTo(1, 1, 1),
                                            c = A.default.instance.createMSequence(r, s);
                                        this.opponentRepeatAction = c;
                                    }
                                    var l = A.default.instance.createMMoveTo(this.opponentDestPosition.x, this.opponentDestPosition.y, o),
                                        u = A.default.instance.createMCallFuncAction(function () {
                                            P.default.getInstance().getAnimationMgr().runActionRepeat(n.opponentPropertyPlayNode, n.opponentRepeatAction);
                                        }),
                                        d = A.default.instance.createMSequence(l, u);
                                    P.default.getInstance().getAnimationMgr().runAction(this.opponentPropertyPlayNode, d), (h = this.opponentHeadNode.getChildByIndex(_.HEAD_CHILD_ICON)).getChildByIndex(1).setVisible(!0), null == this.opponentRepeatAttackAction && (this.opponentRepeatAttackAction = C.default.getInstance().getAnimations('headportnit_idle')), P.default.getInstance().getAnimationMgr().stopTargetActions(h), P.default.getInstance().getAnimationMgr().runActionRepeat(h, this.opponentRepeatAttackAction), m.default.play(m.default.NAME_PROP_DROP, m.default.PATH_PROP_DROP, !1);
                                } else {
                                    if (this.opponentPropertyPlayNode.getVisible()) {
                                        P.default.getInstance().getAnimationMgr().stopTargetActions(this.opponentPropertyPlayNode);
                                        var p = A.default.instance.createMFadeTo(0, 0.3);
                                        (u = A.default.instance.createMCallFuncAction(function () {
                                            n.opponentPropertyPlayNode.setVisible(!1);
                                        })),
                                            (d = A.default.instance.createMSequence(p, u));
                                        P.default.getInstance().getAnimationMgr().runAction(this.opponentPropertyPlayNode, d);
                                    }
                                    var h;
                                    (h = this.opponentHeadNode.getChildByIndex(_.HEAD_CHILD_ICON)).getChildByIndex(1).setVisible(!1), P.default.getInstance().getAnimationMgr().stopTargetActions(h);
                                }
                            }),
                            (_.prototype.displayProtectPropertyAction = function (e, t, i) {
                                var o = this;
                                if (e) {
                                    var n = C.default.getInstance().getAtlas();
                                    this.selfPropertyProtectPlayNode.setVisible(!0), this.selfPropertyProtectPlayNode.setOpacity(0), this.selfPropertyProtectPlayNode.setScale(0, 0), this.selfPropertyProtectPlayNode.setPosition(this.selfDestPosition.x, this.selfDestPosition.y), this.selfPropertyProtectPlayNode.setImageItem(n.getItem('propertyicon' + t.type)), P.default.getInstance().getAnimationMgr().stopTargetActions(this.selfPropertyProtectPlayNode);
                                    var a = A.default.instance.createMScaleTo(1, 1, i),
                                        r = A.default.instance.createMFadeTo(1, i),
                                        s = A.default.instance.createMSpawn(a, r);
                                    P.default.getInstance().getAnimationMgr().runAction(this.selfPropertyProtectPlayNode, s);
                                    var c = A.default.instance.createMDelayAction(2),
                                        l = A.default.instance.createMCallFuncAction(function () {
                                            o.displayProtectPropertyAction(!1, null, E.G.Ap.config.releasePropertyAnimDuration);
                                        }),
                                        u = A.default.instance.createMSequence(c, l);
                                    P.default.getInstance().getAnimationMgr().runAction(this.selfPropertyProtectPlayNode, u), this.selfDescriptionProtectNode.setVisible(!1);
                                    var d = A.default.instance.createMDelayAction(i),
                                        p = A.default.instance.createMCallFuncAction(function () {
                                            o.selfDescriptionProtectNode.setVisible(!0);
                                        }),
                                        h = A.default.instance.createMSequence(d, p);
                                    P.default.getInstance().getAnimationMgr().runAction(this.selfDescriptionProtectNode, h);
                                    var f = C.default.getInstance().getAtlas();
                                    if (t.type == y.PROPERTYTYPE.GAME_AVOID) {
                                        (this.selfDescriptionProtectNode.imageData = f), (this.selfDescriptionProtectNode.imageItem = f.getItem('protect_attack'));
                                        var m = this.selfDescriptionProtectNode.imageItem.rect.width,
                                            g = this.selfDescriptionProtectNode.imageItem.rect.height;
                                        this.selfDescriptionProtectNode.move((-1 * (m - this.selfPropertyProtectPlayNode.getRect().width)) / 2, -1 * g, m, g);
                                    } else if (t.type == y.PROPERTYTYPE.GAME_CONVERSION) {
                                        (this.selfDescriptionProtectNode.imageData = f), (this.selfDescriptionProtectNode.imageItem = f.getItem('protect_miss'));
                                        (m = this.selfDescriptionProtectNode.imageItem.rect.width), (g = this.selfDescriptionProtectNode.imageItem.rect.height);
                                        this.selfDescriptionProtectNode.move((-1 * (m - this.selfPropertyProtectPlayNode.getRect().width)) / 2, -1 * g, m, g);
                                    } else {
                                        (this.selfDescriptionProtectNode.imageData = f), (this.selfDescriptionProtectNode.imageItem = f.getItem('protect_fanatical'));
                                        (m = this.selfDescriptionProtectNode.imageItem.rect.width), (g = this.selfDescriptionProtectNode.imageItem.rect.height);
                                        this.selfDescriptionProtectNode.move((-1 * (m - this.selfPropertyProtectPlayNode.getRect().width)) / 2, -1 * g, m, g);
                                    }
                                } else if (this.selfPropertyProtectPlayNode.getVisible()) {
                                    P.default.getInstance().getAnimationMgr().stopTargetActions(this.selfPropertyProtectPlayNode);
                                    (r = A.default.instance.createMFadeTo(0, i)),
                                        (p = A.default.instance.createMCallFuncAction(function () {
                                            o.selfPropertyProtectPlayNode.setVisible(!1);
                                        })),
                                        (s = A.default.instance.createMSequence(r, p));
                                    P.default.getInstance().getAnimationMgr().runAction(this.selfPropertyProtectPlayNode, s);
                                }
                            }),
                            (_.prototype.displaySufferPropertyAction = function (e, t, i) {
                                var o = this;
                                if (e) {
                                    var n = C.default.getInstance().getAtlas();
                                    this.selfPropertyPlayNode.setVisible(!0), this.selfPropertyPlayNode.setOpacity(1), this.selfPropertyPlayNode.setScale(1, 1), this.selfPropertyPlayNode.setImageItem(n.getItem('propertyicon' + t.type)), this.selfPropertyPlayNode.setPosition(this.opponentDestPosition.x, this.opponentDestPosition.y), P.default.getInstance().getAnimationMgr().stopTargetActions(this.selfPropertyPlayNode);
                                    A.default.instance.createMScaleTo(1, 1, i);
                                    var a = A.default.instance.createMFadeTo(1, i),
                                        r = A.default.instance.createMMoveTo(this.selfDestPosition.x, this.selfDestPosition.y, i),
                                        s = A.default.instance.createMSpawn(r);
                                    P.default.getInstance().getAnimationMgr().runAction(this.selfPropertyPlayNode, s), this.selfDescriptionNode.setVisible(!1);
                                    var c = A.default.instance.createMDelayAction(i),
                                        l = A.default.instance.createMCallFuncAction(function () {
                                            o.selfDescriptionNode.setVisible(!0);
                                        }),
                                        u = A.default.instance.createMSequence(c, l);
                                    P.default.getInstance().getAnimationMgr().runAction(this.selfDescriptionNode, u);
                                    var d = C.default.getInstance().getAtlas();
                                    if ((m.default.play(m.default.NAME_PROP_IN, m.default.PATH_PROP_IN, !1), t.type == y.PROPERTYTYPE.GAME_FANATICAL)) {
                                        (this.selfDescriptionNode.imageData = d), (this.selfDescriptionNode.imageItem = d.getItem('occur_fanatical'));
                                        var p = this.selfDescriptionNode.imageItem.rect.width,
                                            h = this.selfDescriptionNode.imageItem.rect.height;
                                        this.selfDescriptionNode.move((-1 * (p - this.selfPropertyPlayNode.getRect().width)) / 2, -1 * h, p, h);
                                    } else if (t.type == y.PROPERTYTYPE.GAME_FOG) {
                                        (this.selfDescriptionNode.imageData = d), (this.selfDescriptionNode.imageItem = d.getItem('occur_fog'));
                                        (p = this.selfDescriptionNode.imageItem.rect.width), (h = this.selfDescriptionNode.imageItem.rect.height);
                                        this.selfDescriptionNode.move((-1 * (p - this.selfPropertyPlayNode.getRect().width)) / 2, -1 * h, p, h);
                                    } else {
                                        (this.selfDescriptionNode.imageData = d), (this.selfDescriptionNode.imageItem = d.getItem('occur_black'));
                                        (p = this.selfDescriptionNode.imageItem.rect.width), (h = this.selfDescriptionNode.imageItem.rect.height);
                                        this.selfDescriptionNode.move((-1 * (p - this.selfPropertyPlayNode.getRect().width)) / 2, -1 * h, p, h);
                                    }
                                } else if (this.selfPropertyPlayNode.getVisible()) {
                                    P.default.getInstance().getAnimationMgr().stopTargetActions(this.selfPropertyPlayNode);
                                    (a = A.default.instance.createMFadeTo(0, i)),
                                        (l = A.default.instance.createMCallFuncAction(function () {
                                            o.selfPropertyPlayNode.setVisible(!1);
                                        })),
                                        (s = A.default.instance.createMSequence(a, l));
                                    P.default.getInstance().getAnimationMgr().runAction(this.selfPropertyPlayNode, s);
                                }
                            }),
                            (_.prototype.displayMissingEffect = function (e, t) {
                                if (this.missEffectNodePool) {
                                    var i = this.missEffectNodePool.get(null, !0);
                                    if (i) {
                                        var o = i.getRect();
                                        i.setPosition(e - o.width / 2, t);
                                        var n = i.getUserData();
                                        n && null === n.getTarget() && P.default.getInstance().getAnimationMgr().runAction(i, n);
                                    }
                                }
                            }),
                            (_.prototype.showMissBackground = function (e, t) {
                                var i = this;
                                if (e == p.BattleGameSceneViewHeadId.SELF) {
                                    this.missBackground.setVisible(!0), this.missBackground.setOpacity(1);
                                    var o = A.default.instance.createMFadeTo(0, 0.5),
                                        n = A.default.instance.createMSpawn(o);
                                    P.default.getInstance().getAnimationMgr().runAction(this.missBackground, n);
                                    var a = A.default.instance.createMDelayAction(t),
                                        r = A.default.instance.createMCallFuncAction(function () {
                                            i.missBackground.setVisible(!1);
                                        }),
                                        s = A.default.instance.createMSequence(a, r);
                                    P.default.getInstance().getAnimationMgr().runAction(this.missBackground, s);
                                }
                            }),
                            (_.prototype.showEnemyOfflineTips = function (e) {
                                this.enemyOfflineNode.setVisible(e);
                            }),
                            (_.prototype.showOpponentSkinTips = function (e) {
                                var t = this,
                                    i = d.default.getInstance().getAtlas(),
                                    o = new T.default('tips');
                                o.setVisible(!0), o.setOpacity(255), (o.imageData = i), (o.imageItem = i.getItem(e)), o.move(23, 23, o.imageItem.rect.width, o.imageItem.rect.height), this.skinTipsNode.addChild(o), this.skinTipsNode.setVisible(!0), this.skinTipsNode.setScale(0, 0);
                                var n = A.default.instance.createMScaleTo(1.1, 1.1, 0.2),
                                    a = A.default.instance.createMScaleTo(1, 1, 0.01),
                                    r = A.default.instance.createMScaleTo(0, 0, 0.2),
                                    s = A.default.instance.createMDelayAction(2),
                                    c = A.default.instance.createMSequence(n, a);
                                P.default.getInstance().getAnimationMgr().runAction(this.skinTipsNode, c);
                                var l = A.default.instance.createMCallFuncAction(function () {
                                        t.skinTipsNode.setVisible(!1);
                                    }),
                                    u = A.default.instance.createMSequence(s, r, l);
                                P.default.getInstance().getAnimationMgr().runAction(this.skinTipsNode, u);
                            }),
                            (_.prototype.createBattleLayer = function () {
                                var e = this.uiBoard.getRootNode().getChildByName('propertiesEffectNode'),
                                    t = this.uiBoard.getRootNode().getChildIndex(e);
                                (this.battleLayerRootNode = new S.default()), this.uiBoard.getRootNode().insertChild(t, this.battleLayerRootNode);
                            }),
                            (_.prototype.createBattleBkg = function () {
                                var e = C.default.getInstance().getAtlas(),
                                    t = new T.default('BattleBkg');
                                t.setVisible(!0), t.setOpacity(255), (t.imageData = e), (t.imageItem = e.getItem('battlegamebkg')), t.move(0, this.uiBoard.getHeight() * this.topPercent - 114, 720, 114), this.battleLayerRootNode.addChild(t);
                            }),
                            (_.prototype.createWaitingUI = function () {
                                var e = C.default.getInstance().getAtlas(),
                                    t = new S.default('WatingLabelNode');
                                t.move(this.uiBoard.getWidth() / 2, this.uiBoard.getHeight() / 2, 200, 24);
                                var i = new S.default('WatingLabelStart');
                                i.setVisible(!1), t.addChild(i);
                                var o = new S.default('WatingLabelEnd');
                                o.setVisible(!1), t.addChild(o);
                                var n = new T.default('WatingLabelStart1');
                                (n.imageData = e), (n.imageItem = e.getItem('player_start_1')), n.move(0, 0, n.imageItem.rect.width, n.imageItem.rect.height), i.addChild(n);
                                var a = new T.default('WatingLabelStart2');
                                (a.imageData = e), (a.imageItem = e.getItem('player_start_2')), a.move(n.imageItem.rect.width, 0, a.imageItem.rect.width, a.imageItem.rect.height), i.addChild(a), i.move((-1 * (n.imageItem.rect.width + a.imageItem.rect.width)) / 2, 0, 192, 24);
                                var r = new T.default('WatingLabelEnd1');
                                (r.imageData = e), (r.imageItem = e.getItem('player_end_1')), r.move(0, 0, r.imageItem.rect.width, r.imageItem.rect.height), o.addChild(r);
                                var s = new T.default('WatingLabelEnd2');
                                (s.imageData = e), (s.imageItem = e.getItem('player_start_2')), s.move(r.imageItem.rect.width, 0, s.imageItem.rect.width, s.imageItem.rect.height), o.addChild(s), o.move((-1 * (r.imageItem.rect.width + s.imageItem.rect.width)) / 2, 0, 192, 24), this.battleLayerRootNode.addChild(t), (this.waitingLabel = t);
                            }),
                            (_.prototype.createEnemyOfflineUI = function () {
                                var e = C.default.getInstance().getAtlas(),
                                    t = new T.default('Offline');
                                t.setVisible(!1), t.setOpacity(255), (t.imageData = e), (t.imageItem = e.getItem('enemyOffline')), t.move(this.uiBoard.getWidth() / 2 - 190, this.uiBoard.getHeight() / 2 - 57, t.imageItem.rect.width, t.imageItem.rect.height), this.battleLayerRootNode.addChild(t), (this.enemyOfflineNode = t);
                            }),
                            (_.prototype.createBeginningCountDownUI = function () {
                                var e = C.default.getInstance().getAtlas(),
                                    t = new T.default('ReadyGo');
                                t.setVisible(!1), t.setOpacity(255), (t.imageData = e), (t.imageItem = e.getItem('ready')), t.move(this.uiBoard.getWidth() / 2 - 267 + 55, this.uiBoard.getHeight() / 2 - 57, 423, 116), this.battleLayerRootNode.addChild(t), (this.beginningReadyNode = t);
                                var i = new T.default('BeginningGO');
                                i.setVisible(!1), i.setOpacity(255), (i.imageData = e), (i.imageItem = e.getItem('go')), i.move(this.uiBoard.getWidth() / 2 - 133.5, this.uiBoard.getHeight() / 2 - 57, 267, 116), this.battleLayerRootNode.addChild(i), (this.beginningGoNode = i);
                            }),
                            (_.prototype.createPlayingCountDownUI = function () {
                                var e = new v.default(I.default.getInstance().getAtlas(), 3, 'PlayingCoundDownLabel');
                                e.setNumberColor(v.NumberColor.YELLOWSMALL), e.setNumberSize(40, 55), e.setHAlineType(v.default.HCENTER, !0), e.move(this.uiBoard.getWidth() / 2 - 200, this.uiBoard.getHeight() * this.topPercent - 55 - 15 - 1, 400, 55), e.setNumberValue(180), e.setVisible(!1), this.battleLayerRootNode.addChild(e), (this.playingCountDownLabel = e);
                                var t = C.default.getInstance().getAtlas(),
                                    i = new T.default('PlayingTimeUp');
                                i.setVisible(!1), i.setOpacity(255), (i.imageData = t), (i.imageItem = t.getItem('timeup')), i.move(this.uiBoard.getWidth() / 2 - 229, this.uiBoard.getHeight() / 2 - 57, 458, 122), this.battleLayerRootNode.addChild(i), (this.playingTimeUpNode = i);
                            }),
                            (_.prototype.createMissRedNode = function () {
                                var e = C.default.getInstance().getAtlas2(),
                                    t = new T.default('missRedNode');
                                t.setVisible(!1), t.setOpacity(255), (t.imageData = e), (t.imageItem = e.getItem('miss_red')), t.move(0, 0, this.uiBoard.getWidth(), this.uiBoard.getHeight()), this.battleLayerRootNode.addChild(t), (this.missBackground = t);
                            }),
                            (_.prototype.createFeverBackgroundNode = function () {
                                var e = C.default.getInstance().getAtlas2(),
                                    t = new M.default('feverBackgroundNode');
                                t.setVisible(!1), t.setOpacity(255), (t.imageData = e), (t.imageItem = e.getItem('fever_background')), t.setInset(80, 80, 80, 80), t.move(0, 0, this.uiBoard.getWidth(), this.uiBoard.getHeight()), this.battleLayerRootNode.addChild(t), (this.feverBackground = t);
                            }),
                            (_.prototype.createPropertyEffectNode = function () {
                                (this.propertyEffectNode = new S.default('Propertyeffect')), this.battleLayerRootNode.addChild(this.propertyEffectNode);
                            }),
                            (_.prototype.createOpponentHeadUI = function () {
                                var n = C.default.getInstance().getAtlas(),
                                    e = new S.default('SelfHeadUI');
                                e.move(this.uiBoard.getWidth(), this.uiBoard.getHeight() * this.topPercent, 0, 0);
                                var t = new S.default('headIconNode');
                                t.move(-101, -97, 80, 80);
                                var i = new T.default('001_scene1');
                                (i.imageData = n), (i.imageItem = n.getItem('001_scene1')), i.move(-100, -25, 1.2 * i.imageItem.rect.width, 1.2 * i.imageItem.rect.height), i.setVisible(!1);
                                var o = new T.default('002_headPortrit');
                                (o.imageData = n), (o.imageItem = n.getItem('avatar_default')), this.opponentHeadIconAtlas && ((o.imageData = this.opponentHeadIconAtlas), (o.imageItem = this.opponentHeadIconAtlas.getItem('full'))), o.move(0, 0, 80, 80), t.addChild(o), t.addChild(i), e.addChild(t);
                                var a = new S.default('scoreNode'),
                                    r = new v.default(I.default.getInstance().getAtlas(), 4, 'ScoreLabel');
                                r.setScale(1.1), r.setNumberColor(v.NumberColor.LIGHTYELLOW), r.setNumberSize(35, 39), r.move(-122, -50, 0, 39), r.setHAlineType(v.default.HRIGHT, !0), r.setNumberValue(0);
                                var s = new T.default('scoreMultiple'),
                                    c = C.default.getInstance().getAtlas();
                                (s.imageData = c), (s.imageItem = c.getItem('x2_yellow'));
                                var l = r.getPosition().y;
                                s.move(-310, l, s.imageItem.rect.width, s.imageItem.rect.height), s.setVisible(!1), a.addChild(r), a.addChild(s), e.addChild(a);
                                var u = new S.default('stateNode');
                                u.move(-262, -101, 181, 15);
                                var d = C.default.getInstance().getAtlas(),
                                    p = new T.default('displayComboNode');
                                (p.imageData = d), (p.imageItem = d.getItem('combo')), p.move(0, 0, 78, 21), p.setVisible(!1), u.addChild(p);
                                var h = new T.default('displayMissNode');
                                (h.imageData = d), (h.imageItem = d.getItem('miss_small')), h.move(80, 0, 50, 20), h.setVisible(!1), u.addChild(h);
                                var f = new v.default(I.default.getInstance().getAtlas(), 4, 'displayNumberNode');
                                f.setNumberColor(v.NumberColor.COMBO), f.setNumberSize(16, 20), f.setHAlineType(v.default.HLEFT, !0), f.setShowSign(!0), f.move(p.getRect().width + 4, 0, 50, 11), f.setVisible(!1), u.addChild(f), e.addChild(u);
                                var m = new M.default('FeverNode');
                                m.setVisible(!1), m.setOpacity(255), (m.imageData = n), (m.imageItem = n.getItem('fever_progress_out_light')), m.move(-310, -78, 197, 27), m.setInset(11, 0, 11, 0), e.addChild(m);
                                var g = function (e) {
                                        var t = new M.default('bg');
                                        (t.imageData = n), (t.imageItem = n.getItem('red_progress_bg')), t.setInset(3, 0, 3, 0), t.move(0, 0, 181, 12), e.addChild(t);
                                        var i = new M.default('bar');
                                        (i.imageData = n), (i.imageItem = n.getItem('red_progress_bar')), i.setInset(4, 0, 4, 0), i.move(0, 0, 100, 12), e.addChild(i);
                                        var o = new T.default('light');
                                        (o.imageData = n), (o.imageItem = n.getItem('red_progress_header')), o.move(0, 1, 8, 12), e.addChild(o);
                                    },
                                    _ = function (e, t) {
                                        var i = e.getChildByIndex(1),
                                            o = e.getChildByIndex(2);
                                        if (0 === t) i.setVisible(!1), o.setVisible(!1);
                                        else {
                                            var n = 10 + 171 * t;
                                            i.setVisible(!0), i.move(181 - n, 0, n, 12), i.calcNineParam(), o.setVisible(!0), o.move(181 - n, 1, 8, 11);
                                        }
                                    };
                                (y = new k.default(g, _, 'ProgressBar')).move(-302, -70, 181, 12), y.setProgress(0), e.addChild(y);
                                var y;
                                (g = function (e) {
                                    var t = new M.default('bg');
                                    (t.imageData = n), (t.imageItem = n.getItem('fever_progress_bg')), t.setInset(3, 0, 3, 0), t.move(0, 0, 181, 12), e.addChild(t);
                                    var i = new M.default('bar');
                                    (i.imageData = n), (i.imageItem = n.getItem('fever_progress_bar')), i.setInset(4, 0, 4, 0), i.move(0, 0, 100, 12), e.addChild(i);
                                }),
                                    (_ = function (e, t) {
                                        var i = e.getChildByIndex(1);
                                        if (0 === t) i.setVisible(!1);
                                        else {
                                            var o = 10 + 171 * t;
                                            i.setVisible(!0), i.move(181 - o, 0, o, 12), i.calcNineParam();
                                        }
                                    });
                                (y = new k.default(g, _, 'FeverProgressBar')).move(-302, -70, 181, 12), y.setProgress(0), y.setVisible(!1), e.addChild(y), this.battleLayerRootNode.addChild(e), (this.opponentHeadNode = e), this.opponentPropertyIconPanel.create(), this.opponentHeadNode.addChild(this.opponentPropertyIconPanel.root), this.opponentPropertyIconPanel.root.setPosition(-47, -155);
                            }),
                            (_.prototype.createSelfHeadUI = function () {
                                var n = C.default.getInstance().getAtlas(),
                                    e = new S.default('OpponentHeadUI');
                                e.move(0, this.uiBoard.getHeight() * this.topPercent, 0, 0);
                                var t = new T.default('Icon');
                                t.setVisible(!0), t.setOpacity(255), (t.imageData = n), (t.imageItem = n.getItem('avatar_default')), t.move(22, -97, _.ICON_SIZE, _.ICON_SIZE), e.addChild(t), this.selfHeadIconAtlas && ((t.imageData = this.selfHeadIconAtlas), (t.imageItem = this.selfHeadIconAtlas.getItem('full')));
                                var i = new S.default('scoreNode'),
                                    o = new v.default(I.default.getInstance().getAtlas(), 4, 'ScoreLabel');
                                o.setScale(1.1), o.setNumberColor(v.NumberColor.LIGHTBLUE), o.setNumberSize(35, 39), o.move(124, -50, 0, 39), o.setHAlineType(v.default.HLEFT, !0), o.setNumberValue(0), i.addChild(o);
                                var a = new T.default('scoreMultiple'),
                                    r = C.default.getInstance().getAtlas();
                                (a.imageData = r), (a.imageItem = r.getItem('x2_green'));
                                var s = o.getPosition().y;
                                a.move(262, s, a.imageItem.rect.width, a.imageItem.rect.height), a.setVisible(!1), i.addChild(a), e.addChild(i);
                                var c = new S.default('stateNode');
                                c.move(124, -103, 181, 15);
                                var l = C.default.getInstance().getAtlas(),
                                    u = new T.default('displayComboNode');
                                (u.imageData = l), (u.imageItem = l.getItem('combo')), u.move(0, 0, 78, 21), u.setVisible(!1), c.addChild(u);
                                var d = new T.default('displayMissNode');
                                (d.imageData = l), (d.imageItem = l.getItem('miss_small')), d.move(9, 0, 50, 20), d.setVisible(!1), c.addChild(d);
                                var p = new v.default(I.default.getInstance().getAtlas(), 4, 'displayNumberNode');
                                p.setNumberColor(v.NumberColor.COMBO), p.setNumberSize(16, 20), p.setHAlineType(v.default.HLEFT, !0), p.setShowSign(!0), p.move(u.getRect().width + 4, 0, 50, 11), p.setVisible(!1), c.addChild(p), e.addChild(c);
                                var h = new M.default('FeverNode');
                                h.setVisible(!1), h.setOpacity(255), (h.imageData = n), (h.imageItem = n.getItem('fever_progress_out_light')), h.move(113, -78, 197, 27), h.setInset(11, 0, 11, 0), e.addChild(h);
                                var f = function (e) {
                                        var t = new M.default('bg');
                                        (t.imageData = n), (t.imageItem = n.getItem('blue_progress_bg')), t.setInset(3, 0, 3, 0), t.move(0, 0, 181, 12), e.addChild(t);
                                        var i = new M.default('bar');
                                        (i.imageData = n), (i.imageItem = n.getItem('blue_progress_bar')), i.setInset(4, 0, 4, 0), i.move(0, 0, 100, 12), e.addChild(i);
                                        var o = new T.default('light');
                                        (o.imageData = n), (o.imageItem = n.getItem('blue_progress_header')), o.move(0, 0, 8, 12), e.addChild(o);
                                    },
                                    m = function (e, t) {
                                        var i = e.getChildByIndex(1),
                                            o = e.getChildByIndex(2);
                                        if (0 === t) i.setVisible(!1), o.setVisible(!1);
                                        else {
                                            var n = 10 + 171 * t;
                                            i.setVisible(!0), i.move(0, 0, n, 12), i.calcNineParam(), o.setVisible(!0), o.move(n - 8, 1, 8, 11);
                                        }
                                    };
                                (g = new k.default(f, m, 'ProgressBar')).move(121, -70, 181, 12), g.setProgress(0), e.addChild(g);
                                var g;
                                (f = function (e) {
                                    var t = new M.default('bg');
                                    (t.imageData = n), (t.imageItem = n.getItem('fever_progress_bg')), t.setInset(3, 0, 3, 0), t.move(0, 0, 181, 12), e.addChild(t);
                                    var i = new M.default('bar');
                                    (i.imageData = n), (i.imageItem = n.getItem('fever_progress_bar')), i.setInset(4, 0, 4, 0), i.move(0, 0, 100, 12), e.addChild(i);
                                }),
                                    (m = function (e, t) {
                                        var i = e.getChildByIndex(1);
                                        if (0 === t) i.setVisible(!1);
                                        else {
                                            var o = 10 + 171 * t;
                                            i.setVisible(!0), i.move(0, 0, o, 12), i.calcNineParam();
                                        }
                                    });
                                (g = new k.default(f, m, 'ProgressBar')).move(121, -70, 181, 12), g.setProgress(0), g.setVisible(!1), e.addChild(g), this.battleLayerRootNode.addChild(e), (this.selfHeadNode = e), this.selfPropertyIconPanel.create(), this.selfHeadNode.addChild(this.selfPropertyIconPanel.root), this.selfPropertyIconPanel.root.setPosition(47, -155);
                            }),
                            (_.prototype.getHeadNodeById = function (e) {
                                return e === p.BattleGameSceneViewHeadId.SELF ? this.selfHeadNode : this.opponentHeadNode;
                            }),
                            (_.prototype.createPropertyPlayNode = function () {
                                var e = new S.default('PropertyIconPlay');
                                e.move(0, 0, 0, 0), this.battleLayerRootNode.addChild(e);
                                var t = C.default.getInstance().getAtlas();
                                (i = new T.default('PropertyIconPlaySelf')).setVisible(!1), i.setOpacity(255), (i.imageData = t), (i.imageItem = t.getItem('propertyicon29')), i.move(0, 0, _.ICON_SIZE, _.ICON_SIZE), e.addChild(i), (this.selfPropertyPlayNode = i);
                                var i,
                                    o = new T.default('DescriptionNode');
                                o.setVisible(!1), o.setOpacity(255), this.selfPropertyPlayNode.addChild(o), (this.selfDescriptionNode = o), (i = new T.default('PropertyIconPlayOpponent')).setVisible(!1), i.setOpacity(255), (i.imageData = t), (i.imageItem = t.getItem('propertyicon29')), i.move(0, 0, _.ICON_SIZE, _.ICON_SIZE), e.addChild(i), (this.opponentPropertyPlayNode = i);
                                var n = C.default.getInstance().getAtlas(),
                                    a = new T.default('fanaticalNode');
                                (a.imageData = n), (a.imageItem = n.getItem('fanatical_multiple')), a.move(this.uiBoard.getWidth() / 2 - a.imageItem.rect.width / 2, this.uiBoard.getHeight() / 2, a.imageItem.rect.width, a.imageItem.rect.height), a.setVisible(!1), this.battleLayerRootNode.addChild(a), (this.fanaticalImageNode = a);
                            }),
                            (_.prototype.createPropertyProtectPlayNode = function () {
                                var e = new S.default('PropertyProtectedIconPlay');
                                e.move(0, 0, 0, 0), this.battleLayerRootNode.addChild(e);
                                var t = C.default.getInstance().getAtlas(),
                                    i = new T.default('PropertyIconProtectedPlaySelf');
                                i.setVisible(!1), i.setOpacity(255), (i.imageData = t), (i.imageItem = t.getItem('propertyicon29')), i.move(0, 0, _.ICON_SIZE, _.ICON_SIZE), e.addChild(i), (this.selfPropertyProtectPlayNode = i);
                                var o = new T.default('DescriptionNode');
                                o.setVisible(!1), o.setOpacity(255), this.selfPropertyProtectPlayNode.addChild(o), (this.selfDescriptionProtectNode = o);
                            }),
                            (_.prototype.calcPropertyPlayDestPosition = function () {
                                (this.selfDestPosition.x = (this.uiBoard.getWidth() - _.ICON_SIZE) / 2), (this.selfDestPosition.y = this.uiBoard.getHeight() * this.topPercent - 300), (this.opponentDestPosition.x = this.uiBoard.getWidth() - _.ICON_SIZE - 22), (this.opponentDestPosition.y = this.uiBoard.getHeight() * this.topPercent - 97);
                            }),
                            (_.prototype.createCommonEffectNode = function () {
                                var e = new S.default('CommonEffectNode');
                                e.move(0, 0, 0, 0),
                                    this.battleLayerRootNode.addChild(e),
                                    (this.commonEffectNode = e),
                                    (this.missEffectNodePool = new n.default(
                                        this.commonEffectNode,
                                        function (e, t) {
                                            var i = C.default.getInstance().getAtlas(),
                                                o = new T.default('MissingEffect');
                                            o.setVisible(!1), o.setOpacity(255), (o.imageData = i), (o.imageItem = i.getItem('miss')), o.move(0, 0, 217, 68), o.setScale(0.75, 0.75), e.addChild(o);
                                            var n = new c.default(0, 100, 0.3),
                                                a = new l.default(0, 0.3),
                                                r = new u.default(function () {
                                                    t.put(o);
                                                }),
                                                s = new f.default(n, a, r);
                                            return o.setUserData(s), o;
                                        },
                                        function (e, t) {
                                            e && e.setOpacity(1);
                                        },
                                    ));
                            }),
                            (_.prototype.createOpponentSkinEffectUI = function () {
                                var e = C.default.getInstance().getAtlas();
                                (this.skinTipsNode = new S.default('SkinTips')), this.skinTipsNode.setVisible(!1), this.skinTipsNode.move(this.uiBoard.getWidth() - 290, this.uiBoard.getHeight() * this.topPercent - 210, 267, 104), this.battleLayerRootNode.addChild(this.skinTipsNode);
                                var t = new M.default('BG');
                                t.setVisible(!0), t.setOpacity(255), t.move(0, 0, 267, 104), (t.imageData = e), (t.imageItem = e.getItem('SkinLabelBG')), t.setInset(5, 24, 30, 25), this.skinTipsNode.addChild(t);
                            }),
                            (_.prototype.createHeadIconAtlas = function () {
                                this.destroyAtlas();
                                var e = E.G.Ap.data.userAvatarIcon;
                                e && ((this.selfHeadIconAtlas = new a.default(e)), this.selfHeadIconAtlas.loadCanvas(e), this.selfHeadIconAtlas.addItem('full', new r.Utility.Rect(0, 0, e.width, e.height), null));
                                var t = E.G.Ap.data.opponentAvatarIcon;
                                t && ((this.opponentHeadIconAtlas = new a.default(t)), this.opponentHeadIconAtlas.loadCanvas(t), this.opponentHeadIconAtlas.addItem('full', new r.Utility.Rect(0, 0, t.width, t.height), null));
                            }),
                            (_.prototype.destroyAtlas = function () {
                                this.selfHeadIconAtlas && (this.selfHeadIconAtlas.onDestroy(), (this.selfHeadIconAtlas = null)), this.opponentHeadIconAtlas && (this.opponentHeadIconAtlas.onDestroy(), (this.opponentHeadIconAtlas = null));
                            }),
                            (_.HEAD_CHILD_START = 0),
                            (_.HEAD_CHILD_ICON = _.HEAD_CHILD_START++),
                            (_.HEAD_CHILD_SCORE = _.HEAD_CHILD_START++),
                            (_.HEAD_CHILD_STATE = _.HEAD_CHILD_START++),
                            (_.HEAD_CHILD_FEVER = _.HEAD_CHILD_START++),
                            (_.HEAD_CHILD_PROGRESSBAR = _.HEAD_CHILD_START++),
                            (_.HEAD_CHILD_FEVER_PROGRESSBAR = _.HEAD_CHILD_START++),
                            (_.ICON_SIZE = 80),
                            _
                        );
                    })();
                (i.default = s), cc._RF.pop();
            },
            {
                '../../base/G': 'G',
                '../../property/PropertyDefines': 'PropertyDefines',
                '../../util/SceneMusicMgr': 'SceneMusicMgr',
                '../../util/Utility': 'Utility',
                '../GameBus': 'GameBus',
                '../MUI/MUINineScaleSprite': 'MUINineScaleSprite',
                '../MUI/MUINode': 'MUINode',
                '../MUI/MUIProgressBar': 'MUIProgressBar',
                '../MUI/MUISprite': 'MUISprite',
                '../animation/action/MActionFactory': 'MActionFactory',
                '../animation/action/MCallFunc': 'MCallFunc',
                '../animation/action/MFadeTo': 'MFadeTo',
                '../animation/action/MMoveBy': 'MMoveBy',
                '../animation/action/MScaleTo': 'MScaleTo',
                '../animation/action/MSequence': 'MSequence',
                '../atlas/SimpleAtlas': 'SimpleAtlas',
                '../element/component/MUINumber': 'MUINumber',
                '../element/loader/BeginFrameLoader': 'BeginFrameLoader',
                '../element/loader/GameSceneFrameLoader': 'GameSceneFrameLoader',
                '../element/loader/NumberFrameLoader': 'NumberFrameLoader',
                '../element/node/MUINodePool': 'MUINodePool',
                './IBattleGameSceneView': 'IBattleGameSceneView',
                './UiPropertyIconPanel': 'UiPropertyIconPanel',
            },
        ],
        BattleSettlement: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '2954fTalqdMGLSnwijr39v5', 'BattleSettlement'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./../UI/MusicLevelDataLoader'),
                    n = e('./../skin/frag/SkinTaskMgr'),
                    l = e('./Plugin/PluginMgr'),
                    u = e('../Core/GameDefine'),
                    d = e('./Plugin/IPlugin'),
                    p = e('./PlayerMgr'),
                    h = e('./LevelMgr'),
                    a = e('../Core/modle/RowNode'),
                    f = e('../../social/SocialHelper'),
                    m = e('../../base/Log'),
                    r = e('../../base/G'),
                    s = e('../../base/State'),
                    c = (function () {
                        function e() {
                            (this.mLevel = 0), (this.mStar = 0), (this.mCrown = 0), (this.mBpm = 0), (this.mBaseBeat = 0), (this.mMusicId = 0), (this.mMid = 0), (this.mGainedGold = 0), (this.mGainNormalChest = 0), (this.mGainMusicChest = 0), (this.mMusicName = ''), (this.mMusician = ''), (this.mPerfectCount = 0), (this.mScore = 0), (this.mHistoryBestScore = 0), (this.mBaseScore = 0), (this.mScorePlus = 0), (this.mAddScroce = 0), (this.mType = a.RowType.NORMAL), (this.mBadBlockCount = 0), (this.mBadEndBlock = 0), (this.mArena = !1), (this.mGhostChase = !1), (this.mBattleTime = 0), (this.mSpeed = 0), (this.mCarnival = 0), (this.mHeavyAnim = !1), (this.mRecordRate = !1), (this.mRecDayPlay = !1), (this.mRecDayPlayAd = !1), (this.mRecDayTime = !1), (this.mArenaID = !1), (this.mReliveTime = 0), (this.mGameTime = 0);
                        }
                        return (
                            (e.prototype.setScore = function (e) {
                                this.mScore = e;
                            }),
                            (e.prototype.setStar = function (e) {
                                this.mStar = e;
                            }),
                            (e.prototype.setCrown = function (e) {
                                this.mCrown = e;
                            }),
                            (e.prototype.restart = function () {
                                (this.mMid = 0), (this.mStar = 0), (this.mCrown = 0), (this.mMusicId = 0), (this.mLevel = 0), (this.mBpm = 0), (this.mScore = 0), (this.mHistoryBestScore = 0), (this.mPerfectCount = 0), (this.mScorePlus = 0), (this.mBaseBeat = 0), (this.mMusicName = ''), (this.mMusician = ''), (this.mBadBlockCount = 0), (this.mBadEndBlock = 0), (this.mType = a.RowType.UNKNOW), (this.mGainedGold = 0), (this.mGainNormalChest = 0), (this.mGainMusicChest = 0), (this.mAddScroce = 0), (this.mBattleTime = 0), (this.mSpeed = 0), (this.mCarnival = 0), (this.mReliveTime = 0), (this.mGameTime = 0);
                            }),
                            (e.prototype.giveBattle = function (e, t, i) {
                                this.restart(), (this.mLevel = e), this.mMid, (this.mBaseBeat = i);
                                var o = h.LevelMgr.Ins().getLevel(e);
                                null != o && ((this.mMusicId = e), (this.mMid = o.music.mid), (this.mMusicName = o.music.musicName), (this.mMusician = o.music.musician)), this.setBpm(t);
                            }),
                            (e.prototype.setBpm = function (e) {
                                (this.mBpm = e), (this.mBaseScore = parseInt('' + e / this.mBaseBeat / 8)), (this.mType = a.RowType.UNKNOW), this.notifyHUD();
                            }),
                            (e.prototype.inning = function () {}),
                            (e.prototype.notifyHUD = function () {}),
                            (e.prototype.setGainedGold = function (e) {
                                this.mGainedGold = e;
                            }),
                            (e.prototype.battleOver = function () {
                                console.log('[BattleSettlement] battleOver');
                                var e = l.default.Ins().getPlugin(d.default.Plugin_Exp),
                                    t = new u.LevelRecord();
                                (t.mId = this.mLevel), (t.mMid = this.mMid), (t.mBadBlockType = this.mType), (t.mBadBlcokCount = this.mBadBlockCount), (t.mbadEndBlock = this.mBadEndBlock), (t.mIsFisrtGame = !1);
                                var i = p.default.Ins(),
                                    o = i.getLevelRecord(this.mLevel);
                                if (null == o || null == o) {
                                    var n = h.LevelMgr.Ins().getLevel(this.mLevel);
                                    o = i.addNewRecord(n.id, n.music.mid, n.levelUnlock.unlockType);
                                }
                                (this.mHistoryBestScore = o.mBestScore), (t.mBestScore = o.mBestScore), (t.mBestStar = o.mBestStar), (t.mBestSpeed = o.mBestSpeed), o.isRecordLocked() ? (t.mUnlockFlag = o.mUnlockFlag) : ((t.mUnlockFlag = u.eUnlockFlag.FLAG_UNLOCKED), this.mLevel < u.Constant.CHOICENESS_STARTID && i.setUserLastLevelMid(this.mMid));
                                t.mBestScore;
                                this.mScore > t.mBestScore && (t.mBestScore = this.mScore), (t.mScore = this.mScore);
                                t.mBestSpeed;
                                this.mSpeed > t.mBestSpeed && (t.mBestSpeed = this.mSpeed), (t.mSpeed = this.mSpeed), 0 < h.LevelMgr.Ins().getLevelInfo(this.mLevel).mId && (0 < this.mCrown ? (t.mStar = 3 + this.mCrown) : 0 < this.mStar && (t.mStar = this.mStar)), t.mBestStar < t.mStar && (6 == t.mStar ? ((t.mIsFirstSix = !0), t.mBestStar < 5 && (t.mIsFirstFive = !0), t.mBestStar < 4 && (t.mIsFirstFour = !0), t.mBestStar < 3 && (t.mIsFirstPassed = !0), t.mBestStar < 2 && (t.mIsFirstSecond = !0), t.mBestStar < 1 && (t.mIsFirstBlood = !0)) : 5 == t.mStar ? ((t.mIsFirstFive = !0), t.mBestStar < 4 && (t.mIsFirstFour = !0), t.mBestStar < 3 && (t.mIsFirstPassed = !0), t.mBestStar < 2 && (t.mIsFirstSecond = !0), t.mBestStar < 1 && (t.mIsFirstBlood = !0)) : 4 == t.mStar ? ((t.mIsFirstFour = !0), t.mBestStar < 3 && (t.mIsFirstPassed = !0), t.mBestStar < 2 && (t.mIsFirstSecond = !0), t.mBestStar < 1 && (t.mIsFirstBlood = !0)) : 3 == t.mStar ? ((t.mIsFirstPassed = !0), t.mBestStar < 2 && (t.mIsFirstSecond = !0), t.mBestStar < 1 && (t.mIsFirstBlood = !0)) : 2 == t.mStar ? ((t.mIsFirstSecond = !0), t.mBestStar < 1 && (t.mIsFirstBlood = !0)) : 1 == t.mStar && (t.mIsFirstBlood = !0), (t.mBestStar = t.mStar));
                                var a = l.default.Ins().getPlugin(d.default.Plugin_Economy);
                                if ((a && ((t.mCoin = a.increaseGold(t)), 0 < this.mGainedGold && ((t.mCoin += this.mGainedGold), a.gainGold(this.mGainedGold))), (t.mGainedGold = this.mGainedGold), !o.isRecordLocked())) {
                                    t.mExp = e.getCanIncreaseEX(t);
                                    var r = t.mExp;
                                    (t.mExp = this.addPropAdditionExp(r)), m.default.e('游戏结束后经验加成： ' + r + '  => ' + t.mExp), (t.mIsUpLevel = e.increaseEx(t));
                                }
                                (t.mFrom = 1), i.setLevelRecord(t);
                                var s = t.mBestStar - 3;
                                (isNaN(s) || s < 0) && (s = 0);
                                var c = t.mBestStar;
                                (c = 0 < s ? 0 : t.mBestStar),
                                    isNaN(c) && (c = 0),
                                    f.SocialHelper.updateSongScore({
                                        songId: '' + t.mMid,
                                        crown: s,
                                        star: c,
                                        score: t.mBestScore,
                                        locked: t.isRecordLocked(),
                                    }),
                                    f.SocialHelper.updateTotalScore({
                                        crown: i.getTotalCrown(),
                                        star: i.getTotalStar(),
                                        grade: i.getUserLevel(),
                                        score: i.getTotalScore(),
                                    }),
                                    o.isRecordLocked() || i.refreshUnlockState(this.mLevel),
                                    this.notifyTaskSys();
                            }),
                            (e.prototype.addPropAdditionExp = function (e) {
                                return r.G.propAddition.getAdditionedExp(e, r.G.Ap.state.mission.getType().toString());
                            }),
                            (e.prototype.notifyTaskSys = function () {
                                var e = r.G.Ap.state.getMission();
                                if (e && e.getType() == s.MISSIONTYPE.Normal) {
                                    var t = h.LevelMgr.Ins().getLevel(e.levelId);
                                    if (t && o.MusicLevelDataLoader.isLvUnLockMusic(t)) {
                                        m.default.i('notifyTaskSys => notify musicId =' + e.musicId + ' levelId=' + e.levelId, t);
                                        var i = new n.GradeSongEvent();
                                        (i.crownCount = this.mCrown), (i.reliveTimes = this.mReliveTime), n.default.Ins().notifyGradeSongEvent(i);
                                    }
                                }
                            }),
                            (e.prototype.addReliveTimes = function (e) {
                                this.mReliveTime = e;
                            }),
                            (e.prototype.getReliveTimes = function () {
                                return this.mReliveTime;
                            }),
                            (e.prototype.addGameTime = function (e) {
                                this.mGameTime = e;
                            }),
                            (e.prototype.getGameTime = function () {
                                return this.mGameTime;
                            }),
                            e
                        );
                    })();
                (i.default = c), cc._RF.pop();
            },
            {
                '../../base/G': 'G',
                '../../base/Log': 'Log',
                '../../base/State': 'State',
                '../../social/SocialHelper': 'SocialHelper',
                '../Core/GameDefine': 'GameDefine',
                '../Core/modle/RowNode': 'RowNode',
                './../UI/MusicLevelDataLoader': 'MusicLevelDataLoader',
                './../skin/frag/SkinTaskMgr': 'SkinTaskMgr',
                './LevelMgr': 'LevelMgr',
                './PlayerMgr': 'PlayerMgr',
                './Plugin/IPlugin': 'IPlugin',
                './Plugin/PluginMgr': 'PluginMgr',
            },
        ],
        Bean: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '9dd26QujYtFW6hPS6SEWvx8', 'Bean'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {}
                    return (e.MSG_PRE_LOAD_OPENDATACONTEXT = 'msg_pre_load_opendatacontext'), (e.MSG_UPDATE_TOTAL_SCORE = 'msg_update_total_score'), (e.MSG_UPDATE_SONG_SCORE = 'msg_update_song_score'), (e.MSG_REFRESH_SONG_SCORE = 'msg_refresh_self_rank_data'), (e.MSG_ADVANCEL_LOAD_GROUP_RNAK_DATA = 'msg_advance_load_group_rank_data'), (e.MSG_UPDATE_CACHE = 'msg_update_cache'), (e.MSG_DRAW_RANKING = 'msg_draw_ranking'), (e.MSG_EXIT_DRAW_RANKING = 'msg_exit_draw_ranking'), (e.MSG_SYNC_DRAW_RANKING = 'msg_sync_draw_ranking'), (e.MSG_TOUCH_RANK_LIST = 'msg_touch_rank_list'), (e.MSG_UPDATE_PLAYER_INFO = 'msg_update_player_info'), (e.MSG_UPDATE_PK_RANK_INFO = 'msg_update_pk_rank_info'), e;
                })();
                i.Message = o;
                var n = function () {};
                i.GroupMsgInfo = n;
                var a = function () {};
                (i.LaunchOption = a), cc._RF.pop();
            },
            {},
        ],
        BeginFrameLoader: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'ff497OsGURJYYIwgycNUSmJ', 'BeginFrameLoader'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../atlas/SimpleAtlas'),
                    n = (function () {
                        function e() {
                            (this.mBeginSimpleAtlas = null), (this.mInit = !1), (this.mBeginSimpleAtlas = new o.default());
                        }
                        return (
                            (e.getInstance = function () {
                                return null == e.sInstance && (e.sInstance = new e()), e.sInstance;
                            }),
                            (e.prototype.init = function () {
                                return __awaiter(this, void 0, void 0, function () {
                                    return __generator(this, function (e) {
                                        switch (e.label) {
                                            case 0:
                                                return this.mInit ? [2] : ((this.mInit = !0), [4, this.mBeginSimpleAtlas.load('gameImage/gameBegin')]);
                                            case 1:
                                                return e.sent(), [2];
                                        }
                                    });
                                });
                            }),
                            (e.prototype.getAtlas = function () {
                                return this.mBeginSimpleAtlas;
                            }),
                            (e.prototype.getBannerBg = function () {
                                return this.mBeginSimpleAtlas.getItem('banner_bg');
                            }),
                            (e.prototype.getBackNormal = function () {
                                return this.mBeginSimpleAtlas.getItem('back_normal');
                            }),
                            (e.prototype.getBackPressed = function () {
                                return this.mBeginSimpleAtlas.getItem('back_pressed');
                            }),
                            (e.sInstance = null),
                            e
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../../atlas/SimpleAtlas': 'SimpleAtlas',
            },
        ],
        BinaryData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '3e8d0Ttb4FD5b/GTPFClOMI', 'BinaryData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {}
                    return (
                        (e.ArrayBufferToString = function (e) {
                            for (var t = '', i = new Uint8Array(e), o = 0, n = i.byteLength; o < n; o++) t += String.fromCharCode(i[o]);
                            return t;
                        }),
                        (e.StringToArrayBuffer = function (e) {
                            for (var t = new ArrayBuffer(e.length), i = new Uint8Array(t), o = 0, n = e.length; o < n; o++) i[o] = e.charCodeAt(o);
                            return t;
                        }),
                        (e.ArrayBufferToStringComplex = function (e, t) {
                            for (var i = '', o = new Uint8Array(e), n = 0, a = o.byteLength; n < a; n++) i += String.fromCharCode(o[n] ^ t);
                            return i;
                        }),
                        (e.StringToArrayBufferComplex = function (e, t) {
                            for (var i = new ArrayBuffer(e.length), o = new Uint8Array(i), n = 0, a = e.length; n < a; n++) (o[n] = e.charCodeAt(n)), (o[n] = o[n] ^ t);
                            return i;
                        }),
                        e
                    );
                })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        BlankPauseBlockNode: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '6cb48vUfLFHaqA2M7q1pDj6', 'BlankPauseBlockNode'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var r = e('../loader/BlockSkinFrameLoader'),
                    o = e('./BlockNode'),
                    s = e('../../MUI/MUISprite'),
                    n = (function (a) {
                        function e() {
                            return (null !== a && a.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(e, a),
                            (e.prototype.reuse = function (e) {
                                a.prototype.reuse.call(this, e), this.updatePauseState(!1);
                            }),
                            (e.prototype.createLayers = function () {
                                a.prototype.createLayers.call(this);
                                var e = r.default.getInstance().getStartLabel(),
                                    t = this.mBlock.rect.width / e.rect.width,
                                    i = this.mBlock.rect.width,
                                    o = e.rect.height * t,
                                    n = new s.default();
                                (n.imageData = r.default.getInstance().getAtlas()), (n.imageItem = e), n.move(0, (this.mBlock.rect.height - o) / 2, i, o), this.addChild(n);
                            }),
                            (e.prototype.updateTouchState = function (e) {}),
                            (e.prototype.modifyOpacity = function (e) {}),
                            (e.prototype.updatePauseState = function (e) {}),
                            (e.prototype.showBackgroundAnimation = function () {}),
                            e
                        );
                    })(o.default);
                (i.default = n), cc._RF.pop();
            },
            {
                '../../MUI/MUISprite': 'MUISprite',
                '../loader/BlockSkinFrameLoader': 'BlockSkinFrameLoader',
                './BlockNode': 'BlockNode',
            },
        ],
        BlockNodeCache: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '64d73wbCOlGjJEEExlYKGsQ', 'BlockNodeCache'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./ReuseNodePool'),
                    r = e('../../../util/Utility'),
                    s = e('./BlockNodeFactory'),
                    c = e('../../data/MapGenerator'),
                    l = e('../../../base/G'),
                    n = (function () {
                        function e() {
                            (this.mShortNodeCache = null), (this.mLongNodeCache = null), (this.mMoneyNodeCache = null), (this.mGiftNodeCache = null), (this.mRedNodeCache = null), (this.mPropertyNodeCache = null), (this.mEvilShortNodeCache = null), (this.mEvilLongNodeCache = null), (this.mShortNodeCache = new o.default()), (this.mLongNodeCache = new o.default()), (this.mMoneyNodeCache = new o.default()), (this.mGiftNodeCache = new o.default()), (this.mRedNodeCache = new o.default()), (this.mPropertyNodeCache = new o.default()), (this.mEvilShortNodeCache = new o.default()), (this.mEvilLongNodeCache = new o.default());
                        }
                        return (
                            (e.prototype.createCache = function (e, t) {
                                var i = new r.Utility.Rect(0, 0, l.G.Ap.config.mBaseBlockWidth, l.G.Ap.config.getBlockHeight()),
                                    o = c.default.createBlock(i, r.Utility.BLOCKTYPE.SHORT);
                                if (t === r.Utility.GAMESTAGE.INFINITE || t === r.Utility.GAMESTAGE.MUSIC) {
                                    for (var n = 0; n < 10; ++n) {
                                        var a = s.default.getInstance().createNode(o);
                                        e.addChild(a), (o.node = a), this.put(o);
                                    }
                                    (o.rect.height = i.height), (o.type = r.Utility.BLOCKTYPE.LONG);
                                    for (n = 0; n < 4; ++n) {
                                        a = s.default.getInstance().createNode(o);
                                        e.addChild(a), (o.node = a), this.put(o);
                                    }
                                    (o.rect.height = l.G.Ap.config.getBlockHeight()), (o.type = r.Utility.BLOCKTYPE.GIFT);
                                    for (n = 0; n < 1; ++n) {
                                        a = s.default.getInstance().createNode(o);
                                        e.addChild(a), (o.node = a), this.put(o);
                                    }
                                }
                                if (t === r.Utility.GAMESTAGE.MONEY) {
                                    (o.rect.height = l.G.Ap.config.getBlockHeight()), (o.type = r.Utility.BLOCKTYPE.MONEY);
                                    for (n = 0; n < 15; ++n) {
                                        a = s.default.getInstance().createNode(o);
                                        e.addChild(a), (o.node = a), this.put(o);
                                    }
                                }
                            }),
                            (e.prototype.get = function (e) {
                                var t = null;
                                switch (e.type) {
                                    case r.Utility.BLOCKTYPE.SHORT:
                                    case r.Utility.BLOCKTYPE.TWINS:
                                        t = this.mShortNodeCache.get(e);
                                        break;
                                    case r.Utility.BLOCKTYPE.LONG:
                                        t = this.mLongNodeCache.get(e);
                                        break;
                                    case r.Utility.BLOCKTYPE.MONEY:
                                        t = this.mMoneyNodeCache.get(e);
                                        break;
                                    case r.Utility.BLOCKTYPE.GIFT:
                                        t = this.mGiftNodeCache.get(e);
                                        break;
                                    case r.Utility.BLOCKTYPE.MISTAKE:
                                        t = this.mRedNodeCache.get(e);
                                        break;
                                    case r.Utility.BLOCKTYPE.PROPERTY:
                                        t = this.mPropertyNodeCache.get(e);
                                        break;
                                    case r.Utility.BLOCKTYPE.OBSTACLE:
                                        t = e.obstacleType === r.Utility.BLOCKTYPE.LONG ? this.mEvilLongNodeCache.get(e) : this.mEvilShortNodeCache.get(e);
                                }
                                return t;
                            }),
                            (e.prototype.put = function (e) {
                                var t = !1,
                                    i = e.node;
                                switch (e.type) {
                                    case r.Utility.BLOCKTYPE.SHORT:
                                    case r.Utility.BLOCKTYPE.TWINS:
                                        t = this.mShortNodeCache.put(i);
                                        break;
                                    case r.Utility.BLOCKTYPE.LONG:
                                        t = this.mLongNodeCache.put(i);
                                        break;
                                    case r.Utility.BLOCKTYPE.MONEY:
                                        t = this.mMoneyNodeCache.put(i);
                                        break;
                                    case r.Utility.BLOCKTYPE.GIFT:
                                        t = this.mGiftNodeCache.put(i);
                                        break;
                                    case r.Utility.BLOCKTYPE.MISTAKE:
                                        t = this.mRedNodeCache.put(i);
                                        break;
                                    case r.Utility.BLOCKTYPE.PROPERTY:
                                        t = this.mPropertyNodeCache.put(i);
                                        break;
                                    case r.Utility.BLOCKTYPE.OBSTACLE:
                                        t = e.obstacleType === r.Utility.BLOCKTYPE.LONG ? this.mEvilLongNodeCache.put(i) : this.mEvilShortNodeCache.put(i);
                                }
                                return t;
                            }),
                            (e.prototype.clear = function () {
                                this.mShortNodeCache.clear(), this.mLongNodeCache.clear(), this.mMoneyNodeCache.clear(), this.mGiftNodeCache.clear(), this.mRedNodeCache.clear(), this.mPropertyNodeCache.clear(), this.mEvilShortNodeCache.clear(), this.mEvilLongNodeCache.clear();
                            }),
                            e
                        );
                    })();
                (i.BlockNodeCache = n), cc._RF.pop();
            },
            {
                '../../../base/G': 'G',
                '../../../util/Utility': 'Utility',
                '../../data/MapGenerator': 'MapGenerator',
                './BlockNodeFactory': 'BlockNodeFactory',
                './ReuseNodePool': 'ReuseNodePool',
            },
        ],
        BlockNodeFactory: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '07b29lTSXlETLj1YWZpZkGB', 'BlockNodeFactory'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../util/Utility'),
                    n = e('./StartBlockNode'),
                    a = e('./ShortBlockNode'),
                    r = e('./LongBlockNode'),
                    s = e('./MistakeBlockNode'),
                    c = e('./MoneyBlockNode'),
                    l = e('./GiftBlockNode'),
                    u = e('./BlankPauseBlockNode'),
                    d = e('../../../base/G'),
                    p = e('./PropertyBlockNode'),
                    h = e('./EvilLongBlockNode'),
                    f = e('./EvilShortBlockNode'),
                    m = (function () {
                        function e() {}
                        return (
                            (e.getInstance = function () {
                                return null == this.sInstance && (this.sInstance = new e()), this.sInstance;
                            }),
                            (e.prototype.createNode = function (e) {
                                var t = null;
                                switch (e.type) {
                                    case o.Utility.BLOCKTYPE.TWINS:
                                    case o.Utility.BLOCKTYPE.SHORT:
                                        t = new a.default(e);
                                        break;
                                    case o.Utility.BLOCKTYPE.LONG:
                                        t = d.G.Ap.config.debugNoLongBlocks ? new a.default(e) : new r.default(e);
                                        break;
                                    case o.Utility.BLOCKTYPE.GIFT:
                                        t = new l.default(e);
                                        break;
                                    case o.Utility.BLOCKTYPE.MONEY:
                                        t = new c.default(e);
                                        break;
                                    case o.Utility.BLOCKTYPE.BEGIN:
                                        t = new n.default(e);
                                        break;
                                    case o.Utility.BLOCKTYPE.MISTAKE:
                                        t = new s.default(e);
                                        break;
                                    case o.Utility.BLOCKTYPE.BLANKPAUSE:
                                        t = new u.default(e);
                                        break;
                                    case o.Utility.BLOCKTYPE.OBSTACLE:
                                        t = e.obstacleType === o.Utility.BLOCKTYPE.LONG ? new h.EvilLongBlockNode(e) : new f.EvilShortBlockNode(e);
                                        break;
                                    case o.Utility.BLOCKTYPE.PROPERTY:
                                        t = new p.default(e);
                                }
                                return null != t && t.createLayers(), t;
                            }),
                            (e.sInstance = null),
                            e
                        );
                    })();
                (i.default = m), cc._RF.pop();
            },
            {
                '../../../base/G': 'G',
                '../../../util/Utility': 'Utility',
                './BlankPauseBlockNode': 'BlankPauseBlockNode',
                './EvilLongBlockNode': 'EvilLongBlockNode',
                './EvilShortBlockNode': 'EvilShortBlockNode',
                './GiftBlockNode': 'GiftBlockNode',
                './LongBlockNode': 'LongBlockNode',
                './MistakeBlockNode': 'MistakeBlockNode',
                './MoneyBlockNode': 'MoneyBlockNode',
                './PropertyBlockNode': 'PropertyBlockNode',
                './ShortBlockNode': 'ShortBlockNode',
                './StartBlockNode': 'StartBlockNode',
            },
        ],
        BlockNode: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '3ebc1IW/MVG3qVliA4/HsNm', 'BlockNode'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (i) {
                    function e(e) {
                        var t = i.call(this) || this;
                        return (t.mBlock = e), t;
                    }
                    return (
                        __extends(e, i),
                        (e.prototype.reuse = function (e) {
                            i.prototype.reuse.call(this, e), (this.mBlock = e), this.resetNode();
                        }),
                        (e.prototype.createLayers = function () {
                            this.resetNode();
                        }),
                        (e.prototype.resetNode = function () {
                            this.setPosition(this.mBlock.rect.x, this.mBlock.rect.y), this.setContentSize(this.mBlock.rect.width, this.mBlock.rect.height);
                        }),
                        (e.prototype.updateLayers = function (e) {}),
                        (e.prototype.updateTouchState = function (e) {}),
                        (e.prototype.updatePauseState = function (e) {}),
                        (e.prototype.modifyOpacity = function (e) {}),
                        e
                    );
                })(e('./ReuseNode').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './ReuseNode': 'ReuseNode',
            },
        ],
        BlockSkinFrameLoader: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '62b3amlnlpOtJK3cAKmNlyJ', 'BlockSkinFrameLoader'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../atlas/SimpleImage'),
                    n = (function () {
                        function e() {
                            (this.mGameSceneSimpleAtlas = null), (this.mShortBlockTouchedAnim = null);
                        }
                        return (
                            (e.getInstance = function () {
                                return null == e.sInstance && (e.sInstance = new e()), e.sInstance;
                            }),
                            (e.prototype.setAtlas = function (e) {
                                (this.mGameSceneSimpleAtlas = e), (this.mShortBlockTouchedAnim = null);
                            }),
                            (e.prototype.getAtlas = function () {
                                return this.mGameSceneSimpleAtlas;
                            }),
                            (e.prototype.getShortBlockTouchedAnimFrames = function () {
                                return null == this.mGameSceneSimpleAtlas ? null : (null == this.mShortBlockTouchedAnim && (this.mShortBlockTouchedAnim = new o.SimpleImageFrameSequence(this.mGameSceneSimpleAtlas.getItem('finish_1'), this.mGameSceneSimpleAtlas.getItem('finish_2'), this.mGameSceneSimpleAtlas.getItem('finish_3'), this.mGameSceneSimpleAtlas.getItem('finish_4'))), this.mShortBlockTouchedAnim);
                            }),
                            (e.prototype.getStartBlockBackground = function () {
                                return null == this.mGameSceneSimpleAtlas ? null : this.mGameSceneSimpleAtlas.getItem('tile_start');
                            }),
                            (e.prototype.getShortBlockBackground = function () {
                                return null == this.mGameSceneSimpleAtlas ? null : this.mGameSceneSimpleAtlas.getItem('tile_black');
                            }),
                            (e.prototype.getStartLabel = function () {
                                return null == this.mGameSceneSimpleAtlas ? null : this.mGameSceneSimpleAtlas.getItem('start_label');
                            }),
                            (e.prototype.getMistakeBlockBackground = function () {
                                return null == this.mGameSceneSimpleAtlas ? null : this.mGameSceneSimpleAtlas.getItem('tile_miss');
                            }),
                            (e.prototype.getLongBlockHead = function () {
                                return null == this.mGameSceneSimpleAtlas ? null : this.mGameSceneSimpleAtlas.getItem('long_head');
                            }),
                            (e.prototype.getLongBlockLight = function () {
                                return null == this.mGameSceneSimpleAtlas ? null : this.mGameSceneSimpleAtlas.getItem('long_tilelight');
                            }),
                            (e.prototype.getLongBlockLightTop = function () {
                                return null == this.mGameSceneSimpleAtlas ? null : this.mGameSceneSimpleAtlas.getItem('long_light');
                            }),
                            (e.prototype.getLongBlockFinish = function () {
                                return null == this.mGameSceneSimpleAtlas ? null : this.mGameSceneSimpleAtlas.getItem('long_finish');
                            }),
                            (e.prototype.getLongBlockTail = function () {
                                return null == this.mGameSceneSimpleAtlas ? null : this.mGameSceneSimpleAtlas.getItem('black');
                            }),
                            (e.prototype.getDot = function () {
                                return null == this.mGameSceneSimpleAtlas ? null : this.mGameSceneSimpleAtlas.getItem('long_dot');
                            }),
                            (e.sInstance = null),
                            e
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../../atlas/SimpleImage': 'SimpleImage',
            },
        ],
        BottomStorePanel: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'f30e3JvSb9L7p19dFOu3cTC', 'BottomStorePanel'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o,
                    n,
                    a = e('../../business/UI/GameEntraScene/BasicTouchEvent'),
                    r = e('../../business/UI/GameEntraScene/PrefabMgr'),
                    s = e('./PropertiesPanel'),
                    c = cc._decorator,
                    l = c.ccclass,
                    u = c.property,
                    d = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.propSprite = null), (e.contentNode = null), (e.mPianoClickCallback = null), (e.mPropClickCallback = null), (e.mType = o.PROP), (e.mPropNode = null), (e.mPianoNode = null), (e.mLoadFinishedCB = void 0), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.setShowPropPopupCb = function (e) {
                                this.mShowPropPopupCb = e;
                            }),
                            (e.prototype.onLoad = function () {
                                this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                }),
                                    this.node.on(cc.Node.EventType.TOUCH_END, function (e) {
                                        e.stopPropagation();
                                    }),
                                    this.initUi(),
                                    this.initEvent();
                            }),
                            (e.prototype.initEvent = function () {
                                var e = this;
                                (this.mPropClickCallback = new a.default(function () {
                                    e.propClick();
                                })),
                                    this.propSprite.node.on(cc.Node.EventType.TOUCH_END, this.mPropClickCallback.click, this.mPropClickCallback);
                            }),
                            (e.prototype.initUi = function () {
                                this.updateTab(), this.showPanel();
                            }),
                            (e.prototype.propClick = function () {
                                this.mType != o.PROP && ((this.mType = o.PROP), this.updateTab(), this.showPanel());
                            }),
                            (e.prototype.pianoClick = function () {
                                this.mType != o.PAINO && ((this.mType = o.PAINO), this.updateTab(), this.showPanel());
                            }),
                            (e.prototype.showPanel = function () {
                                this.mType == o.PROP && this.showProp();
                            }),
                            (e.prototype.showProp = function () {
                                var i = this;
                                this.mPianoNode && this.mPianoNode.setPosition(1e4, 0),
                                    null == this.mPropNode
                                        ? r.default.load('gamescene/PropertiesPanel', function (e, t) {
                                              t && ((i.mPropNode = t), i.mPropNode.getComponent(s.default).setShowPropPopupCb(i.mShowPropPopupCb.bind(i)), i.contentNode.addChild(i.mPropNode), i.mLoadFinishedCB && i.mLoadFinishedCB());
                                          })
                                        : this.mPropNode.setPosition(0, 0);
                            }),
                            (e.prototype.setBottomStoreLoadFinished = function (e) {
                                this.mLoadFinishedCB = e;
                            }),
                            (e.prototype.updateTab = function () {}),
                            (e.prototype.updatePropertiesPanel = function () {
                                this.mPropNode && this.mPropNode.getComponent(s.default).updatePropertiesPanel();
                            }),
                            (e.prototype.playGetPropertyAnim = function (e) {
                                this.mPropNode && this.mPropNode.getComponent(s.default).playGetPropertyAnim(e);
                            }),
                            (e.ATLAS_PATH = 'static_res/game_tone_en'),
                            __decorate([u(cc.Sprite)], e.prototype, 'propSprite', void 0),
                            __decorate([u(cc.Node)], e.prototype, 'contentNode', void 0),
                            (e = __decorate([l], e))
                        );
                    })(cc.Component);
                (i.default = d), ((n = o || (o = {}))[(n.PROP = 0)] = 'PROP'), (n[(n.PAINO = 1)] = 'PAINO'), cc._RF.pop();
            },
            {
                '../../business/UI/GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
                '../../business/UI/GameEntraScene/PrefabMgr': 'PrefabMgr',
                './PropertiesPanel': 'PropertiesPanel',
            },
        ],
        BusinessUtil: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '74dd5suYlxIvItheM7X9btW', 'BusinessUtil'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../UI/GameEntraScene/PrefabMgr'),
                    n = (function () {
                        function e() {}
                        return (
                            (e.getIns = function () {
                                return null == this.mIns && (this.mIns = new e()), this.mIns;
                            }),
                            (e.prototype.showToastTips = function (n, a, r, s) {
                                var c = this;
                                void 0 === s && (s = !1),
                                    o.default.load('prefab/ToastPrefab', function (e, t) {
                                        if (t && cc.isValid(c, !0)) {
                                            var i = cc.instantiate(t),
                                                o = i.getComponent('ToastPrefab');
                                            o.showTips(n, function () {
                                                i.destroy(), r && r();
                                            }),
                                                o.setLong(s),
                                                a.addChild(i);
                                        }
                                    });
                            }),
                            (e.mIns = null),
                            e
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../UI/GameEntraScene/PrefabMgr': 'PrefabMgr',
            },
        ],
        BuySkinDiamondNotEnough: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '2ae3aU3FG1Cc7vK2QmOZ2sj', 'BuySkinDiamondNotEnough'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../UI/GameEntraScene/BasicTouchEvent'),
                    n = cc._decorator,
                    a = n.ccclass,
                    r = n.property,
                    s = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mLayout = null), (e.share_btn = null), (e.close_btn = null), (e.mShareBtnClickCallback = null), (e.mCloseBtnClickCallback = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.setShareCallback = function (e) {
                                this.shareCallback = e;
                            }),
                            (e.prototype.setCloseCallback = function (e) {
                                this.mCloseCallback = e;
                            }),
                            (e.prototype.onLoad = function () {
                                this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                }),
                                    this.initEvent();
                            }),
                            (e.prototype.initEvent = function () {
                                var e = this;
                                (this.mShareBtnClickCallback = new o.default(function () {
                                    e.shareBtnClick();
                                })),
                                    this.setTouchCb(this.share_btn, this.mShareBtnClickCallback),
                                    (this.mCloseBtnClickCallback = new o.default(function () {
                                        e.closeBtnClick();
                                    })),
                                    this.setTouchCb(this.close_btn, this.mCloseBtnClickCallback);
                            }),
                            (e.prototype.setTouchCb = function (e, t) {
                                e && e.node && t && e.node.on(cc.Node.EventType.TOUCH_END, t.click, t);
                            }),
                            (e.prototype.start = function () {
                                this.mLayout.getComponent(cc.Animation).play('buy_skin_diamond_not_enough');
                            }),
                            (e.prototype.shareBtnClick = function () {
                                this.shareCallback && this.shareCallback();
                            }),
                            (e.prototype.closeBtnClick = function () {
                                this.mCloseCallback && this.mCloseCallback();
                            }),
                            __decorate([r(cc.Node)], e.prototype, 'mLayout', void 0),
                            __decorate([r(cc.Button)], e.prototype, 'share_btn', void 0),
                            __decorate([r(cc.Button)], e.prototype, 'close_btn', void 0),
                            (e = __decorate([a], e))
                        );
                    })(cc.Component);
                (i.default = s), cc._RF.pop();
            },
            {
                '../UI/GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
            },
        ],
        CMInviteSkinPrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '364bd62Ak9LJJuMBepLjCoA', 'CMInviteSkinPrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../UI/GameEntraScene/BasicTouchEvent'),
                    a = e('../../base/Log'),
                    n = e('../reward/ActivityBean'),
                    r = e('../UI/GameEntraScene/ImgCache'),
                    s = e('../Logic/SkinDataManager'),
                    c = e('../reward/ActivityRewardManager'),
                    l = e('../../base/G'),
                    u = e('./SkinTryData'),
                    d = e('./SkinUtils'),
                    p = e('../Logic/EventBus'),
                    h = e('../Logic/NotifyEvent'),
                    f = e('../../../modules/MGAppShare/scripts/MGShareUtil'),
                    m = e('../../social/AvatarUtil'),
                    g = e('../UI/GameEntraScene/mainpage/MainpageBaseComponent'),
                    _ = e('../../infoc/m_p2_daily_activity'),
                    y = e('../UI/GameEntraScene/MusicLib/HotMusicCMShareController'),
                    S = e('../UI/GameEntraScene/mainpage/WelfareController'),
                    v = cc._decorator,
                    I = v.ccclass,
                    T = v.property,
                    C = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.content_layout = null), (e.skin_bg = null), (e.invite_fds_btn = null), (e.share_moments_btn = null), (e.close_btn = null), (e.invite_count_text = null), (e.invite_count_total_text = null), (e.avatar_sprite = []), (e.mask_layout = []), (e.invite_count_layout = null), (e.try_btn = null), (e.popup_layout = null), (e.source = S.default.SRC_HOME_PAGE_CLICK), (e.mSkin = null), (e.mLayoutBgUrl = ''), (e.mInviteCountLimit = 3), (e.processedInvitees = []), (e.newUserCount = 0), (e.mCloseBtnClickCallback = null), (e.mInviteFdsBtnClickCallback = null), (e.mShareMomentsBtnCallback = null), (e.mTryBtnCallback = null), (e.mTrySource = S.default.SRC_SKIN_INVITE_SHOW), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.setSource = function (e) {
                                this.source = e;
                            }),
                            (e.prototype.setSkinName = function (e) {
                                this.mSkin = e;
                            }),
                            (e.prototype.setLayoutBgUrl = function (e) {
                                this.mLayoutBgUrl = e;
                            }),
                            (e.prototype.setReportPage = function (e) {
                                this.mReportPage = e;
                            }),
                            (e.prototype.setInviteCountLimit = function (e) {
                                this.mInviteCountLimit = e;
                            }),
                            (e.prototype.setCloseCallback = function (e) {
                                this.mCloseCallback = e;
                            }),
                            (e.prototype.setInvitefdsCallback = function (e) {
                                this.mInviteFdsCallback = e;
                            }),
                            (e.prototype.setTrySource = function (e) {
                                this.mTrySource = e;
                            }),
                            (e.prototype.onLoad = function () {
                                this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                }),
                                    a.default.i('[SkinStore] InviteSKin initView onLoad.....'),
                                    console.log('CMPlayShare skinName:' + this.mSkin.name),
                                    this.initEvent(),
                                    this.initBg(),
                                    this.initView();
                                var e = this,
                                    t = 0;
                                this.schedule(
                                    function () {
                                        t++, a.default.i('CMInviteSkinPrefab schdule', t), e.initData();
                                    },
                                    5,
                                    6,
                                    0.1,
                                );
                            }),
                            (e.prototype.initEvent = function () {
                                var e = this;
                                (this.mCloseBtnClickCallback = new o.default(function () {
                                    e.closeBtnClick();
                                })),
                                    this.setTouchCb(this.close_btn, this.mCloseBtnClickCallback),
                                    (this.mInviteFdsBtnClickCallback = new o.default(function () {
                                        e.inviteFdsBtnClick(), _.default.report(e.mSource, _.default.ACTION_CLICK_SHARE);
                                    })),
                                    this.setTouchCb(this.invite_fds_btn, this.mInviteFdsBtnClickCallback),
                                    (this.mShareMomentsBtnCallback = new o.default(function () {
                                        e.shareMomentsClick();
                                    })),
                                    this.setTouchCb(this.share_moments_btn, this.mShareMomentsBtnCallback),
                                    (this.mTryBtnCallback = new o.default(function () {
                                        e.clickTrySkin(), _.default.report(e.mSource, _.default.ACTION_CLICK_TRY);
                                    })),
                                    this.setTouchCb(this.try_btn, this.mTryBtnCallback);
                            }),
                            (e.prototype.setTouchCb = function (e, t) {
                                if (e && t) {
                                    var i = e instanceof cc.Component ? e.node : e;
                                    i && i.on(cc.Node.EventType.TOUCH_END, t.click, t);
                                }
                            }),
                            (e.prototype.clickTrySkin = function () {
                                var e = this,
                                    t = s.SkinDataMgr.Ins().getSkinItemInfo(this.mSkin.name);
                                null != t
                                    ? (console.log('[SkinStore] itemTrySkinCallback skin = ' + t),
                                      d.default.trySkin(
                                          t,
                                          this.popup_layout.node,
                                          function () {},
                                          function () {},
                                          function () {
                                              l.G.skinTryData || (l.G.skinTryData = new u.default()), (l.G.skinTryData.source = e.mTrySource);
                                          },
                                      ))
                                    : console.error('[InviteSkinStore] trySkin skin = null');
                            }),
                            (e.prototype.initBg = function () {
                                var i = this;
                                r.default.get(this.mLayoutBgUrl, function (e, t) {
                                    t && (i.skin_bg.getComponent(cc.Sprite).spriteFrame = t);
                                });
                            }),
                            (e.prototype.initData = function () {
                                var t = this;
                                a.default.i('CMPlayShare InviteSKin initData.....'),
                                    c.ActivityRewardMgr.Ins().getInviteList([n.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SKIN + '_' + this.mSkin.name], function (e) {
                                        e && (a.default.i('MPlayShare InviteSKin initData.....succeed', e), (t.invitees = e.get(n.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SKIN + '_' + t.mSkin.name)), t.preProcessInviteeList()), t.initView();
                                    });
                            }),
                            (e.prototype.initView = function () {
                                a.default.i('[SkinStore] InviteSKin initView this.invitees.', this.invitees);
                                var e = this.content_layout.node.children.length;
                                this.mInviteCountLimit > e && (this.mInviteCountLimit = e);
                                var t = '/ui/skin_invite_num' + this.mInviteCountLimit;
                                r.default.get2(t, this.invite_count_total_text);
                                for (var i = 0, o = 0; o < this.mInviteCountLimit; o++) (this.content_layout.node.children[o].active = !0), this.processedInvitees[o] && (i++, (this.mask_layout[o].node.active = !0), (this.avatar_sprite[o].node.width = 80), (this.avatar_sprite[o].node.height = 80), a.default.i('CMInviteSkinPrefab this.avatar_sprite', this.avatar_sprite[o].node.width, this.avatar_sprite[o].node.height), m.default.showUserAvatar(this.processedInvitees[o].avatar_url, this.avatar_sprite[o], !1), this.processedInvitees[o].needMark && (this.mask_layout[o].node.getChildByName('new_player_mark').active = !0));
                                if (i >= this.mInviteCountLimit) this.unscheduleAllCallbacks(), (this.invite_count_layout.node.active = !1), (this.invite_fds_btn.node.active = !1), p.default.fire(h.default.CM_SKIN_ADS_UNLOCK, this.mSkin), this.closeBtnClick();
                                else {
                                    this.invite_count_layout.node.active = !0;
                                    var n = '/ui/skin_invite_num' + i;
                                    r.default.get2(n, this.invite_count_text);
                                }
                                s.SkinDataMgr.Ins().updateInviteSkinCount(i > this.mInviteCountLimit ? this.mInviteCountLimit : i), (this.newUserCount = i > this.mInviteCountLimit ? this.mInviteCountLimit : i), a.default.i('[SkinStore] InviteSKin initView.....');
                            }),
                            (e.prototype.preProcessInviteeList = function () {
                                var i = this;
                                (this.processedInvitees = []),
                                    this.invitees &&
                                        0 < this.invitees.length &&
                                        this.invitees.forEach(function (e) {
                                            if ((i.processedInvitees.push(e), e.is_new_player)) {
                                                var t = Object.assign({}, e);
                                                (t.needMark = !0), i.processedInvitees.push(t);
                                            }
                                        });
                            }),
                            (e.prototype.closeBtnClick = function () {
                                this.unscheduleAllCallbacks(), this.node.destroy(), this.mCloseCallback && this.mCloseCallback();
                            }),
                            (e.prototype.inviteFdsBtnClick = function () {
                                this.mInviteFdsCallback && this.mInviteFdsCallback(),
                                    y.default.Ins().saveSkinItemInfo(this.mSkin),
                                    f.MGShareUtils.shareForInviteSkin(
                                        'playerId',
                                        n.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SKIN + '_' + this.mSkin.name,
                                        function (e) {
                                            a.default.i('邀请好友得皮肤卡片分享,result : ' + e), p.default.fire(h.default.SHARE_HOME_SHOW_INVITE_TIPS);
                                        },
                                        '1',
                                        this.mSkin.displayName,
                                        this.mInviteCountLimit,
                                    );
                            }),
                            (e.prototype.shareMomentsClick = function () {
                                y.default.Ins().saveSkinItemInfo(this.mSkin),
                                    f.MGShareUtils.shareForInviteSkin(
                                        'playerId',
                                        n.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SKIN + '_' + this.mSkin.name,
                                        function (e) {
                                            a.default.i('邀请好友得皮肤卡片分享,result : ' + e), p.default.fire(h.default.SHARE_HOME_SHOW_INVITE_TIPS);
                                        },
                                        '3',
                                        this.mSkin.displayName,
                                        this.mInviteCountLimit,
                                    );
                            }),
                            (e.prototype.start = function () {}),
                            (e.skinName = 'ice'),
                            __decorate([T(cc.Layout)], e.prototype, 'content_layout', void 0),
                            __decorate([T(cc.Sprite)], e.prototype, 'skin_bg', void 0),
                            __decorate([T(cc.Button)], e.prototype, 'invite_fds_btn', void 0),
                            __decorate([T(cc.Node)], e.prototype, 'share_moments_btn', void 0),
                            __decorate([T(cc.Button)], e.prototype, 'close_btn', void 0),
                            __decorate([T(cc.Sprite)], e.prototype, 'invite_count_text', void 0),
                            __decorate([T(cc.Sprite)], e.prototype, 'invite_count_total_text', void 0),
                            __decorate([T([cc.Sprite])], e.prototype, 'avatar_sprite', void 0),
                            __decorate([T([cc.Layout])], e.prototype, 'mask_layout', void 0),
                            __decorate([T(cc.Layout)], e.prototype, 'invite_count_layout', void 0),
                            __decorate([T(cc.Button)], e.prototype, 'try_btn', void 0),
                            __decorate([T(cc.Prefab)], e.prototype, 'mToastPrefb', void 0),
                            __decorate([T(cc.Prefab)], e.prototype, 'mSaveToAlbumPrefb', void 0),
                            __decorate([T(cc.Layout)], e.prototype, 'popup_layout', void 0),
                            (e = __decorate([I], e))
                        );
                    })(g.default);
                (i.default = C), cc._RF.pop();
            },
            {
                '../../../modules/MGAppShare/scripts/MGShareUtil': 'MGShareUtil',
                '../../base/G': 'G',
                '../../base/Log': 'Log',
                '../../infoc/m_p2_daily_activity': 'm_p2_daily_activity',
                '../../social/AvatarUtil': 'AvatarUtil',
                '../Logic/EventBus': 'EventBus',
                '../Logic/NotifyEvent': 'NotifyEvent',
                '../Logic/SkinDataManager': 'SkinDataManager',
                '../UI/GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
                '../UI/GameEntraScene/ImgCache': 'ImgCache',
                '../UI/GameEntraScene/MusicLib/HotMusicCMShareController': 'HotMusicCMShareController',
                '../UI/GameEntraScene/mainpage/MainpageBaseComponent': 'MainpageBaseComponent',
                '../UI/GameEntraScene/mainpage/WelfareController': 'WelfareController',
                '../reward/ActivityBean': 'ActivityBean',
                '../reward/ActivityRewardManager': 'ActivityRewardManager',
                './SkinTryData': 'SkinTryData',
                './SkinUtils': 'SkinUtils',
            },
        ],
        CMPlayAdapter: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '99af6VO1OBFdpWRCUoHO/Do', 'CMPlayAdapter'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.needDownloadRes = function () {
                            return !1;
                        }),
                        (t.prototype.isSupportDownloadRes = function () {
                            return !1;
                        }),
                        (t.prototype.createCanvas = function () {
                            return e.prototype.createCanvas.call(this);
                        }),
                        (t.prototype.createImage = function () {
                            return e.prototype.createImage.call(this);
                        }),
                        (t.prototype.onShowListen = function (e) {}),
                        (t.prototype.offShowListen = function (e) {}),
                        (t.prototype.onHideListen = function (e) {}),
                        (t.prototype.offHideListen = function (e) {}),
                        (t.prototype.getLaunchParameter = function () {
                            return null;
                        }),
                        (t.prototype.getShareCanvas = function () {
                            return e.prototype.getShareCanvas.call(this);
                        }),
                        (t.prototype.getUserDataPath = function () {
                            return '';
                        }),
                        (t.prototype.unZip = function (e, t, i, o) {
                            o && o();
                        }),
                        (t.prototype.downloadFile = function (e, t, i, o, n) {
                            return void 0 === o && (o = 0), void 0 === n && (n = !0), i && i(), null;
                        }),
                        (t.prototype.getFileSystemManager = function () {
                            return e.prototype.getFileSystemManager.call(this);
                        }),
                        (t.prototype.getImageSrc = function (e) {
                            return e;
                        }),
                        (t.prototype.loadImage = function (e) {}),
                        (t.prototype.getSharePath = function (e) {
                            return e;
                        }),
                        (t.prototype.saveShareTmpFile = function (e, t) {
                            return '';
                        }),
                        t
                    );
                })(e('./DefaultAdapter').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './DefaultAdapter': 'DefaultAdapter',
            },
        ],
        CMTouchEvent: [
            function (e, t, i) {
                'use strict';
                var o, n, a, r, s;
                cc._RF.push(t, '2315cCSX6VAw7sifTubrubV', 'CMTouchEvent'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    ((n = o = i.CMState || (i.CMState = {}))[(n.IDLE = 0)] = 'IDLE'),
                    (n[(n.PRESSED = 1)] = 'PRESSED'),
                    (n[(n.RELEASED = 2)] = 'RELEASED'),
                    ((a = i.CMTouchState || (i.CMTouchState = {}))[(a.IDLE = 0)] = 'IDLE'),
                    (a[(a.PRESSED = 1)] = 'PRESSED'),
                    (a[(a.ERROR = 2)] = 'ERROR'),
                    ((s = r = i.CMTouchID || (i.CMTouchID = {}))[(s.D = 0)] = 'D'),
                    (s[(s.F = 1)] = 'F'),
                    (s[(s.J = 2)] = 'J'),
                    (s[(s.K = 3)] = 'K');
                var c = (function () {
                    function e() {
                        (this.touchs = []),
                            this.touchs.push({
                                id: r.D,
                                state: o.IDLE,
                                x: 0,
                                y: 0,
                                update: !1,
                            }),
                            this.touchs.push({
                                id: r.F,
                                state: o.IDLE,
                                x: 0,
                                y: 0,
                                update: !1,
                            }),
                            this.touchs.push({
                                id: r.J,
                                state: o.IDLE,
                                x: 0,
                                y: 0,
                                update: !1,
                            }),
                            this.touchs.push({
                                id: r.K,
                                state: o.IDLE,
                                x: 0,
                                y: 0,
                                update: !1,
                            });
                    }
                    return (
                        (e.prototype.update = function (e, t, i, o) {
                            void 0 === i && (i = 0), void 0 === o && (o = 0);
                            for (var n = 0; n < this.touchs.length; n++) {
                                var a = this.touchs[n];
                                if (a.id == e && t != a.state) {
                                    (a.state = t), (a.x = i), (a.y = o), (a.update = !0);
                                    break;
                                }
                            }
                        }),
                        (e.prototype.getPressedEvents = function () {
                            for (var e = [], t = 0; t < this.touchs.length; t++) {
                                var i = this.touchs[t];
                                i.update && i.state == o.PRESSED && (e.push(i), (i.update = !1));
                            }
                            return e;
                        }),
                        (e.prototype.getReleasedEvents = function () {
                            for (var e = [], t = 0; t < this.touchs.length; t++) {
                                var i = this.touchs[t];
                                i.update && i.state == o.RELEASED && (e.push(i), (i.update = !1));
                            }
                            return e;
                        }),
                        e
                    );
                })();
                (i.CMTouchEvent = c), cc._RF.pop();
            },
            {},
        ],
        CSV: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '0382fqCNNtP+IgKYN8A5EDC', 'CSV'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('./CsvOption'),
                    r = ['|', '^'],
                    a = [',', ';', '\t', '|', '^'],
                    s = ['\r\n', '\r', '\n'],
                    o = (function () {
                        function e(e, t) {
                            if ((t || (t = new n.default()), y(e))) this.mode = 'encode';
                            else {
                                if ('string' != typeof e) throw new Error('Incompatible format!');
                                this.mode = 'parse';
                            }
                            this.data = e;
                            var i = (this.options = t).lineDelimiter || t.line,
                                o = t.cellDelimiter || t.delimiter;
                            this.isParser() ? ((this.options.lineDelimiter = i || c(this.data, s)), (this.options.cellDelimiter = o || c(this.data, a))) : this.isEncoder() && ((this.options.lineDelimiter = i || '\r\n'), (this.options.cellDelimiter = o || ','));
                        }
                        return (
                            (e.prototype.isParser = function () {
                                return 'parse' == this.mode;
                            }),
                            (e.prototype.isEncoder = function () {
                                return 'encode' == this.mode;
                            }),
                            (e.prototype.parse = function (e) {
                                if (this.isParser) {
                                    if (0 === this.data.trim().length) return [];
                                    var t,
                                        i,
                                        o = this.data,
                                        n = this.options,
                                        a = n.header,
                                        r = {
                                            cell: '',
                                            line: [],
                                        };
                                    e ||
                                        ((i = []),
                                        (e = function (e) {
                                            i.push(e);
                                        })),
                                        1 == n.lineDelimiter.length && (g = m);
                                    var s,
                                        c,
                                        l,
                                        u = o.length,
                                        d = n.cellDelimiter.charCodeAt(0),
                                        p = n.lineDelimiter.charCodeAt(n.lineDelimiter.length - 1);
                                    for (h(), c = s = 0; s < u; s++) (l = o.charCodeAt(s)), t.cell && ((t.cell = !1), 34 == l) ? (t.escaped = !0) : t.escaped && 34 == l ? (t.quote = !t.quote) : ((t.escaped && t.quote) || !t.escaped) && (l == d && (m(r.cell + o.slice(c, s)), (c = s + 1)), l == p ? (g(r.cell + o.slice(c, s)), (c = s + 1), _(), f()) : s == u - 1 && (m(r.cell + o.slice(c, u)), (c = s + 1), _(), f()));
                                    return i || this;
                                }

                                function h() {
                                    t = {
                                        escaped: !1,
                                        quote: !1,
                                        cell: !0,
                                    };
                                }

                                function f() {
                                    r.line = [];
                                }

                                function m(e) {
                                    r.line.push(t.escaped ? e.slice(1, -1).replace(/""/g, '"') : e), (r.cell = ''), h();
                                }

                                function g(e) {
                                    m(e.slice(0, 1 - n.lineDelimiter.length));
                                }

                                function _() {
                                    a ? (y(a) ? e(r.line) : (a = r.line)) : e(r.line);
                                }
                            }),
                            e
                        );
                    })();
                i.default = o;
                var y =
                    Array.isArray ||
                    function (e) {
                        return '[object Array]' === toString.call(e);
                    };

                function c(o, e) {
                    var n,
                        a = 0;
                    return (
                        e.forEach(function (e) {
                            var t = e;
                            -1 != r.indexOf(e) && (t = '\\' + t);
                            var i = o.match(new RegExp(t, 'g'));
                            i && i.length > a && ((a = i.length), (n = e));
                        }),
                        n || e[0]
                    );
                }
                cc._RF.pop();
            },
            {
                './CsvOption': 'CsvOption',
            },
        ],
        CanvasFunction: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'f753ai2X01LlJu+2NU9SKyA', 'CanvasFunction'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    (function (e) {
                        var l = Math.PI / 2;

                        function r(e, t, i, o, n, a, r) {
                            var s = i.rect;
                            if (i.rotated) {
                                var c = l;
                                e.rotate(-c), e.drawImage(t.image, s.x, s.y, s.height, s.width, n, o, r, a), e.rotate(c);
                            } else e.drawImage(t.image, s.x, s.y, s.width, s.height, o, n, a, r);
                        }
                        (e.drawPartImageItemScale = function (e, t, i, o, n, a, r, s, c, l, u) {
                            var d = i.rect;
                            e.drawImage(t.image, d.x + o, d.y + n, a, r, s, c, l, u);
                        }),
                            (e.drawImageItemScale = r),
                            (e.drawImageItem = function (e, t, i, o, n) {
                                var a = i.rect;
                                r(e, t, i, o, n, a.width, a.height);
                            });
                    })(i.CanvasFunction || (i.CanvasFunction = {})),
                    cc._RF.pop();
            },
            {},
        ],
        ChangePlayIdPrefb: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'c57504shhxJyLmT5rcPeyCY', 'ChangePlayIdPrefb'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../base/Log'),
                    n = e('../../../util/StringUtil'),
                    a = e('../../../../modules/MGBasic/scripts/Logic/MGBasicEntrance'),
                    r = cc._decorator,
                    s = r.ccclass,
                    c = r.property,
                    l = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mOKBtn = null), (e.mInputEditBox = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.onLoad = function () {
                                this.mOKBtn.node.on(cc.Node.EventType.TOUCH_END, this.onOK, this);
                                var e = a.MGBasic.getStorage(this.getStorageKey());
                                n.StringUtil.isEmpty(e) || (this.mInputEditBox.string = e);
                            }),
                            (e.prototype.onOK = function () {
                                var e = this.mInputEditBox.string;
                                o.default.l('[ChangePlayIdPrefb] input playID=' + e), e && 0 < e.length ? a.MGBasic.setStorage(this.getStorageKey(), e) : a.MGBasic.setStorage(this.getStorageKey(), ''), this.node.destroy();
                            }),
                            (e.prototype.getStorageKey = function () {
                                return 'web_playid';
                            }),
                            __decorate([c(cc.Button)], e.prototype, 'mOKBtn', void 0),
                            __decorate([c(cc.EditBox)], e.prototype, 'mInputEditBox', void 0),
                            (e = __decorate([s], e))
                        );
                    })(cc.Component);
                (i.default = l), cc._RF.pop();
            },
            {
                '../../../../modules/MGBasic/scripts/Logic/MGBasicEntrance': 'MGBasicEntrance',
                '../../../base/Log': 'Log',
                '../../../util/StringUtil': 'StringUtil',
            },
        ],
        CheckActivityRewardProcessor: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'cc1a1y1aZhNsbPJuWSG4els', 'CheckActivityRewardProcessor'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var g = e('../../../base/Log'),
                    c = e('../../../base/G'),
                    d = e('../../../util/StringUtil'),
                    _ = e('../../reward/ActivityRewardManager'),
                    y = e('../../reward/ActivityBean'),
                    S = e('./ActivityInviteTipsPrefab'),
                    p = e('../../Network/Protocol/StorageUtil'),
                    h = e('../../../config/LSKey'),
                    f = e('../../Logic/Plugin/UnlockProcessor'),
                    m = e('../../Logic/NotifyEvent'),
                    v = e('../../Logic/EventBus'),
                    I = e('../../../infoc/minigame_piano2_hotmusic'),
                    l = e('../../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    u = e('../../../../modules/MGAppShare/scripts/ShareHelper'),
                    T = e('../../../util/QQReport'),
                    C = e('./PrefabMgr'),
                    E = e('../../Logic/SkinDataManager'),
                    A = e('../../skin/frag/SkinTaskMgr'),
                    P = e('../../HolidayGift/HolidayTaskMgr'),
                    k = e('./MusicLib/HotMusicCMShareController'),
                    o = (function () {
                        function e(e) {
                            (this.mDialogManager = null), (this.mCheckingShareForSkinInvitee = !1), (this.mCheckingShareForSkinInviter = !1), (this.mCMCheckingShareForSkinInviter = !1), (this.mCMCheckingShareForSongInviter = !1), (this.mCheckingShareForSongInvitee = !1), (this.mCheckingShareForSongInviter = !1), (this.mCheckingShareForSkinPieceInvitee = !1), (this.mCheckingShareForSkinPieceInviter = !1), (this.mCheckingShareForAddFriendInvitee = !1), (this.mCheckingShareForAddFriendInviter = !1), (this.mCheckingShareForToneInvitee = !1), (this.mCheckingShareForToneInviter = !1), (this.prefabName = 'prefab/ActivityInviteTipsPrefab'), (this.mDialogManager = e);
                        }
                        return (
                            (e.prototype.checkLittleStarInviteeReward = function () {
                                return __awaiter(this, void 0, void 0, function () {
                                    return __generator(this, function (e) {
                                        switch (e.label) {
                                            case 0:
                                                return [4, this.checkShareForSkinInviteeReward()];
                                            case 1:
                                                return e.sent(), [2];
                                        }
                                    });
                                });
                            }),
                            (e.prototype.checkShareForSkinInviteeReward = function () {
                                var r = this;
                                return new Promise(function (i, e) {
                                    if (1 != r.mCheckingShareForSkinInvitee) {
                                        var t = c.G.getLaunchOption();
                                        if (t && t.query) {
                                            var o = void 0,
                                                n = void 0;
                                            if (t.query.source == u.ShareHelper.SHARE_SOURCE_INVITE_SKIN) (n = t.query.activityId), (o = t.query.inviterId);
                                            else if (t.query.q) {
                                                var a = decodeURIComponent(t.query.q);
                                                (o = d.StringUtil.getQueryString(a, 'id')), (n = d.StringUtil.getQueryString(a, 'act'));
                                            }
                                            if (!o || '' === o) return void i(!1);
                                            (r.mCheckingShareForSkinInvitee = !0),
                                                l.MGUser.getUserLoginInfo({
                                                    complete: function (e) {
                                                        e && e.playerId == o
                                                            ? ((r.mCheckingShareForSkinInviter = !1), i(!1))
                                                            : n && '' !== n
                                                            ? _.ActivityRewardMgr.Ins().acceptInvite(n, o, function (e, t) {
                                                                  (r.mCheckingShareForSkinInvitee = !1), i(e);
                                                              })
                                                            : ((r.mCheckingShareForSkinInvitee = !1), i(!1));
                                                    },
                                                });
                                        } else i(!1);
                                    } else i(!1);
                                });
                            }),
                            (e.prototype.checkShareForSkinInviterReward = function (a, r) {
                                var s = this;
                                return new Promise(function (n, e) {
                                    if (1 != s.mCheckingShareForSkinInviter) {
                                        s.mCheckingShareForSkinInviter = !0;
                                        var t = _.ActivityRewardMgr.Ins().getCacheInviteRewardListSize(y.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SKIN);
                                        _.ActivityRewardMgr.Ins().getInviteSuccessListComplete(y.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SKIN, function (o) {
                                            if (!o) return (s.mCheckingShareForSkinInviter = !1), void n(!1);
                                            3 <= o.length
                                                ? p.default.read(h.default.HAS_SHOW_INVITE_3_FOR_SKIN_DIALOG)
                                                    ? ((s.mCheckingShareForSkinInviter = !1), n(!1))
                                                    : C.default.load(s.prefabName, function (e, t) {
                                                          if (t) {
                                                              p.default.save(h.default.HAS_SHOW_INVITE_3_FOR_SKIN_DIALOG, 'true');
                                                              var i = t.getComponent(S.default);
                                                              i.setContent('您已经成功邀请3名新玩家进入游戏，赠送您冰雪奇缘皮肤'),
                                                                  i.setBottomTips('立即使用'),
                                                                  i.setCloseCallback(function () {
                                                                      s.mDialogManager.dismissDialog(t), r && r(n), (s.mCheckingShareForSkinInviter = !1), n(!0);
                                                                  }),
                                                                  i.setConfirmCallback(function () {
                                                                      s.mDialogManager.dismissDialog(t), a && a(!0, n), (s.mCheckingShareForSkinInviter = !1), n(!0);
                                                                  }),
                                                                  s.mDialogManager.showDialog(t);
                                                          } else (s.mCheckingShareForSkinInviter = !1), n(!1);
                                                      })
                                                : t < o.length
                                                ? C.default.load(s.prefabName, function (e, t) {
                                                      if (t) {
                                                          var i = t.getComponent(S.default);
                                                          i.setContent('您已经成功邀请' + o.length + '名新玩家进入游戏，再邀请' + (3 - o.length) + '人即可获得冰雪奇缘皮肤'),
                                                              i.setBottomTips('继续邀请'),
                                                              i.setCloseCallback(function () {
                                                                  s.mDialogManager.dismissDialog(t), r && r(n), (s.mCheckingShareForSkinInviter = !1), n(!0);
                                                              }),
                                                              i.setConfirmCallback(function () {
                                                                  s.mDialogManager.dismissDialog(t), a && a(!1, n), (s.mCheckingShareForSkinInviter = !1), n(!0);
                                                              }),
                                                              s.mDialogManager.showDialog(t);
                                                      } else (s.mCheckingShareForSkinInviter = !1), n(!1);
                                                  })
                                                : ((s.mCheckingShareForSkinInviter = !1), n(!1));
                                        });
                                    } else n(!1);
                                });
                            }),
                            (e.prototype.checkCMShareForSkinInviterReward = function (s, c, l) {
                                var u = this;
                                return new Promise(function (a, e) {
                                    if (1 == u.mCMCheckingShareForSkinInviter || null == s) return g.default.l('[CheckActivityRewardProcessor.checkShareForSkinInviterReward] mCheckingInviter is true'), void a(!1);
                                    u.mCMCheckingShareForSkinInviter = !0;
                                    var r = [];
                                    s.forEach(function (e) {
                                        r.push(y.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SKIN + '_' + e.name);
                                    });
                                    _.ActivityRewardMgr.Ins().getCacheInviteRewardListSize(y.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SKIN);
                                    _.ActivityRewardMgr.Ins().getInviteList(r, function (t) {
                                        if (!t)
                                            return (
                                                g.default.i('[checkShareForSongInviterReward] 网络返回数据为空'),
                                                setTimeout(function () {
                                                    u.mCMCheckingShareForSkinInviter = !1;
                                                }, 5e3),
                                                void a(!1)
                                            );
                                        g.default.i('[CheckActivityRewardProcessor] 服务端返回数据 data: ', t);
                                        for (
                                            var i = !1,
                                                e = function (o) {
                                                    var e = t.get(r[o]);
                                                    if (!e || e.length <= 0)
                                                        return (
                                                            setTimeout(function () {
                                                                u.mCMCheckingShareForSkinInviter = !1;
                                                            }, 5e3),
                                                            a(!1),
                                                            {
                                                                value: void 0,
                                                            }
                                                        );
                                                    var n = [];
                                                    if (
                                                        (0 < e.length &&
                                                            e.forEach(function (e) {
                                                                if ((n.push(e), e.is_new_player)) {
                                                                    var t = Object.assign({}, e);
                                                                    (t.needMark = !0), n.push(t);
                                                                }
                                                            }),
                                                        n.length >= E.SkinDataMgr.Ins().getSkinInviteLimitBySkiniId(s[o].name))
                                                    ) {
                                                        if (i) return 'continue';
                                                        k.default.Ins().removeSkinItemInfo(s[o]);
                                                        (i = !0),
                                                            C.default.load(u.prefabName, function (e, t) {
                                                                if (t) {
                                                                    var i = t.getComponent(S.default);
                                                                    i.setContent('您已经成功邀请' + n.length + '名好友成功助力，赠送您' + s[o].displayName + '皮肤'),
                                                                        i.setBottomTips('立即使用'),
                                                                        i.setCloseCallback(function () {
                                                                            u.mDialogManager.dismissDialog(t),
                                                                                l && l(a),
                                                                                setTimeout(function () {
                                                                                    u.mCMCheckingShareForSkinInviter = !1;
                                                                                }, 5e3),
                                                                                a(!0);
                                                                        }),
                                                                        i.setConfirmCallback(function () {
                                                                            u.mDialogManager.dismissDialog(t),
                                                                                c && c(!0, a),
                                                                                setTimeout(function () {
                                                                                    u.mCMCheckingShareForSkinInviter = !1;
                                                                                }, 5e3),
                                                                                a(!0);
                                                                        }),
                                                                        u.mDialogManager.showDialog(t);
                                                                } else
                                                                    setTimeout(function () {
                                                                        u.mCMCheckingShareForSkinInviter = !1;
                                                                    }, 5e3),
                                                                        a(!1);
                                                            });
                                                    } else
                                                        setTimeout(function () {
                                                            u.mCMCheckingShareForSkinInviter = !1;
                                                        }, 5e3),
                                                            a(!1);
                                                },
                                                o = 0;
                                            o < r.length;
                                            o++
                                        ) {
                                            var n = e(o);
                                            if ('object' == typeof n) return n.value;
                                        }
                                        i ||
                                            (setTimeout(function () {
                                                u.mCMCheckingShareForSkinInviter = !1;
                                            }, 5e3),
                                            a(!1));
                                    });
                                });
                            }),
                            (e.prototype.checkShareForSongInviteeReward = function () {
                                var a = this;
                                return new Promise(function (i, e) {
                                    if (1 != a.mCheckingShareForSongInvitee) {
                                        var t = c.G.getLaunchOption();
                                        if (t && t.query) {
                                            var o = void 0,
                                                n = void 0;
                                            if ((t.query.source == u.ShareHelper.SHARE_SOURCE_INVITE_SONG && ((n = t.query.activityId), (o = t.query.inviterId)), !o || '' === o)) return void i(!1);
                                            (a.mCheckingShareForSongInvitee = !0),
                                                l.MGUser.getUserLoginInfo({
                                                    complete: function (e) {
                                                        e && e.playerId == o
                                                            ? ((a.mCheckingShareForSongInvitee = !1), i(!1))
                                                            : n && '' !== n
                                                            ? _.ActivityRewardMgr.Ins().acceptInvite(n, o, function (e, t) {
                                                                  (a.mCheckingShareForSongInvitee = !1), i(e);
                                                              })
                                                            : ((a.mCheckingShareForSongInvitee = !1), i(!1));
                                                    },
                                                });
                                        } else (a.mCheckingShareForSongInvitee = !1), i(!1);
                                    } else i(!1);
                                });
                            }),
                            (e.prototype.checkShareForSongInviterReward = function (s, c, l) {
                                var u = this;
                                return new Promise(function (a, e) {
                                    if (1 != u.mCheckingShareForSongInviter && null != s) {
                                        u.mCheckingShareForSongInviter = !0;
                                        var r = [];
                                        s.forEach(function (e) {
                                            r.push(y.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SONG + e.musicId);
                                        }),
                                            g.default.i('[CheckActivityRewardProcessor] hd_ids =  ', r),
                                            _.ActivityRewardMgr.Ins().getBatchInviteSuccessListComplete(r, function (e) {
                                                if (!e)
                                                    return (
                                                        setTimeout(function () {
                                                            u.mCheckingShareForSongInviter = !1;
                                                        }, 5e3),
                                                        void a(!1)
                                                    );
                                                g.default.i('[CheckActivityRewardProcessor] 服务端返回数据 data: ', e);
                                                for (var t = !1, i = 0; i < r.length; i++) {
                                                    var o = e.get(r[i]);
                                                    if (o && 0 < o.length && !o[0].isConsume) {
                                                        _.ActivityRewardMgr.Ins().cosumeInviteRewardInfo(r[i], o[0]);
                                                        var n = f.default.unlockByShare(s[i].id, s[i].musicId);
                                                        if ((console.log('[CheckActivityRewardProcessor] UnlockProcessor.unlockByShare unlock = ' + n + ',items[i].musicId = ' + s[i].musicId), I.default.report(I.default.ACTION_INVITE_SUCC, 0, s[i].musicId, d.StringUtil.getFixedlengthStr(s[i].musicName, 16), 1), T.QQReport.reportUnLockSong(1), t)) continue;
                                                        (t = !0),
                                                            C.default.load(u.prefabName, function (e, t) {
                                                                if (t) {
                                                                    p.default.save(h.default.HAS_SHOW_INVITE_FOR_SONG_DIALOG, 'true');
                                                                    var i = t.getComponent(S.default);
                                                                    i.setContent('已经有新玩家帮您解锁了热曲，快去弹奏吧'),
                                                                        i.setBottomTips('去弹奏'),
                                                                        i.setCloseCallback(function () {
                                                                            u.mDialogManager.dismissDialog(t),
                                                                                l && l(a),
                                                                                setTimeout(function () {
                                                                                    u.mCheckingShareForSongInviter = !1;
                                                                                }, 5e3),
                                                                                a(!0);
                                                                        }),
                                                                        i.setConfirmCallback(function () {
                                                                            u.mDialogManager.dismissDialog(t),
                                                                                c && c(!0, a),
                                                                                setTimeout(function () {
                                                                                    u.mCheckingShareForSongInviter = !1;
                                                                                }, 5e3),
                                                                                a(!0);
                                                                        }),
                                                                        u.mDialogManager.showDialog(t),
                                                                        v.default.fire(m.default.UPDATE_MUSIC_LIST_HEIGHT, 1);
                                                                } else
                                                                    setTimeout(function () {
                                                                        u.mCheckingShareForSongInviter = !1;
                                                                    }, 5e3),
                                                                        a(!1);
                                                            });
                                                    }
                                                }
                                                t ||
                                                    (setTimeout(function () {
                                                        u.mCheckingShareForSongInviter = !1;
                                                    }, 5e3),
                                                    a(!1));
                                            });
                                    } else a(!1);
                                });
                            }),
                            (e.prototype.checkCMShareForSongInviterReward = function (s, c, l) {
                                var u = this;
                                return (
                                    g.default.l('CMPlayShare [CheckActivityRewardProcessor.checkShareForSongInviterReward] enter'),
                                    new Promise(function (a, e) {
                                        if (1 == u.mCMCheckingShareForSongInviter || null == s) return g.default.l('[CheckActivityRewardProcessor.checkShareForSongInviterReward] mCheckingInviter is true'), void a(!1);
                                        u.mCMCheckingShareForSongInviter = !0;
                                        var r = [];
                                        s.forEach(function (e) {
                                            r.push(y.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SONG + '_' + e.musicId);
                                        }),
                                            g.default.i('[CheckActivityRewardProcessor] hd_ids =  ', r),
                                            _.ActivityRewardMgr.Ins().getInviteList(r, function (e) {
                                                if (!e)
                                                    return (
                                                        setTimeout(function () {
                                                            u.mCMCheckingShareForSongInviter = !1;
                                                        }, 5e3),
                                                        void a(!1)
                                                    );
                                                g.default.i('[CheckActivityRewardProcessor] 服务端返回数据 data: ', e);
                                                for (var t = !1, i = 0; i < r.length; i++) {
                                                    var o = e.get(r[i]);
                                                    if (o && 0 < o.length) {
                                                        var n = f.default.unlockByVideo(s[i].id, s[i].musicId);
                                                        if ((k.default.Ins().removeItemInfo(s[i]), console.log('[CheckActivityRewardProcessor] UnlockProcessor.unlockByShare unlock = ' + n + ',items[i].musicId = ' + s[i].musicId), t)) continue;
                                                        (t = !0),
                                                            C.default.load(u.prefabName, function (e, t) {
                                                                if (t) {
                                                                    p.default.save(h.default.HAS_SHOW_INVITE_FOR_SONG_DIALOG, 'true');
                                                                    var i = t.getComponent(S.default);
                                                                    i.setContent('已经有好友助力帮您解锁了热曲，快去弹奏吧'),
                                                                        i.setBottomTips('去弹奏'),
                                                                        i.setCloseCallback(function () {
                                                                            u.mDialogManager.dismissDialog(t),
                                                                                l && l(a),
                                                                                setTimeout(function () {
                                                                                    u.mCMCheckingShareForSongInviter = !1;
                                                                                }, 5e3),
                                                                                a(!0);
                                                                        }),
                                                                        i.setConfirmCallback(function () {
                                                                            u.mDialogManager.dismissDialog(t),
                                                                                c && c(!0, a),
                                                                                setTimeout(function () {
                                                                                    u.mCMCheckingShareForSongInviter = !1;
                                                                                }, 5e3),
                                                                                a(!0);
                                                                        }),
                                                                        u.mDialogManager.showDialog(t),
                                                                        v.default.fire(m.default.UPDATE_MUSIC_LIST_HEIGHT, 1);
                                                                } else
                                                                    setTimeout(function () {
                                                                        u.mCMCheckingShareForSongInviter = !1;
                                                                    }, 5e3),
                                                                        a(!1);
                                                            });
                                                    } else
                                                        setTimeout(function () {
                                                            u.mCMCheckingShareForSongInviter = !1;
                                                        }, 5e3),
                                                            a(!1);
                                                }
                                                t ||
                                                    (setTimeout(function () {
                                                        u.mCMCheckingShareForSongInviter = !1;
                                                    }, 5e3),
                                                    a(!1));
                                            });
                                    })
                                );
                            }),
                            (e.prototype.checksShareForSkinInvitee = function () {
                                var s = this;
                                return new Promise(function (o, e) {
                                    if (1 != s.mCheckingShareForSkinPieceInvitee) {
                                        var t = c.G.getLaunchOption();
                                        if (t && t.query) {
                                            var i = void 0,
                                                n = void 0,
                                                a = '佚名',
                                                r = '';
                                            if ((t.query.source == u.ShareHelper.SHARE_SOURCE_SKIN_PIECE && ((n = t.query.activityId), (i = t.query.inviterId), (a = t.query.nickName), (r = t.query.skinId)), !i || '' === i)) return void o(!1);
                                            (s.mCheckingShareForSkinPieceInvitee = !0),
                                                l.MGUser.getUserLoginInfo({
                                                    complete: function (e) {
                                                        e && e.playerId == i
                                                            ? ((s.mCheckingShareForSkinPieceInvitee = !1), o(!1))
                                                            : n && '' !== n
                                                            ? _.ActivityRewardMgr.Ins().acceptInvite(n, i, function (e, t) {
                                                                  e && t.valid
                                                                      ? (C.default.load(s.prefabName, function (e, t) {
                                                                            if (t) {
                                                                                var i = t.getComponent(S.default);
                                                                                i.setContent(cc.js.formatStr('您已经帮助玩家“%s”获得了《%s》皮肤碎片', a, E.SkinDataMgr.Ins().getSkinItemInfoBySkinId(r).displayName)),
                                                                                    i.setBottomTips('确定'),
                                                                                    i.setCloseCallback(function () {
                                                                                        s.mDialogManager.dismissDialog(t),
                                                                                            setTimeout(function () {
                                                                                                s.mCheckingShareForSkinPieceInvitee = !1;
                                                                                            }, 5e3),
                                                                                            o(!0);
                                                                                    }),
                                                                                    i.setConfirmCallback(function () {
                                                                                        s.mDialogManager.dismissDialog(t),
                                                                                            setTimeout(function () {
                                                                                                s.mCheckingShareForSkinPieceInvitee = !1;
                                                                                            }, 5e3),
                                                                                            o(!0);
                                                                                    }),
                                                                                    s.mDialogManager.showDialog(t);
                                                                            } else
                                                                                setTimeout(function () {
                                                                                    s.mCheckingShareForSkinPieceInvitee = !1;
                                                                                }, 5e3),
                                                                                    o(!1);
                                                                        }),
                                                                        o(e))
                                                                      : ((s.mCheckingShareForSkinPieceInvitee = !1), o(!1));
                                                              })
                                                            : ((s.mCheckingShareForSkinPieceInvitee = !1), o(!1));
                                                    },
                                                });
                                        } else (s.mCheckingShareForSkinPieceInvitee = !1), o(!1);
                                    } else o(!1);
                                });
                            }),
                            (e.prototype.checkShareForSkinPieceInviterReward = function (p, h, f) {
                                var m = this;
                                return new Promise(function (u, e) {
                                    if (1 != m.mCheckingShareForSkinPieceInviter && null != p) {
                                        m.mCheckingShareForSkinPieceInviter = !0;
                                        var d = [];
                                        p.forEach(function (e) {
                                            d.push(y.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SKIN_PIECE + e.skinId);
                                        }),
                                            g.default.i('[CheckActivityRewardProcessor] checkShareForSkinPieceInviterReward hd_ids =  ', d),
                                            _.ActivityRewardMgr.Ins().getBatchInviteSuccessListComplete(d, function (s) {
                                                if (!s)
                                                    return (
                                                        setTimeout(function () {
                                                            m.mCheckingShareForSkinPieceInviter = !1;
                                                        }, 5e3),
                                                        void u(!1)
                                                    );
                                                g.default.i('[CheckActivityRewardProcessor] checkShareForSkinPieceInviterReward 服务端返回数据 data: ', s);
                                                for (
                                                    var c = !1,
                                                        l = !1,
                                                        e = function (o) {
                                                            var e = s.get(d[o]);
                                                            if (e && 0 < e.length && !e[0].isConsume) {
                                                                for (var t = 0, n = '佚名', i = 0; i < e.length; i++) {
                                                                    var a = e[i];
                                                                    a.is_new_player && !a.isConsume && ((n = a.nickname), _.ActivityRewardMgr.Ins().cosumeInviteRewardInfo(d[o], a), t++);
                                                                }
                                                                if ((g.default.i('[CheckActivityRewardProcessor] checkShareForSkinPieceInviterReward =====>>> count ' + t), 0 < t)) {
                                                                    var r = new A.ShareEvent();
                                                                    (r.skinId = p[o].skinId), (r.count = t), A.default.Ins().notifyShareEvent(r), (l = !0);
                                                                }
                                                                if (c) return 'continue';
                                                                l &&
                                                                    ((c = !0),
                                                                    C.default.load(m.prefabName, function (e, t) {
                                                                        if (t) {
                                                                            var i = t.getComponent(S.default);
                                                                            i.setContent(cc.js.formatStr('玩家“%s”等帮助您获得了《%s》皮肤碎片', n, E.SkinDataMgr.Ins().getSkinItemInfoBySkinId(p[o].skinId).displayName)),
                                                                                i.setBottomTips('去查看'),
                                                                                i.setCloseCallback(function () {
                                                                                    m.mDialogManager.dismissDialog(t),
                                                                                        f && f(u),
                                                                                        setTimeout(function () {
                                                                                            m.mCheckingShareForSkinPieceInviter = !1;
                                                                                        }, 5e3),
                                                                                        u(!0);
                                                                                }),
                                                                                i.setConfirmCallback(function () {
                                                                                    m.mDialogManager.dismissDialog(t),
                                                                                        h && h(p[o].skinId, u),
                                                                                        setTimeout(function () {
                                                                                            m.mCheckingShareForSkinPieceInviter = !1;
                                                                                        }, 5e3),
                                                                                        u(!0);
                                                                                }),
                                                                                m.mDialogManager.showDialog(t);
                                                                        } else
                                                                            setTimeout(function () {
                                                                                m.mCheckingShareForSkinPieceInviter = !1;
                                                                            }, 5e3),
                                                                                u(!1);
                                                                    }));
                                                            }
                                                        },
                                                        t = 0;
                                                    t < d.length;
                                                    t++
                                                )
                                                    e(t);
                                                c ||
                                                    (setTimeout(function () {
                                                        m.mCheckingShareForSkinPieceInviter = !1;
                                                    }, 5e3),
                                                    u(!1));
                                            });
                                    } else u(!1);
                                });
                            }),
                            (e.prototype.checkShareForToneInvitee = function () {
                                var r = this;
                                return new Promise(function (i, e) {
                                    if (1 != r.mCheckingShareForToneInvitee) {
                                        var t = c.G.getLaunchOption();
                                        if (t && t.query) {
                                            var o = void 0,
                                                n = void 0,
                                                a = '佚名';
                                            if ((t.query.source == u.ShareHelper.SHARE_SOURCE_TONE && ((n = t.query.activityId), (o = t.query.inviterId), (a = t.query.nickName)), g.default.i('[CheckActivityRewardProcessor.checkShareForSongInviteeReward] activityId = ' + n + ',inviterId = ' + o + ',nickName = ' + a), !o || '' === o)) return void i(!1);
                                            (r.mCheckingShareForToneInvitee = !0),
                                                l.MGUser.getUserLoginInfo({
                                                    complete: function (e) {
                                                        e && e.playerId == o
                                                            ? ((r.mCheckingShareForToneInvitee = !1), i(!1))
                                                            : n && '' !== n
                                                            ? _.ActivityRewardMgr.Ins().acceptInvite(n, o, function (e, t) {
                                                                  g.default.i('[CheckActivityRewardProcessor.checkShareForToneInvitee] acceptInvite result = ' + e + ',helpRewardInfo = ', t), (r.mCheckingShareForToneInvitee = !1), i(!1);
                                                              })
                                                            : ((r.mCheckingShareForToneInvitee = !1), i(!1));
                                                    },
                                                });
                                        } else (r.mCheckingShareForToneInvitee = !1), i(!1);
                                    } else i(!1);
                                });
                            }),
                            (e.prototype.checkShareForToneInviter = function (c, e, t) {
                                var o = this;
                                return new Promise(function (i, e) {
                                    if (1 != o.mCheckingShareForToneInviter && c && 0 != c.length) {
                                        o.mCheckingShareForToneInviter = !0;
                                        var s = [];
                                        c.forEach(function (e) {
                                            s.push(y.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_UNLOCK_TONE + e.taskID);
                                        }),
                                            g.default.i('[CheckActivityRewardProcessor] checkShareForToneInviter hd_ids =  ', s),
                                            _.ActivityRewardMgr.Ins().getBatchInviteSuccessListComplete(s, function (a) {
                                                if (!a)
                                                    return (
                                                        setTimeout(function () {
                                                            o.mCheckingShareForToneInviter = !1;
                                                        }, 5e3),
                                                        void i(!1)
                                                    );
                                                g.default.i('[CheckActivityRewardProcessor] checkShareForToneInviter 服务端返回数据 data: ', a);
                                                for (
                                                    var r = !1,
                                                        e = function (e) {
                                                            var t = a.get(s[e]);
                                                            if (t && 0 < t.length) {
                                                                for (var i = 0, o = 0; o < t.length; o++) {
                                                                    var n = t[o];
                                                                    n.is_new_player && !n.isConsume && (n.nickname, _.ActivityRewardMgr.Ins().cosumeInviteRewardInfo(s[e], n), i++);
                                                                }
                                                                if ((g.default.i('[CheckActivityRewardProcessor] checkShareForToneInviter =====>>> count ' + i), 0 < i && P.default.Ins().RefreshTask(c[e].taskKey, i), r)) return 'continue';
                                                                0;
                                                            }
                                                        },
                                                        t = 0;
                                                    t < s.length;
                                                    t++
                                                )
                                                    e(t);
                                                r ||
                                                    (setTimeout(function () {
                                                        o.mCheckingShareForToneInviter = !1;
                                                    }, 5e3),
                                                    i(!1));
                                            });
                                    } else i(!1);
                                });
                            }),
                            e
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../../../../modules/MGAppShare/scripts/ShareHelper': 'ShareHelper',
                '../../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../../base/G': 'G',
                '../../../base/Log': 'Log',
                '../../../config/LSKey': 'LSKey',
                '../../../infoc/minigame_piano2_hotmusic': 'minigame_piano2_hotmusic',
                '../../../util/QQReport': 'QQReport',
                '../../../util/StringUtil': 'StringUtil',
                '../../HolidayGift/HolidayTaskMgr': 'HolidayTaskMgr',
                '../../Logic/EventBus': 'EventBus',
                '../../Logic/NotifyEvent': 'NotifyEvent',
                '../../Logic/Plugin/UnlockProcessor': 'UnlockProcessor',
                '../../Logic/SkinDataManager': 'SkinDataManager',
                '../../Network/Protocol/StorageUtil': 'StorageUtil',
                '../../reward/ActivityBean': 'ActivityBean',
                '../../reward/ActivityRewardManager': 'ActivityRewardManager',
                '../../skin/frag/SkinTaskMgr': 'SkinTaskMgr',
                './ActivityInviteTipsPrefab': 'ActivityInviteTipsPrefab',
                './MusicLib/HotMusicCMShareController': 'HotMusicCMShareController',
                './PrefabMgr': 'PrefabMgr',
            },
        ],
        CheckRewardProcessor: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '51ac2ciB31IYo96YbtlMKXg', 'CheckRewardProcessor'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var r = e('../../Logic/ShareRewardController'),
                    s = e('../../Logic/MoneySystem'),
                    c = e('../../../infoc/m_p2_PData_Dia'),
                    l = e('../../../base/G'),
                    u = e('../../reward/RewardManager'),
                    d = e('../../Logic/EventBus'),
                    p = e('../../Logic/NotifyEvent'),
                    h = e('../../../infoc/m_p2_Uaction'),
                    n = e('../../../util/StringUtil'),
                    o = e('../../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    f = e('../../../../modules/MGAppShare/scripts/MGShareUtil'),
                    a = e('../../../../modules/MGAppShare/scripts/ShareHelper'),
                    m = e('../../awardcontroller/AwardController'),
                    g = e('../../Logic/GameItemsManager'),
                    _ = e('../../../property/PropertyDefines'),
                    y = e('../../Network/Protocol/StorageUtil'),
                    S = e('../../../config/LSKey'),
                    v = e('../../../base/Log'),
                    I = e('../../../util/DateUtil'),
                    T = e('../../../util/TimeUtil'),
                    C = e('../../../SubscriptionUtils'),
                    E = (function () {
                        function i(e) {
                            (this.mDialogManager = null), (this.mCheckingInvitee = !1), (this.mCheckingInviter = !1), (this.FIRST_GET_REWARD_FROM_SUB = 'first'), (this.SIGN_GET_REWARD_FROM_SUB = 'sign'), (this.mDialogManager = e);
                        }
                        return (
                            (i.prototype.checkLittleStarInviteeReward = function (t) {
                                var i = this;
                                if (1 != this.mCheckingInvitee) {
                                    var e = l.G.getLaunchOption();
                                    if ((e && e.query, e && e.query)) {
                                        var o = this.getInviterIdFromQuery(e.query);
                                        if (!o || '' === o) return;
                                        (this.mCheckingInvitee = !0),
                                            r.default.checkLittleStarInviteeReward(
                                                o,
                                                function (e) {
                                                    e ? t.addChild(e) : (i.mCheckingInvitee = !1);
                                                },
                                                function (e) {
                                                    s.MoneySystem.increaseDiamond(e), c.default.report(e, c.default.SOURCE_INVITEE_GET_REWARD, c.default.ACTION_GET_DIAMOND), (i.mCheckingInvitee = !1);
                                                },
                                            );
                                    }
                                }
                            }),
                            (i.prototype.getInviterIdFromQuery = function (e) {
                                var t = void 0;
                                if (e.source == a.ShareHelper.SHARE_SOURCE_INVITE_FRIEND || e.source == a.ShareHelper.SHARE_SOURCE_RELIVE) t = e.inviterId;
                                else if (e.q) {
                                    var i = decodeURIComponent(e.q),
                                        o = n.StringUtil.getQueryString(i, 'act');
                                    (o && '' !== o) || (t = n.StringUtil.getQueryString(i, 'id'));
                                }
                                return t;
                            }),
                            (i.prototype.showFollowCustomerReward = function (e) {
                                var t = this.controlFollowReward();
                                if (n.StringUtil.isEmpty(t)) e(!1);
                                else {
                                    var i = new m.AwardResultInfo();
                                    t == this.FIRST_GET_REWARD_FROM_SUB ? (i.addAwardContent(g.GameItemType.TYPE_DIAMONDS, C.SubscriptionUtils.REWARD_DIAMOND, _.PROPERTYITEMID.ID_DIAMOND), i.addAwardContent(g.GameItemType.TYPE_GOLD, C.SubscriptionUtils.REWARD_COIN, _.PROPERTYITEMID.ID_COINS), i.addAwardContent(g.GameItemType.TYPE_SKIN, 1, _.PROPERTYITEMID.ID_SKIN_STARS1)) : t == this.SIGN_GET_REWARD_FROM_SUB && i.addAwardContent(g.GameItemType.TYPE_DIAMONDS, C.SubscriptionUtils.REWARD_DIAMOND_SGIN, _.PROPERTYITEMID.ID_DIAMOND),
                                        i
                                            .setIsNeedGiveAwardInfo(!0)
                                            .setOkBtn('好的', function () {
                                                m.AwardController.getIns().dismissAwardResultPage(i), e(!0);
                                            })
                                            .setTitlePicPath('/static_res/share_gift_congratulation_title')
                                            .setBottomLeftText(' 恭喜获得 ')
                                            .setBottomRightText(' 关注公众号奖励'),
                                        m.AwardController.getIns().showCommonAwardResultPage(i),
                                        d.default.fire(p.default.GAIN_REWARD_FROM_DESCRIPTION),
                                        y.default.save(S.default.GET_REWARD_FROM_SUBSCRIPTION_FOLLOW, o.MGUser.getCurrentServerTime().toString());
                                }
                            }),
                            (i.prototype.controlFollowReward = function () {
                                var e = y.default.read(S.default.GET_REWARD_FROM_SUBSCRIPTION_FOLLOW);
                                if (n.StringUtil.isEmpty(e)) return this.FIRST_GET_REWARD_FROM_SUB;
                                var t = new Date(parseInt(e)),
                                    i = new Date(o.MGUser.getCurrentServerTime());
                                return v.default.i('controlFollowReward last date:' + I.default.getFormattedDate(t) + ', current date:' + I.default.getFormattedDate(i)), T.default.isSameDay(t, i) ? null : this.SIGN_GET_REWARD_FROM_SUB;
                            }),
                            (i.prototype.checkFollowSubscription = function () {
                                var o = this;
                                return new Promise(function (t, e) {
                                    var i = l.G.getLaunchOption();
                                    if (i && i.scene)
                                        if (1035 == i.scene && i.query && 'official_account' == i.query.type)
                                            o.showFollowCustomerReward(function (e) {
                                                t(e);
                                            }),
                                                t(!0);
                                        else {
                                            if (1e4 != i.scene) return void t(!1);
                                            o.showFollowCustomerReward(function (e) {
                                                t(e);
                                            });
                                        }
                                    else
                                        o.checkFollowRewardWithHotStart(function (e) {
                                            e
                                                ? o.showFollowCustomerReward(function (e) {
                                                      t(e);
                                                  })
                                                : t(!1);
                                        });
                                });
                            }),
                            (i.prototype.checkFollowRewardWithHotStart = function (e) {
                                C.SubscriptionUtils.isOpenFromDialog ? (v.default.l('[test] checkFollowRewardWithHotStart  true'), C.SubscriptionUtils.checkPubState(e)) : e(!1);
                            }),
                            (i.prototype.checkInviteeReward = function (n) {
                                var a = this;
                                return new Promise(function (i, e) {
                                    if (1 != a.mCheckingInvitee) {
                                        var t = l.G.getLaunchOption();
                                        if ((t && t.query, t && t.query)) {
                                            var o = a.getInviterIdFromQuery(t.query);
                                            if (!o || '' === o) return void i(!1);
                                            (a.mCheckingInvitee = !0),
                                                r.default.checkInviteeReward(
                                                    o,
                                                    function (e, t) {
                                                        e ? t && t.isValid && (a.mDialogManager.showDialog(e), s.MoneySystem.increaseDiamond(t.diamondNum), a.reportUserAction(h.default.ACTION_SHOW_INVITEE_DIALOG), c.default.report(t.diamondNum, c.default.SOURCE_INVITEE_GET_REWARD, c.default.ACTION_GET_DIAMOND)) : ((a.mCheckingInvitee = !1), i(!1));
                                                    },
                                                    function (e, t) {
                                                        (a.mCheckingInvitee = !1), a.mDialogManager.dismissDialog(e), n ? (n(i), a.reportUserAction(h.default.ACTION_INVITEE_DIALOG_CLICK)) : i(!0);
                                                    },
                                                    function (e) {
                                                        (a.mCheckingInvitee = !1), a.mDialogManager.dismissDialog(e), i(!0);
                                                    },
                                                );
                                        } else i(!1);
                                    } else i(!1);
                                });
                            }),
                            (i.prototype.checkInviterReward = function () {
                                var a = this;
                                return new Promise(function (n, e) {
                                    1 != a.mCheckingInviter
                                        ? ((a.mCheckingInviter = !0),
                                          r.default.checkInviterReward(
                                              function (e, t, i) {
                                                  if (e) {
                                                      if ((a.mDialogManager.showDialog(e), d.default.fire(p.default.UPDATE_SHARE_GIFT_TIPS), s.MoneySystem.increaseDiamond(t), i)) for (var o = 0; o < i.length; o++) u.RewardMgr.Ins().cosumeInviteRewardInfo(i[o]);
                                                      a.reportGiftBoxResult(), a.reportUserAction(h.default.ACTION_SHOW_INVITER_DIALOG), c.default.report(t, c.default.SOURCE_INVITER_GET_REWARD, c.default.ACTION_GET_DIAMOND);
                                                  } else (a.mCheckingInviter = !1), n(!1);
                                              },
                                              function (e, t) {
                                                  (a.mCheckingInviter = !1),
                                                      a.mDialogManager.dismissDialog(e),
                                                      o.MGUser.getUserLoginInfo({
                                                          complete: function (e) {
                                                              e && f.MGShareUtils.shareForGiftReward(e.playerId, 1, function (e) {});
                                                          },
                                                      }),
                                                      a.reportUserAction(h.default.ACTION_INVITER_DIALOG_CLICK),
                                                      n(!0);
                                              },
                                              function (e) {
                                                  (a.mCheckingInviter = !1), a.mDialogManager.dismissDialog(e), n(!0);
                                              },
                                          ))
                                        : n(!1);
                                });
                            }),
                            (i.prototype.reportGiftBoxResult = function () {}),
                            (i.prototype.reportUserAction = function (e) {
                                h.default.report(0, e);
                            }),
                            (i.prototype.getProcessType = function () {
                                var e = l.G.getLaunchOption();
                                return e && e.query && (e.query.source == a.ShareHelper.SHARE_SOURCE_INVITE_FRIEND || e.query.source == a.ShareHelper.SHARE_SOURCE_RELIVE) ? i.ENTRANCE_TYPE_FROM_HELP_GETTING_DIAMOND : i.ENTRANCE_TYPE_NORMAL;
                            }),
                            (i.prototype.checkRewards = function () {
                                return __awaiter(this, void 0, void 0, function () {
                                    var t;
                                    return __generator(this, function (e) {
                                        switch (e.label) {
                                            case 0:
                                                switch (((t = this.getProcessType()), t)) {
                                                    case i.ENTRANCE_TYPE_FROM_HELP_GETTING_DIAMOND:
                                                        return [3, 1];
                                                }
                                                return [3, 3];
                                            case 1:
                                                return [4, this.checkInviteeReward()];
                                            case 2:
                                                return e.sent(), [3, 3];
                                            case 3:
                                                return [2];
                                        }
                                    });
                                });
                            }),
                            (i.ENTRANCE_TYPE_NORMAL = 1),
                            (i.ENTRANCE_TYPE_FROM_HELP_GETTING_DIAMOND = 2),
                            i
                        );
                    })();
                (i.default = E), cc._RF.pop();
            },
            {
                '../../../../modules/MGAppShare/scripts/MGShareUtil': 'MGShareUtil',
                '../../../../modules/MGAppShare/scripts/ShareHelper': 'ShareHelper',
                '../../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../../SubscriptionUtils': 'SubscriptionUtils',
                '../../../base/G': 'G',
                '../../../base/Log': 'Log',
                '../../../config/LSKey': 'LSKey',
                '../../../infoc/m_p2_PData_Dia': 'm_p2_PData_Dia',
                '../../../infoc/m_p2_Uaction': 'm_p2_Uaction',
                '../../../property/PropertyDefines': 'PropertyDefines',
                '../../../util/DateUtil': 'DateUtil',
                '../../../util/StringUtil': 'StringUtil',
                '../../../util/TimeUtil': 'TimeUtil',
                '../../Logic/EventBus': 'EventBus',
                '../../Logic/GameItemsManager': 'GameItemsManager',
                '../../Logic/MoneySystem': 'MoneySystem',
                '../../Logic/NotifyEvent': 'NotifyEvent',
                '../../Logic/ShareRewardController': 'ShareRewardController',
                '../../Network/Protocol/StorageUtil': 'StorageUtil',
                '../../awardcontroller/AwardController': 'AwardController',
                '../../reward/RewardManager': 'RewardManager',
            },
        ],
        ChestManager: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '2418eDbKCBEI5SbYMmns1pE', 'ChestManager'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o,
                    a = e('../../config/LSKey'),
                    r = e('../Network/Protocol/StorageUtil'),
                    s = e('./LevelMgr'),
                    n = e('../../util/TimeUtil'),
                    c = e('./SongBoxManager'),
                    l = e('../../../modules/MGUser/scripts/Logic/MGUserEntrance');
                ((o = i.PropType || (i.PropType = {}))[(o.PropTypeNone = 0)] = 'PropTypeNone'), (o[(o.Gold = 1)] = 'Gold'), (o[(o.Life = 2)] = 'Life'), (o[(o.Diamond = 3)] = 'Diamond'), (o[(o.Jigsaw = 4)] = 'Jigsaw'), (o[(o.PropTypeCount = 5)] = 'PropTypeCount');
                var u = function () {};
                i.Chest = u;
                var d = (function () {
                    function e() {
                        (this.gold = 0), (this.lift = 0), (this.diamond = 0), (this.skinPieces = []);
                    }
                    return (
                        (e.prototype.toString = function () {
                            return 'gold=' + this.gold + ',lift=' + this.lift + ',diamond=' + this.diamond;
                        }),
                        e
                    );
                })();
                i.ChestReward = d;
                var p = (function () {
                    function e() {
                        (this.mDropSpaceScore = 0), (this.mRewardPro = 0), (this.mSongboxList = null), (this.mCurGetSongboxList = null), (this.mLastTime = 0), (this.mOpenCount = 0), (this.m_nGainChestTotal = 0), (this.mServerTime = 0);
                    }
                    return (
                        (e.getInstance = function () {
                            return e.sInstance || (e.sInstance = new e()), e.sInstance;
                        }),
                        (e.prototype.init = function () {
                            var t = this;
                            cc.sys.isMobile
                                ? l.MGUser.getCurrentServerRealTime({
                                      success: function (e) {
                                          t.mServerTime = e;
                                      },
                                  })
                                : (this.mServerTime = new Date().getTime());
                        }),
                        (e.prototype.resetCacheByTime = function (e) {
                            e <= 0 || n.default.isSameDay(new Date(e), new Date(this.mLastTime)) || (this.mOpenCount = 0);
                        }),
                        (e.prototype.loadList = function () {
                            if (!this.mSongboxList) {
                                var e = c.SongBoxMgr.Ins().getSongBoxVM();
                                if (e) {
                                    this.mSongboxList = e;
                                    for (var t = 0, i = 0, o = 0, n = this.mSongboxList; o < n.length; o++) {
                                        var a = n[o];
                                        t !== a.frequenceMin && ((t = a.frequenceMin), (i = 0)), (i += a.chance), (a.totalChance = i);
                                    }
                                }
                            }
                        }),
                        (e.prototype.preLoad = function (e, t) {
                            (this.m_nGainChestTotal = 0), this.loadList(), (this.mCurGetSongboxList = []);
                            var i = s.LevelMgr.Ins().getLevelInfo(e);
                            (this.mRewardPro = i.mRewarPro), (this.mDropSpaceScore = (2 * t) / i.mRewarMax);
                            var o = r.default.read(a.default.UD_LAST_OPEN_TIME);
                            (o && '' !== o) || (o = '0'), (this.mLastTime = parseInt(o));
                            var n = r.default.read(a.default.UD_OPEN_COUNT);
                            (n && '' !== n) || (n = '0'), (this.mOpenCount = parseInt(n)), this.resetCacheByTime(this.mServerTime);
                        }),
                        (e.prototype.randomPropChest = function (e, t) {
                            if (cc.random0To1() >= this.mRewardPro) return null;
                            if (-1 !== t && e - t < this.mDropSpaceScore) return null;
                            if (!this.mSongboxList) return null;
                            for (var i = 1e4 * cc.random0To1(), o = this.mOpenCount + this.mCurGetSongboxList.length + 1, n = null, a = 0, r = this.mSongboxList; a < r.length; a++) {
                                var s = r[a];
                                if (o >= s.frequenceMin && o <= s.frequenceMax && i <= s.totalChance) {
                                    n = s;
                                    break;
                                }
                            }
                            if (!n) return null;
                            var c = new u();
                            return (c.songBoxId = n.id), c;
                        }),
                        (e.prototype.setPlayGainChest = function (e) {
                            for (var t = 0, i = this.mSongboxList; t < i.length; t++) {
                                var o = i[t];
                                if (o.id === e.songBoxId) {
                                    this.mCurGetSongboxList.push(o);
                                    break;
                                }
                            }
                            ++this.m_nGainChestTotal;
                        }),
                        (e.prototype.getGainChestTotal = function () {
                            return this.m_nGainChestTotal;
                        }),
                        (e.prototype.openChest = function (i) {
                            var o = this;
                            0 < this.mServerTime
                                ? this.getChestReward(!0, this.mServerTime, i)
                                : l.MGUser.getCurrentServerRealTime({
                                      complete: function (e, t) {
                                          e && (o.mServerTime = t), o.getChestReward(e, t, i);
                                      },
                                  });
                        }),
                        (e.prototype.openChestWithDefaultReward = function () {
                            return this.generateRewardValue(!1);
                        }),
                        (e.prototype.getChestReward = function (e, t, i) {
                            var o = null;
                            e ? (this.resetCacheByTime(t), (o = this.generateRewardValue())) : (o = this.generateRewardValue(!1)), (this.mLastTime = t), r.default.save(a.default.UD_OPEN_COUNT, '' + this.mOpenCount), r.default.save(a.default.UD_LAST_OPEN_TIME, '' + this.mLastTime), i && i(o);
                        }),
                        (e.prototype.generateRewardValue = function (e) {
                            void 0 === e && (e = !0);
                            for (var t = new d(), i = 0, o = this.mCurGetSongboxList; i < o.length; i++) {
                                var n = o[i];
                                t.gold += n.fixedReward;
                                var a = this.mOpenCount + 1;
                                e && a >= n.frequenceMin && a <= n.frequenceMax && ((t.gold += n.coin), (t.lift += n.power)), this.mOpenCount++;
                            }
                            return 2 <= t.skinPieces.length && (0 < t.gold && (t.lift = 0), 2 < t.skinPieces.length && t.skinPieces.splice(2)), 0 === t.gold && 0 === t.diamond && 0 === t.skinPieces.length && (console.warn('reward result is empty, use default value'), 0 < this.m_nGainChestTotal ? (t.gold = 10 * this.m_nGainChestTotal) : (t.gold = 10)), t;
                        }),
                        e
                    );
                })();
                (i.default = p), cc._RF.pop();
            },
            {
                '../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../config/LSKey': 'LSKey',
                '../../util/TimeUtil': 'TimeUtil',
                '../Network/Protocol/StorageUtil': 'StorageUtil',
                './LevelMgr': 'LevelMgr',
                './SongBoxManager': 'SongBoxManager',
            },
        ],
        ClassType: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'b99f4ywpuxKaLvT2+wtYQSb', 'ClassType'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function a() {}
                    return (
                        (a.isArray = function (e) {
                            return 'array' === this.getTypeString(e);
                        }),
                        (a.isObject = function (e) {
                            return 'object' === this.getTypeString(e);
                        }),
                        (a.isString = function (e) {
                            return 'string' == typeof e;
                        }),
                        (a.isDate = function (e) {
                            return 'date' === this.getTypeString(e);
                        }),
                        (a.isRegExp = function (e) {
                            return 'regexp' === this.getTypeString(e);
                        }),
                        (a.isFunction = function (e) {
                            return 'function' == typeof e;
                        }),
                        (a.isBoolean = function (e) {
                            return 'boolean' == typeof e;
                        }),
                        (a.isNumber = function (e) {
                            return 'number' == typeof e;
                        }),
                        (a.isNull = function (e) {
                            return null === e;
                        }),
                        (a.isUndefined = function (e) {
                            return void 0 === e;
                        }),
                        (a.isEmptyObject = function (e) {
                            return a.isNull(e) || a.isUndefined(e);
                        }),
                        (a.isEmptyString = function (e) {
                            return a.isEmptyObject(e) || '' === e.trim();
                        }),
                        (a.setMetadata = function (e, t) {
                            if (!e || !t) throw new Error();
                            this._metadatas.set(e, t);
                        }),
                        (a.getMetadata = function (e) {
                            return this._metadatas.get(e) || null;
                        }),
                        (a.getClassType = function (e) {
                            return a.isNull(e) ? null : a.isUndefined(e) ? void 0 : a.isBoolean(e) ? Boolean : a.isNumber(e) ? Number : a.isString(e) ? String : (e.prototype ? e.prototype : Object.getPrototypeOf(e)).constructor;
                        }),
                        (a.getClassName = function (e) {
                            var t = this.getQualifiedClassName(e).split('.');
                            return t[t.length - 1];
                        }),
                        (a.getQualifiedClassName = function (e) {
                            var t = typeof e;
                            if (!e || ('object' !== t && !e.prototype)) return t;
                            var i = e.prototype ? e.prototype : Object.getPrototypeOf(e);
                            if (i.hasOwnProperty('__class__')) return i.__class__;
                            var o = i.constructor.toString().trim(),
                                n = o.indexOf('('),
                                a = o.substring(9, n);
                            return (
                                Object.defineProperty(i, '__class__', {
                                    value: a,
                                    enumerable: !1,
                                    writable: !0,
                                }),
                                a
                            );
                        }),
                        (a.getSuperclassName = function (e) {
                            var t = this.getQualifiedSuperclassName(e).split('.');
                            return t[t.length - 1];
                        }),
                        (a.getQualifiedSuperclassName = function (e) {
                            if (!e || ('object' != typeof e && !e.prototype)) return null;
                            var t = e.prototype ? e.prototype : Object.getPrototypeOf(e),
                                i = Object.getPrototypeOf(t);
                            if (!i) return null;
                            var o = this.getQualifiedClassName(i.constructor);
                            return o || null;
                        }),
                        (a.isAssignableFrom = function (e, t) {
                            if (!e || !t) return !1;
                            if (e === t) return !0;
                            if (e === Object || 'Object' === e) return !0;
                            var i = t.prototype;
                            if (i.hasOwnProperty('__types__')) {
                                var o = a.isString(e) ? e : a.getQualifiedClassName(e);
                                return -1 !== i.__types__.indexOf(o);
                            }
                            var n = Object.getPrototypeOf(i).constructor;
                            if (n === Object) return !1;
                            if (a.isString(e)) {
                                if (a.getQualifiedClassName(n) === e) return !0;
                            } else if (n === e) return !0;
                            return a.isAssignableFrom(e, n);
                        }),
                        (a.getTypeString = function (e) {
                            return Object.prototype.toString.call(e).slice(8, -1).toLowerCase();
                        }),
                        (a.getRaf = function () {
                            var n = 0;
                            return function (e) {
                                var t = new Date().getTime(),
                                    i = Math.max(0, 16 - (t - n)),
                                    o = window.setTimeout(function () {
                                        e(t + i);
                                    }, i);
                                return (n = t + i), o;
                            };
                        }),
                        (a.getCaf = function () {
                            return function (e) {
                                clearTimeout(e);
                            };
                        }),
                        (a._metadatas = new Map()),
                        a
                    );
                })();
                (i.Type = o), cc._RF.pop();
            },
            {},
        ],
        ClickEventSoundPlayer: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '0fd68NaGK5Dipd8+XZIpX5C', 'ClickEventSoundPlayer'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../base/Config'),
                    n = e('../../../music/MusicPlayer'),
                    a = cc._decorator,
                    r = a.ccclass,
                    s =
                        (a.property,
                        (function () {
                            function e() {
                                (this.mIndex = 0), this.init();
                            }
                            var t;
                            return (
                                ((t = e).getInstance = function () {
                                    return t.mInstance || (t.mInstance = new t()), t.mInstance;
                                }),
                                (e.prototype.init = function () {
                                    var i = this;
                                    new o.default().loadMusic(100001, function (e) {
                                        var t = e;
                                        (i.mMusicSyllable = t.getMusicParts()[0].getHighMusicTrack().syllables), e && (e.getMusicPart(0) ? (i.mPlayer = new n.default(e.getMusicPart(0).getBPM())) : (i.mPlayer = new n.default(90)));
                                    });
                                }),
                                (e.prototype.play = function () {
                                    this.mPlayer && this.mPlayer.addSyllable(this.mMusicSyllable[this.mIndex]), this.mIndex++;
                                }),
                                (e = t = __decorate([r], e))
                            );
                        })());
                (i.default = s), cc._RF.pop();
            },
            {
                '../../../base/Config': 'Config',
                '../../../music/MusicPlayer': 'MusicPlayer',
            },
        ],
        CloudMgr: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '71bb7xLzMZMMZQclHZjzsBx', 'CloudMgr'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./Downloader'),
                    n = (function () {
                        function e(e) {
                            (this.mChcker = null), (this.mChcker = e);
                        }
                        return (
                            (e.prototype.request = function (e, t) {
                                this.mChcker.check(
                                    function () {
                                        e();
                                    },
                                    function () {
                                        t();
                                    },
                                );
                            }),
                            (e.prototype.getChecker = function () {
                                return this.mChcker;
                            }),
                            (e.prototype.getData = function () {
                                return this.mChcker.getData();
                            }),
                            (e.prototype.filterData = function (e) {
                                return this.mChcker.getData() ? this.mChcker.getData().filter(e) : [];
                            }),
                            (e.prototype.saveData = function () {
                                this.mChcker && this.mChcker.saveLocalData();
                            }),
                            (e.prototype.download = function (e, t) {
                                return o.default.Ins().download(e, 3, t);
                            }),
                            (e.prototype.unZipFile = function (e) {
                                return o.default.Ins().unZipFile(e);
                            }),
                            e
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                './Downloader': 'Downloader',
            },
        ],
        CloudResMgr: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '551b7W2mClKi6xl3UkZa5iQ', 'CloudResMgr'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('./BaseVersionChecker'),
                    o = (function (n) {
                        function e(e, t, i, o) {
                            return n.call(this, new a.default(e, t, i, o)) || this;
                        }
                        return __extends(e, n), e;
                    })(e('./CloudMgr').default);
                (i.CloudResMgr = o), cc._RF.pop();
            },
            {
                './BaseVersionChecker': 'BaseVersionChecker',
                './CloudMgr': 'CloudMgr',
            },
        ],
        CloudStorageHelperCM: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '1d30eYRDeZCLKzifeQpCqPC', 'CloudStorageHelperCM'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (a) {
                    function e(e, t, i, o, n) {
                        return a.call(this, e, t, i, o, n) || this;
                    }
                    return (
                        __extends(e, a),
                        (e.prototype.setStorage = function (t) {
                            if ((console.log('czx cm setstorage ', t.kvDatas), !this.mGameId || !this.mPlayerId || !this.mToken)) return t.complete && t.complete(!1), void (t.fail && t.fail(-1));
                            CMPlay.setStorageList(t.kvDatas, function (e) {
                                e ? t.success && t.success() : t.fail && t.fail(-1), t.complete && t.complete(e);
                            });
                        }),
                        (e.prototype.getStorage = function (t) {
                            if (!this.mGameId || !this.mPlayerId || !this.mToken) return t.complete && t.complete(!1, null), void (t.fail && t.fail(-1));
                            CMPlay.getStroageList(t.keys, function (e) {
                                if ((console.log('czx cm getStorage ', e), !e)) return t.complete && t.complete(!1, null), void (t.fail && t.fail(-1));
                                t.complete && t.complete(!0, e), t.success && t.success(e);
                            });
                        }),
                        e
                    );
                })(e('./CloudStorageHelperQQ').CloudStorageHelperQQ);
                (i.CloudStorageHelperCM = o), cc._RF.pop();
            },
            {
                './CloudStorageHelperQQ': 'CloudStorageHelperQQ',
            },
        ],
        CloudStorageHelperFB: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '40544W9bNpP2ZjGxgDdwXLz', 'CloudStorageHelperFB'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getServiceUrl = function () {
                            return e.prototype.isDebug.call(this) ? t.SERVER_ADDRESS_URL_TEST : t.SERVER_ADDRESS_URL;
                        }),
                        (t.prototype.getUrlToSetStorage = function () {
                            return this.getServiceUrl() + t.SET_STORAGE_URL;
                        }),
                        (t.prototype.getUrlToGetStorage = function () {
                            return this.getServiceUrl() + t.GET_STORAGE_URL;
                        }),
                        (t.prototype.getUrlToDetStorage = function () {
                            return this.getServiceUrl() + t.DEL_STORAGE_URL;
                        }),
                        (t.SERVER_ADDRESS_URL_TEST = 'https://instantgame.cmcm.com/'),
                        (t.SERVER_ADDRESS_URL = 'https://instantgame.cmcm.com/'),
                        (t.SET_STORAGE_URL = 'warty/storage/dy/set'),
                        (t.GET_STORAGE_URL = 'warty/storage/dy/get'),
                        (t.DEL_STORAGE_URL = 'warty/storage/dy/del'),
                        t
                    );
                })(e('../Logic/MGCloudStorageHelper').default);
                (i.CloudStorageHelperFB = o), cc._RF.pop();
            },
            {
                '../Logic/MGCloudStorageHelper': 'MGCloudStorageHelper',
            },
        ],
        CloudStorageHelperQQ: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'ea950oHWPtOcb9UfrcFnBE+', 'CloudStorageHelperQQ'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../Logic/MGCloudStorageHelper'),
                    n = e('../../../../scripts/business/keypad/KeypadUtil'),
                    a = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.getServiceUrl = function () {
                                return n.default.isOversea() ? t.SERVER_ADDRESS_URL_OVERSEA : e.prototype.isDebug.call(this) ? t.SERVER_ADDRESS_URL_TEST : t.SERVER_ADDRESS_URL;
                            }),
                            (t.prototype.getUrlToSetStorage = function () {
                                return this.getServiceUrl() + t.SET_STORAGE_URL;
                            }),
                            (t.prototype.getUrlToGetStorage = function () {
                                return this.getServiceUrl() + t.GET_STORAGE_URL;
                            }),
                            (t.prototype.getUrlToDetStorage = function () {
                                return this.getServiceUrl() + t.DEL_STORAGE_URL;
                            }),
                            (t.SERVER_ADDRESS_URL_TEST = 'https://pianotiles-minigame.cmcm.com/'),
                            (t.SERVER_ADDRESS_URL = 'https://minigame.cmcm.com/'),
                            (t.SERVER_ADDRESS_URL_OVERSEA = 'https://h5game_oversea.cmcm.com/'),
                            (t.SET_STORAGE_URL = 'warty/storage/set'),
                            (t.GET_STORAGE_URL = 'warty/storage/get'),
                            (t.DEL_STORAGE_URL = 'warty/storage/del'),
                            t
                        );
                    })(o.default);
                (i.CloudStorageHelperQQ = a), cc._RF.pop();
            },
            {
                '../../../../scripts/business/keypad/KeypadUtil': 'KeypadUtil',
                '../Logic/MGCloudStorageHelper': 'MGCloudStorageHelper',
            },
        ],
        CloudStorageHelperWX: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '21c44CTyCVNmYQhwnlFIQDs', 'CloudStorageHelperWX'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../Logic/MGCloudStorageHelper'),
                    n = e('../../../../scripts/business/keypad/KeypadUtil'),
                    a = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.getServiceUrl = function () {
                                return n.default.isOversea() ? t.SERVER_ADDRESS_URL_OVERSEA : e.prototype.isDebug.call(this) ? t.SERVER_ADDRESS_URL_TEST : t.SERVER_ADDRESS_URL;
                            }),
                            (t.prototype.getUrlToSetStorage = function () {
                                return this.getServiceUrl() + t.SET_STORAGE_URL;
                            }),
                            (t.prototype.getUrlToGetStorage = function () {
                                return this.getServiceUrl() + t.GET_STORAGE_URL;
                            }),
                            (t.prototype.getUrlToDetStorage = function () {
                                return this.getServiceUrl() + t.DEL_STORAGE_URL;
                            }),
                            (t.SERVER_ADDRESS_URL_TEST = 'https://pianotiles-minigame.cmcm.com/'),
                            (t.SERVER_ADDRESS_URL = 'https://minigame.cmcm.com/'),
                            (t.SERVER_ADDRESS_URL_OVERSEA = 'https://h5game_oversea.cmcm.com/'),
                            (t.SET_STORAGE_URL = 'warty/storage/set'),
                            (t.GET_STORAGE_URL = 'warty/storage/get'),
                            (t.DEL_STORAGE_URL = 'warty/storage/del'),
                            t
                        );
                    })(o.default);
                (i.CloudStorageHelperWX = a), cc._RF.pop();
            },
            {
                '../../../../scripts/business/keypad/KeypadUtil': 'KeypadUtil',
                '../Logic/MGCloudStorageHelper': 'MGCloudStorageHelper',
            },
        ],
        CloudStorageHelperWeb: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '016da+U6UtBzIuWMHhh6OGB', 'CloudStorageHelperWeb'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return __extends(t, e), t;
                })(e('./CloudStorageHelperFB').CloudStorageHelperFB);
                (i.CloudStorageHelperWeb = o), cc._RF.pop();
            },
            {
                './CloudStorageHelperFB': 'CloudStorageHelperFB',
            },
        ],
        CompetitionBasicData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '17f34iMn0NEt5V9VLzfiYNP', 'CompetitionBasicData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.getRow = function () {
                                return new a();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.CompetitionBasicData = n;
                var a = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getID = function () {
                            return this.getInt('Id');
                        }),
                        (t.prototype.getNeedLv = function () {
                            return this.getInt('NeedLv');
                        }),
                        (t.prototype.getShareRaise = function () {
                            return this.getInt('ShareRaise');
                        }),
                        (t.prototype.getChallengeTimes = function () {
                            return this.getInt('ChallengeTimes');
                        }),
                        (t.prototype.getSpendType = function () {
                            return this.getInt('SpendType');
                        }),
                        (t.prototype.getSpendEnergy = function () {
                            return this.getString('SpendEnergy');
                        }),
                        (t.prototype.getSpendGold = function () {
                            return this.getString('SpendGold');
                        }),
                        (t.prototype.getSpendDiamond = function () {
                            return this.getString('SpendDiamond');
                        }),
                        t
                    );
                })(o.default);
                (i.CompetitionBasicRow = a), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        CompetitionMusicData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '98b69Eu8fVPZqLCGlYVPILM', 'CompetitionMusicData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.getRow = function () {
                                return new a();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.CompetitionMusicData = n;
                var a = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getID = function () {
                            return this.getInt('Id');
                        }),
                        (t.prototype.getDate = function () {
                            return this.getString('Date');
                        }),
                        (t.prototype.getMid = function () {
                            return this.getInt('Mid');
                        }),
                        (t.prototype.getIndex = function () {
                            return this.getInt('Index');
                        }),
                        (t.prototype.getBPM = function () {
                            return this.getInt('BPM');
                        }),
                        (t.prototype.getMusicJson = function () {
                            return this.getString('MusicJson');
                        }),
                        (t.prototype.getMusician = function () {
                            return this.getString('Musician');
                        }),
                        (t.prototype.getMusicName = function () {
                            return this.getString('MusicName');
                        }),
                        (t.prototype.getResInfo = function () {
                            return this.getString('ResInfo');
                        }),
                        (t.prototype.getResVer = function () {
                            return this.getInt('ResVer');
                        }),
                        (t.prototype.getResMd5 = function () {
                            return this.getString('ResMd5');
                        }),
                        (t.prototype.getResSize = function () {
                            return this.getInt('ResSize');
                        }),
                        t
                    );
                })(o.default);
                (i.CompetitionMusicRow = a), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        CompetitionRewardData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'e15ebgMaBhLI4XsG6Efe8ig', 'CompetitionRewardData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.getRow = function () {
                                return new a();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.CompetitionRewardData = n;
                var a = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getId = function () {
                            return this.getInt('Id');
                        }),
                        (t.prototype.getStars = function () {
                            return this.getInt('Stars');
                        }),
                        (t.prototype.getFrequenceMin = function () {
                            return this.getInt('FrequenceMin');
                        }),
                        (t.prototype.getFrequenceMax = function () {
                            return this.getInt('FrequenceMax');
                        }),
                        (t.prototype.getChance = function () {
                            return this.getInt('Chance');
                        }),
                        (t.prototype.getRewardType = function () {
                            return this.getString('RewardType');
                        }),
                        (t.prototype.getRewardValue = function () {
                            return this.getInt('RewardValue');
                        }),
                        t
                    );
                })(o.default);
                (i.CompetitionRewardRow = a), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        CompetitionSettlementData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '871beEmDFlByLfudBtvW21w', 'CompetitionSettlementData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.getRow = function () {
                                return new a();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.CompetitionSettlementData = n;
                var a = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getId = function () {
                            return this.getInt('Id');
                        }),
                        (t.prototype.getRankStart = function () {
                            return this.getInt('RankStart');
                        }),
                        (t.prototype.getRankEnd = function () {
                            return this.getInt('RankEnd');
                        }),
                        (t.prototype.getRankPercentStart = function () {
                            return this.getInt('RankPercentStart');
                        }),
                        (t.prototype.getRankPercentEnd = function () {
                            return this.getInt('RankPercentEnd');
                        }),
                        (t.prototype.getRewardType = function () {
                            return this.getInt('RewardType');
                        }),
                        (t.prototype.getRewardEnergy = function () {
                            return this.getInt('RewardEnergy');
                        }),
                        (t.prototype.getRewardGold = function () {
                            return this.getInt('RewardGold');
                        }),
                        (t.prototype.getRewardDiamond = function () {
                            return this.getInt('RewardDiamond');
                        }),
                        t
                    );
                })(o.default);
                (i.CompetitionSettlementRow = a), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        Config: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '509cfQPwEJPuaZYy802zStI', 'Config'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../music/MusicCache'),
                    a = e('../business/Logic/LevelMgr'),
                    s = e('../util/PU'),
                    c = e('../util/ResLoader'),
                    l = e('../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    r = e('../business/music/MusicDownloadProcess'),
                    n = (function () {
                        function i() {
                            (this.designWidth = 720), (this.designHeight = 1280), (this.designBlockWidth = 180), (this.designBlockHeight = 320), (this.moneyStageSpeed = 4), (this.gameSceneSlotCount = 4), (this.gameSceneLineCount = 4), (this.gameFrameInterval = 0.0167), (this.gameFrameIntervalHori = 0.01169), (this.gameSpeedScale = i.DEFAULT_GAME_SPEED_SCALE), (this.moneyFlyDuration = 0.3), (this.moneyUpDuration = 0.3), (this.giftUpDuration = 0.3), (this.giftFlyDuration = 0.3), (this.honorAnimStayTime = 0.3), (this.enterStageDelay = 1.5), (this.scoreDelayAfterStageCaption = 1.5), (this.moneyWalkDelay = 2), (this.infiniteWalkDelay = 2), (this.blockHorizonExtend = 20), (this.releasePropertyAnimDuration = 0.8), (this.presentWidth = 720), (this.presentHeight = 1280), (this.mBaseBlockHeight = 320), (this.mBaseBlockWidth = 180), (this.mBaseBlockWidthScale = 1), (this.mBaseBlockHeightScale = 1), (this.presentScale = 1), (this.longBlockDotPosShow = !0), (this.longBlockDotAnimEnable = !0), (this.longBlockChangeLength = !1), (this.longBlockBounceEffectByDistance = -1), (this.gameSceneTest = !1), (this.debugPanelShowed = !1), (this.debugNoBlockSound = !1), (this.debugNoBlockAnim = !1), (this.debugNoDetectMission = !1), (this.debugNoTouchResponse = !1), (this.debugNoScoreAnim = !1), (this.debugAutoTouchBlock = !1), (this.debugRobotAutoTouchBlock = !1), (this.debugAutoLog = !1), (this.debugNoHonorAnim = !1), (this.debugNoBackgroundSwitch = !1), (this.debugNoLongBlocks = !1), (this.debugNoPullParent = !1), (this.debugNoComplicatedPlayMode = !1), (this.debugNoFlyMoneyAnim = !1), (this.debugFreeRelive = !1), (this.debugNoOvertake = !1), (this.debugNoBackgroundAnim = !1), (this.debugShowTouchPos = !1), (this.debugPlayerIdCustomMusic = !1), (this.musicCache = new o.default());
                        }
                        return (
                            (i.prototype.getDesignBlockHeight = function () {
                                return this.designBlockHeight;
                            }),
                            (i.prototype.getBlockHeight = function () {
                                return this.mBaseBlockHeight;
                            }),
                            (i.prototype.getMoneyStageSpeed = function () {
                                return this.moneyStageSpeed;
                            }),
                            (i.prototype.getGameSceneSlotCount = function () {
                                return this.gameSceneSlotCount;
                            }),
                            (i.prototype.getGameSceneLineCount = function () {
                                return this.gameSceneLineCount;
                            }),
                            (i.prototype.isGameSceneTest = function () {
                                return this.gameSceneTest;
                            }),
                            (i.prototype.loadMusic = function (e, t, i) {
                                var o = this;
                                console.log('czx asdfasdfasdf', i);
                                var n = a.LevelMgr.Ins().getLevelByMid(e);
                                console.log('czx level', n),
                                    i
                                        ? r.MusicDownloadProcess.Ins().showMusicDownloadingPopup(i, function (e) {
                                              console.log('czx asdfasdfasdf  12sadfasdfsadf', e), e && o.loadMusic2(n.music, t);
                                          })
                                        : this.loadMusic2(n.music, t);
                            }),
                            (i.prototype.loadMusic2 = function (o, n) {
                                var a = this;
                                if (o) {
                                    console.log('czx loadMusic2');
                                    var r = o.musicName;
                                    if (this.debugPlayerIdCustomMusic)
                                        return void l.MGUser.getUserLoginInfo({
                                            complete: function (e) {
                                                if (e) {
                                                    var t = e.playerId,
                                                        i = cmg.CloudUtil.SERVER_ADDRESS_BASE_WX + 'common/get_music/' + t;
                                                    cc.sys.platform === cc.sys.WECHAT_GAME ? a.wxRequestMusic(i, o, r, n) : a.fetchMusic(i, o, r, n);
                                                }
                                            },
                                        });
                                    var e = this.musicCache.getMusic(r);
                                    if (e) return void n(e);
                                    var t = r.replace("'", i.ASCII_SINGLE_QUOTE_MARK_HEX);
                                    (t = (t = t.replace(',', i.ASCII_COMMA_HEX)).replace('!', i.ASCII_EXCLAMATORY_MARK)),
                                        (t = s.default.getResourcePath('resources/song/' + t + '.json')),
                                        c.default.loadJson(t, function (e, t) {
                                            if (e) n(null);
                                            else {
                                                var i = a.musicCache.loadMusic(o, r, t);
                                                n(i);
                                            }
                                        });
                                } else n(null);
                            }),
                            (i.prototype.loadMusicForChallengeCompetition = function (o, n, a) {
                                var r = this,
                                    e = this.musicCache.getMusic(o);
                                if (e) a(e);
                                else {
                                    var t = s.default.getResourcePath(o);
                                    c.default.loadJson(t, function (e, t) {
                                        if (e) a(null);
                                        else {
                                            var i = r.musicCache.loadMusic(n, o, t);
                                            a(i);
                                        }
                                    });
                                }
                            }),
                            (i.prototype.fetchMusic = function (e, i, o, n) {
                                var a = this;
                                fetch(e)
                                    .then(function (e) {
                                        return e.json();
                                    })
                                    .then(function (e) {
                                        console.log('music fetch data:', e);
                                        var t = a.musicCache.loadMusic(i, o, e);
                                        n(t);
                                    })
                                    .catch(function (e) {
                                        console.log('music fetch::send error ' + e, e);
                                    });
                            }),
                            (i.prototype.wxRequestMusic = function (e, i, o, n) {
                                var a = this;
                                wx.request({
                                    url: e,
                                    success: function (e) {
                                        if ((console.log('wx music fetch data:', e), 200 === e.statusCode)) {
                                            var t = a.musicCache.loadMusic(i, o, e.data);
                                            n(t);
                                        } else console.log('wx music fetch::result error');
                                    },
                                    fail: function (e) {
                                        console.log('wx music fetch::send error ' + e, e);
                                    },
                                });
                            }),
                            (i.prototype.getMusic = function (e) {
                                var t = a.LevelMgr.Ins().getLevelByMid(e).music.musicName;
                                return this.getMusicByName(t);
                            }),
                            (i.prototype.getMusicByName = function (e) {
                                return this.musicCache.getMusic(e);
                            }),
                            (i.ASCII_SINGLE_QUOTE_MARK_HEX = '0x27'),
                            (i.ASCII_COMMA_HEX = '0x2c'),
                            (i.ASCII_EXCLAMATORY_MARK = '0x21'),
                            (i.DEFAULT_GAME_SPEED_SCALE = 0.95),
                            i
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../business/Logic/LevelMgr': 'LevelMgr',
                '../business/music/MusicDownloadProcess': 'MusicDownloadProcess',
                '../music/MusicCache': 'MusicCache',
                '../util/PU': 'PU',
                '../util/ResLoader': 'ResLoader',
            },
        ],
        ConstantsRank: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '3815f52UmhHIIUYYANYPjTy', 'ConstantsRank'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = 'res/raw-assets/resources/opencontext/',
                    n = (function () {
                        function t() {}
                        return (
                            (t.setLocalPicPathPrefix = function (e) {
                                t.PATH_PREFIX = e + '';
                            }),
                            (t.LOCAL_PIC = {
                                AVATAR_RING1: o + 'avatar_ring1.png',
                                AVATAR_RING90: o + 'avatar_ring90.png',
                                AVATAR_RING20: o + 'avatar_ring20.png',
                                AVATAR_RING21: o + 'avatar_ring21.png',
                                AVATAR_RING_HOME: o + 'avatar_ring_home.png',
                                AVATAR_DEFAULT: o + 'avatar_default.png',
                                AVATAR_VIP_ICON: o + 'avater_vip_icon.png',
                                AVATAR_VIP_ICON_RESULT: o + 'avatar_vip_icon_result.png',
                                SEPERATE_LINE_VERTICAL: o + 'line_h.png',
                                SELF_RANK_BG: o + 'self_rank_bg.png',
                                GOLD_MEDAL: o + 'gold_medal.png',
                                SILVER_MEDAL: o + 'silver_medal.png',
                                BRONZE_MEDAL: o + 'bronze_medal.png',
                                CROWN_BIG: o + 'crown_big.png',
                                CROWN_MEDIUM: o + 'crown_medium.png',
                                CROWN_SMALL: o + 'crown_small.png',
                                STAR_BIG: o + 'star_big.png',
                                STAR_MEDIUM: o + 'star_medium.png',
                                STAR_SMALL: o + 'star_small.png',
                                REVIVE_LOGO: o + 'revive.png',
                                RANK1: o + 'rank1.png',
                                RANK2: o + 'rank2.png',
                                RANK3: o + 'rank3.png',
                                SHARE_CHAMPION_HEAD_BG: o + 'champion_head_bg.png',
                                SHARE_NORMAL_HEAD_BG: o + 'head_bg.png',
                                SHARE_SCORE_BG: o + 'grade_bg.png',
                                SHARE_NEW_RECORD_TEXT_PIC: o + 'new_record_text.png',
                                SHARE_NEW_RECORD_TEXT_PIC_EN: o + 'new_record_text_en.png',
                                SHARE_CHAMPION_TEXT_PIC: o + 'champion_text.png',
                                SHARE_CHAMPION_TEXT_PIC_EN: o + 'champion_text_en.png',
                                SHARE_MORE: o + 'more.png',
                                SHARE_PAGE_BG: o + 'share_page_bg.png',
                                ROBOT_B: o + 'b_robot.png',
                                ROBOT_B_EN: o + 'b_robot_en.png',
                                ROBOT_C: o + 'c_robot.png',
                                ROBOT_C_EN: o + 'c_robot_en.png',
                                NO_DATA_DEFAULT_TIP: o + 'no_network_tip.png',
                                RANK_CHAMPION_AVATAR_BG: o + 'result_page/rank_champion_avatar_bg.png',
                                RANK_CHAMPION_FLAG: o + 'result_page/rank_champion_flag.png',
                                RANK_CHAMPION_FLAG_EN: o + 'result_page/rank_champion_flag_en.png',
                                RANK_SECOND_BG: o + 'result_page/rank_second_bg.png',
                                RANK_THIRD_BG: o + 'result_page/rank_third_bg.png',
                                RANK_FIRST_NUMBER: o + 'result_page/rank_first_number.png',
                                RANK_SECOND_NUMBER: o + 'result_page/rank_second_number.png',
                                RANK_THIRD_NUMBER: o + 'result_page/rank_third_number.png',
                                GAME_PLAYING_BEYOUND_SUCCESS: o + 'game_playing_beyound_success.png',
                                GAME_PLAYING_NEW_RECORD: o + 'game_playing_new_record.png',
                                GAME_PLAYING_CIRCLE_RING: o + 'game_playing_circle_ring.png',
                                GAME_PLAYING_RANK_BG: o + 'game_playing_rank_bg.png',
                                GAME_PLAYING_ATLAS_BEAT: o + 'beat.png',
                                RANK_PK_LEVEL_ATLAS: o + 'rank_pk_level_atlas.png',
                                RANK_PK_LEVEL_STAR: o + 'rank_pk_level_star.png',
                            }),
                            (t.PATH_PREFIX = ''),
                            (t.BEAT = {
                                new_record: 'new_record',
                                over_success: 'over_success',
                                over_await: 'over_await',
                                new_high_score: 'new_high_score',
                                next_target: 'next_target',
                                red_pre: 'red_',
                                red_0: 'red_0',
                                red_1: 'red_1',
                                red_2: 'red_2',
                                red_3: 'red_3',
                                red_4: 'red_4',
                                red_5: 'red_5',
                                red_6: 'red_6',
                                red_7: 'red_7',
                                red_8: 'red_8',
                                red_9: 'red_9',
                                white_pre: 'white_',
                                white_0: 'white_0',
                                white_1: 'white_1',
                                white_2: 'white_2',
                                white_3: 'white_3',
                                white_4: 'white_4',
                                white_5: 'white_5',
                                white_6: 'white_6',
                                white_7: 'white_7',
                                white_8: 'white_8',
                                white_9: 'white_9',
                            }),
                            (t.LANGUAGE = {
                                need: '还差',
                                to_exceed: '就能超越',
                                to_win1: '即可赢得',
                                champion: '第一名',
                                runner_up: '第二名',
                                second_runner_up: '第三名',
                                to_get: '即可获得',
                                get_new_best: '即可创下',
                                new_best: '新纪录',
                                revive_now: '立即复活',
                                single_champion: '恭喜你获得单曲冠军',
                                beat_frineds1: '单曲排名超越',
                                beat_frineds2: '好友',
                                no_internet: '未检测到网络，无法查看排行榜',
                                not_ranked: '未上榜',
                                nothing: '无',
                                unit1: '位',
                                unit2: '分',
                                robot1: '贝多芳',
                                robot2: '莫扎持',
                            }),
                            (t.Vip = {
                                vip: 'vip',
                            }),
                            t
                        );
                    })();
                (i.ConstantsRank = n), cc._RF.pop();
            },
            {},
        ],
        CookieAnimation: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '57d25jzoM1G4IvqTRvheAWM', 'CookieAnimation'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var p = e('../../../base/G'),
                    h = e('../../animation/action/MMoveBy'),
                    f = e('../../animation/action/MMoveTo'),
                    m = e('../../animation/action/MScaleTo'),
                    g = e('../../animation/action/MSequence'),
                    _ = e('../../animation/action/MSpawn'),
                    y = e('../../animation/action/MCallFunc'),
                    S = e('../../GameBus'),
                    o = (function () {
                        function e(e) {
                            this.mGameNode = e;
                            var t = this.mGameNode.getChildByName('FeedLayer');
                            (this.mMoneyPanel = t.getChildByName('MoneyPanel')), (this.mMoneyIcon = this.mMoneyPanel.getChildByName('MoneyIcon')), (this.mMoneyText = this.mMoneyPanel.getChildByName('MoneyText')), (this.mGiftPanel = t.getChildByName('GiftPanel')), (this.mGiftIcon = this.mGiftPanel.getChildByName('GiftIcon')), (this.mGiftText = this.mGiftPanel.getChildByName('GiftText'));
                            var i = new m.default(1, 1, 0.2),
                                o = new m.default(1.3, 1.3, 0.2);
                            this.mTextZoomAction = new g.default(o, i);
                        }
                        return (
                            (e.prototype.showMoneyFlyAnimation = function (e, t, i) {
                                var o = this,
                                    n = this.mMoneyIcon.getRect(),
                                    a = this.mMoneyPanel.getPosition();
                                (a.x += n.xCenter), (a.y += n.yCenter), (a.x -= e.getWidth() >>> 1), (a.y -= e.getHeight() >>> 1);
                                var r = p.G.Ap.config.moneyFlyDuration,
                                    s = new h.default(0, p.G.Ap.config.getBlockHeight() / 2, p.G.Ap.config.moneyUpDuration),
                                    c = new f.default(a.x, a.y, r),
                                    l = new m.default(0.5, 0.5, r),
                                    u = new y.default(function () {
                                        i(), o.startAddMoneyAction(t);
                                    }),
                                    d = new g.default(s, new _.default(c, l), u);
                                S.default.getInstance().animationMgr.runAction(e, d);
                            }),
                            (e.prototype.startAddMoneyAction = function (e) {
                                this.mMoneyText.setNumberValue(e), this.mMoneyText.setScale(1, 1), this.mTextZoomAction.getTarget() == this.mMoneyText || S.default.getInstance().animationMgr.runAction(this.mMoneyText, this.mTextZoomAction);
                            }),
                            (e.prototype.showGiftFlyAnimation = function (e, t, i) {
                                var o = this,
                                    n = this.mGiftIcon.getRect(),
                                    a = this.mGiftPanel.getPosition();
                                (a.x += n.xCenter), (a.y += n.yCenter), (a.x -= e.getWidth() >>> 1), (a.y -= e.getHeight() >>> 1);
                                var r = new h.default(0, p.G.Ap.config.getBlockHeight() / 2, p.G.Ap.config.giftUpDuration),
                                    s = p.G.Ap.config.giftFlyDuration,
                                    c = new f.default(a.x, a.y, s),
                                    l = new y.default(function () {
                                        i(), o.startAddGiftAction(t);
                                    }),
                                    u = new g.default(r, c, l);
                                S.default.getInstance().animationMgr.runAction(e, u);
                            }),
                            (e.prototype.startAddGiftAction = function (e) {
                                this.mGiftPanel.setVisible(!0), this.mGiftText.setNumberValue(e), this.mGiftText.setScale(1, 1), this.mTextZoomAction.getTarget() == this.mGiftText ? (this.mTextZoomAction.ready(), this.mTextZoomAction.start(this.mGiftText)) : S.default.getInstance().animationMgr.runAction(this.mGiftText, this.mTextZoomAction);
                            }),
                            e
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../../../base/G': 'G',
                '../../GameBus': 'GameBus',
                '../../animation/action/MCallFunc': 'MCallFunc',
                '../../animation/action/MMoveBy': 'MMoveBy',
                '../../animation/action/MMoveTo': 'MMoveTo',
                '../../animation/action/MScaleTo': 'MScaleTo',
                '../../animation/action/MSequence': 'MSequence',
                '../../animation/action/MSpawn': 'MSpawn',
            },
        ],
        CookiesNodeCache: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'fd16fjPMtVM8osMiwasQjy+', 'CookiesNodeCache'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o,
                    n,
                    a = e('./ReuseNode');
                ((n = o = i.COOKIESTYPE || (i.COOKIESTYPE = {}))[(n.MONEY = 0)] = 'MONEY'), (n[(n.GIFT = 1)] = 'GIFT');
                var r = (function () {
                    function e(e, t, i, o) {
                        (this.parentNode = null), (this.parentNode = e), (this.atlas = t), (this.moneySpriteFrame = i), (this.giftSpriteFrame = o);
                    }
                    return (
                        (e.prototype.createCache = function (e, t) {
                            void 0 === e && (e = 5), void 0 === t && (t = 1);
                        }),
                        (e.prototype.getDynamicly = function (e) {
                            var t = this.get(e);
                            if (null == t)
                                switch (e) {
                                    case o.MONEY:
                                        t = this.createMoneyNode();
                                        break;
                                    case o.GIFT:
                                        t = this.createGiftNode();
                                        break;
                                    default:
                                        t = this.createBlankNode();
                                }
                            return t;
                        }),
                        (e.prototype.get = function (e) {
                            return null;
                        }),
                        (e.prototype.put = function (e, t) {
                            return !1;
                        }),
                        (e.prototype.clear = function () {}),
                        (e.prototype.createMoneyNode = function () {
                            var e = new a.default();
                            return e.setContentSize(125, 125), (e.imageData = this.atlas), (e.imageItem = this.moneySpriteFrame), e;
                        }),
                        (e.prototype.createGiftNode = function () {
                            var e = new a.default();
                            return e.setContentSize(123, 159), (e.imageData = this.atlas), (e.imageItem = this.giftSpriteFrame), e;
                        }),
                        (e.prototype.createBlankNode = function () {
                            return new a.default();
                        }),
                        e
                    );
                })();
                (i.CookiesNodeCache = r), cc._RF.pop();
            },
            {
                './ReuseNode': 'ReuseNode',
            },
        ],
        CopyrightData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'd3ed6WB49NLLZ8wxmAgxmAT', 'CopyrightData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.findMid = function (e) {
                                return this.find('mid', e);
                            }),
                            (t.prototype.getRow = function () {
                                return new a();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.CopyrightData = n;
                var a = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getMid = function () {
                            return this.getInt('mid');
                        }),
                        (t.prototype.getMusicName = function () {
                            return this.getString('music_name');
                        }),
                        t
                    );
                })(o.default);
                (i.CopyrightRow = a), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        CopyrightManager: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '4a9e3y3CzZK7Z9YHGrvbS2+', 'CopyrightManager'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {
                        this.mCache = {};
                    }
                    return (
                        (e.getInstance = function () {
                            return e.mInstance || (e.mInstance = new e()), e.mInstance;
                        }),
                        (e.prototype.setCopyrightData = function (e, t) {
                            this.mCache[e] = t;
                        }),
                        (e.prototype.isCopyrightMusic = function (e) {
                            var t = this.mCache[e];
                            return null != t && null != t;
                        }),
                        e
                    );
                })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        CrashMonitor: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'd4914hATj1OD4jIFceDVkas', 'CrashMonitor'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var c = e('../infoc/minigame_piano2_crash'),
                    o = e('./GameInfoMgr'),
                    n = e('./Log'),
                    a = e('../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    r = (function () {
                        function s() {}
                        return (
                            (s.begin = function () {
                                console.warn('CrashMonitor::begin => '), s.registerErrorHandler(), s.plusFailCount(), s.updateInfocData();
                            }),
                            (s.end = function (e) {
                                console.warn('CrashMonitor::end => ' + e), s.resetFailCount();
                            }),
                            (s.resetFailCount = function () {
                                cc.sys.platform == cc.sys.WECHAT_GAME && s.setFailCount(0);
                            }),
                            (s.plusFailCount = function () {
                                if (cc.sys.platform == cc.sys.WECHAT_GAME) {
                                    var e = s.getFailCount();
                                    s.setFailCount(e + 1);
                                }
                            }),
                            (s.updateInfocData = function () {
                                setTimeout(function () {
                                    a.MGUser.getUserBasicInfo({
                                        complete: function (e) {
                                            e && (s.mNickName = e.nickName);
                                        },
                                    });
                                    var e = o.GameInfoMgr.Ins().getInfo();
                                    e && ((s.mGameId = e.gameid), (s.mGameVersion = e.version), (s.mAppId = e.appid));
                                }, 0);
                            }),
                            (s.registerErrorHandler = function () {
                                if (cc.sys.platform == cc.sys.WECHAT_GAME)
                                    wx.onError(function (e) {
                                        if (e && e.message) {
                                            var t = e.message.substr(0, Math.min(e.message.length, 150));
                                            s.reportCrash(t, e.stack), n.default.w('registerErrorHandler == crash happend');
                                        }
                                    });
                                else if (cc.sys.platform == cc.sys.QQ_PLAY)
                                    BK.Script.setErrorObserver &&
                                        (n.default.w('setErrorObserver supported'),
                                        BK.Script.setErrorObserver(function (e, t) {
                                            if (e || t) {
                                                var i = e ? e.substr(0, Math.min(e.length, 150)) : 'msg empty',
                                                    o = t || 'stack empty';
                                                console.error('Crash: ' + i + ' stack: ' + o), s.reportCrash(i, o), n.default.w('registerErrorHandler == crash happend');
                                            }
                                        }));
                                else
                                    try {
                                        window.onerror = function (e) {
                                            if (e) {
                                                var t = e.substr(0, Math.min(e.length, 150));
                                                s.reportCrash(t, '');
                                            }
                                        };
                                    } catch (e) {}
                            }),
                            (s.reportCrash = function (e, t) {
                                if (e && !(e.length < 3)) {
                                    var i = cmg.hex_sha1(e);
                                    if (i != s.mLastDumpKey) {
                                        s.mLastDumpKey = i;
                                        var o = s.mNickName,
                                            n = s.mGameId,
                                            a = s.mGameVersion,
                                            r = s.mAppId;
                                        console.warn('reportCrash => appid(' + r + ') nickname(' + o + ') dumpkey(' + i + ')'), c.default.report(100, n, a, r, o, i, e, t);
                                    } else console.warn('reportCrash => ignore for duplicate');
                                }
                            }),
                            (s.tryShowCrashModal = function (e) {
                                e &&
                                    (cc.sys.platform == cc.sys.WECHAT_GAME
                                        ? wx.showModal({
                                              title: '提示',
                                              content: '检测到游戏异常，请重启尝试.\n' + e,
                                              confirmText: '重启游戏',
                                              showCancel: !1,
                                              success: function (e) {
                                                  e.confirm && wx.exitMiniProgram();
                                              },
                                          })
                                        : window.alert(e));
                            }),
                            (s.setFailCount = function (e) {
                                wx.setStorageSync(s.STARTUP_FAIL_KEY, e);
                            }),
                            (s.getFailCount = function () {
                                var e = wx.getStorageSync(s.STARTUP_FAIL_KEY);
                                return e || (e = 0), e;
                            }),
                            (s.TIMEOUT_MAX = 3e4),
                            (s.STARTUP_FAIL_KEY = 'startup_fail_count'),
                            (s.STARTUP_FILE = null),
                            (s.mNickName = 'NaN'),
                            (s.mGameId = 0),
                            (s.mGameVersion = 'NaN'),
                            (s.mAppId = 'NaN'),
                            (s.mLastDumpKey = ''),
                            s
                        );
                    })();
                (i.default = r), cc._RF.pop();
            },
            {
                '../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../infoc/minigame_piano2_crash': 'minigame_piano2_crash',
                './GameInfoMgr': 'GameInfoMgr',
                './Log': 'Log',
            },
        ],
        CsvFile: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '2092bjqpnBIVIRTYBJhs7UO', 'CsvFile'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var s = e('./CsvOption'),
                    c = e('./CSV'),
                    l = e('../../../util/ResLoader'),
                    u = e('../../../util/PU'),
                    d = e('../../../base/Log'),
                    o = (function () {
                        function e() {
                            (this.mHeader = {}), (this.emptyCount = 0), (this.mRowArr = []), (this.mRowMap = {});
                        }
                        return (
                            (e.prototype.setHeaders = function (e) {
                                var i = this;
                                e.forEach(function (e, t) {
                                    (e && '' != e) || (i.emptyCount++, (e = 'xxx_' + i.emptyCount)), (i.mHeader[e] = t);
                                });
                            }),
                            (e.prototype.addRow = function (e, t) {
                                this.mRowArr.push(t);
                                var i = t[e];
                                this.mRowMap[i] = t;
                            }),
                            (e.prototype.findField = function (e) {
                                var t = this.mHeader[e];
                                return null == t || null == t ? -1 : t;
                            }),
                            (e.prototype.csvGetRow = function (e, t) {
                                this.findField(e);
                                var i = this.mRowMap[t];
                                return null != i && null != i ? i : null;
                            }),
                            (e.prototype.csvGetRows = function (e, t) {
                                for (var i = this.findField(e), o = this.mRowArr.length, n = [], a = 0; a < o; a++) {
                                    var r = this.mRowArr[a];
                                    r[i] == t && n.push(r);
                                }
                                return n;
                            }),
                            (e.prototype.open = function (i, e, o, n) {
                                var a = this,
                                    r = e ? 2 : 1,
                                    t = u.default.getResourcePath('resources/' + i + '.txt');
                                l.default.loadString(t, function (e, t) {
                                    e
                                        ? (d.default.i('DataManager.open -> ResLoader.loadString error. user cocos loader.', e),
                                          cc.loader.loadRes(i, function (e, t) {
                                              e ? (console.log('csv load, error=' + e), n(-1)) : (a.parseCSV(t, r, o), n(0));
                                          }))
                                        : (a.parseCSV(t, r, o), n(0));
                                });
                            }),
                            (e.prototype.parseCSV = function (e, t, i) {
                                var o = this,
                                    n = new s.default();
                                (n.header = !1), (n.cast = !1);
                                var a = new c.default(e, n),
                                    r = 0;
                                a.parse(function (e) {
                                    0 == r ? o.setHeaders(e) : t <= r && o.addRow(i, e), r++;
                                });
                            }),
                            (e.prototype.getAllDB = function () {
                                return this.mRowArr ? this.mRowArr : [];
                            }),
                            (e.prototype.csvFindRowBiany = function (e, t) {
                                for (var i = parseInt(t), o = 2, n = this.mRowArr.length; 0 <= n - o; ) {
                                    var a = (n + o) / 2,
                                        r = this.mRowArr[a],
                                        s = parseInt(r[0]);
                                    if (i == s) return r;
                                    s < i ? (o = a + 1) : (n = a - 1);
                                }
                                return null;
                            }),
                            e
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../../../base/Log': 'Log',
                '../../../util/PU': 'PU',
                '../../../util/ResLoader': 'ResLoader',
                './CSV': 'CSV',
                './CsvOption': 'CsvOption',
            },
        ],
        CsvOption: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'bb5a0AYD4tFaIM94o94qxcl', 'CsvOption'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = function () {
                    (this.header = !1), (this.cast = !0);
                };
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        CsvRowData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '10073m0JxhJJLDgRH2nYz5o', 'CsvRowData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {
                        this.mCsvFile = null;
                    }
                    return (
                        (e.prototype.getInt = function (e) {
                            var t = this.mCsvFile.findField(e);
                            if (t < 0 || t >= this.mRowData.length) return 0;
                            var i = parseInt(this.mRowData[t]);
                            return isNaN(i) ? 0 : i;
                        }),
                        (e.prototype.setInt = function (e, t) {
                            var i = this.mCsvFile.findField(e);
                            -1 < i && i < this.mRowData.length && (this.mRowData[i] = t + '');
                        }),
                        (e.prototype.getString = function (e) {
                            var t = this.mCsvFile.findField(e);
                            return t < 0 || t >= this.mRowData.length ? '' : this.mRowData[t];
                        }),
                        (e.prototype.setString = function (e, t) {
                            var i = this.mCsvFile.findField(e);
                            -1 < i && i < this.mRowData.length && (this.mRowData[i] = t);
                        }),
                        (e.prototype.getFloat = function (e) {
                            var t = this.mCsvFile.findField(e);
                            if (t < 0 || t >= this.mRowData.length) return 0;
                            var i = parseFloat(this.mRowData[t]);
                            return isNaN(i) ? 0 : i;
                        }),
                        (e.prototype.setFloat = function (e, t) {
                            var i = this.mCsvFile.findField(e);
                            -1 < i && i < this.mRowData.length && (this.mRowData[i] = t + '');
                        }),
                        e
                    );
                })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        CtrlAvoid: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '9e57erA8jlFVrkFh+8PqPa6', 'CtrlAvoid'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../../property/PropertyDefines'),
                    n = e('../../../GameBus'),
                    a = e('../../../../base/G'),
                    r = e('../../../../base/Log'),
                    s = (function () {
                        function e() {
                            (this.manager = null), (this.property = new o.Property(o.PROPERTYTYPE.GAME_AVOID));
                        }
                        return (
                            (e.prototype.exe = function () {
                                var e = this,
                                    t = !1;
                                return (
                                    1 == this.manager.trySubPropertyCount(this.property) && (t = !0),
                                    t &&
                                        (this.manager.propertyProcess.onStartProperty(this.property.type),
                                        n.default.getInstance().natureScheduler.scheduleOnce(function () {
                                            e.onComplete();
                                        }, this.updateAdditionTime(1))),
                                    t
                                );
                            }),
                            (e.prototype.updateAdditionTime = function (e) {
                                var t = e,
                                    i = a.G.propAddition.getAdditionObstacleTime(e, a.G.Ap.state.mission.getType().toString());
                                return r.default.e('回避 时间加成：' + t + '  => ' + i), i;
                            }),
                            (e.prototype.onComplete = function () {
                                this.manager.propertyProcess.onEndProperty(this.property.type);
                            }),
                            e
                        );
                    })();
                (i.CtrlAvoid = s), cc._RF.pop();
            },
            {
                '../../../../base/G': 'G',
                '../../../../base/Log': 'Log',
                '../../../../property/PropertyDefines': 'PropertyDefines',
                '../../../GameBus': 'GameBus',
            },
        ],
        CtrlControl: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '06c23M9NPJJo7Z+PvWq8LnN', 'CtrlControl'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../GameBus'),
                    n = e('../../../../base/G'),
                    a = e('../../../../property/PropertyDefines'),
                    r = e('../../../../base/Log'),
                    s = (function () {
                        function e() {
                            (this.manager = null), (this.duration = 8), (this.property = new a.Property(a.PROPERTYTYPE.GAME_CONTROLL));
                        }
                        return (
                            (e.prototype.init = function () {
                                var e = n.G.Ap.propertyPack.getConfig().getParam(this.property);
                                (this.duration = e.effect.duration), this.updateAdditionTime();
                            }),
                            (e.prototype.updateAdditionTime = function () {
                                var e = this.duration;
                                (this.duration = n.G.propAddition.getAdditionDashTime(this.duration, n.G.Ap.state.mission.getType().toString())), r.default.e('狂热 时间加成：' + e + '  => ' + this.duration);
                            }),
                            (e.prototype.exe = function () {
                                var e = this;
                                this.manager.propertyProcess.onStartProperty(this.property.type),
                                    o.default.getInstance().natureScheduler.scheduleOnce(function () {
                                        e.onComplete();
                                    }, this.duration);
                            }),
                            (e.prototype.onComplete = function () {
                                this.manager.propertyProcess.onEndProperty(this.property.type);
                            }),
                            e
                        );
                    })();
                (i.CtrlControl = s), cc._RF.pop();
            },
            {
                '../../../../base/G': 'G',
                '../../../../base/Log': 'Log',
                '../../../../property/PropertyDefines': 'PropertyDefines',
                '../../../GameBus': 'GameBus',
            },
        ],
        CtrlConversion: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'a021dZI+PNMJ4kcIa4CPhEw', 'CtrlConversion'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../../property/PropertyDefines'),
                    n = e('../../../../base/G'),
                    a = e('../../../../base/Log'),
                    r = (function () {
                        function e() {
                            (this.manager = null), (this.numberOfEffects = 3), (this.m_state = 0), (this.m_count = 0), (this.property = new o.Property(o.PROPERTYTYPE.GAME_CONVERSION));
                        }
                        return (
                            (e.prototype.exe = function () {
                                this.miss();
                            }),
                            (e.prototype.init = function () {
                                var e = n.G.Ap.propertyPack.getConfig().getParam(this.property).effect;
                                (this.numberOfEffects = e.numberOfEffects), (this.numberOfEffects = this.updateAdditionTime(this.numberOfEffects));
                            }),
                            (e.prototype.updateAdditionTime = function (e) {
                                var t = e,
                                    i = n.G.propAddition.getAdditionConversionTime(e, n.G.Ap.state.mission.getType().toString());
                                return a.default.e('转化 加成：' + t + '  => ' + i), i;
                            }),
                            (e.prototype.miss = function () {
                                switch (this.m_state) {
                                    case 0:
                                        if (0 == this.manager.trySubPropertyCount(this.property)) return;
                                        this.manager.propertyProcess.onStartProperty(this.property.type), (this.m_count = this.numberOfEffects), --this.m_count, (this.m_state = 1);
                                        break;
                                    case 1:
                                        --this.m_count, 0 == this.m_count && ((this.m_state = 0), this.manager.propertyProcess.onEndProperty(this.property.type));
                                }
                            }),
                            e
                        );
                    })();
                (i.CtrlConversion = r), cc._RF.pop();
            },
            {
                '../../../../base/G': 'G',
                '../../../../base/Log': 'Log',
                '../../../../property/PropertyDefines': 'PropertyDefines',
            },
        ],
        CtrlFanatical: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'daed8hVeWVB6bixN7F2f29y', 'CtrlFanatical'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../GameBus'),
                    n = e('../../../../property/PropertyDefines'),
                    a = e('../../../../base/G'),
                    r = e('./../../../../base/Log'),
                    s = (function () {
                        function e() {
                            (this.manager = null), (this.duration = 5), (this.property = null);
                        }
                        return (
                            (e.prototype.init = function () {
                                this.property = new n.Property(n.PROPERTYTYPE.GAME_FANATICAL);
                                var e = a.G.Ap.propertyPack.getConfig().getParam(this.property);
                                (this.duration = e.effect.duration), this.updateAdditionTime();
                            }),
                            (e.prototype.updateAdditionTime = function () {
                                var e = this.duration;
                                (this.duration = a.G.propAddition.getAdditionDashTime(this.duration, a.G.Ap.state.mission.getType().toString())), r.default.e('狂热 时间加成：' + e + '  => ' + this.duration);
                            }),
                            (e.prototype.exe = function () {
                                var e = this;
                                0 != this.manager.trySubPropertyCount(this.property) &&
                                    (this.manager.propertyProcess.onStartProperty(this.property.type),
                                    o.default.getInstance().natureScheduler.scheduleOnce(function () {
                                        e.onComplete();
                                    }, this.duration));
                            }),
                            (e.prototype.onComplete = function () {
                                this.manager.propertyProcess.onEndProperty(this.property.type);
                            }),
                            e
                        );
                    })();
                (i.CtrlFanatical = s), cc._RF.pop();
            },
            {
                '../../../../base/G': 'G',
                '../../../../property/PropertyDefines': 'PropertyDefines',
                '../../../GameBus': 'GameBus',
                './../../../../base/Log': 'Log',
            },
        ],
        CtrlFog: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '5abb6BXFRhIl5unNoOknHCk', 'CtrlFog'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../GameBus'),
                    n = e('../../../../base/G'),
                    a = e('../../../../property/PropertyDefines'),
                    r = e('../../../../base/Log'),
                    s = (function () {
                        function e() {
                            (this.manager = null), (this.effectNode = null), (this.duration = 5), (this.property = null);
                        }
                        return (
                            (e.prototype.Init = function () {
                                var e = n.G.Ap.propertyPack.getConfig().getParam(new a.Property(a.PROPERTYTYPE.GAME_FOG));
                                (this.duration = e.effect.duration), this.updateAdditionTime();
                            }),
                            (e.prototype.updateAdditionTime = function () {
                                var e = this.duration;
                                (this.duration = n.G.propAddition.getAdditionFogTime(this.duration, n.G.Ap.state.mission.getType().toString())), r.default.e('迷雾 时间加成：' + e + '  => ' + this.duration);
                            }),
                            (e.prototype.exe = function () {
                                var e = this;
                                (this.property = new a.Property(a.PROPERTYTYPE.GAME_FOG)), this.manager.propertyProcess.onStartProperty(this.property.type);
                                n.G.Ap.state.getCarryPropertyCount(new a.Property(a.PROPERTYTYPE.GAME_SHIELD));
                                o.default.getInstance().natureScheduler.scheduleOnce(function () {
                                    e.onComplete();
                                }, this.duration);
                            }),
                            (e.prototype.onComplete = function () {
                                this.manager.propertyProcess.onEndProperty(this.property.type);
                            }),
                            e
                        );
                    })();
                i.CtrlFog = s;
                (function () {
                    function e() {
                        (this.effectNode = null), (this.Root = null);
                    }
                    (e.prototype.create = function () {}),
                        (e.prototype.createAnim = function () {}),
                        (e.prototype.remove = function () {
                            null != this.Root && null != this.effectNode && this.effectNode.removeChild(this.Root);
                        });
                })();
                cc._RF.pop();
            },
            {
                '../../../../base/G': 'G',
                '../../../../base/Log': 'Log',
                '../../../../property/PropertyDefines': 'PropertyDefines',
                '../../../GameBus': 'GameBus',
            },
        ],
        CtrlObstacle: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '78667oy8VpCr5mA4vh+m2Vw', 'CtrlObstacle'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../../property/PropertyDefines'),
                    n = e('../../../../base/G'),
                    a = e('../../../GameBus'),
                    r = e('../../../../base/Log'),
                    s = (function () {
                        function e() {
                            (this.manager = null), (this.duration = 5), (this.property = null);
                        }
                        return (
                            (e.prototype.init = function () {
                                this.property = new o.Property(o.PROPERTYTYPE.GAME_OBSTACLE);
                                var e = n.G.Ap.propertyPack.getConfig().getParam(new o.Property(o.PROPERTYTYPE.GAME_OBSTACLE));
                                (this.duration = e.effect.duration), this.updateAdditionTime();
                            }),
                            (e.prototype.updateAdditionTime = function () {
                                var e = this.duration;
                                (this.duration = n.G.propAddition.getAdditionObstacleTime(this.duration, n.G.Ap.state.mission.getType().toString())), r.default.e('障碍块 时间加成：' + e + '  => ' + this.duration);
                            }),
                            (e.prototype.exe = function () {
                                var e = this;
                                this.manager.propertyProcess.onStartProperty(this.property.type),
                                    a.default.getInstance().natureScheduler.scheduleOnce(function () {
                                        e.onComplete();
                                    }, this.duration);
                            }),
                            (e.prototype.onComplete = function () {
                                this.manager.propertyProcess.onEndProperty(this.property.type);
                            }),
                            e
                        );
                    })();
                (i.CtrlObstacle = s), cc._RF.pop();
            },
            {
                '../../../../base/G': 'G',
                '../../../../base/Log': 'Log',
                '../../../../property/PropertyDefines': 'PropertyDefines',
                '../../../GameBus': 'GameBus',
            },
        ],
        CtrlPropertyManager: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '2a13agHEDJDn7LuizYhTn7R', 'CtrlPropertyManager'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../property/PropertyDefines'),
                    n = e('./debuff/CtrlFog'),
                    a = e('./debuff/CtrlObstacle'),
                    r = e('./debuff/CtrlControl'),
                    s = e('./buff/CtrlAvoid'),
                    c = e('./buff/CtrlConversion'),
                    l = e('./buff/CtrlFanatical'),
                    u = e('../../../base/G'),
                    d = (function () {
                        function e() {
                            (this.propertyProcess = null), (this.fog = new n.CtrlFog()), (this.obstacle = new a.CtrlObstacle()), (this.control = new r.CtrlControl()), (this.avoid = new s.CtrlAvoid()), (this.conversion = new c.CtrlConversion()), (this.fanatical = new l.CtrlFanatical()), (this.m_IsInit = !1);
                        }
                        return (
                            (e.prototype.init = function () {
                                1 != this.m_IsInit && ((this.m_IsInit = !0), ((this.avoid.manager = this).fog.manager = this).fog.Init(), (this.conversion.manager = this).conversion.init(), this.obstacle.init(), (this.obstacle.manager = this).control.init(), (this.control.manager = this).conversion.init(), (this.conversion.manager = this).fanatical.init(), (this.fanatical.manager = this));
                            }),
                            (e.prototype.exe = function (e) {
                                switch ((this.init(), e)) {
                                    case o.PROPERTYTYPE.GAME_FOG:
                                    case o.PROPERTYTYPE.GAME_CONTROLL:
                                    case o.PROPERTYTYPE.GAME_OBSTACLE:
                                        if (1 == this.avoid.exe()) return void this.propertyProcess.onEndProperty(e);
                                }
                                switch (e) {
                                    case o.PROPERTYTYPE.GAME_FOG:
                                        this.fog.exe();
                                        break;
                                    case o.PROPERTYTYPE.GAME_OBSTACLE:
                                        this.obstacle.exe();
                                        break;
                                    case o.PROPERTYTYPE.GAME_CONTROLL:
                                        this.control.exe();
                                        break;
                                    case o.PROPERTYTYPE.GAME_AVOID:
                                        this.avoid.exe();
                                        break;
                                    case o.PROPERTYTYPE.GAME_CONVERSION:
                                        this.conversion.exe();
                                        break;
                                    case o.PROPERTYTYPE.GAME_FANATICAL:
                                        this.fanatical.exe();
                                }
                            }),
                            (e.prototype.trySubPropertyCount = function (e) {
                                return this.propertyProcess.onConsumeProperty(e.type);
                            }),
                            (e.prototype.test = function () {
                                u.G.Ap.propertyPack.getConfig().getParam(new o.Property(o.PROPERTYTYPE.GAME_AVOID)), u.G.Ap.propertyPack.getConfig().getParam(new o.Property(o.PROPERTYTYPE.GAME_CONVERSION)), u.G.Ap.propertyPack.getConfig().getParam(new o.Property(o.PROPERTYTYPE.GAME_FANATICAL)), u.G.Ap.propertyPack.getConfig().getParam(new o.Property(o.PROPERTYTYPE.GAME_FOG)), u.G.Ap.propertyPack.getConfig().getParam(new o.Property(o.PROPERTYTYPE.GAME_CONTROLL)), u.G.Ap.propertyPack.getConfig().getParam(new o.Property(o.PROPERTYTYPE.GAME_OBSTACLE));
                                for (var e = 0; e < 10; ++e) this.conversion.miss();
                            }),
                            e
                        );
                    })();
                (i.CtrlPropertyManager = d), cc._RF.pop();
            },
            {
                '../../../base/G': 'G',
                '../../../property/PropertyDefines': 'PropertyDefines',
                './buff/CtrlAvoid': 'CtrlAvoid',
                './buff/CtrlConversion': 'CtrlConversion',
                './buff/CtrlFanatical': 'CtrlFanatical',
                './debuff/CtrlControl': 'CtrlControl',
                './debuff/CtrlFog': 'CtrlFog',
                './debuff/CtrlObstacle': 'CtrlObstacle',
            },
        ],
        1: [
            function (e, t, i) {
                'use strict';
                t.exports = e('./lib');
            },
            {
                './lib': 6,
            },
        ],
        2: [
            function (e, t, i) {
                'use strict';
                var n = e('asap/raw');

                function r() {}
                var a = null,
                    s = {};

                function c(e) {
                    if ('object' != typeof this) throw new TypeError('Promises must be constructed via new');
                    if ('function' != typeof e) throw new TypeError("Promise constructor's argument is not a function");
                    (this._75 = 0), (this._83 = 0), (this._18 = null), (this._38 = null), e !== r && h(e, this);
                }

                function l(e, t) {
                    for (; 3 === e._83; ) e = e._18;
                    if ((c._47 && c._47(e), 0 === e._83)) return 0 === e._75 ? ((e._75 = 1), void (e._38 = t)) : 1 === e._75 ? ((e._75 = 2), void (e._38 = [e._38, t])) : void e._38.push(t);
                    var i, o;
                    (i = e),
                        (o = t),
                        n(function () {
                            var e = 1 === i._83 ? o.onFulfilled : o.onRejected;
                            if (null !== e) {
                                var t = (function (e, t) {
                                    try {
                                        return e(t);
                                    } catch (e) {
                                        return (a = e), s;
                                    }
                                })(e, i._18);
                                t === s ? d(o.promise, a) : u(o.promise, t);
                            } else 1 === i._83 ? u(o.promise, i._18) : d(o.promise, i._18);
                        });
                }

                function u(e, t) {
                    if (t === e) return d(e, new TypeError('A promise cannot be resolved with itself.'));
                    if (t && ('object' == typeof t || 'function' == typeof t)) {
                        var i = (function (e) {
                            try {
                                return e.then;
                            } catch (e) {
                                return (a = e), s;
                            }
                        })(t);
                        if (i === s) return d(e, a);
                        if (i === e.then && t instanceof c) return (e._83 = 3), (e._18 = t), void o(e);
                        if ('function' == typeof i) return void h(i.bind(t), e);
                    }
                    (e._83 = 1), (e._18 = t), o(e);
                }

                function d(e, t) {
                    (e._83 = 2), (e._18 = t), c._71 && c._71(e, t), o(e);
                }

                function o(e) {
                    if ((1 === e._75 && (l(e, e._38), (e._38 = null)), 2 === e._75)) {
                        for (var t = 0; t < e._38.length; t++) l(e, e._38[t]);
                        e._38 = null;
                    }
                }

                function p(e, t, i) {
                    (this.onFulfilled = 'function' == typeof e ? e : null), (this.onRejected = 'function' == typeof t ? t : null), (this.promise = i);
                }

                function h(e, t) {
                    var i = !1,
                        o = (function (e, t, i) {
                            try {
                                e(t, i);
                            } catch (e) {
                                return (a = e), s;
                            }
                        })(
                            e,
                            function (e) {
                                i || ((i = !0), u(t, e));
                            },
                            function (e) {
                                i || ((i = !0), d(t, e));
                            },
                        );
                    i || o !== s || ((i = !0), d(t, a));
                }
                ((t.exports = c)._47 = null),
                    (c._71 = null),
                    (c._44 = r),
                    (c.prototype.then = function (e, t) {
                        if (this.constructor !== c)
                            return (
                                (n = e),
                                (a = t),
                                new (o = this).constructor(function (e, t) {
                                    var i = new c(r);
                                    i.then(e, t), l(o, new p(n, a, i));
                                })
                            );
                        var o,
                            n,
                            a,
                            i = new c(r);
                        return l(this, new p(e, t, i)), i;
                    });
            },
            {
                'asap/raw': 10,
            },
        ],
        3: [
            function (e, t, i) {
                'use strict';
                var o = e('./core.js');
                (t.exports = o).prototype.done = function (e, t) {
                    (arguments.length ? this.then.apply(this, arguments) : this).then(null, function (e) {
                        setTimeout(function () {
                            throw e;
                        }, 0);
                    });
                };
            },
            {
                './core.js': 2,
            },
        ],
        4: [
            function (e, t, i) {
                'use strict';
                var c = e('./core.js');
                t.exports = c;
                var o = u(!0),
                    n = u(!1),
                    a = u(null),
                    r = u(void 0),
                    s = u(0),
                    l = u('');

                function u(e) {
                    var t = new c(c._44);
                    return (t._83 = 1), (t._18 = e), t;
                }
                (c.resolve = function (e) {
                    if (e instanceof c) return e;
                    if (null === e) return a;
                    if (void 0 === e) return r;
                    if (!0 === e) return o;
                    if (!1 === e) return n;
                    if (0 === e) return s;
                    if ('' === e) return l;
                    if ('object' == typeof e || 'function' == typeof e)
                        try {
                            var t = e.then;
                            if ('function' == typeof t) return new c(t.bind(e));
                        } catch (i) {
                            return new c(function (e, t) {
                                t(i);
                            });
                        }
                    return u(e);
                }),
                    (c.all = function (e) {
                        var s = Array.prototype.slice.call(e);
                        return new c(function (o, n) {
                            if (0 === s.length) return o([]);
                            var a = s.length;

                            function r(t, e) {
                                if (e && ('object' == typeof e || 'function' == typeof e)) {
                                    if (e instanceof c && e.then === c.prototype.then) {
                                        for (; 3 === e._83; ) e = e._18;
                                        return 1 === e._83
                                            ? r(t, e._18)
                                            : (2 === e._83 && n(e._18),
                                              void e.then(function (e) {
                                                  r(t, e);
                                              }, n));
                                    }
                                    var i = e.then;
                                    if ('function' == typeof i)
                                        return void new c(i.bind(e)).then(function (e) {
                                            r(t, e);
                                        }, n);
                                }
                                (s[t] = e), 0 == --a && o(s);
                            }
                            for (var e = 0; e < s.length; e++) r(e, s[e]);
                        });
                    }),
                    (c.reject = function (i) {
                        return new c(function (e, t) {
                            t(i);
                        });
                    }),
                    (c.race = function (e) {
                        return new c(function (t, i) {
                            e.forEach(function (e) {
                                c.resolve(e).then(t, i);
                            });
                        });
                    }),
                    (c.prototype.catch = function (e) {
                        return this.then(null, e);
                    });
            },
            {
                './core.js': 2,
            },
        ],
        5: [
            function (e, t, i) {
                'use strict';
                var o = e('./core.js');
                (t.exports = o).prototype.finally = function (t) {
                    return this.then(
                        function (e) {
                            return o.resolve(t()).then(function () {
                                return e;
                            });
                        },
                        function (e) {
                            return o.resolve(t()).then(function () {
                                throw e;
                            });
                        },
                    );
                };
            },
            {
                './core.js': 2,
            },
        ],
        6: [
            function (e, t, i) {
                'use strict';
                (t.exports = e('./core.js')), e('./done.js'), e('./finally.js'), e('./es6-extensions.js'), e('./node-extensions.js'), e('./synchronous.js');
            },
            {
                './core.js': 2,
                './done.js': 3,
                './es6-extensions.js': 4,
                './finally.js': 5,
                './node-extensions.js': 7,
                './synchronous.js': 8,
            },
        ],
        7: [
            function (e, t, i) {
                'use strict';
                var a = e('./core.js'),
                    n = e('asap');
                (t.exports = a).denodeify = function (e, t) {
                    return 'number' == typeof t && t !== 1 / 0
                        ? (function (e, t) {
                              for (var i = [], o = 0; o < t; o++) i.push('a' + o);
                              var n = ['return function (' + i.join(',') + ') {', 'var self = this;', 'return new Promise(function (rs, rj) {', 'var res = fn.call(', ['self'].concat(i).concat([r]).join(','), ');', 'if (res &&', '(typeof res === "object" || typeof res === "function") &&', 'typeof res.then === "function"', ') {rs(res);}', '});', '};'].join('');
                              return Function(['Promise', 'fn'], n)(a, e);
                          })(e, t)
                        : (function (e) {
                              for (var t = Math.max(e.length - 1, 3), i = [], o = 0; o < t; o++) i.push('a' + o);
                              var n = [
                                  'return function (' + i.join(',') + ') {',
                                  'var self = this;',
                                  'var args;',
                                  'var argLength = arguments.length;',
                                  'if (arguments.length > ' + t + ') {',
                                  'args = new Array(arguments.length + 1);',
                                  'for (var i = 0; i < arguments.length; i++) {',
                                  'args[i] = arguments[i];',
                                  '}',
                                  '}',
                                  'return new Promise(function (rs, rj) {',
                                  'var cb = ' + r + ';',
                                  'var res;',
                                  'switch (argLength) {',
                                  i
                                      .concat(['extra'])
                                      .map(function (e, t) {
                                          return 'case ' + t + ':res = fn.call(' + ['self'].concat(i.slice(0, t)).concat('cb').join(',') + ');break;';
                                      })
                                      .join(''),
                                  'default:',
                                  'args[argLength] = cb;',
                                  'res = fn.apply(self, args);',
                                  '}',
                                  'if (res &&',
                                  '(typeof res === "object" || typeof res === "function") &&',
                                  'typeof res.then === "function"',
                                  ') {rs(res);}',
                                  '});',
                                  '};',
                              ].join('');
                              return Function(['Promise', 'fn'], n)(a, e);
                          })(e);
                };
                var r = 'function (err, res) {if (err) { rj(err); } else { rs(res); }}';
                (a.nodeify = function (i) {
                    return function () {
                        var e = Array.prototype.slice.call(arguments),
                            t = 'function' == typeof e[e.length - 1] ? e.pop() : null,
                            o = this;
                        try {
                            return i.apply(this, arguments).nodeify(t, o);
                        } catch (i) {
                            if (null == t)
                                return new a(function (e, t) {
                                    t(i);
                                });
                            n(function () {
                                t.call(o, i);
                            });
                        }
                    };
                }),
                    (a.prototype.nodeify = function (t, i) {
                        if ('function' != typeof t) return this;
                        this.then(
                            function (e) {
                                n(function () {
                                    t.call(i, null, e);
                                });
                            },
                            function (e) {
                                n(function () {
                                    t.call(i, e);
                                });
                            },
                        );
                    });
            },
            {
                './core.js': 2,
                asap: 9,
            },
        ],
        8: [
            function (e, t, i) {
                'use strict';
                var o = e('./core.js');
                ((t.exports = o).enableSynchronous = function () {
                    (o.prototype.isPending = function () {
                        return 0 == this.getState();
                    }),
                        (o.prototype.isFulfilled = function () {
                            return 1 == this.getState();
                        }),
                        (o.prototype.isRejected = function () {
                            return 2 == this.getState();
                        }),
                        (o.prototype.getValue = function () {
                            if (3 === this._83) return this._18.getValue();
                            if (!this.isFulfilled()) throw new Error('Cannot get a value of an unfulfilled promise.');
                            return this._18;
                        }),
                        (o.prototype.getReason = function () {
                            if (3 === this._83) return this._18.getReason();
                            if (!this.isRejected()) throw new Error('Cannot get a rejection reason of a non-rejected promise.');
                            return this._18;
                        }),
                        (o.prototype.getState = function () {
                            return 3 === this._83 ? this._18.getState() : -1 === this._83 || -2 === this._83 ? 0 : this._83;
                        });
                }),
                    (o.disableSynchronous = function () {
                        (o.prototype.isPending = void 0), (o.prototype.isFulfilled = void 0), (o.prototype.isRejected = void 0), (o.prototype.getValue = void 0), (o.prototype.getReason = void 0), (o.prototype.getState = void 0);
                    });
            },
            {
                './core.js': 2,
            },
        ],
        9: [
            function (e, t, i) {
                'use strict';
                var o = e('./raw'),
                    n = [],
                    a = [],
                    r = o.makeRequestCallFromTimer(function () {
                        if (a.length) throw a.shift();
                    });

                function s(e) {
                    var t;
                    ((t = n.length ? n.pop() : new c()).task = e), o(t);
                }

                function c() {
                    this.task = null;
                }
                (t.exports = s),
                    (c.prototype.call = function () {
                        try {
                            this.task.call();
                        } catch (e) {
                            s.onerror ? s.onerror(e) : (a.push(e), r());
                        } finally {
                            (this.task = null), (n[n.length] = this);
                        }
                    });
            },
            {
                './raw': 10,
            },
        ],
        10: [
            function (e, p, t) {
                (function (e) {
                    'use strict';

                    function t(e) {
                        o.length || (i(), !0), (o[o.length] = e);
                    }
                    p.exports = t;
                    var i,
                        o = [],
                        n = 0;

                    function a() {
                        for (; n < o.length; ) {
                            var e = n;
                            if (((n += 1), o[e].call(), 1024 < n)) {
                                for (var t = 0, i = o.length - n; t < i; t++) o[t] = o[t + n];
                                (o.length -= n), (n = 0);
                            }
                        }
                        (o.length = 0), (n = 0), !1;
                    }
                    var r,
                        s,
                        c,
                        l = void 0 !== e ? e : self,
                        u = l.MutationObserver || l.WebKitMutationObserver;

                    function d(o) {
                        return function () {
                            var e = setTimeout(i, 0),
                                t = setInterval(i, 50);

                            function i() {
                                clearTimeout(e), clearInterval(t), o();
                            }
                        };
                    }
                    'function' == typeof u
                        ? ((r = 1),
                          (s = new u(a)),
                          (c = document.createTextNode('')),
                          s.observe(c, {
                              characterData: !0,
                          }),
                          (i = function () {
                              (r = -r), (c.data = r);
                          }))
                        : (i = d(a)),
                        (t.requestFlush = i),
                        (t.makeRequestCallFromTimer = d);
                }.call(this, 'undefined' != typeof global ? global : 'undefined' != typeof self ? self : 'undefined' != typeof window ? window : {}));
            },
            {},
        ],
        DAwardMgr: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'e2aa1dMosRORoUL77gIzhtp', 'DAwardMgr'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('./DailyAwardBens'),
                    a = e('./DailyAwardGenerator'),
                    r = e('../Logic/EventBus'),
                    s = e('../Logic/NotifyEvent'),
                    c = e('../Network/Protocol/StorageUtil'),
                    l = e('../../config/LSKey'),
                    u = e('../Logic/SkinDataManager'),
                    d = e('../../infoc/m_p2_PData_Dia'),
                    p = e('../Logic/GameItemsManager'),
                    o = (function () {
                        function o() {
                            (this.mGenerator = null), (this.DIFF_CLEAR_MILLISECONDS = 216e5), (this.mLastDateStrCache = null), (this.mGenerator = new a.DailyAwardGenerator());
                        }
                        return (
                            (o.log = function (e) {
                                for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
                            }),
                            (o.getIns = function () {
                                return null == this.sInstance && (this.sInstance = new o()), this.sInstance;
                            }),
                            (o.prototype.needShowDailyPopupDlgToday = function () {
                                if (null == this.mLastDateStrCache) {
                                    var e = c.default.read(l.default.SHOW_DAILY_AWARD_DIALOG_LAST_TIMES, '1970-1-1');
                                    (null != e && null != e && 0 != e.length) || (e = '1970-1-1'), (this.mLastDateStrCache = e);
                                }
                                var t = this.mGenerator.getTodayDateStr();
                                return o.log('DailyAwardManager needShowDailyPopupDlgToday-> lastDateStr ' + this.mLastDateStrCache + ' , todayDateStr ' + t + ', result:' + (t > this.mLastDateStrCache)), t > this.mLastDateStrCache;
                            }),
                            (o.prototype.updateShowDailyPopupDlgTime = function () {
                                (this.mLastDateStrCache = this.mGenerator.getTodayDateStr()), c.default.save(l.default.SHOW_DAILY_AWARD_DIALOG_LAST_TIMES, this.mLastDateStrCache), o.log('updateShowDailyPopupDlgTime ' + this.mLastDateStrCache);
                            }),
                            (o.prototype.getDailySignInfoAsyn = function (e) {
                                o.log('getDailySignInfoAsyn called'), e && this.mGenerator.generateDailySignInfo(e, !1);
                            }),
                            (o.prototype.checkReceiveStatAsyn = function (t) {
                                o.log('checkReceiveStatAsyn called'),
                                    t &&
                                        this.mGenerator.generateDailySignInfo(function (e) {
                                            t(e.stat == n.AwardCfg.SIGN_STAT_OK && e.receiveStat);
                                        }, !0),
                                    this.receiveSkinAwardEnhance();
                            }),
                            (o.prototype.receiveSkinAwardEnhance = function () {
                                3 <= this.mGenerator.getSignInTime() && (o.log('receiveSkinAwardEnhance： SkinDataManager.unlockDailyAttendanceSkin called'), u.SkinDataMgr.Ins().unlockDailyAttendanceSkin());
                            }),
                            (o.prototype.receiveAward = function (t) {
                                var i = this;
                                console.log('[DailyAward].receiveAward'),
                                    t &&
                                        this.mGenerator.doReceiveAward(function (e) {
                                            null != e && (t(e), r.default.fire(s.default.DAILY_GET_AWARD), i.consumeAward(e.awardList));
                                        });
                            }),
                            (o.prototype.consumeAward = function (e) {
                                for (var t = 0; t < e.length; t++) {
                                    var i = e[t];
                                    i.awardType == p.GameItemType.TYPE_DIAMONDS ? d.default.report(i.counter, d.default.SOURCE_DAILY_ATTENDANCE, d.default.ACTION_GET_DIAMOND) : i.awardType == p.GameItemType.TYPE_SKIN && (o.log('SkinDataManager.unlockDailyAttendanceSkin called'), u.SkinDataMgr.Ins().unlockDailyAttendanceSkin());
                                }
                            }),
                            (o.sInstance = null),
                            (o.DIALOG_SRC_NONE = 0),
                            (o.DIALOG_SRC_FIRST_RECEIVE_PIECE = 1),
                            o
                        );
                    })();
                (i.DAwardMgr = o), cc._RF.pop();
            },
            {
                '../../config/LSKey': 'LSKey',
                '../../infoc/m_p2_PData_Dia': 'm_p2_PData_Dia',
                '../Logic/EventBus': 'EventBus',
                '../Logic/GameItemsManager': 'GameItemsManager',
                '../Logic/NotifyEvent': 'NotifyEvent',
                '../Logic/SkinDataManager': 'SkinDataManager',
                '../Network/Protocol/StorageUtil': 'StorageUtil',
                './DailyAwardBens': 'DailyAwardBens',
                './DailyAwardGenerator': 'DailyAwardGenerator',
            },
        ],
        DBMgr: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'c7851olDHpFXYsda0qu+CbM', 'DBMgr'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var d,
                    o,
                    s = e('./CSV/BaseCsvFile'),
                    c = e('./CSV/LevelData'),
                    l = e('./CSV/LevelRewardData'),
                    u = e('./CSV/MusicJsonData'),
                    p = e('./CSV/LvData'),
                    h = e('./CSV/ExpData'),
                    f = e('./CSV/GoldData'),
                    m = e('./CSV/LanguageSongData'),
                    g = e('../Logic/LangMgr'),
                    n = e('../../util/Dictionary'),
                    a = e('../Logic/EventBus'),
                    r = e('../Logic/NotifyEvent'),
                    _ = e('./CSV/MusicKeyData'),
                    y = e('./CSV/CopyrightData'),
                    S = e('./CSV/LoginReward'),
                    v = e('./CSV/SongBox'),
                    I = e('./CSV/FragmentBox'),
                    T = e('./CSV/InviteAward'),
                    C = e('../Logic/CopyrightManager'),
                    E = e('./CSV/LevelConsumeData'),
                    A = e('../../base/Log'),
                    P = e('./CSV/LotteryData'),
                    k = e('./CSV/VipData'),
                    M = e('./CSV/CompetitionBasicData'),
                    L = e('./CSV/CompetitionMusicData'),
                    b = e('./CSV/CompetitionRewardData'),
                    N = e('./CSV/GameItemsData'),
                    R = e('./CSV/CompetitionSettlementData'),
                    D = e('./CSV/ShopData'),
                    w = e('./CSV/PlayerTaskData'),
                    B = e('./CSV/LifeData'),
                    G = e('./CSV/RankSetData'),
                    O = e('./CSV/FightRuleData'),
                    U = e('./CSV/RobotFightData'),
                    F = e('./CSV/SkinPieceData'),
                    H = e('./CSV/AdditionData'),
                    x = e('./CSV/EffectData'),
                    V = e('./CSV/HolidayTaskData');
                ((o = d = i.eDataBase || (i.eDataBase = {}))[(o.eDB_Map = 0)] = 'eDB_Map'), (o[(o.eDB_Level = 1)] = 'eDB_Level'), (o[(o.eDB_LevelReward = 2)] = 'eDB_LevelReward'), (o[(o.eDB_Language = 3)] = 'eDB_Language'), (o[(o.eDB_LanguageSong = 4)] = 'eDB_LanguageSong'), (o[(o.eDB_Animaiton = 5)] = 'eDB_Animaiton'), (o[(o.eDB_Task = 6)] = 'eDB_Task'), (o[(o.eDB_Lv = 7)] = 'eDB_Lv'), (o[(o.eDB_Life = 8)] = 'eDB_Life'), (o[(o.eDB_Exp = 9)] = 'eDB_Exp'), (o[(o.eDB_MusicJson = 10)] = 'eDB_MusicJson'), (o[(o.eDB_gold = 11)] = 'eDB_gold'), (o[(o.eDB_FontName = 12)] = 'eDB_FontName'), (o[(o.eDB_FontData = 13)] = 'eDB_FontData'), (o[(o.eDB_FontInheritance = 14)] = 'eDB_FontInheritance'), (o[(o.eDB_Holiday = 15)] = 'eDB_Holiday'), (o[(o.eDB_MusicBlock = 16)] = 'eDB_MusicBlock'), (o[(o.eDB_Album = 17)] = 'eDB_Album'), (o[(o.eDB_WeekActivity = 18)] = 'eDB_WeekActivity'), (o[(o.eDB_MusicReward = 19)] = 'eDB_MusicReward'), (o[(o.eDB_PackageMusic = 20)] = 'eDB_PackageMusic'), (o[(o.eDB_Leveing = 21)] = 'eDB_Leveing'), (o[(o.eDB_GhostChase = 22)] = 'eDB_GhostChase'), (o[(o.eDB_RedDotPriority = 23)] = 'eDB_RedDotPriority'), (o[(o.eDB_Mission2MusicList = 24)] = 'eDB_Mission2MusicList'), (o[(o.eDB_Mission2MusicRange = 25)] = 'eDB_Mission2MusicRange'), (o[(o.eDB_AchieveMentData = 26)] = 'eDB_AchieveMentData'), (o[(o.eDB_XmasActivity = 27)] = 'eDB_XmasActivity'), (o[(o.eDB_MusicKey = 28)] = 'eDB_MusicKey'), (o[(o.eDB_Copyright = 29)] = 'eDB_Copyright'), (o[(o.eDB_LoginReward = 30)] = 'eDB_LoginReward'), (o[(o.eDB_SongBox = 31)] = 'eDB_SongBox'), (o[(o.eDB_FragmentBox = 32)] = 'eDB_FragmentBox'), (o[(o.eDB_InviteAward = 33)] = 'eDB_InviteAward'), (o[(o.eDB_LevelConsume = 34)] = 'eDB_LevelConsume'), (o[(o.eDB_CompetitionBasic = 35)] = 'eDB_CompetitionBasic'), (o[(o.eDB_CompetitionMusic = 36)] = 'eDB_CompetitionMusic'), (o[(o.eDB_CompetitionReward = 37)] = 'eDB_CompetitionReward'), (o[(o.eDB_CompetitionSettlement = 38)] = 'eDB_CompetitionSettlement'), (o[(o.eDB_GameItems = 39)] = 'eDB_GameItems'), (o[(o.eDB_Shop = 40)] = 'eDB_Shop'), (o[(o.eDB_PlayerTask = 41)] = 'eDB_PlayerTask'), (o[(o.eDB_Lottery = 42)] = 'eDB_Lottery'), (o[(o.eDB_Vip = 43)] = 'eDB_Vip'), (o[(o.eDB_RankSet = 44)] = 'eDB_RankSet'), (o[(o.eDB_FightRule = 45)] = 'eDB_FightRule'), (o[(o.eDB_RobotFight = 46)] = 'eDB_RobotFight'), (o[(o.eDB_FightComboRule = 47)] = 'eDB_FightComboRule'), (o[(o.eDB_HardRobot = 48)] = 'eDB_HardRobot'), (o[(o.eDB_SkinPiece = 49)] = 'eDB_SkinPiece'), (o[(o.eDB_Addition = 50)] = 'eDB_Addition'), (o[(o.eDB_Effect = 51)] = 'eDB_Effect'), (o[(o.eDB_HolidayTask = 52)] = 'eDB_HolidayTask');
                var K = (function () {
                    function e() {
                        (this.mMapDataFile = new n.Dictionary()), (this.mDataCache = new n.Dictionary()), (this.mAllDataLoaded = !1), (this.counter = 0), (this.loadTotle = 0), (this.loadCallback = null);
                    }
                    return (
                        (e.Ins = function () {
                            return null == e.sInstance && (e.sInstance = new e()), e.sInstance;
                        }),
                        (e.prototype.loadAllDataAsync = function (o) {
                            return __awaiter(this, void 0, void 0, function () {
                                var t, i;
                                return __generator(this, function (e) {
                                    if (this.mAllDataLoaded) return o(), [2];
                                    for (this.loadData(d.eDB_Level, 'DB/level'), this.loadData(d.eDB_LevelReward, 'DB/levelreward'), this.loadData(d.eDB_MusicJson, 'DB/music_json'), this.loadData(d.eDB_Lv, 'DB/lv'), this.loadData(d.eDB_Life, 'DB/life'), this.loadData(d.eDB_Exp, 'DB/exp'), this.loadData(d.eDB_gold, 'DB/gold'), this.loadData(d.eDB_LanguageSong, 'DB/language_music'), this.loadData(d.eDB_MusicKey, 'DB/music_key'), this.loadData(d.eDB_Copyright, 'DB/copyright'), this.loadData(d.eDB_LoginReward, 'DB/login_reward'), this.loadData(d.eDB_SongBox, 'DB/song_box'), this.loadData(d.eDB_FragmentBox, 'DB/fragment_box'), this.loadData(d.eDB_InviteAward, 'DB/invite_award'), this.loadData(d.eDB_LevelConsume, 'DB/level_consume'), this.loadData(d.eDB_CompetitionBasic, 'DB/competition_basic'), this.loadData(d.eDB_CompetitionMusic, 'DB/competition_music'), this.loadData(d.eDB_CompetitionReward, 'DB/competition_reward'), this.loadData(d.eDB_CompetitionSettlement, 'DB/competition_settlement'), this.loadData(d.eDB_GameItems, 'DB/game_items_en'), this.loadData(d.eDB_Shop, 'DB/shop'), this.loadData(d.eDB_PlayerTask, 'DB/player_task'), this.loadData(d.eDB_Lottery, 'DB/lottery'), this.loadData(d.eDB_Vip, 'DB/vip'), this.loadData(d.eDB_RankSet, 'DB/rank_set'), this.loadData(d.eDB_FightRule, 'DB/fight_rule'), this.loadData(d.eDB_RobotFight, 'DB/robotFight'), this.loadData(d.eDB_FightComboRule, 'DB/rank_combo'), this.loadData(d.eDB_HardRobot, 'DB/hard_robot'), this.loadData(d.eDB_SkinPiece, 'DB/skin_piece'), this.loadData(d.eDB_Addition, 'DB/addition'), this.loadData(d.eDB_Effect, 'DB/effect'), this.loadData(d.eDB_HolidayTask, 'DB/holidayTask_config'), t = [d.eDB_Level, d.eDB_LevelReward, d.eDB_MusicJson, d.eDB_Lv, d.eDB_Life, d.eDB_Exp, d.eDB_gold, d.eDB_LanguageSong, d.eDB_MusicKey, d.eDB_Copyright, d.eDB_LoginReward, d.eDB_SongBox, d.eDB_FragmentBox, d.eDB_InviteAward, d.eDB_LevelConsume, d.eDB_GameItems, d.eDB_Lottery, d.eDB_Vip, d.eDB_Addition, d.eDB_Effect], this.counter = 0, this.loadTotle = t.length, this.loadCallback = o, i = 0; i < t.length; i++) this.loadDataAsync(t[i], this.loadCounter, this);
                                    return [2];
                                });
                            });
                        }),
                        (e.prototype.loadCounter = function () {
                            this.counter++, a.default.fire(r.default.LOADING_DB, this.counter / this.loadTotle), this.counter == this.loadTotle && ((this.mAllDataLoaded = !0), this.loadCallback && this.loadCallback(), console.log('load all txt succ'));
                        }),
                        (e.prototype.reloadDb = function (i) {
                            var o = this;
                            return new Promise(function (t, e) {
                                return __awaiter(o, void 0, void 0, function () {
                                    return __generator(this, function (e) {
                                        switch (e.label) {
                                            case 0:
                                                return A.default.i('DataManager => reloadDb start.', i), this.mDataCache.remove(i), [4, this.loadDataAsync(i)];
                                            case 1:
                                                return e.sent(), t(), [2];
                                        }
                                    });
                                });
                            });
                        }),
                        (e.prototype.loadDb = function (i) {
                            var o = this;
                            return new Promise(function (t, e) {
                                return __awaiter(o, void 0, void 0, function () {
                                    return __generator(this, function (e) {
                                        switch (e.label) {
                                            case 0:
                                                return A.default.i('DataManager => loadDb start.', i), null != this.mDataCache.get(i) ? [3, 2] : [4, this.loadDataAsync(i)];
                                            case 1:
                                                e.sent(), (e.label = 2);
                                            case 2:
                                                return t(), [2];
                                        }
                                    });
                                });
                            });
                        }),
                        (e.prototype.setDataFile = function (e, t) {
                            if (!t) return !1;
                            this.mMapDataFile.put(e.valueOf(), t);
                        }),
                        (e.prototype.getDataFile = function (e) {
                            return this.mMapDataFile.get(e);
                        }),
                        (e.prototype.loadData = function (e, t) {
                            this.setDataFile(e, t);
                        }),
                        (e.prototype.getData = function (e) {
                            var t = this.mDataCache.get(e);
                            if (!t) throw new Error('Database ' + e + ' not loaded!');
                            return t;
                        }),
                        (e.prototype.loadDataAsync = function (c, l, u) {
                            return __awaiter(this, void 0, void 0, function () {
                                var t, i, o, n, a, r, s;
                                return __generator(this, function (e) {
                                    switch (e.label) {
                                        case 0:
                                            return (t = this.mDataCache.get(c)) ? [3, 2] : [4, this._getDataAsync(c, this.getDataFile(c))];
                                        case 1:
                                            if (((t = e.sent()), c == d.eDB_LanguageSong)) for (i = t.getAllDB(), o = i.length, n = 0; n < o; n++) (a = i[n]), (r = a[1]), (s = a[2]), g.default.gIns().setLanguage(r, s);
                                            else if (c == d.eDB_Copyright) for (i = t.getAllDB(), o = i.length, n = 0; n < o; n++) (a = i[n]), (r = a[0]), (s = a[1]), C.default.getInstance().setCopyrightData(parseInt(r), s);
                                            else this.mDataCache.put(c, t);
                                            e.label = 2;
                                        case 2:
                                            return l && l.call(u), [2];
                                    }
                                });
                            });
                        }),
                        (e.prototype._getDataAsync = function (a, r) {
                            return __awaiter(this, void 0, Promise, function () {
                                var t = this;
                                return __generator(this, function (e) {
                                    return [
                                        2,
                                        new Promise(function (n, e) {
                                            return __awaiter(t, void 0, void 0, function () {
                                                var t, i, o;
                                                return __generator(this, function (e) {
                                                    switch (((t = new s.default()), (i = !0), (o = 0), a)) {
                                                        case d.eDB_Level:
                                                            t = new c.default();
                                                            break;
                                                        case d.eDB_LevelReward:
                                                            t = new l.LevelRewardData();
                                                            break;
                                                        case d.eDB_MusicJson:
                                                            t = new u.MusicJsonData();
                                                            break;
                                                        case d.eDB_Lv:
                                                            t = new p.LvData();
                                                            break;
                                                        case d.eDB_Life:
                                                            t = new B.LifeData();
                                                            break;
                                                        case d.eDB_Exp:
                                                            t = new h.default();
                                                            break;
                                                        case d.eDB_gold:
                                                            t = new f.GoldData();
                                                            break;
                                                        case d.eDB_LanguageSong:
                                                            (i = !(o = 1)), (t = new m.default());
                                                            break;
                                                        case d.eDB_FragmentBox:
                                                            (t = new I.FragmentBox()), (i = !(o = 1));
                                                            break;
                                                        case d.eDB_Lottery:
                                                            (t = new P.LotteryData()), (i = !(o = 1));
                                                            break;
                                                        case d.eDB_MusicKey:
                                                            (o = 1), (t = new _.MusicKeyData());
                                                            break;
                                                        case d.eDB_LevelConsume:
                                                            (t = new E.LevelConsumeData()), (o = 1);
                                                            break;
                                                        case d.eDB_GameItems:
                                                            (t = new N.GameItemsDatas()), (o = 1);
                                                            break;
                                                        case d.eDB_Copyright:
                                                            (i = !1), (t = new y.CopyrightData());
                                                            break;
                                                        case d.eDB_LoginReward:
                                                            (t = new S.LoginReward()), (i = !1);
                                                            break;
                                                        case d.eDB_SongBox:
                                                            (t = new v.SongBox()), (i = !1);
                                                            break;
                                                        case d.eDB_InviteAward:
                                                            (t = new T.InviteAward()), (i = !1);
                                                            break;
                                                        case d.eDB_Vip:
                                                            t = new k.VipData();
                                                            break;
                                                        case d.eDB_CompetitionBasic:
                                                            t = new M.CompetitionBasicData();
                                                            break;
                                                        case d.eDB_CompetitionMusic:
                                                            t = new L.CompetitionMusicData();
                                                            break;
                                                        case d.eDB_CompetitionReward:
                                                            t = new b.CompetitionRewardData();
                                                            break;
                                                        case d.eDB_CompetitionSettlement:
                                                            t = new R.CompetitionSettlementData();
                                                            break;
                                                        case d.eDB_Shop:
                                                            t = new D.ShopData();
                                                            break;
                                                        case d.eDB_PlayerTask:
                                                            t = new w.PlayerTaskData();
                                                            break;
                                                        case d.eDB_RankSet:
                                                            t = new G.RankSetData();
                                                            break;
                                                        case d.eDB_FightRule:
                                                            t = new O.FightRuleData();
                                                            break;
                                                        case d.eDB_RobotFight:
                                                            t = new U.RobotFightData();
                                                            break;
                                                        case d.eDB_HardRobot:
                                                            t = new U.HardRobotData();
                                                            break;
                                                        case d.eDB_SkinPiece:
                                                            t = new F.SkinPieceData();
                                                            break;
                                                        case d.eDB_Addition:
                                                            t = new H.AdditionData();
                                                            break;
                                                        case d.eDB_Effect:
                                                            t = new x.EffectData();
                                                            break;
                                                        case d.eDB_HolidayTask:
                                                            t = new V.HolidayTaskData();
                                                    }
                                                    return (
                                                        t &&
                                                            t.open(r, i, o, function (e) {
                                                                n(t);
                                                            }),
                                                        [2]
                                                    );
                                                });
                                            });
                                        }),
                                    ];
                                });
                            });
                        }),
                        (e.prototype.getDBRow = function (e, t) {
                            var i = this.getData(e);
                            if (null != i)
                                switch (e) {
                                    case d.eDB_Level:
                                    case d.eDB_LevelReward:
                                        return i.findLevel(t);
                                    case d.eDB_MusicJson:
                                        return i.findMusic(t);
                                    case d.eDB_Lv:
                                        return i.findLv(t);
                                    case d.eDB_Exp:
                                        return i.findExpByLevel(t);
                                    case d.eDB_gold:
                                        return i.findGoldByLevel(t);
                                    case d.eDB_LanguageSong:
                                        return i.findLanguage(t);
                                    case d.eDB_MusicKey:
                                        return i.findMusicByMid(t);
                                    case d.eDB_Copyright:
                                        return i.findMid(t);
                                    case d.eDB_LoginReward:
                                        return i.findLoginRewardById(t);
                                    case d.eDB_SongBox:
                                        return i.findSongBoxById(t);
                                    case d.eDB_FragmentBox:
                                        return i.findFragmentBoxById(t);
                                    case d.eDB_InviteAward:
                                        return i.findInviteAwardById(t);
                                    case d.eDB_LevelConsume:
                                        return i.findMid(t);
                                    case d.eDB_Lottery:
                                        return i.findLotteryDataById(t);
                                    default:
                                        return i.findId(t);
                                }
                            return null;
                        }),
                        (e.prototype.getDBRowByBiany = function (e, t) {
                            var i = this.getData(e);
                            if (i)
                                switch (e) {
                                    case d.eDB_MusicJson:
                                        return i.findMusicBiany(t);
                                }
                            return null;
                        }),
                        (e.prototype.getDBRowByRowID = function (e, t) {
                            var i = this.getData(e);
                            if (i)
                                switch (e) {
                                    case d.eDB_MusicJson:
                                        return i.findMusicByRowID(t);
                                }
                            return null;
                        }),
                        (e.prototype.getDBRows = function (e, t) {
                            var i = this.getData(e);
                            if (i)
                                switch (e) {
                                    case d.eDB_LoginReward:
                                        return i.findLoginRewardsByNewCome(t);
                                    case d.eDB_Lottery:
                                        return i.findLotteryDataByNewCome(t);
                                    default:
                                        return i.getAllData();
                                }
                            return [];
                        }),
                        (e.sInstance = null),
                        e
                    );
                })();
                (i.default = K), cc._RF.pop();
            },
            {
                '../../base/Log': 'Log',
                '../../util/Dictionary': 'Dictionary',
                '../Logic/CopyrightManager': 'CopyrightManager',
                '../Logic/EventBus': 'EventBus',
                '../Logic/LangMgr': 'LangMgr',
                '../Logic/NotifyEvent': 'NotifyEvent',
                './CSV/AdditionData': 'AdditionData',
                './CSV/BaseCsvFile': 'BaseCsvFile',
                './CSV/CompetitionBasicData': 'CompetitionBasicData',
                './CSV/CompetitionMusicData': 'CompetitionMusicData',
                './CSV/CompetitionRewardData': 'CompetitionRewardData',
                './CSV/CompetitionSettlementData': 'CompetitionSettlementData',
                './CSV/CopyrightData': 'CopyrightData',
                './CSV/EffectData': 'EffectData',
                './CSV/ExpData': 'ExpData',
                './CSV/FightRuleData': 'FightRuleData',
                './CSV/FragmentBox': 'FragmentBox',
                './CSV/GameItemsData': 'GameItemsData',
                './CSV/GoldData': 'GoldData',
                './CSV/HolidayTaskData': 'HolidayTaskData',
                './CSV/InviteAward': 'InviteAward',
                './CSV/LanguageSongData': 'LanguageSongData',
                './CSV/LevelConsumeData': 'LevelConsumeData',
                './CSV/LevelData': 'LevelData',
                './CSV/LevelRewardData': 'LevelRewardData',
                './CSV/LifeData': 'LifeData',
                './CSV/LoginReward': 'LoginReward',
                './CSV/LotteryData': 'LotteryData',
                './CSV/LvData': 'LvData',
                './CSV/MusicJsonData': 'MusicJsonData',
                './CSV/MusicKeyData': 'MusicKeyData',
                './CSV/PlayerTaskData': 'PlayerTaskData',
                './CSV/RankSetData': 'RankSetData',
                './CSV/RobotFightData': 'RobotFightData',
                './CSV/ShopData': 'ShopData',
                './CSV/SkinPieceData': 'SkinPieceData',
                './CSV/SongBox': 'SongBox',
                './CSV/VipData': 'VipData',
            },
        ],
        DailyAttendanceItemPrefbScript: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'fb04bZGF2xHJb1Nv5AZmHT1', 'DailyAttendanceItemPrefbScript'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('../../daily/DailyAwardBens'),
                    c = e('../../Logic/GameItemsManager'),
                    l = e('../GameEntraScene/ImgCache'),
                    a = e('../../Logic/I18nManager'),
                    o = cc._decorator,
                    r = o.ccclass,
                    s = o.property,
                    u = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (
                                (e.dayNode = null),
                                (e.todayNode = null),
                                (e.luckDayNode = null),
                                (e.dayTxt = null),
                                (e.diamondSprite = null),
                                (e.diamondPieceSprite = null),
                                (e.mSinglePieceIcon = null),
                                (e.giftSprite = null),
                                (e.numberTxt = null),
                                (e.maskSprite = null),
                                (e.rightMarkSprite = null),
                                (e.mDoublePieceIcon1 = null),
                                (e.mDoublePieceIcon2 = null),
                                (e.mDoublePieceNode = null),
                                (e.mBean = null),
                                (e.mReceiveStat = !1),
                                (e.mSignDay = 0),
                                (e.mUIPostions = [
                                    {
                                        top: 16,
                                        left: 16,
                                    },
                                    {
                                        top: 16,
                                        left: 162,
                                    },
                                    {
                                        top: 16,
                                        left: 308,
                                    },
                                    {
                                        top: 16,
                                        left: 454,
                                    },
                                    {
                                        top: 186,
                                        left: 16,
                                    },
                                    {
                                        top: 186,
                                        left: 162,
                                    },
                                    {
                                        top: 186,
                                        left: 307,
                                    },
                                ]),
                                (e.mUIPostionsNew = [
                                    {
                                        top: 16,
                                        left: 16,
                                    },
                                    {
                                        top: 16,
                                        left: 162,
                                    },
                                    {
                                        top: 16,
                                        left: 307,
                                    },
                                    {
                                        top: 186,
                                        left: 16,
                                    },
                                    {
                                        top: 186,
                                        left: 162,
                                    },
                                    {
                                        top: 186,
                                        left: 308,
                                    },
                                    {
                                        top: 186,
                                        left: 454,
                                    },
                                ]),
                                (e.mShowTxtDay = ['第一天', '第二天', '第三天', '第四天', '第五天', '第六天', '第七天']),
                                (e.mShowTxtDayEn = ['Day 1', 'Day 2', 'Day 3', 'Day 4', 'Day 5', 'Day 6', 'Day 7']),
                                e
                            );
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.onLoad = function () {}),
                            (e.prototype.init = function (e, t, i, o, n) {
                                (this.mBean = e), (this.mDayNode = t), (this.mContainNode = i), (this.mReceiveStat = o), (this.mSignDay = n), this.initView();
                            }),
                            (e.prototype.updateDaySelectedView = function (e) {
                                (this.mReceiveStat = e), this.resetDayNodeView(), this.initSelectDayView();
                            }),
                            (e.prototype.resetDayNodeView = function () {
                                this.updateNodeStat(this.dayNode, !1), this.updateNodeStat(this.todayNode, !1), this.updateNodeStat(this.luckDayNode, !1), this.updateNodeStat(this.giftSprite, !1), this.updateNodeStat(this.maskSprite, !1), this.updateNodeStat(this.rightMarkSprite, !1);
                            }),
                            (e.prototype.resetView = function () {
                                this.resetDayNodeView(), this.updateNodeStat(this.diamondSprite, !1), this.updateNodeStat(this.diamondPieceSprite, !1), this.mSinglePieceIcon && this.updateNodeStat(this.mSinglePieceIcon.node, !1), this.updateNodeStat(this.giftSprite, !1);
                            }),
                            (e.prototype.isLuckDay = function (e) {
                                return (this.mBean.signType == n.AwardCfg.SIGN_TYPE_NEWBIE && 3 == e) || 7 == e;
                            }),
                            (e.prototype.updateNodeStat = function (e, t) {
                                e && (e.active = t);
                            }),
                            (e.prototype.initView = function () {
                                this.resetView(), this.updateDayNodeBase(), this.initContentView(), this.initSelectDayView();
                            }),
                            (e.prototype.initSelectDayView = function () {
                                var e = this.mBean.day;
                                this.isLuckDay(e) && (this.updateNodeStat(this.luckDayNode, !0), this.updateNodeStat(this.giftSprite, !0)), e > this.mSignDay ? this.updateNodeStat(this.dayNode, !0) : e == this.mSignDay && 1 == this.mReceiveStat ? (this.updateNodeStat(this.todayNode, !0), this.updateNodeStat(this.luckDayNode, !1), (this.numberTxt.node.color = cc.Color.BLACK.fromHEX('#FFFFFF'))) : (this.isLuckDay(e) ? (this.numberTxt.node.color = cc.Color.BLACK.fromHEX('#AD5FF8')) : (this.numberTxt.node.color = cc.Color.BLACK.fromHEX('#D3853B')), this.updateNodeStat(this.dayNode, !0), this.updateNodeStat(this.maskSprite, !0), this.updateNodeStat(this.rightMarkSprite, !0));
                            }),
                            (e.prototype.initContentView = function () {
                                var e = this.mBean.awardList;
                                if (1 == e.length)
                                    switch (e[0].awardType) {
                                        case c.GameItemType.TYPE_DIAMONDS:
                                            this.updateNodeStat(this.diamondSprite, !0), this.initContextText(e);
                                            break;
                                        case c.GameItemType.TYPE_PIECE:
                                            this.setSkinPieceIcon(this.mSinglePieceIcon), this.setSkinPieceText();
                                            break;
                                        case c.GameItemType.TYPE_SKIN:
                                            this.updateNodeStat(this.numberTxt.node, !1), this.mSinglePieceIcon && this.updateNodeStat(this.mSinglePieceIcon.node, !0);
                                    }
                                else 2 == e.length && (this.isLuckDay(this.mBean.day) ? this.updateNodeStat(this.giftSprite, !0) : (this.updateNodeStat(this.diamondPieceSprite, !0), this.initContextText(e)));
                                this.initLuckDayView();
                            }),
                            (e.prototype.setSkinPieceText = function () {
                                var e = '',
                                    t = this.mBean.awardList[0].skinPiece;
                                if (1 == t.length) {
                                    var i = t[0].skinPieceCount;
                                    e = e + this.mBean.awardList[0].name + 'x' + i;
                                } else {
                                    i = parseInt(t[0].skinPieceCount) + parseInt(t[0].skinPieceCount);
                                    e = e + this.mBean.awardList[0].name + 'x' + i;
                                }
                                this.numberTxt.string = e;
                            }),
                            (e.prototype.setSkinPieceIcon = function (e) {
                                if (e) {
                                    var t = this.mBean.awardList[0].skinPiece;
                                    if (1 == t.length) {
                                        var i = t[0].skinPieceID,
                                            o = c.GameItemsManager.getIns().getSmallPicByItemId(i);
                                        l.default.get2(o, this.mSinglePieceIcon), this.updateNodeStat(this.mSinglePieceIcon.node, !0);
                                    } else {
                                        this.updateNodeStat(this.mDoublePieceNode, !0);
                                        var n = t[0].skinPieceID,
                                            a = c.GameItemsManager.getIns().getSmallPicByItemId(n);
                                        l.default.get2(a, this.mDoublePieceIcon1);
                                        var r = t[1].skinPieceID,
                                            s = c.GameItemsManager.getIns().getSmallPicByItemId(r);
                                        l.default.get2(s, this.mDoublePieceIcon2);
                                    }
                                }
                            }),
                            (e.prototype.initContextText = function (e) {
                                for (var t = '', i = 0; i < e.length; i++) (t = t + e[i].name + 'x' + e[i].counter), i != e.length - 1 && (t += '/');
                                this.numberTxt.string = t;
                            }),
                            (e.prototype.initLuckDayView = function () {
                                7 == this.mBean.day && ((this.numberTxt.node.color = cc.Color.BLACK.fromHEX('#AD5FF8')), (this.numberTxt.string = a.default.getInstance().getLanguageByKey('label_text.dia_gift')), this.updateNodeStat(this.giftSprite, !0), this.updateNodeStat(this.diamondPieceSprite, !1), this.updateNodeStat(this.diamondSprite, !1), this.mSinglePieceIcon && this.updateNodeStat(this.mSinglePieceIcon.node, !1));
                            }),
                            (e.prototype.updateDayNodeBase = function () {
                                var e = this.mBean.signType == n.AwardCfg.SIGN_TYPE_NEWBIE ? this.mUIPostionsNew : this.mUIPostions,
                                    t = this.mBean.day - 1;
                                a.default.getInstance().isEnglish() ? (this.dayTxt.string = this.mShowTxtDayEn[t]) : (this.dayTxt.string = this.mShowTxtDay[t]);
                                var i = e[t].left - this.mContainNode.width / 2 + this.mDayNode.width / 2,
                                    o = this.mContainNode.height - e[t].top - this.mContainNode.height / 2 - this.mDayNode.height / 2;
                                this.mDayNode.setPosition(i, o);
                            }),
                            __decorate([s(cc.Node)], e.prototype, 'dayNode', void 0),
                            __decorate([s(cc.Node)], e.prototype, 'todayNode', void 0),
                            __decorate([s(cc.Node)], e.prototype, 'luckDayNode', void 0),
                            __decorate([s(cc.Label)], e.prototype, 'dayTxt', void 0),
                            __decorate([s(cc.Node)], e.prototype, 'diamondSprite', void 0),
                            __decorate([s(cc.Node)], e.prototype, 'diamondPieceSprite', void 0),
                            __decorate([s(cc.Sprite)], e.prototype, 'mSinglePieceIcon', void 0),
                            __decorate([s(cc.Node)], e.prototype, 'giftSprite', void 0),
                            __decorate([s(cc.Label)], e.prototype, 'numberTxt', void 0),
                            __decorate([s(cc.Node)], e.prototype, 'maskSprite', void 0),
                            __decorate([s(cc.Node)], e.prototype, 'rightMarkSprite', void 0),
                            __decorate([s(cc.Sprite)], e.prototype, 'mDoublePieceIcon1', void 0),
                            __decorate([s(cc.Sprite)], e.prototype, 'mDoublePieceIcon2', void 0),
                            __decorate([s(cc.Node)], e.prototype, 'mDoublePieceNode', void 0),
                            (e = __decorate([r], e))
                        );
                    })(cc.Component);
                (i.default = u), cc._RF.pop();
            },
            {
                '../../Logic/GameItemsManager': 'GameItemsManager',
                '../../Logic/I18nManager': 'I18nManager',
                '../../daily/DailyAwardBens': 'DailyAwardBens',
                '../GameEntraScene/ImgCache': 'ImgCache',
            },
        ],
        DailyAttendancePrefbScript: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'e7797riUFBMpIbxYsuGlhBG', 'DailyAttendancePrefbScript'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../daily/DailyAwardBens'),
                    n = e('../../daily/DAwardMgr'),
                    a = e('../GameEntraScene/BasicTouchEvent'),
                    r = e('./DailyAttendanceItemPrefbScript'),
                    s = e('../../daily/AwardInfoFactory'),
                    c = e('../../awardcontroller/AwardController'),
                    l = e('../../Logic/GameItemsManager'),
                    u = e('../../../util/Dictionary'),
                    d = e('../../../../modules/MGAdv/scripts/Logic/MGAdvEntrance'),
                    p = e('../../../../modules/MGAdv/scripts/Logic/MGAdvDefine'),
                    h = e('../../../base/Log'),
                    f = e('../GameEntraScene/PrefabMgr'),
                    m = e('../GameEntraScene/ToastPrefab'),
                    g = e('../../../../scripts/infoc/m_p2_Uaction'),
                    _ = e('../../../util/PU'),
                    y = e('../../keypad/KeypadNavigator'),
                    S = cc._decorator,
                    v = S.ccclass,
                    I = S.property,
                    T = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mCloseSkip = null), (e.mMainPanel = null), (e.mHeader = null), (e.mReceiveAwardBtn = null), (e.mReceiveAwardBtnTxtLable = null), (e.mContentContainer = null), (e.mBannerContainer = null), (e.mSkinBannerContainer = null), (e.dayItemPreF = null), (e.dayBigItemPreF = null), (e.toggleRV = null), (e.doubleBtn = null), (e.closedBanner = !0), (e.mManager = null), (e.mDailySignInfo = null), (e.mDialogManager = null), (e.mCurrentDayNodeScript = null), (e.mCurrentDayNode = null), (e.mOnReceiveClickEvent = null), (e.mReportPage = 0), (e.mSkinChipDic = new u.Dictionary()), (e.mDailyAwardContents = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.setCloseCallback = function (e) {
                                this.closeCallback = e;
                            }),
                            (e.prototype.setShowSkinStoreCallbak = function (e) {
                                this.showSkinStoreCallbak = e;
                            }),
                            (e.prototype.setShowSkinSplashCallbak = function (e) {
                                this.showSkinSplashCallbak = e;
                            }),
                            (e.prototype.setPopupDlgManager = function (e) {
                                this.mDialogManager = e;
                            }),
                            (e.prototype.gotoSkinStore = function (e) {
                                this.showSkinStoreCallbak && this.showSkinStoreCallbak(e);
                            }),
                            (e.prototype.gotoSkinSplash = function (e) {
                                this.showSkinSplashCallbak && this.showSkinSplashCallbak(e);
                            }),
                            (e.prototype.onLoad = function () {
                                var t = this;
                                this.initEvents(),
                                    (this.mManager = n.DAwardMgr.getIns()),
                                    this.mManager.updateShowDailyPopupDlgTime(),
                                    this.mManager.getDailySignInfoAsyn(function (e) {
                                        n.DAwardMgr.log('getDailySignInfoAsyn result:'), n.DAwardMgr.log(e), (t.mDailySignInfo = e), t.initView();
                                    }),
                                    this.adaptorUI(),
                                    y.default.getInstance().pushDialog(this.node);
                            }),
                            (e.prototype.onDestroy = function () {
                                y.default.getInstance().popDialog(this.node);
                            }),
                            (e.prototype.adaptorUI = function () {}),
                            (e.prototype.initView = function () {
                                this.initDayContentView(), this.initBannerView(), this.initButton();
                            }),
                            (e.prototype.initDayContentView = function () {
                                for (var e = s.AwardInfoFactory.getInstance().generateUIData(this.mDailySignInfo.signType), t = 0; t < 7; t++) {
                                    var i = e[t],
                                        o = cc.instantiate(i.bigStyle ? this.dayBigItemPreF : this.dayItemPreF),
                                        n = o.getComponent(r.default);
                                    this.mContentContainer.addChild(o), (o.name = 'day' + (t + 1)), n.init(i, o, this.mContentContainer, this.mDailySignInfo.receiveStat, this.mDailySignInfo.signDay), t == this.mDailySignInfo.signDay - 1 && ((this.mCurrentDayNodeScript = n), (this.mCurrentDayNode = o));
                                }
                            }),
                            (e.prototype.initBannerView = function () {
                                (this.mBannerContainer.active = !1), (this.mSkinBannerContainer.active = !1), this.isShowSkinBanner() ? (this.mSkinBannerContainer.active = !0) : (this.mBannerContainer.active = !0);
                            }),
                            (e.prototype.initButton = function () {
                                0 == this.mDailySignInfo.receiveStat ? ((this.mReceiveAwardBtn.node.active = !1), y.default.getInstance().refreshPage(this.node), this.uninitReceiveClickEvent()) : this.initReceiveClickEvent();
                            }),
                            (e.prototype.isShowSkinBanner = function () {
                                return !(this.mDailySignInfo.signType != o.AwardCfg.SIGN_TYPE_NEWBIE || !(this.mDailySignInfo.signDay < 3 || (this.mDailySignInfo.receiveStat && 3 == this.mDailySignInfo.signDay)));
                            }),
                            (e.prototype.updateView = function () {
                                this.initButton(), this.mCurrentDayNodeScript.updateDaySelectedView(this.mDailySignInfo.receiveStat);
                            }),
                            (e.prototype.start = function () {}),
                            (e.prototype.initEvents = function () {
                                var e = this,
                                    t = new a.default(function () {
                                        e.onCloseClick();
                                    });
                                this.mCloseSkip.node.on(cc.Node.EventType.TOUCH_END, t.click, t), this.node.on(cc.Node.EventType.TOUCH_START, function () {}, this);
                                var i = this.toggleRV;
                                this.toggleRV.node.on(
                                    cc.Node.EventType.TOUCH_END,
                                    function () {
                                        i.isChecked
                                            ? e.scheduleOnce(function () {
                                                  i.uncheck(), (this.mReceiveAwardBtn.node.active = !1), g.default.report(0, g.default.ACTION_CLICK_2_UNCHECK);
                                              }, 0)
                                            : e.scheduleOnce(function () {
                                                  i.check(), (this.mReceiveAwardBtn.node.active = !0), g.default.report(0, g.default.ACTION_CLICK_2_CHECK);
                                              }, 0);
                                    },
                                    this,
                                );
                            }),
                            (e.prototype.initReceiveClickEvent = function () {
                                this.mOnReceiveClickEvent = new a.default(this.onReceiveAwardClick.bind(this));
                                var e = this.mOnReceiveClickEvent;
                                this.mReceiveAwardBtn.node.on(cc.Node.EventType.TOUCH_END, e.click, e), this.mCurrentDayNode && this.mCurrentDayNode.on(cc.Node.EventType.TOUCH_END, e.click, e);
                            }),
                            (e.prototype.uninitReceiveClickEvent = function () {
                                if (this.mOnReceiveClickEvent) {
                                    var e = this.mOnReceiveClickEvent;
                                    this.mCurrentDayNode && this.mCurrentDayNode.off(cc.Node.EventType.TOUCH_END, e.click, e), this.mReceiveAwardBtn.node.off(cc.Node.EventType.TOUCH_END, e.click, e);
                                }
                            }),
                            (e.prototype.onCloseClick = function () {
                                this.closeCallback && this.closeCallback();
                            }),
                            (e.prototype.onReceiveAwardClick = function () {
                                this.toggleRV.isChecked ? this.onReceiveAwardClick4Double() : this.onReceiveAwardClick4Normal();
                            }),
                            (e.prototype.onReceiveAwardClick4Double = function () {
                                var t = this;
                                0 != this.mDailySignInfo.receiveStat &&
                                    ((this.mDailySignInfo.receiveStat = !1),
                                    this.mManager.receiveAward(function (e) {
                                        t.updateView(), (t.mDailyAwardContents = t.rewardInfo2Content(t.mDailySignInfo.awardList)), c.AwardController.giveAwardInfo(t.mDailyAwardContents), _.default.isCM() ? t.showAdvForDoubleAwards(0) : t.showAdvForDoubleAwards(p.ADScene.SOURCE_DAILY_ATTENDANCE_FRONT);
                                    }));
                            }),
                            (e.prototype.onReceiveAwardClick4Normal = function () {
                                var a = this;
                                0 != this.mDailySignInfo.receiveStat &&
                                    ((this.mDailySignInfo.receiveStat = !1),
                                    this.mManager.receiveAward(function (e) {
                                        if ((a.updateView(), a.mDialogManager)) {
                                            var i = new c.AwardResultInfo(),
                                                o = a.mDailySignInfo.awardList;
                                            if (0 < o.length) {
                                                i.setIsShowText(!1),
                                                    i.setIsNeedGiveAwardInfo(!0).steSource(c.AwardResultInfo.SOURCE_DAILY_ATTENDANCE),
                                                    c.AwardController.shouldDoubleAwards(o)
                                                        ? (i.setRichOkBtn(' ', '/static_res/button_daily_checkin_award_normal_en', '/static_res/button_daily_checkin_award_pressed_en', function () {
                                                              c.AwardController.getIns().dismissAwardResultPage(i), _.default.isCM() ? a.showAdvForDoubleAwards(0) : a.showAdvForDoubleAwards(p.ADScene.DAILY_ATTENDANCE_CHECKIN);
                                                          }),
                                                          i.enableSkipLabel('', function () {
                                                              c.AwardController.getIns().dismissAwardResultPage(i);
                                                          }))
                                                        : i.setOkBtn('Ok', function () {
                                                              c.AwardController.getIns().dismissAwardResultPage(i);
                                                          }),
                                                    i.setCloseParentCallback(function () {});
                                                for (
                                                    var t = function (e) {
                                                            var t = o[e];
                                                            t.awardType == l.GameItemType.TYPE_PIECE
                                                                ? t.skinPiece.forEach(function (e) {
                                                                      i.addAwardContent(t.awardType, parseInt(e.skinPieceCount), e.skinPieceID);
                                                                  })
                                                                : i.addAwardContent(t.awardType, t.counter, t.itemID);
                                                        },
                                                        n = 0;
                                                    n < o.length;
                                                    n++
                                                )
                                                    t(n);
                                                c.AwardController.getIns().showCommonAwardResultPage(i), (a.mDailyAwardContents = i.getAwardContentList());
                                            }
                                        }
                                    }));
                            }),
                            (e.prototype.rewardInfo2Content = function (e) {
                                if (!e) return null;
                                for (
                                    var t,
                                        o = [],
                                        i = function (i) {
                                            i.awardType == l.GameItemType.TYPE_PIECE
                                                ? i.skinPiece.forEach(function (e) {
                                                      var t = new c.AwardContent(i.awardType, parseInt(e.skinPieceCount), e.skinPieceID);
                                                      o.push(t);
                                                  })
                                                : ((t = new c.AwardContent(i.awardType, i.counter, i.itemID)), o.push(t));
                                        },
                                        n = 0,
                                        a = e;
                                    n < a.length;
                                    n++
                                ) {
                                    i(a[n]);
                                }
                                return o;
                            }),
                            (e.prototype.showAdvForDoubleAwards = function (e) {
                                var i = this;
                                d.MGAdv.show(e, p.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK, function (e) {
                                    switch (e) {
                                        case p.ADStat.NOT_NETWORK:
                                            i.showToastTips('No network available', !1);
                                            break;
                                        case p.ADStat.SHOW_SUCCESS_CLOSE:
                                            if (i.mDailyAwardContents) {
                                                h.default.i('DailyAttendancePrefbScript', 'video adv shown, give awards.');
                                                var t = c.AwardController.filterAwardsForDouble(i.mDailyAwardContents);
                                                c.AwardController.giveAwardInfo(t), i.showToastTips(c.AwardController.getAwardsToastTip(t), !1), (i.mDailyAwardContents = null);
                                            } else h.default.i('DailyAttendancePrefbScript', 'video adv shown, but awards is invalidate');
                                            break;
                                        case p.ADStat.SHOW_NOT_ENED_CLOSE:
                                            break;
                                        case p.ADStat.SHOW_GET_AD_FAILED:
                                            i.showToastTips('No video ads available', !1);
                                    }
                                });
                            }),
                            (e.prototype.showToastTips = function (o, n, a) {
                                var r = this;
                                f.default.load('prefab/ToastPrefab', function (e, t) {
                                    if (t) {
                                        var i = t.getComponent(m.default);
                                        i.showTips(o, function () {
                                            t.destroy(), a && a();
                                        }),
                                            i.setLong(n),
                                            r.node.addChild(t);
                                    }
                                });
                            }),
                            (e.prototype.moveMainNode = function () {}),
                            __decorate([I(cc.Label)], e.prototype, 'mCloseSkip', void 0),
                            __decorate([I(cc.Node)], e.prototype, 'mMainPanel', void 0),
                            __decorate([I(cc.Node)], e.prototype, 'mHeader', void 0),
                            __decorate([I(cc.Button)], e.prototype, 'mReceiveAwardBtn', void 0),
                            __decorate([I(cc.Label)], e.prototype, 'mReceiveAwardBtnTxtLable', void 0),
                            __decorate([I(cc.Node)], e.prototype, 'mContentContainer', void 0),
                            __decorate([I(cc.Node)], e.prototype, 'mBannerContainer', void 0),
                            __decorate([I(cc.Node)], e.prototype, 'mSkinBannerContainer', void 0),
                            __decorate([I(cc.Prefab)], e.prototype, 'dayItemPreF', void 0),
                            __decorate([I(cc.Prefab)], e.prototype, 'dayBigItemPreF', void 0),
                            __decorate([I(cc.Toggle)], e.prototype, 'toggleRV', void 0),
                            __decorate([I(cc.Node)], e.prototype, 'doubleBtn', void 0),
                            (e = __decorate([v], e))
                        );
                    })(cc.Component);
                (i.default = T), cc._RF.pop();
            },
            {
                '../../../../modules/MGAdv/scripts/Logic/MGAdvDefine': 'MGAdvDefine',
                '../../../../modules/MGAdv/scripts/Logic/MGAdvEntrance': 'MGAdvEntrance',
                '../../../../scripts/infoc/m_p2_Uaction': 'm_p2_Uaction',
                '../../../base/Log': 'Log',
                '../../../util/Dictionary': 'Dictionary',
                '../../../util/PU': 'PU',
                '../../Logic/GameItemsManager': 'GameItemsManager',
                '../../awardcontroller/AwardController': 'AwardController',
                '../../daily/AwardInfoFactory': 'AwardInfoFactory',
                '../../daily/DAwardMgr': 'DAwardMgr',
                '../../daily/DailyAwardBens': 'DailyAwardBens',
                '../../keypad/KeypadNavigator': 'KeypadNavigator',
                '../GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
                '../GameEntraScene/PrefabMgr': 'PrefabMgr',
                '../GameEntraScene/ToastPrefab': 'ToastPrefab',
                './DailyAttendanceItemPrefbScript': 'DailyAttendanceItemPrefbScript',
            },
        ],
        DailyAwardBens: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '8eedbQTR2NFiZ6ZXDABn4Qe', 'DailyAwardBens'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('../Logic/GameItemsManager'),
                    r = e('../../util/StringUtil'),
                    o = e('../Logic/I18nManager'),
                    n = (function () {
                        function e() {}
                        return (e.SIGN_TYPE_NONE = 'sign_type_none'), (e.SIGN_TYPE_NORMAL = 'sign_type_normal'), (e.SIGN_TYPE_NEWBIE = 'sign_type_newbie'), (e.SIGN_STAT_NET_ERROR = 'sign_stat_net_error'), (e.SIGN_STAT_OK = 'sign_stat_ok'), e;
                    })();
                i.AwardCfg = n;
                var s = function (e, t, i, o, n) {
                    (this.stat = e), (this.awardList = n), (this.signType = t), (this.receiveStat = i), (this.signDay = o);
                };
                i.DailySignInfo = s;
                var c = function (e, t, i, o) {
                    (this.day = e), (this.bigStyle = t), (this.awardList = i), (this.signType = o);
                };
                i.DailyDayUIBean = c;
                var l = (function () {
                    function n() {
                        (this.itemID = ''), (this.awardType = -1), (this.name = ''), (this.counter = 0), (this.skinName = ''), (this.skinPiece = null);
                    }
                    return (
                        (n.createDiamondInfo = function (e) {
                            var t = new n();
                            return (t.awardType = a.GameItemType.TYPE_DIAMONDS), (t.name = o.default.getInstance().getLanguageByKey('label_text.diamond')), (t.itemID = '1-1-0'), (t.counter = e), t;
                        }),
                        (n.createPieceInfo = function (e) {
                            if (!r.StringUtil.isEmpty(e)) {
                                var t = e.split('$'),
                                    i = new Array();
                                t.forEach(function (e) {
                                    var t = {
                                        skinPieceID: e.split('%')[0],
                                        skinPieceCount: e.split('%')[1],
                                    };
                                    i.push(t);
                                });
                                var o = new n();
                                return (o.awardType = a.GameItemType.TYPE_PIECE), (o.name = '皮肤碎片'), (o.skinPiece = i), o;
                            }
                        }),
                        (n.createSkinInfo = function () {
                            var e = new n();
                            return (e.itemID = '5-5-0'), (e.counter = 1), (e.awardType = a.GameItemType.TYPE_SKIN), e;
                        }),
                        (n.prototype.toString = function () {
                            return 'awardType: ' + this.awardType + ' name: ' + this.name + ' counter: ' + this.counter + ' skinName: ' + this.skinName;
                        }),
                        n
                    );
                })();
                (i.AwardInfo = l), cc._RF.pop();
            },
            {
                '../../util/StringUtil': 'StringUtil',
                '../Logic/GameItemsManager': 'GameItemsManager',
                '../Logic/I18nManager': 'I18nManager',
            },
        ],
        DailyAwardGenerator: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'facd4nE/6BBOqQsWHjAlJMx', 'DailyAwardGenerator'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../Network/Protocol/StorageUtil'),
                    n = e('../../config/LSKey'),
                    r = e('../../util/TimeUtil'),
                    s = e('./DailyAwardBens'),
                    c = e('./AwardInfoFactory'),
                    l = e('./DAwardMgr'),
                    u = e('../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    a = (function () {
                        function a() {
                            (this.mSignInTime = 0), (this.mSignInLastDate = ''), (this.MAX_DAYS = 7), (this.DIFF_CLEAR_MILLISECONDS = 216e5), (this.ONE_DAY_MILLISECONDS = 864e5), (this.mCurrentSignType = s.AwardCfg.SIGN_TYPE_NORMAL), (this.mCurrentReceiveStat = !1), (this.mCurrentNowStr = ''), (this.mCachedDailySignInfo = null), this.init();
                        }
                        return (
                            (a.prototype.init = function () {
                                (this.mSignInLastDate = o.default.read(n.default.SIGN_IN_LAST_DATE, '1970_01_01')), null == this.mSignInLastDate && (this.mSignInLastDate = '1970_01_01');
                                var e = o.default.read(n.default.SIGN_IN_TIMES);
                                e && 0 < e.length && (this.mSignInTime = parseInt(e));
                            }),
                            (a.prototype.getSignInTime = function () {
                                return this.mSignInTime;
                            }),
                            (a.prototype.getTodayDateStr = function () {
                                var e = new Date();
                                return e.setTime(e.getTime() - this.DIFF_CLEAR_MILLISECONDS), r.default.formatDate(e.getTime());
                            }),
                            (a.prototype.getReceiveStat = function () {
                                return this.mCurrentReceiveStat;
                            }),
                            (a.prototype.getSignType = function () {
                                return this.getCurrentSignInTime() >= this.MAX_DAYS ? s.AwardCfg.SIGN_TYPE_NORMAL : s.AwardCfg.SIGN_TYPE_NEWBIE;
                            }),
                            (a.prototype.getCurrentSignInTime = function () {
                                return 0 == this.mCurrentReceiveStat ? this.mSignInTime - 1 : this.mSignInTime;
                            }),
                            (a.prototype.getCurrentSignDay = function () {
                                return (this.getCurrentSignInTime() % this.MAX_DAYS) + 1;
                            }),
                            (a.prototype.saveData = function () {
                                o.default.save(n.default.SIGN_IN_TIMES, this.mSignInTime.toString()), o.default.save(n.default.SIGN_IN_LAST_DATE, this.mSignInLastDate);
                            }),
                            (a.prototype.doReceiveAward = function (e) {
                                l.DAwardMgr.log(a.TAG + 'doReceiveAward->getServerTime result: ' + this.mCurrentReceiveStat), this.mCurrentReceiveStat && (this.mSignInTime++, (this.mSignInLastDate = this.mCurrentNowStr), this.saveData(), (this.mCurrentReceiveStat = !1), this.refreshCachedSignInfo()), e(this.mCachedDailySignInfo);
                            }),
                            (a.prototype.refreshCachedSignInfo = function () {
                                this.mCachedDailySignInfo && (this.mCachedDailySignInfo.receiveStat = this.getReceiveStat());
                            }),
                            (a.prototype.generateDailySignInfo = function (o, e) {
                                var n = this;
                                if (0 == e && null != this.mCachedDailySignInfo) return l.DAwardMgr.log(a.TAG + 'use mCachedDailySignInfo :'), l.DAwardMgr.log(this.mCachedDailySignInfo), void o(this.mCachedDailySignInfo);
                                u.MGUser.getCurrentServerRealTime({
                                    complete: function (e, t) {
                                        l.DAwardMgr.log(a.TAG + 'doGenerate->getServerTime result: ' + e + ', timestamp: ' + t), (n.mCurrentReceiveStat = !1), e && n.refreshStat(t / 1e3);
                                        var i = new s.DailySignInfo(e ? s.AwardCfg.SIGN_STAT_OK : s.AwardCfg.SIGN_STAT_NET_ERROR, n.getSignType(), n.getReceiveStat(), n.getCurrentSignDay(), n.getReceiveStat() ? n.getCurrentAwardInfo() : null);
                                        e && (n.mCachedDailySignInfo = i), o(i);
                                    },
                                });
                            }),
                            (a.prototype.getCurrentAwardInfo = function () {
                                var e = this.getCurrentSignDay();
                                return c.AwardInfoFactory.getInstance().generate(e, this.getSignType());
                            }),
                            (a.prototype.refreshStat = function (e) {
                                var t = new Date(1e3 * e - this.DIFF_CLEAR_MILLISECONDS);
                                (this.mCurrentNowStr = r.default.formatDate(t.getTime())), (this.mCurrentReceiveStat = this.mCurrentNowStr > this.mSignInLastDate), l.DAwardMgr.log(a.TAG + 'refreshStat : ' + this.mCurrentReceiveStat + 'with now: ' + this.mCurrentNowStr + ' & lastSignInDate: ' + this.mSignInLastDate);
                            }),
                            (a.prototype.getTestTime = function (e) {
                                var t = new Date();
                                t.setTime(t.getTime() + 1 * this.ONE_DAY_MILLISECONDS), e(!0, t.getTime() / 1e3);
                            }),
                            (a.TAG = 'DailyAwardGenerator'),
                            a
                        );
                    })();
                (i.DailyAwardGenerator = a), cc._RF.pop();
            },
            {
                '../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../config/LSKey': 'LSKey',
                '../../util/TimeUtil': 'TimeUtil',
                '../Network/Protocol/StorageUtil': 'StorageUtil',
                './AwardInfoFactory': 'AwardInfoFactory',
                './DAwardMgr': 'DAwardMgr',
                './DailyAwardBens': 'DailyAwardBens',
            },
        ],
        DataEntryWorker: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '8bcd73lgjpL5pAOD7bgdhp0', 'DataEntryWorker'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../gamescene/workers/WorkerBase'),
                    n = e('../../Logic/LotteryDataManager'),
                    p = e('../LotteryVM'),
                    h = e('../LotteryEnum'),
                    a = e('../../Logic/GameItemsManager'),
                    r = (function (t) {
                        function e() {
                            var e = t.call(this, 'DataEntryWorker') || this;
                            return (e.lotteryHandler = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.init = function (e, t) {
                                var i = t,
                                    o = this.getDataList(i),
                                    n = this.getGameItems(),
                                    a = this.constructVMs(o, n);
                                (this.lotteryHandler = e), this.lotteryHandler.setLotteryVMList(a);
                            }),
                            (e.prototype.onStart = function () {
                                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                                try {
                                    if (e && e.length <= 0) return;
                                    var i = e[0],
                                        o = e[1];
                                    this.init(i, o);
                                } catch (e) {
                                    console.log('--- DataEntryWorker onStart err:---', e);
                                }
                            }),
                            (e.prototype.onStop = function () {
                                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                                try {
                                    return void this.reset();
                                } catch (e) {
                                    console.log('--- DataEntryWorker onStop err:---', e);
                                }
                            }),
                            (e.prototype.onStateChanged = function (e) {}),
                            (e.prototype.getDataList = function (e) {
                                void 0 === e && (e = h.UserEnum.PASS_COMING);
                                var t = [];
                                return e === h.UserEnum.NEW_COMING ? (t = n.LotteryDataMgr.Ins().getLotteryDataVM(1)) : e === h.UserEnum.PASS_COMING && (t = n.LotteryDataMgr.Ins().getLotteryDataVM(0)), t;
                            }),
                            (e.prototype.getGameItems = function () {
                                return a.GameItemsManager.getIns().getAllItems();
                            }),
                            (e.prototype.constructVMs = function (e, t) {
                                for (var i = [], o = 0, n = e; o < n.length; o++)
                                    for (var a = n[o], r = 0, s = t; r < s.length; r++) {
                                        var c = s[r];
                                        if (1 == a.isSkinPiece) {
                                            (l = new p.LotteryVM()).setId(c.getItemId()), l.setChanceMin(a.chanceMin), l.setChanceMax(a.chanceMax), l.setCount(a.count), l.setIcon(c.getSmallPic()), l.setBigIcon(c.getPic()), l.setIsSkinPiece(a.isSkinPiece), i.push(l);
                                            break;
                                        }
                                        if (a.rewardType === c.getItemId()) {
                                            var l = new p.LotteryVM(),
                                                u = h.SKIN_TYPE.NONE;
                                            l.setId(c.getItemId()), l.setChanceMin(a.chanceMin), l.setChanceMax(a.chanceMax), l.setIcon(c.getSmallPic()), l.setBigIcon(c.getPic()), l.setCount(a.count), l.setIsSkinPiece(a.isSkinPiece);
                                            var d = this.getSkinLimit(c.getItemId());
                                            void 0 !== d && (u = d ? h.SKIN_TYPE.LIMIT : h.SKIN_TYPE.FOREVER), l.setSkinType(u), i.push(l);
                                        }
                                    }
                                return i;
                            }),
                            (e.prototype.getSkinLimit = function (e) {
                                if (e) {
                                    var t = a.GameItemsManager.getIns(),
                                        i = !1;
                                    if (t.isSkinType(e)) {
                                        var o = t.getItemTimeLimitDay(e);
                                        return o && (i = 0 !== o), i;
                                    }
                                }
                            }),
                            (e.prototype.reset = function () {}),
                            (e.prototype.onPause = function () {
                                console.log('--- DataEntryWorker onPause---');
                            }),
                            (e.prototype.onResume = function () {
                                console.log('--- DataEntryWorker onResume---');
                            }),
                            e
                        );
                    })(o.WorkerBase);
                (i.default = r), cc._RF.pop();
            },
            {
                '../../../gamescene/workers/WorkerBase': 'WorkerBase',
                '../../Logic/GameItemsManager': 'GameItemsManager',
                '../../Logic/LotteryDataManager': 'LotteryDataManager',
                '../LotteryEnum': 'LotteryEnum',
                '../LotteryVM': 'LotteryVM',
            },
        ],
        Data: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'd6a253D+ztMEpYthbgVjnON', 'Data'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {
                        (this.releasePropertyCount = 0), (this.sufferPropertyCount = 0), (this.savePropertyCount = 0), (this.carryPropertyCount = 0), (this.missTimes = 0), (this.feverTimes = 0);
                    }
                    return (
                        (e.prototype.reset = function () {
                            (this.releasePropertyCount = 0), (this.sufferPropertyCount = 0), (this.savePropertyCount = 0), (this.carryPropertyCount = 0), (this.missTimes = 0), (this.feverTimes = 0);
                        }),
                        e
                    );
                })();
                i.FightGameSceneCountInfo = o;
                var n = function () {
                    (this.userAvatarIcon = null), (this.opponentAvatarIcon = null), (this.fightGameSceneCount = new o());
                };
                (i.default = n), cc._RF.pop();
            },
            {},
        ],
        DateUtil: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'b5304XCmCtB6obWj7v/oWpL', 'DateUtil'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    n = (function () {
                        function e() {}
                        return (
                            (e.parseToDate = function (e) {
                                return new Date(e);
                            }),
                            (e.getFormattedDate = function (e) {
                                if (e) {
                                    var t = e.getFullYear(),
                                        i = e.getMonth() + 1,
                                        o = e.getDate();
                                    return t + '-' + this.getDateStrFormat(i) + '-' + this.getDateStrFormat(o);
                                }
                                return null;
                            }),
                            (e.getDateStrFormat = function (e) {
                                return 10 <= e ? e.toString() : '0' + e.toString();
                            }),
                            (e.getFormatedTime = function (e) {
                                if (!e) return null;
                                var t = e.getHours().toString(),
                                    i = e.getMinutes().toString(),
                                    o = e.getSeconds().toString(),
                                    n = e.getMilliseconds().toString();
                                if ((i.length < 2 && (i = '0' + i), o.length < 2 && (o = '0' + o), n.length < 3)) for (var a = 0; a < 3 - n.length; a++) n = '0' + n;
                                return t + ':' + i + ':' + o;
                            }),
                            (e.isBeyondOnDay = function (e) {
                                var t = new Date(e);
                                return t.setHours(24), t.setMinutes(59), t.setSeconds(59), o.MGUser.getCurrentServerTime() > t.getTime();
                            }),
                            e
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
            },
        ],
        DebugPanelPrefb: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'b9e2aIhkVNPOL9zuMuZaLaP', 'DebugPanelPrefb'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('../../../config/LSKey'),
                    a = e('../../Network/Protocol/StorageUtil'),
                    o = e('../../../social/WXHelper'),
                    r = e('../../Logic/MoneySystem'),
                    s = e('../../../base/GameInfoMgr'),
                    c = e('../../../util/PU'),
                    l = e('../../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    u = e('../../Network/Protocol/MemCache'),
                    d = e('../../../../modules/MGCloudStorage/scripts/Logic/MGCloudStorageEntrance'),
                    p = e('./PrefabMgr'),
                    h = e('../../Logic/SkinDataManager'),
                    f = e('../../../base/Log'),
                    m = cc._decorator,
                    g = m.ccclass,
                    _ = m.property,
                    y = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.useLocalTime = null), (e.useLocalTimeLabel = null), (e.cleanData = null), (e.cleanCache = null), (e.cleanServerData = null), (e.cleanWXData = null), (e.addDiamondButton = null), (e.infocButton = null), (e.infoLabel = null), (e.addMoneyButton = null), (e.mInfiniteChallengeBtn = null), (e.mInfiniteChallengeLabel = null), (e.infiniteLotteryBtn = null), (e.infiniteLotteryLabel = null), (e.changePlayIdBtn = null), (e.unlockAllSkinBtn = null), (e.closeBtn = null), (e.dialogNode = null), (e.flauntPageDebugBtn = null), (e.usePianoOther = null), (e.usePianoOtherLable = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.onLoad = function () {
                                this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                }),
                                    this.cleanData.node.on(cc.Node.EventType.TOUCH_END, this.doCleanData, this),
                                    this.cleanCache.node.on(cc.Node.EventType.TOUCH_END, this.doCleanCache, this),
                                    this.cleanServerData.node.on(cc.Node.EventType.TOUCH_END, this.doCleanServerData, this),
                                    c.default.isWeiXin() ? this.cleanWXData.node.on(cc.Node.EventType.TOUCH_END, this.doCleanWXData, this) : (this.cleanWXData.node.active = !1),
                                    this.addDiamondButton.node.on(cc.Node.EventType.TOUCH_END, this.addDiamond, this),
                                    this.addMoneyButton.node.on(cc.Node.EventType.TOUCH_END, this.addMoney, this),
                                    this.useLocalTime.node.on(cc.Node.EventType.TOUCH_END, this.setUseLocalTime, this),
                                    this.infocButton.node.on(cc.Node.EventType.TOUCH_END, this.infocTest, this),
                                    this.mInfiniteChallengeBtn.node.on(cc.Node.EventType.TOUCH_END, this.infiniteChallenge, this),
                                    this.infiniteLotteryBtn.node.on(cc.Node.EventType.TOUCH_END, this.infiniteLottery, this),
                                    this.changePlayIdBtn.node.on(cc.Node.EventType.TOUCH_END, this.changePlayId, this),
                                    this.unlockAllSkinBtn.node.on(cc.Node.EventType.TOUCH_END, this.unlockAllSkin, this),
                                    this.closeBtn.node.on(cc.Node.EventType.TOUCH_END, this.close, this),
                                    this.flauntPageDebugBtn.node.on(cc.Node.EventType.TOUCH_END, this.enableFlauntPageDebug, this),
                                    this.usePianoOther && this.usePianoOther.node.on(cc.Node.EventType.TOUCH_END, this.unlockPianoTone, this),
                                    this.initView();
                            }),
                            (e.prototype.infocTest = function () {
                                a.default.save(n.default.CMG_USE_INOFC_DEBUG_SERVER, '1');
                            }),
                            (e.prototype.initView = function () {
                                var o = this,
                                    e = a.default.read(n.default.CMG_DEBUG_USE_LOCAL_TIME, '0');
                                (this.useLocalTimeLabel.string = '1' == e ? '切换时间:当前本地' : '切换时间:当前服务端'),
                                    this.infoLabel &&
                                        ((this.infoLabel.string = ''),
                                        l.MGUser.getUserLoginInfo({
                                            complete: function (e) {
                                                var t = s.GameInfoMgr.Ins().getInfo();
                                                if (t) {
                                                    var i = '';
                                                    e ? (i += 'wxId: ' + e.playerId + '\n') : (i = 'wxId: \n'), (i += 'AppId: ' + t.appid + '\n'), (i += 'GameId: ' + t.gameid + '\n'), (i += 'version: ' + t.version + '\n'), c.default.isWeiXin() && (i += 'Server: ' + cmg.CloudUtil.SERVER_ADDRESS_BASE_WX), (o.infoLabel.string = i);
                                                }
                                            },
                                        })),
                                    this.initChallenge(),
                                    this.initLottery(),
                                    this.updateUsePianoName();
                            }),
                            (e.prototype.initChallenge = function () {
                                var e = a.default.read(n.default.DEBUG_INFINITE_CHALLENGE_TIME);
                                this.mInfiniteChallengeLabel.string = 'true' === e ? '点击关闭无限擂台赛' : '点击开启无限擂台赛';
                            }),
                            (e.prototype.initLottery = function () {
                                var e = a.default.read(n.default.DEBUG_INFINITE_LOTTERY);
                                this.infiniteLotteryLabel.string = 'true' === e ? '点击关闭无限抽奖' : '点击开启无限抽奖';
                            }),
                            (e.prototype.setUseLocalTime = function () {
                                var e = '1' == a.default.read(n.default.CMG_DEBUG_USE_LOCAL_TIME, '0') ? '0' : '1';
                                a.default.save(n.default.CMG_DEBUG_USE_LOCAL_TIME, e), (this.useLocalTimeLabel.string = '1' == e ? '切换时间:当前本地' : '切换时间:当前服务端'), this.showTips('切换成功');
                            }),
                            (e.prototype.addDiamond = function () {
                                r.MoneySystem.increaseDiamond(199), this.showTips('钻石 +199');
                            }),
                            (e.prototype.addMoney = function () {}),
                            (e.prototype.doCleanData = function () {
                                for (var t = this, e = n.default.KEYS_NEED_SYNC, i = 0; i < e.length; i++) a.default.remove(e[i]);
                                a.default.remove(u.MemCache.KEY_ALL),
                                    d.MGCloudStorage.delStorage({
                                        keys: n.default.KEYS_NEED_SYNC,
                                        complete: function (e) {
                                            t.doCleanWXData();
                                        },
                                    });
                            }),
                            (e.prototype.doCleanCache = function () {
                                for (var e = n.default.KEYS_NEED_SYNC, t = 0; t < e.length; t++) a.default.remove(e[t]);
                                a.default.remove(u.MemCache.KEY_ALL), this.showTips('删除数据【成功】', !0);
                            }),
                            (e.prototype.doCleanServerData = function () {
                                var t = this;
                                d.MGCloudStorage.delStorage({
                                    keys: n.default.KEYS_NEED_SYNC,
                                    complete: function (e) {
                                        e ? t.showTips('删除数据【成功】', !0) : t.showTips('删除数据【失败】', !0);
                                    },
                                });
                            }),
                            (e.prototype.doCleanWXData = function () {
                                var t = this;
                                if (c.default.isWeiXin()) {
                                    var e = [];
                                    e.push({
                                        key: 'ts',
                                        value: '',
                                    }),
                                        e.push({
                                            key: 'ss_0',
                                            value: '',
                                        }),
                                        e.push({
                                            key: 'ss_1',
                                            value: '',
                                        }),
                                        o.WXHelper.setUserCloudStorage(e, function (e) {
                                            o.WXHelper.removeUserCloudStorage(['ts', 'ss_0', 'ss_1'], function (e) {
                                                t.showTips('删除数据【成功】', !0);
                                            });
                                        });
                                }
                            }),
                            (e.prototype.showTips = function (e, t) {
                                void 0 === t && (t = !1);
                                var i = t ? '重启后生效' : '操作成功';
                                c.default.isWeiXin()
                                    ? wx.showModal({
                                          title: i,
                                          content: e,
                                          showCancel: !1,
                                          confirmText: '关闭',
                                      })
                                    : f.default.e('DebugPanel=> title=' + i + '  content=' + e);
                            }),
                            (e.prototype.infiniteChallenge = function () {
                                'true' === a.default.read(n.default.DEBUG_INFINITE_CHALLENGE_TIME) ? (a.default.save(n.default.DEBUG_INFINITE_CHALLENGE_TIME, 'false'), (this.mInfiniteChallengeLabel.string = '点击开启无限擂台赛'), this.showTips('无限次擂台赛关闭成功')) : (a.default.save(n.default.DEBUG_INFINITE_CHALLENGE_TIME, 'true'), (this.mInfiniteChallengeLabel.string = '点击关闭无限擂台赛'), this.showTips('无限次擂台赛开启成功'));
                            }),
                            (e.prototype.infiniteLottery = function () {
                                'true' === a.default.read(n.default.DEBUG_INFINITE_LOTTERY) ? (a.default.save(n.default.DEBUG_INFINITE_LOTTERY, 'false'), (this.infiniteLotteryLabel.string = '点击开启无限抽奖'), this.showTips('无限次抽奖关闭成功')) : (a.default.save(n.default.DEBUG_INFINITE_LOTTERY, 'true'), (this.infiniteLotteryLabel.string = '点击关闭无限抽奖'), this.showTips('无限次抽奖开启成功'));
                            }),
                            (e.prototype.updateUsePianoName = function () {}),
                            (e.prototype.unlockPianoTone = function () {}),
                            (e.prototype.enableFlauntPageDebug = function () {
                                'true' === a.default.read(n.default.DEBUG_ENABLE_FLAUNT_PAGE) ? (a.default.save(n.default.DEBUG_ENABLE_FLAUNT_PAGE, 'false'), this.showTips('炫耀页DEBUG关闭')) : (a.default.save(n.default.DEBUG_ENABLE_FLAUNT_PAGE, 'true'), this.showTips('炫耀页DEBUG开启'));
                            }),
                            (e.prototype.changePlayId = function () {
                                var i = this;
                                p.default.load('prefab/ChangePlayIDPrefab', function (e, t) {
                                    i.dialogNode.addChild(t);
                                });
                            }),
                            (e.prototype.unlockAllSkin = function () {
                                var e = h.SkinDataMgr.Ins().getSkinList();
                                e &&
                                    e.forEach(function (e) {
                                        h.SkinDataMgr.Ins().unlockSkin(e.name);
                                    }),
                                    this.showTips('皮肤解锁成功');
                            }),
                            (e.prototype.setCloseCallback = function (e) {
                                this.mCloseCallback = e;
                            }),
                            (e.prototype.close = function () {
                                this.mCloseCallback && this.mCloseCallback(), this.node.destroy();
                            }),
                            __decorate([_(cc.Button)], e.prototype, 'useLocalTime', void 0),
                            __decorate([_(cc.Label)], e.prototype, 'useLocalTimeLabel', void 0),
                            __decorate([_(cc.Button)], e.prototype, 'cleanData', void 0),
                            __decorate([_(cc.Button)], e.prototype, 'cleanCache', void 0),
                            __decorate([_(cc.Button)], e.prototype, 'cleanServerData', void 0),
                            __decorate([_(cc.Button)], e.prototype, 'cleanWXData', void 0),
                            __decorate([_(cc.Button)], e.prototype, 'addDiamondButton', void 0),
                            __decorate([_(cc.Button)], e.prototype, 'infocButton', void 0),
                            __decorate([_(cc.Label)], e.prototype, 'infoLabel', void 0),
                            __decorate([_(cc.Button)], e.prototype, 'addMoneyButton', void 0),
                            __decorate([_(cc.Button)], e.prototype, 'mInfiniteChallengeBtn', void 0),
                            __decorate([_(cc.Label)], e.prototype, 'mInfiniteChallengeLabel', void 0),
                            __decorate([_(cc.Button)], e.prototype, 'infiniteLotteryBtn', void 0),
                            __decorate([_(cc.Label)], e.prototype, 'infiniteLotteryLabel', void 0),
                            __decorate([_(cc.Button)], e.prototype, 'changePlayIdBtn', void 0),
                            __decorate([_(cc.Button)], e.prototype, 'unlockAllSkinBtn', void 0),
                            __decorate([_(cc.Button)], e.prototype, 'closeBtn', void 0),
                            __decorate([_(cc.Node)], e.prototype, 'dialogNode', void 0),
                            __decorate([_(cc.Button)], e.prototype, 'flauntPageDebugBtn', void 0),
                            __decorate([_(cc.Button)], e.prototype, 'usePianoOther', void 0),
                            __decorate([_(cc.Label)], e.prototype, 'usePianoOtherLable', void 0),
                            (e = __decorate([g], e))
                        );
                    })(cc.Component);
                (i.default = y), cc._RF.pop();
            },
            {
                '../../../../modules/MGCloudStorage/scripts/Logic/MGCloudStorageEntrance': 'MGCloudStorageEntrance',
                '../../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../../base/GameInfoMgr': 'GameInfoMgr',
                '../../../base/Log': 'Log',
                '../../../config/LSKey': 'LSKey',
                '../../../social/WXHelper': 'WXHelper',
                '../../../util/PU': 'PU',
                '../../Logic/MoneySystem': 'MoneySystem',
                '../../Logic/SkinDataManager': 'SkinDataManager',
                '../../Network/Protocol/MemCache': 'MemCache',
                '../../Network/Protocol/StorageUtil': 'StorageUtil',
                './PrefabMgr': 'PrefabMgr',
            },
        ],
        DecelerateConfirm: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '679a4owKmhHoYZq3/JhbyJ2', 'DecelerateConfirm'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = cc._decorator,
                    n = o.ccclass,
                    a = (o.property, e('../../util/nodeFacade')),
                    r = e('../../business/UI/GameEntraScene/BasicTouchEvent'),
                    s = e('../../business/keypad/KeypadNavigator'),
                    c = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.confirmCallback = null), (e.cancelCallback = null), (e.destroyCallback = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.onLoad = function () {
                                var e = new a.default(this.node).getChild('dlg');
                                this.buildBkg(), e && this.buildCloseBtn(e), e && this.buildConfirmBtn(e), s.default.getInstance().pushDialog(this.node, 'DecelerateConfirm');
                            }),
                            (e.prototype.onDestroy = function () {
                                s.default.getInstance().popDialog(this.node, 'DecelerateConfirm');
                            }),
                            (e.prototype.buildBkg = function () {
                                var e = this.node.getChildByName('bkg');
                                e &&
                                    (e.on(cc.Node.EventType.TOUCH_START, function (e) {
                                        e.stopPropagation();
                                    }),
                                    e.on(cc.Node.EventType.TOUCH_END, function (e) {
                                        e.stopPropagation();
                                    }));
                            }),
                            (e.prototype.buildCloseBtn = function (e) {
                                var t = this,
                                    i = e.getChild('closebutton').getNode();
                                if (i) {
                                    var o = new r.default(function () {
                                        t.onClickCloseButton();
                                    });
                                    i.on(cc.Node.EventType.TOUCH_END, o.click, o);
                                }
                            }),
                            (e.prototype.buildConfirmBtn = function (e) {
                                var t = this,
                                    i = e.getChild('confirmbutton').getNode();
                                if (i) {
                                    var o = new r.default(function () {
                                        t.onConfirmBtnClick();
                                    });
                                    i.on(cc.Node.EventType.TOUCH_END, o.click, o);
                                }
                            }),
                            (e.prototype.onClickCloseButton = function () {
                                (this.node.active = !1), this.cancelCallback(), this.destroyCallback();
                            }),
                            (e.prototype.onConfirmBtnClick = function () {
                                (this.node.active = !1), this.confirmCallback(), this.destroyCallback();
                            }),
                            (e.prototype.setDestroyCallback = function (e) {
                                e && (this.destroyCallback = e);
                            }),
                            (e.prototype.setConfirmCallback = function (e) {
                                e && (this.confirmCallback = e);
                            }),
                            (e.prototype.setCancelCallback = function (e) {
                                e && (this.cancelCallback = e);
                            }),
                            (e = __decorate([n], e))
                        );
                    })(cc.Component);
                (i.default = c), cc._RF.pop();
            },
            {
                '../../business/UI/GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
                '../../business/keypad/KeypadNavigator': 'KeypadNavigator',
                '../../util/nodeFacade': 'NodeFacade',
            },
        ],
        DecelerateWorker: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '2d97fdULgFAC6YQlNBNth8z', 'DecelerateWorker'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../workers/WorkerBase'),
                    n = e('../../../property/PropertyDefines'),
                    a = e('../../../base/G'),
                    r = e('../../../util/runtime/Tween'),
                    u = e('../../workers/WorkerState'),
                    s = e('../../GameBus'),
                    c = e('../../../util/runtime/ClassType'),
                    l = e('./../../../base/Log'),
                    d = (function (t) {
                        function e() {
                            var e = t.call(this, 'DecelerateWorker') || this;
                            return (e.preSpeed = 0), (e.endSpeed = 0), (e.duration = 0), (e.obtained = !1), (e.decelerateProperty = null), (e.endCallback = null), (e.MULTIPLE = 0.5), (e.RECOVERY_TIME = 2), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.init = function (e, t, i) {
                                var o = e.getSpeed();
                                a.G.Ap.config.mBaseBlockHeight;
                                (this.endSpeed = o * this.MULTIPLE), (this.duration = t.permanentTime || 0), this.updateAdditionTime(), this.setPreSpeed(o), this.setEndCallback(i), (this.stage = e), this.stage.setSpeed(this.endSpeed), (this.decelerateProperty = new n.Property(n.PROPERTYTYPE.GAME_SLOW)), this.startCountDown(this.duration), console.log('--- DecelerateWorker onStart preSpeed:---', o);
                            }),
                            (e.prototype.updateAdditionTime = function () {
                                var e = this.duration;
                                (this.duration = a.G.propAddition.getAdditionDashTime(this.duration, a.G.Ap.state.mission.getType().toString())), l.default.e('减速 时间加成：' + e + '  => ' + this.duration);
                            }),
                            (e.prototype.onStart = function () {
                                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                                try {
                                    if (e && e.length <= 0) return;
                                    var i = e[0],
                                        o = e[1],
                                        n = e[2];
                                    this.init(i, o, n), a.G.Ap.state.startPropertyWork(this.decelerateProperty), console.log('--- DecelerateWorker onStart args:---', e);
                                } catch (e) {
                                    console.log('--- DecelerateWorker onStart err:---', e);
                                }
                            }),
                            (e.prototype.onStop = function () {
                                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                                try {
                                    return a.G.Ap.state.stopPropertyWork(this.decelerateProperty), void (this.stage.propertyWorked = !1);
                                } catch (e) {
                                    console.log('--- DecelerateWorker onStop err:---', e);
                                }
                            }),
                            (e.prototype.onPause = function () {
                                console.log('--- DecelerateWorker onPause---');
                            }),
                            (e.prototype.onResume = function () {
                                console.log('--- DecelerateWorker onResume---');
                            }),
                            (e.prototype.onStateChanged = function (e) {
                                console.log('--- DecelerateWorker onStateChanged args:---', e), e.state === u.WorkerState.stopped && this.recovery();
                            }),
                            (e.prototype.reset = function () {
                                (this.preSpeed = 0), (this.endSpeed = 0), (this.duration = 0), (this.obtained = !1), (this.decelerateProperty = null);
                            }),
                            (e.prototype.recovery = function () {
                                try {
                                    cc.sys.platform == cc.sys.QQ_PLAY ? this.workForQQ() : this.workForWechat(requestAnimationFrame, cancelAnimationFrame);
                                } catch (e) {
                                    this.stage.setSpeed(this.preSpeed);
                                }
                            }),
                            (e.prototype.workForWechat = function (i, o) {
                                var n = this,
                                    a = this.endSpeed,
                                    r = 59 * this.RECOVERY_TIME,
                                    s = 0,
                                    c = 0;
                                this.stage.setSpeed(a);
                                var l = function () {
                                    var e = n.preSpeed;
                                    if (n.state === u.WorkerState.stopped) {
                                        var t = n.getChangeSpeed(s, a, e, r);
                                        ++s <= r ? (n.stage.setSpeed(t), c && o(c), (c = i(l))) : (n.stage.setSpeed(e), n.reset(), c && o(c));
                                    }
                                };
                                l();
                            }),
                            (e.prototype.workForQQ = function () {
                                this.workForWechat(c.Type.getRaf(), c.Type.getCaf());
                            }),
                            (e.prototype.getChangeSpeed = function (e, t, i, o) {
                                var n = r.mTween.quadLinear(e, t, i, o);
                                return (n = Math.min(n, i));
                            }),
                            (e.prototype.startCountDown = function (e) {
                                var t = this;
                                e &&
                                    s.default.getInstance().scheduler.scheduleOnce(function () {
                                        t.endCallback();
                                    }, e);
                            }),
                            (e.prototype.setEndCallback = function (e) {
                                e && (this.endCallback = e);
                            }),
                            (e.prototype.getEndCallback = function () {
                                return this.endCallback;
                            }),
                            (e.prototype.setPreSpeed = function (e) {
                                void 0 === e && (e = 0), (this.preSpeed = e);
                            }),
                            e
                        );
                    })(o.WorkerBase);
                (i.default = d), cc._RF.pop();
            },
            {
                '../../../base/G': 'G',
                '../../../property/PropertyDefines': 'PropertyDefines',
                '../../../util/runtime/ClassType': 'ClassType',
                '../../../util/runtime/Tween': 'Tween',
                '../../GameBus': 'GameBus',
                '../../workers/WorkerBase': 'WorkerBase',
                '../../workers/WorkerState': 'WorkerState',
                './../../../base/Log': 'Log',
            },
        ],
        DefaultAdapter: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '3bc40OGOzJMoIhVOpMz1cNx', 'DefaultAdapter'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {}
                    return (
                        (e.prototype.needDownloadRes = function () {
                            return !1;
                        }),
                        (e.prototype.isSupportDownloadRes = function () {
                            return !1;
                        }),
                        (e.prototype.createCanvas = function () {
                            return document.createElement('canvas');
                        }),
                        (e.prototype.createImage = function () {
                            return document.createElement('img');
                        }),
                        (e.prototype.onShowListen = function (e) {}),
                        (e.prototype.offShowListen = function (e) {}),
                        (e.prototype.onHideListen = function (e) {}),
                        (e.prototype.offHideListen = function (e) {}),
                        (e.prototype.getLaunchParameter = function () {
                            return null;
                        }),
                        (e.prototype.getShareCanvas = function () {
                            return null;
                        }),
                        (e.prototype.getUserDataPath = function () {
                            return '';
                        }),
                        (e.prototype.unZip = function (e, t, i, o) {
                            o && o();
                        }),
                        (e.prototype.downloadFile = function (e, t, i, o, n) {
                            return void 0 === o && (o = 0), void 0 === n && (n = !0), i && i(), null;
                        }),
                        (e.prototype.getFileSystemManager = function () {
                            return new Object();
                        }),
                        (e.prototype.getCanvasHeightByContext = function (e) {
                            return e.canvas.height;
                        }),
                        (e.prototype.getImageSrc = function (e) {
                            return new Object();
                        }),
                        (e.prototype.loadImage = function (e) {}),
                        (e.prototype.getSharePath = function (e) {
                            return e;
                        }),
                        (e.prototype.saveShareTmpFile = function (e, t) {
                            return '';
                        }),
                        (e.prototype.getImageBySimpleImage = function (e) {
                            return e.image;
                        }),
                        e
                    );
                })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        Define: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '4bea3WW3jtGwa1tRQ3G4+ru', 'Define'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o,
                    n,
                    c = e('../DB/DBMgr'),
                    l = e('../../util/StringUtil'),
                    a = e('./../../base/Log');
                ((n = o || (o = {})).Gold = '2-1-'), (n.GameGold = '2-2-'), (n.Exp = '3-'), (n.Revive = '4-'), (n.GameProp = '5-'), (n.GameProp_Dash = '5-21-'), (n.GameProp_Slow = '5-22-'), (n.GameProp_Shield = '5-23-'), (n.GameProp_Fanatical = '5-31-'), (n.GameProp_Fog = '5-32-'), (n.GameProp_Obstacle = '5-33-'), (n.GameProp_Conversion = '5-30-');
                var u = (function () {
                        function n(e, t, i) {
                            void 0 === i && (i = !0), (this.isPercent = !0), (this.value = 0), (this.effectId = e), (this.isPercent = i), (this.value = t);
                        }
                        return (
                            (n.prototype.isType = function (e, t) {
                                return void 0 === t && (t = !0), !l.StringUtil.isEmpty(this.effectId) && (t ? this.effectId.startsWith(e) : this.effectId === e);
                            }),
                            (n.getEffect = function (e) {
                                if (l.StringUtil.isEmpty(e)) return null;
                                var t = c.default.Ins().getDBRows(c.eDataBase.eDB_Effect);
                                if (t)
                                    for (var i = 0; i < t.length; i++) {
                                        var o = t[i];
                                        if (o && o.getEffectId() == e) return new n(o.getEffectId(), o.getValue(), o.getisPercent());
                                    }
                                return null;
                            }),
                            n
                        );
                    })(),
                    r = (function () {
                        function e() {
                            (this.mAdditions = new Map()), (this.mSkinAdditions = null);
                        }
                        return (
                            (e.prototype.getAdditions = function () {
                                for (var i = this, e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                                var o = [];
                                return (
                                    e &&
                                        0 < e.length &&
                                        e.forEach(function (e) {
                                            var t = i.mAdditions.get(e);
                                            t &&
                                                0 < t.length &&
                                                t.forEach(function (e) {
                                                    e && o.push(e);
                                                });
                                        }),
                                    o
                                );
                            }),
                            (e.prototype.filterAdditions = function (e) {
                                for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
                                for (var o = this.getAdditions.apply(this, t), n = [], a = 0; a < o.length; a++) {
                                    var r = o[a];
                                    e && e(r) && n.push(r);
                                }
                                return n;
                            }),
                            (e.prototype.setSkinAdditions = function (e) {
                                this.removeAdditions(this.mSkinAdditions), (this.mSkinAdditions = e), this.addAdditions(e);
                            }),
                            (e.prototype.addAdditions = function (e) {
                                var o = this;
                                e &&
                                    e.forEach(function (e, t) {
                                        var i = o.mAdditions.get(t);
                                        i || ((i = []), o.mAdditions.set(t, i)),
                                            e &&
                                                0 < e.length &&
                                                e.forEach(function (e) {
                                                    e && (i.push(e), a.default.l('新增加成属性：scene=' + t + '  [effect:' + e.effectId + ']', e));
                                                });
                                    });
                            }),
                            (e.prototype.removeAdditions = function (e) {
                                var o = this;
                                e &&
                                    e.forEach(function (e, t) {
                                        var i = o.mAdditions.get(t);
                                        i &&
                                            e &&
                                            0 < e.length &&
                                            e.forEach(function (e) {
                                                var t = i.indexOf(e);
                                                0 <= t && i.splice(t, 1);
                                            });
                                    });
                            }),
                            (e.prototype.calcAdditions = function (e, t) {
                                for (var i = [], o = 2; o < arguments.length; o++) i[o - 2] = arguments[o];
                                var n = this.filterAdditions.apply(this, [t].concat(i)),
                                    a = 1,
                                    r = 0;
                                if (n && 0 < n.length)
                                    for (var s = 0; s < n.length; s++) {
                                        var c = n[s];
                                        c && (c.isPercent ? (a += c.value) : (r += c.value));
                                    }
                                return e * a + r;
                            }),
                            (e.prototype.getAdditionedExp = function (e) {
                                for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
                                return Math.ceil(
                                    this.calcAdditions.apply(
                                        this,
                                        [
                                            e,
                                            function (e) {
                                                return e && e.isType(o.Exp);
                                            },
                                        ].concat(t),
                                    ),
                                );
                            }),
                            (e.prototype.getAdditionGainMoney = function (e) {
                                for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
                                return Math.ceil(
                                    this.calcAdditions.apply(
                                        this,
                                        [
                                            e,
                                            function (e) {
                                                return e && e.isType(o.GameGold);
                                            },
                                        ].concat(t),
                                    ),
                                );
                            }),
                            (e.prototype.getAdditionReviveTimes = function () {
                                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                                return this.calcAdditions.apply(
                                    this,
                                    [
                                        0,
                                        function (e) {
                                            return e && e.isType(o.Revive);
                                        },
                                    ].concat(e),
                                );
                            }),
                            (e.prototype.getAdditionDashTime = function (e) {
                                for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
                                return this.calcAdditions.apply(
                                    this,
                                    [
                                        e,
                                        function (e) {
                                            return e && e.isType(o.GameProp_Dash);
                                        },
                                    ].concat(t),
                                );
                            }),
                            (e.prototype.getAdditionFogTime = function (e) {
                                for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
                                return this.calcAdditions.apply(
                                    this,
                                    [
                                        e,
                                        function (e) {
                                            return e && e.isType(o.GameProp_Fog);
                                        },
                                    ].concat(t),
                                );
                            }),
                            (e.prototype.getAdditionObstacleTime = function (e) {
                                for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
                                return this.calcAdditions.apply(
                                    this,
                                    [
                                        e,
                                        function (e) {
                                            return e && e.isType(o.GameProp_Obstacle);
                                        },
                                    ].concat(t),
                                );
                            }),
                            (e.prototype.getAdditionConversionTime = function (e) {
                                for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
                                return Math.ceil(
                                    this.calcAdditions.apply(
                                        this,
                                        [
                                            e,
                                            function (e) {
                                                return e && e.isType(o.GameProp_Conversion);
                                            },
                                        ].concat(t),
                                    ),
                                );
                            }),
                            (e.prototype.getAdditionSlowTime = function (e) {
                                for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
                                return this.calcAdditions.apply(
                                    this,
                                    [
                                        e,
                                        function (e) {
                                            return e && e.isType(o.GameProp_Slow);
                                        },
                                    ].concat(t),
                                );
                            }),
                            (e.prototype.getAdditionShieldTime = function (e) {
                                for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
                                return this.calcAdditions.apply(
                                    this,
                                    [
                                        e,
                                        function (e) {
                                            return e && e.isType(o.GameProp_Shield);
                                        },
                                    ].concat(t),
                                );
                            }),
                            (e.prototype.getAdditionCtrlFanaticalTime = function (e) {
                                for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
                                return this.calcAdditions.apply(
                                    this,
                                    [
                                        e,
                                        function (e) {
                                            return e && e.isType(o.GameProp_Fanatical);
                                        },
                                    ].concat(t),
                                );
                            }),
                            e
                        );
                    })();
                i.PropAddition = r;
                var s = (function () {
                    function e() {}
                    return (
                        (e.getAdditions = function (e) {
                            var t = new Map();
                            if (!l.StringUtil.isEmpty(e))
                                for (var i = c.default.Ins().getDBRows(c.eDataBase.eDB_Addition), o = 0; o < i.length; o++) {
                                    var n = i[o];
                                    if (n && n.getItemId() == e) {
                                        var a = n.getSceneId(),
                                            r = t.get(a);
                                        r || ((r = []), t.set(a, r));
                                        var s = u.getEffect(n.getEffectId());
                                        s && r.push(s);
                                    }
                                }
                            return t;
                        }),
                        (e.getAdditionDesc = function (e) {
                            for (var t = c.default.Ins().getDBRows(c.eDataBase.eDB_Addition), i = '', o = 0; o < t.length; o++) {
                                var n = t[o];
                                if (n && n.getItemId() == e && ((i = n.getDesc()), !l.StringUtil.isEmpty(i))) break;
                            }
                            return i;
                        }),
                        e
                    );
                })();
                (i.default = s), cc._RF.pop();
            },
            {
                '../../util/StringUtil': 'StringUtil',
                '../DB/DBMgr': 'DBMgr',
                './../../base/Log': 'Log',
            },
        ],
        Delay: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '10d96r+CipBIZa4jJ4llYlU', 'Delay'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {}
                    return (
                        (e.wait = function (t) {
                            return new Promise(function (e) {
                                return setTimeout(e, t / 1e3);
                            });
                        }),
                        e
                    );
                })();
                (i.Delay = o), cc._RF.pop();
            },
            {},
        ],
        DeskIconInstrucPrefb: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '31fc7j70tdH0bPpe8ACQ9E2', 'DeskIconInstrucPrefb'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./BasicTouchEvent'),
                    n = e('../../../util/SUtil'),
                    a = cc._decorator,
                    r = a.ccclass,
                    s = a.property,
                    c = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mCloseButton = null), (e.mArrow = null), (e.mTitle = null), (e.mWhiteBg = null), (e.mMenuLabel = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.onLoad = function () {
                                var e = this,
                                    t = new o.default(function () {
                                        e.mCloseCallback();
                                    });
                                this.mCloseButton.node.on(cc.Node.EventType.TOUCH_END, t.click, t),
                                    this.node.on(
                                        cc.Node.EventType.TOUCH_START,
                                        function (e) {
                                            e.stopPropagation();
                                        },
                                        this,
                                    ),
                                    this.adaptorUI(),
                                    cc.sys.platform == cc.sys.QQ_PLAY && (this.mMenuLabel.string = '点击菜单 “创建桌面快捷方式” 选项');
                            }),
                            (e.prototype.adaptorUI = function () {
                                n.SUtil.ins().isLiuHai() && (n.SUtil.ins().toTop(this.mArrow, 10.9), n.SUtil.ins().toTop(this.mTitle, 26.4), n.SUtil.ins().toTop(this.mWhiteBg, 28.7));
                            }),
                            (e.prototype.setCallback = function (e) {
                                this.mCloseCallback = e;
                            }),
                            __decorate([s(cc.Button)], e.prototype, 'mCloseButton', void 0),
                            __decorate([s(cc.Sprite)], e.prototype, 'mArrow', void 0),
                            __decorate([s(cc.Sprite)], e.prototype, 'mTitle', void 0),
                            __decorate([s(cc.Sprite)], e.prototype, 'mWhiteBg', void 0),
                            __decorate([s(cc.Label)], e.prototype, 'mMenuLabel', void 0),
                            (e = __decorate([r], e))
                        );
                    })(cc.Component);
                (i.DeskIconInstrucPrefb = c), cc._RF.pop();
            },
            {
                '../../../util/SUtil': 'SUtil',
                './BasicTouchEvent': 'BasicTouchEvent',
            },
        ],
        DialogManager: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '86e47t10b9MDaODdLXMM5BG', 'DialogManager'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {
                        this.mShowCount = 0;
                    }
                    return (
                        (e.getIns = function () {
                            return e.sIns || (e.sIns = new e()), e.sIns;
                        }),
                        (e.prototype.addSenceDialogListener = function (e, t) {}),
                        (e.prototype.removeSenceDialogListener = function (e, t) {}),
                        (e.prototype.showDialog = function (e) {
                            var t = this.getCurrentSceneRootNode(),
                                i = e.getContentNode();
                            t && i && (t.addChild(i), this.addShowCount());
                        }),
                        (e.prototype.dimissDialog = function (e) {
                            var t = e.getContentNode();
                            t && (t.destroy(), this.removeShowCount());
                        }),
                        (e.prototype.buildSceneKey = function (e) {
                            return this.getCurrentSceneName() + '_' + e;
                        }),
                        (e.prototype.getCurrentSceneName = function () {
                            var e = cc.director.getScene();
                            return e ? e.name : null;
                        }),
                        (e.prototype.getCurrentSceneRootNode = function () {
                            var e = cc.find('loadingNode');
                            return e || null;
                        }),
                        (e.prototype.addShowCount = function () {
                            this.mShowCount++;
                        }),
                        (e.prototype.removeShowCount = function () {
                            this.mShowCount--;
                        }),
                        (e.prototype.isHasShowingToastPop = function () {
                            return !(this.mShowCount <= 0);
                        }),
                        e
                    );
                })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        DialogNoButtonPrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '27669XXV+VMOokJjdzir10U', 'DialogNoButtonPrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../UI/GameEntraScene/BasicTouchEvent'),
                    n = cc._decorator,
                    a = n.ccclass,
                    r = n.property,
                    s = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mTitle = null), (e.mContent = null), (e.mLoading = null), (e.mCloseBtn = null), (e.mCloseClickCallback = null), (e.mCloseCallback = null), (e.mShowLoading = !1), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.onLoad = function () {
                                this.mShowLoading && ((this.mLoadingAnim = this.mLoading.getComponent(cc.Animation)), this.mLoadingAnim.play('dialog_loading')), this.initEvents();
                            }),
                            (e.prototype.initEvents = function () {
                                var e = this;
                                this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                }),
                                    this.mCloseBtn &&
                                        ((this.mCloseClickCallback = new o.default(function () {
                                            e.onClose();
                                        })),
                                        this.mCloseBtn.node.on(cc.Node.EventType.TOUCH_END, this.mCloseClickCallback.click, this.mCloseClickCallback));
                            }),
                            (e.prototype.onClose = function () {
                                this.mShowLoading && this.mLoadingAnim && this.mLoadingAnim.stop(), this.mCloseCallback && this.mCloseCallback(this.node);
                            }),
                            (e.prototype.setTitle = function (e) {
                                this.mTitle.string = e;
                            }),
                            (e.prototype.setContent = function (e) {
                                this.mContent.string = e;
                            }),
                            (e.prototype.setShowLoading = function (e) {
                                (this.mLoading.node.active = e), (this.mShowLoading = e);
                            }),
                            (e.prototype.setCloseCallback = function (e) {
                                this.mCloseCallback = e;
                            }),
                            (e.prototype.setShowClose = function (e) {
                                this.mCloseBtn.node.active = e;
                            }),
                            __decorate([r(cc.Label)], e.prototype, 'mTitle', void 0),
                            __decorate([r(cc.RichText)], e.prototype, 'mContent', void 0),
                            __decorate([r(cc.Sprite)], e.prototype, 'mLoading', void 0),
                            __decorate([r(cc.Button)], e.prototype, 'mCloseBtn', void 0),
                            (e = __decorate([a], e))
                        );
                    })(cc.Component);
                (i.default = s), cc._RF.pop();
            },
            {
                '../UI/GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
            },
        ],
        DialogOneButtonPrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'f88e1EhthNOaKQzqcBpm39V', 'DialogOneButtonPrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../UI/GameEntraScene/BasicTouchEvent'),
                    n = e('../keypad/KeypadNavigator'),
                    a = cc._decorator,
                    r = a.ccclass,
                    s = a.property,
                    c = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mTitle = null), (e.mContent = null), (e.mBotton = null), (e.mBtnTxt = null), (e.mCloseBtn = null), (e.mShowClose = !1), (e.mBottonClickCallback = null), (e.mCloseClickCallback = null), (e.mBottonCallback = null), (e.mCloseCallback = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.onLoad = function () {
                                this.initEvents(), n.default.getInstance().pushDialog(this.node);
                            }),
                            (e.prototype.initEvents = function () {
                                var e = this;
                                this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                }),
                                    this.mBotton &&
                                        ((this.mBottonClickCallback = new o.default(function () {
                                            e.onBottomBtnClick(), n.default.getInstance().popDialog(e.node);
                                        })),
                                        this.mBotton.node.on(cc.Node.EventType.TOUCH_END, this.mBottonClickCallback.click, this.mBottonClickCallback)),
                                    (this.mCloseBtn.node.active = this.mShowClose),
                                    this.mCloseBtn &&
                                        this.mShowClose &&
                                        ((this.mCloseClickCallback = new o.default(function () {
                                            e.onCloseBtnClick();
                                        })),
                                        this.mCloseBtn.node.on(cc.Node.EventType.TOUCH_END, this.mCloseClickCallback.click, this.mCloseClickCallback));
                            }),
                            (e.prototype.onCloseBtnClick = function () {
                                this.mCloseCallback && this.mCloseCallback(this.node);
                            }),
                            (e.prototype.onBottomBtnClick = function () {
                                this.mBottonCallback && this.mBottonCallback(this.node);
                            }),
                            (e.prototype.setTitle = function (e) {
                                return (this.mTitle.string = e), this;
                            }),
                            (e.prototype.setContent = function (e) {
                                return (this.mContent.string = e), this;
                            }),
                            (e.prototype.setBtnTxt = function (e) {
                                return (this.mBtnTxt.string = e), this;
                            }),
                            (e.prototype.setBottonCallback = function (e) {
                                return (this.mBottonCallback = e), this;
                            }),
                            (e.prototype.setShowClose = function (e) {
                                return (this.mShowClose = e), this;
                            }),
                            (e.prototype.setCloseCallback = function (e) {
                                return (this.mCloseCallback = e), this;
                            }),
                            __decorate([s(cc.Label)], e.prototype, 'mTitle', void 0),
                            __decorate([s(cc.RichText)], e.prototype, 'mContent', void 0),
                            __decorate([s(cc.Button)], e.prototype, 'mBotton', void 0),
                            __decorate([s(cc.Label)], e.prototype, 'mBtnTxt', void 0),
                            __decorate([s(cc.Button)], e.prototype, 'mCloseBtn', void 0),
                            (e = __decorate([r], e))
                        );
                    })(cc.Component);
                (i.default = c), cc._RF.pop();
            },
            {
                '../UI/GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
                '../keypad/KeypadNavigator': 'KeypadNavigator',
            },
        ],
        DialogRechargePrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '1d484+8kFBLNbxDzBjc9tg7', 'DialogRechargePrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../UI/GameEntraScene/BasicTouchEvent'),
                    n = cc._decorator,
                    a = n.ccclass,
                    r = n.property,
                    s = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mTitle = null), (e.mContent = null), (e.mBotton = null), (e.mBtnTxt = null), (e.mDiamondIcon = null), (e.mDiamondCountTxt = null), (e.mGoldIcon = null), (e.mGoldCountTxt = null), (e.mTickeIcon = null), (e.mTickeCountTxt = null), (e.mDashIcon = null), (e.mDashCountTxt = null), (e.mSlowIcon = null), (e.mSlowCountTxt = null), (e.mShieldIcon = null), (e.mShieldCountTxt = null), (e.mBottonClickCallback = null), (e.mBottonCallback = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.onLoad = function () {
                                this.initEvents(), this.initUI();
                            }),
                            (e.prototype.initEvents = function () {
                                var e = this;
                                this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                }),
                                    this.mBotton &&
                                        ((this.mBottonClickCallback = new o.default(function () {
                                            e.onClose();
                                        })),
                                        this.mBotton.node.on(cc.Node.EventType.TOUCH_END, this.mBottonClickCallback.click, this.mBottonClickCallback));
                            }),
                            (e.prototype.initUI = function () {
                                if (0 < this.mDashCount) (this.mDashIcon.node.active = !0), (this.mDashCountTxt.node.active = !0), (this.mDashCountTxt.string = 'x' + this.mDashCount.toString()), (this.mGoldIcon.node.active = !1), (this.mGoldCountTxt.node.active = !1), (this.mDiamondIcon.node.active = !1), (this.mDiamondCountTxt.node.active = !1);
                                else if (0 < this.mSlowCount) (this.mSlowIcon.node.active = !0), (this.mSlowCountTxt.node.active = !0), (this.mSlowCountTxt.string = 'x' + this.mSlowCount.toString()), (this.mGoldIcon.node.active = !1), (this.mGoldCountTxt.node.active = !1), (this.mDiamondIcon.node.active = !1), (this.mDiamondCountTxt.node.active = !1);
                                else if (0 < this.mShieldCount) (this.mShieldIcon.node.active = !0), (this.mShieldCountTxt.node.active = !0), (this.mShieldCountTxt.string = 'x' + this.mShieldCount.toString()), (this.mGoldIcon.node.active = !1), (this.mGoldCountTxt.node.active = !1), (this.mDiamondIcon.node.active = !1), (this.mDiamondCountTxt.node.active = !1);
                                else if (0 < this.mTickeCount) (this.mTickeIcon.node.active = !0), (this.mTickeCountTxt.node.active = !0), (this.mGoldIcon.node.active = !1), (this.mGoldCountTxt.node.active = !1), (this.mDiamondIcon.node.active = !1), (this.mDiamondCountTxt.node.active = !1);
                                else if (0 == this.mDiamondCount && 0 != this.mGoldCount) {
                                    var e = this.mGoldIcon.getComponent(cc.Widget);
                                    (e.isAlignRight = !0), (e.right = 210);
                                    var t = this.mGoldCountTxt.getComponent(cc.Widget);
                                    (t.isAlignRight = !0), (t.right = 236.5), (this.mDiamondIcon.node.active = !1), (this.mDiamondCountTxt.node.active = !1);
                                } else if (0 == this.mGoldCount && 0 != this.mDiamondCount) {
                                    var i = this.mDiamondIcon.getComponent(cc.Widget);
                                    (i.isAlignLeft = !0), (i.left = 210);
                                    var o = this.mDiamondCountTxt.getComponent(cc.Widget);
                                    (o.isAlignLeft = !0), (o.left = 236.5), (this.mGoldIcon.node.active = !1), (this.mGoldCountTxt.node.active = !1);
                                }
                            }),
                            (e.prototype.onClose = function () {
                                this.mBottonCallback && this.mBottonCallback(this.node);
                            }),
                            (e.prototype.setTitle = function (e) {
                                this.mTitle.string = e;
                            }),
                            (e.prototype.setContent = function (e) {
                                this.mContent.string = e;
                            }),
                            (e.prototype.setBtnTxt = function (e) {
                                this.mBtnTxt.string = e;
                            }),
                            (e.prototype.setBottonCallback = function (e) {
                                this.mBottonCallback = e;
                            }),
                            (e.prototype.setDiamondCount = function (e) {
                                (this.mDiamondCount = e), (this.mDiamondCountTxt.string = 'x' + e.toString());
                            }),
                            (e.prototype.setGoldCount = function (e) {
                                (this.mGoldCount = e), (this.mGoldCountTxt.string = 'x' + e.toString());
                            }),
                            (e.prototype.setTickeCount = function (e) {
                                (this.mTickeCount = e), (this.mTickeCountTxt.string = 'x' + e.toString());
                            }),
                            (e.prototype.setDashCount = function (e) {
                                this.mDashCount = e;
                            }),
                            (e.prototype.setShieldCount = function (e) {
                                this.mShieldCount = e;
                            }),
                            (e.prototype.setSlowCount = function (e) {
                                this.mSlowCount = e;
                            }),
                            __decorate([r(cc.Label)], e.prototype, 'mTitle', void 0),
                            __decorate([r(cc.Label)], e.prototype, 'mContent', void 0),
                            __decorate([r(cc.Button)], e.prototype, 'mBotton', void 0),
                            __decorate([r(cc.Label)], e.prototype, 'mBtnTxt', void 0),
                            __decorate([r(cc.Sprite)], e.prototype, 'mDiamondIcon', void 0),
                            __decorate([r(cc.Label)], e.prototype, 'mDiamondCountTxt', void 0),
                            __decorate([r(cc.Sprite)], e.prototype, 'mGoldIcon', void 0),
                            __decorate([r(cc.Label)], e.prototype, 'mGoldCountTxt', void 0),
                            __decorate([r(cc.Sprite)], e.prototype, 'mTickeIcon', void 0),
                            __decorate([r(cc.Label)], e.prototype, 'mTickeCountTxt', void 0),
                            __decorate([r(cc.Sprite)], e.prototype, 'mDashIcon', void 0),
                            __decorate([r(cc.Label)], e.prototype, 'mDashCountTxt', void 0),
                            __decorate([r(cc.Sprite)], e.prototype, 'mSlowIcon', void 0),
                            __decorate([r(cc.Label)], e.prototype, 'mSlowCountTxt', void 0),
                            __decorate([r(cc.Sprite)], e.prototype, 'mShieldIcon', void 0),
                            __decorate([r(cc.Label)], e.prototype, 'mShieldCountTxt', void 0),
                            (e = __decorate([a], e))
                        );
                    })(cc.Component);
                (i.default = s), cc._RF.pop();
            },
            {
                '../UI/GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
            },
        ],
        Dialog: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '4120dvcrvxLHqKlHnzrE3yV', 'Dialog'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./DialogManager'),
                    n = (function () {
                        function e(e, t) {
                            (this.mContentNode = null), (this.mPrefabPath = '0'), (this.mShowListenCallBack = new Array()), (this.mDismissCallBack = new Array()), (this.mPrefabPath = e), this.setOnCreateListener(t);
                        }
                        return (
                            (e.prototype.setOnCreateListener = function (e) {
                                this.mOnCreateFinish = e;
                            }),
                            (e.prototype.getContentNode = function () {
                                return this.mContentNode;
                            }),
                            (e.prototype.onShowListen = function (e) {
                                this.mShowListenCallBack.push(e);
                            }),
                            (e.prototype.onDismissListen = function (e) {
                                this.mDismissCallBack.push(e);
                            }),
                            (e.prototype.show = function () {
                                var i = this;
                                cc.loader.loadRes(this.mPrefabPath, cc.Prefab, function (e, t) {
                                    i.showPrefab(t);
                                });
                                for (var e = 0; e < this.mShowListenCallBack.length; e++) this.mShowListenCallBack[e]();
                            }),
                            (e.prototype.dismiss = function () {
                                o.default.getIns().dimissDialog(this);
                                for (var e = 0; e < this.mDismissCallBack.length; e++) this.mDismissCallBack[e]();
                            }),
                            (e.prototype.showWithNode = function (e) {
                                (this.mContentNode = e), this.mOnCreateFinish && this.mOnCreateFinish(e), o.default.getIns().showDialog(this);
                            }),
                            (e.prototype.showPrefab = function (e) {
                                var t = cc.instantiate(e);
                                this.showWithNode(t);
                            }),
                            e
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                './DialogManager': 'DialogManager',
            },
        ],
        DiamondPopupProfab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'c2db9h+pKhA9rCe5eP+GOun', 'DiamondPopupProfab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../Logic/PlayerMgr'),
                    n = e('../UserInfoManager'),
                    a = e('../../../util/SceneMusicMgr'),
                    r = e('../GameEntraScene/BasicTouchEvent'),
                    c = e('../../../infoc/m_p2_PData_Dia'),
                    l = e('../../../infoc/m_p2_pop_coin'),
                    u = e('../../Network/Protocol/StorageUtil'),
                    d = e('../../../config/LSKey'),
                    p = e('../GameEntraScene/ToastPrefab'),
                    h = e('../../Logic/MoneySystem'),
                    f = e('../../../base/Log'),
                    m = e('../../../social/SocialHelper'),
                    g = e('../../shop/DialogNoButtonPrefab'),
                    _ = e('../GameEntraScene/PopupDlg'),
                    y = e('../../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    S = e('../../../../modules/MGAdv/scripts/Logic/MGAdvEntrance'),
                    v = e('../../../../modules/MGAdv/scripts/Logic/MGAdvDefine'),
                    I = e('../../../util/PU'),
                    T = e('../../Logic/I18nManager'),
                    C = e('../../keypad/KeypadNavigator'),
                    s = cc._decorator,
                    E = s.ccclass,
                    A = s.property,
                    P = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.diamond_count_label = null), (e.tips_layout = null), (e.mContentLayout = null), (e.mDestSprite = null), (e.mOriginSprite = null), (e.mBgLight = null), (e.mSlipActive = null), (e.mDiamondPanel = null), (e.close_btn = null), (e.get_free_diamond_btn = null), (e.mLoadingBtn = null), (e.mVideoBtn = null), (e.mVideoCountText = null), (e.mCountDownTimerBtn = null), (e.mTimerText = null), (e.mWatchVideoLayout = null), (e.mToastPrefab = null), (e.mBottomTipTxt = null), (e.mGetTicketBtn = null), (e.mDeltaTime = -1), (e.mDate = null), (e.mIsStartTimer = !1), (e.mCloseBtnClickCallback = null), (e.mGetFreeEnergyBtnCallback = null), (e.mDialogManager = null), e;
                        }
                        var s;
                        return (
                            __extends(e, t),
                            ((s = e).prototype.setCloseCallback = function (e) {
                                this.closeCallback = e;
                            }),
                            (e.prototype.setShopClickCallback = function (e) {
                                this.shopClickCallback = e;
                            }),
                            (e.prototype.onLoad = function () {
                                this.mContentLayout.getComponent(cc.Animation).play('diamond_pop_out'),
                                    o.default.Ins().addUserListener(this),
                                    this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                        e.stopPropagation();
                                    }),
                                    (this.mBgLight.node.active = !1),
                                    (this.mSlipActive.node.active = !1),
                                    (this.mLoadingBtn.node.active = !1),
                                    (this.mVideoBtn.node.active = !1),
                                    (this.mCountDownTimerBtn.node.active = !1),
                                    this.initEvent(),
                                    this.initADFeature(),
                                    this.initDialog(),
                                    I.default.isIOS() && (this.mGetTicketBtn.node.active = !1),
                                    C.default.getInstance().pushDialog(this.node);
                            }),
                            (e.prototype.initEvent = function () {
                                var e = this;
                                (this.mCloseBtnClickCallback = new r.default(function () {
                                    e.closeBtnClick();
                                })),
                                    this.close_btn.node.on(cc.Node.EventType.TOUCH_END, this.mCloseBtnClickCallback.click, this.mCloseBtnClickCallback),
                                    (this.mGetFreeEnergyBtnCallback = new r.default(function () {
                                        e.getDiamondFreeBtnClick();
                                    })),
                                    this.get_free_diamond_btn.node.on(cc.Node.EventType.TOUCH_END, this.mGetFreeEnergyBtnCallback.click, this.mGetFreeEnergyBtnCallback);
                                var t = new r.default(function () {
                                        e.mLoadingBtnClick();
                                    }),
                                    i = new r.default(function () {
                                        e.mVideoBtnClick();
                                    }),
                                    o = new r.default(function () {
                                        e.mCountDownBtnClick();
                                    }),
                                    n = new r.default(function () {
                                        e.doTicket();
                                    });
                                this.mLoadingBtn.node.on(cc.Node.EventType.TOUCH_END, t.click, t), this.mVideoBtn.node.on(cc.Node.EventType.TOUCH_END, i.click, i), this.mCountDownTimerBtn.node.on(cc.Node.EventType.TOUCH_END, o.click, o), this.mGetTicketBtn.node.on(cc.Node.EventType.TOUCH_END, n.click, n);
                            }),
                            (e.prototype.initADFeature = function () {
                                m.SocialHelper.onShowListen(this.onWxShow), I.default.isWeiXin() || S.MGAdv.load(v.ADScene.GET_DIAMOND_POPUP, v.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK), S.MGAdv.isADFeatureEnable() && ((this.mWatchVideoLayout.node.active = !0), (this.mContentLayout.node.height = 635), this.startGetServerTime(), (this.mBottomTipTxt.string = T.default.getInstance().getLanguageByKey('label_text.watch_video_invite_tips')));
                            }),
                            (e.prototype.onWxShow = function (e) {
                                f.default.isDebug();
                                try {
                                    this.startGetServerTime();
                                } catch (e) {}
                            }),
                            (e.prototype.startGetServerTime = function () {
                                var e = this;
                                (this.mLoadingBtn.node.active = !0),
                                    this.getSeverTimestamp(),
                                    (this.mLoadingTimerHandle = setInterval(function () {
                                        f.default.isDebug(), e.mServerDayStr || e.getSeverTimestamp();
                                    }, 3e3));
                            }),
                            (e.prototype.getSeverTimestamp = function () {
                                var r = this;
                                y.MGUser.getCurrentServerRealTime({
                                    success: function (e) {
                                        (r.mServerTimestamp = e), clearInterval(r.mLoadingTimerHandle), (r.mLoadingBtn.node.active = !1);
                                        var t = new Date(r.mServerTimestamp),
                                            i = t.getMonth(),
                                            o = t.getDate();
                                        r.mServerDayStr = t.getFullYear().toString() + '-' + (i < 9 ? '0' + i : '' + i) + '-' + (o < 10 ? '0' + o : '' + o);
                                        var n = u.default.read(d.default.HOME_WATCH_VIDEO_REMAINING_TIMES_THE_DAY);
                                        if ((f.default.isDebug(), n)) {
                                            var a = n.split(s.SEPERATE_CHAR);
                                            (r.mCacheDayStr = a[0]), r.mServerDayStr == r.mCacheDayStr ? (r.mCacheVideoCount = parseInt(a[1])) : (r.mCacheVideoCount = s.DEFAULT_VIDEO_COUNT);
                                        } else (r.mCacheDayStr = ''), (r.mCacheVideoCount = s.DEFAULT_VIDEO_COUNT);
                                        f.default.isDebug(), r.updateVideoBtnState();
                                    },
                                });
                            }),
                            (e.prototype.updateVideoBtnState = function () {
                                if (0 < this.mCacheVideoCount) (this.mVideoBtn.node.active = !0), (this.mCountDownTimerBtn.node.active = !1), (this.mVideoCountText.string = T.default.getInstance().getLanguageByKey('label_text.free') + '(' + this.mCacheVideoCount.toString() + ')');
                                else {
                                    (this.mDate = new Date(this.mServerTimestamp)), this.mDate.setHours(23, 59, 59, 999);
                                    var e = this.mDate.getTime();
                                    this.mDate.setHours(0, 0, 0, 0);
                                    var t = this.mDate.getTime();
                                    (this.mDeltaTime = t + e - this.mServerTimestamp), this.updateCountDownTimerText(this.mDeltaTime), (this.mVideoBtn.node.active = !1), (this.mCountDownTimerBtn.node.active = !0), (this.mIsStartTimer = !0), C.default.getInstance().refreshPage(this.node);
                                }
                            }),
                            (e.prototype.updateCountDownTimerText = function (e) {
                                this.mDate.setTime(e);
                                var t,
                                    i,
                                    o,
                                    n = this.mDate.getHours(),
                                    a = this.mDate.getMinutes(),
                                    r = this.mDate.getSeconds();
                                (t = n < 10 ? '0' + n : n.toString()), (i = a < 10 ? '0' + a : a.toString()), (o = r < 10 ? '0' + r : r.toString()), (this.mTimerText.string = t + ':' + i + ':' + o);
                            }),
                            (e.prototype.stopAllTimer = function () {
                                clearInterval(this.mLoadingTimerHandle), (this.mIsStartTimer = !1);
                            }),
                            (e.prototype.showToastTips = function (e, t) {
                                try {
                                    var i = cc.instantiate(this.mToastPrefab);
                                    i.getComponent(p.default).showTips(e, function () {
                                        i.destroy(), t && t();
                                    }),
                                        this.tips_layout.node.addChild(i);
                                } catch (e) {}
                            }),
                            (e.prototype.start = function () {}),
                            (e.prototype.update = function (e) {
                                if (this.mIsStartTimer) {
                                    if (((this.mDeltaTime -= 1e3 * e), this.mDeltaTime <= 0)) return (this.mIsStartTimer = !1), void this.startGetServerTime();
                                    this.updateCountDownTimerText(this.mDeltaTime);
                                }
                            }),
                            (e.prototype.onDestroy = function () {
                                this.stopAllTimer(), m.SocialHelper.offShowListen(this.onWxShow), (this.mServerDayStr = null), o.default.Ins().removeUserListener(this), a.default.stop(a.default.NAME_BUY_DIAMOND), C.default.getInstance().popDialog(this.node);
                            }),
                            (e.prototype.onChange = function (e, t, i, o, n) {
                                this.diamond_count_label.string = '' + i;
                            }),
                            (e.prototype.closeBtnClick = function () {
                                l.default.report(l.default.SCENE_GET_DIAMOND_DIALOG, this.mSource, l.default.ACTION_CLICK_DIALOG_CLOSE_BTN), this.closeCallback && this.closeCallback(), this.stopAllTimer();
                            }),
                            (e.prototype.updateDimondCountLabel = function () {
                                this.diamond_count_label.string = n.User.UserInfoManager.getUserInfo().diamond + '';
                            }),
                            (e.prototype.mLoadingBtnClick = function () {
                                T.default.getInstance().getLanguageByKey('label_text.netnotok');
                                l.default.report(l.default.SCENE_GET_DIAMOND_DIALOG, this.mSource, l.default.ACTION_CLICK_LOADING_BTN);
                            }),
                            (e.prototype.mVideoBtnClick = function () {
                                var i = this;
                                if ((l.default.report(l.default.SCENE_GET_DIAMOND_DIALOG, this.mSource, l.default.ACTION_CLICK_WATCH_VIDEO), S.MGAdv.isADCached(v.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK))) {
                                    var e = v.ADScene.GET_DIAMOND_POPUP;
                                    S.MGAdv.show(e, v.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK, function (e) {
                                        switch (e) {
                                            case v.ADStat.NOT_NETWORK:
                                                var t = T.default.getInstance().getLanguageByKey('label_text.netnotok');
                                                i.showToastTips(t);
                                                break;
                                            case v.ADStat.SHOW_SUCCESS_CLOSE:
                                                i.increaseDiamond();
                                                break;
                                            case v.ADStat.SHOW_NOT_ENED_CLOSE:
                                                break;
                                            case v.ADStat.SHOW_GET_AD_FAILED:
                                                i.showToastTips('No video ads available');
                                        }
                                    });
                                } else {
                                    var t = T.default.getInstance().getLanguageByKey('label_text.noadrevivefree');
                                    this.showToastTips(t), I.default.isWeiXin() || S.MGAdv.load(v.ADScene.GET_DIAMOND_POPUP, v.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK);
                                }
                            }),
                            (e.prototype.increaseDiamond = function () {
                                var e = this;
                                this.mCacheVideoCount -= 1;
                                var t = this.mServerDayStr + s.SEPERATE_CHAR + this.mCacheVideoCount;
                                u.default.save(d.default.HOME_WATCH_VIDEO_REMAINING_TIMES_THE_DAY, t),
                                    f.default.isDebug(),
                                    c.default.report(2, c.default.SOURCE_HOME_WATCH_VIDEO_GET_DIAMOND, c.default.ACTION_GET_DIAMOND),
                                    setTimeout(function () {
                                        h.MoneySystem.increaseDiamond(2),
                                            (e.mBgLight.node.active = !0),
                                            (e.mSlipActive.node.active = !0),
                                            (e.mDestSprite.node.active = !1),
                                            a.default.play(a.default.NAME_BUY_DIAMOND, a.default.PATH_BUY_DIAMOND, !1),
                                            e.scheduleOnce(function () {
                                                e.playBuyDiamondAnim(e.mOriginSprite);
                                            }, 0.1),
                                            e.scheduleOnce(function () {
                                                e.playBuyDiamondAnim(e.mOriginSprite, function () {
                                                    e.updateDimondCountLabel(), (e.mDestSprite.node.active = !0), (e.mBgLight.node.active = !1), (e.mSlipActive.node.active = !1), e.startGetServerTime();
                                                });
                                            }, 0.2);
                                    }, 500);
                            }),
                            (e.prototype.mCountDownBtnClick = function () {
                                T.default.getInstance().isEnglish() ? this.showToastTips('No chance left today. Come back tomorrow') : this.showToastTips('看视频获钻石次数已用完，请明日再来'), l.default.report(l.default.SCENE_GET_DIAMOND_DIALOG, this.mSource, l.default.ACTION_CLICK_COUNT_FULL_BTN);
                            }),
                            (e.prototype.doTicket = function () {
                                l.default.report(l.default.SCENE_GET_DIAMOND_DIALOG, this.mSource, l.default.ACTION_CLICK_SHOP_BTN), I.default.isIOS() ? this.showIOSNotSupportDialog() : this.shopClickCallback && this.shopClickCallback();
                            }),
                            (e.prototype.initDialog = function () {
                                (this.mDialogManager = new _.PopupDlg()), this.mDialogManager.setParentLayout(this.tips_layout.node);
                            }),
                            (e.prototype.showIOSNotSupportDialog = function () {
                                var o = this;
                                this.mDialogManager.showPopupDlgDynamic('prefab/shop/DialogNoButtonPrefab', function (e) {
                                    if (cc.isValid(o, !0) && e) {
                                        var t = e.getComponent(g.default);
                                        t.setCloseCallback(function () {
                                            o.mDialogManager.dismissDialog(e);
                                        }),
                                            t.setShowLoading(!1);
                                        var i = T.default.getInstance().getLanguageByKey('label_text.shop_tip2');
                                        t.setContent('<color=#3B5D72>' + i + '</c>');
                                    }
                                });
                            }),
                            (e.prototype.getDiamondFreeBtnClick = function () {}),
                            (e.prototype.playBuyDiamondAnim = function (e, t) {
                                var i = new cc.Node();
                                (i.width = 56), (i.height = 56);
                                var o = e.node.parent.convertToWorldSpaceAR(e.node.getPosition()),
                                    n = this.node.convertToNodeSpaceAR(o);
                                i.setPosition(n), (i.addComponent(cc.Sprite).spriteFrame = e.spriteFrame);
                                var a = this.mBgLight.node.parent.convertToWorldSpaceAR(this.mBgLight.node.getPosition()),
                                    r = this.node.convertToNodeSpaceAR(a);
                                this.node.addChild(i);
                                var s = r.x - i.x,
                                    c = r.y - i.y,
                                    l = [cc.p(r.x - 0.3 * s, r.y - 0.8 * c), cc.p(r.x - 0 * s, r.y - 0.3 * c), cc.p(r.x, r.y)],
                                    u = cc.bezierTo(0.2, l),
                                    d = cc.fadeTo(0.01, 0),
                                    p = cc.sequence(
                                        u,
                                        d,
                                        cc.callFunc(function () {
                                            t && t();
                                        }),
                                    );
                                i.runAction(p);
                            }),
                            (e.prototype.setSource = function (e) {
                                this.mSource = e;
                            }),
                            (e.prototype.getSource = function () {
                                return this.mSource;
                            }),
                            (e.DEFAULT_VIDEO_COUNT = 6),
                            (e.SEPERATE_CHAR = '#'),
                            __decorate([A(cc.Label)], e.prototype, 'diamond_count_label', void 0),
                            __decorate([A(cc.Layout)], e.prototype, 'tips_layout', void 0),
                            __decorate([A(cc.Layout)], e.prototype, 'mContentLayout', void 0),
                            __decorate([A(cc.Sprite)], e.prototype, 'mDestSprite', void 0),
                            __decorate([A(cc.Sprite)], e.prototype, 'mOriginSprite', void 0),
                            __decorate([A(cc.Sprite)], e.prototype, 'mBgLight', void 0),
                            __decorate([A(cc.Sprite)], e.prototype, 'mSlipActive', void 0),
                            __decorate([A(cc.Node)], e.prototype, 'mDiamondPanel', void 0),
                            __decorate([A(cc.Button)], e.prototype, 'close_btn', void 0),
                            __decorate([A(cc.Button)], e.prototype, 'get_free_diamond_btn', void 0),
                            __decorate([A(cc.Button)], e.prototype, 'mLoadingBtn', void 0),
                            __decorate([A(cc.Button)], e.prototype, 'mVideoBtn', void 0),
                            __decorate([A(cc.Label)], e.prototype, 'mVideoCountText', void 0),
                            __decorate([A(cc.Button)], e.prototype, 'mCountDownTimerBtn', void 0),
                            __decorate([A(cc.Label)], e.prototype, 'mTimerText', void 0),
                            __decorate([A(cc.Layout)], e.prototype, 'mWatchVideoLayout', void 0),
                            __decorate([A(cc.Prefab)], e.prototype, 'mToastPrefab', void 0),
                            __decorate([A(cc.Label)], e.prototype, 'mBottomTipTxt', void 0),
                            __decorate([A(cc.Button)], e.prototype, 'mGetTicketBtn', void 0),
                            (e = s = __decorate([E], e))
                        );
                    })(cc.Component);
                (i.default = P), cc._RF.pop();
            },
            {
                '../../../../modules/MGAdv/scripts/Logic/MGAdvDefine': 'MGAdvDefine',
                '../../../../modules/MGAdv/scripts/Logic/MGAdvEntrance': 'MGAdvEntrance',
                '../../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../../base/Log': 'Log',
                '../../../config/LSKey': 'LSKey',
                '../../../infoc/m_p2_PData_Dia': 'm_p2_PData_Dia',
                '../../../infoc/m_p2_pop_coin': 'm_p2_pop_coin',
                '../../../social/SocialHelper': 'SocialHelper',
                '../../../util/PU': 'PU',
                '../../../util/SceneMusicMgr': 'SceneMusicMgr',
                '../../Logic/I18nManager': 'I18nManager',
                '../../Logic/MoneySystem': 'MoneySystem',
                '../../Logic/PlayerMgr': 'PlayerMgr',
                '../../Network/Protocol/StorageUtil': 'StorageUtil',
                '../../keypad/KeypadNavigator': 'KeypadNavigator',
                '../../shop/DialogNoButtonPrefab': 'DialogNoButtonPrefab',
                '../GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
                '../GameEntraScene/PopupDlg': 'PopupDlg',
                '../GameEntraScene/ToastPrefab': 'ToastPrefab',
                '../UserInfoManager': 'UserInfoManager',
            },
        ],
        Dictionary: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '6e639CjovxLYoD7cLm0N09H', 'Dictionary'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = function (e, t) {
                    (this.key = null), (this.value = null), (this.key = e), (this.value = t);
                };
                i.Pair = o;
                var n = (function () {
                    function e() {
                        this.arr = [];
                    }
                    return (
                        (e.prototype.put = function (e, t) {
                            for (var i = 0; i < this.arr.length; i++) if (this.arr[i].key === e) return void (this.arr[i].value = t);
                            this.arr.push(new o(e, t));
                        }),
                        (e.prototype.get = function (e) {
                            for (var t = 0; t < this.arr.length; t++) if (this.arr[t].key === e) return this.arr[t].value;
                            return null;
                        }),
                        (e.prototype.remove = function (e) {
                            for (var t = 0; t < this.arr.length; t++) if (this.arr[t].key === e) return void this.arr.splice(t, 1);
                        }),
                        (e.prototype.clear = function () {
                            this.arr = [];
                        }),
                        (e.prototype.size = function () {
                            return this.arr.length;
                        }),
                        (e.prototype.getPairs = function () {
                            return this.arr;
                        }),
                        e
                    );
                })();
                i.Dictionary = n;
                var a = (function () {
                    function e(e) {
                        void 0 === e && (e = null),
                            (this.arr = []),
                            (this.cmp =
                                e ||
                                function (e, t) {
                                    return e === t;
                                });
                    }
                    return (
                        (e.prototype.copy = function (e) {
                            this.clear();
                            for (var t = 0, i = e.arr.length; t < i; ++t) {
                                var o = e.arr[t];
                                this.put(o.key, o.value);
                            }
                        }),
                        (e.prototype.put = function (e, t) {
                            for (var i = 0; i < this.arr.length; i++) if (0 === this.cmp(this.arr[i].key, e)) return void (this.arr[i].value = t);
                            this.arr.push(new o(e, t));
                        }),
                        (e.prototype.get = function (e) {
                            for (var t = 0; t < this.arr.length; t++) if (0 === this.cmp(this.arr[t].key, e)) return this.arr[t].value;
                            return null;
                        }),
                        (e.prototype.remove = function (e) {
                            for (var t = 0; t < this.arr.length; t++) if (0 === this.cmp(this.arr[t].key, e)) return void this.arr.splice(t, 1);
                        }),
                        (e.prototype.clear = function () {
                            this.arr = [];
                        }),
                        (e.prototype.size = function () {
                            return this.arr.length;
                        }),
                        (e.prototype.getPairs = function () {
                            return this.arr;
                        }),
                        e
                    );
                })();
                (i.Dictionary2 = a), cc._RF.pop();
            },
            {},
        ],
        DownLoadingPrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '0d570iQc5xEKKaNXrWua/pR', 'DownLoadingPrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../UI/GameEntraScene/BasicTouchEvent'),
                    n = e('../Logic/EventBus'),
                    a = e('../Logic/NotifyEvent'),
                    r = cc._decorator,
                    s = r.ccclass,
                    c = r.property,
                    l = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.download_label = null), (e.cancel_btn = null), (e.progressbar = null), (e.mLoadingTips = null), (e.mCancelClickCallback = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.setCancelCallback = function (e) {
                                this.cancelCallback = e;
                            }),
                            (e.prototype.setLoadingTips = function (e) {
                                this.mLoadingTips = e;
                            }),
                            (e.prototype.onLoad = function () {
                                this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                }),
                                    this.initEvent(),
                                    n.default.register(a.default.LOADING_DOWNLOAD, this.downloading, this);
                            }),
                            (e.prototype.downloading = function (e, t) {
                                t && 2 <= t.length && null != t[1] && 0 <= t[1] && t[1] <= 1 && ((this.progressbar.progress = t[1]), (this.download_label.string = (null == this.mLoadingTips ? '正在加载皮肤文件...' : this.mLoadingTips) + Math.round(100 * t[1]) + '%'));
                            }),
                            (e.prototype.onDestroy = function () {
                                n.default.remove(a.default.LOADING_DOWNLOAD, this.downloading, this);
                            }),
                            (e.prototype.initEvent = function () {
                                var e = this;
                                (this.mCancelClickCallback = new o.default(function () {
                                    e.cancelClick();
                                })),
                                    this.cancel_btn.node.on(cc.Node.EventType.TOUCH_END, this.mCancelClickCallback.click, this.mCancelClickCallback);
                            }),
                            (e.prototype.cancelClick = function () {
                                this.cancelCallback && this.cancelCallback();
                            }),
                            (e.prototype.start = function () {
                                this.getComponent(cc.Animation).play('dowanloading_popup');
                            }),
                            __decorate([c(cc.Label)], e.prototype, 'download_label', void 0),
                            __decorate([c(cc.Button)], e.prototype, 'cancel_btn', void 0),
                            __decorate([c(cc.ProgressBar)], e.prototype, 'progressbar', void 0),
                            (e = __decorate([s], e))
                        );
                    })(cc.Component);
                (i.default = l), cc._RF.pop();
            },
            {
                '../Logic/EventBus': 'EventBus',
                '../Logic/NotifyEvent': 'NotifyEvent',
                '../UI/GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
            },
        ],
        Downloader: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'ce601WAAUtMtKsC/1LVkesf', 'Downloader'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var l = e('../base/Log'),
                    u = e('../LogicPlatform/PlatformProxy'),
                    d = e('../util/PU'),
                    o = (function () {
                        function s() {
                            (this.mDownloadInfo = new Object()), (this.mDownloadTask = new Object()), (this.mUICancel = new Object());
                        }
                        return (
                            (s.Ins = function () {
                                return null == s._instance && (s._instance = new s()), s._instance;
                            }),
                            (s.prototype.download = function (i, o, n) {
                                var a = this;
                                if ((void 0 === o && (o = 3), null == i || null == i))
                                    return new Promise(function (e, t) {
                                        e();
                                    });
                                var r = i.getUniqueKey();
                                return new Promise(function (t, e) {
                                    a.doUpdateLoop(
                                        r,
                                        i,
                                        o,
                                        function (e) {
                                            delete a.mUICancel[r], delete a.mDownloadInfo[r], delete a.mDownloadTask[r], t(e);
                                        },
                                        function () {
                                            l.default.w('下载失败。。。。', i), delete a.mUICancel[r], delete a.mDownloadInfo[r], delete a.mDownloadTask[r], e();
                                        },
                                        n,
                                    );
                                });
                            }),
                            (s.prototype.cancelDownload = function (e) {
                                var t = e.getUniqueKey();
                                if ((l.default.i('开始取消下载：' + t), (this.mUICancel[t] = 'cancel'), t in this.mDownloadTask)) {
                                    var i = this.mDownloadTask[t];
                                    i && (i.abort(), l.default.i('取消下载：' + t));
                                }
                            }),
                            (s.prototype.doUpdateLoop = function (e, t, i, o, n, a) {
                                var r = this,
                                    s = i;
                                if ((isNaN(s) && (s = 3), e in this.mUICancel)) return l.default.i('UI 取消1。。。。' + e), void n();
                                this.updateAsync(
                                    e,
                                    t,
                                    0,
                                    s,
                                    function (e) {
                                        o(e);
                                    },
                                    function () {
                                        r.loopSongRejectCallback(e, t, 0, s, o, n, a);
                                    },
                                    a,
                                );
                            }),
                            (s.prototype.loopSongRejectCallback = function (e, t, i, o, n, a, r) {
                                if (e in this.mUICancel) return l.default.i('UI 取消2。。。。' + e), void a();
                                o < ++i ? (l.default.l(s.TAG + 'loopSongRejectCallback reach max retry times.'), a()) : this.updateAsync(e, t, i, o, n, a, r);
                            }),
                            (s.prototype.isUICanceled = function (e) {
                                return e in this.mUICancel;
                            }),
                            (s.prototype.updateAsync = function (e, n, t, i, a, r, s) {
                                var c = this,
                                    o = this.downloadFile(
                                        n.url,
                                        n.size,
                                        !1,
                                        n.md5,
                                        function (o) {
                                            c.isUICanceled(e)
                                                ? r()
                                                : u.default
                                                      .Ins()
                                                      .getFileSystemManager()
                                                      .getFileInfo({
                                                          filePath: o,
                                                          success: function (e) {
                                                              var t = e.size,
                                                                  i = !1;
                                                              d.default.isQQ() && ((n.size != t && n.size != t - 1) || (i = !0)),
                                                                  l.default.w('after getfileinfo: size=' + t + ' /target_size=' + n.size + ' skipUnZip=' + s),
                                                                  t == n.size || i
                                                                      ? s
                                                                          ? a(o)
                                                                          : u.default.Ins().unZip(
                                                                                o,
                                                                                '',
                                                                                function () {
                                                                                    a();
                                                                                },
                                                                                function () {
                                                                                    l.default.i('unzip failed ' + n.getUniqueKey()), r();
                                                                                },
                                                                            )
                                                                      : r();
                                                          },
                                                          fail: function (e) {
                                                              l.default.i('getFileInfo, error: ', e), r();
                                                          },
                                                      });
                                        },
                                        function () {
                                            r();
                                        },
                                    );
                                this.mDownloadTask[e] = o;
                            }),
                            (s.prototype.downloadFile = function (e, t, i, o, n, a) {
                                return (
                                    void 0 === i && (i = !1),
                                    void 0 === o && (o = ''),
                                    u.default.Ins().downloadFile(
                                        e,
                                        function (e) {
                                            n(e);
                                        },
                                        function () {
                                            a();
                                        },
                                        t,
                                        !0,
                                    )
                                );
                            }),
                            (s.prototype.unZipFile = function (i) {
                                return new Promise(function (e, t) {
                                    i
                                        ? u.default.Ins().unZip(
                                              i,
                                              '',
                                              function () {
                                                  l.default.i('unzip success  ' + i), console.warn('--- unZipFile success ---'), e();
                                              },
                                              function () {
                                                  l.default.i('unzip failed ' + i), console.warn('--- unZipFile failed ---'), t();
                                              },
                                          )
                                        : e();
                                });
                            }),
                            (s._instance = null),
                            (s.TAG = 'ResDownloader  => '),
                            s
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../LogicPlatform/PlatformProxy': 'PlatformProxy',
                '../base/Log': 'Log',
                '../util/PU': 'PU',
            },
        ],
        EMap: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '23f21WqzFtPSoR3yz3+u8dZ', 'EMap'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./Enumerator'),
                    r = e('./KeyValuePair'),
                    n = (function () {
                        function e() {
                            (this._keys = []), (this._values = []);
                        }
                        return (
                            Object.defineProperty(e.prototype, 'size', {
                                get: function () {
                                    return this._keys.length;
                                },
                                enumerable: !0,
                                configurable: !0,
                            }),
                            (e.prototype.set = function (e, t) {
                                var i = this._keys,
                                    o = i.indexOf(e);
                                return -1 === o && (i[(o = i.length)] = e), (this._values[o] = t), this;
                            }),
                            (e.prototype.get = function (e) {
                                var t = this._keys.indexOf(e);
                                return -1 !== t ? this._values[t] : void 0;
                            }),
                            (e.prototype.has = function (e) {
                                return -1 !== this._keys.indexOf(e);
                            }),
                            (e.prototype.delete = function (e) {
                                var t = this._keys.indexOf(e);
                                return -1 !== t && (this._keys.splice(t, 1), this._values.splice(t, 1), !0);
                            }),
                            (e.prototype.clear = function () {
                                (this._keys.length = 0), (this._values.length = 0);
                            }),
                            (e.prototype.getEnumerator = function () {
                                var e = this.entries();
                                return new o.Enumerator(e);
                            }),
                            (e.prototype.forEach = function (e, t) {
                                for (var i = this._keys, o = this._values, n = 0, a = i.length; n < a; n++) e.call(t, new r.KeyValuePair(i[n], o[n]), this);
                            }),
                            (e.prototype.keys = function () {
                                return this._keys.concat();
                            }),
                            (e.prototype.values = function () {
                                return this._values.concat();
                            }),
                            (e.prototype.entries = function () {
                                var i = new Array();
                                return (
                                    this.forEach(function (e, t) {
                                        i.push(new r.KeyValuePair(e.key, e.value));
                                    }),
                                    i
                                );
                            }),
                            (e.prototype.toString = function () {
                                var i = Object.create(null);
                                return (
                                    this.forEach(function (e, t) {
                                        i[e.key] = e.value;
                                    }),
                                    JSON.stringify(i)
                                );
                            }),
                            e
                        );
                    })();
                (i.Map = n), cc._RF.pop();
            },
            {
                './Enumerator': 'Enumerator',
                './KeyValuePair': 'KeyValuePair',
            },
        ],
        EasyReport: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '8a474ACdaZN8Iaipcafw5UH', 'EasyReport'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (i) {
                    function e(e) {
                        var t = i.call(this) || this;
                        return (t.data = new Object()), (t.tabId = e), t;
                    }
                    return (
                        __extends(e, i),
                        (e.prototype.getTableID = function () {
                            return this.tabId;
                        }),
                        (e.prototype.add = function (e, t) {
                            return (this.data[e] = t), this;
                        }),
                        (e.prototype.report = function () {
                            try {
                                for (var e in this.data) i.prototype.set.call(this, e, this.data[e]);
                                this.reportData();
                            } catch (e) {
                                console.warn('report ' + this.tabId + ' failed. e = ' + e);
                            }
                        }),
                        e
                    );
                })(e('./BIReportI').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './BIReportI': 'BIReportI',
            },
        ],
        EconomyPlugin: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'df28exrAtNM8Z8MRPnRY2Zi', 'EconomyPlugin'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./IPlugin'),
                    a = e('../LevelMgr'),
                    r = e('../Level'),
                    s = e('../../DB/DBMgr'),
                    n = e('../PlayerMgr'),
                    c = (function (t) {
                        function e() {
                            var e = t.call(this) || this;
                            return (e.m_bSale = !1), (e.m_saleTime = 0), (e.m_CurGainDiamond = 0), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.getKind = function () {
                                return o.default.Plugin_Economy;
                            }),
                            (e.prototype.increaseGold = function (e) {
                                if (!e) return 0;
                                var t = 0,
                                    i = a.LevelMgr.Ins().getLevel(e.mId);
                                if (i) {
                                    var o = i.music;
                                    switch (i.type) {
                                        case r.eLevelKind.eLevel_Normal:
                                        case r.eLevelKind.eLevel_Gold:
                                        case r.eLevelKind.eLevel_Choiceness:
                                            if (e.mIsFirstBlood) {
                                                var n = a.LevelMgr.Ins().getClearanceAward(e.mId).getAward(1);
                                                n && (t += n.gold);
                                            }
                                            t += this.gainGoldByIncrease(o.musicLevel, e.mScore, !1);
                                    }
                                }
                                return 0 != t && this.gainGold(t, 'CEconomyPlugin::IncreaseGold'), t;
                            }),
                            (e.prototype.gainGoldByIncrease = function (e, t, i) {
                                var o = s.default.Ins().getDBRow(s.eDataBase.eDB_gold, e + ''),
                                    n = 0,
                                    a = 0,
                                    r = 0;
                                return o && (i ? ((n = Math.floor(t * o.getPvpGold1())), (a = o.getPvpMaxGold())) : ((n = Math.floor(t * o.getGold())), (a = o.getMaxGold())), (r = a < n ? a : n)), r;
                            }),
                            (e.prototype.gainGold = function (e, t) {
                                this.saveGold(e);
                            }),
                            (e.prototype.getFactor = function (e) {
                                switch (e) {
                                    case 1:
                                        return 1.1;
                                    case 2:
                                        return 1.2;
                                    case 3:
                                        return 1.3;
                                    case 4:
                                        return 1.5;
                                    case 5:
                                        return 1.7;
                                    case 6:
                                        return 1.9;
                                    case 7:
                                        return 2.1;
                                    case 8:
                                        return 2.4;
                                    case 9:
                                        return 2.7;
                                    case 10:
                                        return 3;
                                    default:
                                        return 0;
                                }
                            }),
                            (e.prototype.upperLimitGold = function (e, t) {
                                switch (e) {
                                    case 1:
                                        return t ? 12 : 5;
                                    case 2:
                                        return t ? 14 : 6;
                                    case 3:
                                        return t ? 17 : 7;
                                    case 4:
                                        return t ? 20 : 8;
                                    case 5:
                                        return t ? 22 : 9;
                                    case 6:
                                        return t ? 24 : 10;
                                    case 7:
                                        return t ? 26 : 11;
                                    case 8:
                                        return t ? 28 : 12;
                                    case 9:
                                        return t ? 31 : 13;
                                    case 10:
                                        return t ? 36 : 15;
                                    default:
                                        return 0;
                                }
                            }),
                            (e.prototype.lowLimitScore = function (e) {
                                return e ? 40 : 100;
                            }),
                            (e.prototype.saveGold = function (e) {
                                var t = n.default.Ins(),
                                    i = t.getUserCoin();
                                (i = 0 < (i += e) ? i : 0), t.setUserCoin(i);
                            }),
                            (e.prototype.getCurGold = function () {
                                return n.default.Ins().getUserCoin();
                            }),
                            (e.prototype.getCurDiamond = function () {
                                return n.default.Ins().getUserDiamond();
                            }),
                            (e.prototype.gainDiamond = function (e) {
                                (this.m_CurGainDiamond = e), this.saveDiamond(e);
                            }),
                            (e.prototype.addDiamond = function (e) {
                                this.m_CurGainDiamond = e;
                                var t = n.default.Ins(),
                                    i = t.getUserDiamond();
                                (i = 0 < (i += e) ? i : 0), t.setUserDiamond(i);
                            }),
                            (e.prototype.costDiamond = function (e) {
                                return e <= this.getCurDiamond() && (this.gainDiamond(-e), !0);
                            }),
                            (e.prototype.saveDiamond = function (e) {
                                var t = n.default.Ins(),
                                    i = t.getUserDiamond();
                                (i = 0 < (i += e) ? i : 0), t.setUserDiamond(i);
                            }),
                            e
                        );
                    })(o.default);
                (i.default = c), cc._RF.pop();
            },
            {
                '../../DB/DBMgr': 'DBMgr',
                '../Level': 'Level',
                '../LevelMgr': 'LevelMgr',
                '../PlayerMgr': 'PlayerMgr',
                './IPlugin': 'IPlugin',
            },
        ],
        EffectData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'd5f06BSj09M2ZPxBlvXwyIg', 'EffectData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.findId = function (e) {
                                return this.find('Id', e);
                            }),
                            (t.prototype.getRow = function () {
                                return new a();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.EffectData = n;
                var a = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getId = function () {
                            return this.getInt('Id');
                        }),
                        (t.prototype.getEffectId = function () {
                            return this.getString('effectId');
                        }),
                        (t.prototype.getValue = function () {
                            return this.getFloat('value');
                        }),
                        (t.prototype.getisPercent = function () {
                            return 1 == this.getInt('isPercent');
                        }),
                        (t.prototype.getDesc = function () {
                            return this.getString('desc');
                        }),
                        t
                    );
                })(o.default);
                (i.EffectRow = a), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        Emitter: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '23d6bV9y4pGnbZm2Nuq1CNa', 'Emitter'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {
                        this.listeners = {};
                    }
                    return (
                        (e.prototype.register = function (e, t, i) {
                            this.listeners[e] || (this.listeners[e] = []), this.listeners[e].push(new n(t, i));
                        }),
                        (e.prototype.remove = function (e, t, i) {
                            var o = this.listeners[e];
                            if (o) {
                                for (var n = o.length, a = 0; a < n; a++) {
                                    if (o[a].compar(i)) {
                                        o.splice(a, 1);
                                        break;
                                    }
                                }
                                0 == o.length && delete this.listeners[e];
                            }
                        }),
                        (e.prototype.fire = function (e) {
                            for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
                            var o = this.listeners[e];
                            if (o)
                                for (var n = o.length, a = 0; a < n; a++) {
                                    var r = o[a];
                                    r && r.notify.apply(r, [e].concat(t));
                                }
                        }),
                        e
                    );
                })();
                i.Emitter = o;
                var n = (function () {
                    function e(e, t) {
                        (this.callback = null), (this.context = null);
                        (this.callback = e), (this.context = t);
                    }
                    return (
                        (e.prototype.notify = function () {
                            for (var e, t = [], i = 0; i < arguments.length; i++) t[i] = arguments[i];
                            this.callback && (e = this.callback).call.apply(e, [this.context].concat(t));
                        }),
                        (e.prototype.compar = function (e) {
                            return e == this.context;
                        }),
                        e
                    );
                })();
                cc._RF.pop();
            },
            {},
        ],
        EmptyPagePrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'd5b775VrGRFvbsAMbW+r1ed', 'EmptyPagePrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('../../../../util/SingleWorker'),
                    o = e('./MainpageBaseComponent'),
                    a = cc._decorator,
                    r = a.ccclass,
                    s = a.property,
                    c = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mLoadingSprite = null), (e.isCreated = !1), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.onload = function () {}),
                            (e.prototype.playLoadAnim = function () {
                                this.mLoadingSprite.node.active = !0;
                                var e = this.getComponent(cc.Animation);
                                e && e.play('skin_loading');
                            }),
                            (e.prototype.loadFinish = function () {
                                var e = this.getComponent(cc.Animation);
                                e && e.stop(), (this.mLoadingSprite.node.active = !1);
                            }),
                            (e.prototype.loadUI = function () {
                                var i = this,
                                    o = this;
                                if (!o.isCreated) {
                                    o.playLoadAnim();
                                    var e = 'empty-page-loadui-' + o.mItem.getType();
                                    n.default.doWork(
                                        e,
                                        function () {
                                            return o.mItem.buildContent();
                                        },
                                        function (e, t) {
                                            cc.isValid(o, !0) && t && ((o.isCreated = !0), o.loadFinish(), (i.mNode = t), o.node.addChild(t));
                                        },
                                    );
                                }
                            }),
                            (e.prototype.onShow = function () {
                                this.loadUI();
                            }),
                            (e.prototype.release = function () {
                                if (this.mNode) {
                                    var e = this.mNode.getComponent(o.default);
                                    e && e.destroy(), this.mNode.removeFromParent(!0);
                                }
                                this.isCreated = !1;
                            }),
                            (e.prototype.setData = function (e) {
                                this.mItem = e;
                            }),
                            __decorate([s(cc.Sprite)], e.prototype, 'mLoadingSprite', void 0),
                            (e = __decorate([r], e))
                        );
                    })(cc.Component);
                (i.default = c), cc._RF.pop();
            },
            {
                '../../../../util/SingleWorker': 'SingleWorker',
                './MainpageBaseComponent': 'MainpageBaseComponent',
            },
        ],
        EnergyBuyDialogItem: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '03020P/rq5AB7Tj/XTgX+bv', 'EnergyBuyDialogItem'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../GameEntraScene/BasicTouchEvent'),
                    n = e('../../../../modules/MGAdv/scripts/Logic/MGAdvEntrance'),
                    a = e('../../../../modules/MGAdv/scripts/Logic/MGAdvDefine'),
                    r = e('../../../util/PU'),
                    s = cc._decorator,
                    c = s.ccclass,
                    l = s.property,
                    u = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mGetFreeEnergyBtnClickCallback = null), (e.mGetEnergy2BtnClickCallback = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.setFreeCallback = function (e) {
                                this.mFreeGetCallback = e;
                            }),
                            (e.prototype.setBuyCallback = function (e) {
                                this.mBuyEnergyCallback = e;
                            }),
                            (e.prototype.onLoad = function () {
                                this.initViews(), this.initEvents();
                            }),
                            (e.prototype.setType = function (e) {
                                this.mType = e;
                            }),
                            (e.prototype.initEvents = function () {
                                var e = this;
                                (this.mGetFreeEnergyBtnClickCallback = new o.default(function () {
                                    e.mFreeGetCallback && e.mFreeGetCallback();
                                })),
                                    this.mFreeBtn.node.on(cc.Node.EventType.TOUCH_END, this.mGetFreeEnergyBtnClickCallback.click, this.mGetFreeEnergyBtnClickCallback),
                                    (this.mGetEnergy2BtnClickCallback = new o.default(function () {
                                        e.mBuyEnergyCallback && e.mBuyEnergyCallback();
                                    })),
                                    this.mBuyBtn.node.on(cc.Node.EventType.TOUCH_END, this.mGetEnergy2BtnClickCallback.click, this.mGetEnergy2BtnClickCallback);
                            }),
                            (e.prototype.getIcon = function () {
                                return 0 == this.mType ? this.mHeartIcon1 : 1 == this.mType ? this.mHeartIcon1 : 2 == this.mType ? this.mHeartIcon2 : 3 == this.mType ? this.mHeartIcon3 : void 0;
                            }),
                            (e.prototype.initViews = function () {
                                switch (this.mType) {
                                    case 0:
                                        (this.mHeartIcon1.node.active = !0), (this.mHeartIcon2.node.active = !1), (this.mHeartIcon3.node.active = !1), (this.mHeartCount.string = 'x 2'), r.default.isWeiXin() || n.MGAdv.load(a.ADScene.GET_ENERGY_POPUP, a.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK), n.MGAdv.isADFeatureEnable() ? ((this.mFreeBtn.node.active = !0), (this.mBuyBtn.node.active = !1)) : ((this.mFreeBtn.node.active = !1), (this.mBuyBtn.node.active = !0)), (this.mExpenseLabel.string = 'x 100');
                                        break;
                                    case 1:
                                        (this.mHeartIcon1.node.active = !0), (this.mHeartIcon2.node.active = !1), (this.mHeartIcon3.node.active = !1), (this.mHeartCount.string = 'x 5'), (this.mFreeBtn.node.active = !1), (this.mExpenseLabel.string = 'x 220');
                                        break;
                                    case 2:
                                        (this.mHeartIcon1.node.active = !0), (this.mHeartIcon2.node.active = !0), (this.mHeartIcon3.node.active = !1), (this.mHeartCount.string = 'x 10'), (this.mFreeBtn.node.active = !1), (this.mExpenseLabel.string = 'x 430');
                                        break;
                                    case 3:
                                        (this.mHeartIcon1.node.active = !0), (this.mHeartIcon2.node.active = !0), (this.mHeartIcon3.node.active = !0), (this.mHeartCount.string = 'x 20'), (this.mFreeBtn.node.active = !1), (this.mExpenseLabel.string = 'x 850');
                                }
                            }),
                            __decorate([l(cc.Sprite)], e.prototype, 'mHeartIcon1', void 0),
                            __decorate([l(cc.Sprite)], e.prototype, 'mHeartIcon2', void 0),
                            __decorate([l(cc.Sprite)], e.prototype, 'mHeartIcon3', void 0),
                            __decorate([l(cc.Label)], e.prototype, 'mHeartCount', void 0),
                            __decorate([l(cc.Button)], e.prototype, 'mFreeBtn', void 0),
                            __decorate([l(cc.Button)], e.prototype, 'mBuyBtn', void 0),
                            __decorate([l(cc.Label)], e.prototype, 'mExpenseLabel', void 0),
                            (e = __decorate([c], e))
                        );
                    })(cc.Component);
                (i.default = u), cc._RF.pop();
            },
            {
                '../../../../modules/MGAdv/scripts/Logic/MGAdvDefine': 'MGAdvDefine',
                '../../../../modules/MGAdv/scripts/Logic/MGAdvEntrance': 'MGAdvEntrance',
                '../../../util/PU': 'PU',
                '../GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
            },
        ],
        EnergyPlugin: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '1fbcbtF2YBCZIJfbjsmYFtC', 'EnergyPlugin'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var r = e('../PlayerMgr'),
                    s = e('../../Network/Protocol/UserUtil'),
                    o = e('./IPlugin'),
                    c = e('../../DB/DBMgr'),
                    a = e('../EventBus'),
                    l = e('../NotifyEvent'),
                    n = e('../MoneySystem'),
                    u = (function (i) {
                        function e() {
                            var e = i.call(this) || this;
                            (e.mMaxEnergy = 10), (e.mUserRecoverySp = 1e3), (e.mRecovery = !1), e.reset();
                            var t = s.default.getCurSysTime();
                            return e.mLastRecovery > t && (e.mLastRecovery = t), e;
                        }
                        return (
                            __extends(e, i),
                            (e.prototype.getKind = function () {
                                return o.default.Plugin_Energy;
                            }),
                            (e.prototype.updateSelf = function () {
                                var e = c.default.Ins().getDBRow(c.eDataBase.eDB_Life, this.mUserLevel + ''),
                                    t = 10;
                                if (!e)
                                    for (var i = 1; ; ) {
                                        var o = c.default.Ins().getDBRow(c.eDataBase.eDB_Life, i + '');
                                        if (!o) break;
                                        (e = o), i++;
                                    }
                                if ((e && ((this.mMaxEnergy = e.getLife()), (t = e.getLife()), (this.mUserRecoverySp = e.getLifeRecovery())), this.mCurrentEnergy < 0)) {
                                    this.mCurrentEnergy = t;
                                    var n = r.default.Ins();
                                    n.setHP(this.mCurrentEnergy);
                                    var a = s.default.getCurSysTime();
                                    (this.mLastRecovery = a), n.setLastRecovery(this.mLastRecovery);
                                }
                            }),
                            (e.prototype.update = function (e) {
                                if (!(this.mCurrentEnergy < this.mMaxEnergy)) return (this.mRecovery = !1), void a.default.fire(l.default.HP_REVIVE, 0);
                                this.mRecovery || (this.startRecovery(), (this.mRecovery = !0));
                                var t = s.default.getCurSysTime();
                                t < this.mLastRecovery && (this.mLastRecovery = t);
                                Math.max(this.mUserRecoverySp - ((t - this.mLastRecovery) % this.mUserRecoverySp), 0);
                                var i = (t - this.mLastRecovery) % this.mUserRecoverySp,
                                    o = parseInt(this.mUserRecoverySp - (t - this.mLastRecovery) + '');
                                a.default.fire(l.default.HP_REVIVE, o);
                                var n = (t - this.mLastRecovery) / this.mUserRecoverySp;
                                1 <= n && (this.increaseEnergy(n), this.startRecovery(i));
                            }),
                            (e.prototype.increaseEnergy = function (e) {
                                this.mCurrentEnergy > this.mMaxEnergy || ((this.mCurrentEnergy = Math.min(this.mCurrentEnergy + e, this.mMaxEnergy)), (this.mCurrentEnergy = parseInt('' + this.mCurrentEnergy)), r.default.Ins().setHP(this.mCurrentEnergy));
                            }),
                            (e.prototype.addEnergy = function (e) {
                                (this.mCurrentEnergy = this.mCurrentEnergy + e), r.default.Ins().setHP(this.mCurrentEnergy);
                            }),
                            (e.prototype.startRecovery = function (e) {
                                (null == e || null == e || NaN == e || isNaN(e)) && (e = 0);
                                var t = s.default.getCurSysTime();
                                t < this.mLastRecovery || ((this.mLastRecovery = t - e), r.default.Ins().setLastRecovery(this.mLastRecovery));
                            }),
                            (e.prototype.decreaseEnergy = function (e) {
                                return n.MoneySystem.getHpCount() <= 1 || (e = parseInt('' + e)) > this.mCurrentEnergy || ((this.mCurrentEnergy = Math.max(this.mCurrentEnergy - e, 0)), r.default.Ins().setHP(this.mCurrentEnergy)), !1;
                            }),
                            (e.prototype.onLevelChanged = function (e) {
                                var t = this.mUserLevel;
                                if (((this.mUserLevel = e), this.updateSelf(), t < e && this.mCurrentEnergy < this.mMaxEnergy))
                                    for (var i = t; i <= e; i++) {
                                        var o = c.default.Ins().getDBRow(c.eDataBase.eDB_Lv, i - 1 + '');
                                        o && this.increaseEnergy(o.getRewarLife());
                                    }
                            }),
                            (e.prototype.getCurrentEnergy = function () {
                                return this.mCurrentEnergy;
                            }),
                            (e.prototype.getMaxEnergy = function () {
                                return this.mMaxEnergy;
                            }),
                            (e.prototype.reset = function () {
                                var e = r.default.Ins();
                                (this.mUserLevel = e.getUserLevel()), (this.mCurrentEnergy = e.getHP()), (this.mLastRecovery = e.getLastRecovery()), (this.mRecovery = !1), this.updateSelf(), this.mCurrentEnergy < this.mMaxEnergy && (this.mRecovery = !0);
                            }),
                            (e.prototype.isCurEnergyEnough = function () {
                                return 1 <= this.mCurrentEnergy;
                            }),
                            e
                        );
                    })(o.default);
                (i.default = u), cc._RF.pop();
            },
            {
                '../../DB/DBMgr': 'DBMgr',
                '../../Network/Protocol/UserUtil': 'UserUtil',
                '../EventBus': 'EventBus',
                '../MoneySystem': 'MoneySystem',
                '../NotifyEvent': 'NotifyEvent',
                '../PlayerMgr': 'PlayerMgr',
                './IPlugin': 'IPlugin',
            },
        ],
        EnergyPopupProfab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '55604jiRBhN14E4Eb/TPQMM', 'EnergyPopupProfab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../Logic/PlayerMgr'),
                    n = e('../../../util/TimeUtil'),
                    a = e('../UserInfoManager'),
                    r = e('../../../util/SceneMusicMgr'),
                    s = e('../GameEntraScene/BasicTouchEvent'),
                    c = e('../../../infoc/m_p2_pop_coin'),
                    l = e('../GameEntraScene/ToastPrefab'),
                    d = e('./EnergyBuyDialogItem'),
                    u = e('../../../../modules/MGAdv/scripts/Logic/MGAdvEntrance'),
                    p = e('../../../../modules/MGAdv/scripts/Logic/MGAdvDefine'),
                    h = e('../GameEntraScene/PrefabMgr'),
                    f = e('../../../util/PU'),
                    m = e('../../Logic/I18nManager'),
                    g = e('../../keypad/KeypadNavigator'),
                    _ = cc._decorator,
                    y = _.ccclass,
                    S = _.property,
                    v = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.energy_count_label = null), (e.auto_time_label = null), (e.time_bg = null), (e.tips_layout = null), (e.toastPrefab = null), (e.mBgLight = null), (e.mSlipActive = null), (e.mTopDestEnergySprite = null), (e.mContentLayout = null), (e.close_btn = null), (e.mCloseBtnClickCallback = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.setCloseCallback = function (e) {
                                this.closeCallback = e;
                            }),
                            (e.prototype.setToGoldPopupPrefab = function (e) {
                                this.mToGoldPopupPrefab = e;
                            }),
                            (e.prototype.onLoad = function () {
                                this.mContentLayout.getComponent(cc.Animation).play('energy_pop_out'),
                                    o.default.Ins().addUserListener(this),
                                    a.User.UserInfoManager.registerHpReviveListener(this.hpCallback, this),
                                    this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                        e.stopPropagation();
                                    }),
                                    (this.mBgLight.node.active = !1),
                                    (this.mSlipActive.node.active = !1),
                                    this.initEvent(),
                                    this.initItem(),
                                    this.initADFeature(),
                                    g.default.getInstance().pushDialog(this.node);
                            }),
                            (e.prototype.initItem = function () {
                                var u = this;
                                h.default.load(
                                    'prefab/EnergyBuyDialogItem',
                                    function (e, t) {
                                        if (t) {
                                            var i = cc.instantiate(t),
                                                o = i.getComponent(d.default);
                                            o.setType(0),
                                                o.setBuyCallback(function () {
                                                    u.getEnergy2BtnClick(o.getIcon());
                                                }),
                                                o.setFreeCallback(function () {
                                                    u.getEnergyFreeBtnClick(o.getIcon());
                                                }),
                                                (i.getChildByName('get_energy_free_btn').name = '1_free_btn'),
                                                (i.getChildByName('get_energy_20_btn').name = '1_buy_btn'),
                                                u.mItemNode_1.addChild(i);
                                            var n = cc.instantiate(t),
                                                a = n.getComponent(d.default);
                                            a.setType(1),
                                                a.setBuyCallback(function () {
                                                    u.getEnergy5BtnClick(a.getIcon());
                                                }),
                                                (n.getChildByName('get_energy_free_btn').name = '2_free_btn'),
                                                (n.getChildByName('get_energy_20_btn').name = '2_buy_btn'),
                                                u.mItemNode_2.addChild(n);
                                            var r = cc.instantiate(t),
                                                s = r.getComponent(d.default);
                                            s.setType(2),
                                                s.setBuyCallback(function () {
                                                    u.getEnergy10BtnClick(s.getIcon());
                                                }),
                                                (r.getChildByName('get_energy_free_btn').name = '3_free_btn'),
                                                (r.getChildByName('get_energy_20_btn').name = '3_buy_btn'),
                                                u.mItemNode_3.addChild(r);
                                            var c = cc.instantiate(t),
                                                l = c.getComponent(d.default);
                                            l.setType(3),
                                                l.setBuyCallback(function () {
                                                    u.getEnergy20BtnClick(l.getIcon());
                                                }),
                                                (c.getChildByName('get_energy_free_btn').name = '4_free_btn'),
                                                (c.getChildByName('get_energy_20_btn').name = '4_buy_btn'),
                                                u.mItemNode_4.addChild(c);
                                        }
                                    },
                                    !1,
                                );
                            }),
                            (e.prototype.initADFeature = function () {
                                f.default.isWeiXin() || u.MGAdv.load(p.ADScene.GET_ENERGY_POPUP, p.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK);
                            }),
                            (e.prototype.initEvent = function () {
                                var e = this;
                                (this.mCloseBtnClickCallback = new s.default(function () {
                                    e.closeBtnClick();
                                })),
                                    this.close_btn.node.on(cc.Node.EventType.TOUCH_END, this.mCloseBtnClickCallback.click, this.mCloseBtnClickCallback);
                            }),
                            (e.prototype.start = function () {
                                a.User.UserInfoManager.isAutoReviveHp() ? ((this.auto_time_label.node.active = !0), (this.time_bg.node.active = !0)) : ((this.auto_time_label.node.active = !1), (this.time_bg.node.active = !1));
                            }),
                            (e.prototype.onDestroy = function () {
                                o.default.Ins().removeUserListener(this), a.User.UserInfoManager.unRegisterHpReviveListener(this.hpCallback, this), r.default.stop(r.default.NAME_BUY_LIFE), g.default.getInstance().popDialog(this.node);
                            }),
                            (e.prototype.hpCallback = function (e, t) {
                                t <= 0 ? ((this.auto_time_label.node.active = !1), (this.time_bg.node.active = !1)) : ((this.auto_time_label.string = m.default.getInstance().getLanguageByKey('label_text.time') + n.default.convertSecondToMinutesSecond(t)), (this.auto_time_label.node.active = !0), (this.time_bg.node.active = !0));
                            }),
                            (e.prototype.onChange = function (e, t, i, o, n) {
                                this.energy_count_label.string = '' + e;
                            }),
                            (e.prototype.closeBtnClick = function () {
                                this.reportPopWindowCoin(-1), this.closeCallback && this.closeCallback();
                            }),
                            (e.prototype.setEnergyLabel = function () {
                                this.energy_count_label.string = a.User.UserInfoManager.getUserInfo().hp + '';
                            }),
                            (e.prototype.getEnergy2BtnClick = function (e) {
                                this.getEnergyBtnClick(e, 100);
                            }),
                            (e.prototype.getEnergyFreeBtnClick = function (i) {
                                var o = this;
                                if ((console.log('lllll getEnergyFreeBtnClick'), u.MGAdv.isADCached(p.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK))) {
                                    var e = p.ADScene.GET_ENERGY_POPUP;
                                    console.log('lllll MGAdv.show'),
                                        u.MGAdv.show(e, p.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK, function (e) {
                                            switch ((console.log('lllll MGAdv.show2'), e)) {
                                                case p.ADStat.NOT_NETWORK:
                                                    var t = m.default.getInstance().getLanguageByKey('label_text.netnotok');
                                                    o.showToastTips(t);
                                                    break;
                                                case p.ADStat.SHOW_SUCCESS_CLOSE:
                                                    setTimeout(function () {
                                                        o.getEnergyBtnClick(i, 0);
                                                    }, 500);
                                                    break;
                                                case p.ADStat.SHOW_NOT_ENED_CLOSE:
                                                    break;
                                                case p.ADStat.SHOW_GET_AD_FAILED:
                                                    o.showToastTips('No video ads available');
                                            }
                                        });
                                } else {
                                    var t = m.default.getInstance().getLanguageByKey('label_text.noadrevivefree');
                                    this.showToastTips(t), f.default.isWeiXin() || u.MGAdv.load(p.ADScene.GET_ENERGY_POPUP, p.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK);
                                }
                            }),
                            (e.prototype.getEnergyBtnClick = function (e, t) {
                                var i = this;
                                this.reportPopWindowCoin(100 == t ? 2 : 0),
                                    a.User.UserInfoManager.buyHpByCoin(t)
                                        ? ((this.mBgLight.node.active = !0),
                                          (this.mSlipActive.node.active = !0),
                                          (this.mTopDestEnergySprite.node.active = !1),
                                          r.default.play(r.default.NAME_BUY_LIFE, r.default.PATH_BUY_LIFE, !1),
                                          this.scheduleOnce(function () {
                                              i.playBuyGoldSuccessAnim(e, function () {
                                                  i.setEnergyLabel(), (i.mBgLight.node.active = !1), (i.mSlipActive.node.active = !1), (i.mTopDestEnergySprite.node.active = !0);
                                              });
                                          }, 0))
                                        : (this.toGoldPopupPrefab(), console.log('getEnergyBtnClick  false'));
                            }),
                            (e.prototype.reportPopWindowCoin = function (e) {
                                0 == e ? c.default.report(c.default.SCENE_GET_ENERGY_DIALOG, this.mSource, c.default.ACTION_CLICK_GET_ENERGY_VIDEO_GOLD) : 2 == e ? c.default.report(c.default.SCENE_GET_ENERGY_DIALOG, this.mSource, c.default.ACTION_CLICK_GET_ENERGY_100_GOLD) : 5 == e ? c.default.report(c.default.SCENE_GET_ENERGY_DIALOG, this.mSource, c.default.ACTION_CLICK_GET_ENERGY_220_GOLD) : 10 == e ? c.default.report(c.default.SCENE_GET_ENERGY_DIALOG, this.mSource, c.default.ACTION_CLICK_GET_ENERGY_430_GOLD) : 20 == e ? c.default.report(c.default.SCENE_GET_ENERGY_DIALOG, this.mSource, c.default.ACTION_CLICK_GET_ENERGY_850_GOLD) : -1 == e && c.default.report(c.default.SCENE_GET_ENERGY_DIALOG, this.mSource, c.default.ACTION_CLICK_DIALOG_CLOSE_BTN);
                            }),
                            (e.prototype.getEnergy5BtnClick = function (e) {
                                var t = this;
                                this.reportPopWindowCoin(5),
                                    a.User.UserInfoManager.buyHpByCoin(220)
                                        ? ((this.mBgLight.node.active = !0),
                                          (this.mSlipActive.node.active = !0),
                                          (this.mTopDestEnergySprite.node.active = !1),
                                          r.default.play(r.default.NAME_BUY_LIFE, r.default.PATH_BUY_LIFE, !1),
                                          this.scheduleOnce(function () {
                                              t.playBuyGoldSuccessAnim(e);
                                          }, 0.1),
                                          this.scheduleOnce(function () {
                                              t.playBuyGoldSuccessAnim(e);
                                          }, 0.2),
                                          this.scheduleOnce(function () {
                                              t.playBuyGoldSuccessAnim(e, function () {
                                                  t.setEnergyLabel(), (t.mBgLight.node.active = !1), (t.mSlipActive.node.active = !1), (t.mTopDestEnergySprite.node.active = !0);
                                              });
                                          }, 0.3),
                                          console.log('getEnergy5BtnClick  true'))
                                        : (this.toGoldPopupPrefab(), console.log('getEnergy5BtnClick  false'));
                            }),
                            (e.prototype.getEnergy10BtnClick = function (e) {
                                var t = this;
                                if ((this.reportPopWindowCoin(10), a.User.UserInfoManager.buyHpByCoin(430))) {
                                    (this.mBgLight.node.active = !0), (this.mSlipActive.node.active = !0), (this.mTopDestEnergySprite.node.active = !1), r.default.play(r.default.NAME_BUY_LIFE, r.default.PATH_BUY_LIFE, !1);
                                    for (var i = 1; i < 5; i++)
                                        this.scheduleOnce(function () {
                                            t.playBuyGoldSuccessAnim(e);
                                        }, 0.1 * i);
                                    this.scheduleOnce(function () {
                                        t.playBuyGoldSuccessAnim(e, function () {
                                            t.setEnergyLabel(), (t.mBgLight.node.active = !1), (t.mSlipActive.node.active = !1), (t.mTopDestEnergySprite.node.active = !0);
                                        });
                                    }, 0.5);
                                } else this.toGoldPopupPrefab();
                            }),
                            (e.prototype.getEnergy20BtnClick = function (e) {
                                var t = this;
                                if ((this.reportPopWindowCoin(20), a.User.UserInfoManager.buyHpByCoin(850))) {
                                    (this.mBgLight.node.active = !0), (this.mSlipActive.node.active = !0), (this.mTopDestEnergySprite.node.active = !1), r.default.play(r.default.NAME_BUY_LIFE, r.default.PATH_BUY_LIFE, !1);
                                    for (var i = 1; i < 10; i++)
                                        this.scheduleOnce(function () {
                                            t.playBuyGoldSuccessAnim(e);
                                        }, 0.1 * i);
                                    this.scheduleOnce(function () {
                                        t.playBuyGoldSuccessAnim(e, function () {
                                            t.setEnergyLabel(), (t.mBgLight.node.active = !1), (t.mSlipActive.node.active = !1), (t.mTopDestEnergySprite.node.active = !0);
                                        });
                                    }, 1);
                                } else this.toGoldPopupPrefab();
                            }),
                            (e.prototype.toGoldPopupPrefab = function () {
                                this.mToGoldPopupPrefab && this.mToGoldPopupPrefab();
                            }),
                            (e.prototype.playBuyGoldSuccessAnim = function (e, t) {
                                var i = new cc.Node();
                                (i.width = 56), (i.height = 56);
                                var o = e.node.parent.convertToWorldSpaceAR(e.node.getPosition()),
                                    n = this.node.convertToNodeSpaceAR(o);
                                i.setPosition(n), (i.addComponent(cc.Sprite).spriteFrame = e.spriteFrame);
                                var a = this.mBgLight.node.parent.convertToWorldSpaceAR(this.mBgLight.node.getPosition()),
                                    r = this.node.convertToNodeSpaceAR(a);
                                this.node.addChild(i);
                                var s = r.x - i.x,
                                    c = r.y - i.y,
                                    l = [cc.p(r.x - 0.3 * s, r.y - 0.8 * c), cc.p(r.x - 0 * s, r.y - 0.3 * c), cc.p(r.x, r.y)],
                                    u = cc.bezierTo(0.2, l),
                                    d = cc.fadeTo(0.01, 0),
                                    p = cc.sequence(
                                        u,
                                        d,
                                        cc.callFunc(function () {
                                            t && t();
                                        }),
                                    );
                                i.runAction(p);
                            }),
                            (e.prototype.setSource = function (e) {
                                this.mSource = e;
                            }),
                            (e.prototype.getSource = function () {
                                return this.mSource;
                            }),
                            (e.prototype.showToastTips = function (e, t) {
                                var i = cc.instantiate(this.toastPrefab);
                                i.getComponent(l.default).showTips(e, function () {
                                    i.destroy(), t && t();
                                }),
                                    this.tips_layout.node.addChild(i);
                            }),
                            __decorate([S(cc.Label)], e.prototype, 'energy_count_label', void 0),
                            __decorate([S(cc.Label)], e.prototype, 'auto_time_label', void 0),
                            __decorate([S(cc.Sprite)], e.prototype, 'time_bg', void 0),
                            __decorate([S(cc.Layout)], e.prototype, 'tips_layout', void 0),
                            __decorate([S(cc.Prefab)], e.prototype, 'toastPrefab', void 0),
                            __decorate([S(cc.Sprite)], e.prototype, 'mBgLight', void 0),
                            __decorate([S(cc.Sprite)], e.prototype, 'mSlipActive', void 0),
                            __decorate([S(cc.Sprite)], e.prototype, 'mTopDestEnergySprite', void 0),
                            __decorate([S(cc.Layout)], e.prototype, 'mContentLayout', void 0),
                            __decorate([S(cc.Button)], e.prototype, 'close_btn', void 0),
                            __decorate([S(cc.Node)], e.prototype, 'mItemNode_1', void 0),
                            __decorate([S(cc.Node)], e.prototype, 'mItemNode_2', void 0),
                            __decorate([S(cc.Node)], e.prototype, 'mItemNode_3', void 0),
                            __decorate([S(cc.Node)], e.prototype, 'mItemNode_4', void 0),
                            (e = __decorate([y], e))
                        );
                    })(cc.Component);
                (i.default = v), cc._RF.pop();
            },
            {
                '../../../../modules/MGAdv/scripts/Logic/MGAdvDefine': 'MGAdvDefine',
                '../../../../modules/MGAdv/scripts/Logic/MGAdvEntrance': 'MGAdvEntrance',
                '../../../infoc/m_p2_pop_coin': 'm_p2_pop_coin',
                '../../../util/PU': 'PU',
                '../../../util/SceneMusicMgr': 'SceneMusicMgr',
                '../../../util/TimeUtil': 'TimeUtil',
                '../../Logic/I18nManager': 'I18nManager',
                '../../Logic/PlayerMgr': 'PlayerMgr',
                '../../keypad/KeypadNavigator': 'KeypadNavigator',
                '../GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
                '../GameEntraScene/PrefabMgr': 'PrefabMgr',
                '../GameEntraScene/ToastPrefab': 'ToastPrefab',
                '../UserInfoManager': 'UserInfoManager',
                './EnergyBuyDialogItem': 'EnergyBuyDialogItem',
            },
        ],
        EnumEntry: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '9f92e0ADcxMkakPJvT6OJSB', 'EnumEntry'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = function (e, t, i, o) {
                    (this.name = e), (this.value = t), (this.alias = i || ''), (this.description = o || '');
                };
                (i.EnumEntry = o), cc._RF.pop();
            },
            {},
        ],
        EnumUtils: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'd4884Hz5fpGNL9i6KzwX0sl', 'EnumUtils'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var d = e('./EnumEntry'),
                    p = e('../runtime/ClassType'),
                    o = (function () {
                        function e() {}
                        return (
                            (e.getEntry = function (t, e) {
                                if (e) {
                                    var i = this.getEntries(e).filter(function (e) {
                                        return e.value === t;
                                    });
                                    return 1 === i.length ? i[0] : null;
                                }
                            }),
                            (e.getEntries = function (e) {
                                if (e) {
                                    if (this._entryCache.has(e)) return this._entryCache.get(e);
                                    for (var t = p.Type.getMetadata(e) || {}, i = new Array(), o = 0, n = this.getFields(e); o < n.length; o++) {
                                        var a = n[o],
                                            r = a[0],
                                            s = a[1],
                                            c = t[r],
                                            l = c ? c.alias : '',
                                            u = c ? c.description : '';
                                        i.push(new d.EnumEntry(r, s, l, u));
                                    }
                                    return 0 < i.length && this._entryCache.set(e, i), i;
                                }
                            }),
                            (e.getFields = function (t) {
                                if (t)
                                    return Object.keys(t)
                                        .map(function (e) {
                                            return [e, t[e]];
                                        })
                                        .filter(function (e) {
                                            e[0];
                                            var t = e[1];
                                            return p.Type.isNumber(t);
                                        });
                            }),
                            (e._entryCache = new Map()),
                            e
                        );
                    })();
                (i.EnumUtils = o), cc._RF.pop();
            },
            {
                '../runtime/ClassType': 'ClassType',
                './EnumEntry': 'EnumEntry',
            },
        ],
        Enumerator: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '02f7bsJ31hIfZugb9FpvVSL', 'Enumerator'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e(e) {
                        e || console.log('--- no arguments---'), (this._index = 0), (this._current = void 0), (this._items = e);
                    }
                    return (
                        Object.defineProperty(e.prototype, 'current', {
                            get: function () {
                                return this._current;
                            },
                            enumerable: !0,
                            configurable: !0,
                        }),
                        (e.prototype.next = function () {
                            var e = this._items;
                            return this._index < e.length && ((this._current = e[this._index++]), !0);
                        }),
                        e
                    );
                })();
                (i.Enumerator = o), cc._RF.pop();
            },
            {},
        ],
        EventBus: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '1386em4yqBBtoBmXvc87ZaR', 'EventBus'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../util/Emitter'),
                    n = (function () {
                        function e() {
                            (this.mCount = 0), (this.mEmitter = new o.Emitter());
                        }
                        return (
                            (e.prototype.register = function (e, t, i) {
                                this.mEmitter.register(e, t, i), (this.mCount += 1);
                            }),
                            (e.prototype.remove = function (e, t, i) {
                                this.mEmitter.remove(e, t, i), 0 < this.mCount && (this.mCount -= 1);
                            }),
                            (e.prototype.fire = function (e) {
                                for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
                                this.mEmitter.fire(e, t);
                            }),
                            e
                        );
                    })(),
                    a = (function () {
                        function e() {}
                        return (
                            (e.register = function (e, t, i) {
                                this.ins.register(e, t, i);
                            }),
                            (e.remove = function (e, t, i) {
                                this.ins.remove(e, t, i);
                            }),
                            (e.fire = function (e) {
                                for (var t, i = [], o = 1; o < arguments.length; o++) i[o - 1] = arguments[o];
                                (t = this.ins).fire.apply(t, [e].concat(i));
                            }),
                            (e.ins = new n()),
                            e
                        );
                    })();
                (i.default = a), cc._RF.pop();
            },
            {
                '../../util/Emitter': 'Emitter',
            },
        ],
        EvilLongBlockNode: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '18c3970/NZN4p0iiBqtqgj+', 'EvilLongBlockNode'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./LongBlockNode'),
                    l = e('../loader/GameSceneFrameLoader'),
                    u = e('../../MUI/MUISprite'),
                    d = e('../../../base/G'),
                    n = (function (c) {
                        function e() {
                            return (null !== c && c.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(e, c),
                            (e.prototype.createLayers = function () {
                                c.prototype.createLayers.call(this);
                                for (var e = this.getAllChildren(), t = 0, i = e.length; t < i; t++) e[t].setOpacity(0.4 * e[t].getOpacity());
                                var o = l.default.getInstance().getAtlas(),
                                    n = o.getItem('black');
                                if (n) {
                                    var a = n.rect.width,
                                        r = n.rect.height,
                                        s = new u.default();
                                    (s.imageData = o), (s.imageItem = n), s.move((this.mBlock.rect.width - a) / 2, (d.G.Ap.config.mBaseBlockHeight - r) / 2, a, r), this.addChild(s);
                                }
                            }),
                            e
                        );
                    })(o.default);
                (i.EvilLongBlockNode = n), cc._RF.pop();
            },
            {
                '../../../base/G': 'G',
                '../../MUI/MUISprite': 'MUISprite',
                '../loader/GameSceneFrameLoader': 'GameSceneFrameLoader',
                './LongBlockNode': 'LongBlockNode',
            },
        ],
        EvilShortBlockNode: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'c9380DlTjFIZ5Ormwm11inZ', 'EvilShortBlockNode'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var c = e('../loader/GameSceneFrameLoader'),
                    l = e('../../MUI/MUISprite'),
                    u = e('../../../base/G'),
                    o = e('./BlockNode'),
                    d = e('../loader/BlockSkinFrameLoader'),
                    n = (function (s) {
                        function e() {
                            return (null !== s && s.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(e, s),
                            (e.prototype.createLayers = function () {
                                s.prototype.createLayers.call(this);
                                var e = d.default.getInstance().getShortBlockBackground(),
                                    t = new l.default();
                                (t.imageData = d.default.getInstance().getAtlas()), (t.imageItem = e), t.move(0, 0, this.mBlock.rect.width, this.mBlock.rect.height), t.setOpacity(0.4), this.addChild(t);
                                var i = c.default.getInstance().getAtlas(),
                                    o = i.getItem('black');
                                if (o) {
                                    var n = o.rect.width,
                                        a = o.rect.height,
                                        r = new l.default();
                                    (r.imageData = i), (r.imageItem = o), r.move((this.mBlock.rect.width - n) / 2, (u.G.Ap.config.mBaseBlockHeight - a) / 2, n, a), this.addChild(r);
                                }
                            }),
                            e
                        );
                    })(o.default);
                (i.EvilShortBlockNode = n), cc._RF.pop();
            },
            {
                '../../../base/G': 'G',
                '../../MUI/MUISprite': 'MUISprite',
                '../loader/BlockSkinFrameLoader': 'BlockSkinFrameLoader',
                '../loader/GameSceneFrameLoader': 'GameSceneFrameLoader',
                './BlockNode': 'BlockNode',
            },
        ],
        ExclusiveSkinGameScene: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'cd7b2wKwz1FT71zIq11GngT', 'ExclusiveSkinGameScene'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./GameScene'),
                    n = e('../base/G'),
                    a = e('../business/Logic/LangMgr'),
                    r = e('./element/loader/GameSceneFrameLoader'),
                    s = e('./element/loader/BlockSkinFrameLoader'),
                    c = (function (i) {
                        function e(e, t) {
                            return i.call(this, e, t) || this;
                        }
                        return (
                            __extends(e, i),
                            (e.prototype.initilize = function () {
                                if (((this.effectiveSkin = n.G.Ap.skinMgr.getTrialSkinItem()), this.effectiveSkin || (this.effectiveSkin = n.G.Ap.skinMgr.getCurrentSkinItem()), (this.atlasGameObject = r.default.getInstance().getAtlas()), this.effectiveSkin)) {
                                    var e = this.effectiveSkin.getSkinObject(),
                                        t = e.skinRaw.getBlockAtlasName();
                                    s.default.getInstance().setAtlas(e.atlasMap[t]), (n.G.Ap.config.longBlockDotAnimEnable = e.skinRaw.getDesign().longBlockDotAnimaion);
                                }
                            }),
                            (e.prototype.allowProperty = function () {
                                return !0;
                            }),
                            (e.prototype.updateUI = function () {
                                if (this.effectiveSkin) {
                                    var e = a.default.gIns().getLanguageByKey(this.music.getName()),
                                        t = cc.js.formatStr('正在试玩《%s》皮肤', this.effectiveSkin.getProperty().displayName);
                                    this.banner.show(e, t);
                                }
                            }),
                            e
                        );
                    })(o.default);
                (i.default = c), cc._RF.pop();
            },
            {
                '../base/G': 'G',
                '../business/Logic/LangMgr': 'LangMgr',
                './GameScene': 'GameScene',
                './element/loader/BlockSkinFrameLoader': 'BlockSkinFrameLoader',
                './element/loader/GameSceneFrameLoader': 'GameSceneFrameLoader',
            },
        ],
        ExpData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '2f891kjxl1AyreqKM6OSmEO', 'ExpData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.findExpByLevel = function (e) {
                                return this.find('Lv', e);
                            }),
                            (t.prototype.getRow = function () {
                                return new a();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.default = n;
                var a = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getLv = function () {
                            return this.getInt('Lv');
                        }),
                        (t.prototype.getScore = function () {
                            return this.getFloat('Score');
                        }),
                        (t.prototype.getMaxScore = function () {
                            return this.getInt('MaxScore');
                        }),
                        (t.prototype.getPvpMaxScore = function () {
                            return this.getInt('PvpMaxScore');
                        }),
                        t
                    );
                })(o.default);
                (i.ExpRow = a), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        ExpPlugin: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'c3927m4RNhFq70CDkFnH9IN', 'ExpPlugin'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('../PlayerMgr'),
                    l = e('../../DB/DBMgr'),
                    r = e('./PluginMgr'),
                    s = e('../../Network/Protocol/UserUtil'),
                    o = e('./IPlugin'),
                    c = e('../LevelMgr'),
                    u = e('../Level'),
                    n = (function (t) {
                        function n() {
                            var e = t.call(this) || this;
                            return (e.mNeedBroadCast = !1), (e.mUserCorn = 0), (e.mNPlayerMaxLv = 26), e.reset(), e;
                        }
                        return (
                            __extends(n, t),
                            (n.prototype.getKind = function () {
                                return o.default.Plugin_Exp;
                            }),
                            (n.prototype.reset = function () {
                                for (var e = !0; e; ) {
                                    this.mNPlayerMaxLv++;
                                    var t = l.default.Ins().getDBRow(l.eDataBase.eDB_Lv, this.mNPlayerMaxLv + '');
                                    t && -1 == t.getExp() && (e = !1);
                                }
                                var i = a.default.Ins();
                                i.getUserLevel() > this.mNPlayerMaxLv ? (this.mUserLevel = this.mNPlayerMaxLv) : (this.mUserLevel = i.getUserLevel()), (this.mExp = i.getUserCurrentExp()), (this.mBeforeExp = this.mExp), (this.mBeforeLevel = this.mUserLevel);
                                var o = l.default.Ins().getDBRow(l.eDataBase.eDB_Lv, this.mUserLevel + '');
                                (this.mNextExp = o ? o.getExp() : -1), (this.mNotifyUI = !1), this.judgeExpEx(), this.mExp > this.mUserLevel * n.MAX_RATIO && -1 != this.mNextExp && this.judgeExp();
                            }),
                            (n.prototype.judgeExp = function () {
                                var e = this.mExp;
                                this.mBeforeLevel = this.mUserLevel;
                                var t = a.default.Ins(),
                                    i = !1;
                                if (-1 == this.mNextExp);
                                else {
                                    for (; e >= this.mNextExp && -1 != this.mNextExp; ) {
                                        (this.mUserLevel += 1), t.setUserLevel(this.mUserLevel), (e -= this.mNextExp);
                                        var o = l.default.Ins().getDBRow(l.eDataBase.eDB_Lv, this.mUserLevel + '');
                                        (this.mNextExp = o ? o.getExp() : -1), (i = !0);
                                    }
                                    if (i) return this.setExp(e), r.default.Ins().notifyLevelChanged(this.mUserLevel), (this.mNeedBroadCast = !0), (this.mCurrentTime = s.default.getCurSysTime()), i;
                                }
                                if (this.mExp > this.mUserLevel * n.MAX_RATIO && -1 != this.mNextExp) {
                                    (this.mUserLevel += 1), t.setUserLevel(this.mUserLevel), (e -= this.mNextExp);
                                    o = l.default.Ins().getDBRow(l.eDataBase.eDB_Lv, this.mUserLevel + '');
                                    (this.mNextExp = o ? o.getExp() : -1), this.setExp(e), r.default.Ins().notifyLevelChanged(this.mUserLevel), (this.mNeedBroadCast = !0), (this.mCurrentTime = s.default.getCurSysTime()), (i = !0);
                                }
                                return i;
                            }),
                            (n.prototype.judgeExpEx = function () {
                                for (var e = 0, t = this.mNextExp, i = this.mExp; t <= i && -1 != t; ) {
                                    if (1 < ++e) return (this.mBeforeExp = this.mNextExp), (this.mExp = this.mNextExp), a.default.Ins().setUserCurrentExp(this.mExp), !0;
                                    i -= t;
                                    var o = l.default.Ins().getDBRow(l.eDataBase.eDB_Lv, e + '');
                                    t = o ? o.getExp() : -1;
                                }
                                return !1;
                            }),
                            (n.prototype.setExp = function (e) {
                                (this.mBeforeExp = this.mExp), (this.mExp = e), a.default.Ins().setUserCurrentExp(this.mExp);
                            }),
                            (n.prototype.judgeUpdateVersion = function () {
                                var e = this.mExp;
                                if (((this.mBeforeLevel = this.mUserLevel), -1 == this.mNextExp)) return !1;
                                for (var t = !1; e >= this.mNextExp && -1 != this.mNextExp; ) {
                                    (this.mUserLevel += 1), a.default.Ins().setUserLevel(this.mUserLevel), (e -= this.mNextExp);
                                    var i = l.default.Ins().getDBRow(l.eDataBase.eDB_Lv, this.mUserLevel + '');
                                    (this.mNextExp = i ? i.getExp() : -1), (t = !0);
                                    break;
                                }
                                return (e = 0), !!t && (r.default.Ins().notifyLevelChanged(this.mUserLevel), this.setExp(e), (this.mNotifyUI = !0), (this.mNeedBroadCast = !0), (this.mCurrentTime = s.default.getCurSysTime()), (this.mCurrentTime += 3), !0);
                            }),
                            (n.prototype.notifyUI = function () {}),
                            (n.prototype.isNeedAnim = function () {
                                return this.mNeedAnim;
                            }),
                            (n.prototype.resetAnmin = function () {
                                this.mNeedAnim = !1;
                            }),
                            (n.prototype.getBeforeLevel = function () {
                                return this.mBeforeLevel;
                            }),
                            (n.prototype.update = function (e) {
                                this.mNeedBroadCast && s.default.getCurSysTime() - this.mCurrentTime > n.INTERVAR && ((this.mNeedBroadCast = !1), this.mNotifyUI && ((this.mNotifyUI = !1), this.notifyUI()));
                            }),
                            (n.prototype.getCurrentLevel = function () {
                                return this.mUserLevel;
                            }),
                            (n.prototype.setCurrentLevel = function (e) {
                                this.mUserLevel = e;
                            }),
                            (n.prototype.getExp = function () {
                                return this.mExp;
                            }),
                            (n.prototype.getNextLevelExp = function () {
                                return -1 == this.mNextExp ? this.mExp : this.mNextExp;
                            }),
                            (n.prototype.increaseEx2 = function (e) {
                                return this.setExp(this.mExp + e), this.judgeExp();
                            }),
                            (n.prototype.increaseEx = function (e) {
                                var t = this.getCanIncreaseEX(e);
                                return this.setExp(this.mExp + t), this.judgeExp();
                            }),
                            (n.prototype.updateVersion = function () {
                                this.judgeUpdateVersion();
                            }),
                            (n.prototype.getPlayerMaxLv = function () {
                                return this.mNPlayerMaxLv;
                            }),
                            (n.prototype.getCanIncreaseEX = function (e) {
                                var t = 0,
                                    i = c.LevelMgr.Ins().getLevel(e.mId);
                                if (i) {
                                    var o = i.music;
                                    switch (i.type) {
                                        case u.eLevelKind.eLevel_Normal:
                                        case u.eLevelKind.eLevel_Gold:
                                        case u.eLevelKind.eLevel_Popular:
                                        case u.eLevelKind.eLevel_Choiceness:
                                            t += this.calculate(o.musicLevel, e.mScore, e.mStar, !1);
                                            var n,
                                                a = c.LevelMgr.Ins().getClearanceAward(e.mId);
                                            if (e.mIsFirstBlood) if ((n = a.getAward(1))) t += n.exp;
                                            if (e.mIsFirstSecond) if ((n = a.getAward(2))) t += n.exp;
                                            if (e.mIsFirstPassed) if ((n = a.getAward(3))) t += n.exp;
                                    }
                                }
                                return t;
                            }),
                            (n.prototype.calculate = function (e, t, i, o) {
                                var n = 1,
                                    a = 0,
                                    r = 0,
                                    s = l.default.Ins().getDBRow(l.eDataBase.eDB_Exp, e + '');
                                s && ((a = t * s.getScore()), (n = (r = o ? s.getPvpMaxScore() : s.getMaxScore()) < a ? r : a));
                                var c = Math.floor(n + 0.5);
                                return c <= 0 && (c = 1), c;
                            }),
                            (n.INTERVAR = 1),
                            (n.MAX_EXP = 99999999),
                            (n.MAX_RATIO = 780),
                            n
                        );
                    })(o.default);
                (i.default = n), cc._RF.pop();
            },
            {
                '../../DB/DBMgr': 'DBMgr',
                '../../Network/Protocol/UserUtil': 'UserUtil',
                '../Level': 'Level',
                '../LevelMgr': 'LevelMgr',
                '../PlayerMgr': 'PlayerMgr',
                './IPlugin': 'IPlugin',
                './PluginMgr': 'PluginMgr',
            },
        ],
        FBHelper: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '097c0DxTSRKrJq8G0o7tQKN', 'FBHelper'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {}
                    return (
                        (e.getID = function () {
                            return FBInstant.player ? FBInstant.player.getID() : '';
                        }),
                        (e.getNickName = function () {
                            return FBInstant.player ? FBInstant.player.getName() : '';
                        }),
                        (e.getPhoto = function () {
                            return FBInstant.player ? FBInstant.player.getPhoto() : '';
                        }),
                        (e.getEntryPointData = function () {
                            return FBInstant.getEntryPointData();
                        }),
                        e
                    );
                })();
                (i.FBHelper = o), cc._RF.pop();
            },
            {},
        ],
        FPSProcess: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '1afe0lsEepKGIF9u0/iy+jY', 'FPSProcess'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../base/G'),
                    n = (function () {
                        function i(e) {
                            this.counter = e;
                        }
                        return (
                            (i.prototype.process = function (e) {
                                if (e <= 0.02) return o.G.Ap.config.gameFrameInterval;
                                if (10 < this.counter.getDuration()) {
                                    var t = this.counter.getFPS();
                                    return 55 < t ? o.G.Ap.config.gameFrameInterval : 50 < t ? i.INTERVAL_1 : 45 < t ? i.INTERVAL0 : 40 < t ? i.INTERVAL1 : 35 < t ? i.INTERVAL2 : 30 < t ? i.INTERVAL2_5 : 25 < t ? i.INTERVAL3 : 20 < t ? i.INTERVAL3_5 : e;
                                }
                                return o.G.Ap.config.gameFrameInterval;
                            }),
                            (i.INTERVAL_1 = 0.018),
                            (i.INTERVAL0 = 0.02),
                            (i.INTERVAL1 = 0.022),
                            (i.INTERVAL2 = 0.025),
                            (i.INTERVAL2_5 = 0.028),
                            (i.INTERVAL3 = 0.033),
                            (i.INTERVAL3_5 = 0.04),
                            (i.INTERVAL4 = 0.05),
                            (i.INTERVAL5 = 0.1),
                            (i.INTERVAL6 = 0.2),
                            i
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../../base/G': 'G',
            },
        ],
        FightFriendTimesTask: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'b658fWEKmJNb6XvvRTsE1Me', 'FightFriendTimesTask'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return __extends(t, e), (t.prototype.initTask = function (e) {}), t;
                })(e('../SkinTaskItem').default);
                (i.default = o), cc._RF.pop();
            },
            {
                '../SkinTaskItem': 'SkinTaskItem',
            },
        ],
        FightRuleData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '03d8466dwdFQZ5RV6kt1VDT', 'FightRuleData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.findId = function (e) {
                                return this.find('id', e);
                            }),
                            (t.prototype.getRow = function () {
                                return new a();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.FightRuleData = n;
                var a = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getId = function () {
                            return this.getInt('id');
                        }),
                        (t.prototype.getDesc = function () {
                            return this.getString('desc');
                        }),
                        t
                    );
                })(o.default);
                (i.FightRuleDataRow = a), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        FightUsePropTimesTask: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '0d76cykNy1IpL6Ub/L88AXo', 'FightUsePropTimesTask'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return __extends(t, e), (t.prototype.initTask = function (e) {}), t;
                })(e('../SkinTaskItem').default);
                (i.default = o), cc._RF.pop();
            },
            {
                '../SkinTaskItem': 'SkinTaskItem',
            },
        ],
        FightWinCountTask: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'a3a81S/Mh5MF4vQeKtb1HDd', 'FightWinCountTask'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return __extends(t, e), (t.prototype.initTask = function (e) {}), t;
                })(e('../SkinTaskItem').default);
                (i.default = o), cc._RF.pop();
            },
            {
                '../SkinTaskItem': 'SkinTaskItem',
            },
        ],
        FirstSongGuideGameScene: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'aaa56XRVPxPFbo2U7ZbAs7v', 'FirstSongGuideGameScene'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('./GameScene'),
                    r = e('./ctrl/GameStageGuide'),
                    a = e('../base/G'),
                    s = e('../util/Utility'),
                    c = e('./ctrl/GameStageMoney'),
                    l = e('./ctrl/GameStageMusic'),
                    u = e('./MUI/MUINode'),
                    d = e('./GameSceneSetting'),
                    p = e('../business/task/newguidance/NewGuidancePrefab'),
                    h = e('../business/gameover/ReliveFreeDialogTipDialog'),
                    f = e('../business/Logic/LevelMgr'),
                    m = e('./view/GameStageNodeView'),
                    g = e('../business/UI/GameEntraScene/PrefabMgr'),
                    _ = e('../business/UI/UserInfoBtnManager'),
                    y = e('../business/Logic/I18nManager'),
                    o = (function (o) {
                        function e(e, t) {
                            var i = o.call(this, e, t) || this;
                            return (i.guideStage = null), (i.handScript = null), d.default.getInstance().setNeedShowGuideInResultPage(!0), i;
                        }
                        return (
                            __extends(e, o),
                            (e.prototype.onLoad = function () {
                                o.prototype.onLoad.call(this), (this.stageStates[s.Utility.GAMESTAGE.GUIDE] = new n.StageState(!1));
                            }),
                            (e.prototype.start = function () {
                                o.prototype.start.call(this), this.renderSwitch.enableCocosRender(), this.renderSwitch.disableCocosTouch(), this.renderSwitch.enableTouchHandler();
                            }),
                            (e.prototype.initGame = function () {
                                if (this.music) {
                                    this.getGameRegion();
                                    if (null == this.levelRecord || this.levelRecord.mBestStar < 3) {
                                        var e = f.LevelMgr.Ins().getRewardGold(this.level.id),
                                            t = this.getGameNode(),
                                            i = new m.default(t.getChildByTag(s.Utility.GAMESTAGE.MONEY));
                                        (this.moneyStage = new c.default(this, i, e.gold, e.goldline)), this.moneyStage.init(), this.moneyStage.activeNode(!1);
                                    }
                                    var o = this.getGameNode(),
                                        n = new m.default(o.getChildByTag(s.Utility.GAMESTAGE.GUIDE));
                                    (this.guideStage = new r.default(this, n, this)), this.guideStage.init(152), this.guideStage.activeNode(!0);
                                    var a = new m.default(o.getChildByTag(s.Utility.GAMESTAGE.MUSIC));
                                    (this.firstStage = new l.default(this, a)), (this.infiniteStage = this.firstStage), (this.currentStage = this.guideStage), this.startGameStageSwitch(s.Utility.GAMESTAGE.GUIDE);
                                }
                            }),
                            (e.prototype.createUI = function () {
                                o.prototype.createUI.call(this);
                                var e = new u.default();
                                e.move(0, 0, this.gameSceneSize.width, this.gameSceneSize.height), this.blockRegionNode.addChild(e, s.Utility.GAMESTAGE.GUIDE);
                            }),
                            (e.prototype.doLoading = function () {
                                o.prototype.doLoading.call(this);
                                var e = y.default.getInstance().getLanguageByKey('label_text.new_guide_theme');
                                this.banner.show(e, '');
                            }),
                            (e.prototype.startRun = function () {
                                o.prototype.startRun.call(this), this.endGuide();
                            }),
                            (e.prototype.finishGameStage = function (e) {
                                e === s.Utility.GAMESTAGE.GUIDE ? ((this.stageStates[e].finish = !0), this.startGameStageSwitch(s.Utility.GAMESTAGE.MUSIC)) : o.prototype.finishGameStage.call(this, e);
                            }),
                            (e.prototype.startGameStageSwitch = function (e) {
                                e === s.Utility.GAMESTAGE.MUSIC ? (a.G.Ap.state.enterGameStage(e), this.guideStage.setRunning(!1), this.guideStage.activeNode(!1), this.firstStage.init(152), this.firstStage.activeNode(!0), (this.currentStage = this.firstStage), this.updateUI(), this.banner.setVisible(!0), a.G.Ap.state.pause(), this.guideFinish()) : o.prototype.startGameStageSwitch.call(this, e);
                            }),
                            (e.prototype.attainScore = function (e) {
                                a.G.Ap.state.getGameStage() !== s.Utility.GAMESTAGE.GUIDE && o.prototype.attainScore.call(this, e);
                            }),
                            (e.prototype.pauseGame = function () {
                                a.G.Ap.state.getGameStage() === s.Utility.GAMESTAGE.GUIDE ? a.G.Ap.state.pause() : o.prototype.pauseGame.call(this);
                            }),
                            (e.prototype.resumeGame = function () {
                                a.G.Ap.state.getGameStage() === s.Utility.GAMESTAGE.GUIDE ? a.G.Ap.state.resume() : o.prototype.resumeGame.call(this);
                            }),
                            (e.prototype.showReliveDialog = function () {
                                return o.prototype.showReliveDialog.call(this);
                            }),
                            (e.prototype.reliveGame = function (e) {
                                o.prototype.reliveGame.call(this, e);
                            }),
                            (e.prototype.hideBanner = function () {
                                this.banner.hide();
                            }),
                            (e.prototype.shortBlockGuide = function (e, t) {}),
                            (e.prototype.longBlockBeginGuide = function (e, t) {
                                if (this.handScript) {
                                    var i = e.x + Math.floor(e.width / 2),
                                        o = a.G.Ap.config.presentHeight - (e.y + t + 150),
                                        n = '长块出现，按住千万别松开哦！';
                                    y.default.getInstance().isEnglish() && (n = 'Press the long tile and hold down'), this.handScript.setDataFroGameScene(n, !1, p.CircleColor.YELLOW, p.TipPos.DOWN, new cc.Vec2(i, o));
                                }
                            }),
                            (e.prototype.longBlockGuide = function (e, t) {
                                this.handScript && this.handScript.setDataFroGameScene(null, !1, p.CircleColor.YELLOW, p.TipPos.DOWN, null);
                            }),
                            (e.prototype.longBlockEndGuide = function (e, t) {
                                if (this.handScript) {
                                    var i = '长块结束，干的漂亮！松开手指吧。';
                                    y.default.getInstance().isEnglish() && (i = 'The end of the long block, beautiful! \nRelease your finger.'), this.handScript.setDataFroGameScene(i, !1, p.CircleColor.YELLOW, p.TipPos.DOWN, null);
                                }
                            }),
                            (e.prototype.guideFinish = function () {
                                var o = this;
                                this.showGuide(!1),
                                    g.default.load('prefab/newtarget/FirstFailTipDialog', function (e, t) {
                                        if (!e && t) {
                                            var i = t.getComponent(h.default);
                                            i.setType(h.DIALOG_TYPE.CONTRA),
                                                i.setBtnClickCallback(function () {
                                                    t.removeFromParent(), o.onGuideFinishClick();
                                                }),
                                                o.renderSwitch.getRenderNode().addChild(t),
                                                o.renderSwitch.saveStatus(),
                                                o.renderSwitch.enableCocosRender(),
                                                o.renderSwitch.enableCocosTouch(),
                                                o.renderSwitch.disableTouchHandler(),
                                                _.UserInfoBtnManager.getInstance().createOnGameScene(function () {
                                                    t.removeFromParent(), o.onGuideFinishClick();
                                                });
                                        }
                                    });
                            }),
                            (e.prototype.onGuideFinishClick = function () {
                                this.renderSwitch.restoreStatus(), this.prepareModule(), this.showGuide(!0), this.startBlockGuide();
                            }),
                            (e.prototype.prepareModule = function () {
                                this.moduleManager.prepareAllModules();
                            }),
                            (e.prototype.startBlockGuide = function () {
                                if (this.handScript) {
                                    var e = this.firstStage.guide.getStartBlockRect(),
                                        t = 0 - this.firstStage.guide.map.move,
                                        i = e.x + Math.floor(e.width / 2),
                                        o = a.G.Ap.config.presentHeight - (e.y + t + Math.floor(e.height / 2));
                                    this.handScript.setDataFroGameScene(null, !1, p.CircleColor.YELLOW, p.TipPos.DOWN, new cc.Vec2(i, o));
                                }
                            }),
                            (e.prototype.showGuide = function (e) {
                                this.handScript && (this.handScript.node.active = e);
                            }),
                            (e.prototype.endGuide = function () {
                                this.handScript && this.handScript.node.parent && (this.handScript.node.removeFromParent(), (this.handScript = null)), d.default.getInstance().setGuideShowed(!0);
                            }),
                            e
                        );
                    })(n.default);
                (i.default = o), cc._RF.pop();
            },
            {
                '../base/G': 'G',
                '../business/Logic/I18nManager': 'I18nManager',
                '../business/Logic/LevelMgr': 'LevelMgr',
                '../business/UI/GameEntraScene/PrefabMgr': 'PrefabMgr',
                '../business/UI/UserInfoBtnManager': 'UserInfoBtnManager',
                '../business/gameover/ReliveFreeDialogTipDialog': 'ReliveFreeDialogTipDialog',
                '../business/task/newguidance/NewGuidancePrefab': 'NewGuidancePrefab',
                '../util/Utility': 'Utility',
                './GameScene': 'GameScene',
                './GameSceneSetting': 'GameSceneSetting',
                './MUI/MUINode': 'MUINode',
                './ctrl/GameStageGuide': 'GameStageGuide',
                './ctrl/GameStageMoney': 'GameStageMoney',
                './ctrl/GameStageMusic': 'GameStageMusic',
                './view/GameStageNodeView': 'GameStageNodeView',
            },
        ],
        FirstSongTask: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'a1417AxDoxC+b4aPB3A82VF', 'FirstSongTask'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./TaskItemImpl'),
                    n = e('../TaskItem'),
                    a = e('../../Logic/PlayerMgr'),
                    r = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.update = function () {
                                this.isTaskSuccess() ? ((this.currentStep = this.totalStep), (this.status = n.TaskStatus.TASK_STATUS_SUCCESS)) : ((this.currentStep = 0), (this.status = n.TaskStatus.TASK_STATUS_DOING));
                            }),
                            (t.prototype.isTaskSuccess = function () {
                                if (1 === a.default.Ins().getUserLevel() && a.default.Ins().getUserCurrentExp() < 5) return !1;
                                return !0;
                            }),
                            t
                        );
                    })(o.default);
                (i.default = r), cc._RF.pop();
            },
            {
                '../../Logic/PlayerMgr': 'PlayerMgr',
                '../TaskItem': 'TaskItem',
                './TaskItemImpl': 'TaskItemImpl',
            },
        ],
        FogWorker: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'a550eE29f5Or6Feoj15friT', 'FogWorker'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../workers/WorkerBase'),
                    n = e('../../workers/WorkerState'),
                    a = e('../../../property/PropertyDefines'),
                    r = e('../../../base/G'),
                    s = e('../../GameBus'),
                    c = e('../../MUI/MUISprite'),
                    l = e('../../../base/Log'),
                    u = (function (t) {
                        function e() {
                            var e = t.call(this, 'FogWorker') || this;
                            return (e.Property = null), (e.OnCompleted = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.onStart = function () {
                                for (var e = this, t = [], i = 0; i < arguments.length; i++) t[i] = arguments[i];
                                try {
                                    if (t && t.length <= 0) return;
                                    (this.Property = new a.Property(a.PROPERTYTYPE.GAME_FOG)), (this.stage = t[1]), (this.stage.propertyWorked = !0);
                                    new c.default('GiftIcon');
                                    var o = this.updateAdditionTime(5);
                                    s.default.getInstance().scheduler.scheduleOnce(function () {
                                        e.OnCompleted();
                                    }, o),
                                        r.G.Ap.state.startPropertyWork(this.Property),
                                        console.log('--- FogWorker onStart args:---', t);
                                } catch (e) {
                                    console.log('--- FogWorker onStart err:---', e);
                                }
                            }),
                            (e.prototype.updateAdditionTime = function (e) {
                                var t = e,
                                    i = r.G.propAddition.getAdditionFogTime(e, r.G.Ap.state.mission.getType().toString());
                                return l.default.e('迷雾 时间加成：' + t + '  => ' + i), i;
                            }),
                            (e.prototype.onStop = function () {
                                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                                try {
                                    return console.log('--- FogWorker onStop args:---', e), (this.stage.propertyWorked = !1), void r.G.Ap.state.stopPropertyWork(this.Property);
                                } catch (e) {
                                    console.log('--- FogWorker onStop err:---', e);
                                }
                            }),
                            (e.prototype.onPause = function () {
                                console.log('--- FogWorker onPause---');
                            }),
                            (e.prototype.onResume = function () {
                                console.log('--- FogWorker onResume---');
                            }),
                            (e.prototype.onStateChanged = function (e) {
                                console.log('--- FogWorker onStateChanged args:---', e);
                                e.state;
                                n.WorkerState.stopped;
                            }),
                            (e.prototype.reset = function () {
                                this.Property = null;
                            }),
                            e
                        );
                    })(o.WorkerBase);
                (i.default = u), cc._RF.pop();
            },
            {
                '../../../base/G': 'G',
                '../../../base/Log': 'Log',
                '../../../property/PropertyDefines': 'PropertyDefines',
                '../../GameBus': 'GameBus',
                '../../MUI/MUISprite': 'MUISprite',
                '../../workers/WorkerBase': 'WorkerBase',
                '../../workers/WorkerState': 'WorkerState',
            },
        ],
        FollowGiftsPrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'dbe5ePwiPJBqZmdoU00RSc/', 'FollowGiftsPrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../util/PU'),
                    n = e('../../SubscriptionUtils'),
                    a = e('../Logic/EventBus'),
                    r = e('../Logic/NotifyEvent'),
                    s = e('../../infoc/m_p2_Uaction'),
                    c = cc._decorator,
                    l = c.ccclass,
                    u = c.property,
                    d = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mLabel = null), (e.mFollowButton = null), (e.mBg = null), (e.mList = null), (e.mItem1 = null), (e.mItem2 = null), (e.mItem3 = null), (e.mDiamond = null), (e.mCoin = null), (e.mSkin = null), (e.mSkinTerm = null), (e.mCallBack = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.onLoad = function () {
                                this.initListener(), this.initUI();
                            }),
                            (e.prototype.start = function () {}),
                            (e.prototype.initListener = function () {
                                var e = this;
                                this.mBg.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                }),
                                    this.mFollowButton.node.on(
                                        cc.Node.EventType.TOUCH_START,
                                        function () {
                                            e.followSubscription();
                                        },
                                        this,
                                    ),
                                    this.mLabel.node.on(
                                        cc.Node.EventType.TOUCH_END,
                                        function () {
                                            s.default.report(0, s.default.ACTION_FOLLOW_DIALOG_CLOSE), e.close();
                                        },
                                        this,
                                    ),
                                    a.default.register(r.default.GAIN_REWARD_FROM_DESCRIPTION, this.close, this);
                            }),
                            (e.prototype.initUI = function () {
                                if (o.default.isQQ()) {
                                    this.mItem3.active = !1;
                                    var e = this.mList.getComponent(cc.Widget);
                                    (e.top = 445), e.updateAlignment();
                                }
                                (this.mDiamond.string = '钻石x' + n.SubscriptionUtils.REWARD_DIAMOND), (this.mCoin.string = '金币x' + n.SubscriptionUtils.REWARD_COIN), (this.mSkin.string = n.SubscriptionUtils.REWARD_SKIN), (this.mSkinTerm.string = '1天'), s.default.report(0, s.default.ACTION_FOLLOW_DIALOG_SHOW);
                            }),
                            (e.prototype.setCloseCallback = function (e) {
                                this.mCallBack = e;
                            }),
                            (e.prototype.close = function () {
                                this.mCallBack && this.mCallBack(), a.default.remove(r.default.GAIN_REWARD_FROM_DESCRIPTION, this.close, this), this.node.parent.removeChild(this.node);
                            }),
                            (e.prototype.followSubscription = function () {
                                s.default.report(0, s.default.ACTION_FOLLOW_DIALOG_CLICK), n.SubscriptionUtils.followSubscription();
                            }),
                            __decorate([u(cc.Label)], e.prototype, 'mLabel', void 0),
                            __decorate([u(cc.Button)], e.prototype, 'mFollowButton', void 0),
                            __decorate([u(cc.Sprite)], e.prototype, 'mBg', void 0),
                            __decorate([u(cc.Node)], e.prototype, 'mList', void 0),
                            __decorate([u(cc.Node)], e.prototype, 'mItem1', void 0),
                            __decorate([u(cc.Node)], e.prototype, 'mItem2', void 0),
                            __decorate([u(cc.Node)], e.prototype, 'mItem3', void 0),
                            __decorate([u(cc.Label)], e.prototype, 'mDiamond', void 0),
                            __decorate([u(cc.Label)], e.prototype, 'mCoin', void 0),
                            __decorate([u(cc.Label)], e.prototype, 'mSkin', void 0),
                            __decorate([u(cc.Label)], e.prototype, 'mSkinTerm', void 0),
                            (e = __decorate([l], e))
                        );
                    })(cc.Component);
                (i.default = d), cc._RF.pop();
            },
            {
                '../../SubscriptionUtils': 'SubscriptionUtils',
                '../../infoc/m_p2_Uaction': 'm_p2_Uaction',
                '../../util/PU': 'PU',
                '../Logic/EventBus': 'EventBus',
                '../Logic/NotifyEvent': 'NotifyEvent',
            },
        ],
        FragmentBoxManager: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'a0bbfc1c8RIjpAKc0y/xofO', 'FragmentBoxManager'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var s = e('../DB/DBMgr'),
                    o = (function () {
                        function e() {}
                        return (
                            (e.getInstance = function () {
                                return e.mInstance || (e.mInstance = new e()), e.mInstance;
                            }),
                            (e.prototype.getFragmentBoxVM = function () {
                                for (var e = [], t = 0, i = s.default.Ins().getDBRows(s.eDataBase.eDB_FragmentBox); t < i.length; t++) {
                                    var o = i[t],
                                        n = parseInt(o.mRowData[0]);
                                    if (n && 'number' == typeof n) {
                                        var a = new c(),
                                            r = o;
                                        (a.id = r.getId()), (a.rewardType = r.getRewardType()), (a.num = r.getNum()), (a.chanceMin = r.getChanceMin()), (a.chanceMax = r.getChanceMax()), e.push(a);
                                    }
                                }
                                return Object.seal(e);
                            }),
                            e
                        );
                    })();
                i.FragmentBoxManager = o;
                var c = function () {};
                (i.FragmentBoxVM = c), cc._RF.pop();
            },
            {
                '../DB/DBMgr': 'DBMgr',
            },
        ],
        FragmentBox: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'b52b0qA0yBDKpJ0Zg8gZAzL', 'FragmentBox'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.findFragmentBoxById = function (e) {
                                return this.find('RewardType', e);
                            }),
                            (t.prototype.getRow = function () {
                                return new a();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.FragmentBox = n;
                var a = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getId = function () {
                            return this.getInt('id');
                        }),
                        (t.prototype.getRewardType = function () {
                            return this.getString('RewardType');
                        }),
                        (t.prototype.getNum = function () {
                            return this.getInt('num');
                        }),
                        (t.prototype.getChanceMin = function () {
                            return this.getInt('chanceMin');
                        }),
                        (t.prototype.getChanceMax = function () {
                            return this.getInt('chanceMax');
                        }),
                        t
                    );
                })(o.default);
                (i.FragmentBoxRow = a), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        GameApp: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '662745bXWZEmbS1OHxKYcxL', 'GameApp'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./Presenter'),
                    n = e('./Data'),
                    a = e('./State'),
                    r = e('./Config'),
                    s = e('./Sound'),
                    c = e('../util/AutomaticTest'),
                    l = e('../skin/SkinMgr'),
                    u = e('../anticheat/AntiCheatProbe'),
                    d = e('../property/PropertyPack'),
                    p = (function () {
                        function e() {
                            (this.presenter = new o.default()), (this.data = new n.default()), (this.state = new a.default()), (this.config = new r.default()), (this.sound = new s.default()), (this.autoTester = new c.default()), (this.skinMgr = new l.default()), (this.antiCheat = new u.default()), (this.propertyPack = new d.default()), (this.performanceCounter = null);
                        }
                        return (
                            (e.prototype.initlizeOnLoadStart = function () {}),
                            (e.prototype.initlizeOnLoadFinish = function () {
                                this.antiCheat.initilize();
                            }),
                            (e.prototype.initializeOnLoadDataFinish = function () {
                                this.propertyPack.initilize();
                            }),
                            e
                        );
                    })();
                (i.default = p), cc._RF.pop();
            },
            {
                '../anticheat/AntiCheatProbe': 'AntiCheatProbe',
                '../property/PropertyPack': 'PropertyPack',
                '../skin/SkinMgr': 'SkinMgr',
                '../util/AutomaticTest': 'AutomaticTest',
                './Config': 'Config',
                './Data': 'Data',
                './Presenter': 'Presenter',
                './Sound': 'Sound',
                './State': 'State',
            },
        ],
        GameBus: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '6476aQAhHFIW72oFMmSCsT0', 'GameBus'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {
                        (this.animationMgr = null), (this.scheduler = null), (this.natureScheduler = null);
                    }
                    return (
                        (e.getInstance = function () {
                            return null == e.sInstance && (e.sInstance = new e()), e.sInstance;
                        }),
                        (e.prototype.getAnimationMgr = function () {
                            return this.animationMgr;
                        }),
                        (e.prototype.getScheduler = function () {
                            return this.scheduler;
                        }),
                        (e.prototype.getNatureScheduler = function () {
                            return this.natureScheduler;
                        }),
                        (e.sInstance = null),
                        e
                    );
                })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        GameClub: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'bb7400HtaFD4IuOmVibIJqs', 'GameClub'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('../../util/PU'),
                    a = e('../../util/SUtil'),
                    r = e('../../infoc/m_p2_Uaction'),
                    s = e('../../util/Utility'),
                    o = (function () {
                        function o() {}
                        return (
                            (o.show = function (e) {
                                if (this.mGameClubButton) return this.mGameClubButton.show(), (o.mIsShow = !0);
                                if (n.default.isWeiXin() && 0 <= s.Utility.compareVersion(n.default.SDKVersion, '2.0.3')) {
                                    var t = void 0;
                                    if (a.SUtil.ins().isLiuHai())
                                        switch (e) {
                                            case 0:
                                                t = 858 / a.SUtil.ins().mScreenHeight;
                                                break;
                                            case 1:
                                                t = 760 / a.SUtil.ins().mScreenHeight;
                                                break;
                                            case 2:
                                                t = 670 / a.SUtil.ins().mScreenHeight;
                                        }
                                    else if (a.SUtil.ins().isQuanMian())
                                        switch (e) {
                                            case 0:
                                                t = 785 / a.SUtil.ins().mScreenHeight;
                                                break;
                                            case 1:
                                                t = 690 / a.SUtil.ins().mScreenHeight;
                                                break;
                                            case 2:
                                                t = 600 / a.SUtil.ins().mScreenHeight;
                                        }
                                    else if (a.SUtil.ins().isPuTong())
                                        switch (e) {
                                            case 0:
                                                t = 740 / a.SUtil.ins().mScreenHeight;
                                                break;
                                            case 1:
                                                t = 645 / a.SUtil.ins().mScreenHeight;
                                                break;
                                            case 2:
                                                t = 555 / a.SUtil.ins().mScreenHeight;
                                        }
                                    var i = (n.default.windowWidth / 720) * 44;
                                    return (
                                        (this.mGameClubButton = wx.createGameClubButton({
                                            icon: 'white',
                                            style: {
                                                left: (39 * n.default.windowWidth) / 720,
                                                top: n.default.windowHeight * t,
                                                width: i,
                                                height: i,
                                            },
                                        })),
                                        this.mGameClubButton.onTap(function (e) {
                                            console.log(e), r.default.report(0, r.default.ACTION_CLICK_PLAYER_CYCLE);
                                        }),
                                        (o.mIsShow = !0)
                                    );
                                }
                                return !1;
                            }),
                            (o.hide = function () {
                                var e = o.mIsShow;
                                return this.mGameClubButton && o.mIsShow && (this.mGameClubButton.hide(), (o.mIsShow = !1)), e;
                            }),
                            (o.destroy = function () {
                                this.mGameClubButton && (this.mGameClubButton.destroy(), (this.mGameClubButton = null), (o.mIsShow = !1));
                            }),
                            (o.mIsShow = !1),
                            o
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../../infoc/m_p2_Uaction': 'm_p2_Uaction',
                '../../util/PU': 'PU',
                '../../util/SUtil': 'SUtil',
                '../../util/Utility': 'Utility',
            },
        ],
        GameDefine: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'f0f279YGIhK3q2ag6hZdZTC', 'GameDefine'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o,
                    n,
                    a,
                    r = e('../Logic/Level');
                ((n = o = i.eFromTab || (i.eFromTab = {}))[(n.FROM_NONE = 0)] = 'FROM_NONE'), (n[(n.FROM_HOME = 1)] = 'FROM_HOME'), (n[(n.FROM_MUSIC = 2)] = 'FROM_MUSIC'), (n[(n.FROM_HALL = 3)] = 'FROM_HALL'), (n[(n.FROM_MORESONG = 4)] = 'FROM_MORESONG'), (n[(n.FROM_ME = 5)] = 'FROM_ME'), ((a = i.eFromMusicListTab || (i.eFromMusicListTab = {}))[(a.FROM_ML_LEVEL = 0)] = 'FROM_ML_LEVEL'), (a[(a.FROM_ML_UNLEVEL = 1)] = 'FROM_ML_UNLEVEL'), (a[(a.FROM_ML_FAVOR = 2)] = 'FROM_ML_FAVOR'), (a[(a.FROM_ML_END = 3)] = 'FROM_ML_END');
                var s = (function () {
                    function e() {}
                    return (e.DIAMONDSONG_STARTID = 700), (e.TRIAL_SONG_ID = 400), (e.CHOICENESS_STARTID = 9e3), (e.CLOUD_HOTSONG_URL = 'https://piano-weixin-game.cmcm.com/pianotiles2/cfg/hotsong/hotsong_config.json'), e;
                })();
                i.Constant = s;
                var c = function () {
                    (this.mId = 0), (this.mMid = 0), (this.mUnlockFlag = l.FLAG_NONE), (this.mItemPlayMusicAnim = !1), (this.mSymbol = r.eSymbolKind.eSymbolDefault), (this.mRewardEXP1 = 0), (this.mRewardEXP2 = 0), (this.mRewardEXP3 = 0), (this.mRewar3Gold = 0), (this.mRewar3Goldline = 0), (this.mRewarPro = 0), (this.mRewarMax = 0), (this.mFromTab = o.FROM_NONE), (this.mRewarID = 0), (this.mActivity = 0);
                };
                i.LevelInfo = c;
                var l,
                    u,
                    d,
                    p = (function () {
                        function e() {
                            (this.mId = 0), (this.mMid = 0), (this.mBestScore = 0), (this.mBestStar = 0), (this.mBestSpeed = 0), (this.mScore = 0), (this.mStar = 0), (this.mSpeed = 0), (this.mBadBlockType = 0), (this.mBadBlcokCount = 0), (this.mbadEndBlock = 0), (this.mIsFirstPassed = !1), (this.mIsFirstBlood = !1), (this.mIsFirstSecond = !1), (this.mIsFirstFour = !1), (this.mIsFirstFive = !1), (this.mIsFirstSix = !1), (this.mLockFb = !1), (this.mUnlockFlag = l.FLAG_NONE), (this.mExp = 0), (this.mCoin = 0), (this.mIsUpLevel = !1), (this.mIsFisrtGame = !1), (this.mFrom = 0), (this.mbest = !1), (this.mGainedGold = 0);
                        }
                        return (
                            (e.prototype.isRecordLocked = function () {
                                return 1 != this.mId && e.isLocked(this.mUnlockFlag);
                            }),
                            (e.isLocked = function (e) {
                                return e == l.FLAG_LOCKED_LV || e == l.FLAG_LOCKED_GOLD || e == l.FLAG_LOCKED_STAR || e == l.FLAG_LOCKED_DIAMOND || e == l.FLAG_LOCKED_LV_TRY;
                            }),
                            (e.prototype.clearData = function () {
                                (this.mBestScore = 0), (this.mBestStar = 0), (this.mBestSpeed = 0);
                            }),
                            (e.prototype.isEmpty = function () {
                                var e = this.isRecordLocked();
                                return !(0 != this.mBestScore || !e);
                            }),
                            e
                        );
                    })();
                (i.LevelRecord = p), ((u = l = i.eUnlockFlag || (i.eUnlockFlag = {}))[(u.FLAG_NONE = 0)] = 'FLAG_NONE'), (u[(u.FLAG_LOCKED_LV = 1)] = 'FLAG_LOCKED_LV'), (u[(u.FLAG_LOCKED_GOLD = 2)] = 'FLAG_LOCKED_GOLD'), (u[(u.FLAG_LOCKED_STAR = 3)] = 'FLAG_LOCKED_STAR'), (u[(u.FLAG_UNLOCKED = 4)] = 'FLAG_UNLOCKED'), (u[(u.FLAG_UNLOCK_LV = 5)] = 'FLAG_UNLOCK_LV'), (u[(u.FLAG_UNLOCK_LV_SHOWN = 6)] = 'FLAG_UNLOCK_LV_SHOWN'), (u[(u.FLAG_UNLOCK_GOLD = 7)] = 'FLAG_UNLOCK_GOLD'), (u[(u.FLAG_UNLOCK_GOLD_SHOWN = 8)] = 'FLAG_UNLOCK_GOLD_SHOWN'), (u[(u.FLAG_UNLOCK_STAR = 9)] = 'FLAG_UNLOCK_STAR'), (u[(u.FLAG_UNLOCK_STAR_SHOWN = 10)] = 'FLAG_UNLOCK_STAR_SHOWN'), (u[(u.FLAG_UNLOCK_DIAMOND = 11)] = 'FLAG_UNLOCK_DIAMOND'), (u[(u.FLAG_UNLOCK_DIAMOND_SHOWN = 12)] = 'FLAG_UNLOCK_DIAMOND_SHOWN'), (u[(u.FLAG_LOCKED_DIAMOND = 13)] = 'FLAG_LOCKED_DIAMOND'), (u[(u.FLAG_LOCKED_ACTIVITY = 14)] = 'FLAG_LOCKED_ACTIVITY'), (u[(u.FLAG_LOCKED_LV_TRY = 19)] = 'FLAG_LOCKED_LV_TRY'), (u[(u.FLAG_UNLOCK_SHARE = 20)] = 'FLAG_UNLOCK_SHARE'), (u[(u.FLAG_UNLOCK_BY_VIP = 21)] = 'FLAG_UNLOCK_BY_VIP'), (u[(u.FLAG_LOCKED_VIDEO = 22)] = 'FLAG_LOCKED_VIDEO'), ((d = i.eLanguage || (i.eLanguage = {}))[(d.LANGUAGE_NONE = 0)] = 'LANGUAGE_NONE'), (d[(d.LANGUAGE_EN = 1)] = 'LANGUAGE_EN'), (d[(d.LANGUAGE_ZH_CN = 2)] = 'LANGUAGE_ZH_CN'), (d[(d.LANGUAGE_ZH_TW = 3)] = 'LANGUAGE_ZH_TW'), (d[(d.LANGUAGE_DE = 4)] = 'LANGUAGE_DE'), (d[(d.LANGUAGE_FR = 5)] = 'LANGUAGE_FR'), (d[(d.LANGUAGE_NL = 6)] = 'LANGUAGE_NL'), (d[(d.LANGUAGE_NW = 7)] = 'LANGUAGE_NW'), (d[(d.LANGUAGE_PO = 8)] = 'LANGUAGE_PO'), (d[(d.LANGUAGE_TR = 9)] = 'LANGUAGE_TR'), (d[(d.LANGUAGE_ES = 10)] = 'LANGUAGE_ES'), (d[(d.LANGUAGE_IT = 11)] = 'LANGUAGE_IT'), (d[(d.LANGUAGE_AR = 12)] = 'LANGUAGE_AR'), (d[(d.LANGUAGE_KR = 13)] = 'LANGUAGE_KR'), (d[(d.LANGUAGE_JP = 14)] = 'LANGUAGE_JP'), (d[(d.LANGUAGE_RU = 15)] = 'LANGUAGE_RU'), (d[(d.LANGUAGE_IN = 16)] = 'LANGUAGE_IN'), cc._RF.pop();
            },
            {
                '../Logic/Level': 'Level',
            },
        ],
        GameEntranceSceneFirstEnter: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'b271579+n1CQq7ATVD/yq0u', 'GameEntranceSceneFirstEnter'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../util/SUtil'),
                    n = e('../MusicLevelDataLoader'),
                    a = e('../../../infoc/m_p2_Uaction'),
                    r = e('../../../util/SceneMusicMgr'),
                    s = e('../../../util/SceneMusicUtil'),
                    c = e('../../../base/G'),
                    l = e('../../../base/State'),
                    u = e('../../Logic/Plugin/PluginMgr'),
                    d = e('../../Logic/Plugin/IPlugin'),
                    p = e('../../../gamescene/GameSceneSetting'),
                    h = e('../../../base/Startup'),
                    f = e('../../../util/PU'),
                    m = e('../../Logic/I18nManager'),
                    g = e('../../UI/GameEntraScene/ImgCache'),
                    _ = e('../../keypad/KeypadNavigator'),
                    y = e('../../../../modules/MGAdv/scripts/Logic/MGAdvDefine'),
                    S = e('../../../../modules/MGAdv/scripts/Logic/MGAdvEntrance'),
                    v = cc._decorator,
                    I = v.ccclass,
                    T = v.property,
                    C = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mFirstEnterStartBtn = null), (e.mFirstStartTopLabel = null), (e.mFirstStartDiscSprite = null), (e.mFirstStartNameLabel = null), (e.mFirstStartBottomLabelPanel = null), (e.startTime = 0), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.enResLoad = function () {
                                var i = this;
                                this.enSpriteSetNull(),
                                    g.default.get('static_res/little_star_button_start_normal_en', function (e, t) {
                                        cc.isValid(i, !0) && (i.mFirstEnterStartBtn.normalSprite = t);
                                    }),
                                    g.default.get('static_res/little_star_button_start_pressend_en', function (e, t) {
                                        cc.isValid(i, !0) && (i.mFirstEnterStartBtn.pressedSprite = t);
                                    });
                            }),
                            (e.prototype.enSpriteSetNull = function () {
                                this.mFirstEnterStartBtn.getComponent(cc.Sprite).spriteFrame = null;
                            }),
                            (e.prototype.onLoad = function () {
                                m.default.getInstance().isEnglish() && this.enResLoad(), this.loadLittleStarScene();
                            }),
                            (e.prototype.start = function () {
                                this.adaptorUI(), (this.startTime = Date.now()), f.default.isCM() && (h.default.hasReportTimecost || (h.default.hasReportTimecost = !0), f.default.isCM() && CMPlay.Infoc.reportAction(CMPlay.ACTION.GUIDE_PAGE)), _.default.getInstance().gotoPage(this.node, 'FirstEnter');
                            }),
                            (e.prototype.play = function (t) {
                                r.default.stop(r.default.NAME_MOVIE_CYCLE),
                                    s.default.playBtnBeats(),
                                    c.G.Ap.state.reset(),
                                    (c.G.Ap.state.mission = new l.Mission(t.id, t.musicId, !1)),
                                    c.G.Ap.config.loadMusic(t.musicId, function (e) {
                                        u.default.Ins().getPlugin(d.default.Plugin_Energy).decreaseEnergy(1), p.default.getInstance().setFromSource(p.FromSource.SOURCE_GUIDE), c.G.Ap.presenter.enterScene(c.G.GAME_SCENE_NAME, t.musicId);
                                    });
                            }),
                            (e.prototype.loadLittleStarScene = function () {
                                var t = this,
                                    i = n.MusicLevelDataLoader.getHomePageItemInfo();
                                this.mFirstEnterStartBtn.node.on(
                                    cc.Node.EventType.TOUCH_END,
                                    function () {
                                        var e = y.ADScene.PLAY_GAME;
                                        S.MGAdv.commercialBreak(e, y.QQ_ADV_TYPE.VIDEO_TYPE_PLAY_AGAIN, function (e) {
                                            t.play(i);
                                        });
                                    },
                                    this,
                                );
                                var e = cc.rotateBy(2, 90);
                                this.mFirstStartDiscSprite.node.runAction(cc.repeatForever(e)), a.default.report(0, a.default.ACTION_SHOW_FIRST_LITTLE_STAR);
                            }),
                            (e.prototype.adaptorUI = function () {
                                o.SUtil.ins().isLiuHai() ? (o.SUtil.ins().toTop(this.mFirstStartTopLabel, 18.5), o.SUtil.ins().toTop(this.mFirstStartDiscSprite, 25.3), o.SUtil.ins().toTop(this.mFirstStartNameLabel, 58.6), o.SUtil.ins().toTop(this.mFirstEnterStartBtn, 65.9), o.SUtil.ins().toTop(this.mFirstStartBottomLabelPanel, 88.1)) : o.SUtil.ins().isQuanMian() ? (o.SUtil.ins().toTop(this.mFirstStartTopLabel, 15.5), o.SUtil.ins().toTop(this.mFirstStartDiscSprite, 22.6), o.SUtil.ins().toTop(this.mFirstStartNameLabel, 58.8), o.SUtil.ins().toTop(this.mFirstEnterStartBtn, 66.6), o.SUtil.ins().toTop(this.mFirstStartBottomLabelPanel, 94.1)) : o.SUtil.ins().isPuTong() && (o.SUtil.ins().toTop(this.mFirstStartTopLabel, 11.3), o.SUtil.ins().toTop(this.mFirstStartDiscSprite, 19.5), o.SUtil.ins().toTop(this.mFirstStartNameLabel, 60.2), o.SUtil.ins().toTop(this.mFirstEnterStartBtn, 69), o.SUtil.ins().toTop(this.mFirstStartBottomLabelPanel, 93.4));
                            }),
                            __decorate([T(cc.Button)], e.prototype, 'mFirstEnterStartBtn', void 0),
                            __decorate([T(cc.Label)], e.prototype, 'mFirstStartTopLabel', void 0),
                            __decorate([T(cc.Sprite)], e.prototype, 'mFirstStartDiscSprite', void 0),
                            __decorate([T(cc.Label)], e.prototype, 'mFirstStartNameLabel', void 0),
                            __decorate([T(cc.Layout)], e.prototype, 'mFirstStartBottomLabelPanel', void 0),
                            (e = __decorate([I], e))
                        );
                    })(cc.Component);
                (i.default = C), cc._RF.pop();
            },
            {
                '../../../../modules/MGAdv/scripts/Logic/MGAdvDefine': 'MGAdvDefine',
                '../../../../modules/MGAdv/scripts/Logic/MGAdvEntrance': 'MGAdvEntrance',
                '../../../base/G': 'G',
                '../../../base/Startup': 'Startup',
                '../../../base/State': 'State',
                '../../../gamescene/GameSceneSetting': 'GameSceneSetting',
                '../../../infoc/m_p2_Uaction': 'm_p2_Uaction',
                '../../../util/PU': 'PU',
                '../../../util/SUtil': 'SUtil',
                '../../../util/SceneMusicMgr': 'SceneMusicMgr',
                '../../../util/SceneMusicUtil': 'SceneMusicUtil',
                '../../Logic/I18nManager': 'I18nManager',
                '../../Logic/Plugin/IPlugin': 'IPlugin',
                '../../Logic/Plugin/PluginMgr': 'PluginMgr',
                '../../UI/GameEntraScene/ImgCache': 'ImgCache',
                '../../keypad/KeypadNavigator': 'KeypadNavigator',
                '../MusicLevelDataLoader': 'MusicLevelDataLoader',
            },
        ],
        GameEntranceScene: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'fb2c0jkknRCAJgvQ81PRire', 'GameEntranceScene'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../Logic/PlayerMgr'),
                    s = e('../../../base/G'),
                    c = e('../MusicLevelDataLoader'),
                    l = e('../../Network/Protocol/StorageUtil'),
                    u = e('../../../config/LSKey'),
                    n = e('./BasicTouchEvent'),
                    a = e('./HomePagePrefb'),
                    d = e('../playerInfoPopup/PlayerInfoPopupProfab'),
                    p = e('../UserInfoManager'),
                    h = e('../../../util/TimeUtil'),
                    f = e('../../Logic/Plugin/PluginMgr'),
                    m = e('../../Logic/Plugin/IPlugin'),
                    g = e('../../../util/SceneMusicMgr'),
                    _ = e('../../Logic/EventBus'),
                    y = e('../../Logic/NotifyEvent'),
                    S = e('../../../infoc/m_p2_Uaction'),
                    v = e('../../../infoc/m_p2_pop_coin'),
                    I = e('../../../util/SUtil'),
                    T = e('../../Logic/MoneySystem'),
                    C = e('../../../gamescene/GameSceneSetting'),
                    E = e('./PopupDlg'),
                    A = e('../../skin/SkinStore'),
                    P = e('../dailyattendance/DailyAttendancePrefbScript'),
                    k = e('./CheckRewardProcessor'),
                    M = e('../../daily/DAwardMgr'),
                    L = e('./PrefabMgr'),
                    b = e('../../Logic/InviteSkinManager'),
                    N = e('../../../base/CrashMonitor'),
                    R = e('./MusicLib/MusicLibraryManager'),
                    D = e('./MusicLib/HotSongSplash'),
                    w = e('./ToastPrefab'),
                    B = e('./MusicLib/UnlockConfirmDialogPrefab'),
                    G = e('../../Logic/Plugin/UnlockProcessor'),
                    O = e('../../looper/ActivityLooper'),
                    U = e('../../../infoc/minigame_piano2_hotmusic'),
                    F = e('../../../base/Log'),
                    H = e('../../../infoc/m_p2_PData_Dia'),
                    x = e('./ToastPopManager'),
                    V = e('../../skin/SkinManager'),
                    K = e('../../task/TaskItem'),
                    W = e('../../task/newguidance/NewGuidanceLoader'),
                    Y = e('../../../util/PageHeap'),
                    Q = e('../../shop/DialogOneButtonPrefab'),
                    j = e('../../../util/PU'),
                    z = e('../../../../modules/MGAppShare/scripts/ShareHelper'),
                    q = e('../../music/MusicDownloadProcess'),
                    X = e('../../skin/SkinUtils'),
                    J = e('../../../util/QQReport'),
                    Z = e('../../skin/frag/SkinTaskMgr'),
                    $ = e('./mainpage/ShareSkinController'),
                    ee = e('../../daily/AttentionUtil'),
                    te = e('./MusicLib/HotMusicCMShareController'),
                    ie = e('../../Logic/I18nManager'),
                    oe = e('../../lottery/LotteryProcess'),
                    ne = e('../../lottery/LotteryIndex'),
                    ae = e('../../../infoc/InfocHelper'),
                    re = e('../../lottery/LotteryEnum'),
                    se = e('../../keypad/KeypadNavigator'),
                    ce = e('../../../../modules/MGAdv/scripts/Adapter/AdvHelperCMplay'),
                    r = cc._decorator,
                    le = r.ccclass,
                    ue = r.property,
                    de = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.top_energy_value_btn = null), (e.top_energy_value_label = null), (e.top_glod_value_btn = null), (e.top_gold_value_lable = null), (e.top_diamond_value_btn = null), (e.top_diamond_value_lable = null), (e.mTopIconPanel = null), (e.middle_content_layout = null), (e.mainpage_layout_preF = null), (e.mainpage_layout = null), (e.ranking_layout = null), (e.player_info_popup_layout = null), (e.mToastPopLayout = null), (e.mGlobalPopupContainer = null), (e.mAnimHeartLayout = null), (e.mHpTimeGroup = null), (e.mHpTimeLabel = null), (e.mGlobalRankLayout = null), (e.energy_btn = null), (e.gold_btn = null), (e.diamond_btn = null), (e.mEventStopNode = null), (e.mMusicLibrary = null), (e.mLitteStarNode = null), (e.mEnergyBtnClickCallback = null), (e.mGoldBtnClickCallback = null), (e.mDiamondBtnClickCallback = null), (e.mIsPlayEnergyAnim = !1), (e.mHomePageScriptNode = null), (e.mDiaogMgr = null), (e.mCheckRewardProcessor = null), (e.mCheckActivityRewardProcessor = null), (e.mShowingLittleStarLayout = !1), (e.mSkinStorePrefbNode = null), (e.mActivityLooper = null), (e.mShowNewTargetGuide = !1), (e.mMusicLibraryPrefb = null), (e.mIsFirst = !0), (e.mUpdateTask = []), (e.mProgressDlg = null), (e.isCheckingPopupDialogs = !1), (e.mCurrHotTab = !1), (e.isLoadingMusic = !1), e;
                        }
                        var r;
                        return (
                            __extends(e, t),
                            ((r = e).prototype.toSkinStoreFromAwardPageCallback = function (e, t) {
                                this.toHomeTab();
                            }),
                            (e.prototype.onLoad = function () {
                                N.default.end('GameEntranceScene'), _.default.register(y.default.HP_NOT_ENOUGH_ITEM_CLICK, this.hpNotEnoughCallback, this), _.default.register(y.default.HIDE_HOMEPAGE_EVENT_TOP_MASK, this.hideEventStopNode, this), _.default.register(y.default.SHOW_HOMEPAGE_EVENT_TOP_MASK, this.showEventStopNode, this), _.default.register(y.default.LIFE_CYCLE_ON_SHOW, this.onShow, this), _.default.register(y.default.SHOW_TEST_MONEY_NOT_ENOUGH_TOAST, this.showMusicToast, this), _.default.register(y.default.SHOW_MUSIC_LIB_UNLOCK_DIALOG, this.showMusicLibUnlockDialog, this), _.default.register(y.default.INVITE_SONG_LOOPER_START, this.startActivityLooper, this), _.default.register(y.default.INVITE_SONG_LOOPER_STOP, this.releaseActivityLooper, this), _.default.register(y.default.REWARTDPANEL_SHOW_SKINSTORE, this.toSkinStoreFromAwardPageCallback, this), _.default.register(y.default.REWARTDPANEL_SHOW_PIECE, this.toSkinStoreFromAwardPageCallback, this), _.default.register(y.default.SHARE_HOME_SHOW_INVITE_TIPS, this.showInviteTipsPopup, this), _.default.register(y.default.SPEC_SONG_TRY_SKIN_HOME, this.specSongTrySkin, this), _.default.register(y.default.LOAD_MUSIC, this.onLoadMusic, this), _.default.register(y.default.DIAMOND_BUY_TRUMPET_NOT_ENOUGH, this.buyTrumpetDiamondnotEnough, this), _.default.register(y.default.NEW_GUIDE_GO_CLICK, this.newGuideGoClick, this), (this.mDiaogMgr = new E.PopupDlg()), this.mDiaogMgr.setParentLayout(this.player_info_popup_layout), this.mDiaogMgr.setShowDialogCallback(this.onAddDialog.bind(this)), this.mDiaogMgr.setDismissDialogCallback(this.onRemoveDialog.bind(this)), this.updateToastLayout(), (this.mCheckRewardProcessor = new k.default(this.mDiaogMgr)), this.saveLoginGame(), this.loadNormalScene(), se.default.getInstance().gotoPage(this.node, 'MainPagePrefab', 'onLoad');
                            }),
                            (e.prototype.start = function () {
                                this.onSkinChange(),
                                    this.adaptorUI(),
                                    this.postUpdateTask(function () {
                                        q.MusicDownloadProcess.Ins().updateMusicPiano();
                                    });
                            }),
                            (e.prototype.onSkinChange = function () {
                                if ((this.applyBackgroundSkin(), this.applyHomePageSkin(), this.mainpage_layout)) {
                                    var e = this.mainpage_layout.getComponent(a.default);
                                    e && e.onSkinChange();
                                }
                                if (this.mSkinStorePrefbNode) {
                                    var t = this.mSkinStorePrefbNode.getComponent(A.default);
                                    t && t.onSkinChange();
                                }
                            }),
                            (e.prototype.postUpdateTask = function (e) {
                                this.mUpdateTask.push(e);
                            }),
                            (e.prototype.update = function (e) {
                                if (!s.G.Ap.config.debugNoBackgroundAnim) {
                                    var t = s.G.Ap.skinMgr.getCurrentSkinItem();
                                    if ((t && t.getSkinElementPainter().update(e, 'GameEntranceScene'), 0 < this.mUpdateTask.length)) this.mUpdateTask.shift()();
                                }
                            }),
                            (e.prototype.applyBackgroundSkin = function () {
                                if (!s.G.Ap.config.debugNoBackgroundAnim) {
                                    var e = s.G.Ap.skinMgr.getCurrentSkinItem();
                                    if (e) {
                                        var t = this.node.getChildByName('bg_share_star'),
                                            i = this.node.getChildByName('animation_bkg');
                                        e.getSkinElementPainter().captureBackground('GameEntranceScene', t, i);
                                    }
                                }
                            }),
                            (e.prototype.applyHomePageSkin = function () {
                                var e = s.G.Ap.skinMgr.getCurrentSkinItem();
                                e && e.getSkinElementPainter().captureElement('GameEntranceScene', 'parent', this.node.parent);
                            }),
                            (e.prototype.hpNotEnoughCallback = function () {
                                this.toEnergyDialog(v.default.SOURCE_ENERGY_NOT_CLICK_START);
                            }),
                            (e.prototype.hpReviveCallback = function (e, t) {
                                t <= 0 ? (this.mHpTimeGroup.node.active = !1) : ((this.mHpTimeGroup.node.active = !0), (this.mHpTimeLabel.string = h.default.convertSecondToMinutesSecond(t)));
                            }),
                            (e.prototype.loadNormalScene = function () {
                                switch ((l.default.save(u.default.HAS_SHOW_HOME_PAGE, 'true'), (this.mHpTimeGroup.node.active = !1), p.User.UserInfoManager.registerHpReviveListener(this.hpReviveCallback, this), o.default.Ins().addUserListener(this), r.DefaultPageIndex)) {
                                    case r.GAME_ENTRA_SCENE_INDEX.HOMEPAGE_INDEX:
                                        this.toHomeTab();
                                        break;
                                    case r.GAME_ENTRA_SCENE_INDEX.MUSIC_LIB_INDEX:
                                        this.isSongTryFinish() ? this.toMusicLibTab(!0) : this.toMusicLibTab();
                                        break;
                                    case r.GAME_ENTRA_SCENE_INDEX.CHALLENGE_INDEX:
                                        this.toHomeTab();
                                        break;
                                    case r.GAME_ENTRA_SCENE_INDEX.TO_HOT_INDEX:
                                        this.toMusicLibTab(!0);
                                        break;
                                    case r.GAME_ENTRA_SCENE_INDEX.TO_FIGHT_INDEX:
                                        this.toHomeTab();
                                        break;
                                    case r.GAME_ENTRA_SCENE_INDEX.TO_SKIN_PAGE:
                                }
                                (r.DefaultPageIndex = r.GAME_ENTRA_SCENE_INDEX.NONE_INDEX), this.initEvents();
                            }),
                            (e.prototype.initEvents = function () {
                                var e = this;
                                (this.mEnergyBtnClickCallback = new n.default(function () {
                                    e.toEnergyDialog(v.default.SOURCE_HOME_ENERGY), S.default.report(0, S.default.ACTION_CLICK_ENERGY);
                                })),
                                    this.energy_btn.node.on(cc.Node.EventType.TOUCH_END, this.mEnergyBtnClickCallback.click, this.mEnergyBtnClickCallback),
                                    (this.mGoldBtnClickCallback = new n.default(function () {
                                        e.goldBtnClick(v.default.SOURCE_HOME_GOLD), S.default.report(0, S.default.ACTION_CLICK_GOLD);
                                    })),
                                    this.gold_btn.node.on(cc.Node.EventType.TOUCH_END, this.mGoldBtnClickCallback.click, this.mGoldBtnClickCallback),
                                    (this.mDiamondBtnClickCallback = new n.default(function () {
                                        e.diamondBtnClick(v.default.SOURCE_HOME_DIAMOND), S.default.report(0, S.default.ACTION_CLICK_DIAMOND);
                                    })),
                                    this.diamond_btn.node.on(cc.Node.EventType.TOUCH_END, this.mDiamondBtnClickCallback.click, this.mDiamondBtnClickCallback);
                            }),
                            (e.prototype.onHomeTabClickCallback = function (e) {
                                this.toHomeTab();
                            }),
                            (e.prototype.toHomeTab = function () {
                                var n = this;
                                F.default.l('[GameEntranceScene.toHomeTab] enter'),
                                    S.default.report(c.MusicLevelDataLoader.getHomePageItemInfo().musicId, S.default.ACTION_SHOW_HOME_TAB),
                                    this.mainpage_layout
                                        ? ((this.mainpage_layout.active = !0), this.mHomePageScriptNode.onStart(), this.mHomePageScriptNode.onShow())
                                        : ((this.mainpage_layout = cc.instantiate(this.mainpage_layout_preF)),
                                          this.middle_content_layout.node.addChild(this.mainpage_layout),
                                          (this.mHomePageScriptNode = this.mainpage_layout.getComponent(a.default)),
                                          this.mHomePageScriptNode.setSlidePanelLoadFinish(function () {
                                              n.scheduleOnce(function () {
                                                  se.default.getInstance().isNodeExists('DailyBtn') || se.default.getInstance().refreshPage(n.node, 'MainPagePrefab');
                                              }, 1);
                                          }),
                                          Y.default.Ins().push('HomePage')),
                                    this.mHomePageScriptNode && this.mHomePageScriptNode.checkTargetIcon(),
                                    this.hideRankPage(),
                                    this.hideMusicPage(),
                                    (this.mTopIconPanel.node.active = !0),
                                    this.mHomePageScriptNode.setUseEnergyCallback(function (e) {
                                        if ((console.warn('setUseEnergyCallback => spendEnergy:' + e), 0 == e)) return n.showEventStopNode(), n.mHomePageScriptNode.startGame(!1), void n.hideEventStopNode();
                                        if (f.default.Ins().getPlugin(m.default.Plugin_Energy).isCurEnergyEnough()) {
                                            if (!n.mIsPlayEnergyAnim) {
                                                (n.mIsPlayEnergyAnim = !0), n.showEventStopNode();
                                                var t = n.mAnimHeartLayout.getPosition(),
                                                    i = n.mHomePageScriptNode.getStartBtnPosition(),
                                                    o = cc.moveTo(0.5, i);
                                                (n.mAnimHeartLayout.active = !0),
                                                    n.scheduleOnce(function () {
                                                        var e = cc.sequence(
                                                            o,
                                                            cc.callFunc(function () {
                                                                var e = n.mAnimHeartLayout.getComponent(cc.Animation);
                                                                e.once(
                                                                    'finished',
                                                                    function () {
                                                                        n.mHomePageScriptNode.startGame(), n.hideEventStopNode(), (n.mIsPlayEnergyAnim = !1), n.mAnimHeartLayout.setPosition(t), (n.mHeartAnimNode.opacity = 255), (n.mAnimHeartLayout.active = !1);
                                                                    },
                                                                    n,
                                                                ),
                                                                    e.play('heart_anim'),
                                                                    g.default.play(g.default.NAME_CONSUME_LIFE, g.default.PATH_CONSUME_LIFE, !1);
                                                            }),
                                                        );
                                                        n.mAnimHeartLayout.runAction(e);
                                                    }, 0.02);
                                            }
                                        } else n.toEnergyDialog(v.default.SOURCE_ENERGY_NOT_CLICK_START);
                                    }),
                                    this.mHomePageScriptNode.setHomeShareGiftClickCallback(function () {}),
                                    this.mHomePageScriptNode.setHomeDailyAtdcClickCallback(function () {
                                        n.showDailyAttendanceDlg();
                                    }),
                                    this.mHomePageScriptNode.setShowSkinStoreCallback(function () {
                                        n.showSkinStorePopup(!1);
                                    }),
                                    this.mHomePageScriptNode.setShowSkinPieceCallback(function () {
                                        n.showSkinStorePopup(!0);
                                    }),
                                    this.mHomePageScriptNode.setToHotMusicTabCallback(function () {
                                        n.toMusicLibTab(!0);
                                    }),
                                    this.mHomePageScriptNode.setToChallengePageCallback(function () {}),
                                    this.mHomePageScriptNode.setToMusicLibCallback(function () {
                                        n.onMusicLibTabClickCallback();
                                    }),
                                    this.mHomePageScriptNode.setToLottaryPageCallback(function () {
                                        n.showLottoryDlg();
                                    }),
                                    this.mHomePageScriptNode.setToChosenMusicPageCallback(function () {
                                        n.toMusicLibTab(!0);
                                    }),
                                    this.mHomePageScriptNode.setOnLoadFinishCB(function () {
                                        n.mHomePageScriptNode.hideLeftIcon(), n.showDialogs(!0);
                                    }),
                                    this.ranking_layout && (this.ranking_layout.active = !1),
                                    this.showDialogs(),
                                    j.default.isCM() || b.InviteSkinManager.refreshInviteSkinData(),
                                    V.SkinMgr.Ins().checkSkinTimeLimit(this.player_info_popup_layout, function () {
                                        n.onSkinChange();
                                    }),
                                    j.default.supportCMOnshare() && this.checkInviters(),
                                    F.default.l('GameEntranceScene start finish.'),
                                    se.default.getInstance().gotoPage(this.node, 'MainPagePrefab', 'toHomeTab');
                            }),
                            (e.prototype.checkInviters = function () {
                                return __awaiter(this, void 0, void 0, function () {
                                    return __generator(this, function (e) {
                                        switch (e.label) {
                                            case 0:
                                                return [4, this.checkCMActivitySongInviter()];
                                            case 1:
                                                return e.sent(), this.checkCMActivitySkinInviter(), [2];
                                        }
                                    });
                                });
                            }),
                            (e.prototype.checkCMActivitySkinInviter = function () {
                                var e = this,
                                    t = te.default.Ins().getSkinItemArray();
                                if (t && 0 < t.length)
                                    return (
                                        t.forEach(function (e) {
                                            F.default.i('CMPlayShare: GameEntranceScene===>checkCMActivitySongInviter, name:' + e.name + ', displayName:' + e.displayName);
                                        }),
                                        this.mCheckActivityRewardProcessor.checkCMShareForSkinInviterReward(t, function (t, i) {
                                            return __awaiter(e, void 0, void 0, function () {
                                                return __generator(this, function (e) {
                                                    switch (e.label) {
                                                        case 0:
                                                            return t ? [4, this.showSkinStorePopup(!1)] : [3, 2];
                                                        case 1:
                                                            return e.sent(), [3, 2];
                                                        case 2:
                                                            return i(!0), [2];
                                                    }
                                                });
                                            });
                                        })
                                    );
                            }),
                            (e.prototype.checkCMActivitySongInviter = function () {
                                return __awaiter(this, void 0, Promise, function () {
                                    var t,
                                        i = this;
                                    return __generator(this, function (e) {
                                        return (t = te.default.Ins().getItemArray()) && 0 < t.length
                                            ? (t.forEach(function (e) {
                                                  F.default.i('CMPlayShare: GameEntranceScene===>checkCMActivitySongInviter, id:' + e.id + ', musicId:' + e.musicId);
                                              }),
                                              [
                                                  2,
                                                  this.mCheckActivityRewardProcessor.checkCMShareForSongInviterReward(t, function (t, e) {
                                                      return __awaiter(i, void 0, void 0, function () {
                                                          return __generator(this, function (e) {
                                                              return t && this.toMusicLibTab(!0), [2];
                                                          });
                                                      });
                                                  }),
                                              ])
                                            : [2];
                                    });
                                });
                            }),
                            (e.prototype.newGuideGoClick = function (e, t) {
                                var i = t[0];
                                switch ((this.mHomePageScriptNode && this.mHomePageScriptNode.hideFightGuide(), i)) {
                                    case K.TaskID.TASK_ID_LITTLE_STAR:
                                    case K.TaskID.TASK_ID_LEVEL_THREE:
                                        W.default.getInstance().showGuideFinger('NewPlayerTarget', 'HomePagePreF', 'GuideToPlay', this.node, !1, this.hideTargetIconFinger);
                                        break;
                                    case K.TaskID.TASK_ID_ATTEND_CHALLENGE:
                                        W.default.getInstance().showGuideFinger('NewPlayerTarget', 'HomePagePreF', 'GuideToChallenge', this.node, !1, this.hideTargetIconFinger);
                                        break;
                                    case K.TaskID.TASK_ID_GAME_SHARE:
                                        W.default.getInstance().showGuideFinger('NewPlayerTarget', 'HomePagePreF', 'GuideToShare', this.node, !1, this.hideTargetIconFinger);
                                        break;
                                    case K.TaskID.TASK_ID_UNLOCK_HOT_SONG:
                                        W.default.getInstance().showGuideFinger('NewPlayerTarget', 'HomePagePreF', 'GuideToHotMusic', this.node, !1, this.hideTargetIconFinger);
                                }
                            }),
                            (e.prototype.hideTargetIconFinger = function () {
                                _.default.fire(y.default.HIDE_GUIDE_FINGER);
                            }),
                            (e.prototype.getProcessType = function () {
                                var e = s.G.getLaunchOption();
                                return ee.AttentionUtil.isLauchFromAttention(e) ? r.ENTRANCE_TYPE_FROM_ATTENTION_ENTER : e && e.query ? (e.query.source == z.ShareHelper.SHARE_SOURCE_INVITE_FRIEND || e.query.source == z.ShareHelper.SHARE_SOURCE_RELIVE ? r.ENTRANCE_TYPE_FROM_HELP_GETTING_DIAMOND : e.query.source == z.ShareHelper.SHARE_SOURCE_INVITE_SKIN ? r.ENTRANCE_TYPE_FROM_HELP_GETTING_SKIN : e.query.source == z.ShareHelper.SHARE_SOURCE_INVITE_SONG ? r.ENTRANCE_TYPE_FROM_HELP_GETTING_SONG : e.query.source == z.ShareHelper.SHARE_SOURCE_SKIN_PIECE ? r.ENTRANCE_TYPE_FROM_SKIN_PIECE : r.ENTRANCE_TYPE_NORMAL) : r.ENTRANCE_TYPE_NORMAL;
                            }),
                            (e.prototype.showMusicLibDialogs = function () {
                                return __awaiter(this, void 0, void 0, function () {
                                    return __generator(this, function (e) {
                                        switch (e.label) {
                                            case 0:
                                                return [4, this.checkShowDailyAttendanceDlg()];
                                            case 1:
                                                return e.sent(), [2];
                                        }
                                    });
                                });
                            }),
                            (e.prototype.doShowDialogs = function (e) {
                                return (
                                    void 0 === e && (e = !1),
                                    __awaiter(this, void 0, void 0, function () {
                                        var t;
                                        return __generator(this, function (e) {
                                            switch (e.label) {
                                                case 0:
                                                    return F.default.i('[gwj] showDialogs enter'), j.default.isCM() ? [4, this.checkShowDailyAttendanceDlg()] : [3, 2];
                                                case 1:
                                                    return e.sent(), [2];
                                                case 2:
                                                    switch (((t = this.getProcessType()), t)) {
                                                        case r.ENTRANCE_TYPE_FROM_HELP_GETTING_DIAMOND:
                                                            return [3, 3];
                                                        case r.ENTRANCE_TYPE_FROM_HELP_GETTING_SKIN:
                                                            return [3, 6];
                                                        case r.ENTRANCE_TYPE_FROM_HELP_GETTING_SONG:
                                                            return [3, 9];
                                                        case r.ENTRANCE_TYPE_FROM_ATTENTION_ENTER:
                                                            return [3, 12];
                                                        case r.ENTRANCE_TYPE_FROM_SKIN_PIECE:
                                                            return [3, 15];
                                                        case r.ENTRANCE_TYPE_NORMAL:
                                                            return [3, 19];
                                                    }
                                                    return [3, 22];
                                                case 3:
                                                    return [4, this.checkShowDailyAttendanceDlg()];
                                                case 4:
                                                    return e.sent(), [4, this.showHotSongSplash()];
                                                case 5:
                                                    return e.sent(), [3, 22];
                                                case 6:
                                                    return [4, this.checkShowDailyAttendanceDlg()];
                                                case 7:
                                                    return e.sent(), [4, this.showHotSongSplash()];
                                                case 8:
                                                    return e.sent(), [3, 22];
                                                case 9:
                                                    return [4, this.checkShowDailyAttendanceDlg()];
                                                case 10:
                                                    return e.sent(), [4, this.showHotSongSplash()];
                                                case 11:
                                                    return e.sent(), [3, 22];
                                                case 12:
                                                    return [4, this.checkShowDailyAttendanceDlg()];
                                                case 13:
                                                    return e.sent(), [4, this.showHotSongSplash()];
                                                case 14:
                                                    return e.sent(), [3, 22];
                                                case 15:
                                                    return [4, this.checkSkinPieceInvitee()];
                                                case 16:
                                                    return e.sent(), [4, this.checkShowDailyAttendanceDlg()];
                                                case 17:
                                                    return e.sent(), [4, this.showHotSongSplash()];
                                                case 18:
                                                    return e.sent(), [3, 22];
                                                case 19:
                                                    return [4, this.checkShowDailyAttendanceDlg()];
                                                case 20:
                                                    return e.sent(), [4, this.showHotSongSplash()];
                                                case 21:
                                                    return e.sent(), [3, 22];
                                                case 22:
                                                    return (this.isCheckingPopupDialogs = !1), F.default.i('start do show dialogs finished.'), [2];
                                            }
                                        });
                                    })
                                );
                            }),
                            (e.prototype.showDialogs = function (i) {
                                return (
                                    void 0 === i && (i = !1),
                                    __awaiter(this, void 0, void 0, function () {
                                        var t = this;
                                        return __generator(this, function (e) {
                                            return (
                                                F.default.i('call show dialogs. isCheckingPopup=' + this.isCheckingPopupDialogs),
                                                this.isCheckingPopupDialogs ||
                                                    ((this.isCheckingPopupDialogs = !0),
                                                    this.postUpdateTask(function () {
                                                        t.doShowDialogs(i);
                                                    })),
                                                [2]
                                            );
                                        });
                                    })
                                );
                            }),
                            (e.prototype.onMusicLibTabClickCallback = function (e) {
                                U.default.report(U.default.ACTION_SHOW, U.default.SOURCE_TAB, 0, '', 0), this.toMusicLibTab(!1);
                            }),
                            (e.prototype.toMusicLibTab = function (i) {
                                var o = this;
                                void 0 === i && (i = !1);
                                Date.now();
                                (this.mCurrHotTab = i),
                                    this.mMusicLibraryPrefb
                                        ? (this.showMusicLibrary(this.mMusicLibraryPrefb, !1, i), this.mMusicLibraryScript.showNavigator(i))
                                        : L.default.load('prefab/MusicLibraryPrefab', function (e, t) {
                                              Date.now(), (o.mMusicLibraryPrefb = t), (o.mMusicLibraryScript = o.mMusicLibraryPrefb.getComponent(R.default)), o.mMusicLibraryScript.setDialogMgr(o.mDiaogMgr), o.showMusicLibrary(o.mMusicLibraryPrefb, !0, i), o.mMusicLibraryScript.showNavigator(i);
                                          });
                            }),
                            (e.prototype.showMusicLibrary = function (e, t, i) {
                                var o = this;
                                Date.now();
                                Date.now(),
                                    S.default.report(0, S.default.ACTION_SHOW_MUSICLIB_TAB),
                                    this.mainpage_layout && (this.mainpage_layout.active = !1),
                                    this.hideRankPage(),
                                    (this.mTopIconPanel.node.active = !1),
                                    'false' == l.default.read(u.default.HAS_SCORLL_TO_TARGET_POSITION) && l.default.save(u.default.HAS_SCORLL_TO_TARGET_POSITION, 'true'),
                                    Date.now(),
                                    this.mMusicLibraryScript.setCloseCallback(function () {
                                        (e.active = !1), (e.x = -1e4), o.mMusicLibraryScript.hideNavigator(), Y.default.Ins().pop('MusicLibrary'), o.onHomeTabClickCallback();
                                    }),
                                    this.mMusicLibraryScript.setOnLoadCallback(function () {
                                        i ? (F.default.i('CMPlayShare GameENtranceCenee  TO HOT TAB!!!'), o.mMusicLibraryScript.changePage(R.default.HOT_MUSIC_LIB_INDEX), o.mMusicLibraryScript.setTabBg(R.default.HOT_MUSIC_LIB_INDEX), l.default.save(u.default.HAS_SHOW_MUSIC_RED_SPOT, 'true'), o.mMusicLibraryScript.hideRedIcon()) : (o.mMusicLibraryScript.changePage(R.default.LEVEL_MUSIC_LIB_INDEX), o.mMusicLibraryScript.setTabBg(R.default.LEVEL_MUSIC_LIB_INDEX)), o.showMusicLibDialogs();
                                    }),
                                    Date.now(),
                                    t ? this.mMusicLibrary.addChild(e) : ((this.mMusicLibraryPrefb.active = !0), (this.mMusicLibraryPrefb.x = 0), this.mMusicLibraryScript.onStart(), this.mMusicLibraryScript.onShow(), this.mMusicLibraryScript.showNavigator(i)),
                                    Y.default.Ins().push('MusicLibrary');
                            }),
                            (e.prototype.hideMusicPage = function () {
                                this.mMusicLibraryPrefb && 1 == this.mMusicLibraryPrefb.active && ((this.mMusicLibraryPrefb.active = !1), (this.mMusicLibraryPrefb.x = -1e4), this.mMusicLibraryScript.hideNavigator());
                            }),
                            (e.prototype.showSongTryToast = function () {
                                (s.G.songTryData.songTryFinish = !1), this.showTryFinishToast();
                            }),
                            (e.prototype.showTryFinishToast = function () {}),
                            (e.prototype.showToast = function (i) {
                                var o = this;
                                L.default.load('prefab/ToastPrefab', function (e, t) {
                                    t.getComponent(w.default).showTips(i, function () {
                                        t.destroy();
                                    }),
                                        o.player_info_popup_layout.addChild(t);
                                });
                            }),
                            (e.prototype.isSongTryFinish = function () {
                                return s.G.songTryData && s.G.songTryData.songTryFinish;
                            }),
                            (e.prototype.startActivityLooper = function () {
                                console.info('[ActivityLooper] HotMusicList startActivityLooper'), null == this.mActivityLooper && (this.mActivityLooper = new O.default()), this.mActivityLooper.start(function () {});
                            }),
                            (e.prototype.releaseActivityLooper = function () {
                                console.info('[ActivityLooper] HotMusicList releaseActivityLooper'), this.mActivityLooper && (this.mActivityLooper.release(), (this.mActivityLooper = null));
                            }),
                            (e.prototype.onChange = function (e, t, i, o, n) {
                                (this.top_diamond_value_lable.string = '' + i), (this.top_energy_value_label.string = '' + e), (this.top_gold_value_lable.string = '' + t);
                            }),
                            (e.prototype.toEnergyDialog = function (o) {
                                var n = this;
                                L.default.load('prefab/PlayerInfoPopupProfab', function (e, t) {
                                    var i = t.getComponent(d.default);
                                    i.setCloseSelfCallback(function () {
                                        n.mDiaogMgr.dismissDialog(t);
                                    }),
                                        i.playerEnergyBtnClick(o),
                                        n.mDiaogMgr.showDialog(t);
                                });
                            }),
                            (e.prototype.showShareSkin = function (e, t, i) {
                                var o = this;
                                $.default.Ins().show(
                                    e,
                                    function (e) {
                                        e && o.mDiaogMgr.showDialog(e), t && t();
                                    },
                                    function (e) {
                                        e && o.mDiaogMgr.dismissDialog(e), i && i();
                                    },
                                );
                            }),
                            (e.prototype.goldBtnClick = function (o) {
                                var n = this;
                                L.default.load('prefab/PlayerInfoPopupProfab', function (e, t) {
                                    var i = t.getComponent(d.default);
                                    i.setCloseSelfCallback(function () {
                                        n.mDiaogMgr.dismissDialog(t);
                                    }),
                                        i.playerGoldBtnClick(o),
                                        n.mDiaogMgr.showDialog(t),
                                        console.log('goldBtnClick');
                                });
                            }),
                            (e.prototype.diamondBtnClick = function (o) {
                                var n = this;
                                L.default.load('prefab/PlayerInfoPopupProfab', function (e, t) {
                                    var i = t.getComponent(d.default);
                                    i.setCloseSelfCallback(function () {
                                        n.mDiaogMgr.dismissDialog(t);
                                    }),
                                        i.playerDiamondBtnClick(o),
                                        n.mDiaogMgr.showDialog(t),
                                        console.log('diamondBtnClick');
                                });
                            }),
                            (e.prototype.showMusicToast = function (e, o) {
                                var n = this,
                                    t = '';
                                L.default.load('prefab/PlayerInfoPopupProfab', function (e, t) {
                                    var i = t.getComponent(d.default);
                                    i.setCloseSelfCallback(function () {
                                        n.mDiaogMgr.dismissDialog(t);
                                    }),
                                        '体力' == o[0] ? i.playerEnergyBtnClick(0) : '金币' == o[0] ? i.playerGoldBtnClick(0) : '钻石' == o[0] && i.playerDiamondBtnClick(0),
                                        n.mDiaogMgr.showDialog(t),
                                        console.log('goldBtnClick');
                                }),
                                    'energy' == o[0] || '体力' == o[0] ? (t = ie.default.getInstance().getLanguageByKey('label_text.unlock_energy')) : 'coins' == o[0] || '金币' == o[0] ? (t = ie.default.getInstance().getLanguageByKey('label_text.unlock_gold')) : ('diamonds' != o[0] && '钻石' != o[0]) || (t = ie.default.getInstance().getLanguageByKey('label_text.unlock_diamond'));
                                var i = o[1];
                                ie.default.getInstance().isEnglish() && '解锁' == o[1] && (i = 'unlock');
                                var a = ie.default.getInstance().getLanguageByKey('label_text.unlock_str_plus'),
                                    r = cc.js.formatStr(a, t, i);
                                L.default.load('prefab/ToastPrefab', function (e, t) {
                                    t.getComponent(w.default).showTips(r, function () {
                                        t.destroy();
                                    }),
                                        n.player_info_popup_layout.addChild(t);
                                });
                            }),
                            (e.prototype.showMusicLibUnlockDialog = function (e, n) {
                                var a = this;
                                L.default.load('prefab/musiclib/UnlockConfirmDialogPrefab', function (e, t) {
                                    var i = n[0];
                                    U.default.report(U.default.ACTION_SHOW_UNLOCK_CONFIRM_DIALOG, 0, i.musicId, i.musicName, i.musicType);
                                    var o = t.getComponent(B.default);
                                    o.setContent('是否花费' + i.unlockValue + i.type + '永久性解锁热门神曲"' + i.musicName + '"'),
                                        o.setCloseCallback(function () {
                                            U.default.report(U.default.ACTION_SHOW_UNLOCK_CONFIRM_DIALOG_CLICK_CANCEL, 0, i.musicId, i.musicName, i.musicType);
                                        }),
                                        o.setConfirmCallback(function () {
                                            var e;
                                            setTimeout(function () {
                                                se.default.getInstance().isNodeFocus() && (console.warn('NOTE: 解锁完歌曲，调用onPressRight'), se.default.getInstance().onPressRight());
                                            }, 600),
                                                U.default.report(U.default.ACTION_SHOW_UNLOCK_CONFIRM_DIALOG_CLICK_OK, 0, i.musicId, i.musicName, i.musicType),
                                                '金币' == i.type ? (T.MoneySystem.consumeGold(i.unlockValue), G.default.unlockByGold(i.levelId, i.musicId), J.QQReport.reportUnLockSong(1)) : '钻石' == i.type && (H.default.report(i.unlockValue, H.default.SOURCE_BUG_HOTO_MUSIC, H.default.ACTION_CONSUME_DIAMOND), T.MoneySystem.consumeDiamond(i.unlockValue), G.default.unlockByDiamond(i.levelId, i.musicId), J.QQReport.reportUnLockSong(1)),
                                                _.default.fire(y.default.NOTIFY_MUSIC_LIBRARY_UPDATE, i.musicId),
                                                i.musicType == U.default.TYPE_ACTIVITY && _.default.fire(y.default.UPDATE_MUSIC_LIST_HEIGHT, 1),
                                                '金币' == i.type ? (e = U.default.ACTION_GOLD_UNLOCK_SUCC) : '钻石' == i.type && (e = U.default.ACTION_DIAMOND_UNLOCK_SUCC),
                                                U.default.report(e, 0, i.musicId, i.musicName, i.musicType),
                                                l.default.save(u.default.HOT_SONG_UNLOCKED, 'true');
                                        }),
                                        a.player_info_popup_layout.addChild(t);
                                });
                            }),
                            (e.prototype.onDestroy = function () {
                                (this.mIsPlayEnergyAnim = !1), o.default.Ins().removeUserListener(this), p.User.UserInfoManager.unRegisterHpReviveListener(this.hpReviveCallback, this), _.default.remove(y.default.HP_NOT_ENOUGH_ITEM_CLICK, this.hpNotEnoughCallback, this), _.default.remove(y.default.HIDE_HOMEPAGE_EVENT_TOP_MASK, this.hideEventStopNode, this), _.default.remove(y.default.SHOW_HOMEPAGE_EVENT_TOP_MASK, this.showEventStopNode, this), _.default.remove(y.default.LIFE_CYCLE_ON_SHOW, this.onShow, this), _.default.remove(y.default.SHOW_TEST_MONEY_NOT_ENOUGH_TOAST, this.showMusicToast, this), _.default.remove(y.default.SHOW_MUSIC_LIB_UNLOCK_DIALOG, this.showMusicLibUnlockDialog, this), _.default.remove(y.default.INVITE_SONG_LOOPER_START, this.startActivityLooper, this), _.default.remove(y.default.INVITE_SONG_LOOPER_STOP, this.releaseActivityLooper, this), _.default.remove(y.default.REWARTDPANEL_SHOW_SKINSTORE, this.toSkinStoreFromAwardPageCallback, this), _.default.remove(y.default.REWARTDPANEL_SHOW_PIECE, this.toSkinStoreFromAwardPageCallback, this), _.default.remove(y.default.SHARE_HOME_SHOW_INVITE_TIPS, this.showInviteTipsPopup, this), _.default.remove(y.default.SPEC_SONG_TRY_SKIN_HOME, this.specSongTrySkin, this), _.default.remove(y.default.LOAD_MUSIC, this.onLoadMusic, this), _.default.remove(y.default.DIAMOND_BUY_TRUMPET_NOT_ENOUGH, this.buyTrumpetDiamondnotEnough, this), _.default.remove(y.default.NEW_GUIDE_GO_CLICK, this.newGuideGoClick, this), this.releaseActivityLooper(), this.mDiaogMgr.destroy(), x.ToastPopManager.getIns().destroy(), Z.default.Ins().onDestory(), cc.sys.garbageCollect();
                            }),
                            (e.prototype.buyTrumpetDiamondnotEnough = function () {
                                this.diamondBtnClick(v.default.SOURCE_BUY_TRUMPET_DIAMOND_NOT_ENOUGH);
                            }),
                            (e.prototype.specSongTrySkin = function () {
                                X.default.trySkinSpecSong(!0, this.player_info_popup_layout);
                            }),
                            (e.prototype.showInviteTipsPopup = function () {
                                var i = this;
                                this.mDiaogMgr.showPopupDlgDynamic('prefab/shop/DialogOneButtonPrefab', function (e) {
                                    var t = e.getComponent(Q.default);
                                    t.setContent('<color=3B5D72><size=30>邀请已发送，新玩家点入\n\r即可解锁！</size></color>'),
                                        t.setBtnTxt('好的'),
                                        t.setShowClose(!1),
                                        t.setBottonCallback(function (e) {
                                            i.mDiaogMgr.dismissDialog(e);
                                        });
                                });
                            }),
                            (e.prototype.checkShowDailyAttendanceDlg = function () {
                                var o = this;
                                return new Promise(function (i, e) {
                                    var t = M.DAwardMgr.getIns().needShowDailyPopupDlgToday();
                                    F.default.w('checkShowDailyAttendanceDlg ： needShow ' + t),
                                        t
                                            ? M.DAwardMgr.getIns().checkReceiveStatAsyn(function (e) {
                                                  var t = M.DAwardMgr.getIns().needShowDailyPopupDlgToday();
                                                  F.default.w('checkShowDailyAttendanceDlg ： checkNeedShow again: ' + t), e && t ? (M.DAwardMgr.getIns().updateShowDailyPopupDlgTime(), o.showDailyAttendanceDlg(i)) : i(!1);
                                              })
                                            : i(!1);
                                });
                            }),
                            (e.prototype.showDailyAttendanceDlg = function (i) {
                                var o = this;
                                this.mDiaogMgr.showPopupDlgDynamic('prefab/DailyAttendancePrefb', function (t) {
                                    var e = t.getComponent(P.default);
                                    e.setCloseCallback(function () {
                                        o.mDiaogMgr.dismissDialog(t), i && i(!0);
                                    }),
                                        e.setShowSkinStoreCallbak(function () {
                                            return __awaiter(o, void 0, void 0, function () {
                                                return __generator(this, function (e) {
                                                    return this.mDiaogMgr.dismissDialog(t), i && i(!0), this.showSkinStorePopup(!1), [2];
                                                });
                                            });
                                        }),
                                        e.setShowSkinSplashCallbak(function (e) {
                                            return __awaiter(o, void 0, void 0, function () {
                                                return __generator(this, function (e) {
                                                    return this.mDiaogMgr.dismissDialog(t), i && i(!0), [2];
                                                });
                                            });
                                        }),
                                        e.setPopupDlgManager(o.mDiaogMgr);
                                });
                            }),
                            (e.prototype.showSkinStorePopup = function (e, t) {
                                var n = this;
                                return new Promise(function (o, e) {
                                    L.default.load('prefab/SkinStorePrefab', function (e, t) {
                                        var i = t.getComponent(A.default);
                                        i.setCloseCallback(function () {
                                            n.toHomeTab(),
                                                (n.mSkinStorePrefbNode = null),
                                                n.mDiaogMgr.dismissDialog(t),
                                                o(!0),
                                                n.scheduleOnce(function () {
                                                    se.default.getInstance().refreshPage(n.node, 'MainPagePrefab');
                                                }, 0);
                                        }),
                                            i.setSkinChangeCallback(function () {
                                                n.onSkinChange();
                                            }),
                                            i.setShareGiftCallback(function () {
                                                return __awaiter(n, void 0, void 0, function () {
                                                    return __generator(this, function (e) {
                                                        return [2];
                                                    });
                                                });
                                            }),
                                            i.setInviteSkinCallback(function (e, t, i) {
                                                return n.showInviteSkinDialog(e, t, i);
                                            }),
                                            i.setCMInviteSkinCallback(function (e) {
                                                return n.showCMInviteSkinDialog(e);
                                            }),
                                            i.setNormalMusicPageCb(function () {
                                                n.toMusicLibTab();
                                            }),
                                            i.setGoldNotEnoughCb(function () {
                                                n.goldBtnClick(v.default.SOURCE_SKIN_PIECE_GOLD_NOT_ENOUGH);
                                            }),
                                            (n.mSkinStorePrefbNode = t),
                                            n.mDiaogMgr.showDialog(t),
                                            n.mainpage_layout && (n.mainpage_layout.active = !1);
                                    });
                                });
                            }),
                            (e.prototype.showInviteSkinDialog = function (e, t, i) {
                                return (
                                    void 0 === i && (i = !1),
                                    new Promise(function (e, t) {
                                        e(!0);
                                    })
                                );
                            }),
                            (e.prototype.showCMInviteSkinDialog = function (t) {
                                var i = this;
                                return new Promise(function (e) {
                                    i.showShareSkin(
                                        t,
                                        function () {},
                                        function () {
                                            e(!0);
                                        },
                                    );
                                });
                            }),
                            (e.prototype.showHotSongSplash = function () {
                                var a = this;
                                return new Promise(function (o, e) {
                                    if (r.hasShowHotSongSplash) o(!1);
                                    else {
                                        var t = l.default.read(u.default.SHOW_HOT_SONG_SPLASH_TIMES);
                                        (null != t && '' != t && null != t) || (t = '0');
                                        var n = parseInt(t);
                                        2 <= n
                                            ? o(!1)
                                            : L.default.load('prefab/musiclib/HotSongSplashPrefab', function (e, t) {
                                                  var i = t.getComponent(D.default);
                                                  i.setCloseCallback(function () {
                                                      a.mDiaogMgr.dismissDialog(t), o(!0);
                                                  }),
                                                      i.setPlayImmediatelyCallback(function () {
                                                          a.mDiaogMgr.dismissDialog(t), o(!0), a.toMusicLibTab(!0), S.default.report(0, S.default.ACTION_HOT_SONG_SPLASH_PLAY);
                                                      }),
                                                      a.mDiaogMgr.showDialog(t),
                                                      (r.hasShowHotSongSplash = !0),
                                                      S.default.report(0, S.default.ACTION_SHOW_HOT_SONG_SPLASH),
                                                      l.default.save(u.default.SHOW_HOT_SONG_SPLASH_TIMES, n + 1 + '');
                                              });
                                    }
                                });
                            }),
                            (e.prototype.adaptorUI = function () {
                                I.SUtil.ins().isLiuHai() ? (I.SUtil.ins().toTopByPx(this.mTopIconPanel, 84), I.SUtil.ins().toTopByPx(this.mAnimHeartLayout, 80)) : I.SUtil.ins().isQuanMian() ? (I.SUtil.ins().toTopByPx(this.mTopIconPanel, 33), I.SUtil.ins().toTopByPx(this.mAnimHeartLayout, 30)) : I.SUtil.ins().isPuTong(), this.mAnimHeartLayout.getComponent(cc.Widget).updateAlignment();
                            }),
                            (e.prototype.hideRankPage = function () {
                                this.mGlobalRankLayout && this.mGlobalRankLayout.removeAllChildren();
                            }),
                            (e.prototype.showEventStopNode = function () {
                                (this.mEventStopNode.active = !0),
                                    this.mEventStopNode.on(
                                        cc.Node.EventType.TOUCH_START,
                                        function (e) {
                                            e.stopPropagationImmediate();
                                        },
                                        this,
                                    );
                            }),
                            (e.prototype.hideEventStopNode = function () {
                                this.mEventStopNode.active = !1;
                            }),
                            (e.prototype.saveLoginGame = function () {}),
                            (e.prototype.checkSkinPieceInvitee = function () {
                                return this.mCheckActivityRewardProcessor.checksShareForSkinInvitee();
                            }),
                            (e.prototype.onStart = function () {
                                console.warn('GameEntranceScene::onStart'), _.default.register(y.default.LIFE_CYCLE_ON_SHOW, this.onShow, this), this.hideEventStopNode(), this.mainpage_layout && this.mainpage_layout.active ? (this.mHomePageScriptNode.onStart(), se.default.getInstance().gotoPage(this.node, 'MainPagePrefab', 'onStart#MainPage')) : this.mMusicLibraryPrefb && this.mMusicLibraryPrefb.active && (this.mMusicLibraryScript.onStart(), this.mMusicLibraryScript.showNavigator(this.mCurrHotTab), this.isSongTryFinish() && this.showSongTryToast());
                            }),
                            (e.prototype.onStop = function () {
                                _.default.remove(y.default.LIFE_CYCLE_ON_SHOW, this.onShow, this), this.mainpage_layout && this.mainpage_layout.active ? this.mHomePageScriptNode.onStop() : this.mMusicLibraryPrefb && this.mMusicLibraryPrefb.active && (this.mMusicLibraryScript.onStop(), this.mMusicLibraryScript.hideNavigator());
                            }),
                            (e.prototype.onShow = function (e, t) {
                                if ((F.default.l('[GameEntranceScene.onShow] enter'), ce.default.mIsRewardVideoPlayed)) console.error('>>>>> SKIP onShow for mIsRewardVideoPlayed=true');
                                else if ((this.hideEventStopNode(), this.updateToastLayout(), !this.mShowingLittleStarLayout))
                                    switch ((console.warn('GameEntranceScene => onShow'), r.DefaultPageIndex)) {
                                        case r.GAME_ENTRA_SCENE_INDEX.HOMEPAGE_INDEX:
                                            this.toHomeTab();
                                            break;
                                        case r.GAME_ENTRA_SCENE_INDEX.MUSIC_LIB_INDEX:
                                            this.isSongTryFinish() ? this.toMusicLibTab(!0) : this.toMusicLibTab();
                                            break;
                                        case r.GAME_ENTRA_SCENE_INDEX.TO_HOT_INDEX:
                                            this.toMusicLibTab(!0);
                                            break;
                                        case r.GAME_ENTRA_SCENE_INDEX.TO_SKIN_PAGE:
                                            break;
                                        default:
                                            if (this.mMusicLibraryPrefb && this.mMusicLibraryPrefb.active) this.mMusicLibraryPrefb.getComponent(R.default).onShow();
                                    }
                            }),
                            (e.prototype.onHide = function () {
                                console.warn('GameEntranceScene => onHide'), this.mainpage_layout && this.mainpage_layout.active ? this.mHomePageScriptNode.onHide() : this.mMusicLibraryPrefb && this.mMusicLibraryPrefb.active && this.mMusicLibraryScript.onHide();
                            }),
                            (e.prototype.updateToastLayout = function () {
                                x.ToastPopManager.getIns().init(this.mToastPopLayout);
                            }),
                            (e.prototype.onAddDialog = function (e) {}),
                            (e.prototype.onRemoveDialog = function (e) {
                                e <= 0 && (this.mainpage_layout, this.mHomePageScriptNode && !this.mShowNewTargetGuide && this.mHomePageScriptNode.checkTargetIcon(), (this.mShowNewTargetGuide = !1));
                            }),
                            (e.prototype.ShwoSkinStorePrefab = function (e) {
                                if (e) {
                                    var t = e[0];
                                    t && t.skinId ? this.showSkinStorePopup(!0, t.skinId) : this.showSkinStorePopup(!1);
                                } else this.showSkinStorePopup(!1);
                            }),
                            (e.prototype.onLoadMusic = function (e, n) {
                                var a = this;
                                this.isLoadingMusic ||
                                    ((this.isLoadingMusic = !0),
                                    n
                                        ? s.G.Ap.config.loadMusic(
                                              s.G.Ap.state.mission.musicId,
                                              function (e) {
                                                  var t = n[0],
                                                      i = C.FromSource.SOURCE_MUSIC;
                                                  if (0 === t) n[1].decreaseEnergy(1);
                                                  else if (1 === t) {
                                                      var o = n[1];
                                                      switch (o.spendType) {
                                                          case c.GameConsume.SPENDTYPE_ENERGY:
                                                              T.MoneySystem.consumeHp(o.spendEnergy);
                                                              break;
                                                          case c.GameConsume.SPENDTYPE_DIAMOND:
                                                              T.MoneySystem.consumeDiamond(o.spendEnergy);
                                                              break;
                                                          case c.GameConsume.SPENDTYPE_GOLD:
                                                              T.MoneySystem.consumeGold(o.spendEnergy);
                                                              break;
                                                          default:
                                                              T.MoneySystem.consumeHp(o.spendEnergy);
                                                      }
                                                  } else 2 === t ? (i = C.FromSource.SOURCE_SONG_TRY) : 3 === t ? (i = C.FromSource.SOURCE_MAIN) : 4 == t && (i = C.FromSource.SOURCE_RESULT_UPGRADE);
                                                  if ((C.default.getInstance().setFromSource(i), X.default.needTryInviteSkinSpecSong(s.G.Ap.state.mission.musicId))) return _.default.fire(y.default.SPEC_SONG_TRY_SKIN_HOME), void (a.isLoadingMusic = !1);
                                                  s.G.Ap.presenter.enterScene(
                                                      s.G.GAME_SCENE_NAME,
                                                      s.G.Ap.state.mission.musicId,
                                                      function () {},
                                                      !0,
                                                      function () {
                                                          a.isLoadingMusic = !1;
                                                      },
                                                  );
                                              },
                                              this.player_info_popup_layout,
                                          )
                                        : (this.isLoadingMusic = !1));
                            }),
                            (e.prototype.showLottoryDlg = function (n) {
                                var a = this;
                                L.default.load('prefab/lottery/LotteryPrefab', function (e, t) {
                                    if (t) {
                                        var i = oe.LotteryProcess.getInstance(),
                                            o = t.getComponent(ne.default);
                                        1 === ae.InfocHelper.isNewUser() ? i.setNewComing(re.UserEnum.NEW_COMING) : i.setNewComing(re.UserEnum.PASS_COMING),
                                            o.init(i),
                                            o.setCloseCallback(function () {
                                                a.mHomePageScriptNode.checkTargetIcon(), a.mDiaogMgr.dismissDialog(t), n && n(!0), se.default.getInstance().gotoPage(a.node, 'MainPagePrefab');
                                            }),
                                            a.mDiaogMgr.showDialog(t);
                                    } else n && n(!1);
                                });
                            }),
                            (e.GAME_ENTRA_SCENE_INDEX = {
                                NONE_INDEX: -1,
                                HOMEPAGE_INDEX: 1,
                                MUSIC_LIB_INDEX: 2,
                                CHALLENGE_INDEX: 10,
                                TO_HOT_INDEX: 12,
                                TO_FIGHT_INDEX: 14,
                                TO_SKIN_PAGE: 15,
                            }),
                            (e.DefaultPageIndex = r.GAME_ENTRA_SCENE_INDEX.HOMEPAGE_INDEX),
                            (e.hasShowHotSongSplash = !1),
                            (e.ENTRANCE_TYPE_NORMAL = 1),
                            (e.ENTRANCE_TYPE_FROM_HELP_GETTING_DIAMOND = 2),
                            (e.ENTRANCE_TYPE_FROM_HELP_GETTING_SKIN = 4),
                            (e.ENTRANCE_TYPE_FROM_HELP_GETTING_SONG = 5),
                            (e.ENTRANCE_TYPE_FROM_ATTENTION_ENTER = 6),
                            (e.ENTRANCE_TYPE_FROM_SKIN_PIECE = 7),
                            __decorate([ue(cc.Button)], e.prototype, 'top_energy_value_btn', void 0),
                            __decorate([ue(cc.Label)], e.prototype, 'top_energy_value_label', void 0),
                            __decorate([ue(cc.Button)], e.prototype, 'top_glod_value_btn', void 0),
                            __decorate([ue(cc.Label)], e.prototype, 'top_gold_value_lable', void 0),
                            __decorate([ue(cc.Button)], e.prototype, 'top_diamond_value_btn', void 0),
                            __decorate([ue(cc.Label)], e.prototype, 'top_diamond_value_lable', void 0),
                            __decorate([ue(cc.Layout)], e.prototype, 'mTopIconPanel', void 0),
                            __decorate([ue(cc.Layout)], e.prototype, 'middle_content_layout', void 0),
                            __decorate([ue(cc.Prefab)], e.prototype, 'mainpage_layout_preF', void 0),
                            __decorate([ue(cc.Node)], e.prototype, 'player_info_popup_layout', void 0),
                            __decorate([ue(cc.Node)], e.prototype, 'mToastPopLayout', void 0),
                            __decorate([ue(cc.Node)], e.prototype, 'mGlobalPopupContainer', void 0),
                            __decorate([ue(cc.Node)], e.prototype, 'mAnimHeartLayout', void 0),
                            __decorate([ue(cc.Layout)], e.prototype, 'mHpTimeGroup', void 0),
                            __decorate([ue(cc.Label)], e.prototype, 'mHpTimeLabel', void 0),
                            __decorate([ue(cc.Node)], e.prototype, 'mGlobalRankLayout', void 0),
                            __decorate([ue(cc.Button)], e.prototype, 'energy_btn', void 0),
                            __decorate([ue(cc.Button)], e.prototype, 'gold_btn', void 0),
                            __decorate([ue(cc.Button)], e.prototype, 'diamond_btn', void 0),
                            __decorate([ue(cc.Node)], e.prototype, 'mEventStopNode', void 0),
                            __decorate([ue(cc.Node)], e.prototype, 'mMusicLibrary', void 0),
                            __decorate([ue(cc.Node)], e.prototype, 'mLitteStarNode', void 0),
                            __decorate([ue(cc.Node)], e.prototype, 'mHeartAnimNode', void 0),
                            (e = r = __decorate([le], e))
                        );
                    })(cc.Component);
                (i.default = de), cc._RF.pop();
            },
            {
                '../../../../modules/MGAdv/scripts/Adapter/AdvHelperCMplay': 'AdvHelperCMplay',
                '../../../../modules/MGAppShare/scripts/ShareHelper': 'ShareHelper',
                '../../../base/CrashMonitor': 'CrashMonitor',
                '../../../base/G': 'G',
                '../../../base/Log': 'Log',
                '../../../config/LSKey': 'LSKey',
                '../../../gamescene/GameSceneSetting': 'GameSceneSetting',
                '../../../infoc/InfocHelper': 'InfocHelper',
                '../../../infoc/m_p2_PData_Dia': 'm_p2_PData_Dia',
                '../../../infoc/m_p2_Uaction': 'm_p2_Uaction',
                '../../../infoc/m_p2_pop_coin': 'm_p2_pop_coin',
                '../../../infoc/minigame_piano2_hotmusic': 'minigame_piano2_hotmusic',
                '../../../util/PU': 'PU',
                '../../../util/PageHeap': 'PageHeap',
                '../../../util/QQReport': 'QQReport',
                '../../../util/SUtil': 'SUtil',
                '../../../util/SceneMusicMgr': 'SceneMusicMgr',
                '../../../util/TimeUtil': 'TimeUtil',
                '../../Logic/EventBus': 'EventBus',
                '../../Logic/I18nManager': 'I18nManager',
                '../../Logic/InviteSkinManager': 'InviteSkinManager',
                '../../Logic/MoneySystem': 'MoneySystem',
                '../../Logic/NotifyEvent': 'NotifyEvent',
                '../../Logic/PlayerMgr': 'PlayerMgr',
                '../../Logic/Plugin/IPlugin': 'IPlugin',
                '../../Logic/Plugin/PluginMgr': 'PluginMgr',
                '../../Logic/Plugin/UnlockProcessor': 'UnlockProcessor',
                '../../Network/Protocol/StorageUtil': 'StorageUtil',
                '../../daily/AttentionUtil': 'AttentionUtil',
                '../../daily/DAwardMgr': 'DAwardMgr',
                '../../keypad/KeypadNavigator': 'KeypadNavigator',
                '../../looper/ActivityLooper': 'ActivityLooper',
                '../../lottery/LotteryEnum': 'LotteryEnum',
                '../../lottery/LotteryIndex': 'LotteryIndex',
                '../../lottery/LotteryProcess': 'LotteryProcess',
                '../../music/MusicDownloadProcess': 'MusicDownloadProcess',
                '../../shop/DialogOneButtonPrefab': 'DialogOneButtonPrefab',
                '../../skin/SkinManager': 'SkinManager',
                '../../skin/SkinStore': 'SkinStore',
                '../../skin/SkinUtils': 'SkinUtils',
                '../../skin/frag/SkinTaskMgr': 'SkinTaskMgr',
                '../../task/TaskItem': 'TaskItem',
                '../../task/newguidance/NewGuidanceLoader': 'NewGuidanceLoader',
                '../MusicLevelDataLoader': 'MusicLevelDataLoader',
                '../UserInfoManager': 'UserInfoManager',
                '../dailyattendance/DailyAttendancePrefbScript': 'DailyAttendancePrefbScript',
                '../playerInfoPopup/PlayerInfoPopupProfab': 'PlayerInfoPopupProfab',
                './BasicTouchEvent': 'BasicTouchEvent',
                './CheckRewardProcessor': 'CheckRewardProcessor',
                './HomePagePrefb': 'HomePagePrefb',
                './MusicLib/HotMusicCMShareController': 'HotMusicCMShareController',
                './MusicLib/HotSongSplash': 'HotSongSplash',
                './MusicLib/MusicLibraryManager': 'MusicLibraryManager',
                './MusicLib/UnlockConfirmDialogPrefab': 'UnlockConfirmDialogPrefab',
                './PopupDlg': 'PopupDlg',
                './PrefabMgr': 'PrefabMgr',
                './ToastPopManager': 'ToastPopManager',
                './ToastPrefab': 'ToastPrefab',
                './mainpage/ShareSkinController': 'ShareSkinController',
            },
        ],
        GameInfoMgr: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'c6edaOB5A9J345snFl4pUm2', 'GameInfoMgr'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = function () {};
                i.GameInfo = o;
                var n = (function () {
                    function e() {
                        this.mGameInfo = void 0;
                        var e = new o();
                        (e.appid = 'wx3ff4ef6cb6e496a4'), (e.version = '1.2.7.106'), (e.gameid = 6001), (e.resPath = 'res/1.2.7.59/res-20190107213343.json'), (e.skinPath = 'https://piano-weixin-game.cmcm.com/pianotiles2/skin/skin-201807161424.json'), (e.platform = CMPlay.isCMPlay() ? 'cmplay' : ''), (e.resCDN = 'https://piano-weixin-game.cmcm.com/pianotiles2/'), (e.skinCDN = 'https://piano-weixin-game.cmcm.com/pianotiles2/'), (this.mGameInfo = e);
                    }
                    return (
                        (e.Ins = function () {
                            return e.mInstance || (e.mInstance = new e()), e.mInstance;
                        }),
                        (e.prototype.getInfo = function () {
                            return this.mGameInfo;
                        }),
                        (e.mInstance = null),
                        e
                    );
                })();
                (i.GameInfoMgr = n), cc._RF.pop();
            },
            {},
        ],
        GameInterface: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '7ba1bFkt1xJQr2290xzQCxd', 'GameInterface'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    cc._RF.pop();
            },
            {},
        ],
        GameItemsData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'aaf029BAJJCBaXX9ZDqQu24', 'GameItemsData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.findId = function (e) {
                                return this.find('item_id', e);
                            }),
                            (t.prototype.getRow = function () {
                                return new a();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.GameItemsDatas = n;
                var a = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getId = function () {
                            return this.getString('id');
                        }),
                        (t.prototype.getItemId = function () {
                            return this.getString('item_id');
                        }),
                        (t.prototype.getName = function () {
                            return this.getString('name');
                        }),
                        (t.prototype.getKey = function () {
                            return this.getString('key');
                        }),
                        (t.prototype.getPic = function () {
                            return this.getString('pic');
                        }),
                        (t.prototype.getSmallPic = function () {
                            return this.getString('small_pic');
                        }),
                        (t.prototype.getEffect = function () {
                            return this.getString('effect');
                        }),
                        (t.prototype.getDescribe = function () {
                            return this.getString('desc');
                        }),
                        (t.prototype.getBuyType = function () {
                            return this.getString('buytype');
                        }),
                        (t.prototype.getBuyPrice = function () {
                            return this.getString('buyprice');
                        }),
                        t
                    );
                })(o.default);
                (i.GameItemsRow = a), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        GameItemsManager: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '3c5edUR5glEnqSZ0d0wSf6g', 'GameItemsManager'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../DB/DBMgr'),
                    n = e('../../base/Log'),
                    a = e('../../business/Logic/I18nManager'),
                    r = (function () {
                        function e() {}
                        return (e.ID_DIAMOND = '1-1-0'), (e.ID_GOLD = '2-1-0'), (e.ID_POWER = '3-1-0'), (e.ID_TICKET = '7-1-0'), (e.ID_VIP_1 = '8-1-0'), (e.ID_SKIN_DEFAULT = '5-1-0'), (e.ID_SKIN_ICE = '5-2-0'), (e.ID_PIECE_ICE = '5-2-99'), (e.ID_SKIN_SAKURA = '5-3-0'), (e.ID_PIECE_SAKURA = '5-3-99'), (e.ID_SKIN_WORLDCUP0 = '5-4-0'), (e.ID_SKIN_WORLDCUP1 = '5-4-1'), (e.ID_SKIN_WORLDCUP2 = '5-4-2'), (e.ID_SKIN_WORLDCUP3 = '5-4-3'), (e.ID_PIECE_WORLDCUP = '5-4-99'), (e.ID_SKIN_GREENWILD = '5-5-0'), (e.ID_PIECE_GREENWILD = '5-5-99'), (e.ID_SKIN_GIRL0 = '5-6-0'), (e.ID_SKIN_GIRL1 = '5-6-1'), (e.ID_SKIN_GIRL2 = '5-6-2'), (e.ID_SKIN_GIRL3 = '5-6-3'), (e.ID_PIECE_GIRL = '5-6-99'), (e.ID_SKIN_STARS0 = '5-7-0'), (e.ID_SKIN_STARS1 = '5-7-1'), (e.ID_SKIN_STARS2 = '5-7-2'), (e.ID_SKIN_STARS3 = '5-7-3'), (e.ID_PIECE_STARS = '5-7-99'), (e.ID_SKIN_CANDY0 = '5-8-0'), (e.ID_SKIN_CANDY1 = '5-8-1'), (e.ID_SKIN_CANDY2 = '5-8-2'), (e.ID_SKIN_CANDY3 = '5-8-3'), (e.ID_PIECE_CANDY = '5-8-99'), (e.ID_SKIN_AFTERRAIN = '5-9-0'), (e.ID_PROP_DASH = '6-1-0'), (e.ID_PROP_SLOW = '6-2-0'), (e.ID_PROP_SHIELD = '6-3-0'), e;
                    })();
                i.GameItemsDefine = r;
                var s = (function () {
                    function e() {}
                    return (e.TYPE_UNKOWN = 0), (e.TYPE_PIECE = 1), (e.TYPE_SKIN = 2), (e.TYPE_DIAMONDS = 3), (e.TYPE_GOLD = 4), (e.TYPE_HP = 5), (e.TYPE_TICKET = 6), (e.TYPE_PROP = 7), (e.TYPE_VIP = 8), (e.TYPE_TONE = 10), e;
                })();
                i.GameItemType = s;
                var c = (function () {
                    function e() {
                        this.items = o.default.Ins().getDBRows(o.eDataBase.eDB_GameItems);
                    }
                    return (
                        (e.getPropPlistPath = function () {
                            return a.default.getInstance().isEnglish() ? e.PROP_PLIST_PATH_EN : e.PROP_PLIST_PATH;
                        }),
                        (e.getIns = function () {
                            return e.mInstance || (e.mInstance = new e()), e.mInstance;
                        }),
                        (e.prototype.getAllItems = function () {
                            return this.items;
                        }),
                        (e.prototype.getItemTypeByItemId = function (e) {
                            try {
                                var t = e.split('-');
                                if (t && 3 == t.length) {
                                    var i = s.TYPE_UNKOWN;
                                    switch (t[0]) {
                                        case '1':
                                            i = s.TYPE_DIAMONDS;
                                            break;
                                        case '2':
                                            i = s.TYPE_GOLD;
                                            break;
                                        case '3':
                                            i = s.TYPE_HP;
                                            break;
                                        case '4':
                                            break;
                                        case '5':
                                            i = s.TYPE_SKIN;
                                            break;
                                        case '7':
                                            i = s.TYPE_TICKET;
                                            break;
                                        case '6':
                                            i = s.TYPE_PROP;
                                            break;
                                        case '8':
                                            i = s.TYPE_VIP;
                                            break;
                                        case '9':
                                            i = s.TYPE_PIECE;
                                            break;
                                        case '10':
                                            i = s.TYPE_TONE;
                                    }
                                    return i;
                                }
                            } catch (e) {
                                n.default.e(e);
                            }
                            return s.TYPE_UNKOWN;
                        }),
                        (e.prototype.isDiamondsType = function (e) {
                            return this.getItemTypeByItemId(e) == s.TYPE_DIAMONDS;
                        }),
                        (e.prototype.isGoldType = function (e) {
                            return this.getItemTypeByItemId(e) == s.TYPE_GOLD;
                        }),
                        (e.prototype.isHPType = function (e) {
                            return this.getItemTypeByItemId(e) == s.TYPE_HP;
                        }),
                        (e.prototype.isSkinType = function (e) {
                            return this.getItemTypeByItemId(e) == s.TYPE_SKIN;
                        }),
                        (e.prototype.isTicketType = function (e) {
                            return this.getItemTypeByItemId(e) == s.TYPE_TICKET;
                        }),
                        (e.prototype.isPropType = function (e) {
                            return this.getItemTypeByItemId(e) == s.TYPE_PROP;
                        }),
                        (e.prototype.isToneType = function (e) {
                            return this.getItemTypeByItemId(e) == s.TYPE_TONE;
                        }),
                        (e.prototype.getItemTimeLimitDay = function (e) {
                            try {
                                var t = e.split('-');
                                if (t && 3 == t.length) return parseInt(t[2]);
                            } catch (e) {
                                n.default.e(e);
                            }
                            return 0;
                        }),
                        (e.prototype.getItemNameSplitTime = function (e) {
                            try {
                                var t = o.default.Ins().getDBRow(o.eDataBase.eDB_GameItems, e).getName().split('（');
                                if (t && 0 < t.length) return t[0];
                            } catch (e) {
                                n.default.e(e);
                            }
                            return '';
                        }),
                        (e.prototype.getItemById = function (e) {
                            for (var t = 0; t < this.items.length; t++) if (this.items[t].getItemId() == e) return this.items[t];
                            return null;
                        }),
                        (e.prototype.getItemIDByIndexID = function (e) {
                            for (var t = 0; t < this.items.length; t++) if (this.items[t].getId() == e.toString()) return this.items[t].getItemId();
                            return null;
                        }),
                        (e.prototype.getSmallPicByItemId = function (e) {
                            return o.default.Ins().getDBRow(o.eDataBase.eDB_GameItems, e).getSmallPic();
                        }),
                        (e.prototype.getBigPicByItemId = function (e) {
                            return o.default.Ins().getDBRow(o.eDataBase.eDB_GameItems, e).getPic();
                        }),
                        (e.prototype.getSkinNameByItemId = function (e) {
                            var t = '';
                            if (this.isSkinType(e))
                                try {
                                    var i = e.split('-');
                                    if (i && 3 == i.length)
                                        switch (i[1]) {
                                            case '1':
                                                t = '默认皮肤';
                                                break;
                                            case '2':
                                                t = '冰雪奇幻';
                                                break;
                                            case '3':
                                                t = '樱花树下';
                                                break;
                                            case '4':
                                                t = '世界杯';
                                                break;
                                            case '5':
                                                t = '绿野仙踪';
                                                break;
                                            case '4':
                                                t = '元气少女';
                                                break;
                                            case '7':
                                                t = '星空环游';
                                        }
                                } catch (e) {
                                    n.default.e(e);
                                }
                            return t;
                        }),
                        (e.prototype.getSkinItemIdByName = function (t) {
                            if (this.items && 0 < this.items.length) {
                                var e = this.items.filter(function (e) {
                                    return e.getName() == t;
                                });
                                if (e && 0 < e.length) return e[0].getItemId();
                            }
                            return '';
                        }),
                        (e.PROP_PLIST_PATH = 'static_res/gamestore'),
                        (e.PROP_PLIST_PATH_EN = 'static_res/gamestore_en'),
                        e
                    );
                })();
                (i.GameItemsManager = c), cc._RF.pop();
            },
            {
                '../../base/Log': 'Log',
                '../../business/Logic/I18nManager': 'I18nManager',
                '../DB/DBMgr': 'DBMgr',
            },
        ],
        GameMapGuide: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '86f84Jhi5JN86WmCznAVfo6', 'GameMapGuide'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var f = e('../../util/Utility'),
                    o = e('../../util/Dictionary'),
                    m = e('../../base/G'),
                    g = e('../../util/PU');
                (function (e) {
                    var h = function (e, t) {
                        void 0 === e && (e = -1), void 0 === t && (t = -1), (this.segmentIndex = -1), (this.blockIndex = -1), (this.touchHeight = 0), (this.inClickableRegion = !0), (this.segmentIndex = e), (this.blockIndex = t);
                    };
                    e.Location = h;
                    var t = (function () {
                        function e() {
                            (this.map = null), (this.mTouchLocations = new o.Dictionary());
                        }
                        return (
                            (e.prototype.looseDetectClick = function (e, t, i, o) {
                                var n = this.getSegment(e);
                                if (null == n) return null;
                                var a = null,
                                    r = o.x - n.rect.x,
                                    s = o.y - n.rect.y + this.map.move;
                                if (-t <= s)
                                    if (s <= n.rect.height + i) {
                                        (a = new h()).segmentIndex = e;
                                        for (var c = m.G.Ap.config.blockHorizonExtend, l = 0, u = n.blocks.length; l < u; ++l) {
                                            if (r >= (p = (d = n.blocks[l]).rect).x - c && r <= p.xMax + c) {
                                                (a.blockIndex = l), d.type == f.Utility.BLOCKTYPE.LONG ? (a.touchHeight = Math.max(s - p.y - 120 * m.G.Ap.config.mBaseBlockHeightScale, 0)) : f.Utility.BLOCKTYPECHARACTER.c[d.type].accurate && s > p.yMax + i && (a.inClickableRegion = !1);
                                                break;
                                            }
                                        }
                                    } else if (g.default.is3DTouchCompat() && s <= n.rect.height + m.G.Ap.config.mBaseBlockHeight) {
                                        (a = new h()).segmentIndex = e;
                                        var d = null;
                                        for (l = 0, u = n.blocks.length; l < u; ++l)
                                            if (0 === n.blocks[l].slotIndex) {
                                                d = n.blocks[l];
                                                break;
                                            }
                                        if (d) {
                                            var p = d.rect;
                                            c = m.G.Ap.config.blockHorizonExtend;
                                            r >= p.x - c && r <= p.xMax + c && ((a.blockIndex = 0), d.type == f.Utility.BLOCKTYPE.LONG && (a.touchHeight = Math.max(s - p.y - 120 * m.G.Ap.config.mBaseBlockHeightScale, 0)));
                                        }
                                    }
                                return a;
                            }),
                            (e.prototype.looseDetectClickBlockIgnoreY = function (e, t) {
                                var i = this.getSegment(e);
                                if (null == i) return -1;
                                for (var o = m.G.Ap.config.blockHorizonExtend, n = t.x - i.rect.x, a = 0, r = i.blocks.length; a < r; ++a) {
                                    var s = i.blocks[a].rect;
                                    if (n >= s.x - o && n <= s.xMax + o) return a;
                                }
                                return -1;
                            }),
                            (e.prototype.calcTouchBlockLocation = function (e) {
                                var t = this.calcSegmentIndex(e);
                                if (-1 === t) return null;
                                var i = new h();
                                i.segmentIndex = t;
                                for (var o = m.G.Ap.config.blockHorizonExtend, n = this.map.segments[i.segmentIndex], a = e.x - n.rect.x, r = e.y + this.map.move - n.rect.y, s = 0, c = n.blocks.length; s < c; ++s) {
                                    var l = n.blocks[s].rect;
                                    if (a >= l.x - o && a <= l.xMax + o && r >= l.y && r <= l.yMax) {
                                        i.blockIndex = s;
                                        break;
                                    }
                                }
                                return i;
                            }),
                            (e.prototype.calcTouchVirtualBlockRect = function (e) {
                                var t = this.calcSegmentIndex(e);
                                if (-1 === t) return null;
                                var i = this.map.segments[t].rect,
                                    o = this.map.params.slotCount,
                                    n = this.map.params.slotWidth,
                                    a = Math.floor(e.x / n);
                                return new f.Utility.Rect(i.x + Math.min(a, o - 1) * n, i.y, n, i.height);
                            }),
                            (e.prototype.calcSegmentIndex = function (e) {
                                e.x;
                                for (var t = e.y + this.map.move, i = this.map.bottom, o = this.map.top - 1, n = -1; !(o < i); ) {
                                    var a = Math.floor((i + o) / 2),
                                        r = this.map.segments[a];
                                    if (r.rect.y > t) o = a - 1;
                                    else {
                                        if (!(r.rect.yMax < t)) {
                                            n = a;
                                            break;
                                        }
                                        i = a + 1;
                                    }
                                }
                                return n;
                            }),
                            (e.prototype.getSegment = function (e) {
                                return this.map.segments[e];
                            }),
                            (e.prototype.getBlock = function (e) {
                                return this.getBlockByIndex(e.segmentIndex, e.blockIndex);
                            }),
                            (e.prototype.getBlockByIndex = function (e, t) {
                                var i = this.map.segments[e];
                                return null == i ? null : t < 0 || t >= i.blocks.length ? null : i.blocks[t];
                            }),
                            (e.prototype.restoreMap = function () {
                                (this.map.move = 0), (this.map.bottom = 0);
                                for (var e = (this.map.top = 0); e < this.map.segments.length; ++e)
                                    for (var t = this.map.segments[e], i = 0; i < t.blocks.length; ++i) {
                                        var o = t.blocks[i];
                                        (o.touchCount = 0), (o.touchId = -1), (o.added = !1), (o.touchMove = 0);
                                    }
                                this.mTouchLocations.clear();
                            }),
                            (e.prototype.addTouch = function (e, t) {
                                this.mTouchLocations.put(e, t);
                            }),
                            (e.prototype.getTouch = function (e) {
                                return this.mTouchLocations.get(e);
                            }),
                            (e.prototype.removeTouch = function (e) {
                                this.mTouchLocations.remove(e);
                            }),
                            (e.prototype.clearTouchs = function () {
                                this.mTouchLocations.clear();
                            }),
                            (e.prototype.getTouchs = function () {
                                return this.mTouchLocations.getPairs();
                            }),
                            (e.prototype.getStartBlockRect = function () {
                                return this.getSegment(0).blocks[0].rect;
                            }),
                            e
                        );
                    })();
                    e.Guide = t;
                })(i.GameMap || (i.GameMap = {})),
                    cc._RF.pop();
            },
            {
                '../../base/G': 'G',
                '../../util/Dictionary': 'Dictionary',
                '../../util/PU': 'PU',
                '../../util/Utility': 'Utility',
            },
        ],
        GameModuleManager: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'c4930VOWfVGypi339sIFiFg', 'GameModuleManager'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o,
                    n,
                    a = e('./OvertakeFriendModule'),
                    r = e('./QQRedPacketModule');
                ((n = o = i.ModuleType || (i.ModuleType = {}))[(n.Overtake_Friend = 0)] = 'Overtake_Friend'), (n[(n.QQ_Red_Packet = 1)] = 'QQ_Red_Packet');
                var s = (function () {
                    function e() {
                        this.mModuleMap = new Map();
                    }
                    return (
                        (e.prototype.setEnableModuleList = function (e) {
                            e && (this.mLoadList = new Set(e));
                        }),
                        (e.prototype.loadAllModules = function () {
                            var i = this;
                            this.mLoadList &&
                                this.mLoadList.forEach(function (e) {
                                    var t = i.getOrCreateModule(e);
                                    t && t.load();
                                });
                        }),
                        (e.prototype.destroyAllModules = function () {
                            this.mModuleMap.forEach(function (e, t, i) {
                                e.destroy();
                            }),
                                this.mModuleMap.clear();
                        }),
                        (e.prototype.prepareAllModules = function () {
                            this.mModuleMap.forEach(function (e, t, i) {
                                e.prepare();
                            });
                        }),
                        (e.prototype.startAllModules = function () {
                            this.mModuleMap.forEach(function (e, t, i) {
                                e.start();
                            });
                        }),
                        (e.prototype.pauseAllModules = function () {
                            this.mModuleMap.forEach(function (e, t, i) {
                                e.pause();
                            });
                        }),
                        (e.prototype.resumeAllModules = function () {
                            this.mModuleMap.forEach(function (e, t, i) {
                                e.resume();
                            });
                        }),
                        (e.prototype.addAllModulesToRootNode = function (n, a) {
                            void 0 === a && (a = !1),
                                this.mModuleMap.forEach(function (e, t, i) {
                                    var o = e.getUINode();
                                    o && (n.addChild(o), o.setVisible(a));
                                });
                        }),
                        (e.prototype.getModule = function (e) {
                            return this.mLoadList && this.mLoadList.has(e) ? this.getOrCreateModule(e) : null;
                        }),
                        (e.prototype.getOrCreateModule = function (e) {
                            var t = this.mModuleMap.get(e);
                            return t || ((t = this.createModule(e)) && this.mModuleMap.set(e, t)), t;
                        }),
                        (e.prototype.createModule = function (e) {
                            var t = null;
                            switch (e) {
                                case o.Overtake_Friend:
                                    t = new a.default();
                                    break;
                                case o.QQ_Red_Packet:
                                    t = new r.default();
                            }
                            return t;
                        }),
                        e
                    );
                })();
                (i.default = s), cc._RF.pop();
            },
            {
                './OvertakeFriendModule': 'OvertakeFriendModule',
                './QQRedPacketModule': 'QQRedPacketModule',
            },
        ],
        GameOverHotSongItem: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '57d51nVAa9CFqdsMIlXa4F6', 'GameOverHotSongItem'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../UI/MusicLevelDataLoader'),
                    n = e('../UI/GameEntraScene/BasicTouchEvent'),
                    a = e('../Logic/Level'),
                    r = e('../reward/ActivityBean'),
                    s = e('../../util/StringUtil'),
                    c = e('../../infoc/m_p2_HMusic_laxin'),
                    l = e('../Logic/EventBus'),
                    u = e('../Logic/NotifyEvent'),
                    d = e('../../../modules/MGAppShare/scripts/MGShareUtil'),
                    p = e('../../../modules/MGAdv/scripts/Logic/MGAdvDefine'),
                    h = e('../../../modules/MGAdv/scripts/Logic/MGAdvEntrance'),
                    f = e('../../util/PU'),
                    m = e('../common/BusinessUtil'),
                    g = e('../Logic/Plugin/UnlockProcessor'),
                    _ = e('../UI/GameEntraScene/MusicLib/HotMusicCMShareController'),
                    y = cc._decorator,
                    S = y.ccclass,
                    v = y.property,
                    I = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.title_label = null), (e.describe_label = null), (e.invite_btn = null), (e.invite_label = null), (e.start_Layout = null), (e.start_label = null), (e.cm_invite_btn = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.setStartGameCallback = function (e) {
                                this.startGameCallback = e;
                            }),
                            (e.prototype.onLoad = function () {
                                var e = this;
                                (this.inviteClickCallbak = new n.default(function () {
                                    e.inviteBtnClick();
                                })),
                                    this.invite_btn.node.on(cc.Node.EventType.TOUCH_END, this.inviteClickCallbak.click, this.inviteClickCallbak),
                                    l.default.register(u.default.NOTIFY_MUSIC_LIBRARY_UPDATE, this.refreshData, this);
                            }),
                            (e.prototype.start = function () {}),
                            (e.prototype.onDestroy = function () {
                                l.default.remove(u.default.NOTIFY_MUSIC_LIBRARY_UPDATE, this.refreshData, this);
                            }),
                            (e.prototype.inviteBtnClick = function () {
                                var t = this;
                                if (this.mItemInfo.isLocked)
                                    if (f.default.supportCMOnshare()) this.inviteCMFriendBtnClickCallback();
                                    else {
                                        var e = p.ADScene.SOURCE_HOTMUSIC_UNLOCK;
                                        h.MGAdv.show(e, p.QQ_ADV_TYPE.VIDEO_TYPE_HOTMUSIC_UNLOCK, function (e) {
                                            switch (e) {
                                                case p.ADStat.NOT_NETWORK:
                                                    m.default.getIns().showToastTips('No network available', t.node, null, !0);
                                                    break;
                                                case p.ADStat.SHOW_SUCCESS_CLOSE:
                                                    g.default.unlockByVideo(t.mItemInfo.id, t.mItemInfo.musicId);
                                                    break;
                                                case p.ADStat.SHOW_NOT_ENED_CLOSE:
                                                    break;
                                                case p.ADStat.SHOW_GET_AD_FAILED:
                                                    m.default.getIns().showToastTips('No video ads available', t.node, null, !0);
                                            }
                                        }),
                                            c.default.report(c.default.SOURCE_GAMEOVER, c.default.ACTION_CLICK_INVITE_FRIEND, '' + this.mItemInfo.musicId);
                                    }
                                else this.startGameCallback && this.startGameCallback(this.mItemInfo);
                            }),
                            (e.prototype.inviteCMFriendBtnClickCallback = function () {
                                _.default.Ins().saveItemInfo(this.mItemInfo),
                                    d.MGShareUtils.shareForInviteSong('playerId', r.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SONG + '_' + this.mItemInfo.musicId, this.mItemInfo.musicId, this.mItemInfo.musicName, this.mItemInfo.id, function (e) {
                                        e && l.default.fire(u.default.SHARE_HOME_SHOW_INVITE_TIPS);
                                    });
                            }),
                            (e.prototype.refreshData = function (e, t) {
                                if (t[0] == this.mItemInfo.musicId) {
                                    var i = o.MusicLevelDataLoader.getItemInfoByMid(this.mItemInfo.musicId);
                                    this.setData(i, this.itemID);
                                }
                            }),
                            (e.prototype.setData = function (e, t) {
                                (this.itemID = t), null != e ? ((this.mItemInfo = e), (this.node.active = !0), (this.title_label.string = s.StringUtil.getFixedlengthStr(e.musicName, 16)), e.isLocked ? (f.default.supportCMOnshare() ? (this.cm_invite_btn.active = !0) : (this.invite_label.active = !0), (this.start_Layout.active = !1)) : ((this.cm_invite_btn.active = !1), (this.invite_label.active = !1), (this.start_Layout.active = !0), e.mGameComsume.spendType == o.GameConsume.SPENDTYPE_ENERGY ? (this.start_label.string = e.mGameComsume.spendEnergy + '开始') : (this.start_label.string = '开始')), e.unlockType.unlockType == a.eUnlockType.UNLOCK_TYPE_DIAMOND ? (this.describe_label.string = cc.js.formatStr('价值%s钻石', e.unlockType.unlockValue)) : (this.describe_label.string = '')) : (this.node.active = !1);
                            }),
                            __decorate([v(cc.Label)], e.prototype, 'title_label', void 0),
                            __decorate([v(cc.Label)], e.prototype, 'describe_label', void 0),
                            __decorate([v(cc.Button)], e.prototype, 'invite_btn', void 0),
                            __decorate([v(cc.Node)], e.prototype, 'invite_label', void 0),
                            __decorate([v(cc.Node)], e.prototype, 'start_Layout', void 0),
                            __decorate([v(cc.Label)], e.prototype, 'start_label', void 0),
                            __decorate([v(cc.Node)], e.prototype, 'cm_invite_btn', void 0),
                            (e = __decorate([S], e))
                        );
                    })(cc.Component);
                (i.default = I), cc._RF.pop();
            },
            {
                '../../../modules/MGAdv/scripts/Logic/MGAdvDefine': 'MGAdvDefine',
                '../../../modules/MGAdv/scripts/Logic/MGAdvEntrance': 'MGAdvEntrance',
                '../../../modules/MGAppShare/scripts/MGShareUtil': 'MGShareUtil',
                '../../infoc/m_p2_HMusic_laxin': 'm_p2_HMusic_laxin',
                '../../util/PU': 'PU',
                '../../util/StringUtil': 'StringUtil',
                '../Logic/EventBus': 'EventBus',
                '../Logic/Level': 'Level',
                '../Logic/NotifyEvent': 'NotifyEvent',
                '../Logic/Plugin/UnlockProcessor': 'UnlockProcessor',
                '../UI/GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
                '../UI/GameEntraScene/MusicLib/HotMusicCMShareController': 'HotMusicCMShareController',
                '../UI/MusicLevelDataLoader': 'MusicLevelDataLoader',
                '../common/BusinessUtil': 'BusinessUtil',
                '../reward/ActivityBean': 'ActivityBean',
            },
        ],
        GameOverHotSongShare: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'e0ca1uMAE1Ot4eZoHsBSL1G', 'GameOverHotSongShare'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../../util/SUtil'),
                    n = e('../../../../util/PU'),
                    a = e('../BasicTouchEvent'),
                    r = e('../../../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    s = e('../../../../../modules/MGAppShare/scripts/MGShareUtil'),
                    c = e('../../../Logic/EventBus'),
                    l = e('../../../Logic/NotifyEvent'),
                    u = e('../../../reward/ActivityBean'),
                    d = e('../../../../infoc/m_p2_HMusic_laxin'),
                    p = cc._decorator,
                    h = p.ccclass,
                    f = p.property,
                    m = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.musicNameLabel = null), (e.shareBtn = null), (e.cancelBtn = null), (e.content = null), (e.shareBtnPanel = null), (e.diamondCount = null), (e.top = null), (e.mShareClickCallback = null), (e.mCloseClickCallback = null), (e.completeFunc = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.start = function () {
                                this.adaptorUI(), this.initEvents();
                                var e = this.shareBtn.getComponent(cc.Animation);
                                (this.musicNameLabel.string = '《' + this.mMusicName + '》'), (this.diamondCount.string = this.mUnlockDiamond + ''), e.play('fluent_btn_bigger'), d.default.report(d.default.SOURCE_HOT_MUSIC_RESULT, d.default.ACTION_SHOW, '0');
                            }),
                            (e.prototype.initEvents = function () {
                                var e = this;
                                this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                }),
                                    this.node.on(
                                        cc.Node.EventType.TOUCH_START,
                                        function (e) {
                                            e.stopPropagationImmediate();
                                        },
                                        this,
                                    ),
                                    (this.mShareClickCallback = new a.default(function () {
                                        e.onShareClick();
                                    })),
                                    this.shareBtn.node.on(cc.Node.EventType.TOUCH_END, this.mShareClickCallback.click, this.mShareClickCallback),
                                    (this.mCloseClickCallback = new a.default(function () {
                                        e.onCloseClick();
                                    })),
                                    this.cancelBtn.node.on(cc.Node.EventType.TOUCH_END, this.mCloseClickCallback.click, this.mCloseClickCallback);
                            }),
                            (e.prototype.onShareClick = function () {
                                this.shareForHotSongGift(), this.completeFunc(), d.default.report(d.default.SOURCE_HOT_MUSIC_RESULT, d.default.ACTION_CLICK_TO_HOT_SONG, '0');
                            }),
                            (e.prototype.onCloseClick = function () {
                                this.completeFunc(), d.default.report(d.default.SOURCE_HOT_MUSIC_RESULT, d.default.ACTION_CLICK_CLOSE, '0');
                            }),
                            (e.prototype.shareForHotSongGift = function () {
                                var t = this;
                                r.MGUser.getUserLoginInfo({
                                    complete: function (e) {
                                        e &&
                                            s.MGShareUtils.shareForInviteSong(e.playerId, u.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SONG + t.mMusicMid, t.mMusicMid, t.mMusicName, t.mLevelId, function (e) {
                                                e && c.default.fire(l.default.SHARE_RESULT_SHOW_INVITE_TIPS);
                                            }),
                                            c.default.fire(l.default.INVITE_SONG_LOOPER_START);
                                    },
                                });
                            }),
                            (e.prototype.setData = function (e, t, i, o, n, a, r) {
                                (this.mMusicMid = e), (this.mLevelId = t), (this.mMusicName = i), (this.mCurrentScore = o), (this.mBestScore = n), (this.mMusicGrade = a), (this.mUnlockDiamond = r);
                            }),
                            (e.prototype.setCompleteFunc = function (e) {
                                e && (this.completeFunc = e);
                            }),
                            (e.prototype.adaptorUI = function () {
                                n.default.isQQ() ? (o.SUtil.ins().isLiuHai() ? (o.SUtil.ins().setNodeWidgetToTop(this.content, 18.9), o.SUtil.ins().setNodeWidgetToTop(this.musicNameLabel, 16.9), o.SUtil.ins().setNodeWidgetToTop(this.shareBtnPanel, 74.3), o.SUtil.ins().setNodeWidgetToTop(this.cancelBtn, 83.4)) : o.SUtil.ins().isQuanMian() && (o.SUtil.ins().setNodeWidgetToTop(this.content, 16.3), o.SUtil.ins().setNodeWidgetToTop(this.musicNameLabel, 14.5), o.SUtil.ins().setNodeWidgetToTop(this.shareBtnPanel, 76.6), o.SUtil.ins().setNodeWidgetToTop(this.cancelBtn, 86.5))) : (n.default.isWeiXin() || n.default.isWeb()) && (o.SUtil.ins().isLiuHai() ? (o.SUtil.ins().toTopByPx(this.content, 304), o.SUtil.ins().toTopByPx(this.shareBtnPanel, 1152), o.SUtil.ins().toTopByPx(this.cancelBtn, 1319), o.SUtil.ins().toTopByPx(this.top, 182.5)) : o.SUtil.ins().isQuanMian() && (o.SUtil.ins().toTopByPx(this.content, 245), o.SUtil.ins().toTopByPx(this.shareBtnPanel, 1060), o.SUtil.ins().toTopByPx(this.cancelBtn, 1227)));
                            }),
                            __decorate([f(cc.Label)], e.prototype, 'musicNameLabel', void 0),
                            __decorate([f(cc.Button)], e.prototype, 'shareBtn', void 0),
                            __decorate([f(cc.Label)], e.prototype, 'cancelBtn', void 0),
                            __decorate([f(cc.Sprite)], e.prototype, 'content', void 0),
                            __decorate([f(cc.Node)], e.prototype, 'shareBtnPanel', void 0),
                            __decorate([f(cc.Label)], e.prototype, 'diamondCount', void 0),
                            __decorate([f(cc.Node)], e.prototype, 'top', void 0),
                            (e = __decorate([h], e))
                        );
                    })(cc.Component);
                (i.default = m), cc._RF.pop();
            },
            {
                '../../../../../modules/MGAppShare/scripts/MGShareUtil': 'MGShareUtil',
                '../../../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../../../infoc/m_p2_HMusic_laxin': 'm_p2_HMusic_laxin',
                '../../../../util/PU': 'PU',
                '../../../../util/SUtil': 'SUtil',
                '../../../Logic/EventBus': 'EventBus',
                '../../../Logic/NotifyEvent': 'NotifyEvent',
                '../../../reward/ActivityBean': 'ActivityBean',
                '../BasicTouchEvent': 'BasicTouchEvent',
            },
        ],
        GameOverHotSong: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '79902U8cwRD/58y1H0XV0hA', 'GameOverHotSong'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../UI/GameEntraScene/BasicTouchEvent'),
                    n = e('../UI/MusicLevelDataLoader'),
                    a = e('../../util/Dictionary'),
                    p = e('./GameOverHotSongItem'),
                    r = e('../../infoc/m_p2_HMusic_laxin'),
                    s = e('../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    c = e('../../util/PU'),
                    l = e('../UI/GameEntraScene/ImgCache'),
                    u = cc._decorator,
                    d = u.ccclass,
                    h = u.property,
                    f = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.close_btn = null), (e.bg_sprite = null), (e.scrollView = null), (e.spawnCount = 0), (e.spacing = 0), (e.bufferZone = 0), (e.mItemPrefab = null), (e.mCloseClickCallback = null), (e.mContent = null), (e.itemTemplate = null), (e.items = []), (e.mRealIndex = []), (e.itemHeight = 122), (e.lastContentPosY = 0), (e.mItemUnlockCount = new a.Dictionary()), (e.mInitDataFinish = !1), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.setStartGameCallback = function (e) {
                                this.startGameCallback = e;
                            }),
                            (e.prototype.setCloseCallback = function (e) {
                                this.closeCallback = e;
                            }),
                            (e.prototype.onLoad = function () {
                                this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                }),
                                    (this.mContent = this.scrollView.content),
                                    this.initEvent(),
                                    this.initBg(),
                                    (this.mItemInfos = n.MusicLevelDataLoader.getValidActiveInfo(s.MGUser.getCurrentServerTime())),
                                    this.initializeScrollView(),
                                    r.default.report(r.default.SOURCE_GAMEOVER, r.default.ACTION_SHOW, '0');
                            }),
                            (e.prototype.start = function () {}),
                            (e.prototype.onDestroy = function () {}),
                            (e.prototype.initEvent = function () {
                                var e = this;
                                (this.mCloseClickCallback = new o.default(function () {
                                    e.closeClick();
                                })),
                                    this.close_btn.node.on(cc.Node.EventType.TOUCH_END, this.mCloseClickCallback.click, this.mCloseClickCallback);
                            }),
                            (e.prototype.initBg = function () {
                                var i = this;
                                c.default.supportCMOnshare() &&
                                    l.default.get('/static_res/gameover/hot_song_invite_bg.png', function (e, t) {
                                        t && (i.bg_sprite.getComponent(cc.Sprite).spriteFrame = t);
                                    });
                            }),
                            (e.prototype.closeClick = function () {
                                this.closeCallback && this.closeCallback(), r.default.report(r.default.SOURCE_GAMEOVER, r.default.ACTION_CLICK_CLOSE, '0');
                            }),
                            (e.prototype.initializeScrollView = function () {
                                var t = this;
                                this.itemTemplate = cc.instantiate(this.mItemPrefab);
                                var e = this.mItemInfos.length * (this.itemHeight + this.spacing);
                                this.mContent.height = e;
                                for (var i = Math.min(this.mItemInfos.length, this.spawnCount), o = 0; o < i; o++) {
                                    var n = cc.instantiate(this.itemTemplate),
                                        a = n.getComponent(p.default);
                                    a.setData(this.mItemInfos[o], o),
                                        a.setStartGameCallback(function (e) {
                                            t.startGameCallback && t.startGameCallback(e);
                                        }),
                                        n.setPosition(0, -(o * (this.itemHeight + this.spacing) + this.spacing)),
                                        this.mContent.addChild(n),
                                        this.mRealIndex.push(o),
                                        this.items.push(n);
                                }
                            }),
                            (e.prototype.scrollEvent = function (e, t) {
                                switch (t) {
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    case 4:
                                        this.updateByScroll();
                                }
                            }),
                            (e.prototype.updateByScroll = function () {
                                var e,
                                    t,
                                    i,
                                    o,
                                    n,
                                    a,
                                    r,
                                    s,
                                    c,
                                    l = this.items,
                                    u = this.bufferZone;
                                if (this.mContent.y < this.lastContentPosY) for (var d = this.mRealIndex.length - 1; 0 <= d && ((c = l[this.mRealIndex[d]]), (e = l[this.mRealIndex[0]]), (t = this.getPositionInView(c)).y < -u && e.y + this.spacing + c.height < 0); d--) (i = (s = c.getComponent(p.default)).itemID - this.spawnCount), s.setData(this.mItemInfos[i], i), (o = this.mRealIndex.pop()), this.mRealIndex.unshift(o), c.setPosition(0, e.y + this.spacing + this.itemHeight), d++;
                                else for (d = 0; d < this.mRealIndex.length && ((c = l[this.mRealIndex[d]]), (n = l[this.mRealIndex[this.mRealIndex.length - 1]]), (t = this.getPositionInView(c)), (a = this.itemHeight), t.y > u && n.y - a - this.spacing > -this.mContent.height); d++) (i = (s = c.getComponent(p.default)).itemID + this.spawnCount), s.setData(this.mItemInfos[i], i), (r = this.mRealIndex.shift()), this.mRealIndex.push(r), c.setPosition(0, n.y - a - this.spacing), d--;
                                this.lastContentPosY = this.mContent.y;
                            }),
                            (e.prototype.getPositionInView = function (e) {
                                var t = e.parent.convertToWorldSpaceAR(e.position);
                                return this.scrollView.node.convertToNodeSpaceAR(t);
                            }),
                            __decorate([h(cc.Button)], e.prototype, 'close_btn', void 0),
                            __decorate([h(cc.Sprite)], e.prototype, 'bg_sprite', void 0),
                            __decorate([h(cc.ScrollView)], e.prototype, 'scrollView', void 0),
                            __decorate([h], e.prototype, 'spawnCount', void 0),
                            __decorate([h], e.prototype, 'spacing', void 0),
                            __decorate([h], e.prototype, 'bufferZone', void 0),
                            __decorate([h(cc.Prefab)], e.prototype, 'mItemPrefab', void 0),
                            (e = __decorate([d], e))
                        );
                    })(cc.Component);
                (i.default = f), cc._RF.pop();
            },
            {
                '../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../infoc/m_p2_HMusic_laxin': 'm_p2_HMusic_laxin',
                '../../util/Dictionary': 'Dictionary',
                '../../util/PU': 'PU',
                '../UI/GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
                '../UI/GameEntraScene/ImgCache': 'ImgCache',
                '../UI/MusicLevelDataLoader': 'MusicLevelDataLoader',
                './GameOverHotSongItem': 'GameOverHotSongItem',
            },
        ],
        GameOverInviteSKin: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '7aaf8NFDt9GQKZrLdP0SuXH', 'GameOverInviteSKin'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../reward/ActivityBean'),
                    n = e('../UI/GameEntraScene/BasicTouchEvent'),
                    a = e('../reward/ActivityRewardManager'),
                    r = e('../Logic/SkinDataManager'),
                    s = e('../UI/GameEntraScene/ImgCache'),
                    c = e('../../base/Log'),
                    l = e('../Logic/EventBus'),
                    u = e('../Logic/NotifyEvent'),
                    d = e('../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    p = e('../../social/AvatarUtil'),
                    h = e('../../../modules/MGAppShare/scripts/MGShareUtil'),
                    f = cc._decorator,
                    m = f.ccclass,
                    g = f.property,
                    _ = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.invite_fds_btn = null), (e.close_btn = null), (e.invite_count_text = null), (e.avatar_sprite1 = null), (e.mask_layout1 = null), (e.avatar_sprite2 = null), (e.mask_layout2 = null), (e.avatar_sprite3 = null), (e.mask_layout3 = null), (e.invite_count_layout = null), (e.newUserCount = 0), (e.mCloseBtnClickCallback = null), (e.mInviteFdsBtnClickCallback = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.setCloseCallback = function (e) {
                                this.mCloseCallback = e;
                            }),
                            (e.prototype.setInvitefdsCallback = function (e) {
                                this.mInviteFdsCallback = e;
                            }),
                            (e.prototype.onLoad = function () {
                                this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                }),
                                    this.initEvent(),
                                    this.initData();
                            }),
                            (e.prototype.initEvent = function () {
                                var e = this;
                                (this.mCloseBtnClickCallback = new n.default(function () {
                                    e.closeBtnClick();
                                })),
                                    this.close_btn.node.on(cc.Node.EventType.TOUCH_END, this.mCloseBtnClickCallback.click, this.mCloseBtnClickCallback),
                                    (this.mInviteFdsBtnClickCallback = new n.default(function () {
                                        e.inviteFdsBtnClick();
                                    })),
                                    this.invite_fds_btn.node.on(cc.Node.EventType.TOUCH_END, this.mInviteFdsBtnClickCallback.click, this.mInviteFdsBtnClickCallback);
                            }),
                            (e.prototype.initData = function () {
                                var t = this;
                                (this.invitees = a.ActivityRewardMgr.Ins().getCacheInviteRewardList(o.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SKIN)),
                                    this.initView(),
                                    a.ActivityRewardMgr.Ins().getInviteSuccessListComplete(o.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SKIN, function (e) {
                                        (t.invitees = e), t.initView();
                                    });
                            }),
                            (e.prototype.initView = function () {
                                var t = this;
                                if (this.invitees && 0 < this.invitees.length) {
                                    var i = 0;
                                    if (
                                        (this.invitees.forEach(function (e) {
                                            e.hd_id == o.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SKIN && e.is_new_player && (1 == ++i && ((t.mask_layout1.node.active = !0), (t.avatar_sprite1.node.width = 108), (t.avatar_sprite1.node.height = 108), p.default.showUserAvatar(e.avatar_url, t.avatar_sprite1, !1)), 2 == i && ((t.mask_layout2.node.active = !0), (t.avatar_sprite2.node.width = 108), (t.avatar_sprite2.node.height = 108), p.default.showUserAvatar(e.avatar_url, t.avatar_sprite2, !1)), 3 == i && ((t.mask_layout3.node.active = !0), (t.avatar_sprite3.node.width = 108), (t.avatar_sprite3.node.height = 108), p.default.showUserAvatar(e.avatar_url, t.avatar_sprite3, !1)));
                                        }),
                                        3 <= i)
                                    )
                                        (this.invite_count_layout.node.active = !1), r.SkinDataMgr.Ins().unlockInviteSkin();
                                    else {
                                        this.invite_count_layout.node.active = !0;
                                        var e = '/ui/skin_invite_num' + i;
                                        s.default.get2(e, this.invite_count_text);
                                    }
                                    r.SkinDataMgr.Ins().updateInviteSkinCount(3 < i ? 3 : i), (this.newUserCount = 3 < i ? 3 : i);
                                }
                            }),
                            (e.prototype.closeBtnClick = function () {
                                this.mCloseCallback && this.mCloseCallback();
                            }),
                            (e.prototype.inviteFdsBtnClick = function () {
                                this.mInviteFdsCallback && this.mInviteFdsCallback(),
                                    d.MGUser.getUserLoginInfo({
                                        complete: function (e) {
                                            e &&
                                                h.MGShareUtils.shareForInviteSkin(e.playerId, o.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SKIN, function (e) {
                                                    c.default.i('邀请好友得皮肤卡片分享,result : ' + e), e && l.default.fire(u.default.SHARE_RESULT_SHOW_INVITE_TIPS);
                                                });
                                        },
                                    });
                            }),
                            (e.prototype.start = function () {}),
                            __decorate([g(cc.Button)], e.prototype, 'invite_fds_btn', void 0),
                            __decorate([g(cc.Button)], e.prototype, 'close_btn', void 0),
                            __decorate([g(cc.Sprite)], e.prototype, 'invite_count_text', void 0),
                            __decorate([g(cc.Sprite)], e.prototype, 'avatar_sprite1', void 0),
                            __decorate([g(cc.Layout)], e.prototype, 'mask_layout1', void 0),
                            __decorate([g(cc.Sprite)], e.prototype, 'avatar_sprite2', void 0),
                            __decorate([g(cc.Layout)], e.prototype, 'mask_layout2', void 0),
                            __decorate([g(cc.Sprite)], e.prototype, 'avatar_sprite3', void 0),
                            __decorate([g(cc.Layout)], e.prototype, 'mask_layout3', void 0),
                            __decorate([g(cc.Layout)], e.prototype, 'invite_count_layout', void 0),
                            (e = __decorate([m], e))
                        );
                    })(cc.Component);
                (i.default = _), cc._RF.pop();
            },
            {
                '../../../modules/MGAppShare/scripts/MGShareUtil': 'MGShareUtil',
                '../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../base/Log': 'Log',
                '../../social/AvatarUtil': 'AvatarUtil',
                '../Logic/EventBus': 'EventBus',
                '../Logic/NotifyEvent': 'NotifyEvent',
                '../Logic/SkinDataManager': 'SkinDataManager',
                '../UI/GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
                '../UI/GameEntraScene/ImgCache': 'ImgCache',
                '../reward/ActivityBean': 'ActivityBean',
                '../reward/ActivityRewardManager': 'ActivityRewardManager',
            },
        ],
        GameOverPopupUtil: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'fda152FKDNCxbCYBr3srOYG', 'GameOverPopupUtil'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var r,
                    o,
                    n = e('../Logic/SkinDataManager'),
                    a = e('../Logic/PlayerMgr'),
                    s = e('../Network/Protocol/StorageUtil'),
                    c = e('../../config/LSKey'),
                    l = e('../../util/NumberUtil'),
                    u = e('../../util/TimeUtil'),
                    d = e('../../base/Log'),
                    p = e('../UI/MusicLevelDataLoader'),
                    h = e('../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    f = e('../../upgrade/ToggleChecker'),
                    m = e('../../upgrade/ToggleBean'),
                    g = (function () {
                        function e() {}
                        return (
                            (e.needShowInviteSkinPopup = function (e) {
                                return !1;
                            }),
                            (e.needShowHotMusicbattleTips = function () {
                                var e = !1,
                                    t = h.MGUser.getCurrentServerTime(),
                                    i = new Date(t);
                                return u.default.isSameDay(i, new Date(l.default.parseIntFromString(s.default.read(c.default.GAME_OVER_LAST_SHOW_HOT_MUSIC_BATTLE_TIPS_TIME)))) || (e = !0), d.default.i('[zhangfu]GameOverInviteUtil.needShowHotMusicbattleTips needShow = ' + e + ',timeStamp = ' + t), s.default.save(c.default.GAME_OVER_LAST_SHOW_HOT_MUSIC_BATTLE_TIPS_TIME, t + ''), e;
                            }),
                            (e.needActiveShowPopup = function (e, t) {
                                var i = !1,
                                    o = h.MGUser.getCurrentServerTime(),
                                    n = new Date(o);
                                return e < 3 && u.default.isSameDay(n, new Date(l.default.parseIntFromString(s.default.read(c.default.GAME_OVER_LAST_SHOW_TIME)))) && (t == r.InviteType_SKIN ? u.default.isSameDay(n, new Date(l.default.parseIntFromString(s.default.read(c.default.GAME_OVER_INVIE_SKIN_LAST_SHOW_TIME)))) || (i = !0) : t == r.InviteType_HOT_SONG && (u.default.isSameDay(n, new Date(l.default.parseIntFromString(s.default.read(c.default.GAME_OVER_INVITE_SONG_LAST_SHOW_TIME)))) || (i = !0))), d.default.i('[zhangfu]GameOverInviteUtil.needActiveShowPopup needShow = ' + i + ',timeStamp = ' + o), i;
                            }),
                            (e.needShowActivePopupByToggle = function (o, n, a) {
                                f.default.ins().init(function () {
                                    var e = m.ToggleKey.RESULT_SKIN;
                                    o == r.InviteType_HOT_SONG && (e = m.ToggleKey.RESULT_SONG);
                                    var t = f.default.ins().getToggleStatus(e, 0, n),
                                        i = 1 == t;
                                    d.default.i('[zhangfu]GameOverInviteUtil.needShowActivePopupByToggle toggle status =' + t + ', needShow = ' + i), a(i);
                                });
                            }),
                            (e.needShowShareGiftByToggle = function (e, t) {
                                t(!1);
                            }),
                            (e.getDefaultShowType = function () {
                                return r.InviteType_HOT_SONG;
                            }),
                            (e.canShowSkin = function () {
                                return !n.SkinDataMgr.Ins().isUnLockAllInviteSkin();
                            }),
                            (e.canShowHotSong = function () {
                                var e = !1;
                                if (3 <= a.default.Ins().getUserLevel()) {
                                    var t = p.MusicLevelDataLoader.getValidActiveInfo(h.MGUser.getCurrentServerTime());
                                    if (t)
                                        for (var i = t.length, o = 0; o < i; o++) {
                                            if (t[o].isLocked) return (e = !0);
                                        }
                                }
                                return e;
                            }),
                            e
                        );
                    })();
                (i.default = g), ((o = r = i.InviteType || (i.InviteType = {}))[(o.InviteType_NONE = 0)] = 'InviteType_NONE'), (o[(o.InviteType_SKIN = 1)] = 'InviteType_SKIN'), (o[(o.InviteType_HOT_SONG = 2)] = 'InviteType_HOT_SONG'), cc._RF.pop();
            },
            {
                '../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../base/Log': 'Log',
                '../../config/LSKey': 'LSKey',
                '../../upgrade/ToggleBean': 'ToggleBean',
                '../../upgrade/ToggleChecker': 'ToggleChecker',
                '../../util/NumberUtil': 'NumberUtil',
                '../../util/TimeUtil': 'TimeUtil',
                '../Logic/PlayerMgr': 'PlayerMgr',
                '../Logic/SkinDataManager': 'SkinDataManager',
                '../Network/Protocol/StorageUtil': 'StorageUtil',
                '../UI/MusicLevelDataLoader': 'MusicLevelDataLoader',
            },
        ],
        GameSceneDebugPanel: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '6b16bzjEqtI76zSdCv+AzmP', 'GameSceneDebugPanel'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var g = e('../base/G'),
                    o = e('../business/UI/GameEntraScene/PrefabMgr'),
                    n = (function () {
                        function e(e, t) {
                            (this.DebugTouchEnabled = !1), (this.node = null), (this.renderSwitch = null), (this.clickTimes = 0), (this.lastClickTime = 0), (this.limitX = 0), (this.limitYDown = 0), (this.limitYUp = 0), (this.inited = !1), (this.touchInit = !1), (this.node = e), (this.renderSwitch = t);
                            var i = cc.view.getDevicePixelRatio();
                            (this.limitX = 80 * i), (this.limitYDown = 80 * i), (this.limitYUp = Math.floor(cc.game.canvas.height / g.G.Ap.config.presentScale) - this.limitYDown);
                        }
                        return (
                            (e.prototype.setDebugTouchEnabled = function () {
                                this.DebugTouchEnabled = !0;
                            }),
                            (e.prototype.isTouchMatched = function (e) {
                                if (!this.DebugTouchEnabled || e.length <= 0) return !1;
                                var t = e[0];
                                return t.clientX <= this.limitX && t.clientY >= this.limitYUp;
                            }),
                            (e.prototype.checkColorEgg = function () {
                                if (g.G.Ap.config.isGameSceneTest()) this.triggerColorEgg();
                                else {
                                    var e = new Date().getTime();
                                    e - this.lastClickTime <= 800 ? (this.clickTimes++, 6 === this.clickTimes && ((this.clickTimes = 0), (g.G.Ap.config.gameSceneTest = !0), this.triggerColorEgg())) : (this.clickTimes = 1), (this.lastClickTime = e);
                                }
                            }),
                            (e.prototype.triggerColorEgg = function () {
                                var t = this;
                                this.initTouchStatus(),
                                    this.inited
                                        ? this.showDebugElements()
                                        : ((this.inited = !0),
                                          this.loadDebugPrefb(function (e) {
                                              t.initDebugElements(e);
                                          }));
                            }),
                            (e.prototype.showDebugElements = function () {
                                var e = this.node.getChildByName('DebugPanel');
                                null != e && (e.active = !0);
                            }),
                            (e.prototype.initTouchStatus = function () {
                                this.touchInit || ((this.touchInit = !0), this.renderSwitch.saveStatus(), this.renderSwitch.enableCocosRender(), this.renderSwitch.enableCocosTouch(), this.renderSwitch.disableTouchHandler());
                            }),
                            (e.prototype.resetTouchStatus = function () {
                                this.renderSwitch.restoreStatus(), (this.touchInit = !1);
                            }),
                            (e.prototype.initDebugElements = function (e) {
                                var t = this;
                                if (!g.G.Ap.autoTester.isStart()) {
                                    this.node.addChild(e);
                                    var i = this.node.getChildByName('DebugPanel');
                                    if (null != i) {
                                        i.getChildByName('ClosePanel').on(cc.Node.EventType.TOUCH_END, function (e) {
                                            (i.active = !1), t.resetTouchStatus();
                                        });
                                        var o = i.getChildByName('Sound');
                                        (o.getChildByName('Label').getComponent(cc.Label).string = '声音：' + (g.G.Ap.config.debugNoBlockSound ? '关' : '开')),
                                            o.on(cc.Node.EventType.TOUCH_END, function (e) {
                                                (g.G.Ap.config.debugNoBlockSound = !g.G.Ap.config.debugNoBlockSound), (o.getChildByName('Label').getComponent(cc.Label).string = '声音：' + (g.G.Ap.config.debugNoBlockSound ? '关' : '开'));
                                            });
                                        var n = i.getChildByName('ScoreAnim');
                                        (n.getChildByName('Label').getComponent(cc.Label).string = '分数：' + (g.G.Ap.config.debugNoScoreAnim ? '关' : '开')),
                                            n.on(cc.Node.EventType.TOUCH_END, function (e) {
                                                (g.G.Ap.config.debugNoScoreAnim = !g.G.Ap.config.debugNoScoreAnim), (n.getChildByName('Label').getComponent(cc.Label).string = '分数：' + (g.G.Ap.config.debugNoScoreAnim ? '关' : '开'));
                                            });
                                        var a = i.getChildByName('LongBlockTouch');
                                        (a.getChildByName('Label').getComponent(cc.Label).string = '不检测：' + (g.G.Ap.config.debugNoDetectMission ? '开' : '关')),
                                            a.on(cc.Node.EventType.TOUCH_END, function (e) {
                                                (g.G.Ap.config.debugNoDetectMission = !g.G.Ap.config.debugNoDetectMission), (a.getChildByName('Label').getComponent(cc.Label).string = '不检测：' + (g.G.Ap.config.debugNoDetectMission ? '开' : '关'));
                                            });
                                        var r = i.getChildByName('BlockTouch');
                                        (r.getChildByName('Label').getComponent(cc.Label).string = '块动画：' + (g.G.Ap.config.debugNoBlockAnim ? '关' : '开')),
                                            r.on(cc.Node.EventType.TOUCH_END, function (e) {
                                                (g.G.Ap.config.debugNoBlockAnim = !g.G.Ap.config.debugNoBlockAnim), (r.getChildByName('Label').getComponent(cc.Label).string = '块动画：' + (g.G.Ap.config.debugNoBlockAnim ? '关' : '开'));
                                            });
                                        var s = i.getChildByName('TouchEvent');
                                        (s.getChildByName('Label').getComponent(cc.Label).string = '可点击：' + (g.G.Ap.config.debugNoTouchResponse ? '关' : '开')),
                                            s.on(cc.Node.EventType.TOUCH_END, function (e) {
                                                (g.G.Ap.config.debugNoTouchResponse = !g.G.Ap.config.debugNoTouchResponse), (s.getChildByName('Label').getComponent(cc.Label).string = '可点击：' + (g.G.Ap.config.debugNoTouchResponse ? '关' : '开'));
                                            });
                                        var c = i.getChildByName('AutoTouch');
                                        (c.getChildByName('Label').getComponent(cc.Label).string = '自动点：' + (g.G.Ap.config.debugAutoTouchBlock ? '开' : '关')),
                                            c.on(cc.Node.EventType.TOUCH_END, function (e) {
                                                (g.G.Ap.config.debugAutoTouchBlock = !g.G.Ap.config.debugAutoTouchBlock), (c.getChildByName('Label').getComponent(cc.Label).string = '自动点：' + (g.G.Ap.config.debugAutoTouchBlock ? '开' : '关'));
                                            });
                                        var l = i.getChildByName('RobotTouch');
                                        (l.getChildByName('Label').getComponent(cc.Label).string = '机器人点：' + (g.G.Ap.config.debugRobotAutoTouchBlock ? '开' : '关')),
                                            l.on(cc.Node.EventType.TOUCH_END, function (e) {
                                                (g.G.Ap.config.debugRobotAutoTouchBlock = !g.G.Ap.config.debugRobotAutoTouchBlock), (l.getChildByName('Label').getComponent(cc.Label).string = '机器人点：' + (g.G.Ap.config.debugRobotAutoTouchBlock ? '开' : '关'));
                                            });
                                        var u = i.getChildByName('AutoLog');
                                        (u.getChildByName('Label').getComponent(cc.Label).string = '日志：' + (g.G.Ap.config.debugAutoLog ? '开' : '关')),
                                            u.on(cc.Node.EventType.TOUCH_END, function (e) {
                                                (g.G.Ap.config.debugAutoLog = !g.G.Ap.config.debugAutoLog), (u.getChildByName('Label').getComponent(cc.Label).string = '日志：' + (g.G.Ap.config.debugAutoLog ? '开' : '关'));
                                            });
                                        var d = i.getChildByName('FourfoldSpeed');
                                        (d.getChildByName('Label').getComponent(cc.Label).string = '4倍速：' + (4 == g.G.Ap.config.gameSpeedScale ? '开' : '关')),
                                            d.on(cc.Node.EventType.TOUCH_END, function (e) {
                                                4 == g.G.Ap.config.gameSpeedScale ? (g.G.Ap.config.gameSpeedScale = 0.95) : (g.G.Ap.config.gameSpeedScale = 4), (d.getChildByName('Label').getComponent(cc.Label).string = '4倍速：' + (4 == g.G.Ap.config.gameSpeedScale ? '开' : '关'));
                                            });
                                        var p = i.getChildByName('FreeRelive');
                                        (p.getChildByName('Label').getComponent(cc.Label).string = '无限复活：' + (g.G.Ap.config.debugFreeRelive ? '开' : '关')),
                                            p.on(cc.Node.EventType.TOUCH_END, function (e) {
                                                (g.G.Ap.config.debugFreeRelive = !g.G.Ap.config.debugFreeRelive), (p.getChildByName('Label').getComponent(cc.Label).string = '无限复活：' + (g.G.Ap.config.debugFreeRelive ? '开' : '关'));
                                            });
                                        var h = i.getChildByName('NoOvertake');
                                        (h.getChildByName('Label').getComponent(cc.Label).string = '超越好友：' + (g.G.Ap.config.debugNoOvertake ? '关' : '开')),
                                            h.on(cc.Node.EventType.TOUCH_END, function (e) {
                                                (g.G.Ap.config.debugNoOvertake = !g.G.Ap.config.debugNoOvertake), (h.getChildByName('Label').getComponent(cc.Label).string = '超越好友：' + (g.G.Ap.config.debugNoOvertake ? '关' : '开'));
                                            });
                                        var f = i.getChildByName('NoBgAnim');
                                        (f.getChildByName('Label').getComponent(cc.Label).string = '背景动画：' + (g.G.Ap.config.debugNoBackgroundAnim ? '关' : '开')),
                                            f.on(cc.Node.EventType.TOUCH_END, function (e) {
                                                (g.G.Ap.config.debugNoBackgroundAnim = !g.G.Ap.config.debugNoBackgroundAnim), (f.getChildByName('Label').getComponent(cc.Label).string = '背景动画：' + (g.G.Ap.config.debugNoBackgroundAnim ? '关' : '开'));
                                            });
                                        var m = i.getChildByName('ShowTouchPos');
                                        (m.getChildByName('Label').getComponent(cc.Label).string = '点击位置：' + (g.G.Ap.config.debugShowTouchPos ? '开' : '关')),
                                            m.on(cc.Node.EventType.TOUCH_END, function (e) {
                                                (g.G.Ap.config.debugShowTouchPos = !g.G.Ap.config.debugShowTouchPos), (m.getChildByName('Label').getComponent(cc.Label).string = '点击位置：' + (g.G.Ap.config.debugShowTouchPos ? '开' : '关'));
                                            }),
                                            i.getChildByName('PauseGame').on(cc.Node.EventType.TOUCH_END, function (e) {
                                                t.renderSwitch.getGameInterface().pauseGame();
                                            }),
                                            i.getChildByName('PerfTest').on(cc.Node.EventType.TOUCH_END, function (e) {
                                                g.G.Ap.autoTester.startTest();
                                            }),
                                            (i.active = !0);
                                    }
                                }
                            }),
                            (e.prototype.loadDebugPrefb = function (i) {
                                o.default.load('prefab/GameSceneDebugPanel', function (e, t) {
                                    i(t);
                                });
                            }),
                            e
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../base/G': 'G',
                '../business/UI/GameEntraScene/PrefabMgr': 'PrefabMgr',
            },
        ],
        GameSceneEntry: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '2b4d7YIOjdIRphzzoL3vAkl', 'GameSceneEntry'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./TouchHandler'),
                    d = e('../base/G'),
                    n = e('./GameSceneDebugPanel'),
                    a = e('../util/PU'),
                    r = e('./TrialGameScene'),
                    s = e('./TrialSongGameScene'),
                    c = e('../base/State'),
                    l = e('./GameSceneSetting'),
                    p = e('../property/PropertyDefines'),
                    u = e('../util/nodeFacade'),
                    h = e('./NormalGameScene'),
                    f = e('./MUI/MUIDefines'),
                    m = e('./element/loader/BeginFrameLoader'),
                    g = e('./element/loader/BlockSkinFrameLoader'),
                    _ = e('./element/loader/NumberFrameLoader'),
                    y = e('./element/loader/GameSceneFrameLoader'),
                    S = e('../business/UI/GameEntraScene/PrefabMgr'),
                    v = e('../base/Log'),
                    I = e('./ExclusiveSkinGameScene'),
                    T = e('../../modules/MGAdv/scripts/Logic/MGAdvDefine'),
                    C = e('../../modules/MGAdv/scripts/Logic/MGAdvEntrance'),
                    E = e('../business/Network/Protocol/StorageUtil'),
                    A = e('../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    P = e('../util/StringUtil'),
                    k = e('../util/TimeUtil'),
                    M = e('../config/LSKey'),
                    L = e('../business/UI/GameEntraScene/ImgCache'),
                    b = e('./view/BottomStorePanel'),
                    N = e('./view/PropertiesPanel'),
                    R = e('./TryPianoGameScene'),
                    D = e('../business/Logic/I18nManager'),
                    w = e('../business/shop/PropertyStorePrefab'),
                    B = e('../business/keypad/KeypadNavigator'),
                    G = e('../business/keypad/KeypadUtil'),
                    O = cc._decorator,
                    U = O.ccclass,
                    F = O.property,
                    H = (function () {
                        function e() {
                            (this.item = null),
                                (this.PROPERTIES = [
                                    {
                                        probability: 0.34,
                                        type: p.PROPERTYTYPE.GAME_DASH,
                                        tipIcon: '/static_res/tip_12s_autorun',
                                    },
                                    {
                                        probability: 0.33,
                                        type: p.PROPERTYTYPE.GAME_SLOW,
                                        tipIcon: '/static_res/tip_15s_slowdown',
                                    },
                                    {
                                        probability: 0.33,
                                        type: p.PROPERTYTYPE.GAME_SHIELD,
                                        tipIcon: '/static_res/tip_counteract_invincibel8s',
                                    },
                                ]),
                                (this.PROPERTIES_EN = [
                                    {
                                        probability: 0.34,
                                        type: p.PROPERTYTYPE.GAME_DASH,
                                        tipIcon: '/static_res/tip_12s_autorun_en',
                                    },
                                    {
                                        probability: 0.33,
                                        type: p.PROPERTYTYPE.GAME_SLOW,
                                        tipIcon: '/static_res/tip_15s_slowdown_en',
                                    },
                                    {
                                        probability: 0.33,
                                        type: p.PROPERTYTYPE.GAME_SHIELD,
                                        tipIcon: '/static_res/tip_counteract_invincibel8s_en',
                                    },
                                ]),
                                (this.item = this.pop());
                        }
                        return (
                            (e.prototype.getProperty = function () {
                                return new p.Property(this.item.type);
                            }),
                            (e.prototype.getType = function () {
                                return this.item.type;
                            }),
                            (e.prototype.getTipIcon = function () {
                                return this.item.tipIcon;
                            }),
                            (e.prototype.pop = function () {
                                var e = cc.rand() % 100,
                                    t = 0;
                                if (D.default.getInstance().isEnglish())
                                    for (var i = 0, o = this.PROPERTIES_EN; i < o.length; i++) {
                                        var n = o[i],
                                            a = t + Math.round(100 * n.probability);
                                        if (t <= e && e < a) return n;
                                        t = a;
                                    }
                                else
                                    for (var r = 0, s = this.PROPERTIES; r < s.length; r++) {
                                        (n = s[r]), (a = t + Math.round(100 * n.probability));
                                        if (t <= e && e < a) return n;
                                        t = a;
                                    }
                            }),
                            e
                        );
                    })();
                i.PropertyGenerator = H;
                var x = (function (t) {
                    function e() {
                        var e = (null !== t && t.apply(this, arguments)) || this;
                        return (e.sprite = null), (e.debugPanelEntry = null), (e.advRewardButton = null), (e.gameScene = null), (e.ctx = null), (e.touchHandler = null), (e.spriteCanvas = null), (e.spriteContext = null), (e.spriteTexture = null), (e.isCocosRender = void 0), (e.androidRenderLimit = 0), (e.savedCocosRenderStatus = !1), (e.savedCocosTouchStatus = !1), (e.savedTouchHandlerStatus = !1), (e.debugPanel = null), (e.bottomStorePanel = null), (e.mGameFrameInterval = 0.0167), (e.propertyGenerator = null), e;
                    }
                    return (
                        __extends(e, t),
                        (e.prototype.enResLoad = function () {
                            var i = this;
                            this.enSpriteSetNull(),
                                L.default.get('static_res/gamescene_adv_reward_icon_en', function (e, t) {
                                    cc.isValid(i, !0) && (i.advRewardButton.normalSprite = t);
                                }),
                                L.default.get('static_res/gamescene_adv_reward_icon_press_en', function (e, t) {
                                    cc.isValid(i, !0) && (i.advRewardButton.pressedSprite = t);
                                });
                        }),
                        (e.prototype.enSpriteSetNull = function () {
                            this.advRewardButton.getComponent(cc.Sprite).spriteFrame = null;
                        }),
                        (e.prototype.onLoad = function () {
                            D.default.getInstance().isEnglish() && this.enResLoad(), (this.canvas = cc.game.canvas), cc._renderType !== cc.game.RENDER_TYPE_CANVAS ? (console.log('GameSceneEntry::renderType => WebGL'), (this.ctx = null)) : (console.log('GameSceneEntry::renderType => Canvas'), (this.ctx = this.canvas.getContext('2d'))), (this.mGameFrameInterval = G.default.isHorizon() ? d.G.Ap.config.gameFrameIntervalHori : d.G.Ap.config.gameFrameInterval), this.makesureAtlasLoadFinish(), this.resetRenderLimit(), console.log('GameSceneEntry::resolution => ' + this.canvas.width + 'x' + this.canvas.height), (this.touchHandler = new o.default(this.node, this)), this.touchHandler.registerListener(), this.saveStatus(), this.createGameScene(), this.gameScene.setEntryInterface(this), this.gameScene.initilize(), this.gameScene.onLoad(), this.createRenderTexture();
                            var e = d.G.Ap.state.mission;
                            e.getType() == c.MISSIONTYPE.ExclusiveSkin || e.getType() == c.MISSIONTYPE.Battle || e.getType() == c.MISSIONTYPE.TrySkin || e.trial || e.getType() == c.MISSIONTYPE.TrySong || e.trialSong || e.getType() == c.MISSIONTYPE.TryPiano || e.tryPiano || l.default.getInstance().isNeedShowGuideInGameScene() || this.initAdv(), v.default.isDebug() && ((this.debugPanel = new n.default(this.node, this)), this.debugPanelEntry.on(cc.Node.EventType.TOUCH_END, this.checkAndShowDebugPanel, this)), B.default.getInstance().gotoPage(this.node, 'GameSceneEntry');
                        }),
                        (e.prototype.initAdvEvent = function () {
                            var i = this,
                                o = this.node.getChildByName('AdvRewardBtn'),
                                n = this.node.getChildByName('AdvRewardTip');
                            o.on(
                                cc.Node.EventType.TOUCH_END,
                                function () {
                                    console.warn('AdvRewardBtn => pressed');
                                    var e = T.ADScene.GAME_SCENE_REWARD_PROP,
                                        t = '网络不给力，请稍后重试';
                                    D.default.getInstance().isEnglish() && (t = 'There is something wrong with network,please check it.'),
                                        C.MGAdv.show(e, T.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK, function (e) {
                                            switch (e) {
                                                case T.ADStat.NOT_NETWORK:
                                                    i.showToastTips(t);
                                                    break;
                                                case T.ADStat.SHOW_SUCCESS_CLOSE:
                                                    i.showRewardPropertyDialog();
                                                    break;
                                                case T.ADStat.SHOW_NOT_ENED_CLOSE:
                                                    break;
                                                case T.ADStat.SHOW_GET_AD_FAILED:
                                                    i.showToastTips('No video ads available');
                                            }
                                            (o.active = !1), i.node.removeChild(o), n && i.node.removeChild(n), B.default.getInstance().onPressTab();
                                        });
                                },
                                this,
                            );
                        }),
                        (e.prototype.showRewardPropertyDialog = function () {
                            var a = this,
                                e = A.MGUser.getCurrentServerTime().toString();
                            console.log('本次观看广告时间 ' + e), E.default.save(M.default.LAST_USE_ADV_GET_PROPERTY_TIME, e);
                            var t = E.default.read(M.default.USE_ADV_GET_PROPERTY_COUNT);
                            console.log('观看广告次数' + t), P.StringUtil.isEmpty(t) ? (console.log('广告次数加1'), E.default.save(M.default.USE_ADV_GET_PROPERTY_COUNT, '1')) : (console.log('广告次数加1'), E.default.save(M.default.USE_ADV_GET_PROPERTY_COUNT, (parseInt(t) + 1).toString()));
                            var r = this.propertyGenerator.getProperty();
                            this.saveStatus(), this.disableTouchHandler();
                            var s = '恭喜获得减速道具，复活后15秒内钢琴块下落速度降低50',
                                c = '恭喜获得冲刺道具，可开局冲刺12秒',
                                l = '恭喜获得护盾道具，抵消一次失误并无敌8秒',
                                u = '好的';
                            D.default.getInstance().isEnglish() && ((s = 'Get slow down prop，block falling speed -50% in 15s after revive.'), (c = 'Get auto tap  prop，auto tap for 12s at the beginning of the game.'), (l = 'Get shield prop，offset one miss and remain  invincible for 8s.'), (u = 'Ok')),
                                S.default.load('prefab/shop/DialogRechargePrefab', function (e, t) {
                                    if (t) {
                                        var i = cc.instantiate(t),
                                            o = i.getComponent('DialogRechargePrefab'),
                                            n = void 0;
                                        switch (r.type) {
                                            case p.PROPERTYTYPE.GAME_SLOW:
                                                (n = s), o.setSlowCount(1);
                                                break;
                                            case p.PROPERTYTYPE.GAME_DASH:
                                                (n = c), o.setDashCount(1);
                                                break;
                                            case p.PROPERTYTYPE.GAME_SHIELD:
                                                (n = l), o.setShieldCount(1);
                                        }
                                        o.setContent(n),
                                            o.setBtnTxt(u),
                                            o.setBottonCallback(function () {
                                                var e = d.G.Ap.propertyPack.getPlayProperty();
                                                e.addProperty(r, 1), d.G.Ap.propertyPack.save(), e.getPropertyCount(r), a.updatePropertyCount(r), a.restoreStatus(), i.destroy();
                                            }),
                                            a.node.addChild(i);
                                    }
                                });
                        }),
                        (e.prototype.showToastTips = function (n, a) {
                            var r = this;
                            S.default.load('prefab/ToastPrefab', function (e, t) {
                                if (t) {
                                    var i = cc.instantiate(t),
                                        o = i.getComponent('ToastPrefab');
                                    o.showTips(n, function () {
                                        i.destroy(), a && a();
                                    }),
                                        o.setLong(!1),
                                        r.node.addChild(i);
                                }
                            });
                        }),
                        (e.prototype.initAdv = function () {
                            this.propertyGenerator = new H();
                            var e = E.default.read(M.default.LAST_USE_ADV_GET_PROPERTY_TIME);
                            if (P.StringUtil.isEmpty(e)) console.log('游戏场景加载广告  上次时间是空');
                            else {
                                var t = new Date(parseInt(e));
                                console.log('游戏场景加载广告 ' + e + ' ' + A.MGUser.getCurrentServerTime()), k.default.isBeyondOneDay(t, new Date(A.MGUser.getCurrentServerTime())) && (console.log('游戏场景加载广告  时间超过了一天，重置显示次数'), E.default.save(M.default.USE_ADV_GET_PROPERTY_COUNT, '0'));
                            }
                            var i = E.default.read(M.default.USE_ADV_GET_PROPERTY_COUNT),
                                o = this.node.getChildByName('AdvRewardBtn'),
                                n = this.node.getChildByName('AdvRewardTip');
                            G.default.isHorizon() ? ((n.active = !1), (o.active = !1)) : P.StringUtil.isEmpty(i) ? ((n.active = !0), this.setRandomAdvRewardTip(), (o.active = !0)) : 3 <= parseInt(i) ? ((n.active = !1), (o.active = !1)) : ((n.active = !0), this.setRandomAdvRewardTip(), (o.active = !0)), 1 == o.active && (C.MGAdv.isBannerCached() || a.default.isWeb() || a.default.isWeiXin() || C.MGAdv.load(T.ADScene.GAME_SCENE_REWARD_PROP, T.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK), this.initAdvEvent());
                        }),
                        (e.prototype.setRandomAdvRewardTip = function () {
                            var e = this.node.getChildByName('AdvRewardTip').getComponent(cc.Sprite),
                                t = this.propertyGenerator.getTipIcon();
                            L.default.get2(t, e);
                        }),
                        (e.prototype.checkAndShowDebugPanel = function () {
                            this.debugPanel.checkColorEgg();
                        }),
                        (e.prototype.start = function () {
                            this.enableCocosRender(), this.enableCocosTouch(), this.enableTouchHandler(), this.gameScene.start(), this.gameScene.updateScreenRatio(), this.gameScene.allowProperty() ? this.updatePropertiesPanel() : this.showPropertiesPanel(!1);
                        }),
                        (e.prototype.onDestroy = function () {
                            this.enableCocosRender(), this.enableCocosTouch(), this.disableTouchHandler(), cc.sys.garbageCollect(), this.touchHandler.unregisterListener(), cc.audioEngine.uncacheAll();
                            try {
                                this.gameScene.onDestroy();
                            } catch (e) {
                                console.error('GameSceneEntry::Error=' + e);
                            }
                        }),
                        (e.prototype.update = function (e) {
                            if ((a.default.calculationBenchmarkLevel(e), this.gameScene))
                                if ((this.gameScene.update(this.mGameFrameInterval, e), this.isCocosRender))
                                    if (f.MUI.global.renderType === f.MUI.RenderType.CANVAS) cc.sys.os === cc.sys.OS_ANDROID ? (6 <= this.androidRenderLimit ? ((this.androidRenderLimit = 0), this.gameScene.renderToTexture(this.spriteContext, null), this.spriteTexture.handleLoadedTexture()) : this.androidRenderLimit++) : (this.gameScene.renderToTexture(this.spriteContext, null), this.spriteTexture.handleLoadedTexture());
                                    else {
                                        var t = this.spriteTexture._glID;
                                        this.gameScene.renderToTexture(f.MUI.global.ctx, t);
                                    }
                                else f.MUI.global.renderType === f.MUI.RenderType.CANVAS ? (this.ctx.setTransform(1, 0, 0, 1, 0, 0), this.gameScene.render(this.ctx), d.G.Ap.config.debugShowTouchPos && this.touchHandler.render(this.ctx)) : this.gameScene.render(f.MUI.global.ctx);
                        }),
                        (e.prototype.createGameScene = function () {
                            var e = d.G.Ap.state.mission;
                            e.getType() === c.MISSIONTYPE.Battle || e.getType() === c.MISSIONTYPE.BattleFriend || e.getType() === c.MISSIONTYPE.BattleWorldChat || (e.getType() === c.MISSIONTYPE.ExclusiveSkin ? (this.gameScene = new I.default(this, this.node)) : e.getType() === c.MISSIONTYPE.TrySkin || e.trial ? (this.gameScene = new r.default(this, this.node)) : e.getType() === c.MISSIONTYPE.TrySong || e.trialSong ? (this.gameScene = new s.default(this, this.node)) : e.getType() === c.MISSIONTYPE.TryPiano || e.tryPiano ? (this.gameScene = new R.default(this, this.node)) : (this.gameScene = new h.default(this, this.node))), this.gameScene.setDecelerateConfirmPrefab('prefab/UseDecelerateConfirm'), this.gameScene.setPropertyIntroductionPrefab('prefab/PropertyIntroduction');
                        }),
                        (e.prototype.createRenderTexture = function () {
                            if (((this.spriteTexture = new cc.Texture2D()), (this.sprite.spriteFrame = new cc.SpriteFrame(this.spriteTexture)), f.MUI.global.renderType === f.MUI.RenderType.CANVAS)) (this.spriteCanvas = document.createElement('canvas')), (this.spriteCanvas.width = this.canvas.width), (this.spriteCanvas.height = this.canvas.height), (this.spriteContext = this.spriteCanvas.getContext('2d')), this.spriteTexture.initWithElement(this.spriteCanvas), this.spriteTexture.handleLoadedTexture(), (this.sprite.node.scaleY = 1);
                            else {
                                for (var e = new cc.Size(f.MUI.global.rttWidth, f.MUI.global.rttHeight), t = e.width * e.height * 4, i = new Uint8Array(t), o = 0; o < t; o++) i[o] = 0;
                                this.spriteTexture.initWithData(i, cc.Texture2D.PixelFormat.RGBA8888, e.width, e.height, null);
                                var n = f.MUI.global.rttViewPort;
                                (this.sprite.type = cc.Sprite.Type.TILED), this.sprite.spriteFrame.setRect(new cc.Rect(n[0], n[1], n[2], n[3])), this.sprite.node.setContentSize(n[2], n[3]), this.sprite.node.setScale((d.G.Ap.config.presentWidth + 1) / n[2], -(d.G.Ap.config.presentHeight + 1) / n[3]), (this.sprite.node.scaleY = -(d.G.Ap.config.presentHeight + 1) / n[3]);
                                var a = f.MUI.global.ctx;
                                (this.sprite.srcBlendFactor = a.ONE), (this.sprite.dstBlendFactor = a.ONE_MINUS_SRC_ALPHA);
                            }
                        }),
                        (e.prototype.showPropertiesPanel = function (e) {
                            var t = this.node.getChildByName('propertiesPanel');
                            t && (t.active = e);
                        }),
                        (e.prototype.updatePropertiesPanel = function (i) {
                            var o = this,
                                n = this.node.getChildByName('propertiesPanel');
                            if (n)
                                return this.bottomStorePanel
                                    ? (this.bottomStorePanel.updatePropertiesPanel(), void (i && this.bottomStorePanel.playGetPropertyAnim(i)))
                                    : void S.default.load('gamescene/BottomStorePanel', function (e, t) {
                                          t &&
                                              ((o.bottomStorePanel = t.getComponent(b.default)),
                                              o.bottomStorePanel.setShowPropPopupCb(function (e, t) {
                                                  e == N.PropShowType.Desc ? o.showPropertyDescribeToast(t) : e == N.PropShowType.Store && o.showPropertyStore(t);
                                              }),
                                              o.bottomStorePanel.setBottomStoreLoadFinished(function () {
                                                  B.default.getInstance().isNodeExists('propertyicondash') ||
                                                      o.scheduleOnce(function () {
                                                          B.default.getInstance().refreshPage(o.node, 'GameSceneEntry');
                                                      }, 1);
                                              }),
                                              n.addChild(t),
                                              i && o.bottomStorePanel.playGetPropertyAnim(i));
                                      });
                        }),
                        (e.prototype.showPropertyDescribeToast = function (e) {
                            var t = new u.default(this.node.getChildByName('toast')),
                                i = d.G.Ap.propertyPack.getConfig().getParam(e);
                            if (i) {
                                var o = this.parseDesc(i.describe);
                                t.setChildText('title', o), t.setOpacity(255), t.setVisible(!0);
                            }
                            if (t.getNode()) {
                                t.getNode().stopAllActions();
                                var n = cc.delayTime(3),
                                    a = cc.fadeTo(0.2, 0);
                                t.getNode().runAction(cc.sequence(n, a));
                            }
                        }),
                        (e.prototype.showPropertyStore = function (o) {
                            var n = this,
                                a = this.node.getChildByName('store');
                            a &&
                                S.default.load('prefab/PropertyStorePrefab', function (e, t) {
                                    if (t) {
                                        a.addChild(t);
                                        var i = t.getComponent(w.default);
                                        i.setCallBack(n), i.setPriortyProperty(o), i.show(), n.disableTouchHandler();
                                    }
                                });
                        }),
                        (e.prototype.resetRenderLimit = function () {
                            this.androidRenderLimit = 10;
                        }),
                        (e.prototype.onTouchStart = function (e) {
                            if (this.debugPanel && this.debugPanel.isTouchMatched(e) && !d.G.Ap.state.running) return this.checkAndShowDebugPanel(), void v.default.l('GameSceneEntry.onTouchStart debugPanel');
                            this.gameScene.onGameNodeTouchStart(e);
                        }),
                        (e.prototype.onTouchMove = function (e) {
                            this.gameScene.onGameNodeTouchMove(e);
                        }),
                        (e.prototype.onTouchEnd = function (e) {
                            this.gameScene.onGameNodeTouchEnd(e);
                        }),
                        (e.prototype.enableCocosRender = function () {
                            !0 !== this.isCocosRender && (console.log('Cocos Render => ON'), (this.isCocosRender = !0), (cc.sys.skipRender = !1));
                        }),
                        (e.prototype.disableCocosRender = function () {
                            !1 !== this.isCocosRender && (console.log('Cocos Render => OFF'), (this.isCocosRender = !1), this.resetRenderLimit(), (cc.sys.skipRender = !0));
                        }),
                        (e.prototype.enableCocosTouch = function () {
                            console.log('Cocos Touch => ON'), (cc.sys.skipTouch = !1);
                        }),
                        (e.prototype.disableCocosTouch = function () {
                            console.log('Cocos Touch => OFF'), (cc.sys.skipTouch = !0);
                        }),
                        (e.prototype.enableTouchHandler = function () {
                            console.log('Touch Handler => ON'), this.touchHandler.enable(!0);
                        }),
                        (e.prototype.disableTouchHandler = function () {
                            console.log('Touch Handler => OFF'), this.touchHandler.enable(!1);
                        }),
                        (e.prototype.saveStatus = function () {
                            (this.savedCocosRenderStatus = cc.sys.skipRender), (this.savedCocosTouchStatus = cc.sys.skipTouch), this.touchHandler && (this.savedTouchHandlerStatus = this.touchHandler.isEnabled());
                        }),
                        (e.prototype.restoreStatus = function () {
                            (this.isCocosRender = !this.savedCocosRenderStatus), (cc.sys.skipRender = this.savedCocosRenderStatus), cc.sys.skipRender && this.resetRenderLimit(), (cc.sys.skipTouch = this.savedCocosTouchStatus), this.touchHandler.enable(this.savedTouchHandlerStatus), console.log('restore: touchHandler:' + this.savedTouchHandlerStatus + ' skipTouch:' + this.savedCocosTouchStatus + ' skipRender:' + this.savedCocosRenderStatus);
                        }),
                        (e.prototype.getGameInterface = function () {
                            return this.gameScene;
                        }),
                        (e.prototype.getRenderNode = function () {
                            return this.node;
                        }),
                        (e.prototype.makesureAtlasLoadFinish = function () {
                            var e;
                            (e = m.default.getInstance().getAtlas()) && !e.isLoadFinish() && e.stepLoad(), (e = g.default.getInstance().getAtlas()) && !e.isLoadFinish() && e.stepLoad(), (e = _.default.getInstance().getAtlas()) && !e.isLoadFinish() && e.stepLoad(), (e = y.default.getInstance().getAtlas()) && !e.isLoadFinish() && e.stepLoad(), (e = y.default.getInstance().getAtlas2()) && !e.isLoadFinish() && e.stepLoad();
                        }),
                        (e.prototype.updatePropertyCount = function (e) {
                            this.updatePropertiesPanel(e);
                        }),
                        (e.prototype.gameStartRun = function () {
                            this.debugPanel && (this.debugPanelEntry.off(cc.Node.EventType.TOUCH_END, this.checkAndShowDebugPanel, this), this.debugPanel.setDebugTouchEnabled());
                            var e = this.node.getChildByName('AdvRewardBtn');
                            e && this.node.removeChild(e);
                            var t = this.node.getChildByName('AdvRewardTip');
                            t && this.node.removeChild(t), new u.default(this.node).setChildVisible('propertiesPanel', !1), this.enableTouchHandler();
                        }),
                        (e.prototype.gameBackground = function () {
                            this.gameScene && this.gameScene.gameBackground();
                        }),
                        (e.prototype.gameForeground = function () {
                            this.gameScene && this.gameScene.gameForeground();
                        }),
                        (e.prototype.onPropertyStoreClose = function (e) {
                            this.enableTouchHandler(), this.enableCocosTouch();
                            var t = d.G.Ap.state;
                            t.addCarryProperty(e, 0);
                            for (var i = t.getCarryProperties(), o = 0, n = i.length; o < n; ++o) {
                                var a = i[o];
                                t.removeCarryProperty(a);
                            }
                            var r = d.G.Ap.propertyPack.getPlayProperty();
                            for (o = 0, n = i.length; o < n; ++o) {
                                a = i[o];
                                0 < r.getPropertyCount(a) && t.addCarryProperty(a, 1);
                            }
                            this.updatePropertiesPanel();
                        }),
                        (e.prototype.onBuyProperty = function (e, t) {}),
                        (e.prototype.parseDesc = function (e) {
                            var t = '';
                            if (~e.indexOf(';'))
                                for (var i = e.split(';'), o = 0, n = 0, a = i; n < a.length; n++) {
                                    var r = a[n];
                                    (t = t.concat(r)), ++o !== i.length && (t = t.concat('\n'));
                                }
                            else t = e;
                            return t;
                        }),
                        __decorate([F(cc.Sprite)], e.prototype, 'sprite', void 0),
                        __decorate([F(cc.Node)], e.prototype, 'debugPanelEntry', void 0),
                        __decorate([F(cc.Button)], e.prototype, 'advRewardButton', void 0),
                        (e = __decorate([U], e))
                    );
                })(cc.Component);
                (i.default = x), cc._RF.pop();
            },
            {
                '../../modules/MGAdv/scripts/Logic/MGAdvDefine': 'MGAdvDefine',
                '../../modules/MGAdv/scripts/Logic/MGAdvEntrance': 'MGAdvEntrance',
                '../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../base/G': 'G',
                '../base/Log': 'Log',
                '../base/State': 'State',
                '../business/Logic/I18nManager': 'I18nManager',
                '../business/Network/Protocol/StorageUtil': 'StorageUtil',
                '../business/UI/GameEntraScene/ImgCache': 'ImgCache',
                '../business/UI/GameEntraScene/PrefabMgr': 'PrefabMgr',
                '../business/keypad/KeypadNavigator': 'KeypadNavigator',
                '../business/keypad/KeypadUtil': 'KeypadUtil',
                '../business/shop/PropertyStorePrefab': 'PropertyStorePrefab',
                '../config/LSKey': 'LSKey',
                '../property/PropertyDefines': 'PropertyDefines',
                '../util/PU': 'PU',
                '../util/StringUtil': 'StringUtil',
                '../util/TimeUtil': 'TimeUtil',
                '../util/nodeFacade': 'NodeFacade',
                './ExclusiveSkinGameScene': 'ExclusiveSkinGameScene',
                './GameSceneDebugPanel': 'GameSceneDebugPanel',
                './GameSceneSetting': 'GameSceneSetting',
                './MUI/MUIDefines': 'MUIDefines',
                './NormalGameScene': 'NormalGameScene',
                './TouchHandler': 'TouchHandler',
                './TrialGameScene': 'TrialGameScene',
                './TrialSongGameScene': 'TrialSongGameScene',
                './TryPianoGameScene': 'TryPianoGameScene',
                './element/loader/BeginFrameLoader': 'BeginFrameLoader',
                './element/loader/BlockSkinFrameLoader': 'BlockSkinFrameLoader',
                './element/loader/GameSceneFrameLoader': 'GameSceneFrameLoader',
                './element/loader/NumberFrameLoader': 'NumberFrameLoader',
                './view/BottomStorePanel': 'BottomStorePanel',
                './view/PropertiesPanel': 'PropertiesPanel',
            },
        ],
        GameSceneFrameLoader: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'ca65agr12RJ/Kyl9UnilxsG', 'GameSceneFrameLoader'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../atlas/SimpleAtlas'),
                    s = e('../../animation/action/MAdvanceAnimation'),
                    c = e('../../../util/PU'),
                    l = e('../../../util/ResLoader'),
                    n = (function () {
                        function e() {
                            (this.mGameSceneShieldAtlas = null), (this.mGameSceneSimpleAtlas = null), (this.mGameSceneSimpleAtlas2 = null), (this.mShortBlockTouchedAnim = null), (this.mInit = !1), (this.loadCounter = 0), (this.mGameSceneShieldAtlas = new o.default()), (this.mGameSceneSimpleAtlas = new o.default()), (this.mGameSceneSimpleAtlas2 = new o.default()), (this.mGameAnimations = new Object());
                        }
                        return (
                            (e.getInstance = function () {
                                return null == e.sInstance && (e.sInstance = new e()), e.sInstance;
                            }),
                            (e.prototype.init = function (a, r) {
                                return __awaiter(this, void 0, void 0, function () {
                                    var t, i, o, n;
                                    return __generator(this, function (e) {
                                        switch (e.label) {
                                            case 0:
                                                return this.mInit ? [2] : ((this.mInit = !0), [4, this.mGameSceneSimpleAtlas.load('gameImage/gameScene')]);
                                            case 1:
                                                return e.sent(), [4, this.mGameSceneSimpleAtlas2.load('gameImage/gameScene2_en')];
                                            case 2:
                                                return e.sent(), [4, this.mGameSceneShieldAtlas.load('gameImage/shield')];
                                            case 3:
                                                for (e.sent(), t = ['honor_one', 'honor_two', 'honor_three', 'kinbi', 'wujin', 'headportnit_idle'], this.loadCounter = 0, i = 0, o = t.length; i < o; ++i) (n = c.default.getResourcePath('resources/animation/' + t[i] + '_anim.json')), this.loadAnimation2(n, t[i], this.loadComplete.bind(this, t.length, a, r));
                                                return [2];
                                        }
                                    });
                                });
                            }),
                            (e.prototype.loadComplete = function (t, i, o) {
                                return __awaiter(this, void 0, void 0, function () {
                                    return __generator(this, function (e) {
                                        return this.loadCounter++, this.loadCounter == t && i && i.call(o), [2];
                                    });
                                });
                            }),
                            (e.prototype.loadAnimation2 = function (e, o, n) {
                                var a = this;
                                l.default.loadJson(e, function (e, t) {
                                    if (!e) {
                                        var i = new s.default(t);
                                        a.mGameAnimations[o] = i;
                                    }
                                    n && n();
                                });
                            }),
                            (e.prototype.loadAnimation = function (t, n, a, r) {
                                return __awaiter(this, void 0, Promise, function () {
                                    var o = this;
                                    return __generator(this, function (e) {
                                        return (
                                            l.default.loadJson(t, function (e, t) {
                                                if (e) r(e);
                                                else {
                                                    var i = new s.default(t);
                                                    (o.mGameAnimations[n] = i), a(t);
                                                }
                                            }),
                                            [2]
                                        );
                                    });
                                });
                            }),
                            (e.prototype.getShieldAnimation = function () {
                                return this.mGameSceneShieldAtlas;
                            }),
                            (e.prototype.getAtlas = function () {
                                return this.mGameSceneSimpleAtlas;
                            }),
                            (e.prototype.getAtlas2 = function () {
                                return this.mGameSceneSimpleAtlas2;
                            }),
                            (e.prototype.getMoneyBlockBackground = function () {
                                return null == this.mGameSceneSimpleAtlas ? null : this.mGameSceneSimpleAtlas.getItem('bonus_tile_music');
                            }),
                            (e.prototype.getGiftBlockBackground = function () {
                                return null == this.mGameSceneSimpleAtlas ? null : this.mGameSceneSimpleAtlas.getItem('egg_2');
                            }),
                            (e.prototype.getCircleLight = function () {
                                return null == this.mGameSceneSimpleAtlas ? null : this.mGameSceneSimpleAtlas.getItem('long_circle_light');
                            }),
                            (e.prototype.getDotLight = function () {
                                return null == this.mGameSceneSimpleAtlas ? null : this.mGameSceneSimpleAtlas.getItem('long_dot_light');
                            }),
                            (e.prototype.getAnimations = function (e) {
                                return this.mGameAnimations[e];
                            }),
                            (e.sInstance = null),
                            e
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../../../util/PU': 'PU',
                '../../../util/ResLoader': 'ResLoader',
                '../../animation/action/MAdvanceAnimation': 'MAdvanceAnimation',
                '../../atlas/SimpleAtlas': 'SimpleAtlas',
            },
        ],
        GameSceneSetting: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'd3712ovjbJFhI5yx6MMeosC', 'GameSceneSetting'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o,
                    n,
                    a = e('../business/Network/Protocol/StorageUtil'),
                    r = e('../config/LSKey'),
                    s = e('../business/Logic/PlayerMgr');
                ((n = o = i.FromSource || (i.FromSource = {}))[(n.SOURCE_DEFAULT = 0)] = 'SOURCE_DEFAULT'), (n[(n.SOURCE_GUIDE = 1)] = 'SOURCE_GUIDE'), (n[(n.SOURCE_MAIN = 2)] = 'SOURCE_MAIN'), (n[(n.SOURCE_MUSIC = 3)] = 'SOURCE_MUSIC'), (n[(n.SOURCE_RANK_MAIN = 4)] = 'SOURCE_RANK_MAIN'), (n[(n.SOURCE_RANK_MUSIC = 5)] = 'SOURCE_RANK_MUSIC'), (n[(n.SOURCE_RANK_RESULT = 6)] = 'SOURCE_RANK_RESULT'), (n[(n.SOURCE_RANK_OTHER = 7)] = 'SOURCE_RANK_OTHER'), (n[(n.SOURCE_SKIN_TRY = 8)] = 'SOURCE_SKIN_TRY'), (n[(n.SOURCE_SONG_TRY = 9)] = 'SOURCE_SONG_TRY'), (n[(n.SOURCE_CHALLENGE_GAME = 10)] = 'SOURCE_CHALLENGE_GAME'), (n[(n.SOURCE_FIGHT = 11)] = 'SOURCE_FIGHT'), (n[(n.SOURCE_RESULT_UPGRADE = 12)] = 'SOURCE_RESULT_UPGRADE'), (n[(n.SOURCE_PIANO_TRY = 13)] = 'SOURCE_PIANO_TRY');
                var c = (function () {
                    function e() {
                        (this.mNeedShowGuide = !1), (this.mFromSource = o.SOURCE_DEFAULT);
                    }
                    return (
                        (e.getInstance = function () {
                            return null == e.sInstance && (e.sInstance = new e()), e.sInstance;
                        }),
                        (e.prototype.isNeedShowGuideInGameScene = function () {
                            return !this.isUserGuideFinish() && !this.isGuideShowd();
                        }),
                        (e.prototype.isGuideShowd = function () {
                            return 'true' === a.default.read(r.default.GAMESCENE_GUIDE_SHOWED, 'false');
                        }),
                        (e.prototype.setGuideShowed = function (e) {
                            a.default.save(r.default.GAMESCENE_GUIDE_SHOWED, e ? 'true' : 'false');
                        }),
                        (e.prototype.isUserGuideFinish = function () {
                            if (1 === s.default.Ins().getUserLevel() && s.default.Ins().getUserCurrentExp() < 5) return !1;
                            return !0;
                        }),
                        (e.prototype.isNeedShowGuideInResultPage = function () {
                            return !!this.mNeedShowGuide && this.isUserGuideFinish();
                        }),
                        (e.prototype.setNeedShowGuideInResultPage = function (e) {
                            this.mNeedShowGuide = e;
                        }),
                        (e.prototype.getFromSource = function () {
                            return this.mFromSource;
                        }),
                        (e.prototype.setFromSource = function (e) {
                            this.mFromSource = e;
                        }),
                        (e.sInstance = null),
                        e
                    );
                })();
                (i.default = c), cc._RF.pop();
            },
            {
                '../business/Logic/PlayerMgr': 'PlayerMgr',
                '../business/Network/Protocol/StorageUtil': 'StorageUtil',
                '../config/LSKey': 'LSKey',
            },
        ],
        GameScene: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '103d9/ct2xMoZOIfCHOgX9Q', 'GameScene'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var R = e('../base/G'),
                    D = e('../util/Utility'),
                    o = e('../util/Performance'),
                    w = e('./StarCountSwitch'),
                    B = e('./element/anim/ScoreAnimation'),
                    n = e('../music/Music'),
                    a = e('../music/MusicPlayer'),
                    s = e('./ctrl/GameStageMusic'),
                    c = e('./ctrl/GameStageMoney'),
                    r = e('../business/gameover/Relive'),
                    l = e('../business/gameover/ReviveController'),
                    u = e('../business/Logic/LevelMgr'),
                    d = e('../business/Logic/PlayerMgr'),
                    p = e('../business/gameover/ReliveScoreData'),
                    G = e('./element/loader/GameSceneFrameLoader'),
                    h = e('../business/UI/GameEntraScene/UICache'),
                    f = e('./element/node/CookiesNodeCache'),
                    m = e('./element/anim/CookieAnimation'),
                    g = e('../util/SUtil'),
                    _ = e('./animation/MScheduler'),
                    y = e('./animation/MAnimationMgr'),
                    O = e('./element/component/Banner'),
                    U = e('./MUI/MUIBoard'),
                    F = e('./MUI/MUINode'),
                    H = e('./MUI/MUISprite'),
                    S = e('./animation/action/MSequence'),
                    v = e('./GameBus'),
                    I = e('./animation/action/MCallFunc'),
                    T = e('./animation/action/MDelay'),
                    x = e('./element/component/MUINumber'),
                    C = e('../util/SceneMusicMgr'),
                    V = e('./element/loader/NumberFrameLoader'),
                    K = e('./element/component/SplitLine'),
                    E = e('../business/UI/GameClub'),
                    W = e('./element/component/BackButton'),
                    A = e('./GameSceneSetting'),
                    Y = e('./MUI/MUIFactory'),
                    P = e('./element/loader/BlockSkinFrameLoader'),
                    k = e('../business/Logic/ChestManager'),
                    M = e('../base/State'),
                    L = e('../business/Network/Protocol/StorageUtil'),
                    b = e('../config/LSKey'),
                    N = e('../business/Network/Protocol/User'),
                    Q = e('../business/Network/Protocol/UserUtil'),
                    j = e('../util/PageHeap'),
                    z = e('./module/GameModuleManager'),
                    q = e('./module/QQRedPacketModule'),
                    X = e('../property/PropertyDefines'),
                    J = e('./property/PropertyProcess'),
                    Z = e('./property/DecelerateConfirm'),
                    $ = e('./MUI/MUIDefines'),
                    ee = e('../business/UI/GameEntraScene/PrefabMgr'),
                    te = e('../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    ie = e('../util/StringUtil'),
                    oe = e('../../modules/MGAdv/scripts/Logic/MGAdvEntrance'),
                    ne = e('../../modules/MGAdv/scripts/Logic/MGAdvDefine'),
                    ae = e('./view/GameStageNodeView'),
                    re = e('../base/Log'),
                    se = e('../business/Logic/I18nManager'),
                    ce = e('./element/component/KeyTouchLine'),
                    le = e('../business/keypad/KeypadUtil'),
                    ue = function (e) {
                        (this.finish = !1), (this.finish = e);
                    };
                i.StageState = ue;
                var de = (function () {
                    function e(e, t) {
                        (this.entryInterface = null), (this.gameSceneSize = new cc.Size(0, 0)), (this.blockRegionSize = new cc.Size(0, 0)), (this.propertiesIconNode = null), (this.propertiesEffectNode = null), (this.effectiveSkin = null), (this.backgroundNode = null), (this.backgroundEffectNode = null), (this.blockTouchEffectNode = null), (this.blockLongTouchEffectNode = null), (this.starCountSwitch = null), (this.cookieAnimation = null), (this.cookiesNodeCache = null), (this.scoreAnimation = null), (this.firstStage = null), (this.infiniteStage = null), (this.moneyStage = null), (this.currentStage = null), (this.stageStates = []), (this.musicZero = new n.default('')), (this.player = new a.default(90)), (this.music = this.musicZero), (this.level = null), (this.levelRecord = null), (this.mReviveController = null), (this.performance = new o.Performance.CounterImpl(0.022)), (this.FRAME_TIME = 1 / 60), (this.atlasGameObject = null), (this.uiBoard = null), (this.blockRegionNode = null), (this.keyTouchLine = null), (this.spliteLine = null), (this.bannerNode = null), (this.banner = null), (this.backButton = null), (this.renderSwitch = null), (this.decelerateConfirmPrefabName = null), (this.moduleManager = new z.default()), (this.propertyProc = new J.default(this)), (this.canClickStart = !0), (this.FIRST_STAGE_POSITION = 265), (this.renderSwitch = e), (this.bannerNode = t.getChildByName('banner')), A.default.getInstance().setNeedShowGuideInResultPage(!1);
                    }
                    return (
                        (e.prototype.allowProperty = function () {
                            return !1;
                        }),
                        (e.prototype.initilize = function () {
                            if (((this.effectiveSkin = R.G.Ap.skinMgr.getCurrentSkinItem()), (this.atlasGameObject = G.default.getInstance().getAtlas()), this.effectiveSkin)) {
                                var e = this.effectiveSkin.getSkinObject(),
                                    t = e.skinRaw.getBlockAtlasName();
                                P.default.getInstance().setAtlas(e.atlasMap[t]), (R.G.Ap.config.longBlockDotAnimEnable = e.skinRaw.getDesign().longBlockDotAnimaion), (R.G.Ap.config.longBlockChangeLength = e.skinRaw.getDesign().longBlockChangeLength), (R.G.Ap.config.longBlockBounceEffectByDistance = e.skinRaw.getDesign().longBlockBounceEffectByDistance || -1);
                            }
                        }),
                        (e.prototype.getEnableModuleList = function () {
                            return null;
                        }),
                        (e.prototype.setEntryInterface = function (e) {
                            this.entryInterface = e;
                        }),
                        (e.prototype.onLoad = function () {
                            h.UICache.musicListView && h.UICache.hideMusicView(), 'true' != L.default.read(b.default.HAS_FIRST_PLAY_LITTLE_STAR) ? ie.StringUtil.isEmpty(L.default.read(b.default.IS_NEW_RECORD_TIME)) && (L.default.save(b.default.IS_NEW_TO_SHOW_GUIDE, 'true'), L.default.save(b.default.IS_NEW_RECORD_TIME, te.MGUser.getCurrentServerTime().toString())) : L.default.save(b.default.IS_NEW_TO_SHOW_GUIDE, 'false'), L.default.save(b.default.HAS_FIRST_PLAY_LITTLE_STAR, 'true'), E.default.hide(), this.moduleManager.setEnableModuleList(this.getEnableModuleList()), this.moduleManager.loadAllModules(), (v.default.getInstance().animationMgr = new y.default()), (v.default.getInstance().scheduler = new _.default()), (v.default.getInstance().natureScheduler = new _.default()), (this.stageStates[D.Utility.GAMESTAGE.MUSIC] = new ue(!1)), (this.stageStates[D.Utility.GAMESTAGE.MONEY] = new ue(!1)), (this.stageStates[D.Utility.GAMESTAGE.INFINITE] = new ue(!1)), (this.gameSceneSize.width = R.G.Ap.config.presentWidth), (this.gameSceneSize.height = R.G.Ap.config.presentHeight), (this.blockRegionSize.width = this.gameSceneSize.width), (this.blockRegionSize.height = this.gameSceneSize.height), this.doLoading(), this.buildPerformanceCounter();
                        }),
                        (e.prototype.loadReliveAdv = function () {}),
                        (e.prototype.start = function () {
                            this.adaptationUI();
                        }),
                        (e.prototype.updateScreenRatio = function () {
                            (R.G.Ap.config.presentScale = cc.game.canvas.width / R.G.Ap.config.designWidth), this.uiBoard.getRootNode().setScale(R.G.Ap.config.presentScale), this.spliteLine.updateLines(R.G.Ap.config.presentScale), this.keyTouchLine && this.keyTouchLine.updateLines(R.G.Ap.config.presentScale);
                        }),
                        (e.prototype.render = function (e) {
                            this.uiBoard.render(e);
                        }),
                        (e.prototype.renderToTexture = function (e, t) {
                            this.uiBoard.renderToTexture(e, t);
                        }),
                        (e.prototype.update = function (e, t) {
                            var i = R.G.Ap;
                            if ((i.config.gameSceneTest ? (i.autoTester.isStart() ? (i.autoTester.attachGame(this), i.autoTester.update(e)) : this.performanceUpdate(e)) : this.performanceUpdate(t), v.default.getInstance().natureScheduler.update(t), v.default.getInstance().scheduler.update(e), v.default.getInstance().animationMgr.update(e), !i.state.isPaused())) {
                                var o = this.currentStage;
                                o && o.update(e), this.player.update(e);
                            }
                        }),
                        (e.prototype.onDestroy = function () {
                            this.firstStage ? (this.firstStage.clearCache(), this.firstStage.destroy()) : this.infiniteStage && (this.infiniteStage.clearCache(), this.infiniteStage.destroy()), this.moneyStage && (this.moneyStage.clearCache(), this.moneyStage.destroy()), v.default.getInstance().animationMgr.stopAllActions(), (v.default.getInstance().animationMgr = null), v.default.getInstance().scheduler.unScheduleAll(), (v.default.getInstance().scheduler = null), v.default.getInstance().natureScheduler.unScheduleAll(), (v.default.getInstance().natureScheduler = null), this.moduleManager.destroyAllModules(), (this.overtakeFriend = null), this.propertyProc && this.propertyProc.uninitialize(), this.uiBoard && this.uiBoard.uninitilize($.MUI.global.ctx);
                        }),
                        (e.prototype.doLoading = function () {
                            var t = this;
                            this.createUI(), this.loadMusic(), this.updateUI(), this.createAnimCtrl(), k.default.getInstance().init(), (this.mReviveController = new l.default());
                            var e = new J.PropertyHandlerParam(),
                                i = this.renderSwitch.getRenderNode();
                            (e.iconNode = this.propertiesIconNode),
                                (e.effectNode = this.propertiesEffectNode),
                                this.setPropertyIntroductionClickCb(function (e) {
                                    t.canClickStart = e;
                                }),
                                this.propertyProc && this.propertyProc.initialize(e, i);
                        }),
                        (e.prototype.createUI = function () {
                            var e = G.default.getInstance().getAtlas2();
                            if (((this.uiBoard = new U.default()), this.uiBoard.setSize(this.gameSceneSize.width, this.gameSceneSize.height), this.uiBoard.initilize($.MUI.global.ctx), this.uiBoard.getRootNode().setScale(R.G.Ap.config.presentScale), this.effectiveSkin)) {
                                var t = this.effectiveSkin.getSkinObject();
                                if (t) {
                                    var i = t.skinRaw.createBackgroundNode(t, Y.default.instance);
                                    i && (this.uiBoard.getRootNode().addChild(i), (this.backgroundNode = i));
                                    var o = new F.default();
                                    this.uiBoard.getRootNode().addChild(o), (this.backgroundEffectNode = o);
                                }
                            }
                            (this.blockRegionNode = new F.default()), this.uiBoard.getRootNode().addChild(this.blockRegionNode);
                            var n = new F.default();
                            n.move(0, 0, this.gameSceneSize.width, this.gameSceneSize.height), this.blockRegionNode.addChild(n, D.Utility.GAMESTAGE.MUSIC);
                            var a = new F.default();
                            a.move(0, 0, this.gameSceneSize.width, this.gameSceneSize.height), this.blockRegionNode.addChild(a, D.Utility.GAMESTAGE.MONEY), (this.spliteLine = new K.default('SplitLine')), this.spliteLine.move(0, 0, this.gameSceneSize.width, this.gameSceneSize.height), this.uiBoard.getRootNode().addChild(this.spliteLine), le.default.isHorizon() && ((this.keyTouchLine = new ce.default('KeyTouchLine')), this.spliteLine.move(0, 0, this.gameSceneSize.width, this.gameSceneSize.height), this.uiBoard.getRootNode().addChild(this.keyTouchLine)), this.createPropertiesEffectNode();
                            var r = new F.default('StageCaption');
                            this.uiBoard.getRootNode().addChild(r);
                            var s = new H.default('InfiniteStageCaption');
                            s.setVisible(!1), s.setOpacity(0), (s.imageData = e), (s.imageItem = e.getItem('title_endless')), ((l = s.imageItem.rect.clone()).width *= 2), (l.height *= 2), s.setContentSize(l.width, l.height), s.setPosition(-l.width / 2, -l.height);
                            var c = new H.default('wujin 2');
                            (c.imageData = e), (c.imageItem = s.imageItem), c.setContentSize(l.width, l.height), s.addChild(c), r.addChild(s);
                            var l,
                                u = new H.default('MoneyStageCaption');
                            u.setVisible(!1), u.setOpacity(0), (u.imageData = e), (u.imageItem = e.getItem('title_gold')), ((l = u.imageItem.rect.clone()).width *= 2), (l.height *= 2), u.move(-l.width / 2, -l.height, l.width, l.height);
                            var d = new H.default('gameover_star1');
                            (d.imageData = this.atlasGameObject), (d.imageItem = this.atlasGameObject.getItem('starlight')), d.move(-113, 122, 106, 132), u.addChild(d);
                            var p = new H.default('gameover_star2');
                            (p.imageData = this.atlasGameObject), (p.imageItem = d.imageItem), p.move(669, 119, 106, 132), u.addChild(p), r.addChild(u);
                            var h = new F.default('FeedLayer');
                            this.uiBoard.getRootNode().addChild(h);
                            var f = 140,
                                m = new F.default('MoneyPanel');
                            m.setVisible(!1), m.setScale(0.3), m.move(this.gameSceneSize.width - f, this.gameSceneSize.height - 76, 0, 0), h.addChild(m);
                            var g = 160,
                                _ = new H.default('MoneyIcon');
                            (_.imageData = this.atlasGameObject), (_.imageItem = this.atlasGameObject.getItem('ic_gold')), _.move(0, -g, g, g), m.addChild(_);
                            var y = new x.default(V.default.getInstance().getAtlas(), 2, 'MoneyText');
                            y.setNumberColor(x.NumberColor.WHITE), y.setCenterNumber(!1);
                            var S = V.default.getInstance().getItemRect();
                            y.move(1.1 * g, -S.height / 2 - g / 2, 0, S.height), y.setNumberValue(0), m.addChild(y);
                            f = 140;
                            var v = new F.default('GiftPanel');
                            v.setVisible(!1), v.setScale(0.3), v.move(this.gameSceneSize.width - f, this.gameSceneSize.height - 76, 0, 0), h.addChild(v);
                            g = 160;
                            var I = new H.default('GiftIcon');
                            (I.imageData = this.atlasGameObject), (I.imageItem = this.atlasGameObject.getItem('ic_gift')), I.move(0, -g, g, g), v.addChild(I);
                            var T = new x.default(V.default.getInstance().getAtlas(), 2, 'GiftText');
                            T.setNumberColor(x.NumberColor.WHITE), T.setCenterNumber(!1);
                            S = V.default.getInstance().getItemRect();
                            T.move(1.1 * g, -S.height / 2 - g / 2, 0, S.height), T.setNumberValue(0), v.addChild(T), this.createPropertiesIconNode(), (this.scoreAnimation = new B.default(this.gameSceneSize, this.uiBoard.getRootNode()));
                            var C = new F.default('StarAnimation');
                            C.setVisible(!1), C.setScale(1), C.move(R.G.Ap.config.presentWidth / 2, 0.9 * R.G.Ap.config.presentHeight, 0, 0), this.uiBoard.getRootNode().addChild(C);
                            for (var E = new cc.Size(113, 140), A = 1; A <= 3; ++A) {
                                var P = new H.default('honor' + A);
                                (P.imageData = this.atlasGameObject), (P.imageItem = this.atlasGameObject.getItem('star')), P.move(-(E.width >>> 1), -E.height, E.width, E.height), P.setOpacity(0), C.addChild(P);
                            }
                            var k = ((b = new cc.Size(158, 190)).height - E.height) >>> 1;
                            ((N = new H.default('honorlight')).imageData = this.atlasGameObject), (N.imageItem = this.atlasGameObject.getItem('starlight')), N.move(-(b.width >>> 1), -b.height + k, b.width, b.height), N.setOpacity(0), C.addChild(N);
                            var M = new F.default('CrownAnimation');
                            M.setVisible(!1), M.setScale(1), M.move(R.G.Ap.config.presentWidth / 2, 0.9 * R.G.Ap.config.presentHeight, 0, 0), this.uiBoard.getRootNode().addChild(M);
                            for (E = new cc.Size(99, 94), A = 1; A <= 3; ++A) {
                                var L = new H.default('honor' + A);
                                (L.imageData = this.atlasGameObject), (L.imageItem = this.atlasGameObject.getItem('crown')), L.move(-(E.width >>> 1), -E.height, E.width, E.height), L.setOpacity(0), M.addChild(L);
                            }
                            var b, N;
                            k = ((b = new cc.Size(130, 122)).height - E.height) >>> 1;
                            ((N = new H.default('honorlight')).imageData = this.atlasGameObject), (N.imageItem = this.atlasGameObject.getItem('crownlight')), N.move(-(b.width >>> 1), -b.height + k, b.width, b.height), N.setOpacity(0), M.addChild(N), (this.banner = new O.default('banner', this.bannerNode)), this.uiBoard.getRootNode().addChild(this.banner), (this.backButton = new W.default()), this.uiBoard.getRootNode().addChild(this.backButton), this.moduleManager.addAllModulesToRootNode(this.uiBoard.getRootNode(), !0), (this.overtakeFriend = this.moduleManager.getModule(z.ModuleType.Overtake_Friend)), this.overtakeFriend && this.overtakeFriend.hideNode(), (this.qqRedPacket = this.moduleManager.getModule(z.ModuleType.QQ_Red_Packet)), (this.blockTouchEffectNode = new F.default('BlockTouchEffectNode')), this.uiBoard.getRootNode().addChild(this.blockTouchEffectNode), (this.starCountSwitch = new w.default(this.effectiveSkin, this.backgroundNode, this.backgroundEffectNode, this.blockTouchEffectNode));
                        }),
                        (e.prototype.createPropertiesEffectNode = function () {
                            this.allowProperty() && ((this.propertiesEffectNode = new F.default('propertiesEffectNode')), this.propertiesEffectNode.move(0, 0, this.gameSceneSize.width, this.gameSceneSize.height), this.uiBoard.getRootNode().addChild(this.propertiesEffectNode));
                        }),
                        (e.prototype.createPropertiesIconNode = function () {
                            this.allowProperty() && ((this.propertiesIconNode = new F.default('PropertiesIconNode')), this.propertiesIconNode.move(0, 0, this.gameSceneSize.width, this.gameSceneSize.height), this.uiBoard.getRootNode().addChild(this.propertiesIconNode));
                        }),
                        (e.prototype.updateUI = function () {
                            if (this.music) {
                                var e = se.default.getInstance().getLanguageByKey(this.music.getName()),
                                    t = se.default.getInstance().getLanguageByKey('label_text.game_history_top') + (this.levelRecord ? this.levelRecord.mBestScore : 0);
                                this.banner.show(e, t);
                            }
                            A.default.getInstance().getFromSource();
                            this.backButton.setVisible(!1);
                        }),
                        (e.prototype.createAnimCtrl = function () {
                            var e = this.uiBoard.getRootNode().getChildByName('FeedLayer');
                            (this.cookiesNodeCache = new f.CookiesNodeCache(e, this.atlasGameObject, this.atlasGameObject.getItem('light_gold'), this.atlasGameObject.getItem('ic_gift'))), (this.cookieAnimation = new m.default(this.uiBoard.getRootNode()));
                        }),
                        (e.prototype.adaptationUI = function () {
                            var e = new cc.Size(686, 168);
                            if (g.SUtil.ins().isLiuHai()) {
                                var t = this.uiBoard.getRootNode().getChildByName('FeedLayer');
                                t.getChildByName('MoneyPanel').setPositionY(0.889 * this.gameSceneSize.height), t.getChildByName('GiftPanel').setPositionY(0.889 * this.gameSceneSize.height);
                                var i = 0.877 * this.gameSceneSize.height;
                                this.scoreAnimation.setPositionY(i), this.scoreAnimation.setScale(1), this.uiBoard.getRootNode().getChildByName('StarAnimation').setPositionY(i), this.uiBoard.getRootNode().getChildByName('CrownAnimation').setPositionY(i), (o = this.uiBoard.getRootNode().getChildByName('StageCaption')).setScale((0.503 * this.gameSceneSize.width) / e.width), o.setPosition(this.gameSceneSize.width / 2, i), this.banner.adaptPosition(0.913 * this.gameSceneSize.height), this.backButton.updatePosition(0.946 * this.gameSceneSize.height);
                            } else if (g.SUtil.ins().isQuanMian()) {
                                i = this.gameSceneSize.height - 143;
                                this.scoreAnimation.setPositionY(i), (o = this.uiBoard.getRootNode().getChildByName('StageCaption')).setScale((0.503 * this.gameSceneSize.width) / e.width), o.setPosition(this.gameSceneSize.width / 2, i), this.uiBoard.getRootNode().getChildByName('StarAnimation').setPositionY(i), this.uiBoard.getRootNode().getChildByName('CrownAnimation').setPositionY(i), this.backButton.updatePosition(0.977 * this.gameSceneSize.height);
                            } else if (g.SUtil.ins().isPuTong()) {
                                var o;
                                i = this.gameSceneSize.height - 132;
                                this.scoreAnimation.setPositionY(i), (o = this.uiBoard.getRootNode().getChildByName('StageCaption')).setScale((0.419 * this.gameSceneSize.width) / e.width), o.setPosition(this.gameSceneSize.width / 2, i), this.uiBoard.getRootNode().getChildByName('StarAnimation').setPositionY(i), this.uiBoard.getRootNode().getChildByName('CrownAnimation').setPositionY(i), this.backButton.updatePosition(0.986 * this.gameSceneSize.height);
                            }
                        }),
                        (e.prototype.loadMusic = function () {
                            if (((this.level = u.LevelMgr.Ins().getLevelByMid(R.G.Ap.state.mission.musicId)), null != this.level)) {
                                this.levelRecord = d.default.Ins().getLevelRecordByMid(R.G.Ap.state.mission.musicId);
                                var e = R.G.Ap.config.getMusic(R.G.Ap.state.mission.musicId);
                                e && ((this.music = e), this.music.getMusicPart(0) && this.player.setBpm(this.music.getMusicPart(0).getBPM()), this.initGame());
                            }
                        }),
                        (e.prototype.initGoldAddition = function (e) {
                            return R.G.propAddition.getAdditionGainMoney(e, R.G.Ap.state.mission.getType().toString());
                        }),
                        (e.prototype.initGame = function () {
                            if ((console.log('initGameinitGameinitGame'), this.music)) {
                                this.getGameRegion();
                                var e = null == this.levelRecord || this.levelRecord.mBestStar < 3;
                                if (e) {
                                    var t = u.LevelMgr.Ins().getRewardGold(this.level.id),
                                        i = this.initGoldAddition(t.gold);
                                    re.default.e('游戏过程中金币数量 加成：' + t.gold + '   =>  ' + i), (t.gold = i);
                                    var o = this.getGameNode(),
                                        n = new ae.default(o.getChildByTag(D.Utility.GAMESTAGE.MONEY));
                                    (this.moneyStage = new c.default(this, n, t.gold, t.goldline)), this.moneyStage.init(), this.moneyStage.activeNode(!1);
                                }
                                var a = this.getGameNode(),
                                    r = new ae.default(a.getChildByTag(D.Utility.GAMESTAGE.MUSIC));
                                (this.firstStage = new s.default(this, r, !e)), this.firstStage.init(this.FIRST_STAGE_POSITION), this.firstStage.activeNode(!0), this.qqRedPacket && this.firstStage.setShowGiftBox(!1), (this.infiniteStage = this.firstStage), (this.currentStage = this.firstStage), this.startGameStageSwitch(D.Utility.GAMESTAGE.MUSIC);
                            }
                        }),
                        (e.prototype.restartGame = function () {
                            R.G.Ap.state.pause(), this.currentStage && this.currentStage.resetGameData(), this.startRun();
                        }),
                        (e.prototype.pauseGame = function () {
                            if (null != this.stageStates) {
                                var e = R.G.Ap.state.getGameStage();
                                switch (e) {
                                    case D.Utility.GAMESTAGE.MUSIC:
                                        !!(t = this.stageStates[e]) && t.finish ? (this.moneyStage ? this.startGameStageSwitch(D.Utility.GAMESTAGE.MONEY) : this.startGameStageSwitch(D.Utility.GAMESTAGE.INFINITE), this.currentStage && this.currentStage.setCurrentSegmentPaused() ? R.G.Ap.state.pause() : console.warn('stage pause failed ' + this.currentStage && this.currentStage.type)) : this.firstStage.setCurrentSegmentPaused() ? R.G.Ap.state.pause() : console.warn('music stage pause failed.');
                                        break;
                                    case D.Utility.GAMESTAGE.MONEY:
                                        var t;
                                        !!(t = this.stageStates[e]) && t.finish ? (this.startGameStageSwitch(D.Utility.GAMESTAGE.INFINITE), this.currentStage && this.currentStage.setCurrentSegmentPaused() ? R.G.Ap.state.pause() : console.warn('stage pause failed ' + this.currentStage && this.currentStage.type)) : this.moneyStage && this.moneyStage.setCurrentSegmentPaused() ? R.G.Ap.state.pause() : console.warn('money stage pause failed.');
                                        break;
                                    case D.Utility.GAMESTAGE.INFINITE:
                                        this.infiniteStage.setCurrentSegmentPaused() ? R.G.Ap.state.pause() : console.warn('infinite stage pause failed.');
                                }
                                this.updatePerformanceStatus(o.PERFORMANCE_STATUS.Pause), this.propertyProc && this.propertyProc.onGamePause();
                            } else console.warn('pauseGame this.stageStates is null.');
                        }),
                        (e.prototype.resumeGame = function () {
                            console.log('--- resumeGame ---'), this.slowRaiseGameSpeed(), R.G.Ap.state.resume(), this.updatePerformanceStatus(o.PERFORMANCE_STATUS.Resume), this.propertyProc && this.propertyProc.onGameResume();
                        }),
                        (e.prototype.slowRaiseGameSpeed = function () {
                            var e = this;
                            this.currentStage && this.currentStage.setSpeedScale(!0),
                                this.setShedule(
                                    function () {
                                        e.currentStage && e.currentStage.restoreSpeed();
                                    },
                                    0.25,
                                    this.currentStage && this.currentStage.getRestoreCount(),
                                    0.1,
                                );
                        }),
                        (e.prototype.onGameNodeTouchStart = function (e) {
                            this.backButton.touchStart(e) ? re.default.l('onGameNodeTouchStart this.backButton.touchStart') : this.canClickStart ? this.currentStage && this.currentStage.onTouchStart(e) : re.default.l('onGameNodeTouchStart !this.canClickStart');
                        }),
                        (e.prototype.onGameNodeTouchEnd = function (e) {
                            this.backButton.touchEnd() || (this.currentStage && this.currentStage.onTouchEnd(e));
                        }),
                        (e.prototype.onGameNodeTouchCancel = function (e) {
                            this.onGameNodeTouchEnd(e);
                        }),
                        (e.prototype.onGameNodeTouchMove = function (e) {
                            this.currentStage && this.currentStage.onTouchMove(e);
                        }),
                        (e.prototype.getPlayer = function () {
                            return this.player;
                        }),
                        (e.prototype.getMusic = function () {
                            return this.music;
                        }),
                        (e.prototype.getGameRegion = function () {
                            return this.blockRegionSize;
                        }),
                        (e.prototype.getGameNode = function () {
                            return this.blockRegionNode;
                        }),
                        (e.prototype.getAtlasGameObject = function () {
                            return this.atlasGameObject;
                        }),
                        (e.prototype.getLevel = function () {
                            return this.level;
                        }),
                        (e.prototype.getCurrentStage = function () {
                            return this.currentStage;
                        }),
                        (e.prototype.startRun = function () {
                            this.slowRaiseGameSpeed();
                            var e = R.G.Ap.state;
                            e.gameStart(), e.resume(), this.banner.hide(), this.renderSwitch.disableCocosRender(), this.renderSwitch.enableTouchHandler(), this.fixRenderIssue(), this.moduleManager.startAllModules(), !this.qqRedPacket && this.overtakeFriend && this.overtakeFriend.showNode(), this.updatePerformanceStatus(o.PERFORMANCE_STATUS.Begin), this.entryInterface && this.entryInterface.gameStartRun(), this.propertyProc && this.propertyProc.onGameStart(), 'qtt' != CMPlay.getQueryString('platform', 'default') && this.fixTouchIssue();
                        }),
                        (e.prototype.stopRun = function () {
                            this.currentStage && this.currentStage.setRunning(!1);
                        }),
                        (e.prototype.fixRenderIssue = function () {
                            var e = cc.view.getDesignResolutionSize();
                            cc.view.setDesignResolutionSize(e.width, e.height, cc.view.getResolutionPolicy());
                        }),
                        (e.prototype.fixTouchIssue = function () {
                            var e = this,
                                t = 5 * this.FRAME_TIME,
                                i = new S.default(
                                    new T.default(t),
                                    new I.default(function () {
                                        cc.inputManager.update(t), e.renderSwitch.disableCocosTouch();
                                    }),
                                );
                            v.default.getInstance().animationMgr.runAction(this.uiBoard.getRootNode(), i);
                        }),
                        (e.prototype.gameWillOver = function (e, t) {
                            this.propertyProc && this.propertyProc.beforeGameOver(e, t);
                        }),
                        (e.prototype.gameOver = function () {
                            if (R.G.Ap.antiCheat.isHit()) {
                                var e = R.G.Ap.performanceCounter,
                                    t = R.G.Ap.antiCheat.getOperatingCount(),
                                    i = this.currentStage ? this.currentStage && this.currentStage.getSpeed() : 0;
                                t.setTotalScore(R.G.Ap.state.attainScore), t.setPlayTime(e.getDuration()), t.setBlockHeight(R.G.Ap.config.mBaseBlockHeight), t.setFPS(e.getFPS()), t.setMusicId(R.G.Ap.state.mission.musicId), t.setAPM(i / Math.max(R.G.Ap.config.mBaseBlockHeight, 1)), t.setFpsArray(e.getFpsArray()), this.setUserInfo(t);
                            }
                            R.G.Ap.state.pause(), this.moduleManager.pauseAllModules(), this.showReliveDialog(), this.updatePerformanceStatus(o.PERFORMANCE_STATUS.End);
                        }),
                        (e.prototype.showReliveDialog = function () {
                            var o = this,
                                e = l.ReliveMode.NORMAL,
                                t = R.G.Ap.state.attainScore;
                            this.qqRedPacket && t < q.default.TARGET_SCORE && (e = l.ReliveMode.QQ_RED_PACK);
                            var n = this.mReviveController.getReliveType(t, e);
                            return (
                                n != l.default.RESULT_CAN_NOT_REVIVE
                                    ? (this.mReviveController.initLevelInfo(R.G.Ap.state.mission.levelId),
                                      this.mReviveController.initReliveData(e, t),
                                      ee.default.load('prefab/RelivePrefb', function (e, t) {
                                          if (t) {
                                              o.renderSwitch.saveStatus(), o.renderSwitch.enableCocosRender(), o.renderSwitch.enableCocosTouch(), o.renderSwitch.disableTouchHandler();
                                              var i = t.getComponent(r.default);
                                              i &&
                                                  (i.setReliveScoreDataCallback(function () {
                                                      return o.getReliveScoreData();
                                                  }),
                                                  i.setReliveCallback(function (e) {
                                                      oe.MGAdv.hideBanner(ne.ADScene.RELIVE_POPUP), oe.MGAdv.destroyBanner(ne.ADScene.RELIVE_POPUP), j.default.Ins().pop('ReliveDialog'), o.renderSwitch.getRenderNode().removeChild(t), t.destroy(), o.propertyProc && o.propertyProc.setRelivePropType(e), o.showPopupWithProperty(n);
                                                  }),
                                                  i.setCancelGameCallback(function () {
                                                      o.gameCancel();
                                                  }),
                                                  i.setReviveController(o.mReviveController)),
                                                  o.renderSwitch.getRenderNode().addChild(t, r.GAMESCENEZORDER.RELIVE),
                                                  j.default.Ins().push('ReliveDialog');
                                          }
                                      }))
                                    : (this.gameCancel(), R.G.Ap.state.gameOver(), R.G.Ap.presenter.enterScene(R.G.GAME_OVER_SCENE_NAME, R.G.Ap.state.mission.musicId)),
                                this.propertyProc && this.propertyProc.onGameOver(),
                                n
                            );
                        }),
                        (e.prototype.finishGameStage = function (e) {
                            var t = this;
                            R.G.Ap.state;
                            if (((this.stageStates[e].finish = !0), this.propertyProc && this.propertyProc.onGameStageFinish(e), e === D.Utility.GAMESTAGE.MUSIC))
                                if (null == this.moneyStage) {
                                    var i = R.G.Ap.config.enterStageDelay;
                                    (o = G.default.getInstance().getAnimations('honor_three')) && (i = o.getDuration() + 0.3),
                                        this.setSheduleOnce(function () {
                                            t.scoreAnimation.setScoreAnimationShow(!1),
                                                t.startGameStageCaptionAnimation(D.Utility.GAMESTAGE.INFINITE),
                                                t.setSheduleOnce(function () {
                                                    t.scoreAnimation.setScoreAnimationShow(!0);
                                                }, R.G.Ap.config.scoreDelayAfterStageCaption);
                                        }, i),
                                        this.startGameStageSwitch(D.Utility.GAMESTAGE.INFINITE);
                                } else {
                                    var o;
                                    i = R.G.Ap.config.enterStageDelay;
                                    (o = G.default.getInstance().getAnimations('honor_three')) && (i = o.getDuration() + 0.3),
                                        this.setSheduleOnce(function () {
                                            t.scoreAnimation.setScoreAnimationShow(!1),
                                                t.startGameStageCaptionAnimation(D.Utility.GAMESTAGE.MONEY),
                                                t.setSheduleOnce(function () {
                                                    t.scoreAnimation.setScoreAnimationShow(!0);
                                                }, R.G.Ap.config.scoreDelayAfterStageCaption),
                                                t.setSheduleOnce(function () {
                                                    t.startGameStageSwitch(D.Utility.GAMESTAGE.MONEY);
                                                }, R.G.Ap.config.moneyWalkDelay);
                                        }, i);
                                }
                            else
                                e === D.Utility.GAMESTAGE.MONEY &&
                                    (this.scoreAnimation.setScoreAnimationShow(!1),
                                    this.startGameStageCaptionAnimation(D.Utility.GAMESTAGE.INFINITE),
                                    this.setSheduleOnce(function () {
                                        t.scoreAnimation.setScoreAnimationShow(!0);
                                    }, R.G.Ap.config.scoreDelayAfterStageCaption),
                                    this.setSheduleOnce(function () {
                                        t.startGameStageSwitch(D.Utility.GAMESTAGE.INFINITE);
                                    }, R.G.Ap.config.infiniteWalkDelay));
                        }),
                        (e.prototype.pulledGameStage = function (e, t, i) {
                            switch (e) {
                                case D.Utility.GAMESTAGE.MONEY:
                                    this.firstStage && (this.firstStage.allFalled() ? (this.firstStage = null) : this.firstStage.pull(t));
                                    break;
                                case D.Utility.GAMESTAGE.INFINITE:
                                    this.moneyStage && (this.moneyStage.pull(t), this.moneyStage.allFalled() && (this.moneyStage.destroy(), (this.moneyStage = null)));
                                    break;
                                case D.Utility.GAMESTAGE.MUSIC:
                            }
                        }),
                        (e.prototype.attainStar = function () {
                            var e = this;
                            R.G.Ap.state.addStar(), this.propertyProc && this.propertyProc.onAttainHonor(R.G.Ap.state.attainStars, 0), this.scoreAnimation.setScoreAnimationShow(!1);
                            var t = this.uiBoard.getRootNode().getChildByName('StarAnimation');
                            t.setVisible(!0);
                            var i = ['honor_one', 'honor_two', 'honor_three'],
                                o = G.default.getInstance().getAnimations(i[R.G.Ap.state.attainStars - 1]);
                            if (o) {
                                var n = new T.default(R.G.Ap.config.honorAnimStayTime),
                                    a = new I.default(function () {
                                        t.setVisible(!1), 3 != R.G.Ap.state.attainStars && e.scoreAnimation.setScoreAnimationShow(!0);
                                    });
                                v.default.getInstance().animationMgr.runAction(t, new S.default(o, n, a));
                            } else t.setVisible(!1), 3 != R.G.Ap.state.attainStars && this.scoreAnimation.setScoreAnimationShow(!0), console.warn('Load animation failed. name = ' + i[R.G.Ap.state.attainStars - 1]);
                            this.starCountSwitch.changeStarCount(R.G.Ap.state.attainStars);
                        }),
                        (e.prototype.attainCrown = function () {
                            var e = this;
                            R.G.Ap.state.addCrown(), this.propertyProc && this.propertyProc.onAttainHonor(R.G.Ap.state.attainStars, R.G.Ap.state.attainCrowns), this.scoreAnimation.setScoreAnimationShow(!1);
                            var t = this.uiBoard.getRootNode().getChildByName('CrownAnimation');
                            t.setVisible(!0);
                            var i = ['honor_one', 'honor_two', 'honor_three'],
                                o = G.default.getInstance().getAnimations(i[R.G.Ap.state.attainCrowns - 1]);
                            if (o) {
                                var n = new T.default(R.G.Ap.config.honorAnimStayTime),
                                    a = new I.default(function () {
                                        t.setVisible(!1), e.scoreAnimation.setScoreAnimationShow(!0);
                                    });
                                v.default.getInstance().animationMgr.runAction(t, new S.default(o, n, a));
                            } else t.setVisible(!1), this.scoreAnimation.setScoreAnimationShow(!0), console.warn('Load animation failed. name = ' + i[R.G.Ap.state.attainCrowns - 1]);
                        }),
                        (e.prototype.attainScore = function (e) {
                            e <= 0 || (R.G.Ap.state.addScore(e), this.updateModules(), R.G.Ap.config.debugNoScoreAnim || this.scoreAnimation.showAttainScoreAnimation(R.G.Ap.state.attainScore));
                        }),
                        (e.prototype.updateModules = function () {
                            this.qqRedPacket ? this.qqRedPacket.update() || (this.overtakeFriend && (this.overtakeFriend.showNode(), this.overtakeFriend.update())) : this.overtakeFriend && this.overtakeFriend.update();
                        }),
                        (e.prototype.attainMoney = function (e) {
                            var t = R.G.Ap.state.addMoney();
                            R.G.Ap.config.debugNoFlyMoneyAnim || this.createMoneyFlyAnimation(e, t);
                        }),
                        (e.prototype.attainGift = function (e) {
                            var t = R.G.Ap.state.addGift(0);
                            this.startGiftFlyAnimation(e, t);
                        }),
                        (e.prototype.attainBlockEffect = function (e, t) {
                            var i = this.propertyProc && this.propertyProc.getStopBlockEffect();
                            if (this.effectiveSkin && !i && this.effectiveSkin.getSkinObject()) {
                                var o = this.starCountSwitch.getCurrentBlockEffect(),
                                    n = o.getNode(t);
                                if (n) {
                                    var a = n.getRect();
                                    n.setPosition(e.x - (a.width >>> 1), e.y - (a.height >>> 1)), n.setVisible(!0);
                                    var r = o.getAction(t),
                                        s = null;
                                    r
                                        ? (s = new S.default(
                                              r,
                                              new I.default(function () {
                                                  o.putAction(r, t), n.setVisible(!1);
                                              }),
                                          ))
                                        : (console.warn('attainBlockEffect animation is null.'),
                                          (s = new I.default(function () {
                                              n.setVisible(!1);
                                          }))),
                                        v.default.getInstance().animationMgr.runAction(n, s);
                                }
                            }
                        }),
                        (e.prototype.setSheduleOnce = function (e, t) {
                            v.default.getInstance().scheduler.scheduleOnce(e, t);
                        }),
                        (e.prototype.setShedule = function (e, t, i, o) {
                            v.default.getInstance().scheduler.scheduleLoop(e, t, i, o);
                        }),
                        (e.prototype.setNatureSheduleOnce = function (e, t) {
                            v.default.getInstance().natureScheduler.scheduleOnce(e, t);
                        }),
                        (e.prototype.setNatureShedule = function (e, t, i, o, n) {
                            v.default.getInstance().natureScheduler.scheduleLoop(e, t, i, o, n);
                        }),
                        (e.prototype.cancelNatureShedule = function (e) {
                            v.default.getInstance().natureScheduler.unSchedule(e);
                        }),
                        (e.prototype.gameBackground = function () {}),
                        (e.prototype.gameForeground = function () {}),
                        (e.prototype.createMoneyFlyAnimation = function (e, t) {
                            var i = this,
                                o = this.cookiesNodeCache.getDynamicly(f.COOKIESTYPE.MONEY);
                            o.setPosition(e.x - (o.getWidth() >>> 1), e.y - (o.getHeight() >>> 1)),
                                this.uiBoard.getRootNode().getChildByName('FeedLayer').addChild(o),
                                this.cookieAnimation.showMoneyFlyAnimation(o, t, function () {
                                    i.cookiesNodeCache.put(f.COOKIESTYPE.MONEY, o) || (o || console.error('money animation remove error'), o.removeFromParent());
                                });
                        }),
                        (e.prototype.startGameStageSwitch = function (e) {
                            if (R.G.Ap.state.getGameStage() != e) {
                                if ((R.G.Ap.state.enterGameStage(e), this.propertyProc && this.propertyProc.onGameStageStart(e), e === D.Utility.GAMESTAGE.MUSIC)) this.moduleManager.prepareAllModules();
                                else if (e === D.Utility.GAMESTAGE.MONEY) {
                                    R.G.Ap.config.debugNoBlockSound || this.playPassAudio(), this.firstStage && (this.firstStage.setRunning(!1), this.moneyStage.setSpeed(this.firstStage.getSpeed())), (this.currentStage = this.moneyStage), this.moneyStage.activeNode(!0), (t = this.uiBoard.getRootNode().getChildByName('FeedLayer')).getChildByName('MoneyPanel').setVisible(!0), t.getChildByName('GiftPanel').setVisible(!1);
                                } else if (e === D.Utility.GAMESTAGE.INFINITE) {
                                    var t;
                                    C.default.stop(C.default.NAME_PASS_BACKGRIUND), this.moneyStage && this.moneyStage.setRunning(!1), (this.firstStage = null), (this.infiniteStage.type = D.Utility.GAMESTAGE.INFINITE), this.infiniteStage.setRunning(!0), this.infiniteStage.activeNode(!0), (this.currentStage = this.infiniteStage), (t = this.uiBoard.getRootNode().getChildByName('FeedLayer')).getChildByName('MoneyPanel').setVisible(!1), t.getChildByName('GiftPanel').setVisible(!1);
                                }
                            } else console.warn('try reentry game stage ' + e);
                        }),
                        (e.prototype.playPassAudio = function () {
                            C.default.play(C.default.NAME_PASS_BACKGRIUND, C.default.PATH_PASS_BACKGRIUND, !1);
                        }),
                        (e.prototype.startGameStageCaptionAnimation = function (e) {
                            switch (e) {
                                case D.Utility.GAMESTAGE.MONEY:
                                    var t = this.uiBoard.getRootNode().getChildByName('StageCaption').getChildByName('MoneyStageCaption');
                                    t.setVisible(!0),
                                        (i = G.default.getInstance().getAnimations('kinbi')) ? v.default.getInstance().animationMgr.runAction(t, i) : console.warn('Load kinbi animation error.'),
                                        v.default.getInstance().scheduler.scheduleOnce(function () {
                                            t.setVisible(!1);
                                        }, 3);
                                    break;
                                case D.Utility.GAMESTAGE.INFINITE:
                                    var i,
                                        o = this.uiBoard.getRootNode().getChildByName('StageCaption').getChildByName('InfiniteStageCaption');
                                    o.setVisible(!0),
                                        (i = G.default.getInstance().getAnimations('wujin')) ? v.default.getInstance().animationMgr.runAction(o, i) : console.warn('Load wujin animation error.'),
                                        v.default.getInstance().scheduler.scheduleOnce(function () {
                                            o.setVisible(!1);
                                        }, 3);
                            }
                        }),
                        (e.prototype.startGiftFlyAnimation = function (e, t) {
                            var i = this,
                                o = this.cookiesNodeCache.getDynamicly(f.COOKIESTYPE.GIFT);
                            o.setPosition(e.x - (o.getWidth() >>> 1), e.y - (o.getHeight() >>> 1)),
                                this.uiBoard.getRootNode().getChildByName('FeedLayer').addChild(o),
                                this.cookieAnimation.showGiftFlyAnimation(o, t, function () {
                                    i.cookiesNodeCache.put(f.COOKIESTYPE.GIFT, o) || (o || console.error('giftNode animation remove error'), o.removeFromParent());
                                });
                        }),
                        (e.prototype.gameCancel = function () {
                            this.propertyProc && this.propertyProc.onGameCancel();
                        }),
                        (e.prototype.reliveGame = function (e) {
                            R.G.Ap.state.addReliveTimes(), this.moduleManager.resumeAllModules(), console.warn('==== reliveGame ===='), this.currentStage && this.currentStage.relive(), this.propertyProc && this.propertyProc.onGameRelive();
                        }),
                        (e.prototype.getReliveScoreData = function () {
                            var e = new p.default();
                            return (e.crownType = this.getNextCrownType()), e.crownType != p.CrownType.CrownType_NONE && (e.score = this.currentStage ? this.currentStage.getNextHonorScore() : 100), e;
                        }),
                        (e.prototype.getNextCrownType = function () {
                            var e = this.getCrownType();
                            return e == p.CrownType.CrownType_THREE_CROWN ? p.CrownType.CrownType_NONE : e + 1;
                        }),
                        (e.prototype.getCrownType = function () {
                            var e = p.CrownType.CrownType_NONE;
                            switch (R.G.Ap.state.gameStage) {
                                case D.Utility.GAMESTAGE.MONEY:
                                    e = p.CrownType.CrownType_THREE_STAR;
                                    break;
                                case D.Utility.GAMESTAGE.MUSIC:
                                    var t = R.G.Ap.state.attainStars;
                                    1 == t ? (e = p.CrownType.CrownType_ONE_STAR) : 2 == t ? (e = p.CrownType.CrownType_TWO_STAR) : 3 == t && (e = p.CrownType.CrownType_THREE_STAR);
                                    break;
                                case D.Utility.GAMESTAGE.INFINITE:
                                    var i = R.G.Ap.state.attainCrowns;
                                    e = 1 == i ? p.CrownType.CrownType_ONE_CROWN : 2 == i ? p.CrownType.CrownType_TWO_CROWN : 3 == i ? p.CrownType.CrownType_THREE_CROWN : p.CrownType.CrownType_THREE_STAR;
                            }
                            return e;
                        }),
                        (e.prototype.performanceUpdate = function (e) {
                            R.G.Ap.state.getMission().getType() === M.MISSIONTYPE.Rank ? (R.G.Ap.config.debugAutoLog ? this.performance.updateAndAutoLog(e) : this.performance.update(e)) : o.Performance.Counter.update(e);
                        }),
                        (e.prototype.setUserInfo = function (e) {
                            var t = L.default.read(b.default.UserInfo),
                                i = new N.default();
                            Q.default.parseToUser(t, i), e.setUserLevel(i.level), e.setUserDiamond(i.diamond), e.setUserHp(i.hp);
                        }),
                        (e.prototype.updatePerformanceStatus = function (e) {
                            var t = R.G.Ap.performanceCounter;
                            t.getStatus() !== e && t.setStatus(e);
                        }),
                        (e.prototype.showPopupWithProperty = function (o) {
                            var n = this,
                                e = this.propertyProc ? this.propertyProc.getResumeCount(X.PROPERTYTYPE.GAME_SLOW) : 0;
                            e && 0 < e
                                ? ee.default.load(this.decelerateConfirmPrefabName, function (e, t) {
                                      if (t) {
                                          var i = t.getComponent(Z.default);
                                          i.setConfirmCallback(function () {
                                              n.propertyProc.setDecelerateLoad(!0);
                                          }),
                                              i.setCancelCallback(function () {
                                                  n.propertyProc.setDecelerateLoad(!1);
                                              }),
                                              i.setDestroyCallback(function () {
                                                  n.renderSwitch.getRenderNode().removeChild(t), t.destroy(), n.renderSwitch.restoreStatus(), n.reliveGame(o);
                                              }),
                                              n.renderSwitch.getRenderNode().addChild(t, 100);
                                      }
                                  })
                                : (this.propertyProc && this.propertyProc.setDecelerateLoad(!1), this.renderSwitch.restoreStatus(), this.reliveGame(o));
                        }),
                        (e.prototype.getRunningProperty = function () {
                            return this.propertyProc ? this.propertyProc.getRunningProperty() : null;
                        }),
                        (e.prototype.getGameSceneSize = function () {
                            return this.gameSceneSize;
                        }),
                        (e.prototype.setDecelerateConfirmPrefab = function (e) {
                            this.decelerateConfirmPrefabName = e;
                        }),
                        (e.prototype.setPropertyIntroductionPrefab = function (e) {
                            this.propertyProc && this.propertyProc.setPropertyIntroductionPrefab(e);
                        }),
                        (e.prototype.setPropertyIntroductionClickCb = function (e) {
                            this.propertyProc && e && this.propertyProc.setPropertyIntroductionClickCb(e);
                        }),
                        (e.prototype.buildPerformanceCounter = function () {
                            var e = R.G.Ap.state.getMission().getType();
                            R.G.Ap.performanceCounter = e === M.MISSIONTYPE.Rank ? this.performance : o.Performance.Counter;
                        }),
                        (e.prototype.testRestartGame = function () {
                            this.restartGame();
                        }),
                        (e.prototype.testPauseGame = function () {
                            this.pauseGame();
                        }),
                        (e.prototype.testResumeGame = function () {
                            this.resumeGame();
                        }),
                        (e.prototype.testStartGame = function () {
                            this.startRun();
                        }),
                        e
                    );
                })();
                (i.default = de), cc._RF.pop();
            },
            {
                '../../modules/MGAdv/scripts/Logic/MGAdvDefine': 'MGAdvDefine',
                '../../modules/MGAdv/scripts/Logic/MGAdvEntrance': 'MGAdvEntrance',
                '../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../base/G': 'G',
                '../base/Log': 'Log',
                '../base/State': 'State',
                '../business/Logic/ChestManager': 'ChestManager',
                '../business/Logic/I18nManager': 'I18nManager',
                '../business/Logic/LevelMgr': 'LevelMgr',
                '../business/Logic/PlayerMgr': 'PlayerMgr',
                '../business/Network/Protocol/StorageUtil': 'StorageUtil',
                '../business/Network/Protocol/User': 'User',
                '../business/Network/Protocol/UserUtil': 'UserUtil',
                '../business/UI/GameClub': 'GameClub',
                '../business/UI/GameEntraScene/PrefabMgr': 'PrefabMgr',
                '../business/UI/GameEntraScene/UICache': 'UICache',
                '../business/gameover/Relive': 'Relive',
                '../business/gameover/ReliveScoreData': 'ReliveScoreData',
                '../business/gameover/ReviveController': 'ReviveController',
                '../business/keypad/KeypadUtil': 'KeypadUtil',
                '../config/LSKey': 'LSKey',
                '../music/Music': 'Music',
                '../music/MusicPlayer': 'MusicPlayer',
                '../property/PropertyDefines': 'PropertyDefines',
                '../util/PageHeap': 'PageHeap',
                '../util/Performance': 'Performance',
                '../util/SUtil': 'SUtil',
                '../util/SceneMusicMgr': 'SceneMusicMgr',
                '../util/StringUtil': 'StringUtil',
                '../util/Utility': 'Utility',
                './GameBus': 'GameBus',
                './GameSceneSetting': 'GameSceneSetting',
                './MUI/MUIBoard': 'MUIBoard',
                './MUI/MUIDefines': 'MUIDefines',
                './MUI/MUIFactory': 'MUIFactory',
                './MUI/MUINode': 'MUINode',
                './MUI/MUISprite': 'MUISprite',
                './StarCountSwitch': 'StarCountSwitch',
                './animation/MAnimationMgr': 'MAnimationMgr',
                './animation/MScheduler': 'MScheduler',
                './animation/action/MCallFunc': 'MCallFunc',
                './animation/action/MDelay': 'MDelay',
                './animation/action/MSequence': 'MSequence',
                './ctrl/GameStageMoney': 'GameStageMoney',
                './ctrl/GameStageMusic': 'GameStageMusic',
                './element/anim/CookieAnimation': 'CookieAnimation',
                './element/anim/ScoreAnimation': 'ScoreAnimation',
                './element/component/BackButton': 'BackButton',
                './element/component/Banner': 'Banner',
                './element/component/KeyTouchLine': 'KeyTouchLine',
                './element/component/MUINumber': 'MUINumber',
                './element/component/SplitLine': 'SplitLine',
                './element/loader/BlockSkinFrameLoader': 'BlockSkinFrameLoader',
                './element/loader/GameSceneFrameLoader': 'GameSceneFrameLoader',
                './element/loader/NumberFrameLoader': 'NumberFrameLoader',
                './element/node/CookiesNodeCache': 'CookiesNodeCache',
                './module/GameModuleManager': 'GameModuleManager',
                './module/QQRedPacketModule': 'QQRedPacketModule',
                './property/DecelerateConfirm': 'DecelerateConfirm',
                './property/PropertyProcess': 'PropertyProcess',
                './view/GameStageNodeView': 'GameStageNodeView',
            },
        ],
        GameShareTask: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '85ea4vElrVAB7xIhrsS5arS', 'GameShareTask'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./TaskItemImpl'),
                    n = e('../TaskItem'),
                    a = e('../../Network/Protocol/StorageUtil'),
                    r = e('../../../config/LSKey'),
                    s = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.update = function () {
                                'true' === a.default.read(r.default.SHARE_FOR_GIFT_SHARED) ? ((this.currentStep = this.totalStep), (this.status = n.TaskStatus.TASK_STATUS_SUCCESS)) : ((this.currentStep = 0), (this.status = n.TaskStatus.TASK_STATUS_DOING));
                            }),
                            t
                        );
                    })(o.default);
                (i.default = s), cc._RF.pop();
            },
            {
                '../../../config/LSKey': 'LSKey',
                '../../Network/Protocol/StorageUtil': 'StorageUtil',
                '../TaskItem': 'TaskItem',
                './TaskItemImpl': 'TaskItemImpl',
            },
        ],
        GameStageEventObserver: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '510dfzfId1D5Ihcat9BwHSe', 'GameStageEventObserver'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    cc._RF.pop();
            },
            {},
        ],
        GameStageGuide: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'e1a48m+nAJHqYKv6oGS+5ae', 'GameStageGuide'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./GameStageMusic'),
                    n = e('../data/Map'),
                    a = e('../../base/G'),
                    s = e('../data/MapGenerator'),
                    c = e('../../util/Utility'),
                    r = (function (r) {
                        function e(e, t, i) {
                            var o = r.call(this, e, t, !0) || this;
                            return (o.mGuide = i), (o.type = c.Utility.GAMESTAGE.GUIDE), o;
                        }
                        return (
                            __extends(e, r),
                            (e.prototype.createMap = function (e) {
                                var t = this.mGame.getGameRegion(),
                                    i = new n.MapGenerateParam();
                                (i.slotCount = a.G.Ap.config.getGameSceneSlotCount()), (i.baseBlockHeight = a.G.Ap.config.getBlockHeight()), (i.slotWidth = t.width / i.slotCount), (this.guide.map = s.default.generateGuide(i, t)), (this.guide.map.move = -e), (this.destinationSegmentIndex = this.guide.map.segments.length - 1);
                            }),
                            (e.prototype.enterMusicPart = function (e) {
                                (this.currentBPM = 85), (this.currentBeats = 0.5);
                                var t = (this.currentBPM / 60 / this.currentBeats) * this.guide.map.params.baseBlockHeight * a.G.Ap.config.gameSpeedScale;
                                this.setSpeed(t);
                            }),
                            (e.prototype.enterSegment = function (e) {
                                if ((r.prototype.enterSegment.call(this, e), 0 === e)) {
                                    if (0 < (o = this.guide.getSegment(e)).blocks.length) {
                                        var t = o.blocks[0],
                                            i = o.rect.y - this.guide.map.move;
                                        this.mGuide.shortBlockGuide(t.rect, i);
                                    }
                                } else if (1 === e) {
                                    if ((this.mGame.pauseGame(), 0 < (o = this.guide.getSegment(e)).blocks.length)) {
                                        (t = o.blocks[0]), (i = o.rect.y - this.guide.map.move);
                                        this.mGuide.longBlockBeginGuide(t.rect, i);
                                    }
                                } else if (2 === e) {
                                    var o;
                                    if (0 < (o = this.guide.getSegment(e - 1)).blocks.length) {
                                        (t = o.blocks[0]), (i = o.rect.y - this.guide.map.move);
                                        this.mGuide.longBlockGuide(t.rect, i);
                                    }
                                }
                            }),
                            (e.prototype.detectMiss = function () {}),
                            (e.prototype.makeMistake = function (e, t) {}),
                            (e.prototype.touchBlock = function (e, t, i, o) {
                                i.type === c.Utility.SEGMENTTYPE.BEGIN ? ((o.touchId = e), o.touchCount++, (o.attainScore = 0), a.G.Ap.state.resume(), this.mGuide.hideBanner(), this.notifyTouchState(o, !0), this.displayTouchEffect(i, o)) : (a.G.Ap.state.isPaused() && this.mGame.resumeGame(), r.prototype.touchBlock.call(this, e, t, i, o));
                            }),
                            (e.prototype.touchResumeBlock = function (e, t) {
                                return e === this.currentSegment;
                            }),
                            (e.prototype.updateNodeTouchMove = function (e) {
                                if ((r.prototype.updateNodeTouchMove.call(this, e), 2 === this.currentSegment))
                                    for (var t = this.guide.getTouchs(), i = t.length, o = 0; o < i; ++o) {
                                        var n = this.guide.getBlock(t[o].value);
                                        if (n && n.type == c.Utility.BLOCKTYPE.LONG && n.attainScore >= n.score) {
                                            this.mGame.pauseGame();
                                            var a = this.guide.getSegment(this.currentSegment).rect.y + n.rect.height - this.guide.map.move;
                                            this.mGuide.longBlockEndGuide(n.rect, a);
                                            break;
                                        }
                                    }
                            }),
                            (e.prototype.longBlockTouchOver = function (e) {
                                r.prototype.longBlockTouchOver.call(this, e), 2 === this.currentSegment && this.mGame.finishGameStage(this.type);
                            }),
                            e
                        );
                    })(o.default);
                (i.default = r), cc._RF.pop();
            },
            {
                '../../base/G': 'G',
                '../../util/Utility': 'Utility',
                '../data/Map': 'Map',
                '../data/MapGenerator': 'MapGenerator',
                './GameStageMusic': 'GameStageMusic',
            },
        ],
        GameStageMoney: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'fc30aE1z1lOmq6D7UCB3Qrm', 'GameStageMoney'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var r = e('../../util/Utility'),
                    c = e('../../base/G'),
                    s = e('../data/MapGenerator'),
                    o = e('../data/Map'),
                    n = e('./GameStage'),
                    l = e('./GameMapGuide'),
                    a = (function (a) {
                        function e(e, t, i, o) {
                            var n = a.call(this, e, t, r.Utility.GAMESTAGE.MONEY) || this;
                            return (n.moneyLine = 0), (n.money = 0), (n.blankPauseNode = null), (n.money = i), (n.moneyLine = o), (n.speed = c.G.Ap.config.getMoneyStageSpeed() * c.G.Ap.config.getDesignBlockHeight()), n;
                        }
                        return (
                            __extends(e, a),
                            (e.prototype.init = function (e) {
                                void 0 === e && (e = 0);
                                this.mGame.getGameNode(), this.mGame.getGameRegion();
                                this.createMap(), this.dynamicAddNode(), this.enterSegment(0), c.G.Ap.config.debugNoPullParent && this.view.pullView(0);
                            }),
                            (e.prototype.createMap = function () {
                                var e = this.mGame.getGameRegion(),
                                    t = new o.MapGenerateParam();
                                (t.slotCount = c.G.Ap.config.getGameSceneSlotCount()), (t.baseBlockHeight = c.G.Ap.config.getBlockHeight()), (t.slotWidth = e.width / t.slotCount), (this.guide.map = s.default.generateMoneyMap(this.money, this.moneyLine, t, e)), (this.guide.map.move = -e.height), (this.destinationSegmentIndex = this.guide.map.segments.length - 1);
                            }),
                            (e.prototype.setCurrentSegmentPaused = function () {
                                if (!this.mRunning) return !1;
                                if (!this.blankPauseNode) {
                                    var e = new r.Utility.Rect(0, 0, c.G.Ap.config.mBaseBlockWidth, c.G.Ap.config.mBaseBlockHeight),
                                        t = s.default.createBlock(e, r.Utility.BLOCKTYPE.BLANKPAUSE);
                                    (this.blankPauseNode = this.view.addBlockNode(t, 'BlankPauseNode')), this.view.reuseBlockNode(this.blankPauseNode);
                                }
                                var i = this.currentSegment;
                                if (this.currentSegment < this.guide.map.segments.length)
                                    if ((n = this.guide.map.segments[this.currentSegment]).rect.y < this.guide.map.move) i = this.currentSegment + 1;
                                    else {
                                        var o = n.rect.y - this.guide.map.move - this.guide.map.params.baseBlockHeight;
                                        0 < o && (this.walkDown(o), this.dynamicAddNode(), this.pull(0));
                                    }
                                if ((this.view.showElement(this.blankPauseNode, !0), i + 1 < this.guide.map.segments.length)) {
                                    var n = this.guide.map.segments[i],
                                        a = s.default.getFreeSlotsBySegment(this.guide.map.params.slotCount, n);
                                    0 == a.length && a.push(1), c.G.Ap.config.debugNoPullParent ? this.view.moveElement(this.blankPauseNode, a[0] * this.guide.map.params.slotWidth, n.rect.y - this.guide.map.move) : this.view.moveElement(this.blankPauseNode, a[0] * this.guide.map.params.slotWidth, n.rect.y);
                                } else {
                                    n = this.guide.map.segments[this.guide.map.segments.length - 1];
                                    c.G.Ap.config.debugNoPullParent ? this.view.moveElement(this.blankPauseNode, 0, Math.max(n.rect.y - this.guide.map.move, 0) + this.guide.map.params.baseBlockHeight) : this.view.moveElement(this.blankPauseNode, 0, Math.max(n.rect.y, 0) + this.guide.map.params.baseBlockHeight);
                                }
                                return !0;
                            }),
                            (e.prototype.onTouchStart = function (e) {
                                if (this.mRunning && !c.G.Ap.config.debugNoTouchResponse) {
                                    c.G.Ap.state.isPaused() && this.preTouchPausedBlock(null, null);
                                    for (var t = 0, i = e.length; t < i; ++t) {
                                        var o = e[t],
                                            n = o.identifier;
                                        null == n && (n = 1);
                                        var a = new cc.Vec2(o.clientX, o.clientY),
                                            r = this.guide.calcTouchBlockLocation(a);
                                        if (!(!r || r.segmentIndex < 0 || r.blockIndex < 0)) {
                                            var s = this.guide.getBlock(r);
                                            s && 0 == s.touchCount && (this.touchBlock(n, r, s), this.notifyTouchState(s, !0));
                                        }
                                    }
                                }
                            }),
                            (e.prototype.onTouchEnd = function (e) {}),
                            (e.prototype.preTouchPausedBlock = function (e, t) {
                                this.blankPauseNode && this.view.unuseBlockNode(this.blankPauseNode), this.mGame.resumeGame();
                            }),
                            (e.prototype.touchBlock = function (e, t, i) {
                                (i.touchId = e), (i.touchCount = 1);
                                var o = this.guide.getSegment(t.segmentIndex),
                                    n = i.rect.center();
                                (n.x += o.rect.x), (n.y += o.rect.y - this.guide.map.move), this.mGame.attainMoney(n);
                            }),
                            (e.prototype.detectEnterNextSegment = function () {
                                var e = this.guide.getSegment(this.currentSegment);
                                if (null != e) {
                                    var t = e.rect.yMax - this.guide.map.move <= 0,
                                        i = !0;
                                    if (!t)
                                        for (var o = e.blocks.length, n = 0; n < o; ++n) {
                                            if (0 == e.blocks[n].touchCount) {
                                                i = !1;
                                                break;
                                            }
                                        }
                                    (t || i) && this.enterSegment(this.currentSegment + 1);
                                }
                            }),
                            (e.prototype.detectMiss = function () {
                                if (c.G.Ap.config.debugAutoTouchBlock || this.propertyWorked) {
                                    var e = this.guide.getSegment(this.currentSegment);
                                    if (null == e) return;
                                    if (e.rect.y - this.guide.map.move <= 0)
                                        for (var t = e.blocks.length, i = 0; i < t; ++i) {
                                            var o = e.blocks[i];
                                            0 == o.touchCount && (this.touchBlock(0, new l.GameMap.Location(this.currentSegment, i), o), this.notifyTouchState(o, !0));
                                        }
                                }
                            }),
                            (e.prototype.enterMusicPart = function (e) {}),
                            e
                        );
                    })(n.default);
                (i.default = a), cc._RF.pop();
            },
            {
                '../../base/G': 'G',
                '../../util/Utility': 'Utility',
                '../data/Map': 'Map',
                '../data/MapGenerator': 'MapGenerator',
                './GameMapGuide': 'GameMapGuide',
                './GameStage': 'GameStage',
            },
        ],
        GameStageMusic: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '5c1c1QybFRPkLaYksTvkIMA', 'GameStageMusic'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var I = e('../../util/Utility'),
                    T = e('../../base/G'),
                    h = e('../data/MapGenerator'),
                    o = e('../data/Map'),
                    n = e('./GameStage'),
                    C = e('./GameMapGuide'),
                    r = e('../../util/Dictionary'),
                    l = e('../../util/PU'),
                    d = e('../../business/Logic/ChestManager'),
                    a = e('../../anticheat/OperatingCount'),
                    E = e('../../business/keypad/KeypadUtil'),
                    u = function () {
                        (this.error = !1), (this.positionX = 0), (this.holdTimes = 0), (this.countItem = new a.OperatingCountItem());
                    },
                    s = (function (a) {
                        function e(e, t, i, o) {
                            void 0 === i && (i = !1), void 0 === o && (o = null);
                            var n = a.call(this, e, t, I.Utility.GAMESTAGE.MUSIC, o) || this;
                            return (n.showGift = !0), (n.mIsDebugMode = !1), (n.crowns = []), (n.continueToInfinite = !1), (n.touchRecords = new r.Dictionary()), (n.twinsBlockDelay = 0.2), (n.continueToInfinite = i), (n.mIsDebugMode = 'true' == CMPlay.getQueryString('_cm_debug_', 'false')), n;
                        }
                        return (
                            __extends(e, a),
                            (e.prototype.init = function (e) {
                                void 0 === e && (e = 0), (this.autoDestroyOffset = T.G.Ap.config.mBaseBlockHeight), (this.divisionShop.halfBaseBlockHeight = T.G.Ap.config.mBaseBlockHeight / 2), (this.divisionShop.minSpeedDivide8 = (3 * T.G.Ap.config.mBaseBlockHeight) / 8), (this.divisionShop.maxSpeedDivide8 = (9 * T.G.Ap.config.mBaseBlockHeight) / 8), (this.divisionShop.longBlockLightHeight = (217 * T.G.Ap.config.mBaseBlockHeight) / 320), (this.divisionShop.longBlockBlankHeight = (267 * T.G.Ap.config.mBaseBlockHeight) / 320), this.calcHonors(), this.createMap(e), this.enterSegment(0), this.detectGrow(), this.dynamicAddNode(), this.pull(0), T.G.Ap.config.debugNoPullParent && this.view.pullView(0);
                            }),
                            (e.prototype.setShowGiftBox = function (e) {
                                this.showGift = e;
                            }),
                            (e.prototype.setCurrentSegmentPaused = function () {
                                if (!this.mRunning) return console.log('pause error, is not running'), !1;
                                for (var e = this.currentSegment, t = 0; t < 5; t++) {
                                    e++;
                                    for (var i = this.guide.getSegment(e), o = 0; i && o < i.blocks.length; ++o) 0 < i.blocks[o].touchCount && ((this.currentSegment = e), (i.blocks[o].touchCount = 0), this.notifyTouchState(i.blocks[o], !1));
                                }
                                var n = this.guide.getSegment(this.currentSegment);
                                if (null == n || n.type != I.Utility.SEGMENTTYPE.MEDIUM) return console.warn('pause error, segment is not fit'), !1;
                                var a = this.getNeedPauseBlocks(n);
                                if (0 == a.length) return console.warn('pause error, blocks.length is 0'), !1;
                                if ((this.guide.clearTouchs(), E.default.isHorizon())) {
                                    var r = 0.5 * this.guide.map.params.baseBlockHeight,
                                        s = n.rect.y - this.guide.map.move;
                                    console.warn('setCurrentSegmentPaused => realOffset:' + s), s < r ? this.walkDown(s - r) : r < s && (this.walkDown(s - r), this.dynamicAddNode(), this.pull(0));
                                } else {
                                    if ((s = n.rect.y - this.guide.map.move) < 0) this.walkDown(s);
                                    else if (0 < s) {
                                        var c = this.guide.map.params.baseBlockHeight;
                                        c <= s && (this.walkDown(s - c), this.dynamicAddNode(), this.pull(0));
                                    }
                                }
                                o = 0;
                                for (var l = a.length; o < l; ++o) {
                                    var u = a[o],
                                        d = u.node;
                                    null != d ? ((u.paused = !0), this.view.updateBlockNodePauseState(d, u.paused)) : console.warn('pause error, node is null');
                                }
                                return !0;
                            }),
                            (e.prototype.getNextHonorScore = function () {
                                if (0 == this.crowns.length) return 0;
                                var e = this.guide.map.segments[this.currentSegment];
                                if (null == e) return 0;
                                var t = this.mGame.getMusic().getMusicParts();
                                if (0 == t.length) return 0;
                                var i = 0,
                                    o = this.currentMusicPartIncrease,
                                    n = Math.max(0, e.musicBlockIndex);
                                if (!this.isHonor(o, n)) {
                                    n += 1;
                                    for (var a = this.crowns[this.crowns.length - 1], r = o; r < a; ++r) {
                                        for (var s = !1, c = t[r % t.length].getMusicBlocks(), l = n, u = c.length; l < u; ++l)
                                            if (((i += h.default.calcLessScoreByMusicBlock(c[l])), this.isHonor(r, l))) {
                                                s = !0;
                                                break;
                                            }
                                        if (((n = 0), s)) break;
                                    }
                                }
                                r = 0;
                                for (var d = e.blocks.length; r < d; ++r) {
                                    var p = e.blocks[r];
                                    0 < p.touchCount || (p.type == I.Utility.BLOCKTYPE.LONG ? (i += 1) : (i += p.score));
                                }
                                return i;
                            }),
                            (e.prototype.update = function (e) {
                                a.prototype.update.call(this, e), this.mRunning && (this.detectGrow(), this.detectStop());
                            }),
                            (e.prototype.walkDown = function (e) {
                                a.prototype.walkDown.call(this, e), this.updateNodeTouchMove(e);
                            }),
                            (e.prototype.detectMiss = function () {
                                this.detectMissSegment(this.currentSegment);
                            }),
                            (e.prototype.detectMissSegment = function (o) {
                                var n = this,
                                    a = this.guide.map.segments[o],
                                    e = T.G.Ap.config.debugAutoTouchBlock;
                                if (a)
                                    if (e || this.propertyWorked) this.autoTouch(a);
                                    else if (!T.G.Ap.config.debugNoDetectMission) {
                                        var r = a.rect.y + this.guide.map.params.baseBlockHeight - this.guide.map.move;
                                        if (r <= 0)
                                            for (
                                                var t = a.blocks.length,
                                                    i = function (e) {
                                                        var t = a.blocks[e],
                                                            i = t.type;
                                                        return I.Utility.BLOCKTYPECHARACTER.c[i].music
                                                            ? i === I.Utility.BLOCKTYPE.LONG && 0 === t.slotIndex && l.default.is3DTouchCompat() && 0 < r + s.guide.map.params.baseBlockHeight
                                                                ? 'break'
                                                                : 0 === t.touchCount
                                                                ? (s.gameWillOver(function () {
                                                                      n.mIsDebugMode && console.warn('XMAN::detectMissSegment => GAMEOVER for detectMiss'), n.makeMiss(o, e, n.guide.map.params.baseBlockHeight - r);
                                                                  }, s),
                                                                  'break')
                                                                : void 0
                                                            : 'continue';
                                                    },
                                                    s = this,
                                                    c = 0;
                                                c < t;
                                                ++c
                                            ) {
                                                if ('break' === i(c)) break;
                                            }
                                    }
                            }),
                            (e.prototype.createMap = function (e) {
                                var t = this.mGame.getGameRegion(),
                                    i = new o.MapGenerateParam();
                                (i.slotCount = T.G.Ap.config.getGameSceneSlotCount()), (i.baseBlockHeight = T.G.Ap.config.getBlockHeight()), (i.slotWidth = t.width / i.slotCount);
                                (this.guide.map = h.default.generate(this.mGame.getMusic(), i, t, [0, 1], this.crowns, this.continueToInfinite)), (this.guide.map.move = -e), this.continueToInfinite ? (this.destinationSegmentIndex = this.guide.map.segments.length - 1) : (this.destinationSegmentIndex = this.guide.map.segments.length - 2);
                            }),
                            (e.prototype.detectStop = function () {
                                this.type == I.Utility.GAMESTAGE.MUSIC && this.allFalled() && this.setRuning(!1);
                            }),
                            (e.prototype.detectGrow = function () {
                                var e = this.guide.map,
                                    t = e.segments.length,
                                    i = this.mGame.getGameRegion(),
                                    o = e.move + i.height + i.height,
                                    n = e.segments[t - 1];
                                if (this.currentSegment >= t - 1 || n.rect.y < o || 0 == n.inhereBlockCount) {
                                    var a = Math.max(0, n.musicPartIndex),
                                        r = n.musicBlockIndex,
                                        s = n.rect.yMax,
                                        c = h.default.getFreeSlotsBySegment(this.guide.map.params.slotCount, n),
                                        l = h.default.createSegmentByPreMusicBlock(this.mGame.getMusic(), a, r, this.guide.map.params, i, c);
                                    l && (this.beforeGrowSegment(l), (l.rect.y += s), this.guide.map.segments.push(l), this.afterGrowSegment(l), (0 == l.inhereBlockCount || l.rect.y < o) && this.detectGrow());
                                }
                            }),
                            (e.prototype.beforeGrowSegment = function (e) {
                                this.type === I.Utility.GAMESTAGE.INFINITE && this.putGiftToSegment(e) && (T.G.Ap.state.dropScore = T.G.Ap.state.attainScore), this.tryPutCrownToSegment(e), this.eventObserver && this.eventObserver.onBeforeGrowSegment(e);
                            }),
                            (e.prototype.afterGrowSegment = function (e) {}),
                            (e.prototype.attainHonor = function (e) {
                                null != e && e.haveHonor && (this.type == I.Utility.GAMESTAGE.INFINITE ? this.mGame.attainCrown() : this.mGame.attainStar());
                            }),
                            (e.prototype.getTouchKeyString = function (e) {
                                for (var t = '', i = 0, o = e.length; i < o; ++i) 90 == e[i].clientX ? (t += ' D') : 270 == e[i].clientX ? (t += ' F') : 450 == e[i].clientX ? (t += ' J') : 630 == e[i].clientX && (t += ' K');
                                return t;
                            }),
                            (e.prototype.isShowGameRegion = function (e) {
                                return e.rect.y - this.guide.map.move <= this.mGame.getGameRegion().height;
                            }),
                            (e.prototype.debugSegment = function (e, t, i) {
                                void 0 === i && (i = '');
                                for (var o = 'XMAN::debug => seg[' + e + '] ', n = 0; n < 4; n++) {
                                    for (var a = !1, r = 0; r < t.blocks.length; r++) {
                                        var s = t.blocks[r];
                                        if (s.slotIndex == n) {
                                            (o += '@' + s.touchCount + '(' + s.type + ') '), (a = !0);
                                            break;
                                        }
                                    }
                                    a || (o += '_0(0) ');
                                }
                                console.warn(o + ' ' + i);
                            }),
                            (e.prototype.onTouchStart = function (e) {
                                if (this.mRunning && !T.G.Ap.config.debugNoTouchResponse && !this.propertyWorked)
                                    if (E.default.isHorizon()) {
                                        var t = this.currentSegment;
                                        if ((this.mIsDebugMode && console.error('XMAN::BEGIN =>' + this.getTouchKeyString(e)), T.G.Ap.state.isPaused())) for (var i = 0, o = e.length; i < o; ++i) this.processTouchDot(e[i]);
                                        else {
                                            for (var n = t, a = t - 1, r = t + 3, s = !0, c = a; c <= r; c++) {
                                                var l = this.guide.getSegment(c);
                                                if (l && this.isShowGameRegion(l)) {
                                                    for (var u = 'XMAN::onTouchStart => segment:' + c, d = 0; d < l.blocks.length; d++) {
                                                        var p = l.blocks[d],
                                                            h = p.rect;
                                                        if ((this.mIsDebugMode && this.debugSegment(c, l, 'BEFORE'), 0 == p.touchCount)) {
                                                            for (var f = !1, m = !1, g = 0; g < e.length; g++)
                                                                if (!e[g].processed) {
                                                                    f = !0;
                                                                    var _ = e[g].clientX;
                                                                    if (_ >= h.x && _ <= h.xMax) {
                                                                        u += ' => TOUCH BLOCK(slot:' + p.slotIndex + ', x:' + _ + ')';
                                                                        var y = new C.GameMap.Location();
                                                                        (y.segmentIndex = c), (y.blockIndex = d), n < c && (n = c), (m = e[g].processed = !0), this.touchBlock(e[g].identifier, y, l, p), this.detectEnterNextSegment();
                                                                        break;
                                                                    }
                                                                }
                                                            if (p.type != I.Utility.BLOCKTYPE.TWINS && f && !m) {
                                                                s = !1;
                                                                break;
                                                            }
                                                        } else u += ' => SKIP BLOCK(slot:' + p.slotIndex + ')';
                                                        this.mIsDebugMode && this.debugSegment(c, l, 'AFTER'), this.mIsDebugMode && console.warn(u);
                                                    }
                                                    if (!s) break;
                                                }
                                            }
                                            if (!T.G.Ap.state.isPaused()) {
                                                for (i = 0, o = e.length; i < o; ++i)
                                                    if (!e[i].processed) {
                                                        var S = new cc.Vec2(e[i].clientX, e[i].clientY);
                                                        this.makeMistake(null, S);
                                                        break;
                                                    }
                                                s ? console.warn('XMAN::GameOver for Hit Nothing') : console.warn('XMAN::GameOver for Hit Order');
                                            }
                                            if (!T.G.Ap.state.isPaused()) for (c = a; c <= n; c++) this.detectMissSegment(c);
                                        }
                                        var v = this.currentSegment;
                                        this.mIsDebugMode && console.error('XMAN::END => segment:' + t + ' => ' + v);
                                    } else for (i = 0, o = e.length; i < o; ++i) this.processTouchDot(e[i]);
                            }),
                            (e.prototype.onTouchMove = function (e) {
                                if (this.mRunning && !T.G.Ap.config.debugNoTouchResponse && !T.G.Ap.state.isPaused())
                                    for (var t = 0, i = e.length; t < i; ++t) {
                                        var o = e[t],
                                            n = o.identifier;
                                        null == n && (n = 1);
                                        var a = this.touchRecords.get(n);
                                        if (a) {
                                            if (a.holdTimes < 60) {
                                                a.holdTimes++;
                                                var r = Math.abs(o.clientX - a.positionX);
                                                if (39.27 < r) (a.error = !0), (a.positionX = o.clientX);
                                                else {
                                                    var s = this.touchRecords.get(n);
                                                    s.error && r < 22.5 ? this.processTouchDot(o, !0) : (s.positionX = o.clientX);
                                                }
                                            }
                                            a.countItem.touchMoved = !0;
                                        }
                                    }
                            }),
                            (e.prototype.onTouchEnd = function (e) {
                                if (this.mRunning && !T.G.Ap.config.debugNoTouchResponse)
                                    for (var t = 0, i = e.length; t < i; ++t) {
                                        var o = e[t],
                                            n = o.identifier;
                                        null == n && (n = 1);
                                        var a = this.touchRecords.get(n);
                                        a && this.touchRecords.remove(n);
                                        var r = this.guide.getTouch(n);
                                        if (r) {
                                            this.guide.removeTouch(n);
                                            var s = this.guide.getBlock(r);
                                            null != s && ((s.touchId = -1), (s.counter = 0), this.longBlockTouchOver(s), a && (a.countItem.touchScore = s.attainScore));
                                        } else {
                                            if (!T.G.Ap.state.isPaused()) if (null != a && a.error) Math.abs(o.clientX - a.positionX) < 11.25 && this.processTouchDot(o, !0);
                                        }
                                        a && this.endCountTouch(a);
                                    }
                            }),
                            (e.prototype.processTouchDot = function (e, t) {
                                void 0 === t && (t = !1);
                                this.mGame.getGameRegion();
                                do {
                                    var i = e.identifier;
                                    null == i && (i = 1);
                                    var o = null,
                                        n = new cc.Vec2(e.clientX, e.clientY);
                                    if (!t) {
                                        var a = this.touchRecords.get(i);
                                        a || ((a = new u()), this.touchRecords.put(i, a)), (a.error = !1), (a.positionX = n.x), (a.holdTimes = 0), (o = a);
                                    }
                                    var r = this.divisionShop.halfBaseBlockHeight,
                                        s = this.divisionShop.speedDivide8;
                                    T.G.Ap.state.isPaused() && (s = r = 0);
                                    var c = this.guide.looseDetectClick(this.currentSegment, r, s, n);
                                    (null != c && -1 != c.blockIndex) || (null == (c = this.guide.looseDetectClick(this.currentSegment - 1, r, s, n)) && (c = this.guide.calcTouchBlockLocation(n)));
                                    var l = c ? this.guide.getSegment(c.segmentIndex) : null;
                                    if (null == l) break;
                                    this.processTouchSegment(e, t, n, c, l, o);
                                } while (0);
                            }),
                            (e.prototype.processTouchSegment = function (e, t, i, o, n, a) {
                                var r = this;
                                void 0 === t && (t = !1);
                                var s = !1;
                                do {
                                    var c = e.identifier;
                                    if (!T.G.Ap.state.isPaused() && t) {
                                        var l = this.guide.getSegment(this.currentSegment),
                                            u = this.guide.looseDetectClickBlockIgnoreY(this.currentSegment, i),
                                            d = 0 <= u ? l.blocks[u] : null;
                                        if (!d || !d.node || d.type == I.Utility.BLOCKTYPE.LONG) break;
                                        (o.segmentIndex = this.currentSegment), (o.blockIndex = u), (n = l);
                                    }
                                    var p = this.guide.getBlock(o);
                                    if (T.G.Ap.state.isPaused()) {
                                        if (!this.touchResumeBlock(o.segmentIndex, p)) {
                                            s = !0;
                                            break;
                                        }
                                    } else {
                                        if (null == p) {
                                            o.segmentIndex >= this.currentSegment &&
                                                (this.gameWillOver(function () {
                                                    r.mIsDebugMode && console.warn('XMAN::processTouchSegment => GAMEOVER'), r.makeMistake(o, i);
                                                }, this),
                                                (s = !0));
                                            break;
                                        }
                                        if (o.segmentIndex != this.currentSegment) if (I.Utility.BLOCKTYPECHARACTER.c[p.type].music) if (this.makeDisorder(o, p)) break;
                                        if (!o.inClickableRegion) {
                                            console.warn('!location.inClickableRegion ：blocktype = ' + p.type);
                                            break;
                                        }
                                    }
                                    p ? (0 === p.touchCount && (this.touchBlock(c, o, n, p), (s = !0)), a && this.startCountTouch(i, n, p, a)) : console.error('block is null.');
                                } while (0);
                                return s;
                            }),
                            (e.prototype.touchResumeBlock = function (e, t) {
                                return !(null == t || !t.paused) && (t.type != I.Utility.BLOCKTYPE.BEGIN && this.preTouchPausedBlock(e), !0);
                            }),
                            (e.prototype.preTouchPausedBlock = function (e) {
                                for (var t = this.guide.getSegment(e), i = 0, o = t.blocks.length; i < o; ++i) {
                                    var n = t.blocks[i];
                                    if (n.paused) {
                                        n.paused = !1;
                                        var a = n.node;
                                        this.view.updateBlockNodePauseState(a, n.paused);
                                    }
                                }
                                this.mGame.resumeGame();
                            }),
                            (e.prototype.autoTouch = function (e) {
                                var t = this.mGame.getGameRegion(),
                                    i = this.currentSegment;
                                if (e.rect.y - this.guide.map.move <= t.height / 2)
                                    for (var o = e.blocks.length, n = 0; n < o; ++n) {
                                        var a = e.blocks[n];
                                        if (0 == a.touchCount && a.type != I.Utility.BLOCKTYPE.OBSTACLE) {
                                            var r = new C.GameMap.Location();
                                            (r.segmentIndex = i), (r.blockIndex = n), this.notifyTouchState(a, !0), this.touchBlock(1, r, e, a);
                                        }
                                    }
                            }),
                            (e.prototype.touchBlock = function (e, t, i, o) {
                                var n = this;
                                if ((this.eventObserver && this.eventObserver.onTouchBlockEvent(o, i.rect.x, i.rect.y - this.guide.map.move), (o.touchId = e), o.touchCount++, o.type === I.Utility.BLOCKTYPE.BEGIN)) (o.attainScore = 0), this.mGame.startRun(), this.createGiftForTwoStars(), this.notifyTouchState(o, !0), this.displayTouchEffect(i, o);
                                else if (o.type === I.Utility.BLOCKTYPE.SHORT) {
                                    if (((o.attainScore = o.score), this.attainBlockScore(o), this.notifyTouchState(o, !0), this.displayTouchEffect(i, o), (r = this.mGame.getPlayer()))) (s = this.mGame.getMusic().getMusicBlock(o.musicPartIndex, o.musicBlockIndex)) && s.playAllSyllablsInOrder(r);
                                    this.detectTouchGitBlock(e, t, i, o);
                                } else if (o.type === I.Utility.BLOCKTYPE.TWINS) {
                                    if (((o.attainScore = o.score), this.attainBlockScore(o), this.notifyTouchState(o, !0), this.displayTouchEffect(i, o), (s = this.mGame.getMusic().getMusicBlock(o.musicPartIndex, o.musicBlockIndex)))) {
                                        var a = 0;
                                        0 == t.blockIndex && (a = 1),
                                            (r = this.mGame.getPlayer()) &&
                                                (0 < i.blocks[a].touchCount
                                                    ? this.runDuration - i.blocks[a].touchTime < this.twinsBlockDelay
                                                        ? s.playAllSyllablsInOrder(r)
                                                        : s.playSingleSyllable(r, 1)
                                                    : ((o.touchTime = this.runDuration),
                                                      this.mGame.setSheduleOnce(function () {
                                                          n.delayPlayBlock(t);
                                                      }, this.twinsBlockDelay)));
                                    }
                                } else if (o.type === I.Utility.BLOCKTYPE.LONG) {
                                    this.guide.addTouch(e, t), this.notifyTouchState(o, !0), 0 === o.bounus.length && this.displayBounceEffect(i, o, o.touchMove + this.divisionShop.longBlockLightHeight), (o.touchMove = t.touchHeight);
                                    var r,
                                        s,
                                        c = o.score + 1,
                                        l = this.calcLongBlockScore(o, c);
                                    if (((o.attainScore = l), (r = this.mGame.getPlayer()))) (s = this.mGame.getMusic().getMusicBlock(o.musicPartIndex, o.musicBlockIndex)) && s.playAllSyllablsInOrder(r);
                                    this.detectTouchGitBlock(e, t, i, o);
                                } else if (o.type === I.Utility.BLOCKTYPE.GIFT) {
                                    (o.attainScore = 0), this.notifyTouchState(o, !0);
                                    var u = o.rect.center();
                                    (u.x += i.rect.x), (u.y += i.rect.y - this.guide.map.move), this.mGame.attainGift(u), d.default.getInstance().setPlayGainChest(o.propChest);
                                }
                                this.detectEnterNextSegment();
                            }),
                            (e.prototype.longBlockTouchOver = function (e) {
                                this.attainBlockScore(e), this.notifyTouchState(e, !1);
                            }),
                            (e.prototype.calcLongBlockScore = function (e, t) {
                                var i = (e.score - 0.834) * this.guide.map.params.baseBlockHeight,
                                    o = Math.floor((e.touchMove / i) * e.score) + 1;
                                return o <= t ? o : t;
                            }),
                            (e.prototype.detectTouchGitBlock = function (e, t, i, o) {
                                switch (o.type) {
                                    case I.Utility.BLOCKTYPE.LONG:
                                    case I.Utility.BLOCKTYPE.SHORT:
                                        for (var n = 0, a = i.blocks.length; n < a; ++n) {
                                            var r = i.blocks[n];
                                            0 === r.touchCount && r.type === I.Utility.BLOCKTYPE.GIFT && r.slotIndex === o.slotIndex && this.touchBlock(e, new C.GameMap.Location(t.segmentIndex, n), i, r);
                                        }
                                }
                            }),
                            (e.prototype.delayPlayBlock = function (e) {
                                var t = this.guide.getSegment(e.segmentIndex);
                                if (2 == t.blocks.length) {
                                    var i = 0;
                                    if ((0 == e.blockIndex && (i = 1), 0 == t.blocks[i].touchCount)) {
                                        var o = t.blocks[e.blockIndex],
                                            n = this.mGame.getMusic().getMusicBlock(o.musicPartIndex, o.musicBlockIndex);
                                        n && n.playSingleSyllable(this.mGame.getPlayer(), 0);
                                    }
                                }
                            }),
                            (e.prototype.displayTouchEffect = function (e, t) {
                                var i = t.rect.center();
                                (i.y = t.rect.yCenter + e.rect.y), (i.y -= this.guide.map.move);
                                var o = t.type;
                                this.mGame.attainBlockEffect(i, o);
                            }),
                            (e.prototype.displayBounceEffect = function (e, t, i) {
                                var o = t.rect.center();
                                (o.y = i + e.rect.y), (o.y -= this.guide.map.move);
                                var n = t.type;
                                this.mGame.attainBlockEffect(o, n);
                            }),
                            (e.prototype.attainBlockScore = function (e) {
                                this.eventObserver && (e.attainScore = this.eventObserver.onAttainScore(e.attainScore)), this.mGame.attainScore(e.attainScore);
                            }),
                            (e.prototype.updateNodeTouchMove = function (e) {
                                for (var t = this.guide.getTouchs(), i = t.length, o = 0; o < i; ++o) {
                                    var n = this.guide.getBlock(t[o].value);
                                    if (n && n.type == I.Utility.BLOCKTYPE.LONG) {
                                        if (((n.touchMove += e), 0 < T.G.Ap.config.longBlockBounceEffectByDistance)) {
                                            var a = n.touchMove / T.G.Ap.config.longBlockBounceEffectByDistance,
                                                r = n.rect.height / T.G.Ap.config.longBlockBounceEffectByDistance;
                                            if (a > n.counter && a < r) {
                                                var s = this.guide.getSegment(t[o].value.segmentIndex);
                                                this.displayBounceEffect(s, n, n.touchMove), n.counter++;
                                            }
                                        }
                                        for (var c = this.guide.map.params.baseBlockHeight, l = n.touchMove / c, u = 0; u < n.bounus.length; ++u) {
                                            var d = n.bounus[u];
                                            if (l >= d.time && !d.attain) {
                                                d.attain = !0;
                                                var p = this.mGame.getMusic().getMusicBlock(n.musicPartIndex, n.musicBlockIndex);
                                                if ((p && p.playAccompanySyllable(this.mGame.getPlayer(), u), T.G.Ap.config.longBlockBounceEffectByDistance <= 0)) {
                                                    s = this.guide.getSegment(t[o].value.segmentIndex);
                                                    this.displayBounceEffect(s, n, n.touchMove + this.divisionShop.longBlockLightHeight);
                                                }
                                                break;
                                            }
                                        }
                                        var h = n.score + 1,
                                            f = this.calcLongBlockScore(n, h),
                                            m = T.G.Ap.config.debugAutoTouchBlock,
                                            g = this.propertyWorked;
                                        if (((m || g) && n.attainScore < h && f == h ? ((n.attainScore = f), (n.touchId = -1), this.attainBlockScore(n)) : (n.attainScore = f), n.node)) {
                                            var _ = n.node;
                                            this.view.updateBlockNodeLayers(_, this.speed);
                                        }
                                    }
                                }
                            }),
                            (e.prototype.createGiftForTwoStars = function () {
                                T.G.Ap.state.dropScore = -1;
                                for (var e = 0, t = this.guide.map.segments; e < t.length; e++) {
                                    var i = t[e];
                                    if (!(i.musicPartIndex < 1) && this.putGiftToSegment(i)) {
                                        T.G.Ap.state.dropScore = 0;
                                        break;
                                    }
                                }
                            }),
                            (e.prototype.putGiftToSegment = function (e) {
                                if (this.showGift) {
                                    if (1 != e.blocks.length) return !1;
                                    var t = [e.blocks[0].slotIndex],
                                        i = d.default.getInstance().randomPropChest(T.G.Ap.state.attainScore, T.G.Ap.state.dropScore);
                                    if (!i) return !1;
                                    var o = this.guide.map.params.slotWidth,
                                        n = this.guide.map.params.baseBlockHeight,
                                        a = t[I.Utility.getRandom(0, t.length - 1)],
                                        r = new I.Utility.Rect(o * a, 0, o, n),
                                        s = h.default.createGiftBlock(r, i);
                                    return s && ((s.slotIndex = a), e.blocks.push(s), e.slots.push(a)), !0;
                                }
                            }),
                            (e.prototype.tryPutCrownToSegment = function (e) {
                                this.isHonor(this.currentMusicPartIncrease, e.musicBlockIndex) && (e.haveHonor = !0);
                                var t = this.mGame.getMusic().getMusicPart(e.musicPartIndex);
                                if (t && t.getMusicBlocks().length == e.musicBlockIndex + 1)
                                    for (var i = this.crowns.length, o = 0; o < i; ++o)
                                        if (this.currentMusicPartIncrease + 1 == this.crowns[o]) {
                                            e.haveHonor = !0;
                                            break;
                                        }
                            }),
                            (e.prototype.calcHonors = function () {
                                var e = this.mGame.getLevel();
                                if (null != e)
                                    for (i = 1; i <= 6; ++i) {
                                        var t = e.awardStar.getAward(i);
                                        t && this.crowns.push(t);
                                    }
                                else {
                                    console.warn("Music doesn't have level information.");
                                    for (var i = 1; i <= 6; ++i) this.crowns.push(i);
                                }
                            }),
                            (e.prototype.isHonor = function (e, t) {
                                var i = this.mGame.getMusic().getMusicParts();
                                if (0 == i.length) return !1;
                                var o = i[e % i.length];
                                if (!o || o.getMusicBlocks().length != t + 1) return !1;
                                for (var n = this.crowns.length, a = 0; a < n; ++a) if (e + 1 == this.crowns[a]) return !0;
                                return !1;
                            }),
                            (e.prototype.getNeedPauseBlocks = function (e) {
                                for (var t = [], i = null, o = 0, n = e.blocks; o < n.length; o++) (i = n[o]), I.Utility.BLOCKTYPECHARACTER.c[i.type].music && 0 == i.touchCount && t.push(i);
                                if (!t.length) for (var a = 0, r = e.blocks; a < r.length; a++) (i = r[a]), I.Utility.BLOCKTYPECHARACTER.c[i.type].music && t.push(i);
                                return t;
                            }),
                            (e.prototype.startCountTouch = function (e, t, i, o) {
                                var n = T.G.Ap.antiCheat;
                                if (n.isHit() && !(this.divisionShop.blockSpeed < n.getSpeedThreshold())) {
                                    var a = o.countItem;
                                    (a.valid = !0), (a.blockType = i.type), (a.touchScreenPosX = e.x), (a.touchScreenPosY = e.y), (a.touchBlockPosX = e.x - i.rect.x), (a.touchBlockPosY = e.y + this.guide.map.move - t.rect.y), (a.touchScore = i.score), (a.startTime = new Date().getTime()), (a.slotIndex = i.slotIndex);
                                }
                            }),
                            (e.prototype.endCountTouch = function (e) {
                                T.G.Ap.antiCheat.isHit() && e.countItem.valid && ((e.countItem.endTime = new Date().getTime()), T.G.Ap.antiCheat.getOperatingCount().addItem(e.countItem));
                            }),
                            (e.sortTouchsByY = function (e, t) {
                                return e.clientY > t.clientY ? 1 : e.clientY < t.clientY ? -1 : 0;
                            }),
                            e
                        );
                    })(n.default);
                (i.default = s), cc._RF.pop();
            },
            {
                '../../anticheat/OperatingCount': 'OperatingCount',
                '../../base/G': 'G',
                '../../business/Logic/ChestManager': 'ChestManager',
                '../../business/keypad/KeypadUtil': 'KeypadUtil',
                '../../util/Dictionary': 'Dictionary',
                '../../util/PU': 'PU',
                '../../util/Utility': 'Utility',
                '../data/Map': 'Map',
                '../data/MapGenerator': 'MapGenerator',
                './GameMapGuide': 'GameMapGuide',
                './GameStage': 'GameStage',
            },
        ],
        GameStageNodeView: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '5a3c3nJKWZKD6dp7vk/VF88', 'GameStageNodeView'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../element/node/BlockNodeCache'),
                    n = e('../element/node/BlockNodeFactory'),
                    r = e('../animation/action/MDelay'),
                    s = e('../animation/action/MBlink'),
                    c = e('../animation/action/MCallFunc'),
                    l = e('../animation/action/MSequence'),
                    u = e('../GameBus'),
                    a = (function () {
                        function e(e) {
                            (this.mContentNode = null), (this.blockNodeCache = null), (this.mContentNode = e), (this.blockNodeCache = new o.BlockNodeCache());
                        }
                        return (
                            (e.prototype.attachView = function (e) {
                                this.mContentNode = e;
                            }),
                            (e.prototype.activeView = function (e) {
                                this.mContentNode && this.mContentNode.setVisible(e);
                            }),
                            (e.prototype.pullView = function (e) {
                                this.mContentNode && this.mContentNode.setPositionY(e);
                            }),
                            (e.prototype.moveElement = function (e, t, i) {
                                e && e.setPosition(t, i);
                            }),
                            (e.prototype.showElement = function (e, t) {
                                e && e.setVisible(t);
                            }),
                            (e.prototype.addBlockNode = function (e, t) {
                                var i = this.blockNodeCache.get(e);
                                return null == i && ((i = n.default.getInstance().createNode(e)), t && i.setName(t), this.mContentNode.addChild(i)), i;
                            }),
                            (e.prototype.removeBlockNode = function (e) {
                                this.blockNodeCache.put(e) || e.node.unuse();
                            }),
                            (e.prototype.unuseBlockNode = function (e) {
                                e && e.unuse();
                            }),
                            (e.prototype.reuseBlockNode = function (e) {
                                e && e.reuse();
                            }),
                            (e.prototype.updateBlockNodeTouchState = function (e, t) {
                                e && e.updateTouchState(t);
                            }),
                            (e.prototype.updateBlockNodeLayers = function (e, t) {
                                e && e.updateLayers(t);
                            }),
                            (e.prototype.updateBlockNodePauseState = function (e, t) {
                                e && e.updatePauseState(t);
                            }),
                            (e.prototype.displayMissingEffect = function (e, t) {
                                if (e.node) {
                                    var i = new r.default(0.5),
                                        o = new s.default(4, 0.5),
                                        n = new c.default(function () {
                                            e.node.setVisible(!0), t && t();
                                        }),
                                        a = new l.default(i, o, n);
                                    u.default.getInstance().animationMgr.runAction(e.node, a);
                                } else t && t();
                            }),
                            (e.prototype.displayMistakeEffect = function (e, t) {
                                var i = this;
                                if (e.node) {
                                    var o = new s.default(4, 0.5),
                                        n = new c.default(function () {
                                            i.blockNodeCache.put(e) || (null == e.node && console.error('make misstake block.node is null'), e.node.removeFromParent()), t && t();
                                        }),
                                        a = new l.default(o, n);
                                    u.default.getInstance().animationMgr.runAction(e.node, a);
                                } else t && t();
                            }),
                            e
                        );
                    })();
                (i.default = a), cc._RF.pop();
            },
            {
                '../GameBus': 'GameBus',
                '../animation/action/MBlink': 'MBlink',
                '../animation/action/MCallFunc': 'MCallFunc',
                '../animation/action/MDelay': 'MDelay',
                '../animation/action/MSequence': 'MSequence',
                '../element/node/BlockNodeCache': 'BlockNodeCache',
                '../element/node/BlockNodeFactory': 'BlockNodeFactory',
            },
        ],
        GameStageRankMusic: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '4fc3b1fGf1NyYGEX61ii1xi', 'GameStageRankMusic'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./GameStageMusic'),
                    n = e('../../base/G'),
                    a = e('../../base/State'),
                    r = (function (i) {
                        function e(e, t) {
                            return i.call(this, e, t, !0) || this;
                        }
                        return (
                            __extends(e, i),
                            (e.prototype.createGiftForTwoStars = function () {}),
                            (e.prototype.putGiftToSegment = function (e) {
                                return !1;
                            }),
                            (e.prototype.calcHonors = function () {
                                for (var e = n.G.Ap.state.mission, t = 1; t <= 6; ++t) {
                                    var i = e.honors[t - 1];
                                    i ? this.crowns.push(i) : (console.warn('GameStageRankMusic::calcHonors mission.honors is not enough.'), this.crowns.push(a.default.HONORS[t]));
                                }
                            }),
                            e
                        );
                    })(o.default);
                (i.default = r), cc._RF.pop();
            },
            {
                '../../base/G': 'G',
                '../../base/State': 'State',
                './GameStageMusic': 'GameStageMusic',
            },
        ],
        GameStageTrialSong: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'e2ea2Jc4qlM+rY2l0o7T3wz', 'GameStageTrialSong'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./GameStageMusic'),
                    n = e('../data/Map'),
                    a = e('../../base/G'),
                    r = e('../data/MapGenerator'),
                    s = (function (i) {
                        function e(e, t) {
                            return i.call(this, e, t, !1) || this;
                        }
                        return (
                            __extends(e, i),
                            (e.prototype.createMap = function (e) {
                                var t = this.mGame.getGameRegion(),
                                    i = new n.MapGenerateParam();
                                (i.slotCount = a.G.Ap.config.getGameSceneSlotCount()), (i.baseBlockHeight = a.G.Ap.config.getBlockHeight()), (i.slotWidth = t.width / i.slotCount);
                                (this.guide.map = r.default.generateTrialSong(this.mGame.getMusic(), i, t, [0, 1, 2, 3])), (this.guide.map.move = -e), (this.destinationSegmentIndex = this.guide.map.segments.length - 1);
                            }),
                            (e.prototype.createGiftForTwoStars = function () {}),
                            e
                        );
                    })(o.default);
                (i.default = s), cc._RF.pop();
            },
            {
                '../../base/G': 'G',
                '../data/Map': 'Map',
                '../data/MapGenerator': 'MapGenerator',
                './GameStageMusic': 'GameStageMusic',
            },
        ],
        GameStageTrial: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '176c63sMotLYodXnTWXdtGy', 'GameStageTrial'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./GameStageMusic'),
                    n = e('../data/Map'),
                    a = e('../../base/G'),
                    r = e('../data/MapGenerator'),
                    s = (function (i) {
                        function e(e, t) {
                            return i.call(this, e, t, !1) || this;
                        }
                        return (
                            __extends(e, i),
                            (e.prototype.createMap = function (e) {
                                var t = this.mGame.getGameRegion(),
                                    i = new n.MapGenerateParam();
                                (i.slotCount = a.G.Ap.config.getGameSceneSlotCount()), (i.baseBlockHeight = a.G.Ap.config.getBlockHeight()), (i.slotWidth = t.width / i.slotCount);
                                (this.guide.map = r.default.generateTrial(this.mGame.getMusic(), i, t, [0, 1, 2, 3])), (this.guide.map.move = -e), (this.destinationSegmentIndex = this.guide.map.segments.length - 1);
                            }),
                            (e.prototype.createGiftForTwoStars = function () {}),
                            e
                        );
                    })(o.default);
                (i.default = s), cc._RF.pop();
            },
            {
                '../../base/G': 'G',
                '../data/Map': 'Map',
                '../data/MapGenerator': 'MapGenerator',
                './GameStageMusic': 'GameStageMusic',
            },
        ],
        GameStageView: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '9ab91arhZ5DFYQYPDQXYuBK', 'GameStageView'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    cc._RF.pop();
            },
            {},
        ],
        GameStage: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '5612dQWkcJFTr5pIA18XmRU', 'GameStage'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var u = e('../../util/Utility'),
                    l = e('../../base/G'),
                    a = e('./GameMapGuide'),
                    r = e('../data/MapGenerator'),
                    n = e('../../music/MusicPlayer'),
                    s = e('../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    c = function () {
                        (this.halfBaseBlockHeight = 0), (this.speedDivide8 = 0), (this.minSpeedDivide8 = 0), (this.maxSpeedDivide8 = 0), (this.blockSpeed = 0), (this.longBlockLightHeight = 0), (this.longBlockBlankHeight = 0);
                    },
                    o = (function () {
                        function t(e, t, i, o) {
                            void 0 === o && (o = null), (this.type = u.Utility.GAMESTAGE.NONE), (this.guide = new a.GameMap.Guide()), (this.runDuration = 0), (this.mGame = null), (this.eventObserver = null), (this.mRunning = !0), (this.speed = 0), (this.speedScale = 1), (this.currentMusicPartIncrease = -1), (this.currentSegment = -1), (this.currentBPM = 0), (this.currentBeats = 0), (this.destinationSegmentIndex = -1), (this.autoDestroyOffset = 0), (this.view = null), (this.divisionShop = new c()), (this.playerId = null), (this.propertyWorked = !1);
                            var n = this;
                            (n.mGame = e),
                                (n.type = i),
                                (n.view = t),
                                (n.eventObserver = o),
                                s.MGUser.getUserLoginInfo({
                                    complete: function (e) {
                                        e && (n.playerId = e.playerId);
                                    },
                                });
                        }
                        return (
                            (t.prototype.activeNode = function (e) {
                                this.view.activeView(e);
                            }),
                            (t.prototype.destroy = function () {
                                this.mGame = null;
                            }),
                            (t.prototype.setRunning = function (e) {
                                this.mRunning = e;
                            }),
                            (t.prototype.resetGameData = function () {
                                (this.speedScale = 1), (this.runDuration = 0), (this.currentMusicPartIncrease = -1), (this.currentSegment = 0), (this.currentBPM = 0), (this.currentBeats = 0), this.guide.restoreMap(), l.G.Ap.state.reset(!0);
                            }),
                            (t.prototype.setCurrentSegmentPaused = function () {
                                return !1;
                            }),
                            (t.prototype.allFalled = function () {
                                if (0 < this.guide.map.segments.length && 0 < this.guide.map.segments[this.destinationSegmentIndex].rect.yMax - this.guide.map.move) return !1;
                                return !0;
                            }),
                            (t.prototype.setSpeedScale = function (e) {
                                this.speedScale = e ? t.SPEED_SCALE_PERCENT : 1;
                            }),
                            (t.prototype.getRestoreCount = function () {
                                return t.SPEED_SCALE_RESTORE_COUNT;
                            }),
                            (t.prototype.restoreSpeed = function () {
                                this.speedScale < 1 && (this.speedScale += t.SPEED_SCALE_RESTORE_EACH), 1 < this.speedScale && (this.speedScale = 1);
                            }),
                            (t.prototype.relive = function () {
                                this.setRuning(!0), this.setCurrentSegmentPaused();
                            }),
                            (t.prototype.clearCache = function () {}),
                            (t.prototype.getNextHonorScore = function () {
                                return 0;
                            }),
                            (t.prototype.getDetailHonorScore = function (e) {
                                return 0;
                            }),
                            (t.prototype.getSpeed = function () {
                                return this.speed;
                            }),
                            (t.prototype.setSpeed = function (e) {
                                this.speed = e;
                                var t = this.speed / 8;
                                t < this.divisionShop.minSpeedDivide8 ? (t = this.divisionShop.minSpeedDivide8) : t > this.divisionShop.maxSpeedDivide8 && (t = this.divisionShop.maxSpeedDivide8), (this.divisionShop.blockSpeed = this.speed / Math.max(l.G.Ap.config.mBaseBlockHeight, 1)), (this.divisionShop.speedDivide8 = t);
                            }),
                            (t.prototype.setBPM = function (e) {
                                var t = this.mGame.getPlayer();
                                t && t.setBpm(e);
                            }),
                            (t.prototype.setRuning = function (e) {
                                this.mRunning = e;
                            }),
                            (t.prototype.update = function (e) {
                                if (this.mRunning) {
                                    this.runDuration += e;
                                    var t = e * this.speed * this.speedScale;
                                    this.dynamicAddNode(), this.walkDown(t), this.destoryNode(), this.detectMiss(), this.detectEnterNextSegment();
                                }
                            }),
                            (t.prototype.walkDown = function (e) {
                                this.pull(e), this.mGame.pulledGameStage(this.type, e, this.guide.map.move);
                            }),
                            (t.prototype.detectMiss = function () {}),
                            (t.prototype.pull = function (e) {
                                if (((this.guide.map.move += e), l.G.Ap.config.debugNoPullParent))
                                    for (var t = this.guide.map, i = t.segments, o = t.bottom; o < t.top; ++o)
                                        for (var n = i[o], a = n.blocks.length, r = 0; r < a; ++r) {
                                            var s = n.blocks[r],
                                                c = (s.rect, s.node);
                                            c && this.view.moveElement(c, s.rect.x, n.rect.y - this.guide.map.move);
                                        }
                                else this.view.pullView(-this.guide.map.move);
                            }),
                            (t.prototype.makeMiss = function (e, t, i) {
                                var o = this;
                                this.setRuning(!1), this.playFailedSound();
                                var n = i / 30;
                                this.mGame.setShedule(
                                    function () {
                                        o.pull(-n);
                                    },
                                    0,
                                    30,
                                    0,
                                );
                                var a = this.guide.getBlockByIndex(e, t);
                                if (a && a.node) {
                                    if (this.eventObserver) {
                                        var r = this.guide.getSegment(e);
                                        this.eventObserver.onAppearMissBlockEvent(a, r.rect.x, r.rect.y - this.guide.map.move);
                                    }
                                    this.view.displayMissingEffect(a, function () {
                                        o.gameOver();
                                    });
                                }
                            }),
                            (t.prototype.makeDisorder = function (e, t) {
                                return !0;
                            }),
                            (t.prototype.makeMistake = function (e, t) {
                                var i = this;
                                this.setRuning(!1), this.playFailedSound();
                                var o = this.guide.calcTouchVirtualBlockRect(t);
                                if (null == o) this.gameOver();
                                else {
                                    var n = r.default.createBlock(o, u.Utility.BLOCKTYPE.MISTAKE);
                                    this.eventObserver && this.eventObserver.onTouchBlockEvent(n, 0, 0);
                                    var a = this.view.addBlockNode(n, null);
                                    (n.node = a)
                                        ? (l.G.Ap.config.debugNoPullParent ? this.view.moveElement(a, o.x, o.y - this.guide.map.move) : this.view.moveElement(a, o.x, o.y),
                                          this.view.displayMistakeEffect(n, function () {
                                              i.gameOver();
                                          }))
                                        : this.gameOver();
                                }
                            }),
                            (t.prototype.gameWillOver = function (e, t) {
                                this.mGame.gameWillOver(e, t);
                            }),
                            (t.prototype.gameOver = function () {
                                this.mGame.gameOver();
                            }),
                            (t.prototype.notifyTouchState = function (e, t) {
                                if (!l.G.Ap.config.debugNoBlockAnim) {
                                    var i = e.node;
                                    null != i && this.view.updateBlockNodeTouchState(i, t);
                                }
                            }),
                            (t.prototype.dynamicAddNode = function () {
                                for (var e = this.mGame.getGameRegion(), t = this.guide.map.segments.length, i = this.guide.map.move + e.height, o = this.guide.map.top; o < t; ++o) {
                                    var n = this.guide.map.segments[o];
                                    if (n.rect.y >= i) break;
                                    this.guide.map.top = o + 1;
                                    for (var a = n.blocks.length, r = 0; r < a; ++r) {
                                        var s = n.blocks[r];
                                        if (!s.added) {
                                            if (null == s.node) {
                                                var c = this.view.addBlockNode(s, null);
                                                c && (l.G.Ap.config.debugNoPullParent || this.view.moveElement(c, s.rect.x + n.rect.x, s.rect.y + n.rect.y), (s.node = c));
                                            }
                                            s.added = !0;
                                        }
                                    }
                                }
                            }),
                            (t.prototype.destoryNode = function () {
                                for (var e = this.guide.map.move - this.autoDestroyOffset, t = this.guide.map.segments.length, i = this.guide.map.bottom; i < t; ++i) {
                                    var o = this.guide.map.segments[i];
                                    if (o.rect.yMax >= e) break;
                                    this.guide.map.bottom = i + 1;
                                    for (var n = o.blocks.length, a = 0; a < n; ++a) {
                                        var r = o.blocks[a];
                                        r.node && (this.view.removeBlockNode(r), (r.node = null));
                                    }
                                }
                            }),
                            (t.prototype.onTouchStart = function (e) {}),
                            (t.prototype.onTouchMove = function (e) {}),
                            (t.prototype.onTouchEnd = function (e) {}),
                            (t.prototype.detectEnterNextSegment = function () {
                                var e = this.currentSegment,
                                    t = this.guide.getSegment(e);
                                if (null != t) {
                                    for (var i = !1, o = t.blocks.length, n = 0; n < o; ++n) {
                                        var a = t.blocks[n],
                                            r = t.blocks[n].type;
                                        if (u.Utility.BLOCKTYPECHARACTER.c[r].music && 0 == a.touchCount) {
                                            i = !0;
                                            break;
                                        }
                                    }
                                    if (!i) {
                                        var s = e + 1,
                                            c = this.guide.getSegment(s);
                                        if (c) {
                                            var l = this.mGame.getGameRegion();
                                            if (c.type == u.Utility.SEGMENTTYPE.DESTINATION && c.rect.yMax - this.guide.map.move > l.height) return;
                                        }
                                        this.enterSegment(s), this.currentSegment === s && this.detectEnterNextSegment();
                                    }
                                }
                            }),
                            (t.prototype.enterSegment = function (e) {
                                if (this.currentSegment != e) {
                                    var t = this.guide.getSegment(e);
                                    if (null != t) {
                                        var i = this.guide.getSegment(this.currentSegment);
                                        if (((this.currentSegment = e), this.attainHonor(i), t.type == u.Utility.SEGMENTTYPE.BEGIN)) this.enterMusicPart(0);
                                        else if (t.type == u.Utility.SEGMENTTYPE.MEDIUM) {
                                            var o = this.mGame.getMusic().getMusicParts().length;
                                            (o = Math.max(o, 1)), t.musicPartIndex != this.currentMusicPartIncrease % o && this.enterMusicPart(this.currentMusicPartIncrease + 1);
                                        } else t.type == u.Utility.SEGMENTTYPE.DESTINATION && this.mGame.finishGameStage(this.type);
                                    }
                                }
                            }),
                            (t.prototype.attainHonor = function (e) {}),
                            (t.prototype.enterMusicPart = function (e) {
                                var t = this.mGame.getMusic();
                                if (0 != t.getMusicParts().length) {
                                    this.currentMusicPartIncrease = Math.max(0, e);
                                    var i = t.getMusicParts().length,
                                        o = t.getMusicPart(this.currentMusicPartIncrease % i),
                                        n = 0;
                                    if (this.skipSpeedGrow(e)) n = this.currentBPM;
                                    else {
                                        var a = 100;
                                        3 <= this.currentMusicPartIncrease / i && (a = 130), (n = this.currentMusicPartIncrease >= i ? this.getNewBPM(this.currentBPM, this.currentBeats, o.getBaseBeats(), a) : o.getBPM()), (this.currentBeats = o.getBaseBeats());
                                    }
                                    (this.currentBPM = n), this.mGame.getPlayer().setBpm(n), this.mGame.getPlayer().update(0);
                                    var r = (n / 60 / this.currentBeats) * this.guide.map.params.baseBlockHeight * l.G.Ap.config.gameSpeedScale;
                                    this.checkProperty(r) || this.setSpeed(r);
                                }
                            }),
                            (t.prototype.getNewBPM = function (e, t, i, o) {
                                var n = e / Math.max(0, t),
                                    a = 1.3 - 0.001 * (n - o),
                                    r = n / 60;
                                return 60 * (r *= a = a < 1.04 ? 1.04 : a) * i;
                            }),
                            (t.prototype.playFailedSound = function () {
                                var e = l.G.Ap.sound.getInstrumentFactory().get('piano');
                                if (this.mGame.getPlayer())
                                    for (var t = ['c', 'e', 'g'], i = 0; i < t.length; ++i) {
                                        var o = e.getBeat(t[i]);
                                        o && n.default.playMusicBeat(o, 1, 1, 0);
                                    }
                            }),
                            (t.prototype.checkProperty = function (e) {
                                var t = this.mGame.getRunningProperty();
                                return !!t && (t.setPreSpeed(e), !0);
                            }),
                            (t.prototype.skipSpeedGrow = function (e) {
                                return !1;
                            }),
                            (t.SPEED_SCALE_RESTORE_COUNT = (1 - (t.SPEED_SCALE_PERCENT = 0.61)) / (t.SPEED_SCALE_RESTORE_EACH = 0.067)),
                            t
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../base/G': 'G',
                '../../music/MusicPlayer': 'MusicPlayer',
                '../../util/Utility': 'Utility',
                '../data/MapGenerator': 'MapGenerator',
                './GameMapGuide': 'GameMapGuide',
            },
        ],
        GameTryData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '2f2a8nCPM1LNYSSHNWROe09', 'GameTryData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o,
                    n,
                    a = function () {
                        (this.tryType = o.TYPE_NONE), (this.tryFinish = !1), (this.data = null);
                    };
                (i.default = a), ((n = o = i.GameTryType || (i.GameTryType = {}))[(n.TYPE_NONE = 0)] = 'TYPE_NONE'), (n[(n.TYPE_PIANO = 1)] = 'TYPE_PIANO'), cc._RF.pop();
            },
            {},
        ],
        GiftBlockNode: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '67506PrHoxDULpbNVnWIC9Z', 'GiftBlockNode'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('../loader/GameSceneFrameLoader'),
                    o = e('./BlockNode'),
                    r = e('../../MUI/MUISprite'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.createLayers = function () {
                                this.setPosition(this.mBlock.rect.x, this.mBlock.rect.y), this.setContentSize(this.mBlock.rect.width, this.mBlock.rect.height);
                                var e = a.default.getInstance().getGiftBlockBackground(),
                                    t = this.mBlock.rect.width / e.rect.width,
                                    i = this.mBlock.rect.width,
                                    o = e.rect.height * t,
                                    n = new r.default();
                                (n.imageData = a.default.getInstance().getAtlas()), (n.imageItem = e), n.setScale(0.6), n.move(0, (this.mBlock.rect.height - o) / 2, i, o), this.addChild(n);
                            }),
                            (t.prototype.updateTouchState = function (e) {
                                this.opacity = e ? 0 : 1;
                            }),
                            t
                        );
                    })(o.default);
                (i.default = n), cc._RF.pop();
            },
            {
                '../../MUI/MUISprite': 'MUISprite',
                '../loader/GameSceneFrameLoader': 'GameSceneFrameLoader',
                './BlockNode': 'BlockNode',
            },
        ],
        GiftBoxDialog: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'ddef0p1MJlEhrfmbmg8buL1', 'GiftBoxDialog'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../Logic/ChestManager'),
                    r = e('../awardcontroller/AwardController'),
                    s = e('../Logic/GameItemsManager'),
                    c = e('../skin/SkinPieceMgr'),
                    l = e('../../../modules/MGAdv/scripts/Logic/MGAdvEntrance'),
                    u = e('../../../modules/MGAdv/scripts/Logic/MGAdvDefine'),
                    n = e('../Network/Protocol/StorageUtil'),
                    a = e('../../config/LSKey'),
                    d = e('../../util/TimeUtil'),
                    p = e('../UI/GameEntraScene/ToastPrefab'),
                    h = e('../UI/GameEntraScene/PrefabMgr'),
                    f = e('../Logic/MoneySystem'),
                    m = e('../../util/PU'),
                    g = e('../../business/Logic/I18nManager'),
                    _ = e('../keypad/KeypadNavigator'),
                    y = cc._decorator,
                    S = y.ccclass,
                    v = y.property,
                    I = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mChestRootNode = null), (e.mGiftBoxNode = null), (e.mTopLayout = null), (e.mBg = null), (e.mTopSprite = null), (e.mBottomSprite = null), (e.mChestCount = null), (e.mAwardPrefab = null), (e.mPopupLayout = null), (e.mReward = null), (e.mShowAds = !1), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.setOnAwardTipsClickCallback = function (e) {
                                this.onAwardTipsClickCallback = e;
                            }),
                            (e.prototype.onLoad = function () {
                                var t = this;
                                this.mTopSprite.node.on(cc.Node.EventType.TOUCH_END, this.giftClickCallback, this),
                                    this.mBottomSprite.node.on(cc.Node.EventType.TOUCH_END, this.giftClickCallback, this),
                                    this.node.on(
                                        cc.Node.EventType.TOUCH_START,
                                        function (e) {
                                            e.stopPropagation();
                                        },
                                        this,
                                    );
                                var e = o.default.getInstance().getGainChestTotal();
                                (this.mChestCount.string = 'x ' + e),
                                    o.default.getInstance().openChest(function (e) {
                                        t.mReward = e;
                                    }),
                                    _.default.getInstance().gotoPage(this.node);
                            }),
                            (e.prototype.start = function () {
                                this.playIdle();
                            }),
                            (e.prototype.setOkayListener = function (e) {
                                this.mOkayCallback = e;
                            }),
                            (e.prototype.giftClickCallback = function () {
                                ((this.mAnimation = this.mChestRootNode.getComponent(cc.Animation)), this.mAnimation.getAnimationState('open').isPlaying) || (this.mReward || (console.warn('reward got error, use default'), (this.mReward = o.default.getInstance().openChestWithDefaultReward())), this.mChestRootNode.getComponent(cc.Animation).stop('idle'), this.playOpen());
                            }),
                            (e.prototype.playIdle = function () {
                                var e = this.mChestRootNode.getComponent(cc.Animation);
                                e.play('idle'), e.on('finished', this.giftClickCallback, this);
                            }),
                            (e.prototype.playOpen = function () {
                                (this.mAnimation = this.mChestRootNode.getComponent(cc.Animation)), this.mAnimation.play('open'), this.mAnimation.on('finished', this.onAnimFinished.bind(this), this);
                            }),
                            (e.prototype.onAnimFinished = function () {
                                this.showAwardPopup();
                            }),
                            (e.prototype.showAwardPopup = function () {
                                (this.mBg.node.active = !1), (this.mTopLayout.active = !1), (this.mGiftBoxNode.active = !1), this.showAwardPage();
                            }),
                            (e.prototype.showAwardPage = function () {
                                var t = this,
                                    i = new r.AwardResultInfo(),
                                    e = '/static_res/share_gift_congratulation_title',
                                    o = '好的';
                                g.default.getInstance().isEnglish() && ((e = '/static_res/share_gift_congratulation_title_en'), (o = 'ok')),
                                    i
                                        .setTitlePicPath(e)
                                        .setIsNeedGiveAwardInfo(!0)
                                        .steSource(r.AwardResultInfo.SOURCE_GAME_CHEST)
                                        .setCloseParentCallback(function () {
                                            t.onAwardTipsClickCallback && t.onAwardTipsClickCallback(t.mReward);
                                        })
                                        .setOkBtn(o, function () {
                                            t.mOkayCallback && t.mOkayCallback(t.mReward, c.default.Ins().isNeedShowPieceTipsDialog(i.getAwardContentList())), r.AwardController.getIns().dismissAwardResultPage(i);
                                        })
                                        .enableSkipLabel('', function () {
                                            t.mOkayCallback && t.mOkayCallback(t.mReward, c.default.Ins().isNeedShowPieceTipsDialog(i.getAwardContentList())), r.AwardController.getIns().dismissAwardResultPage(i);
                                        })
                                        .setDoubleBtn('double vidoe', function () {
                                            console.warn('click~!');
                                            var e = u.ADScene.PLAY_AGAIN;
                                            l.MGAdv.show(e, u.QQ_ADV_TYPE.VIDEO_TYPE_SKIN_UNLOCK, function (e) {
                                                if (cc.isValid(t, !0))
                                                    switch (e) {
                                                        case u.ADStat.NOT_NETWORK:
                                                            t.showToastTips('No network available', !0);
                                                            break;
                                                        case u.ADStat.SHOW_SUCCESS_CLOSE:
                                                            t.onDoubleWatchAdsSuccess(i), t.showToastTips('Received rewards successfully', !0);
                                                            break;
                                                        case u.ADStat.SHOW_NOT_ENED_CLOSE:
                                                            t.showToastTips('show not end close', !0);
                                                            break;
                                                        case u.ADStat.SHOW_GET_AD_FAILED:
                                                            t.showToastTips('No video ads available', !0);
                                                    }
                                            });
                                        }),
                                    0 < this.mReward.diamond && i.addAwardContent(s.GameItemType.TYPE_DIAMONDS, this.mReward.diamond, s.GameItemsDefine.ID_DIAMOND),
                                    0 < this.mReward.gold && i.addAwardContent(s.GameItemType.TYPE_GOLD, this.mReward.gold, s.GameItemsDefine.ID_GOLD),
                                    0 < this.mReward.lift && i.addAwardContent(s.GameItemType.TYPE_HP, this.mReward.lift, s.GameItemsDefine.ID_POWER),
                                    this.mReward.skinPieces &&
                                        0 < this.mReward.skinPieces.length &&
                                        this.mReward.skinPieces.forEach(function (e) {
                                            i.addAwardContent(s.GameItemType.TYPE_PIECE, e.count, e.pieceID);
                                        }),
                                    (this.mShowAds = this.isNeedShowAdsAward()),
                                    g.default.getInstance().isEnglish() && (this.mShowAds = !1);
                                var n = '/static_res/btn_getreward_normal',
                                    a = '/static_res/btn_getreward_press';
                                g.default.getInstance().isEnglish() && ((n = '/static_res/btn_getreward_normal_en'), (a = '/static_res/btn_getreward_press_en')),
                                    this.mShowAds &&
                                        (m.default.isWeiXin() || l.MGAdv.load(u.ADScene.NORMAL_RESULT_REWARD, u.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK),
                                        i.setIsShowText(!1),
                                        i.setRichOkBtn('', n, a, function () {
                                            r.AwardController.getIns().dismissAwardResultPage(i), t.mOkayCallback && t.mOkayCallback(t.mReward, c.default.Ins().isNeedShowPieceTipsDialog(i.getAwardContentList())), t.adsClick();
                                        }),
                                        i.enableSkipLabel('', function () {
                                            console.log('czx awardResultInfo enableSkipLabel', t.mOkayCallback), r.AwardController.getIns().dismissAwardResultPage(i), t.mOkayCallback && t.mOkayCallback(t.mReward, c.default.Ins().isNeedShowPieceTipsDialog(i.getAwardContentList()));
                                        })),
                                    r.AwardController.getIns().showCommonAwardResultPage(i);
                            }),
                            (e.prototype.onDoubleWatchAdsSuccess = function (e) {
                                if (this.mOkayCallback) {
                                    var t = r.AwardController.filterAwardsForDouble(e.getAwardContentList());
                                    r.AwardController.giveAwardInfo(t), this.mOkayCallback(this.mReward, c.default.Ins().isNeedShowPieceTipsDialog(e.getAwardContentList()));
                                }
                                r.AwardController.getIns().dismissAwardResultPage(e);
                            }),
                            (e.prototype.adsClick = function () {
                                var t = this,
                                    e = u.ADScene.NORMAL_RESULT_REWARD;
                                l.MGAdv.show(e, u.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK, function (e) {
                                    switch (e) {
                                        case u.ADStat.NOT_NETWORK:
                                            t.showToastTips('No network available', !0);
                                            break;
                                        case u.ADStat.SHOW_SUCCESS_CLOSE:
                                            t.seeAdsSuccess(), t.saveReward2Local();
                                            break;
                                        case u.ADStat.SHOW_NOT_ENED_CLOSE:
                                            break;
                                        case u.ADStat.SHOW_GET_AD_FAILED:
                                            t.showToastTips('No video ads available', !0);
                                    }
                                });
                            }),
                            (e.prototype.seeAdsSuccess = function () {
                                this.showToastTips('恭喜获得额外钻石x5奖励', !0), f.MoneySystem.increaseDiamond(5);
                            }),
                            (e.prototype.showToastTips = function (o, n, a) {
                                var r = cc.director.getScene();
                                r &&
                                    h.default.load('prefab/ToastPrefab', function (e, t) {
                                        var i = t.getComponent(p.default);
                                        i.showTips(o, function () {
                                            t.destroy(), a && a();
                                        }),
                                            i.setLong(n),
                                            r.addChild(t);
                                    });
                            }),
                            (e.prototype.saveReward2Local = function () {
                                if (this.isTodayReward()) {
                                    var e = n.default.read(a.default.RESULT_REWARD_COUNT),
                                        t = parseInt(e) + 1;
                                    n.default.save(a.default.RESULT_REWARD_COUNT, t.toString());
                                } else n.default.save(a.default.RESULT_REWARD_COUNT_DATE, new Date().getTime() + ''), n.default.save(a.default.RESULT_REWARD_COUNT, '1');
                            }),
                            (e.prototype.isNeedShowAdsAward = function () {
                                var e = l.MGAdv.isADCached(u.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK);
                                if (!l.MGAdv.isADFeatureEnable() || !e) return !1;
                                if (this.isTodayReward()) {
                                    var t = n.default.read(a.default.RESULT_REWARD_COUNT);
                                    if (t && 2 <= parseInt(t)) return !1;
                                }
                                return !0;
                            }),
                            (e.prototype.isTodayReward = function () {
                                var e = parseInt(n.default.read(a.default.RESULT_REWARD_COUNT_DATE)),
                                    t = d.default.formatDate(e);
                                return d.default.getTodayFormatDate() == t;
                            }),
                            (e.prototype.onDestroy = function () {
                                this.mAnimation && this.mAnimation.off('finished', this.onAnimFinished, this);
                            }),
                            __decorate([v(cc.Node)], e.prototype, 'mChestRootNode', void 0),
                            __decorate([v(cc.Node)], e.prototype, 'mGiftBoxNode', void 0),
                            __decorate([v(cc.Node)], e.prototype, 'mTopLayout', void 0),
                            __decorate([v(cc.Sprite)], e.prototype, 'mBg', void 0),
                            __decorate([v(cc.Sprite)], e.prototype, 'mTopSprite', void 0),
                            __decorate([v(cc.Sprite)], e.prototype, 'mBottomSprite', void 0),
                            __decorate([v(cc.Label)], e.prototype, 'mChestCount', void 0),
                            __decorate([v(cc.Prefab)], e.prototype, 'mAwardPrefab', void 0),
                            __decorate([v(cc.Layout)], e.prototype, 'mPopupLayout', void 0),
                            (e = __decorate([S], e))
                        );
                    })(cc.Component);
                (i.default = I), cc._RF.pop();
            },
            {
                '../../../modules/MGAdv/scripts/Logic/MGAdvDefine': 'MGAdvDefine',
                '../../../modules/MGAdv/scripts/Logic/MGAdvEntrance': 'MGAdvEntrance',
                '../../business/Logic/I18nManager': 'I18nManager',
                '../../config/LSKey': 'LSKey',
                '../../util/PU': 'PU',
                '../../util/TimeUtil': 'TimeUtil',
                '../Logic/ChestManager': 'ChestManager',
                '../Logic/GameItemsManager': 'GameItemsManager',
                '../Logic/MoneySystem': 'MoneySystem',
                '../Network/Protocol/StorageUtil': 'StorageUtil',
                '../UI/GameEntraScene/PrefabMgr': 'PrefabMgr',
                '../UI/GameEntraScene/ToastPrefab': 'ToastPrefab',
                '../awardcontroller/AwardController': 'AwardController',
                '../keypad/KeypadNavigator': 'KeypadNavigator',
                '../skin/SkinPieceMgr': 'SkinPieceMgr',
            },
        ],
        GoldBuyTask: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'ef55ddM88ZJdoVfNCRrBkqi', 'GoldBuyTask'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return __extends(t, e), (t.prototype.initTask = function (e) {}), t;
                })(e('../SkinTaskItem').default);
                (i.default = o), cc._RF.pop();
            },
            {
                '../SkinTaskItem': 'SkinTaskItem',
            },
        ],
        GoldData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '09a8c5ik9hKrYVAp5MmyE1D', 'GoldData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.findGoldByLevel = function (e) {
                                return this.find('Lv', e);
                            }),
                            (t.prototype.getRow = function () {
                                return new a();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.GoldData = n;
                var a = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getLv = function () {
                            return this.getInt('Lv');
                        }),
                        (t.prototype.getGold = function () {
                            return this.getFloat('Gold');
                        }),
                        (t.prototype.getPvpGold1 = function () {
                            return this.getFloat('PvpGold1');
                        }),
                        (t.prototype.getPvpGold2 = function () {
                            return this.getFloat('PvpGold2');
                        }),
                        (t.prototype.getPvpGold3 = function () {
                            return this.getFloat('PvpGold3');
                        }),
                        (t.prototype.getMaxGold = function () {
                            return this.getInt('MaxGold');
                        }),
                        (t.prototype.getPvpMaxGold = function () {
                            return this.getInt('PvpMaxGold');
                        }),
                        t
                    );
                })(o.default);
                (i.GoldRow = a), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        GoldPopupProfab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '162c0F5F5JFMaUhhrxwXZMG', 'GoldPopupProfab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../Logic/PlayerMgr'),
                    n = e('../UserInfoManager'),
                    a = e('../../../util/SceneMusicMgr'),
                    r = e('../GameEntraScene/BasicTouchEvent'),
                    s = e('../../../infoc/m_p2_PData_Dia'),
                    c = e('../../../infoc/m_p2_pop_coin'),
                    l = e('../../keypad/KeypadNavigator'),
                    u = cc._decorator,
                    d = u.ccclass,
                    p = u.property,
                    h = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.gold_count_label = null), (e.m100GoldSprite = null), (e.m1100GoldSprite = null), (e.m12999GoldSprite = null), (e.m100ContentLayout = null), (e.mTopDestGoldSprite = null), (e.mContentLayout = null), (e.mBgLight = null), (e.mSlipActive = null), (e.close_btn = null), (e.get_gold_100_btn = null), (e.get_gold_1100_btn = null), (e.get_gold_12999_btn = null), (e.mCloseBtnClickCallback = null), (e.mGetGold100BtnClickCallback = null), (e.mGetGold1100BtnClickCallback = null), (e.mGetGold12999BtnClickCallback = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.setCloseCallback = function (e) {
                                this.mCloseCallback = e;
                            }),
                            (e.prototype.setToDiamondPopupPrefab = function (e) {
                                this.mToDiamondPopupPrefab = e;
                            }),
                            (e.prototype.onLoad = function () {
                                this.mContentLayout.getComponent(cc.Animation).play('gold_pop_out'),
                                    o.default.Ins().addUserListener(this),
                                    this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                        e.stopPropagation();
                                    }),
                                    (this.mBgLight.node.active = !1),
                                    (this.mSlipActive.node.active = !1),
                                    this.initEvent(),
                                    l.default.getInstance().pushDialog(this.node);
                            }),
                            (e.prototype.initEvent = function () {
                                var e = this;
                                (this.mCloseBtnClickCallback = new r.default(function () {
                                    e.closeBtnClick();
                                })),
                                    this.close_btn.node.on(cc.Node.EventType.TOUCH_END, this.mCloseBtnClickCallback.click, this.mCloseBtnClickCallback),
                                    (this.mGetGold100BtnClickCallback = new r.default(function () {
                                        e.getGold100BtnClick();
                                    })),
                                    this.get_gold_100_btn.node.on(cc.Node.EventType.TOUCH_END, this.mGetGold100BtnClickCallback.click, this.mGetGold100BtnClickCallback),
                                    (this.mGetGold1100BtnClickCallback = new r.default(function () {
                                        e.getGold1100BtnClick();
                                    })),
                                    this.get_gold_1100_btn.node.on(cc.Node.EventType.TOUCH_END, this.mGetGold1100BtnClickCallback.click, this.mGetGold1100BtnClickCallback),
                                    (this.mGetGold12999BtnClickCallback = new r.default(function () {
                                        e.getGold12999BtnClick();
                                    })),
                                    this.get_gold_12999_btn.node.on(cc.Node.EventType.TOUCH_END, this.mGetGold12999BtnClickCallback.click, this.mGetGold12999BtnClickCallback);
                            }),
                            (e.prototype.start = function () {}),
                            (e.prototype.onDestroy = function () {
                                o.default.Ins().removeUserListener(this), a.default.stop(a.default.NAME_BUY_GOLD), l.default.getInstance().popDialog(this.node);
                            }),
                            (e.prototype.onChange = function (e, t, i, o, n) {
                                this.gold_count_label.string = '' + t;
                            }),
                            (e.prototype.closeBtnClick = function () {
                                c.default.report(c.default.SCENE_GET_GOLD_DIALOG, this.mSource, c.default.ACTION_CLICK_DIALOG_CLOSE_BTN), this.mCloseCallback && this.mCloseCallback();
                            }),
                            (e.prototype.setCoinLabel = function () {
                                this.gold_count_label.string = n.User.UserInfoManager.getUserInfo().coin + '';
                            }),
                            (e.prototype.getGold100BtnClick = function () {
                                var e = this;
                                c.default.report(c.default.SCENE_GET_GOLD_DIALOG, this.mSource, c.default.ACTION_CLICK_1_DIAMOND),
                                    n.User.UserInfoManager.buyCoinByDiamond(1)
                                        ? (s.default.report(1, s.default.SOURCE_BUY_GOLD_USE, s.default.ACTION_CONSUME_DIAMOND),
                                          (this.mBgLight.node.active = !0),
                                          (this.mSlipActive.node.active = !0),
                                          (this.mTopDestGoldSprite.node.active = !1),
                                          a.default.play(a.default.NAME_BUY_GOLD, a.default.PATH_BUY_GOLD, !1),
                                          this.scheduleOnce(function () {
                                              e.playBuyGoldSuccessAnim(e.m100GoldSprite, function () {
                                                  e.setCoinLabel(), (e.mBgLight.node.active = !1), (e.mSlipActive.node.active = !1), (e.mTopDestGoldSprite.node.active = !0);
                                              });
                                          }, 0))
                                        : this.toDiamondPopupPrefab();
                            }),
                            (e.prototype.getGold1100BtnClick = function () {
                                var e = this;
                                c.default.report(c.default.SCENE_GET_GOLD_DIALOG, this.mSource, c.default.ACTION_CLICK_10_DIAMOND),
                                    n.User.UserInfoManager.buyCoinByDiamond(10)
                                        ? (s.default.report(10, s.default.SOURCE_BUY_GOLD_USE, s.default.ACTION_CONSUME_DIAMOND),
                                          (this.mBgLight.node.active = !0),
                                          (this.mSlipActive.node.active = !0),
                                          (this.mTopDestGoldSprite.node.active = !1),
                                          a.default.play(a.default.NAME_BUY_GOLD, a.default.PATH_BUY_GOLD, !1),
                                          this.scheduleOnce(function () {
                                              e.playBuyGoldSuccessAnim(e.m1100GoldSprite);
                                          }, 0.1),
                                          this.scheduleOnce(function () {
                                              e.playBuyGoldSuccessAnim(e.m1100GoldSprite);
                                          }, 0.2),
                                          this.scheduleOnce(function () {
                                              e.playBuyGoldSuccessAnim(e.m1100GoldSprite, function () {
                                                  e.setCoinLabel(), (e.mBgLight.node.active = !1), (e.mSlipActive.node.active = !1), (e.mTopDestGoldSprite.node.active = !0);
                                              });
                                          }, 0.3))
                                        : this.toDiamondPopupPrefab();
                            }),
                            (e.prototype.getGold12999BtnClick = function () {
                                var e = this;
                                c.default.report(c.default.SCENE_GET_GOLD_DIALOG, this.mSource, c.default.ACTION_CLICK_100_DIAMOND),
                                    n.User.UserInfoManager.buyCoinByDiamond(100)
                                        ? (s.default.report(100, s.default.SOURCE_BUY_GOLD_USE, s.default.ACTION_CONSUME_DIAMOND),
                                          (this.mBgLight.node.active = !0),
                                          (this.mSlipActive.node.active = !0),
                                          (this.mTopDestGoldSprite.node.active = !1),
                                          a.default.play(a.default.NAME_BUY_GOLD, a.default.PATH_BUY_GOLD, !1),
                                          this.scheduleOnce(function () {
                                              e.playBuyGoldSuccessAnim(e.m12999GoldSprite);
                                          }, 0.1),
                                          this.scheduleOnce(function () {
                                              e.playBuyGoldSuccessAnim(e.m12999GoldSprite);
                                          }, 0.2),
                                          this.scheduleOnce(function () {
                                              e.playBuyGoldSuccessAnim(e.m12999GoldSprite);
                                          }, 0.3),
                                          this.scheduleOnce(function () {
                                              e.playBuyGoldSuccessAnim(e.m12999GoldSprite);
                                          }, 0.4),
                                          this.scheduleOnce(function () {
                                              e.playBuyGoldSuccessAnim(e.m12999GoldSprite);
                                          }, 0.5),
                                          this.scheduleOnce(function () {
                                              e.playBuyGoldSuccessAnim(e.m12999GoldSprite, function () {
                                                  e.setCoinLabel(), (e.mBgLight.node.active = !1), (e.mSlipActive.node.active = !1), (e.mTopDestGoldSprite.node.active = !0);
                                              });
                                          }, 0.6))
                                        : this.toDiamondPopupPrefab();
                            }),
                            (e.prototype.toDiamondPopupPrefab = function () {
                                this.mToDiamondPopupPrefab && this.mToDiamondPopupPrefab();
                            }),
                            (e.prototype.playBuyGoldSuccessAnim = function (e, t) {
                                var i = new cc.Node();
                                (i.width = 56), (i.height = 56);
                                var o = e.node.parent.convertToWorldSpaceAR(e.node.getPosition()),
                                    n = this.node.convertToNodeSpaceAR(o);
                                i.setPosition(n), (i.addComponent(cc.Sprite).spriteFrame = e.spriteFrame);
                                var a = this.mBgLight.node.parent.convertToWorldSpaceAR(this.mBgLight.node.getPosition()),
                                    r = this.node.convertToNodeSpaceAR(a);
                                this.node.addChild(i);
                                var s = r.x - i.x,
                                    c = r.y - i.y,
                                    l = [cc.p(r.x - 0.3 * s, r.y - 0.8 * c), cc.p(r.x - 0 * s, r.y - 0.3 * c), cc.p(r.x, r.y)],
                                    u = cc.bezierTo(0.2, l),
                                    d = cc.fadeTo(0.01, 0),
                                    p = cc.sequence(
                                        u,
                                        d,
                                        cc.callFunc(function () {
                                            t && t();
                                        }),
                                    );
                                i.runAction(p);
                            }),
                            (e.prototype.setSource = function (e) {
                                this.mSource = e;
                            }),
                            (e.prototype.getSource = function () {
                                return this.mSource;
                            }),
                            __decorate([p(cc.Label)], e.prototype, 'gold_count_label', void 0),
                            __decorate([p(cc.Sprite)], e.prototype, 'm100GoldSprite', void 0),
                            __decorate([p(cc.Sprite)], e.prototype, 'm1100GoldSprite', void 0),
                            __decorate([p(cc.Sprite)], e.prototype, 'm12999GoldSprite', void 0),
                            __decorate([p(cc.Layout)], e.prototype, 'm100ContentLayout', void 0),
                            __decorate([p(cc.Sprite)], e.prototype, 'mTopDestGoldSprite', void 0),
                            __decorate([p(cc.Layout)], e.prototype, 'mContentLayout', void 0),
                            __decorate([p(cc.Sprite)], e.prototype, 'mBgLight', void 0),
                            __decorate([p(cc.Sprite)], e.prototype, 'mSlipActive', void 0),
                            __decorate([p(cc.Button)], e.prototype, 'close_btn', void 0),
                            __decorate([p(cc.Button)], e.prototype, 'get_gold_100_btn', void 0),
                            __decorate([p(cc.Button)], e.prototype, 'get_gold_1100_btn', void 0),
                            __decorate([p(cc.Button)], e.prototype, 'get_gold_12999_btn', void 0),
                            (e = __decorate([d], e))
                        );
                    })(cc.Component);
                (i.default = h), cc._RF.pop();
            },
            {
                '../../../infoc/m_p2_PData_Dia': 'm_p2_PData_Dia',
                '../../../infoc/m_p2_pop_coin': 'm_p2_pop_coin',
                '../../../util/SceneMusicMgr': 'SceneMusicMgr',
                '../../Logic/PlayerMgr': 'PlayerMgr',
                '../../keypad/KeypadNavigator': 'KeypadNavigator',
                '../GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
                '../UserInfoManager': 'UserInfoManager',
            },
        ],
        GuidanceInfo: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '1bf79O6GG9CxahkVbylxori', 'GuidanceInfo'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = function () {};
                i.default = o;
                var n = function () {};
                i.PrefabItem = n;
                var a = function () {};
                (i.GuidanceItem = a), cc._RF.pop();
            },
            {},
        ],
        G: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '79b33rxbvZOSI1Xc+21WqVQ', 'G'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o,
                    n = e('../social/SocialHelper');
                ((o = i.G || (i.G = {})).GAME_SCENE_NAME = 'GameSceneEntry'),
                    (o.GAME_OVER_SCENE_NAME = 'GameOverSceneUpdate'),
                    (o.Ap = null),
                    (o.enterGameTime = 0),
                    (o.networkType = null),
                    (o.networkIsConnected = !0),
                    (o.launchOption = null),
                    (o.skinTryData = null),
                    (o.songTryData = null),
                    (o.tryData = null),
                    (o.getLaunchOption = function () {
                        return o.launchOption ? o.launchOption : n.SocialHelper.getLaunchParameter();
                    }),
                    (o.isCloudHotSongUpgrade = !1),
                    (o.propAddition = null),
                    cc._RF.pop();
            },
            {
                '../social/SocialHelper': 'SocialHelper',
            },
        ],
        HolidayTaskData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '95e68DgVi9G+7B+SyFtNfh4', 'HolidayTaskData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.findId = function (e) {
                                return this.find('Id', e);
                            }),
                            (t.prototype.getRow = function () {
                                return new a();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.HolidayTaskData = n;
                var a = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getHolidayId = function () {
                            return this.getString('holidayID');
                        }),
                        (t.prototype.getTaskId = function () {
                            return this.getString('taskID');
                        }),
                        (t.prototype.getTotal = function () {
                            return this.getInt('total');
                        }),
                        (t.prototype.getRewardID = function () {
                            return this.getString('rewardID');
                        }),
                        (t.prototype.getShowBtn = function () {
                            return 1 == this.getInt('showBtn');
                        }),
                        (t.prototype.getTryMusicId = function () {
                            var e = this.getInt('tryMusicId');
                            return isNaN(Number(e)) ? 0 : Number(e);
                        }),
                        (t.prototype.getQQShareImgUrl = function () {
                            return this.getString('qqShareImgUrl');
                        }),
                        (t.prototype.getTaskKey = function () {
                            return this.getString('taskKey');
                        }),
                        (t.prototype.getDesc = function () {
                            return this.getString('desc');
                        }),
                        (t.prototype.getStep = function () {
                            return this.getString('step');
                        }),
                        (t.prototype.getReward = function () {
                            return this.getString('reward');
                        }),
                        (t.prototype.getBeginTime = function () {
                            return this.getInt('beginTime');
                        }),
                        (t.prototype.getEndTime = function () {
                            return this.getInt('endTime');
                        }),
                        (t.prototype.getRefresh = function () {
                            return !!this.getInt('refresh');
                        }),
                        t
                    );
                })(o.default);
                (i.HolidayTaskItemsRow = a), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        HolidayTaskItem: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'd3916+UZ+BJEJgrKwtcGxCj', 'HolidayTaskItem'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./HolidayTask'),
                    n = e('../../util/NumberUtil'),
                    a = e('../skin/frag/SkinTaskItem'),
                    r = (function () {
                        function e(e, t, i) {
                            (this.curGetCount = 0), (this.curStep = 0), (this.status = []), (this.holidayId = e), (this.taskKey = t), (this.taskID = i);
                        }
                        return (
                            (e.prototype.getTaskStr = function () {
                                var t = this.taskID + '*';
                                return (
                                    (t += this.curGetCount),
                                    this.status.forEach(function (e) {
                                        t += '*' + e;
                                    }),
                                    t
                                );
                            }),
                            (e.prototype.formatStrToItem = function (e) {
                                this.curGetCount = n.default.parseIntFromString(e[1]);
                                for (var t = 2; t < e.length; t++) this.status[t - 2] = n.default.parseIntFromString(e[t]);
                                this.setCurrentStep();
                            }),
                            (e.prototype.refreshTaskInfo = function () {
                                (this.curGetCount = 0), this.status.splice(0, this.status.length);
                                for (var e = 0; e < this.stepTarget.length; e++) this.status.push(a.TaskStatus.STATUS_NONE);
                            }),
                            (e.prototype.isFinishTaskItem = function () {
                                return this.curStep >= this.stepTarget.length;
                            }),
                            (e.prototype.refreshTaskStatus = function (e, t) {
                                this.status[e] = t;
                            }),
                            (e.prototype.setTaskItemData = function (e, t) {
                                switch (this.taskKey) {
                                    case o.HolidayTaskKey.TASK_DAILY_LOGIN_GAME:
                                        e || (this.curGetCount += t);
                                        break;
                                    case o.HolidayTaskKey.TASK_PLAY_RANK_GAME:
                                        e ? (this.curGetCount += t) : (this.curGetCount = 1);
                                        break;
                                    case o.HolidayTaskKey.TASK_INVITE_NEW_PLAYER:
                                    default:
                                        this.curGetCount += t;
                                }
                                this.setCurrentStep();
                            }),
                            (e.prototype.setCurrentStep = function () {
                                for (var e = 0; e < this.stepTarget.length && this.stepTarget[e] <= this.curGetCount; e++) this.status[e] != a.TaskStatus.STATUS_FINISH && (this.status[e] = a.TaskStatus.STATUS_SUCCESS), (this.curStep = e);
                            }),
                            (e.prototype.getCurrentReward = function () {
                                return this.reward[this.curStep];
                            }),
                            e
                        );
                    })();
                (i.default = r), cc._RF.pop();
            },
            {
                '../../util/NumberUtil': 'NumberUtil',
                '../skin/frag/SkinTaskItem': 'SkinTaskItem',
                './HolidayTask': 'HolidayTask',
            },
        ],
        HolidayTaskMgr: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'ccd7b/ozRZCSIMZPhRmqbAP', 'HolidayTaskMgr'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var c = e('./HolidayTask'),
                    a = e('../../base/Log'),
                    l = e('./HolidayTaskItem'),
                    u = e('../skin/frag/SkinTaskItem'),
                    r = e('../Network/Protocol/StorageUtil'),
                    s = e('../../config/LSKey'),
                    d = e('../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    p = e('../../util/StringUtil'),
                    o = e('../DB/DBMgr'),
                    h = e('../Logic/EventBus'),
                    f = e('../Logic/NotifyEvent'),
                    m = e('../../util/PU'),
                    n = (function () {
                        function n() {
                            (this.TASK_HOLIDAY_TONE = ''), (this.mAllTaskArray = new Map()), this.initAndRefreshData();
                        }
                        return (
                            (n.Ins = function () {
                                return null == this.ins && (this.ins = new n()), this.ins;
                            }),
                            (n.prototype.initAndRefreshData = function () {
                                if (this.isFuncEnabled()) {
                                    this.mAllTaskArray.clear();
                                    var e = this.readTaskDataLocal(),
                                        t = o.default.Ins().getDBRows(o.eDataBase.eDB_HolidayTask);
                                    this.parseConfig(t, e), (this.TASK_HOLIDAY_TONE = this.getInTimeTask()), a.default.l('the init  data holiday task is ' + this.TASK_HOLIDAY_TONE);
                                }
                            }),
                            (n.prototype.parseConfig = function (e, i) {
                                if (e)
                                    for (var t = 0, o = e; t < o.length; t++) {
                                        var n = o[t];
                                        if (n && !p.StringUtil.isEmpty(n.getHolidayId())) {
                                            var a = new l.default(n.getHolidayId(), n.getTaskKey(), n.getTaskId());
                                            (a.stepTarget = this.parseStringList(n.getStep())), (a.reward = this.parseStringList(n.getReward())), (a.desc = n.getDesc()), (a.repeat = n.getRefresh());
                                            for (var r = 0; r < a.stepTarget.length; r++) a.status.push(u.TaskStatus.STATUS_NONE);
                                            var s = this.mAllTaskArray.get(n.getHolidayId());
                                            s || (s = new c.default(n.getHolidayId(), n.getTotal())), s.taskItems.push(a), null == s.beginTime && (s.beginTime = n.getBeginTime()), null == s.endTime && (s.endTime = n.getEndTime()), null == s.rewardID && (s.rewardID = n.getRewardID()), null == s.showBtn && (s.showBtn = n.getShowBtn()), null == s.tryMusicLevelID && (s.tryMusicLevelID = n.getTryMusicId()), null == s.qqShareImgUrl && (s.qqShareImgUrl = n.getQQShareImgUrl()), this.mAllTaskArray.set(s.holidayID, s);
                                        }
                                    }
                                i &&
                                    0 < i.length &&
                                    this.mAllTaskArray.forEach(function (t) {
                                        t &&
                                            i.forEach(function (e) {
                                                return t.readTaskDataLocal(e);
                                            });
                                    });
                            }),
                            (n.prototype.parseStringList = function (e) {
                                if (p.StringUtil.isEmpty(e)) return console.warn('parseStringList is empty'), [];
                                var t = e.split('-');
                                if (t) {
                                    for (var i = [], o = 0, n = t; o < n.length; o++) {
                                        var a = n[o];
                                        a ? i.push(parseFloat(a)) : console.warn('parseStringList detail error');
                                    }
                                    return i;
                                }
                                return console.warn('parseStringList data parse error'), [];
                            }),
                            (n.prototype.saveTask = function () {
                                var t = this;
                                this.isFuncEnabled() &&
                                    this.mAllTaskArray &&
                                    0 < this.mAllTaskArray.size &&
                                    this.getCurTime(function (e, i) {
                                        if (e) {
                                            var o = '';
                                            t.mAllTaskArray.forEach(function (e, t) {
                                                o += e.saveTaskData(i) + '#';
                                            }),
                                                1 < o.length && (o = o.substr(0, o.length - 1)),
                                                a.default.l('the holidaytaskMgr savestr is ' + o),
                                                r.default.save(s.default.HOLIDAY_TASK_LIST, o);
                                        }
                                    });
                            }),
                            (n.prototype.readTaskDataLocal = function () {
                                var e = [],
                                    t = r.default.read(s.default.HOLIDAY_TASK_LIST);
                                if (!p.StringUtil.isEmpty(t)) {
                                    t.startsWith('undefined') && (t = t.replace('undefined', ''));
                                    for (var i = 0, o = t.split('#'); i < o.length; i++) {
                                        var n = o[i];
                                        e.push(n);
                                    }
                                }
                                return e;
                            }),
                            (n.prototype.getTask = function (e) {
                                return this.isFuncEnabled() ? (p.StringUtil.isEmpty(e) ? (a.default.e('get Task holiday id is err is empty'), null) : this.mAllTaskArray.get(e)) : null;
                            }),
                            (n.prototype.getInTimeTask = function () {
                                if (this.isFuncEnabled()) {
                                    var t = d.MGUser.getCurrentServerTime(),
                                        i = '';
                                    return (
                                        this.mAllTaskArray.forEach(function (e) {
                                            e.beginTime <= t && e.endTime >= t && (i = e.holidayID);
                                        }),
                                        i
                                    );
                                }
                            }),
                            (n.prototype.RefreshTask = function (e, t) {
                                if (this.isFuncEnabled()) {
                                    var i = this.mAllTaskArray.get(this.TASK_HOLIDAY_TONE);
                                    if (i) {
                                        var o = d.MGUser.getCurrentServerTime();
                                        i.beginTime <= o && i.endTime >= o && i.setTaskData(e, t);
                                    }
                                    this.saveTask(), a.default.i(n.TAG + 'RefreshTask key = ' + e + ',currentStep = ' + t, this), h.default.fire(f.default.TASK_ITEM_UPDATE_WELF_STEP);
                                }
                            }),
                            (n.prototype.setTaskItemFinish = function (e, t, i, o) {
                                if (this.isFuncEnabled()) {
                                    var n = this.getTask(e);
                                    n && (n.setTaskStatus(t, i, o), this.saveTask());
                                }
                            }),
                            (n.prototype.getCurTime = function (i) {
                                d.MGUser.getCurrentServerRealTime({
                                    complete: function (e, t) {
                                        i(e, t);
                                    },
                                });
                            }),
                            (n.prototype.isFuncEnabled = function () {
                                return !m.default.isCM();
                            }),
                            (n.TAG = 'HolidayTaskMgr ====>>'),
                            (n.ins = null),
                            n
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../base/Log': 'Log',
                '../../config/LSKey': 'LSKey',
                '../../util/PU': 'PU',
                '../../util/StringUtil': 'StringUtil',
                '../DB/DBMgr': 'DBMgr',
                '../Logic/EventBus': 'EventBus',
                '../Logic/NotifyEvent': 'NotifyEvent',
                '../Network/Protocol/StorageUtil': 'StorageUtil',
                '../skin/frag/SkinTaskItem': 'SkinTaskItem',
                './HolidayTask': 'HolidayTask',
                './HolidayTaskItem': 'HolidayTaskItem',
            },
        ],
        HolidayTask: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '3a4f905EEZBGpQdV2dYgfVF', 'HolidayTask'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o,
                    n = e('../../util/TimeUtil'),
                    a = e('../../base/Log'),
                    r = e('../../util/NumberUtil'),
                    s = e('../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    c = e('../../util/StringUtil');
                ((o = i.HolidayTaskKey || (i.HolidayTaskKey = {})).TASK_DAILY_LOGIN_GAME = 'daily_login_game'), (o.TASK_PLAY_RANK_GAME = 'play_rank_game'), (o.TASK_INVITE_NEW_PLAYER = 'invite_new_player');
                var l = (function () {
                    function e(e, t) {
                        (this.holidayID = null), (this.beginTime = null), (this.endTime = null), (this.total = null), (this.rewardID = null), (this.showBtn = null), (this.tryMusicLevelID = null), (this.qqShareImgUrl = null), (this.CurrentEnergy = 0), (this.holidayID = e), (this.taskItems = []), (this.total = t);
                    }
                    return (
                        (e.prototype.saveTaskData = function (e) {
                            var t = n.default.formatDate(e) + '&';
                            return (
                                (this.mLastSaveDay = n.default.formatDate(e)),
                                (t += this.holidayID + '&'),
                                (t += this.CurrentEnergy + '&'),
                                this.taskItems.forEach(function (e) {
                                    t += e.getTaskStr() + '&';
                                }),
                                (t = t.substr(0, t.length - 1)),
                                a.default.l(' saveHolidayTaskMgr timeStamp = ' + e + ',saveStr = ' + t),
                                t
                            );
                        }),
                        (e.prototype.readTaskDataLocal = function (e) {
                            if (!c.StringUtil.isEmpty(e)) {
                                var t = e.split('&');
                                if (t && 1 < t.length && this.holidayID == t[1]) {
                                    (this.mLastSaveDay = t[0]), (this.CurrentEnergy = r.default.parseIntFromString(t[2]));
                                    for (var i = !this.isSameDay(), o = Math.min(this.taskItems.length, t.length - 3), n = 0; n < o; n++) {
                                        if (this.taskItems[n]) {
                                            var a = t[n + 3].split('*');
                                            this.taskItems[n].taskID === a[0] && (this.taskItems[n].formatStrToItem(a), this.taskItems[n].repeat && i && this.taskItems[n].refreshTaskInfo());
                                        }
                                    }
                                }
                            }
                        }),
                        (e.prototype.isSameDay = function () {
                            var e = n.default.formatDate(s.MGUser.getCurrentServerTime());
                            return !!this.mLastSaveDay && e === this.mLastSaveDay;
                        }),
                        (e.prototype.setTaskData = function (e, t) {
                            for (var i = 0, o = this.taskItems; i < o.length; i++) {
                                var n = o[i];
                                n.taskKey === e && n.setTaskItemData(this.isSameDay(), t);
                            }
                        }),
                        (e.prototype.setTaskStatus = function (e, t, i) {
                            for (var o = 0, n = this.taskItems; o < n.length; o++) {
                                var a = n[o];
                                a.taskKey === e && (a.refreshTaskStatus(t, i), (this.CurrentEnergy += a.reward[t]));
                            }
                        }),
                        e
                    );
                })();
                (i.default = l), cc._RF.pop();
            },
            {
                '../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../base/Log': 'Log',
                '../../util/NumberUtil': 'NumberUtil',
                '../../util/StringUtil': 'StringUtil',
                '../../util/TimeUtil': 'TimeUtil',
            },
        ],
        HomePagePrefb: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '4ffa0Ql0CVIaa1ieTLI2zdb', 'HomePagePrefb'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../base/G'),
                    n = e('../MusicLevelDataLoader'),
                    a = e('../../../base/State'),
                    r = e('../../Logic/PlayerMgr'),
                    s = e('../../Logic/Plugin/PluginMgr'),
                    c = e('../../Logic/Plugin/IPlugin'),
                    l = e('./BasicTouchEvent'),
                    u = e('../../../infoc/m_p2_Uaction'),
                    d = e('../../../util/SUtil'),
                    p = e('../../Logic/EventBus'),
                    h = e('../../Logic/NotifyEvent'),
                    f = e('./ImgCache'),
                    m = e('../../task/newguidance/NewGuidanceLoader'),
                    g = e('./PrefabMgr'),
                    _ = e('./MainpageRightBtnPanel'),
                    y = e('./ToastPrefab'),
                    S = e('../../../util/PU'),
                    v = e('../../../base/Log'),
                    I = e('../GameClub'),
                    T = e('../../Network/Protocol/StorageUtil'),
                    C = e('../../../config/LSKey'),
                    E = e('../../skin/frag/SkinTaskMgr'),
                    A = e('../../../util/StringUtil'),
                    P = e('../../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    k = e('../../../base/Startup'),
                    M = e('../../Logic/I18nManager'),
                    L = e('../../../../modules/MGAdv/scripts/Logic/MGAdvDefine'),
                    b = e('../../../../modules/MGAdv/scripts/Logic/MGAdvEntrance'),
                    N = e('../../keypad/KeypadUtil'),
                    R = cc._decorator,
                    D = R.ccclass,
                    w = R.property,
                    B = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mMusicNameLabel = null), (e.mStartBtn = null), (e.mLevelSprite_1 = null), (e.mLevelSprite_2 = null), (e.mLevelSprite_3 = null), (e.star_layout = null), (e.star1 = null), (e.star2 = null), (e.star3 = null), (e.crow_layout = null), (e.crow1 = null), (e.crow2 = null), (e.crow3 = null), (e.mDiscSprite = null), (e.mElementFrames = null), (e.mRecommendNode = null), (e.mUseEnergyCallback = null), (e.mStartBtnClickCallback = null), (e.mItemInfo = null), (e.mHomePageAvatorClickCallback = null), (e.mAvatorClickCallback = null), (e.mHomePageShareGiftClickCallback = null), (e.mSkinClickCallback = null), (e.mShowSkinStoreCallback = null), (e.mShowSkinPieceCallback = null), (e.mHomePageDailyAtdcClickCallback = null), (e.mToHotMusicTabCallback = null), (e.mRightBtnPanelScript = null), (e.mGameClubVisibility = !1), (e.mUpdateTask = []), (e.mHomeMusicLibIcon = 'static_res/homepage/home_music_lib_icon'), (e.mHomeMusicLibIconPress = 'static_res/homepage/home_music_lib_icon_press'), (e.mHotMusicLibIcon = 'static_res/homepage/home_hot_music_icon'), (e.mHotMusicLibIconPress = 'static_res/homepage/home_hot_music_icon_press'), (e.mMoveVal = 46), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.enResLoad = function () {
                                var i = this;
                                this.enSpriteSetNull(),
                                    (this.mHomeMusicLibIcon = 'static_res/homepage/en/home_music_lib_icon_en'),
                                    (this.mHomeMusicLibIconPress = 'static_res/homepage/en/home_music_lib_icon_press_en'),
                                    (this.mHotMusicLibIcon = 'static_res/homepage/en/home_hot_music_icon_en'),
                                    (this.mHotMusicLibIconPress = 'static_res/homepage/en/home_hot_music_icon_press_en'),
                                    f.default.get(this.mHomeMusicLibIcon, function (e, t) {
                                        cc.isValid(i, !0) && (i.mMusicLibBtn.normalSprite = t);
                                    }),
                                    f.default.get(this.mHomeMusicLibIconPress, function (e, t) {
                                        cc.isValid(i, !0) && (i.mMusicLibBtn.pressedSprite = t);
                                    }),
                                    f.default.get(this.mHotMusicLibIcon, function (e, t) {
                                        cc.isValid(i, !0) && (i.mHotMusicBtn.normalSprite = t);
                                    }),
                                    f.default.get(this.mHotMusicLibIconPress, function (e, t) {
                                        cc.isValid(i, !0) && (i.mHotMusicBtn.pressedSprite = t);
                                    });
                            }),
                            (e.prototype.enSpriteSetNull = function () {
                                (this.mMusicLibBtn.getComponent(cc.Sprite).spriteFrame = null), (this.mHotMusicBtn.getComponent(cc.Sprite).spriteFrame = null);
                            }),
                            (e.prototype.onLoad = function () {
                                var t = this;
                                M.default.getInstance().isEnglish() && this.enResLoad(),
                                    (this.mItemInfo = n.MusicLevelDataLoader.getHomePageItemInfo()),
                                    this.adaptorUI(),
                                    (this.mEventStopCallback = function (e) {
                                        switch (e) {
                                            case cc.Node.EventType.TOUCH_START:
                                                t.mEventStopNode.active = !0;
                                                break;
                                            case cc.Node.EventType.TOUCH_END:
                                            case cc.Node.EventType.TOUCH_CANCEL:
                                                t.mEventStopNode.active = !1;
                                        }
                                    }),
                                    this.initEvent(),
                                    this.initIcons(),
                                    this.initCrossComponent(this.node),
                                    this.updateView(),
                                    this.initRecommendGame();
                            }),
                            (e.prototype.postUpdateTask = function (e) {
                                this.mUpdateTask.push(e);
                            }),
                            (e.prototype.update = function () {
                                0 < this.mUpdateTask.length && this.mUpdateTask.shift()();
                            }),
                            (e.prototype.updateView = function () {
                                this.mMusicNameLabel.string = this.mItemInfo.index + '.' + this.mItemInfo.musicName;
                                var e = r.default.Ins().getLevelRecordByMid(this.mItemInfo.musicId);
                                e ? (e.mBestStar <= 3 ? this.showStar(e.mBestStar) : this.showCrow(e.mBestStar - 3)) : this.showStar(0), this.initHotSongRedSpot(), this.refreshUnlockProgress(), this.onSkinChange();
                            }),
                            (e.prototype.onStart = function () {}),
                            (e.prototype.onStop = function () {}),
                            (e.prototype.onShow = function () {
                                v.default.i('[HomePagePrefab].onshow enter .... '), (this.mItemInfo = n.MusicLevelDataLoader.getHomePageItemInfo()), this.updateView();
                            }),
                            (e.prototype.showFightGuide = function () {
                                var t = this,
                                    e = !0;
                                if ('true' != T.default.read(C.default.HAS_WIN_FIGHT, '')) {
                                    var i = T.default.read(C.default.HAS_SHOW_GAME_ENTRA, '');
                                    if (A.StringUtil.isEmpty(i)) T.default.save(C.default.HAS_SHOW_GAME_ENTRA, 'true'), (e = !1);
                                    else {
                                        var o = T.default.read(C.default.GUIDE_TO_FIGHT_TIMES, '');
                                        if ('2' == o) e = !1;
                                        else if (!A.StringUtil.isEmpty(o)) {
                                            var n = T.default.read(C.default.LAST_GUIDE_TO_FIGHT_TIME, '');
                                            A.StringUtil.isEmpty(n) || (P.MGUser.getCurrentServerTime() - parseInt(n) < 864e5 && (e = !1));
                                        }
                                    }
                                } else e = !1;
                                e &&
                                    this.scheduleOnce(function () {
                                        t.hideNewTargetGuideFinger(),
                                            m.default.getInstance().showGuideFinger('NewPlayerTarget', 'HomePagePreF', 'GuideToChallenge', t.node, !1, function () {
                                                p.default.fire(h.default.HIDE_GUIDE_FINGER);
                                            }),
                                            T.default.save(C.default.LAST_GUIDE_TO_FIGHT_TIME, P.MGUser.getCurrentServerTime().toString());
                                        var e = T.default.read(C.default.GUIDE_TO_FIGHT_TIMES, '');
                                        A.StringUtil.isEmpty(e) ? T.default.save(C.default.GUIDE_TO_FIGHT_TIMES, '1') : '1' == e && T.default.save(C.default.GUIDE_TO_FIGHT_TIMES, '2');
                                    }, 1);
                            }),
                            (e.prototype.hideFightGuide = function () {
                                var e = T.default.read(C.default.GUIDE_TO_FIGHT_TIMES, '');
                                if (!A.StringUtil.isEmpty(e)) {
                                    var t = this.node.getChildByTag(m.default.FINGER_NODE_OTHER_TAG);
                                    t && (this.node.removeChildByTag(m.default.FINGER_NODE_OTHER_TAG), t.destroy());
                                }
                            }),
                            (e.prototype.onHide = function () {}),
                            (e.prototype.initIcons = function () {
                                var i = this;
                                g.default.load('prefab/MainpageRightBtnPanel', function (e, t) {
                                    t && (N.default.isHorizon() && ((t.scale = 1.25), console.warn('scale MainPageRightPanel to 1.25x')), (i.mRightBtnPanelScript = t.getComponent(_.default)), i.mRightBtnPanelScript.setEventStopCallback(i.mEventStopCallback), i.mRightBtnPanelScript.setToSharePageCallback(i.mHomePageShareGiftClickCallback), i.mRightBtnPanelScript.setToLottaryPageCallback(i.mToLottaryPageCallback), i.mRightBtnPanelScript.setToChosenMusicPageCallback(i.mToChosenMusicPageCallback), i.mRightBtnPanelScript.setToSkinPiecesPageCallback(i.mShowSkinPieceCallback), i.mRightBtnPanelScript.setToDailyPageCallback(i.mHomePageDailyAtdcClickCallback), i.mLeftIconPanel.addChild(t), i.invokeSlidePanelLoadFinish());
                                });
                            }),
                            (e.prototype.initCrossComponent = function (i) {
                                S.default.isQQ() &&
                                    g.default.load('prefab/gamebox/MainRcmdGame', function (e, t) {
                                        t ? i.addChild(t) : v.default.e('[--RCM--] 交叉营销挂件： 加载失败' + e);
                                    });
                            }),
                            (e.prototype.hideLeftIcon = function () {}),
                            (e.prototype.invokeSlidePanelLoadFinish = function () {
                                this.mOnSlidePanelLoadFinishCB && this.mOnSlidePanelLoadFinishCB();
                            }),
                            (e.prototype.setSlidePanelLoadFinish = function (e) {
                                this.mOnSlidePanelLoadFinishCB = e;
                            }),
                            (e.prototype.invokeLoadFinish = function () {
                                this.mOnLoadFinishCB && this.mOnLoadFinishCB();
                            }),
                            (e.prototype.refreshUnlockProgress = function () {
                                var i = this;
                                n.MusicLevelDataLoader.getNormalMusicUnlockInfo(function (e, t) {
                                    i.mUnlockProcess.string = 'Progress: ' + e + '/' + t;
                                });
                            }),
                            (e.prototype.onSkinChange = function () {
                                this.applySkin();
                                var e = r.default.Ins().getLevelRecordByMid(this.mItemInfo.musicId);
                                if ((e ? (e.mBestStar <= 3 ? this.showStar(e.mBestStar) : this.showCrow(e.mBestStar - 3)) : this.showStar(0), d.SUtil.ins().isLiuHai())) {
                                    var t = this.mMoveVal;
                                    d.SUtil.ins().isEqual19_9() && (t *= -1), (n = this.mDiscSprite.node.getComponent(cc.Sprite).spriteFrame.getRect()).width < 370 ? this.mDiscSprite.node.setContentSize(370, 370) : this.mDiscSprite.node.setContentSize(n.width, n.height);
                                    var i = this.mDiscSprite.node.getContentSize();
                                    if ((d.SUtil.ins().toTopByPixel(this.mDiscSprite, 447.8 - i.height / 2 + t), this.mStartBtn.normalSprite)) {
                                        var o = this.mStartBtn.normalSprite.getRect();
                                        d.SUtil.ins().toTopByPx(this.mStartBtn, 854 + (141 - o.height) / 2 + t);
                                    }
                                } else if (d.SUtil.ins().isQuanMian()) {
                                    (n = this.mDiscSprite.node.getComponent(cc.Sprite).spriteFrame.getRect()).width < 370 ? this.mDiscSprite.node.setContentSize(370, 370) : this.mDiscSprite.node.setContentSize(n.width, n.height);
                                    i = this.mDiscSprite.node.getContentSize();
                                    if ((d.SUtil.ins().toTopByPixel(this.mDiscSprite, 342.9 - i.height / 2 + 2 * this.mMoveVal), this.mStartBtn.normalSprite)) {
                                        o = this.mStartBtn.normalSprite.getRect();
                                        d.SUtil.ins().toTopByPx(this.mStartBtn, 782 + (141 - o.height) / 2 + this.mMoveVal);
                                    }
                                } else if (d.SUtil.ins().isPuTong()) {
                                    var n;
                                    (n = this.mDiscSprite.node.getComponent(cc.Sprite).spriteFrame.getRect().clone()).width < 525 && ((n.width *= 0.946), (n.height *= 0.946)), n.width < 350 ? this.mDiscSprite.node.setContentSize(350, 350) : this.mDiscSprite.node.setContentSize(n.width, n.height);
                                    i = this.mDiscSprite.node.getContentSize();
                                    if ((d.SUtil.ins().toTopByPixel(this.mDiscSprite, 315.9 - i.height / 2 + this.mMoveVal), this.mStartBtn.normalSprite)) {
                                        o = this.mStartBtn.normalSprite.getRect();
                                        d.SUtil.ins().toTopByPx(this.mStartBtn, 641 + (141 - o.height) / 2 + this.mMoveVal);
                                    }
                                }
                            }),
                            (e.prototype.initHotSongRedSpot = function () {
                                var o = this;
                                E.default.Ins().hasTaskUnTaken(function (e, t) {
                                    var i;
                                    e ? ((o.mHotMusicCountLabel.string = '碎片可领取'), (i = o.mHotMusicCountLabel.getComponent(cc.Animation)) && i.play('homepage_skin_bling')) : ((i = o.mHotMusicCountLabel.getComponent(cc.Animation)) && i.stop(), (o.mHotMusicCountLabel.node.opacity = 255), (o.mHotMusicCountLabel.string = M.default.getInstance().getLanguageByKey('label_text.bingxue_tangguo')));
                                });
                            }),
                            (e.prototype.updateAvatorRedSpot = function () {}),
                            (e.prototype.applySkin = function () {
                                var e = o.G.Ap.skinMgr.getCurrentSkinItem();
                                e && e.getSkinElementPainter().captureElement('GameEntranceScene', 'ExtraMiddleMainPagePrefb', this.node);
                            }),
                            (e.prototype.handleMutiTouch = function (e) {
                                var t = this;
                                e.on(
                                    cc.Node.EventType.TOUCH_START,
                                    function () {
                                        t.mEventStopNode.active = !0;
                                    },
                                    this,
                                ),
                                    e.on(
                                        cc.Node.EventType.TOUCH_CANCEL,
                                        function () {
                                            t.mEventStopNode.active = !1;
                                        },
                                        this,
                                    );
                            }),
                            (e.prototype.initEvent = function () {
                                var i = this;
                                this.mEventStopNode.on(cc.Node.EventType.TOUCH_END, function () {}, this),
                                    (this.mStartBtnClickCallback = new l.default(
                                        function () {
                                            T.default.save(C.default.OPEN_GAMEOVER_FROM, '0'), u.default.report(i.mItemInfo.musicId, u.default.ACTION_CLICK_HOME_START), i.onStartBtnClickCallback(), (i.mEventStopNode.active = !1);
                                        },
                                        function () {
                                            i.mEventStopNode.active = !1;
                                        },
                                    )),
                                    this.mStartBtn.node.on(cc.Node.EventType.TOUCH_END, this.mStartBtnClickCallback.click, this.mStartBtnClickCallback),
                                    this.handleMutiTouch(this.mStartBtn.node),
                                    (this.mAvatorClickCallback = new l.default(
                                        function () {
                                            i.avatorTouchCallback(), u.default.report(0, u.default.ACTION_CLICK_HOME_AVATOR), (i.mEventStopNode.active = !1), T.default.save(C.default.HAS_CLICK_HOME_AVATOR, 'true'), i.updateAvatorRedSpot();
                                        },
                                        function () {
                                            i.mEventStopNode.active = !1;
                                        },
                                    )),
                                    (this.mChallengeClickCallback = new l.default(
                                        function () {
                                            u.default.report(0, u.default.ACTION_CLICK_CHALLENGE_COMPETITION), i.mToChallengePageCallback && i.mToChallengePageCallback(), (i.mEventStopNode.active = !1);
                                        },
                                        function () {
                                            i.mEventStopNode.active = !1;
                                        },
                                    )),
                                    (this.mSkinClickCallback = new l.default(
                                        function () {
                                            f.default.get(i.mHotMusicLibIcon, function (e, t) {
                                                cc.isValid(i, !0) && (i.mHotMusicBtn.getComponent(cc.Sprite).spriteFrame = t);
                                            }),
                                                i.showSkinStorePage(),
                                                u.default.report(0, u.default.ACTION_CLICK_SKIN_STORE),
                                                (i.mEventStopNode.active = !1);
                                        },
                                        function () {
                                            i.mEventStopNode.active = !1;
                                        },
                                    )),
                                    this.mHotMusicBtn.node.on(cc.Node.EventType.TOUCH_END, this.mSkinClickCallback.click, this.mSkinClickCallback),
                                    this.handleMutiTouch(this.mHotMusicBtn.node),
                                    (this.mMusicLibClickCallback = new l.default(
                                        function () {
                                            f.default.get(i.mHomeMusicLibIcon, function (e, t) {
                                                cc.isValid(i, !0) && (i.mMusicLibBtn.getComponent(cc.Sprite).spriteFrame = t);
                                            }),
                                                i.mToMusicLibCallback && i.mToMusicLibCallback(),
                                                (i.mEventStopNode.active = !1);
                                        },
                                        function () {
                                            i.mEventStopNode.active = !1;
                                        },
                                    )),
                                    this.mMusicLibBtn.node.on(cc.Node.EventType.TOUCH_END, this.mMusicLibClickCallback.click, this.mMusicLibClickCallback),
                                    this.handleMutiTouch(this.mMusicLibBtn.node),
                                    (this.mHideRightPanelNode = this.node.getChildByName('HideRightBtnPanel')),
                                    this.mHideRightPanelNode.on(
                                        cc.Node.EventType.TOUCH_START,
                                        function (e) {
                                            i.mRightBtnPanelScript && i.mRightBtnPanelScript.hideRightPanelByClickAnyWhere();
                                        },
                                        this,
                                    ),
                                    this.mHideRightPanelNode._touchListener && this.mHideRightPanelNode._touchListener.setSwallowTouches(!1),
                                    this.registerEvent();
                            }),
                            (e.prototype.registerEvent = function () {
                                p.default.register(h.default.HIDE_GUIDE_FINGER, this.hideNewTargetGuideFinger, this), p.default.register(h.default.UPDATE_SKIN_PIECES_TIPS, this.initHotSongRedSpot, this), p.default.register(h.default.UPDATE_WX_VERSION_TOAST, this.showToastTips, this);
                            }),
                            (e.prototype.removeRegisterEvent = function () {
                                p.default.remove(h.default.UPDATE_SKIN_PIECES_TIPS, this.initHotSongRedSpot, this), p.default.remove(h.default.HIDE_GUIDE_FINGER, this.hideNewTargetGuideFinger, this), p.default.remove(h.default.UPDATE_WX_VERSION_TOAST, this.showToastTips, this);
                            }),
                            (e.prototype.showToastTips = function () {
                                var o = this;
                                g.default.load('prefab/ToastPrefab', function (e, t) {
                                    if (t) {
                                        var i = t.getComponent(y.default);
                                        i.showTips('微信版本过低，请升至最新版微信!', function () {
                                            t.destroy();
                                        }),
                                            i.setLong(!1),
                                            o.node.addChild(t);
                                    }
                                });
                            }),
                            (e.prototype.setToLottaryPageCallback = function (e) {
                                this.mToLottaryPageCallback = e;
                            }),
                            (e.prototype.setToChosenMusicPageCallback = function (e) {
                                this.mToChosenMusicPageCallback = e;
                            }),
                            (e.prototype.showSkinStorePage = function () {
                                this.mShowSkinStoreCallback && this.mShowSkinStoreCallback();
                            }),
                            (e.prototype.setShowSkinStoreCallback = function (e) {
                                this.mShowSkinStoreCallback = e;
                            }),
                            (e.prototype.setShowSkinPieceCallback = function (e) {
                                this.mShowSkinPieceCallback = e;
                            }),
                            (e.prototype.avatorTouchCallback = function () {
                                this.mHomePageAvatorClickCallback && this.mHomePageAvatorClickCallback();
                            }),
                            (e.prototype.setHomeAvatorClickCallback = function (e) {
                                this.mHomePageAvatorClickCallback = e;
                            }),
                            (e.prototype.setHomeShareGiftClickCallback = function (e) {
                                this.mHomePageShareGiftClickCallback = e;
                            }),
                            (e.prototype.dailyAttendanceTouchCallback = function () {
                                this.mHomePageDailyAtdcClickCallback && this.mHomePageDailyAtdcClickCallback();
                            }),
                            (e.prototype.setHomeDailyAtdcClickCallback = function (e) {
                                this.mHomePageDailyAtdcClickCallback = e;
                            }),
                            (e.prototype.setToHotMusicTabCallback = function (e) {
                                this.mToHotMusicTabCallback = e;
                            }),
                            (e.prototype.hotSongBtnClick = function () {
                                this.mToHotMusicTabCallback && this.mToHotMusicTabCallback();
                            }),
                            (e.prototype.setToChallengePageCallback = function (e) {
                                this.mToChallengePageCallback = e;
                            }),
                            (e.prototype.setToMusicLibCallback = function (e) {
                                this.mToMusicLibCallback = e;
                            }),
                            (e.prototype.setOnLoadFinishCB = function (e) {
                                this.mOnLoadFinishCB = e;
                            }),
                            (e.prototype.start = function () {
                                S.default.isCM() && (k.default.hasReportTimecost || (k.default.hasReportTimecost = !0));
                            }),
                            (e.prototype.initRecommendGame = function () {}),
                            (e.prototype.hideNewTargetGuideFinger = function () {
                                var e = this.node.getChildByTag(m.default.FINGER_NODE_TARGET_ICON_TAG);
                                e && (this.node.removeChildByTag(m.default.FINGER_NODE_TARGET_ICON_TAG), e.destroy());
                            }),
                            (e.prototype.checkTargetIcon = function () {
                                this.mRightBtnPanelScript && this.mRightBtnPanelScript.setIcons();
                            }),
                            (e.prototype.onStartBtnClickCallback = function () {
                                var t = this,
                                    e = L.ADScene.PLAY_GAME;
                                b.MGAdv.commercialBreak(e, L.QQ_ADV_TYPE.VIDEO_TYPE_PLAY_AGAIN, function (e) {
                                    t.mUseEnergyCallback && t.mUseEnergyCallback(!0);
                                });
                            }),
                            (e.prototype.startGame = function (e) {
                                (void 0 === e && (e = !0), o.G.Ap.state.reset(), e) && s.default.Ins().getPlugin(c.default.Plugin_Energy).decreaseEnergy(1);
                                (o.G.Ap.state.mission = new a.Mission(this.mItemInfo.id, this.mItemInfo.musicId, !1)), p.default.fire(h.default.LOAD_MUSIC, 3);
                            }),
                            (e.prototype.showStar = function (e) {
                                (this.star_layout.node.active = !0), (this.crow_layout.node.active = !1), this.loadStarIcon(this.star1, 0 < e), this.loadStarIcon(this.star2, 1 < e), this.loadStarIcon(this.star3, 2 < e);
                            }),
                            (e.prototype.showCrow = function (e) {
                                (this.star_layout.node.active = !1), (this.crow_layout.node.active = !0), this.loadCrownIcon(this.crow1, 0 < e), this.loadCrownIcon(this.crow2, 1 < e), this.loadCrownIcon(this.crow3, 2 < e);
                            }),
                            (e.prototype.loadStarIcon = function (e, t) {
                                var i = this.mElementFrames.getChildByName('starFrames');
                                if (i) {
                                    var o = i.getComponent(cc.Button);
                                    e.spriteFrame = t ? o.hoverSprite : o.normalSprite;
                                }
                            }),
                            (e.prototype.loadCrownIcon = function (e, t) {
                                var i = this.mElementFrames.getChildByName('crownFrames');
                                if (i) {
                                    var o = i.getComponent(cc.Button);
                                    e.spriteFrame = t ? o.hoverSprite : o.normalSprite;
                                }
                            }),
                            (e.prototype.onDestroy = function () {
                                console.log('[HomePage] onDestory'), this.mEventStopNode && (this.mEventStopNode.active = !1), I.default.destroy(), this.removeRegisterEvent();
                            }),
                            (e.prototype.getStartBtnPosition = function () {
                                var e = this.mStartBtn.node.parent.convertToWorldSpaceAR(this.mStartBtn.node.getPosition());
                                return this.node.convertToNodeSpaceAR(e);
                            }),
                            (e.prototype.setUseEnergyCallback = function (e) {
                                this.mUseEnergyCallback = e;
                            }),
                            (e.prototype.setVipPosition = function () {
                                S.default.isIOS(), (this.mLeftIconPanel.height = 481), d.SUtil.ins().isLiuHai() ? d.SUtil.ins().toTopByPx(this.mLeftIconPanel, 263) : d.SUtil.ins().isQuanMian() ? d.SUtil.ins().toTopByPx(this.mLeftIconPanel, 192) : d.SUtil.ins().isPuTong() && d.SUtil.ins().toTopByPx(this.mLeftIconPanel, 146);
                            }),
                            (e.prototype.adaptorUI = function () {
                                if ((this.setVipPosition(), d.SUtil.ins().isLiuHai())) {
                                    var e = this.mMoveVal;
                                    d.SUtil.ins().isEqual19_9() && (e *= -1), d.SUtil.ins().toTopByPx(this.mDiscSprite, 286 + e), d.SUtil.ins().toTopByPx(this.star_layout, 671 + e), d.SUtil.ins().toTopByPx(this.crow_layout, 677 + e), d.SUtil.ins().toTopByPx(this.mMusicNameLabel, 777 + e), d.SUtil.ins().toTopByPx(this.mStartBtn, 854 + e), d.SUtil.ins().toBottomByPx(this.mMusicLibBtn, 120), d.SUtil.ins().toBottomByPx(this.mHotMusicBtn, 120), d.SUtil.ins().toBottomByPx(this.mRecommendNode, 538), d.SUtil.ins().toTopByPx(this.mRightIconPanel, 229);
                                } else d.SUtil.ins().isQuanMian() ? (d.SUtil.ins().toTopByPx(this.mDiscSprite, 216 + this.mMoveVal), d.SUtil.ins().toTopByPx(this.star_layout, 604 + this.mMoveVal), d.SUtil.ins().toTopByPx(this.crow_layout, 610 + this.mMoveVal), d.SUtil.ins().toTopByPx(this.mMusicNameLabel, 716 + this.mMoveVal), d.SUtil.ins().toTopByPx(this.mStartBtn, 782 + this.mMoveVal), d.SUtil.ins().toBottomByPx(this.mMusicLibBtn, 90), d.SUtil.ins().toBottomByPx(this.mHotMusicBtn, 90), d.SUtil.ins().toBottomByPx(this.mRecommendNode, 499), d.SUtil.ins().toTopByPx(this.mRightIconPanel, 159)) : d.SUtil.ins().isShortScreen() ? (d.SUtil.ins().toTopByPx(this.mDiscSprite, 162), d.SUtil.ins().toTopByPx(this.star_layout, 535), d.SUtil.ins().toTopByPx(this.crow_layout, 535), d.SUtil.ins().toTopByPx(this.mMusicNameLabel, 611), d.SUtil.ins().toTopByPx(this.mStartBtn, 674), d.SUtil.ins().toTopByPx(this.mRightIconPanel, 129), d.SUtil.ins().toBottomByPx(this.mHotMusicBtn, -5), d.SUtil.ins().toBottomByPx(this.mMusicLibBtn, -5)) : d.SUtil.ins().isPuTong() && d.SUtil.ins().toTopByPx(this.mRightIconPanel, 129);
                            }),
                            (e.prototype.adapterAvator = function () {}),
                            (e.prototype.setMailTips = function (e) {}),
                            (e.prototype.checkVip = function () {}),
                            (e.prototype.onEnable = function () {
                                this.mGameClubVisibility = !0;
                            }),
                            (e.prototype.onDisable = function () {
                                this.mGameClubVisibility = !1;
                            }),
                            __decorate([w(cc.Label)], e.prototype, 'mMusicNameLabel', void 0),
                            __decorate([w(cc.Button)], e.prototype, 'mStartBtn', void 0),
                            __decorate([w(cc.Sprite)], e.prototype, 'mLevelSprite_1', void 0),
                            __decorate([w(cc.Sprite)], e.prototype, 'mLevelSprite_2', void 0),
                            __decorate([w(cc.Sprite)], e.prototype, 'mLevelSprite_3', void 0),
                            __decorate([w(cc.Layout)], e.prototype, 'star_layout', void 0),
                            __decorate([w(cc.Sprite)], e.prototype, 'star1', void 0),
                            __decorate([w(cc.Sprite)], e.prototype, 'star2', void 0),
                            __decorate([w(cc.Sprite)], e.prototype, 'star3', void 0),
                            __decorate([w(cc.Layout)], e.prototype, 'crow_layout', void 0),
                            __decorate([w(cc.Sprite)], e.prototype, 'crow1', void 0),
                            __decorate([w(cc.Sprite)], e.prototype, 'crow2', void 0),
                            __decorate([w(cc.Sprite)], e.prototype, 'crow3', void 0),
                            __decorate([w(cc.Sprite)], e.prototype, 'mDiscSprite', void 0),
                            __decorate([w(cc.Node)], e.prototype, 'mElementFrames', void 0),
                            __decorate([w(cc.Button)], e.prototype, 'mHotMusicBtn', void 0),
                            __decorate([w(cc.Label)], e.prototype, 'mHotMusicCountLabel', void 0),
                            __decorate([w(cc.Button)], e.prototype, 'mMusicLibBtn', void 0),
                            __decorate([w(cc.Label)], e.prototype, 'mCrownCountLabel', void 0),
                            __decorate([w(cc.Label)], e.prototype, 'mUnlockProcess', void 0),
                            __decorate([w(cc.Label)], e.prototype, 'mNewMusicCountLabel', void 0),
                            __decorate([w(cc.Node)], e.prototype, 'mLeftIconPanel', void 0),
                            __decorate([w(cc.Node)], e.prototype, 'mRightIconPanel', void 0),
                            __decorate([w(cc.Node)], e.prototype, 'mHideRightPanelNode', void 0),
                            __decorate([w(cc.Node)], e.prototype, 'mRecommendNode', void 0),
                            __decorate([w(cc.Node)], e.prototype, 'mEventStopNode', void 0),
                            __decorate([w(cc.Label)], e.prototype, 'mNewSongNameLabel', void 0),
                            (e = __decorate([D], e))
                        );
                    })(cc.Component);
                (i.default = B), cc._RF.pop();
            },
            {
                '../../../../modules/MGAdv/scripts/Logic/MGAdvDefine': 'MGAdvDefine',
                '../../../../modules/MGAdv/scripts/Logic/MGAdvEntrance': 'MGAdvEntrance',
                '../../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../../base/G': 'G',
                '../../../base/Log': 'Log',
                '../../../base/Startup': 'Startup',
                '../../../base/State': 'State',
                '../../../config/LSKey': 'LSKey',
                '../../../infoc/m_p2_Uaction': 'm_p2_Uaction',
                '../../../util/PU': 'PU',
                '../../../util/SUtil': 'SUtil',
                '../../../util/StringUtil': 'StringUtil',
                '../../Logic/EventBus': 'EventBus',
                '../../Logic/I18nManager': 'I18nManager',
                '../../Logic/NotifyEvent': 'NotifyEvent',
                '../../Logic/PlayerMgr': 'PlayerMgr',
                '../../Logic/Plugin/IPlugin': 'IPlugin',
                '../../Logic/Plugin/PluginMgr': 'PluginMgr',
                '../../Network/Protocol/StorageUtil': 'StorageUtil',
                '../../keypad/KeypadUtil': 'KeypadUtil',
                '../../skin/frag/SkinTaskMgr': 'SkinTaskMgr',
                '../../task/newguidance/NewGuidanceLoader': 'NewGuidanceLoader',
                '../GameClub': 'GameClub',
                '../MusicLevelDataLoader': 'MusicLevelDataLoader',
                './BasicTouchEvent': 'BasicTouchEvent',
                './ImgCache': 'ImgCache',
                './MainpageRightBtnPanel': 'MainpageRightBtnPanel',
                './PrefabMgr': 'PrefabMgr',
                './ToastPrefab': 'ToastPrefab',
            },
        ],
        HotMusicCMShareController: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '439c03+VopCXL2deTOclCsG', 'HotMusicCMShareController'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../MusicLevelDataLoader'),
                    n = e('../../../Network/Protocol/StorageUtil'),
                    a = e('../../../../base/Log'),
                    r = e('../../../Logic/SkinDataManager'),
                    s = (function () {
                        function e() {
                            (this.songKey = 'inviteForSongs'), (this.skinKey = 'inviteForSkins'), (this.songArray = []), (this.skinArray = []), (this.songArray = this.getItemArray()), (this.skinArray = this.getSkinItemArray());
                        }
                        return (
                            (e.Ins = function () {
                                return null == this.ins && (this.ins = new e()), this.ins;
                            }),
                            (e.prototype.saveItemInfo = function (t) {
                                var e = {};
                                (e.id = t.id),
                                    (e.musicId = t.musicId),
                                    -1 ==
                                        this.songArray.findIndex(function (e) {
                                            return e.id === t.id;
                                        }) && (this.songArray.push(e), n.default.save(this.songKey, JSON.stringify(this.songArray)));
                            }),
                            (e.prototype.saveSkinItemInfo = function (t) {
                                var e = {};
                                (e.name = t.name),
                                    (e.displayName = t.displayName),
                                    -1 ==
                                        this.skinArray.findIndex(function (e) {
                                            return e.name === t.name;
                                        }) && (this.skinArray.push(e), n.default.save(this.skinKey, JSON.stringify(this.skinArray)));
                            }),
                            (e.prototype.getItemArray = function () {
                                var e,
                                    t = n.default.read(this.songKey, ''),
                                    i = [];
                                if (t)
                                    try {
                                        e = JSON.parse(t);
                                    } catch (e) {
                                        return null;
                                    }
                                return (
                                    e &&
                                        Array.isArray(e) &&
                                        0 < e.length &&
                                        e.forEach(function (e) {
                                            var t = new o.ItemInfo();
                                            (t.id = e.id), (t.musicId = e.musicId), i.push(t);
                                        }),
                                    i
                                );
                            }),
                            (e.prototype.getSkinItemArray = function () {
                                var e,
                                    t = n.default.read(this.skinKey, ''),
                                    i = [];
                                if (t)
                                    try {
                                        e = JSON.parse(t);
                                    } catch (e) {
                                        return null;
                                    }
                                return (
                                    e &&
                                        Array.isArray(e) &&
                                        0 < e.length &&
                                        e.forEach(function (e) {
                                            var t = new r.SkinItemInfo();
                                            (t.name = e.name), (t.displayName = e.displayName), i.push(t);
                                        }),
                                    i
                                );
                            }),
                            (e.prototype.removeItemInfo = function (t) {
                                var e = this.songArray.findIndex(function (e) {
                                    return e.id === t.id;
                                });
                                return a.default.i('HotMusicCMShareController', this.songArray, t), -1 != e && (this.songArray.splice(e, 1), n.default.save(this.songKey, JSON.stringify(this.songArray)), !0);
                            }),
                            (e.prototype.removeSkinItemInfo = function (t) {
                                var e = this.skinArray.findIndex(function (e) {
                                    return e.name === t.name;
                                });
                                return a.default.i('HotMusicCMShareController', this.skinArray, t), -1 != e && (this.skinArray.splice(e, 1), n.default.save(this.skinKey, JSON.stringify(this.skinArray)), !0);
                            }),
                            e
                        );
                    })();
                (i.default = s), cc._RF.pop();
            },
            {
                '../../../../base/Log': 'Log',
                '../../../Logic/SkinDataManager': 'SkinDataManager',
                '../../../Network/Protocol/StorageUtil': 'StorageUtil',
                '../../MusicLevelDataLoader': 'MusicLevelDataLoader',
            },
        ],
        HotMusicCardItemPrefb: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '3b8a2gfgvlHKb8RUzh4JJGl', 'HotMusicCardItemPrefb'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../BasicTouchEvent'),
                    n = e('../../../../base/G'),
                    a = e('../../../../base/State'),
                    s = e('../../../Logic/EventBus'),
                    c = e('../../../Logic/NotifyEvent'),
                    l = e('../../MusicLevelDataLoader'),
                    u = e('../ImgCache'),
                    d = e('./InviteUnlockMusicCountdownUtil'),
                    p = e('../../../reward/ActivityBean'),
                    h = e('../../../Logic/MoneySystem'),
                    f = e('../../../Logic/Level'),
                    m = e('../../../../infoc/minigame_piano2_hotmusic'),
                    g = e('../../../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    _ = e('../../../../../modules/MGAppShare/scripts/MGShareUtil'),
                    y = e('../../../../config/LSKey'),
                    S = e('../../../Network/Protocol/StorageUtil'),
                    v = e('../../../../util/PU'),
                    I = e('../../../../../modules/MGAdv/scripts/Logic/MGAdvEntrance'),
                    T = e('../../../../../modules/MGAdv/scripts/Logic/MGAdvDefine'),
                    C = e('../../../common/BusinessUtil'),
                    E = e('../../../Logic/Plugin/UnlockProcessor'),
                    A = e('./HotMusicCMShareController'),
                    P = e('../../../Logic/I18nManager'),
                    k = e('../../../../util/StringUtil'),
                    r = cc._decorator,
                    M = r.ccclass,
                    L = r.property,
                    b = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.itemID = 0), (e.mNeedShowCountdown = !1), e;
                        }
                        var r;
                        return (
                            __extends(e, t),
                            ((r = e).prototype.onLoad = function () {
                                P.default.getInstance().isEnglish() ? null != this.mMusician && (this.mMusician.node.active = !1) : (null != this.mNormalMusicName && (this.mNormalMusicName.node.getComponent(cc.Widget).top = 30), null != this.mMusician && (this.mMusician.node.active = !0)), s.default.register(c.default.UPDATE_MUSIC_LIST_CURRENT_TIME, this.udpateCurrentTime, this), this.registerEvent();
                            }),
                            (e.prototype.setCtrl = function (e) {
                                this.mCtrl = e;
                            }),
                            (e.prototype.udpateCurrentTime = function (e, t) {
                                this.mCurrentTime = t[0];
                            }),
                            (e.prototype.registerEvent = function () {
                                var t = this,
                                    e = function () {
                                        t.mCtrl.setTouched(!1);
                                    };
                                (this.mSpecRankBtnCallback = new o.default(function () {
                                    t.mCtrl.getTouched() && t.mCtrl.getTouchUuid() != t.mSpecUnlockRankBtn.node.uuid ? t.mCtrl.setTouched(!1) : (t.mCtrl.setTouched(!1), t.rankBtnClickCallback());
                                })),
                                    v.default.isCM()
                                        ? (v.default.supportCMOnshare() ? (this.mSpecLockInviteBtn.node.active = !0) : (this.mSpecUnlockByVideoBtn.node.active = !0),
                                          (this.mSpecUnlockByVideoBtnCallback = new o.default(function () {
                                              t.mCtrl.getTouched() && t.mCtrl.getTouchUuid() != t.mSpecUnlockByVideoBtn.node.uuid ? t.mCtrl.setTouched(!1) : (t.mCtrl.setTouched(!1), t.doUnlockByVideo(), m.default.report(m.default.ACTION_CLICK_UNLOCK_BY_VIDEO, 0, t.mItemInfo.musicId, t.mItemInfo.index + '.' + t.mItemInfo.musicName, t.getMusicTpye()));
                                          })),
                                          this.mSpecUnlockByVideoBtn.node.on(
                                              cc.Node.EventType.TOUCH_START,
                                              function () {
                                                  t.mCtrl.setTouched(!0, t.mSpecUnlockByVideoBtn.node.uuid);
                                              },
                                              this,
                                          ),
                                          this.setTouchCb(this.mSpecUnlockByVideoBtn, this.mSpecUnlockByVideoBtnCallback),
                                          this.mSpecUnlockByVideoBtn.node.on(cc.Node.EventType.TOUCH_CANCEL, e, this))
                                        : ((this.mNormalRankBtnCallback = new o.default(function () {
                                              t.mCtrl.getTouched() && t.mCtrl.getTouchUuid() != t.mNormalRankIcon.node.uuid ? t.mCtrl.setTouched(!1) : (t.mCtrl.setTouched(!1), t.rankBtnClickCallback());
                                          })),
                                          this.setTouchCb(this.mNormalRankIcon, this.mNormalRankBtnCallback),
                                          this.setTouchCb(this.mSpecUnlockRankBtn, this.mSpecRankBtnCallback),
                                          this.mNormalRankIcon.node.on(cc.Node.EventType.TOUCH_START, function () {}, this),
                                          this.mNormalRankIcon.node.on(
                                              cc.Node.EventType.TOUCH_CANCEL,
                                              function () {
                                                  t.mCtrl.setTouched(!0, t.mNormalRankIcon.node.uuid);
                                              },
                                              this,
                                          ),
                                          this.mSpecUnlockRankBtn.node.on(
                                              cc.Node.EventType.TOUCH_START,
                                              function () {
                                                  t.mCtrl.setTouched(!0, t.mSpecUnlockRankBtn.node.uuid);
                                              },
                                              this,
                                          ),
                                          this.mSpecUnlockRankBtn.node.on(cc.Node.EventType.TOUCH_CANCEL, e, this),
                                          (this.mSpecUnlockBtnCallback = new o.default(function () {
                                              t.mCtrl.getTouched() && t.mCtrl.getTouchUuid() != t.mSpecUnlockBtn.node.uuid ? t.mCtrl.setTouched(!1) : (t.mCtrl.setTouched(!1), t.unlockBtnClickCallback());
                                          })),
                                          v.default.supportCMOnshare() ? (this.mSpecLockInviteBtn.node.active = !1) : (this.mSpecUnlockByVideoBtn.node.active = !1)),
                                    this.setTouchCb(this.mSpeclockDiamondBuyBtn, this.mSpecUnlockBtnCallback),
                                    this.mSpecUnlockBtn.node.on(
                                        cc.Node.EventType.TOUCH_START,
                                        function () {
                                            t.mCtrl.setTouched(!0, t.mSpecUnlockBtn.node.uuid);
                                        },
                                        this,
                                    ),
                                    this.setTouchCb(this.mSpecUnlockBtn, this.mSpecUnlockBtnCallback),
                                    this.mSpecUnlockBtn.node.on(cc.Node.EventType.TOUCH_CANCEL, e, this),
                                    (this.mNormalTryBtnCallback = new o.default(function () {
                                        t.mCtrl.getTouched() && t.mCtrl.getTouchUuid() != t.mNormalTryBtn.node.uuid ? t.mCtrl.setTouched(!1) : (t.mCtrl.setTouched(!1), t.tryBtnClickCallback());
                                    })),
                                    this.setTouchCb(this.mNormalTryBtn, this.mNormalTryBtnCallback),
                                    (this.mSpecTryBtnCallback = new o.default(function () {
                                        t.mCtrl.getTouched() && t.mCtrl.getTouchUuid() != t.mSpecLockTryBtn.node.uuid ? t.mCtrl.setTouched(!1) : (t.mCtrl.setTouched(!1), t.tryBtnClickCallback());
                                    })),
                                    this.setTouchCb(this.mSpecLockTryBtn, this.mSpecTryBtnCallback),
                                    this.mNormalTryBtn.node.on(
                                        cc.Node.EventType.TOUCH_START,
                                        function () {
                                            t.mCtrl.setTouched(!0, t.mNormalTryBtn.node.uuid);
                                        },
                                        this,
                                    ),
                                    this.mNormalTryBtn.node.on(cc.Node.EventType.TOUCH_CANCEL, e, this),
                                    (this.mSpecUnLockTryBtnCallback = new o.default(function () {
                                        t.mCtrl.getTouched() && t.mCtrl.getTouchUuid() != t.mSpecUnlockTryBtn.node.uuid ? t.mCtrl.setTouched(!1) : (t.mCtrl.setTouched(!1), t.tryBtnClickCallback());
                                    })),
                                    this.mSpecUnlockTryBtn.node.on(
                                        cc.Node.EventType.TOUCH_START,
                                        function () {
                                            t.mCtrl.setTouched(!0, t.mSpecUnlockTryBtn.node.uuid);
                                        },
                                        this,
                                    ),
                                    this.setTouchCb(this.mSpecUnlockTryBtn, this.mSpecUnLockTryBtnCallback),
                                    this.mSpecUnlockTryBtn.node.on(cc.Node.EventType.TOUCH_CANCEL, e, this),
                                    this.mSpecLockTryBtn.node.on(
                                        cc.Node.EventType.TOUCH_START,
                                        function () {
                                            t.mCtrl.setTouched(!0, t.mSpecLockTryBtn.node.uuid);
                                        },
                                        this,
                                    ),
                                    this.mSpecLockTryBtn.node.on(cc.Node.EventType.TOUCH_CANCEL, e, this),
                                    (this.mNormalStartBtnCallback = new o.default(function () {
                                        t.mCtrl.getTouched() && t.mCtrl.getTouchUuid() != t.mNormalStartBtn.node.uuid ? t.mCtrl.setTouched(!1) : (t.mCtrl.setTouched(!1), t.startMusicCallback());
                                    })),
                                    this.setTouchCb(this.mNormalStartBtn, this.mNormalStartBtnCallback),
                                    (this.mSpecStartBtnCallback = new o.default(function () {
                                        t.mCtrl.getTouched() && t.mCtrl.getTouchUuid() != t.mSpecUnlockStartBtn.node.uuid ? t.mCtrl.setTouched(!1) : (t.mCtrl.setTouched(!1), t.startMusicCallback());
                                    })),
                                    this.setTouchCb(this.mSpecUnlockStartBtn, this.mSpecStartBtnCallback),
                                    this.mNormalStartBtn.node.on(
                                        cc.Node.EventType.TOUCH_START,
                                        function () {
                                            t.mCtrl.setTouched(!0, t.mNormalStartBtn.node.uuid);
                                        },
                                        this,
                                    ),
                                    this.mNormalStartBtn.node.on(cc.Node.EventType.TOUCH_CANCEL, e, this),
                                    this.mSpecUnlockStartBtn.node.on(
                                        cc.Node.EventType.TOUCH_START,
                                        function () {
                                            t.mCtrl.setTouched(!0, t.mSpecUnlockStartBtn.node.uuid);
                                        },
                                        this,
                                    ),
                                    this.mSpecUnlockStartBtn.node.on(cc.Node.EventType.TOUCH_CANCEL, e, this),
                                    (this.mSpecInviteCallback = new o.default(function () {
                                        t.mCtrl.getTouched() && t.mCtrl.getTouchUuid() != t.mSpecLockInviteBtn.node.uuid ? t.mCtrl.setTouched(!1) : (t.mCtrl.setTouched(!1), v.default.supportCMOnshare() ? t.inviteCMFriendBtnClickCallback() : t.inviteFriendBtnClickCallback());
                                    })),
                                    this.setTouchCb(this.mSpecLockInviteBtn, this.mSpecInviteCallback),
                                    this.mSpecLockInviteBtn.node.on(
                                        cc.Node.EventType.TOUCH_START,
                                        function () {
                                            t.mCtrl.setTouched(!0, t.mSpecLockInviteBtn.node.uuid);
                                        },
                                        this,
                                    ),
                                    this.mSpecLockInviteBtn.node.on(cc.Node.EventType.TOUCH_CANCEL, e, this),
                                    this.mSpecLockInviteBtn.node.on(cc.Node.EventType.TOUCH_END, e, this),
                                    (this.mUnlockBtnCallback = new o.default(function () {
                                        t.mCtrl.getTouched() && t.mCtrl.getTouchUuid() != t.mNormalUnlockBtn.node.uuid ? t.mCtrl.setTouched(!1) : (t.mCtrl.setTouched(!1), t.unlockBtnClickCallback());
                                    })),
                                    this.setTouchCb(this.mNormalUnlockBtn, this.mUnlockBtnCallback),
                                    this.mNormalUnlockBtn.node.on(
                                        cc.Node.EventType.TOUCH_START,
                                        function (e) {
                                            t.mCtrl.setTouched(!0, t.mNormalUnlockBtn.node.uuid);
                                        },
                                        this,
                                    ),
                                    this.mNormalUnlockBtn.node.on(cc.Node.EventType.TOUCH_CANCEL, e, this);
                            }),
                            (e.prototype.doUnlockByVideo = function () {
                                var t = this;
                                if (v.default.isWeb()) E.default.unlockByVideo(this.mItemInfo.id, this.mItemInfo.musicId);
                                else {
                                    var e = T.ADScene.SOURCE_HOTMUSIC_UNLOCK;
                                    I.MGAdv.show(e, T.QQ_ADV_TYPE.VIDEO_TYPE_HOTMUSIC_UNLOCK, function (e) {
                                        switch (e) {
                                            case T.ADStat.NOT_NETWORK:
                                                C.default.getIns().showToastTips('No network available', t.node, null, !0);
                                                break;
                                            case T.ADStat.SHOW_SUCCESS_CLOSE:
                                                E.default.unlockByVideo(t.mItemInfo.id, t.mItemInfo.musicId);
                                                break;
                                            case T.ADStat.SHOW_NOT_ENED_CLOSE:
                                                break;
                                            case T.ADStat.SHOW_GET_AD_FAILED:
                                                C.default.getIns().showToastTips('No video ads available', t.node, null, !0);
                                        }
                                    });
                                }
                            }),
                            (e.prototype.setTouchCb = function (e, t) {
                                if (e && t) {
                                    var i = e instanceof cc.Component ? e.node : e;
                                    i && i.on(cc.Node.EventType.TOUCH_END, t.click, t);
                                }
                            }),
                            (e.prototype.startMusicCallback = function () {
                                if ((m.default.report(m.default.ACTION_CLICK_START, 0, this.mItemInfo.musicId, this.mItemInfo.index + '.' + this.mItemInfo.musicName, this.getMusicTpye()), this.mItemInfo.mGameComsume.spendType == l.GameConsume.SPENDTYPE_ENERGY)) {
                                    if (h.MoneySystem.getHpCount() < this.mItemInfo.mGameComsume.spendEnergy) return s.default.fire(c.default.SHOW_TEST_MONEY_NOT_ENOUGH_TOAST, '体力', '开始'), void s.default.fire(c.default.HIDE_HOMEPAGE_EVENT_TOP_MASK);
                                } else if (this.mItemInfo.mGameComsume.spendType == l.GameConsume.SPENDTYPE_DIAMOND) {
                                    if (h.MoneySystem.getDiamondCount() < this.mItemInfo.mGameComsume.spendDiamond) return s.default.fire(c.default.SHOW_TEST_MONEY_NOT_ENOUGH_TOAST, '钻石', '开始'), void s.default.fire(c.default.HIDE_HOMEPAGE_EVENT_TOP_MASK);
                                } else if (this.mItemInfo.mGameComsume.spendType == l.GameConsume.SPENDTYPE_GOLD && h.MoneySystem.getGoldCount() < this.mItemInfo.mGameComsume.spendGold) return s.default.fire(c.default.SHOW_TEST_MONEY_NOT_ENOUGH_TOAST, '金币', '开始'), void s.default.fire(c.default.HIDE_HOMEPAGE_EVENT_TOP_MASK);
                                var e = cc.director.getWinSize().height,
                                    t = this.node.parent.convertToWorldSpaceAR(this.node.getPosition());
                                this.mItemInfo.mGameComsume.unlockActive ? ((t.y = t.y - this.node.height + this.mSpecUnlockStartBtn.node.height / 2 + 22 - (e - 1280) / 2), (t.x = t.x + this.node.width / 2 - this.mSpecUnlockStartBtn.node.width / 2)) : ((t.y = t.y - this.node.height + this.mNormalStartBtn.node.height / 2 + 22 - (e - 1280) / 2), (t.x = t.x + this.node.width / 2 - this.mNormalStartBtn.node.width / 2)), this.startMusic();
                            }),
                            (e.prototype.startMusic = function () {
                                S.default.save(y.default.OPEN_GAMEOVER_FROM, '2'), n.G.Ap.state.reset(), (n.G.Ap.state.mission = new a.Mission(this.mItemInfo.id, this.mItemInfo.musicId, !1)), s.default.fire(c.default.LOAD_MUSIC, 1, this.mItemInfo.mGameComsume);
                            }),
                            (e.prototype.rankBtnClickCallback = function () {}),
                            (e.prototype.tryBtnClickCallback = function () {
                                if (this.mTryPlayPositionCallback) {
                                    if ((m.default.report(m.default.ACTION_CLICK_TRY, 0, this.mItemInfo.musicId, this.mItemInfo.index + '.' + this.mItemInfo.musicName, this.getMusicTpye()), this.mItemInfo.mGameComsume.testType == l.GameConsume.TESTTYPE_ENERGY)) {
                                        if (h.MoneySystem.getHpCount() < this.mItemInfo.mGameComsume.testEnergy) return void s.default.fire(c.default.SHOW_TEST_MONEY_NOT_ENOUGH_TOAST, '体力', '试玩');
                                    } else if (this.mItemInfo.mGameComsume.testType == l.GameConsume.TESTTYPE_GOLD) {
                                        if (h.MoneySystem.getGoldCount() < this.mItemInfo.mGameComsume.testGold) return void s.default.fire(c.default.SHOW_TEST_MONEY_NOT_ENOUGH_TOAST, '金币', '试玩');
                                    } else if (this.mItemInfo.mGameComsume.testType == l.GameConsume.TESTTYPE_DIAMOND && h.MoneySystem.getDiamondCount() < this.mItemInfo.mGameComsume.testDiamond) return void s.default.fire(c.default.SHOW_TEST_MONEY_NOT_ENOUGH_TOAST, '金币', '试玩');
                                    this.mTryPlayPositionCallback(this.mItemInfo);
                                }
                            }),
                            (e.prototype.setTryPositionCallback = function (e) {
                                this.mTryPlayPositionCallback = e;
                            }),
                            (e.prototype.setRememberPosCallback = function (e) {
                                this.mRememberPositionCallback = e;
                            }),
                            (e.prototype.unlockBtnClickCallback = function () {
                                var e, t;
                                this.mRememberPositionCallback && this.mRememberPositionCallback();
                                var i = Math.ceil(this.mItemInfo.unlockType.unlockValue);
                                if (this.mItemInfo.unlockType.unlockType == f.eUnlockType.UNLOCK_TYPE_GOLD) {
                                    if (((e = '金币'), (t = m.default.ACTION_CLICK_GOLD_UNLOCK), m.default.report(t, 0, this.mItemInfo.musicId, this.mItemInfo.index + '.' + this.mItemInfo.musicName, this.getMusicTpye()), h.MoneySystem.getGoldCount() < i)) return void s.default.fire(c.default.SHOW_TEST_MONEY_NOT_ENOUGH_TOAST, '金币', '解锁');
                                } else if (this.mItemInfo.unlockType.unlockType == f.eUnlockType.UNLOCK_TYPE_DIAMOND && ((e = '钻石'), (t = m.default.ACTION_CLICK_DIAMOND_UNLOCK), m.default.report(t, 0, this.mItemInfo.musicId, this.mItemInfo.index + '.' + this.mItemInfo.musicName, this.getMusicTpye()), h.MoneySystem.getDiamondCount() < i)) return m.default.report(m.default.ACTION_SHOW_BUY_DIAMOND_DIALOG, 0, this.mItemInfo.musicId, this.mItemInfo.index + '.' + this.mItemInfo.musicName, this.getMusicTpye()), void s.default.fire(c.default.SHOW_TEST_MONEY_NOT_ENOUGH_TOAST, '钻石', '解锁');
                                s.default.fire(c.default.SHOW_MUSIC_LIB_UNLOCK_DIALOG, {
                                    type: e,
                                    unlockValue: i,
                                    musicName: this.mItemInfo.musicName,
                                    musicId: this.mItemInfo.musicId,
                                    musicType: this.getMusicTpye(),
                                    levelId: this.mItemInfo.id,
                                });
                            }),
                            (e.prototype.getMusicTpye = function () {
                                return this.mItemInfo.mGameComsume.unlockActive ? m.default.TYPE_ACTIVITY : m.default.TYPE_HOT;
                            }),
                            (e.prototype.inviteFriendBtnClickCallback = function () {
                                var t = this;
                                m.default.report(m.default.ACTION_CLICK_SHARE, 0, this.mItemInfo.musicId, this.mItemInfo.index + '.' + this.mItemInfo.musicName, this.getMusicTpye()),
                                    g.MGUser.getUserLoginInfo({
                                        complete: function (e) {
                                            e &&
                                                _.MGShareUtils.shareForInviteSong(e.playerId, p.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SONG + t.mItemInfo.musicId, t.mItemInfo.musicId, t.mItemInfo.musicName, t.mItemInfo.id, function (e) {
                                                    e && s.default.fire(c.default.SHARE_HOME_SHOW_INVITE_TIPS);
                                                }),
                                                s.default.fire(c.default.INVITE_SONG_LOOPER_START);
                                        },
                                    });
                            }),
                            (e.prototype.inviteCMFriendBtnClickCallback = function () {
                                A.default.Ins().saveItemInfo(this.mItemInfo),
                                    _.MGShareUtils.shareForInviteSong('playerId', p.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SONG + '_' + this.mItemInfo.musicId, this.mItemInfo.musicId, this.mItemInfo.musicName, this.mItemInfo.id, function (e) {
                                        e && s.default.fire(c.default.SHARE_HOME_SHOW_INVITE_TIPS);
                                    });
                            }),
                            (e.prototype.showExceptMore = function () {
                                (this.mNormalPanel.node.active = !1), (this.mSpecUnlockPanel.node.active = !1), (this.mSpecLockPanle.node.active = !1), (this.mExceptMoreLabel.node.x = 0);
                            }),
                            (e.prototype.hideException = function () {
                                this.mExceptMoreLabel.node.x = 5e3;
                            }),
                            (e.prototype.setData = function (e, t, i) {
                                if (((this.mCurrentTime = i), !(this.mItemInfo = e))) throw ((this.mNeedShowCountdown = !1), new Error('item info undefine'));
                                if (e.id == r.EXCEPT_MORE_ID) return (this.mNeedShowCountdown = !1), this.showExceptMore(), void (this.itemID = t);
                                if ((this.hideException(), e.mGameComsume.unlockActive && e.mGameComsume.isActive(d.default.Ins().getCurrentTime()))) {
                                    if (((this.mSpeclockSongName.string = e.musicName), v.default.supportCMOnshare() ? (this.mSpeclockSongDesc.string = P.default.getInstance().getLanguageByKey('label_text.music_invite_rule')) : (this.mSpeclockSongDesc.string = '看1次视频即可免费解锁'), (this.mSpecUnlockSongDesc.string = e.musician), (this.mSpecUnlockSongName.string = e.musicName), (this.mSpecUnlockRankText.string = t + 1 + ''), (this.mSpeclockRankText.string = t + 1 + ''), e.mGameComsume.isActive(d.default.Ins().getCurrentTime())))
                                        if (e.isLocked) (this.mNeedShowCountdown = !0), (this.mSpecLockPanle.node.active = !0), (this.mNormalPanel.node.active = !1), (this.mSpecUnlockPanel.node.active = !1), (this.mSpecLockTryBtn.node.active = !1), (this.mSpeclockDiamondBuyBtn.node.active = !1), v.default.supportCMOnshare() || (this.mSpecLockInviteBtn.node.active = !1);
                                        else {
                                            (this.mNeedShowCountdown = !1), (this.mSpecLockPanle.node.active = !1), (this.mNormalPanel.node.active = !1), (this.mSpecUnlockPanel.node.active = !0), v.default.isCM() && (this.mSpecUnlockRankBtn.node.active = !1);
                                            var o = void 0,
                                                n = void 0;
                                            e.mGameComsume.spendType == l.GameConsume.SPENDTYPE_DEFAULT ? ((o = '/musiclist/energy_icon'), (n = e.mGameComsume.testGold)) : e.mGameComsume.spendType == l.GameConsume.SPENDTYPE_ENERGY ? ((o = '/musiclist/energy_icon'), (n = e.mGameComsume.spendEnergy)) : e.mGameComsume.spendType == l.GameConsume.SPENDTYPE_DIAMOND ? ((o = '/musiclist/diamond_icon'), (n = e.mGameComsume.spendDiamond)) : e.mGameComsume.spendType == l.GameConsume.SPENDTYPE_GOLD && ((o = '/musiclist/gold_icon'), (n = e.mGameComsume.spendGold)),
                                                u.default.get(
                                                    o,
                                                    function (e, t) {
                                                        cc.isValid(this.node) && (this.mSpecUnlockPlayExpenseIcon.spriteFrame = t);
                                                    }.bind(this),
                                                ),
                                                (this.mSpecUnlockPlayExpenseLabel.string = n + ' ' + P.default.getInstance().getLanguageByKey('label_text.music_start')),
                                                this.setStarOrCrownSpriteFrame(e.bestStar, !0);
                                        }
                                } else if (((this.mNeedShowCountdown = !1), (this.mSpecLockPanle.node.active = !1), (this.mNormalPanel.node.active = !0), (this.mSpecUnlockPanel.node.active = !1), (this.mNormalMusicIndex.string = t + 1 + ''), (this.mNormalMusicName.string = e.musicName), (this.mMusician.string = e.musician), e.isLocked)) (this.mNormalStarPanel.active = !1), (this.mNormalCrownPanel.active = !1), (this.mNormalStartBtn.node.active = !1), (this.mNormalRankIcon.node.active = !1), (this.mNormalTryBtn.node.active = !0), (this.mNormalUnlockBtn.node.active = !0), (this.mNormalLockIcon.active = !v.default.isCM()), this.SetBuyBtnText(e, this.mNormalUnlockExpenseIcon, this.mNormalUnlockExpenseLabel), this.SetTryPlayBtn(e, this.mNormalTryExpenseIcon, this.mNormalTryExpenseLabel);
                                else {
                                    (this.mNormalStarPanel.active = !0), (this.mNormalCrownPanel.active = !0), (this.mNormalStartBtn.node.active = !0), (this.mNormalRankIcon.node.active = !v.default.isCM()), (this.mNormalTryBtn.node.active = !1), (this.mNormalUnlockBtn.node.active = !1), (this.mNormalLockIcon.active = !1);
                                    o = void 0;
                                    var a = void 0;
                                    e.mGameComsume.spendType == l.GameConsume.SPENDTYPE_ENERGY ? ((o = '/musiclist/energy_icon'), (a = e.mGameComsume.spendEnergy)) : e.mGameComsume.spendType == l.GameConsume.SPENDTYPE_GOLD ? ((o = '/musiclist/gold_icon'), (a = e.mGameComsume.spendGold)) : e.mGameComsume.spendType == l.GameConsume.SPENDTYPE_DIAMOND && ((o = '/musiclist/diamond_icon'), (a = e.mGameComsume.spendDiamond)),
                                        u.default.get(
                                            o,
                                            function (e, t) {
                                                cc.isValid(this.node) && (this.mNormalStartExpenseIcon.spriteFrame = t);
                                            }.bind(this),
                                        ),
                                        (this.mNormalStartExpenseLabel.string = a + ' ' + P.default.getInstance().getLanguageByKey('label_text.music_start')),
                                        this.setStarOrCrownSpriteFrame(e.bestStar, !1);
                                }
                                this.itemID = t;
                            }),
                            (e.prototype.SetBuyBtnText = function (e, i, t) {
                                var o;
                                e.unlockType.unlockType == f.eUnlockType.UNLOCK_TYPE_GOLD ? (o = '/musiclist/gold_icon') : e.unlockType.unlockType == f.eUnlockType.UNLOCK_TYPE_DIAMOND && (o = '/musiclist/diamond_icon'),
                                    u.default.get(
                                        o,
                                        function (e, t) {
                                            cc.isValid(this.node) && (i.spriteFrame = t);
                                        }.bind(this),
                                    ),
                                    (t.string = Math.ceil(e.unlockType.unlockValue) + ' ' + P.default.getInstance().getLanguageByKey('label_text.music_unlock'));
                            }),
                            (e.prototype.SetTryPlayBtn = function (e, t, i) {
                                var o, n;
                                e.mGameComsume.testType == l.GameConsume.TESTTYPE_GOLD ? ((o = '/musiclist/gold_icon'), (n = e.mGameComsume.testGold)) : e.mGameComsume.testType == l.GameConsume.TESTTYPE_DIAMOND ? ((o = '/musiclist/diamond_icon'), (n = e.mGameComsume.testDiamond)) : e.mGameComsume.testType == l.GameConsume.TESTTYPE_ENERGY ? ((o = '/musiclist/energy_icon'), (n = e.mGameComsume.testEnergy)) : e.mGameComsume.testType == l.GameConsume.TESTTYPE_DEFAULT && ((o = '/musiclist/energy_icon'), (n = e.mGameComsume.testGold)), u.default.get2(o, t), (i.string = n + P.default.getInstance().getLanguageByKey('label_text.music_trial'));
                            }),
                            (e.prototype.setStarOrCrownSpriteFrame = function (e, t) {
                                var i = this;
                                if ((t ? (3 < e ? ((this.mSpecUnlockStarPanel.active = !1), (this.mSpecUnlockCrownPanel.active = !0)) : ((this.mSpecUnlockStarPanel.active = !0), (this.mSpecUnlockCrownPanel.active = !1))) : 3 < e ? ((this.mNormalStarPanel.active = !1), (this.mNormalCrownPanel.active = !0)) : ((this.mNormalStarPanel.active = !0), (this.mNormalCrownPanel.active = !1)), t))
                                    switch (e) {
                                        case 0:
                                            u.default.get(
                                                '/musiclist/music_list_star_unget',
                                                function (e, t) {
                                                    cc.isValid(this.node) && ((this.mSpecUnlockStar1.spriteFrame = t), (this.mSpecUnlockStar2.spriteFrame = t), (this.mSpecUnlockStar3.spriteFrame = t));
                                                }.bind(this),
                                            );
                                            break;
                                        case 1:
                                            u.default.get(
                                                '/musiclist/music_list_star_get',
                                                function (e, t) {
                                                    cc.isValid(this.node) && (this.mSpecUnlockStar1.spriteFrame = t);
                                                }.bind(this),
                                            ),
                                                u.default.get(
                                                    '/musiclist/music_list_star_unget',
                                                    function (e, t) {
                                                        cc.isValid(this.node) && ((this.mSpecUnlockStar2.spriteFrame = t), (this.mSpecUnlockStar3.spriteFrame = t));
                                                    }.bind(this),
                                                );
                                            break;
                                        case 2:
                                            u.default.get(
                                                '/musiclist/music_list_star_get',
                                                function (e, t) {
                                                    cc.isValid(this.node) && ((this.mSpecUnlockStar1.spriteFrame = t), (this.mSpecUnlockStar2.spriteFrame = t));
                                                }.bind(this),
                                            ),
                                                u.default.get(
                                                    '/musiclist/music_list_star_unget',
                                                    function (e, t) {
                                                        cc.isValid(this.node) && (this.mSpecUnlockStar3.spriteFrame = t);
                                                    }.bind(this),
                                                );
                                            break;
                                        case 3:
                                            u.default.get(
                                                '/musiclist/music_list_star_get',
                                                function (e, t) {
                                                    cc.isValid(this.node) && ((this.mSpecUnlockStar1.spriteFrame = t), (this.mSpecUnlockStar2.spriteFrame = t), (this.mSpecUnlockStar3.spriteFrame = t));
                                                }.bind(this),
                                            );
                                            break;
                                        case 4:
                                            u.default.get(
                                                '/musiclist/music_list_crown_get',
                                                function (e, t) {
                                                    cc.isValid(this.node) && (this.mSpecUnlockCrown1.spriteFrame = t);
                                                }.bind(this),
                                            ),
                                                u.default.get(
                                                    '/musiclist/music_list_crown_unget',
                                                    function (e, t) {
                                                        cc.isValid(this.node) && ((this.mSpecUnlockCrown2.spriteFrame = t), (this.mSpecUnlockCrown3.spriteFrame = t));
                                                    }.bind(this),
                                                );
                                            break;
                                        case 5:
                                            u.default.get(
                                                '/musiclist/music_list_crown_get',
                                                function (e, t) {
                                                    cc.isValid(this.node) && ((this.mSpecUnlockCrown1.spriteFrame = t), (this.mSpecUnlockCrown2.spriteFrame = t));
                                                }.bind(this),
                                            ),
                                                u.default.get(
                                                    '/musiclist/music_list_crown_unget',
                                                    function (e, t) {
                                                        cc.isValid(this.node) && (this.mSpecUnlockCrown3.spriteFrame = t);
                                                    }.bind(this),
                                                );
                                            break;
                                        case 6:
                                            u.default.get(
                                                '/musiclist/music_list_crown_get',
                                                function (e, t) {
                                                    cc.isValid(this.node) && ((this.mSpecUnlockCrown1.spriteFrame = t), (this.mSpecUnlockCrown2.spriteFrame = t), (this.mSpecUnlockCrown3.spriteFrame = t));
                                                }.bind(this),
                                            );
                                    }
                                else
                                    switch (e) {
                                        case 0:
                                            u.default.get(
                                                '/musiclist/music_list_star_unget',
                                                function (e, t) {
                                                    cc.isValid(this.node) && ((this.mNormalStarIcon1.spriteFrame = t), (this.mNormalStarIcon2.spriteFrame = t), (this.mNormalStarIcon3.spriteFrame = t));
                                                }.bind(this),
                                            );
                                            break;
                                        case 1:
                                            u.default.get(
                                                '/musiclist/music_list_star_get',
                                                function (e, t) {
                                                    cc.isValid(this.node) && (this.mNormalStarIcon1.spriteFrame = t);
                                                }.bind(this),
                                            ),
                                                u.default.get(
                                                    '/musiclist/music_list_star_unget',
                                                    function (e, t) {
                                                        cc.isValid(this.node) && ((this.mNormalStarIcon2.spriteFrame = t), (this.mNormalStarIcon3.spriteFrame = t));
                                                    }.bind(this),
                                                );
                                            break;
                                        case 2:
                                            u.default.get(
                                                '/musiclist/music_list_star_get',
                                                function (e, t) {
                                                    cc.isValid(this.node) && ((this.mNormalStarIcon1.spriteFrame = t), (this.mNormalStarIcon2.spriteFrame = t));
                                                }.bind(this),
                                            ),
                                                u.default.get(
                                                    '/musiclist/music_list_star_unget',
                                                    function (e, t) {
                                                        cc.isValid(this.node) && (this.mNormalStarIcon3.spriteFrame = t);
                                                    }.bind(this),
                                                );
                                            break;
                                        case 3:
                                            u.default.get(
                                                '/musiclist/music_list_star_get',
                                                function (e, t) {
                                                    cc.isValid(this.node) && ((this.mNormalStarIcon1.spriteFrame = t), (this.mNormalStarIcon2.spriteFrame = t), (this.mNormalStarIcon3.spriteFrame = t));
                                                }.bind(this),
                                            );
                                            break;
                                        case 4:
                                            u.default.get(
                                                '/musiclist/music_list_crown_get',
                                                function (e, t) {
                                                    cc.isValid(this.node) && (this.mNormalCrownIcon1.spriteFrame = t);
                                                }.bind(this),
                                            ),
                                                u.default.get(
                                                    '/musiclist/music_list_crown_unget',
                                                    function (e, t) {
                                                        cc.isValid(this.node) && ((this.mNormalCrownIcon2.spriteFrame = t), (this.mNormalCrownIcon3.spriteFrame = t));
                                                    }.bind(this),
                                                );
                                            break;
                                        case 5:
                                            u.default.get('/musiclist/music_list_crown_get', function (e, t) {
                                                cc.isValid(i.node) && ((i.mNormalCrownIcon1.spriteFrame = t), (i.mNormalCrownIcon2.spriteFrame = t));
                                            }),
                                                u.default.get('/musiclist/music_list_crown_unget', function (e, t) {
                                                    cc.isValid(i.node) && (i.mNormalCrownIcon3.spriteFrame = t);
                                                });
                                            break;
                                        case 6:
                                            u.default.get(
                                                '/musiclist/music_list_crown_get',
                                                function (e, t) {
                                                    cc.isValid(this.node) && ((this.mNormalCrownIcon1.spriteFrame = t), (this.mNormalCrownIcon2.spriteFrame = t), (this.mNormalCrownIcon3.spriteFrame = t));
                                                }.bind(this),
                                            );
                                    }
                            }),
                            (e.prototype.onDestroy = function () {
                                s.default.remove(c.default.UPDATE_MUSIC_LIST_CURRENT_TIME, this.udpateCurrentTime, this);
                            }),
                            (e.prototype.update = function (e) {
                                (this.mCurrentTime = this.mCurrentTime + 1e3 * e), this.mNeedShowCountdown && this.initCountDownTime(this.mCurrentTime, this.mItemInfo.mGameComsume.activeEndTime);
                            }),
                            (e.prototype.initCountDownTime = function (e, t) {
                                if (((this.time = t - e), this.time <= 0)) return (this.mNeedShowCountdown = !1), void s.default.fire(c.default.NOTIFY_MUSIC_LIBRARY_UPDATE, this.mItemInfo.musicId);
                                (this.day = parseInt(this.time / 864e5 + '')), (this.hour = parseInt((this.time % 864e5) / 36e5 + '')), (this.minute = parseInt((this.time % 36e5) / 6e4 + '')), (this.second = parseInt((this.time % 6e4) / 1e3 + '')), this.second--, this.second < 0 && ((this.second = 59), this.minute--, this.minute < 0 && ((this.minute = 59), this.hour--, this.hour < 0 && ((this.hour = 23), this.day--))), 0 == this.day && 0 == this.hour && 0 == this.minute && 0 == this.second && this.mCtrl.updateItemHeight(), this.day < 10 ? (this.dayStr = '0' + this.day) : (this.dayStr = this.day), this.hour < 10 ? (this.hourStr = '0' + this.hour) : (this.hourStr = this.hour), this.minute < 10 ? (this.minStr = '0' + this.minute) : (this.minStr = this.minute), this.second < 10 ? (this.secStr = '0' + this.second) : (this.secStr = this.second);
                                var i = k.StringUtil.format(P.default.getInstance().getLanguageByKey('label_text.music_unlock_msg4'), this.dayStr, this.hourStr, this.minStr, this.secStr);
                                this.mSpecLockCountdownLabel.string = i;
                            }),
                            (e.EXCEPT_MORE_ID = -999999),
                            __decorate([L(cc.Sprite)], e.prototype, 'mNormalPanel', void 0),
                            __decorate([L(cc.Node)], e.prototype, 'mNormalLockIcon', void 0),
                            __decorate([L(cc.Button)], e.prototype, 'mNormalStartBtn', void 0),
                            __decorate([L(cc.Label)], e.prototype, 'mNormalStartExpenseLabel', void 0),
                            __decorate([L(cc.Sprite)], e.prototype, 'mNormalStartExpenseIcon', void 0),
                            __decorate([L(cc.Node)], e.prototype, 'mNormalStarPanel', void 0),
                            __decorate([L(cc.Sprite)], e.prototype, 'mNormalStarIcon1', void 0),
                            __decorate([L(cc.Sprite)], e.prototype, 'mNormalStarIcon2', void 0),
                            __decorate([L(cc.Sprite)], e.prototype, 'mNormalStarIcon3', void 0),
                            __decorate([L(cc.Node)], e.prototype, 'mNormalCrownPanel', void 0),
                            __decorate([L(cc.Sprite)], e.prototype, 'mNormalCrownIcon1', void 0),
                            __decorate([L(cc.Sprite)], e.prototype, 'mNormalCrownIcon2', void 0),
                            __decorate([L(cc.Sprite)], e.prototype, 'mNormalCrownIcon3', void 0),
                            __decorate([L(cc.Sprite)], e.prototype, 'mNormalRankIcon', void 0),
                            __decorate([L(cc.Label)], e.prototype, 'mNormalMusicIndex', void 0),
                            __decorate([L(cc.Label)], e.prototype, 'mNormalMusicName', void 0),
                            __decorate([L(cc.Label)], e.prototype, 'mMusician', void 0),
                            __decorate([L(cc.Button)], e.prototype, 'mNormalTryBtn', void 0),
                            __decorate([L(cc.Button)], e.prototype, 'mNormalUnlockBtn', void 0),
                            __decorate([L(cc.Sprite)], e.prototype, 'mNormalTryExpenseIcon', void 0),
                            __decorate([L(cc.Label)], e.prototype, 'mNormalTryExpenseLabel', void 0),
                            __decorate([L(cc.Sprite)], e.prototype, 'mNormalUnlockExpenseIcon', void 0),
                            __decorate([L(cc.Label)], e.prototype, 'mNormalUnlockExpenseLabel', void 0),
                            __decorate([L(cc.Sprite)], e.prototype, 'mNormalNewMusicIcon', void 0),
                            __decorate([L(cc.Sprite)], e.prototype, 'mSpecUnlockPanel', void 0),
                            __decorate([L(cc.Label)], e.prototype, 'mSpecUnlockSongName', void 0),
                            __decorate([L(cc.Label)], e.prototype, 'mSpecUnlockSongDesc', void 0),
                            __decorate([L(cc.Label)], e.prototype, 'mSpecUnlockRankText', void 0),
                            __decorate([L(cc.Node)], e.prototype, 'mSpecUnlockStarPanel', void 0),
                            __decorate([L(cc.Sprite)], e.prototype, 'mSpecUnlockStar1', void 0),
                            __decorate([L(cc.Sprite)], e.prototype, 'mSpecUnlockStar2', void 0),
                            __decorate([L(cc.Sprite)], e.prototype, 'mSpecUnlockStar3', void 0),
                            __decorate([L(cc.Node)], e.prototype, 'mSpecUnlockCrownPanel', void 0),
                            __decorate([L(cc.Sprite)], e.prototype, 'mSpecUnlockCrown1', void 0),
                            __decorate([L(cc.Sprite)], e.prototype, 'mSpecUnlockCrown2', void 0),
                            __decorate([L(cc.Sprite)], e.prototype, 'mSpecUnlockCrown3', void 0),
                            __decorate([L(cc.Sprite)], e.prototype, 'mSpecUnlockRankBtn', void 0),
                            __decorate([L(cc.Button)], e.prototype, 'mSpecUnlockStartBtn', void 0),
                            __decorate([L(cc.Sprite)], e.prototype, 'mSpecUnlockPlayExpenseIcon', void 0),
                            __decorate([L(cc.Label)], e.prototype, 'mSpecUnlockPlayExpenseLabel', void 0),
                            __decorate([L(cc.Button)], e.prototype, 'mSpecUnlockTryBtn', void 0),
                            __decorate([L(cc.Button)], e.prototype, 'mSpecUnlockBtn', void 0),
                            __decorate([L(cc.Sprite)], e.prototype, 'mSpecTryExpenseIcon', void 0),
                            __decorate([L(cc.Label)], e.prototype, 'mSpecTryExpenseLabel', void 0),
                            __decorate([L(cc.Sprite)], e.prototype, 'mSpecUnlockExpenseIcon', void 0),
                            __decorate([L(cc.Label)], e.prototype, 'mSpecUnlockExpenseLabel', void 0),
                            __decorate([L(cc.Button)], e.prototype, 'mSpecUnlockByVideoBtn', void 0),
                            __decorate([L(cc.Sprite)], e.prototype, 'mSpecLockPanle', void 0),
                            __decorate([L(cc.Label)], e.prototype, 'mSpeclockSongName', void 0),
                            __decorate([L(cc.Label)], e.prototype, 'mSpeclockSongDesc', void 0),
                            __decorate([L(cc.Label)], e.prototype, 'mSpeclockRankText', void 0),
                            __decorate([L(cc.Button)], e.prototype, 'mSpecLockTryBtn', void 0),
                            __decorate([L(cc.Button)], e.prototype, 'mSpecLockInviteBtn', void 0),
                            __decorate([L(cc.Label)], e.prototype, 'mSpecLockCountdownLabel', void 0),
                            __decorate([L(cc.Label)], e.prototype, 'mSpecLockTryExpenseLabel', void 0),
                            __decorate([L(cc.Sprite)], e.prototype, 'mSpecLockTryExpenseIcon', void 0),
                            __decorate([L(cc.Label)], e.prototype, 'mExceptMoreLabel', void 0),
                            __decorate([L(cc.Sprite)], e.prototype, 'mSpeclockDiamondBuyBtnIcon', void 0),
                            __decorate([L(cc.Label)], e.prototype, 'mSpeclockDiamondBuyBtnLabel', void 0),
                            __decorate([L(cc.Button)], e.prototype, 'mSpeclockDiamondBuyBtn', void 0),
                            __decorate([L(cc.Sprite)], e.prototype, 'specChallengeMusicIcon', void 0),
                            (e = r = __decorate([M], e))
                        );
                    })(cc.Component);
                (i.default = b), cc._RF.pop();
            },
            {
                '../../../../../modules/MGAdv/scripts/Logic/MGAdvDefine': 'MGAdvDefine',
                '../../../../../modules/MGAdv/scripts/Logic/MGAdvEntrance': 'MGAdvEntrance',
                '../../../../../modules/MGAppShare/scripts/MGShareUtil': 'MGShareUtil',
                '../../../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../../../base/G': 'G',
                '../../../../base/State': 'State',
                '../../../../config/LSKey': 'LSKey',
                '../../../../infoc/minigame_piano2_hotmusic': 'minigame_piano2_hotmusic',
                '../../../../util/PU': 'PU',
                '../../../../util/StringUtil': 'StringUtil',
                '../../../Logic/EventBus': 'EventBus',
                '../../../Logic/I18nManager': 'I18nManager',
                '../../../Logic/Level': 'Level',
                '../../../Logic/MoneySystem': 'MoneySystem',
                '../../../Logic/NotifyEvent': 'NotifyEvent',
                '../../../Logic/Plugin/UnlockProcessor': 'UnlockProcessor',
                '../../../Network/Protocol/StorageUtil': 'StorageUtil',
                '../../../common/BusinessUtil': 'BusinessUtil',
                '../../../reward/ActivityBean': 'ActivityBean',
                '../../MusicLevelDataLoader': 'MusicLevelDataLoader',
                '../BasicTouchEvent': 'BasicTouchEvent',
                '../ImgCache': 'ImgCache',
                './HotMusicCMShareController': 'HotMusicCMShareController',
                './InviteUnlockMusicCountdownUtil': 'InviteUnlockMusicCountdownUtil',
            },
        ],
        HotMusicListCtrl: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'f5f1983drdKD6Vkc6ojsibP', 'HotMusicListCtrl'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var c = e('../../MusicLevelDataLoader'),
                    o = e('../../../Network/Protocol/StorageUtil'),
                    n = e('../../../../config/LSKey'),
                    _ = e('./HotMusicCardItemPrefb'),
                    a = e('./InviteUnlockMusicCountdownUtil'),
                    l = e('../../../../base/G'),
                    u = e('../../../../base/State'),
                    d = e('../../../Logic/SongTryData'),
                    p = e('../../../Logic/MoneySystem'),
                    h = e('../../../Logic/EventBus'),
                    f = e('../../../Logic/NotifyEvent'),
                    r = e('../../../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    s = e('../../../keypad/KeypadUtil'),
                    m = cc._decorator,
                    y = m.ccclass,
                    S = m.property,
                    g = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.itemPrefb = null), (e.scrollView = null), (e.spawnCount = 0), (e.totalCount = 0), (e.spacing = 0), (e.bufferZone = 0), (e.items = []), (e.lastContentPosY = 0), (e.musicInfoArray = new Array()), (e.updateMusicItemCount = 0), (e.mRealIndex = []), (e.mInitHideShowState = !1), (e.mHideAfterLoad = !1), (e.mSkipCount = 0), (e.mIsTouched = !1), (e.mAlreadyShow = !1), (e.mUpdateTask = []), (e.mHasLoadedListView = !1), (e.mLoadingListView = !1), (e.mLastItemHeight = 0), e;
                        }
                        var g;
                        return (
                            __extends(e, t),
                            (g = e),
                            Object.defineProperty(e.prototype, 'hideAfterLoad', {
                                get: function () {
                                    return this.mHideAfterLoad;
                                },
                                set: function (e) {
                                    this.mHideAfterLoad = e;
                                },
                                enumerable: !0,
                                configurable: !0,
                            }),
                            (e.prototype.getTotalCount = function () {
                                return this.musicInfoArray.length;
                            }),
                            (e.prototype.onLoad = function () {
                                h.default.register(f.default.UPDATE_MUSIC_LIST_CURRENT_TIME, this.udpateCurrentTime, this), h.default.register(f.default.UPDATE_MUSIC_LIST_HEIGHT, this.updateItemHeight, this), (this.mCurrentTime = r.MGUser.getCurrentServerTime()), (this.content = this.scrollView.content);
                            }),
                            (e.prototype.postUpdateTask = function (e) {
                                this.mUpdateTask.push(e);
                            }),
                            (e.prototype.start = function () {
                                var e = this;
                                (this.mAlreadyShow = !0),
                                    this.scheduleOnce(function () {
                                        e.scrollToRememberPosition();
                                    }, 0.001);
                            }),
                            (e.prototype.udpateCurrentTime = function (e, t) {
                                this.mCurrentTime = t[0];
                            }),
                            (e.prototype.onDestroy = function () {
                                h.default.remove(f.default.UPDATE_MUSIC_LIST_HEIGHT, this.updateItemHeight, this), h.default.remove(f.default.UPDATE_MUSIC_LIST_CURRENT_TIME, this.udpateCurrentTime, this), h.default.fire(f.default.INVITE_SONG_LOOPER_STOP), console.info('[ActivityLooper] HotMusicList onDestroy');
                            }),
                            (e.prototype.getItemType = function (e) {
                                return e.mGameComsume && e.mGameComsume.unlockActive && e.mGameComsume.isActive(a.default.Ins().getCurrentTime()) ? (e.isLocked ? g.TYPE_LOCK_SPEC : g.TYPE_UNLOCK_SPEC) : g.TYPE_NORMAL;
                            }),
                            (e.prototype.getItemHeight = function (e) {
                                switch (e) {
                                    case g.TYPE_NORMAL:
                                        return g.NORMAL_ITEM_HEIGHT;
                                    case g.TYPE_LOCK_SPEC:
                                        return g.SPEC_LOCK_ITEM_HEIGHT;
                                    case g.TYPE_UNLOCK_SPEC:
                                        return g.SPEC_UNLOCK_ITEM_HEIGHT;
                                    default:
                                        return g.NORMAL_ITEM_HEIGHT;
                                }
                            }),
                            (e.prototype.setTouched = function (e, t) {
                                (this.mIsTouched = e), (this.mUuid = t);
                            }),
                            (e.prototype.getTouchUuid = function () {
                                return this.mUuid;
                            }),
                            (e.prototype.getTouched = function () {
                                return this.mIsTouched;
                            }),
                            (e.prototype.SetItemDivHeight = function (e) {
                                (g.NORMAL_ITEM_HEIGHT = e.mNormalPanel.node.height), (g.SPEC_LOCK_ITEM_HEIGHT = e.mSpecLockPanle.node.height), (g.SPEC_UNLOCK_ITEM_HEIGHT = e.mSpecUnlockPanel.node.height);
                            }),
                            (e.prototype.loadData = function () {
                                return __awaiter(this, void 0, void 0, function () {
                                    var t = this;
                                    return __generator(this, function (e) {
                                        return (
                                            cc.isValid(this.node) &&
                                                this.postUpdateTask(function () {
                                                    (t.musicInfoArray = c.MusicLevelDataLoader.getChoicenessAllItemInfo()), (t.updateMusicItemCount = t.spawnCount);
                                                    var e = new c.ItemInfo();
                                                    (e.id = _.default.EXCEPT_MORE_ID),
                                                        t.musicInfoArray.push(e),
                                                        t.postUpdateTask(function () {
                                                            t.initListView(t.musicInfoArray);
                                                        });
                                                }),
                                            [2]
                                        );
                                    });
                                });
                            }),
                            (e.prototype.initListView = function (e) {
                                return __awaiter(this, void 0, void 0, function () {
                                    var a,
                                        t,
                                        i,
                                        o,
                                        r,
                                        n,
                                        s = this;
                                    return __generator(this, function (e) {
                                        for (
                                            Date.now(),
                                                a = cc.instantiate(this.itemPrefb),
                                                t = a.getComponent(_.default),
                                                this.SetItemDivHeight(t),
                                                this.musicInfoArray = c.MusicLevelDataLoader.getChoicenessAllItemInfo(),
                                                (i = new c.ItemInfo()).id = _.default.EXCEPT_MORE_ID,
                                                this.musicInfoArray.push(i),
                                                this.RefreshContentHeight(),
                                                this.spawnCount > this.musicInfoArray.length && (this.spawnCount = this.musicInfoArray.length),
                                                o = function (e) {
                                                    var o = r.musicInfoArray[e],
                                                        n = e;
                                                    r.postUpdateTask(function () {
                                                        var e = cc.instantiate(a),
                                                            t = e.getComponent(_.default);
                                                        if (
                                                            (t.setData(o, n, s.mCurrentTime),
                                                            t.setCtrl(s),
                                                            t.setRememberPosCallback(function () {
                                                                s.rememberScrollPosition();
                                                            }),
                                                            t.setTryPositionCallback(function (e) {
                                                                s.rememberScrollPosition(), e.mGameComsume.testType == c.GameConsume.TESTTYPE_GOLD ? p.MoneySystem.consumeGold(e.mGameComsume.testGold) : e.mGameComsume.testType == c.GameConsume.TESTTYPE_DIAMOND ? p.MoneySystem.consumeDiamond(e.mGameComsume.testDiamond) : e.mGameComsume.testType == c.GameConsume.TESTTYPE_ENERGY ? p.MoneySystem.consumeHp(e.mGameComsume.testEnergy) : e.mGameComsume.testType == c.GameConsume.TESTTYPE_DEFAULT && p.MoneySystem.consumeHp(e.mGameComsume.testEnergy), l.G.songTryData || (l.G.songTryData = new d.default()), (l.G.songTryData.songTryListPosition = s.scrollView.getScrollOffset().y), l.G.Ap.state.reset(), (l.G.Ap.state.mission = new u.Mission(e.id, e.musicId, !1)), (l.G.Ap.state.mission.trialSong = !0), h.default.fire(f.default.LOAD_MUSIC, 2);
                                                            }),
                                                            0 == n)
                                                        )
                                                            e.setPosition(0, -s.spacing);
                                                        else {
                                                            var i = s.items[n - 1];
                                                            e.setPosition(0, i.y - s.mLastItemHeight - s.spacing);
                                                        }
                                                        (e.tag = s.getItemType(o)),
                                                            (e.height = s.getItemHeight(e.tag)),
                                                            s.content.addChild(e),
                                                            s.items.push(e),
                                                            s.mRealIndex.push(n),
                                                            (s.mLastItemHeight = e.height),
                                                            (s.updateMusicItemCount -= 1),
                                                            s.updateMusicItemCount <= 0 &&
                                                                ((s.mAlreadyShow = !0),
                                                                (s.mHasLoadedListView = !0),
                                                                (s.mLoadingListView = !1),
                                                                (s.scrollView.enabled = !0),
                                                                s.scheduleOnce(function () {
                                                                    s.scrollToRememberPosition();
                                                                }, 0.001));
                                                    });
                                                },
                                                r = this,
                                                n = 0;
                                            n < this.spawnCount;
                                            n++
                                        )
                                            o(n);
                                        return [2];
                                    });
                                });
                            }),
                            (e.prototype.getPositionInView = function (e) {
                                var t = e.parent.convertToWorldSpaceAR(e.position);
                                return this.scrollView.node.convertToNodeSpaceAR(t);
                            }),
                            (e.prototype.update = function (e) {
                                ((this.mCurrentTime += e), this.mInitHideShowState || (this.mHideAfterLoad, this.mSkipCount++, 3 <= this.mSkipCount && ((this.mHideAfterLoad = !1), (this.mInitHideShowState = !0))), 0 < this.mUpdateTask.length) && this.mUpdateTask.shift()();
                            }),
                            (e.prototype.onShow = function (e) {
                                void 0 === e && (e = -1), this.mHasLoadedListView || this.mLoadingListView ? this.updateListView(e) : ((this.mLoadingListView = !0), (this.scrollView.enabled = !1), this.loadData());
                            }),
                            (e.prototype.updateListView = function (e) {
                                var t = this;
                                void 0 === e && (e = -1), (this.scrollView.enabled = !0), (this.mAlreadyShow = !0), (this.musicInfoArray = c.MusicLevelDataLoader.getChoicenessAllItemInfo());
                                var i = new c.ItemInfo();
                                (i.id = _.default.EXCEPT_MORE_ID), this.musicInfoArray.push(i);
                                for (var o, n, a, r = this.mRealIndex.length, s = (this.scrollView.node.height, this.scrollView.node.height, this.scrollView.node.anchorX, this.scrollView.node.anchorY, 0); s < r; s++) {
                                    if (((o = this.mRealIndex[s]), (a = (n = this.items[o]).getComponent(_.default)), -1 != e && n.musicId == e)) {
                                        a.setData(this.musicInfoArray[a.itemID], a.itemID, this.mCurrentTime);
                                        break;
                                    }
                                    a.setData(this.musicInfoArray[a.itemID], a.itemID, this.mCurrentTime);
                                }
                                this.scheduleOnce(function () {
                                    t.scrollToRememberPosition();
                                }, 0.3);
                            }),
                            (e.prototype.updateItemHeight = function () {
                                h.default.fire(f.default.INVITE_SONG_LOOPER_STOP), (this.musicInfoArray = c.MusicLevelDataLoader.getChoicenessAllItemInfo()), this.RefreshContentHeight(), this.RefreshAllItemHeight();
                            }),
                            (e.prototype.RefreshContentHeight = function () {
                                for (var e, t = 0, i = 0, o = 0, n = 0; n < this.musicInfoArray.length; n++) this.musicInfoArray[n] && this.musicInfoArray[n].id != _.default.EXCEPT_MORE_ID && (this.musicInfoArray[n].mGameComsume.unlockActive && this.musicInfoArray[n].mGameComsume.isActive(a.default.Ins().getCurrentTime()) ? (this.musicInfoArray[n].isLocked ? o++ : i++) : t++);
                                (e = g.NORMAL_ITEM_HEIGHT * (t + 1) + g.SPEC_UNLOCK_ITEM_HEIGHT * i + g.SPEC_LOCK_ITEM_HEIGHT * o), (this.content.height = e);
                            }),
                            (e.prototype.RefreshAllItemHeight = function () {
                                for (var e, t, i = this.mRealIndex.length, o = 0; o < i; o++) {
                                    if (((e = this.mRealIndex[o]), (t = this.items[e]).getComponent(_.default), 0 == o)) t.setPosition(0, -this.spacing);
                                    else {
                                        var n = this.items[o - 1];
                                        t.setPosition(0, n.y - n.height - this.spacing);
                                    }
                                    (t.tag = this.getItemType(this.musicInfoArray[o])), (t.height = this.getItemHeight(t.tag));
                                }
                            }),
                            (e.prototype.onHide = function () {
                                console.info('[ActivityLooper] HotMusicList onHide'), this.scrollView.stopAutoScroll(), this.mAlreadyShow && this.rememberScrollPosition(), h.default.fire(f.default.INVITE_SONG_LOOPER_STOP);
                            }),
                            (e.prototype.setEnable = function (e) {
                                this.scrollView.enabled = e;
                            }),
                            (e.prototype.update2 = function () {
                                var e,
                                    t,
                                    i,
                                    o,
                                    n,
                                    a,
                                    r,
                                    s,
                                    c,
                                    l,
                                    u,
                                    d,
                                    p,
                                    h = this.items,
                                    f = this.bufferZone;
                                if (this.scrollView.content.y < this.lastContentPosY) for (var m = this.mRealIndex.length - 1; 0 <= m && ((e = this.mRealIndex[m]), (t = this.mRealIndex[0]), (i = h[e]), (o = h[t]), (n = this.getPositionInView(i)).y < -f && o.y + this.spacing + i.height < 200); m--) (r = (a = i.getComponent(_.default)).itemID - this.spawnCount), this.musicInfoArray[r].id == _.default.EXCEPT_MORE_ID ? ((i.tag = g.TYPE_NORMAL), (i.height = g.NORMAL_ITEM_HEIGHT)) : ((i.tag = this.getItemType(this.musicInfoArray[r])), (i.height = this.getItemHeight(i.tag))), a.setData(this.musicInfoArray[r], r, this.mCurrentTime), (s = this.mRealIndex.pop()), this.mRealIndex.unshift(s), (c = i.height), i.setPositionY(o.y + this.spacing + c), m++;
                                else for (m = 0; m < this.mRealIndex.length && ((e = this.mRealIndex[m]), (l = this.mRealIndex[this.mRealIndex.length - 1]), (i = this.items[e]), (u = this.items[l]), (n = this.getPositionInView(i)), (d = this.getItemHeight(u.tag)), n.y > f && u.y - d - this.spacing > -this.content.height); m++) (r = (a = i.getComponent(_.default)).itemID + this.spawnCount), this.musicInfoArray[r].id == _.default.EXCEPT_MORE_ID ? ((i.tag = g.TYPE_NORMAL), (i.height = g.NORMAL_ITEM_HEIGHT)) : ((i.tag = this.getItemType(this.musicInfoArray[r])), (i.height = this.getItemHeight(i.tag))), a.setData(this.musicInfoArray[r], r, this.mCurrentTime), (p = this.mRealIndex.shift()), this.mRealIndex.push(p), i.setPositionY(u.y - d - this.spacing), m--;
                                this.lastContentPosY = this.scrollView.content.y;
                            }),
                            (e.prototype.scrollEvent = function (e, t) {
                                switch (t) {
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    case 4:
                                        this.update2();
                                }
                            }),
                            (e.prototype.rememberScrollPosition = function () {
                                o.default.save(n.default.HOT_MUSIC_LIB_SCROLL_POSITION, this.scrollView.getScrollOffset().y + '');
                            }),
                            (e.prototype.scrollToRememberPosition = function () {
                                if (s.default.isHorizon()) console.warn('== skip scrollToRememberPosition for horizontal ==');
                                else {
                                    var e = o.default.read(n.default.HOT_MUSIC_LIB_SCROLL_POSITION);
                                    e ? (parseFloat(e) < 1 ? this.scrollView.scrollToTop(0.2) : this.scrollView.scrollTo(cc.p(0, 1 - parseFloat(e) / this.scrollView.getMaxScrollOffset().y), 0.2)) : this.scrollView.scrollToTop(0.2);
                                }
                            }),
                            (e.SPEC_UNLOCK_ITEM_HEIGHT = 233),
                            (e.SPEC_LOCK_ITEM_HEIGHT = 296),
                            (e.NORMAL_ITEM_HEIGHT = 223),
                            (e.TYPE_LOCK_SPEC = 1),
                            (e.TYPE_UNLOCK_SPEC = 2),
                            (e.TYPE_NORMAL = 0),
                            __decorate([S(cc.Prefab)], e.prototype, 'itemPrefb', void 0),
                            __decorate([S(cc.ScrollView)], e.prototype, 'scrollView', void 0),
                            __decorate([S], e.prototype, 'spawnCount', void 0),
                            __decorate([S], e.prototype, 'totalCount', void 0),
                            __decorate([S], e.prototype, 'spacing', void 0),
                            __decorate([S], e.prototype, 'bufferZone', void 0),
                            (e = g = __decorate([y], e))
                        );
                    })(cc.Component);
                (i.default = g), cc._RF.pop();
            },
            {
                '../../../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../../../base/G': 'G',
                '../../../../base/State': 'State',
                '../../../../config/LSKey': 'LSKey',
                '../../../Logic/EventBus': 'EventBus',
                '../../../Logic/MoneySystem': 'MoneySystem',
                '../../../Logic/NotifyEvent': 'NotifyEvent',
                '../../../Logic/SongTryData': 'SongTryData',
                '../../../Network/Protocol/StorageUtil': 'StorageUtil',
                '../../../keypad/KeypadUtil': 'KeypadUtil',
                '../../MusicLevelDataLoader': 'MusicLevelDataLoader',
                './HotMusicCardItemPrefb': 'HotMusicCardItemPrefb',
                './InviteUnlockMusicCountdownUtil': 'InviteUnlockMusicCountdownUtil',
            },
        ],
        HotSongSplashItem: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '993f78QV3hM/otfL+jv29W8', 'HotSongSplashItem'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('../../../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    o = cc._decorator,
                    a = o.ccclass,
                    r = o.property,
                    s = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.title_label = null), (e.author_label = null), (e.describe_label = null), (e.activity_sprite = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.onLoad = function () {}),
                            (e.prototype.start = function () {}),
                            (e.prototype.onDestroy = function () {}),
                            (e.prototype.setData = function (e, t, i) {
                                if (((this.itemID = t), null != e)) {
                                    var o = 0;
                                    null != i && null != i && (o = parseInt(i + '')), (this.node.active = !0), (this.title_label.string = e.musicName), (this.author_label.string = e.musician), -1 == o ? (this.describe_label.node.active = !1) : ((this.describe_label.node.active = !0), (this.describe_label.string = '已有' + (2e5 + o) + '人解锁')), e.mGameComsume.isActive(n.MGUser.getCurrentServerTime()) ? (this.activity_sprite.node.active = !0) : (this.activity_sprite.node.active = !1);
                                } else this.node.active = !1;
                            }),
                            __decorate([r(cc.Label)], e.prototype, 'title_label', void 0),
                            __decorate([r(cc.Label)], e.prototype, 'author_label', void 0),
                            __decorate([r(cc.Label)], e.prototype, 'describe_label', void 0),
                            __decorate([r(cc.Sprite)], e.prototype, 'activity_sprite', void 0),
                            (e = __decorate([a], e))
                        );
                    })(cc.Component);
                (i.default = s), cc._RF.pop();
            },
            {
                '../../../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
            },
        ],
        HotSongSplash: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '853f8x+iPVD4qs+qviOnnS7', 'HotSongSplash'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../BasicTouchEvent'),
                    n = e('../../MusicLevelDataLoader'),
                    p = e('./HotSongSplashItem'),
                    a = e('../../../../util/Dictionary'),
                    r = e('../../../../infoc/minigame_piano2_hotmusic'),
                    s = cc._decorator,
                    c = s.ccclass,
                    l = s.property,
                    u = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.root_layout = null), (e.close_btn = null), (e.jumpBtn = null), (e.play_btn = null), (e.scrollView = null), (e.spawnCount = 0), (e.totalCount = 0), (e.spacing = 0), (e.bufferZone = 0), (e.mItemPrefab = null), (e.mToastPrefab = null), (e.popup_layout = null), (e.loading_sprite = null), (e.mCloseClickCallback = null), (e.mPlayClickCallback = null), (e.mContent = null), (e.itemTemplate = null), (e.items = []), (e.mRealIndex = []), (e.itemHeight = 168), (e.lastContentPosY = 0), (e.updateTimer = 0), (e.updateInterval = 0.2), (e.mItemUnlockCount = new a.Dictionary()), (e.mInitDataFinish = !1), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.setCloseCallback = function (e) {
                                this.closeCallback = e;
                            }),
                            (e.prototype.setPlayImmediatelyCallback = function (e) {
                                this.playImmediatelyCallback = e;
                            }),
                            (e.prototype.onLoad = function () {
                                this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                }),
                                    (this.mContent = this.scrollView.content),
                                    this.adapterUI(),
                                    this.initEvent(),
                                    (this.mItemInfos = n.MusicLevelDataLoader.getNewChoiceness()),
                                    this.initializeScrollView();
                            }),
                            (e.prototype.start = function () {
                                this.getComponent(cc.Animation).play('hot_song_splash');
                            }),
                            (e.prototype.onDestroy = function () {}),
                            (e.prototype.initEvent = function () {
                                var e = this;
                                (this.mCloseClickCallback = new o.default(function () {
                                    e.closeClick();
                                })),
                                    this.close_btn.node.on(cc.Node.EventType.TOUCH_END, this.mCloseClickCallback.click, this.mCloseClickCallback),
                                    this.jumpBtn.node.on(cc.Node.EventType.TOUCH_END, this.mCloseClickCallback.click, this.mCloseClickCallback),
                                    (this.mPlayClickCallback = new o.default(function () {
                                        r.default.report(r.default.ACTION_SHOW, r.default.SOURCE_DIALOG, 0, '', 0), e.playClick();
                                    })),
                                    this.play_btn.node.on(cc.Node.EventType.TOUCH_END, this.mPlayClickCallback.click, this.mPlayClickCallback);
                            }),
                            (e.prototype.playClick = function () {
                                this.playImmediatelyCallback && this.playImmediatelyCallback();
                            }),
                            (e.prototype.closeClick = function () {
                                this.closeCallback && this.closeCallback();
                            }),
                            (e.prototype.initData = function (n, a) {
                                var r = this;
                                if (this.mItemInfos && 0 < this.mItemInfos.length) {
                                    for (var s = [], e = 0; e < this.mItemInfos.length; e++) {
                                        var t = this.mItemInfos[e];
                                        t && s.push(t.musicId);
                                    }
                                    cmg.platform.queryMusicPeopleNums(s, function (e, t) {
                                        if (e && t) {
                                            for (var i = 0; i < s.length; i++) {
                                                var o = s[i];
                                                r.mItemUnlockCount.put(o, t['' + o]);
                                            }
                                            n();
                                        } else a();
                                    });
                                } else n();
                            }),
                            (e.prototype.dataSetChanged = function () {
                                for (var e, t, i = this.mRealIndex.length, o = 0; o < i; o++) (e = this.mRealIndex[o]), (t = this.items[e].getComponent(p.default)).setData(this.mItemInfos[t.itemID], t.itemID, this.getItemUnlockCount(this.mItemInfos[o].musicId));
                            }),
                            (e.prototype.getItemUnlockCount = function (e) {
                                var t = this.mItemUnlockCount.get(e);
                                return null == t || null == t ? -1 : t;
                            }),
                            (e.prototype.initializeScrollView = function () {
                                this.itemTemplate = cc.instantiate(this.mItemPrefab);
                                var e = this.mItemInfos.length * (this.itemHeight + this.spacing);
                                this.mContent.height = e;
                                for (var t = Math.min(this.mItemInfos.length, this.spawnCount), i = 0; i < t; i++) {
                                    var o = cc.instantiate(this.itemTemplate);
                                    o.getComponent(p.default).setData(this.mItemInfos[i], i, this.getItemUnlockCount(this.mItemInfos[i].musicId)), o.setPosition(0, -(i * (this.itemHeight + this.spacing) + this.spacing)), this.mContent.addChild(o), this.mRealIndex.push(i), this.items.push(o);
                                }
                            }),
                            (e.prototype.scrollEvent = function (e, t) {
                                switch (t) {
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    case 4:
                                        this.updateByScroll();
                                }
                            }),
                            (e.prototype.updateByScroll = function () {
                                var e,
                                    t,
                                    i,
                                    o,
                                    n,
                                    a,
                                    r,
                                    s,
                                    c,
                                    l = this.items,
                                    u = this.bufferZone;
                                if (this.mContent.y < this.lastContentPosY) for (var d = this.mRealIndex.length - 1; 0 <= d && ((c = l[this.mRealIndex[d]]), (e = l[this.mRealIndex[0]]), (t = this.getPositionInView(c)).y < -u && e.y + this.spacing + c.height < 0); d--) (i = (s = c.getComponent(p.default)).itemID - this.spawnCount), s.setData(this.mItemInfos[i], i, this.getItemUnlockCount(this.mItemInfos[i].musicId)), (o = this.mRealIndex.pop()), this.mRealIndex.unshift(o), c.setPosition(0, e.y + this.spacing + this.itemHeight), d++;
                                else for (d = 0; d < this.mRealIndex.length && ((c = l[this.mRealIndex[d]]), (n = l[this.mRealIndex[this.mRealIndex.length - 1]]), (t = this.getPositionInView(c)), (a = this.itemHeight), t.y > u && n.y - a - this.spacing > -this.mContent.height); d++) (i = (s = c.getComponent(p.default)).itemID + this.spawnCount), s.setData(this.mItemInfos[i], i, this.getItemUnlockCount(this.mItemInfos[i].musicId)), (r = this.mRealIndex.shift()), this.mRealIndex.push(r), c.setPosition(0, n.y - a - this.spacing), d--;
                                this.lastContentPosY = this.mContent.y;
                            }),
                            (e.prototype.getPositionInView = function (e) {
                                var t = e.parent.convertToWorldSpaceAR(e.position);
                                return this.scrollView.node.convertToNodeSpaceAR(t);
                            }),
                            (e.prototype.adapterUI = function () {}),
                            __decorate([l(cc.Layout)], e.prototype, 'root_layout', void 0),
                            __decorate([l(cc.Button)], e.prototype, 'close_btn', void 0),
                            __decorate([l(cc.Button)], e.prototype, 'jumpBtn', void 0),
                            __decorate([l(cc.Button)], e.prototype, 'play_btn', void 0),
                            __decorate([l(cc.ScrollView)], e.prototype, 'scrollView', void 0),
                            __decorate([l], e.prototype, 'spawnCount', void 0),
                            __decorate([l], e.prototype, 'totalCount', void 0),
                            __decorate([l], e.prototype, 'spacing', void 0),
                            __decorate([l], e.prototype, 'bufferZone', void 0),
                            __decorate([l(cc.Prefab)], e.prototype, 'mItemPrefab', void 0),
                            __decorate([l(cc.Prefab)], e.prototype, 'mToastPrefab', void 0),
                            __decorate([l(cc.Layout)], e.prototype, 'popup_layout', void 0),
                            __decorate([l(cc.Layout)], e.prototype, 'loading_layout', void 0),
                            __decorate([l(cc.Sprite)], e.prototype, 'loading_sprite', void 0),
                            (e = __decorate([c], e))
                        );
                    })(cc.Component);
                (i.default = u), cc._RF.pop();
            },
            {
                '../../../../infoc/minigame_piano2_hotmusic': 'minigame_piano2_hotmusic',
                '../../../../util/Dictionary': 'Dictionary',
                '../../MusicLevelDataLoader': 'MusicLevelDataLoader',
                '../BasicTouchEvent': 'BasicTouchEvent',
                './HotSongSplashItem': 'HotSongSplashItem',
            },
        ],
        HotmusicActivityMgr: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'a7034FuVh5Gj4jzyrN0UyK8', 'HotmusicActivityMgr'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../util/StringUtil'),
                    n = e('../../upgrade/VersionBean'),
                    a = e('../../upgrade/IChecker'),
                    r = e('../../util/NumberUtil'),
                    s = e('../../upgrade/CloudMgr'),
                    c = e('../../config/LSKey'),
                    l = e('../../util/SingleWorker'),
                    u = e('../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    d = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.unlockType = '1'), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.getMids = function () {
                                var t = [];
                                if (o.StringUtil.isEmpty(this.mids)) return t;
                                var e = this.mids.split(';');
                                return (
                                    e &&
                                        e.forEach(function (e) {
                                            o.StringUtil.isEmpty(e) || t.push(e);
                                        }),
                                    t
                                );
                            }),
                            e
                        );
                    })(n.default);
                i.HotmusicAcitivityBean = d;
                var p = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.validateData = function (e) {
                            return null != e && null != e;
                        }),
                        (t.prototype.onMergeServerToLocal = function (e, t) {}),
                        (t.prototype.populateServerObj = function (e) {
                            var t = new d();
                            return (t.serverVer = a.default.populateStr(e.ver)), (t.key = a.default.populateStr(e.key)), (t.url = a.default.populateStr(e.url)), (t.md5 = a.default.populateStr(e.md5)), (t.type = a.default.populateStr(e.type)), (t.size = r.default.parseNum(e.size)), (t.enableTime = r.default.parseNum(e.enableTime)), (t.endTime = r.default.parseNum(e.endTime)), (t.platform = a.default.populateStr(e.platform)), (t.id = r.default.parseNum(e.id)), (t.start = a.default.populateStr(e.start)), (t.end = a.default.populateStr(e.end)), (t.mids = a.default.populateStr(e.mids)), (t.unlockType = a.default.populateStr(e.unlockType)), (t.enableTime = this.getTimeInMs(t.start)), (t.endTime = this.getTimeInMs(t.end)), t;
                        }),
                        (t.prototype.populateLocalObj = function (e) {
                            var t = new d();
                            return (t.localVer = a.default.populateStr(e.localVer)), (t.serverVer = a.default.populateStr(e.serverVer)), (t.downloadTime = r.default.parseNum(e.downloadTime)), (t.localMd5 = a.default.populateStr(e.localMd5)), (t.key = a.default.populateStr(e.key)), (t.url = a.default.populateStr(e.url)), (t.md5 = a.default.populateStr(e.md5)), (t.type = a.default.populateStr(e.type)), (t.enableTime = r.default.parseNum(e.enableTime)), (t.platform = a.default.populateStr(e.platform)), (t.endTime = r.default.parseNum(e.endTime)), (t.id = r.default.parseNum(e.id)), (t.start = a.default.populateStr(e.start)), (t.end = a.default.populateStr(e.end)), (t.mids = a.default.populateStr(e.mids)), (t.unlockType = a.default.populateStr(e.unlockType)), t;
                        }),
                        (t.prototype.getTimeInMs = function (t) {
                            if (o.StringUtil.isEmpty(t)) return 0;
                            try {
                                return new Date(t).getTime();
                            } catch (e) {
                                return console.error('format str to date error.' + t), 0;
                            }
                        }),
                        t
                    );
                })(a.default);
                i.HotmusicActivityChecker = p;
                var h = (function () {
                    function e() {
                        (this.server_url = 'https://piano-weixin-game.cmcm.com/pianotiles2/cfg/cmplay/hotmusic/activity.json'), (this.mCloudMgr = new s.default(new p('hotmusic-actvity', c.default.HOTMUSIC_ACTIVITY, this.server_url)));
                    }
                    return (
                        (e.Ins = function () {
                            return e._s || (e._s = new e()), e._s;
                        }),
                        (e.prototype.init = function (e) {
                            var i = this;
                            l.default.doWork(
                                'hotmsuci-activityMGR',
                                function () {
                                    return new Promise(function (e, t) {
                                        i.mCloudMgr.request(
                                            function () {
                                                e();
                                            },
                                            function () {
                                                e();
                                            },
                                        );
                                    });
                                },
                                function () {
                                    e && e();
                                },
                            );
                        }),
                        (e.prototype.getTodayActivityMusic = function () {
                            var t = u.MGUser.getCurrentServerTime(),
                                e = this.mCloudMgr.filterData(function (e) {
                                    return e.enableTime <= t && e.endTime > t && e.isPlatformValid('cmplay');
                                }),
                                i = [];
                            return (
                                e &&
                                    0 < e.length &&
                                    e.forEach(function (t) {
                                        if (t) {
                                            var e = t.getMids();
                                            e &&
                                                0 < e.length &&
                                                e.forEach(function (e) {
                                                    i.push({
                                                        mid: e,
                                                        start: t.enableTime,
                                                        end: t.endTime,
                                                    });
                                                });
                                        }
                                    }),
                                i
                            );
                        }),
                        e
                    );
                })();
                (i.default = h), cc._RF.pop();
            },
            {
                '../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../config/LSKey': 'LSKey',
                '../../upgrade/CloudMgr': 'CloudMgr',
                '../../upgrade/IChecker': 'IChecker',
                '../../upgrade/VersionBean': 'VersionBean',
                '../../util/NumberUtil': 'NumberUtil',
                '../../util/SingleWorker': 'SingleWorker',
                '../../util/StringUtil': 'StringUtil',
            },
        ],
        I18nManager: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '351c6n1AXNGLYHjXyq4MBDc', 'I18nManager'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('LanguageData'),
                    n = (function () {
                        function e() {
                            (this.mCache = {}), (this.mIsEnglish = !1), console.warn('setLang to en'), (this.mIsEnglish = !0), o.init('en');
                        }
                        return (
                            (e.init = function () {
                                e.getInstance();
                            }),
                            (e.prototype.isEnglish = function () {
                                return this.mIsEnglish;
                            }),
                            (e.getInstance = function () {
                                return null == e.sInstance && (e.sInstance = new e()), e.sInstance;
                            }),
                            (e.prototype.setLanguage = function (e, t) {
                                this.mCache[e] = t;
                            }),
                            (e.prototype.getLanguageByKey = function (e) {
                                var t = this.mCache[e];
                                if (t) return this.mIsEnglish ? e : t;
                                var i = o.t(e);
                                return i || void 0;
                            }),
                            (e.sInstance = null),
                            e
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                LanguageData: 'LanguageData',
            },
        ],
        IAdapter: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '356c8ClGDVNQ5U7AF3yNgcq', 'IAdapter'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    cc._RF.pop();
            },
            {},
        ],
        IAwardRounter: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '1842d71j7ZANrwkSEPRcFGy', 'IAwardRounter'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    cc._RF.pop();
            },
            {},
        ],
        IBattleGameSceneView: [
            function (e, t, i) {
                'use strict';
                var o, n, a;
                cc._RF.push(t, 'a51ccPoOGpCqp7EKwAf5cRL', 'IBattleGameSceneView'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    ((o = i.BattleGameSceneViewHeadId || (i.BattleGameSceneViewHeadId = {}))[(o.SELF = 0)] = 'SELF'),
                    (o[(o.OPPONENT = 1)] = 'OPPONENT'),
                    ((n = i.BattleGameSceneViewHeadType || (i.BattleGameSceneViewHeadType = {}))[(n.MISS = 0)] = 'MISS'),
                    (n[(n.COMBO = 1)] = 'COMBO'),
                    (n[(n.MISS_1 = 2)] = 'MISS_1'),
                    (n[(n.NONE = 3)] = 'NONE'),
                    ((a = i.BattleGameSceneViewWaitingType || (i.BattleGameSceneViewWaitingType = {}))[(a.START = 0)] = 'START'),
                    (a[(a.END = 1)] = 'END'),
                    cc._RF.pop();
            },
            {},
        ],
        IChecker: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '01d60YZ9PxIG54Ai6ye0tAN', 'IChecker'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('../base/Log'),
                    n = e('../business/Network/Protocol/StorageUtil'),
                    r = e('../util/StringUtil'),
                    s = e('../LogicPlatform/PlatformProxy'),
                    c = e('../../modules/MGBasic/scripts/Logic/MGBasicEntrance'),
                    l = e('../../modules/MGUtils/NetworkUtils'),
                    u = e('../util/PU'),
                    o = (function () {
                        function o(e, t, i, o) {
                            (this.mType = ''), (this.mStorageKey = ''), (this.mLocalBeans = []), (this.mVersionJsonUrl = ''), (this.innerFile = ''), (this.isCheckedNetVer = !1), (this.mType = e), (this.mStorageKey = t), (this.mVersionJsonUrl = i), (this.innerFile = o);
                        }
                        return (
                            (o.prototype.saveLocalData = function () {
                                var e = JSON.stringify(this.mLocalBeans);
                                n.default.save(this.mStorageKey, e);
                            }),
                            (o.prototype.getType = function () {
                                return this.mType;
                            }),
                            (o.prototype.getData = function () {
                                return this.mLocalBeans;
                            }),
                            (o.prototype.check = function (t, e) {
                                var i = this;
                                this.isCheckedNetVer
                                    ? t()
                                    : (this.parseLocalData(),
                                      this.parseData(
                                          function (e) {
                                              i.validateData(e) && (i.mergeToLocalData(e), i.saveLocalData(), (i.isCheckedNetVer = !0)), t();
                                          },
                                          function () {
                                              e();
                                          },
                                      ));
                            }),
                            (o.prototype.parseData = function (t, i) {
                                var o = this;
                                this.readLocalFile(
                                    function (e) {
                                        e ? t(e) : o.requestNet(t, i);
                                    },
                                    function () {
                                        o.requestNet(t, i);
                                    },
                                );
                            }),
                            (o.prototype.readLocalFile = function (i, o) {
                                var n = this;
                                r.StringUtil.isEmpty(this.innerFile)
                                    ? o()
                                    : cc.loader.load(cc.url.raw(this.innerFile), function (e, t) {
                                          a.default.i('read from file:', n.innerFile, e, t), e || !t ? o() : i(t);
                                      });
                            }),
                            (o.prototype.requestNet = function (e, t) {
                                a.default.i('request from net:' + this.mVersionJsonUrl), s.default.Ins().isSupportDownloadRes() ? this.doDownloadToDisk(e, t) : this.doRequestWithoutDisk(e, t);
                            }),
                            (o.prototype.doRequestWithoutDisk = function (t, e) {
                                l.default.request({
                                    platform: u.default.getPlatformType(),
                                    url: this.mVersionJsonUrl,
                                    method: l.default.METHOD_GET,
                                    dataType: 'json',
                                    success: function (e) {
                                        t && t(e);
                                    },
                                    fail: function () {
                                        e && e();
                                    },
                                });
                            }),
                            (o.prototype.doDownloadToDisk = function (t, i) {
                                var e = this;
                                s.default.Ins().downloadFile(
                                    this.mVersionJsonUrl,
                                    function (e) {
                                        c.MGBasic.readFile({
                                            filePath: e,
                                            encoding: 'utf8',
                                            success: function (e) {
                                                t(e);
                                            },
                                            fail: function () {
                                                i();
                                            },
                                        });
                                    },
                                    function () {
                                        a.default.e(o.TAG + ' download failed.' + e.mVersionJsonUrl), i();
                                    },
                                    0,
                                    !1,
                                );
                            }),
                            (o.prototype.parseLocalData = function () {
                                this.mLocalBeans.splice(0, this.mLocalBeans.length);
                                var e,
                                    t = n.default.read(this.mStorageKey);
                                if (null != t && null != t && 0 !== t.length)
                                    try {
                                        if ((e = JSON.parse(t)) && 0 < e.length)
                                            for (var i = 0; i < e.length; i++) {
                                                var o = this.populateLocalObj(e[i]);
                                                null != o && this.mLocalBeans.push(o);
                                            }
                                    } catch (e) {}
                            }),
                            (o.prototype.mergeToLocalData = function (e) {
                                if (e && 0 < e.length) {
                                    for (var t = [], i = 0; i < e.length; i++) {
                                        var o = this.populateServerObj(e[i]);
                                        if (o) {
                                            t.push(o);
                                            for (var n = null, a = 0; a < this.mLocalBeans.length; a++) {
                                                var r = this.mLocalBeans[a];
                                                if (r.key == o.key && r.type == o.type) {
                                                    n = r;
                                                    break;
                                                }
                                            }
                                            n && ((o.localMd5 = n.md5), (o.localVer = n.localVer), (o.downloadTime = n.downloadTime)), this.onMergeServerToLocal(o, n);
                                        }
                                    }
                                    0 < t.length && (this.mLocalBeans = t);
                                }
                                return !0;
                            }),
                            (o.populateStr = function (e) {
                                return null == e || null == e ? '' : '' + e;
                            }),
                            (o.TAG = 'IChecker => '),
                            o
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../../modules/MGBasic/scripts/Logic/MGBasicEntrance': 'MGBasicEntrance',
                '../../modules/MGUtils/NetworkUtils': 'NetworkUtils',
                '../LogicPlatform/PlatformProxy': 'PlatformProxy',
                '../base/Log': 'Log',
                '../business/Network/Protocol/StorageUtil': 'StorageUtil',
                '../util/PU': 'PU',
                '../util/StringUtil': 'StringUtil',
            },
        ],
        IEnumerable: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'f7ba0RxZipKSZ7sDwkp8fD2', 'IEnumerable'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    cc._RF.pop();
            },
            {},
        ],
        IEnumerator: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'b74c29g9GBLZJBC597z+nQS', 'IEnumerator'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    cc._RF.pop();
            },
            {},
        ],
        IMap: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'f8679/1+yZF1LENcysLqhL0', 'IMap'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    cc._RF.pop();
            },
            {},
        ],
        IModule: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '525c7NavABPGoO2OEfH0DXe', 'IModule'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    cc._RF.pop();
            },
            {},
        ],
        IMusicContext: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '492723ax+ZJio+FUWNuTtsK', 'IMusicContext'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    cc._RF.pop();
            },
            {},
        ],
        IPlugin: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'b06a5Lp/e1AA6q0N0C05jKl', 'IPlugin'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {}
                    return (
                        (e.prototype.update = function (e) {}),
                        (e.prototype.onLevelChanged = function (e) {}),
                        (e.prototype.onAwake = function () {}),
                        (e.prototype.getKind = function () {
                            return '';
                        }),
                        (e.Plugin_Singin = 'Sing In'),
                        (e.Plugin_Exp = 'Exp'),
                        (e.Plugin_Energy = 'Energy'),
                        (e.Plugin_Unlock = 'Unlock'),
                        (e.Plugin_Economy = 'Economy'),
                        (e.Plugin_WorldRank = 'WorldRank'),
                        (e.Plugin_Share = 'Share'),
                        (e.Plugin_HallLogic = 'Hall'),
                        (e.Plugin_Rate = 'Rate'),
                        (e.Plugin_Diamond = 'Diamond'),
                        (e.Plugin_Ad = 'Ad'),
                        (e.Plugin_Recharge = 'Recharge'),
                        (e.Plugin_MusicTrack = 'Track'),
                        (e.Plugin_Debug = 'Debug'),
                        (e.Plugin_Skin_Chip = 'SkinChip'),
                        e
                    );
                })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        IServiceBuilder: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '68fb0kx6xhM/LfjSUpPecev', 'IServiceBuilder'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    cc._RF.pop();
            },
            {},
        ],
        IServiceProviderFactory: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'caa2cedgYFO+KFp1beK0Rcb', 'IServiceProviderFactory'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    cc._RF.pop();
            },
            {},
        ],
        IServiceProvider: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'd20aclC1Y1B3IO3X1COON2D', 'IServiceProvider'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    cc._RF.pop();
            },
            {},
        ],
        IServiceStorage: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'cb767e4YT9AbZy4iaoIN56Z', 'IServiceStorage'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    cc._RF.pop();
            },
            {},
        ],
        ISet: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'ecd37of5A1JxY6xK7fle5f4', 'ISet'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    cc._RF.pop();
            },
            {},
        ],
        IWorker: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'bcfffac/RhHVYbT/RbmNroa', 'IWorker'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    cc._RF.pop();
            },
            {},
        ],
        ImgCache: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '5fbacNeNnVNJ5lgzX0KhEG0', 'ImgCache'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                        function e() {
                            this.mImageMap = {};
                        }
                        return (
                            (e.prototype.loadAtlasSpriteFrames = function (e, o, n) {
                                var a = this,
                                    r = e + '-' + o,
                                    t = this.mImageMap[r];
                                if (t) return t.textureLoaded() || t.ensureLoadTexture(), void n(null, t);
                                cc.loader.loadRes(e, cc.SpriteAtlas, function (e, t) {
                                    if (e) n(e, null);
                                    else {
                                        var i = t.getSpriteFrame(o);
                                        (a.mImageMap[r] = i), n(null, i);
                                    }
                                });
                            }),
                            (e.prototype.saveMusicItemBgImageAtlas = function (e, t, o) {
                                var n = this;
                                cc.loader.loadRes(e, cc.SpriteAtlas, function (e, i) {
                                    e
                                        ? o(e, null)
                                        : (t.forEach(function (e) {
                                              var t = i.getSpriteFrame(e);
                                              t && (n.mImageMap[e] = t);
                                          }),
                                          o(null, i));
                                });
                            }),
                            (e.prototype.getMusicItemBgImage = function (e, o, n) {
                                var a = this,
                                    t = this.mImageMap[o];
                                if (t) return t.textureLoaded() || t.ensureLoadTexture(), void n(null, t);
                                cc.loader.loadRes(e, cc.SpriteAtlas, function (e, t) {
                                    if (e) n(e, null);
                                    else {
                                        var i = t.getSpriteFrame(o);
                                        (a.mImageMap[o] = i), n(null, i);
                                    }
                                });
                            }),
                            (e.prototype.get = function (i, o) {
                                var n = this,
                                    e = this.mImageMap[i];
                                if (e) return e.textureLoaded() || e.ensureLoadTexture(), void o(null, e);
                                cc.loader.loadRes(i, cc.SpriteFrame, function (e, t) {
                                    e ? o(e, null) : ((n.mImageMap[i] = t), o(null, t));
                                });
                            }),
                            (e.prototype.getImages = function (e, n) {
                                for (var a = new Array(), o = new Array(), t = 0; t < e.length; t++) {
                                    var i = this.mImageMap[e[t]];
                                    i && (i.textureLoaded() || i.ensureLoadTexture(), a.push(i), o.push(e[t]));
                                }
                                if (o.length != e.length) {
                                    var r = new Array();
                                    e.forEach(function (e) {
                                        for (var t = !1, i = 0; i < o.length; i++)
                                            if (e == o[i]) {
                                                t = !0;
                                                break;
                                            }
                                        t || r.push(e);
                                    }),
                                        console.log(r[0]),
                                        cc.loader.loadResArray(r, cc.SpriteFrame, function (e, t) {
                                            if (e) n(e, null);
                                            else {
                                                var i = t,
                                                    o = a.concat(i);
                                                n(null, o);
                                            }
                                        });
                                } else n(null, a);
                            }),
                            e
                        );
                    })(),
                    n = (function () {
                        function e() {}
                        return (
                            (e.loadAtlasSpriteFrames = function (e, t, i) {
                                this.ins.loadAtlasSpriteFrames(e, t, i);
                            }),
                            (e.saveMusicItemBgImageAtlas = function (e, t, i) {
                                this.ins.saveMusicItemBgImageAtlas(e, t, i);
                            }),
                            (e.getMusicItemBgImage = function (e, t, i) {
                                this.ins.getMusicItemBgImage(e, t, i);
                            }),
                            (e.getImages = function (e, t) {
                                this.ins.getImages(e, t);
                            }),
                            (e.get = function (e, t) {
                                this.ins.get(e, t);
                            }),
                            (e.get2 = function (e, i, o) {
                                this.ins.get(e, function (e, t) {
                                    t && i && cc.isValid(i, !0) && (i.spriteFrame = t), o && o(e, t);
                                });
                            }),
                            (e.ins = new o()),
                            e
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {},
        ],
        InfocHelper: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'cbee5tz9dxEPbhK9gOfWtm3', 'InfocHelper'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../business/Network/Protocol/StorageUtil'),
                    s = e('../config/LSKey'),
                    c = e('../util/TimeUtil'),
                    l = e('../../modules/MGUtils/MGPlatform'),
                    u = e('../../modules/MGBasic/scripts/Logic/MGBasicEntrance'),
                    d = e('../util/PU');
                (function (e) {
                    var t = null;

                    function n() {
                        var e = 0,
                            t = o.default.read(s.default.FIRST_ENTER_TIME);
                        return null == t || null == t || 0 == t.length ? ((e = new Date().getTime()), o.default.save(s.default.FIRST_ENTER_TIME, e + '')) : (e = parseInt(t)), c.default.formatDate(e) === c.default.getTodayFormatDate() ? 1 : 2;
                    }

                    function a() {
                        return d.default.isWeiXin() ? 1 : d.default.isQQ() ? 2 : d.default.isCM() ? 6 : 0;
                    }

                    function r() {
                        return cc.sys.os === cc.sys.OS_IOS ? 1 : cc.sys.os === cc.sys.OS_ANDROID ? 2 : 0;
                    }
                    (e.isNewUser = n),
                        (e.getSystemInfo = function () {
                            return null == t && (t = l.MGPlatform.getSystemInfoSync()), t;
                        }),
                        (e.getCommonData = function (e, t, i, o) {
                            return null == e ? 'brand=&model=&pixelratio=&version=&system=&sdkversion=&wechatid=' + t + '&newuser=&authorization=&product_no=239&public_index=6&channel_key=' + a() + '&game_id=1001&game_name=钢琴块&sub_channel=&benchmarklevel=&platform=' + r() + '&game_version=' + o : 'brand=' + e.brand + '&model=' + e.model + '&pixelratio=' + e.pixelRatio + '&version=' + e.version + '&system=' + e.system + '&sdkversion=' + e.SDKVersion + '&wechatid=' + t + '&newuser=' + n() + '&authorization=' + i + '&product_no=239&public_index=6&channel_key=' + a() + '&game_id=1001&game_name=钢琴块&sub_channel=' + u.MGBasic.getChannelId() + '&benchmarklevel=&platform=' + r() + '&game_version=' + o;
                        });
                })(i.InfocHelper || (i.InfocHelper = {})),
                    cc._RF.pop();
            },
            {
                '../../modules/MGBasic/scripts/Logic/MGBasicEntrance': 'MGBasicEntrance',
                '../../modules/MGUtils/MGPlatform': 'MGPlatform',
                '../business/Network/Protocol/StorageUtil': 'StorageUtil',
                '../config/LSKey': 'LSKey',
                '../util/PU': 'PU',
                '../util/TimeUtil': 'TimeUtil',
            },
        ],
        Infoc: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '106e62RnflKpoIes3GB+kN1', 'Infoc'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var p = e('./InfocHelper'),
                    h = e('../base/GameInfoMgr'),
                    r = e('../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    f = e('../../modules/MGUtils/NetworkUtils'),
                    m = e('../util/PU');
                (function (c) {
                    var l = 'https://helpminigame1.ksmobile.com/g/v1',
                        u = 'http://111.230.84.242/g/v1',
                        d = null;

                    function a(e, t, i, o) {
                        var n = p.InfocHelper.getCommonData(d, t, i, o),
                            a = l + '/?' + n + '&' + e;
                        c.UseTestReportHost && (console.warn('================ now use test report host ============= ' + u), (a = u + '/?' + n + '&' + e));
                        var r = encodeURI(a),
                            s = h.GameInfoMgr.Ins().getInfo();
                        f.default.request({
                            platform: m.default.getPlatformType(s.platform),
                            url: r,
                            method: 'GET',
                            success: function (e) {
                                if (e) {
                                    var t = (function (e) {
                                        if (!e) return -1;
                                        var t = e.indexOf('result=');
                                        if (t < 0) return -2;
                                        if (t + 7 >= e.length) return -3;
                                        var i = e.charAt(t + 7);
                                        return parseInt(i);
                                    })(e);
                                    1 == t || console.error('[infoc] report fail, status code=' + e.statusCode + ', result=' + t + ' ,url=' + a);
                                } else console.warn('[infoc] error, url=' + a);
                            },
                            fail: function (e, t) {
                                console.warn('[infoc] error, url=' + a + ' ,statusCode=' + e);
                            },
                        });
                    }
                    (c.UseTestReportHost = !1),
                        (c.reportInfoc = function (n, e) {
                            void 0 === e && (e = !1),
                                m.default.isQQ() || m.default.isWeiXin() || m.default.isCM()
                                    ? (null == d && (d = p.InfocHelper.getSystemInfo()),
                                      e
                                          ? a(n, '', 0, '')
                                          : r.MGUser.getUserLoginInfo({
                                                complete: function (o) {
                                                    r.MGUser.getUserBasicInfo({
                                                        complete: function (e) {
                                                            var t = h.GameInfoMgr.Ins().getInfo(),
                                                                i = e ? 1 : 2;
                                                            a(n, o ? o.playerId : '', i, t ? t.version : '');
                                                        },
                                                    });
                                                },
                                            }))
                                    : console.log('Infoc platform not support: ' + n);
                        });
                })(i.Infoc || (i.Infoc = {})),
                    cc._RF.pop();
            },
            {
                '../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../modules/MGUtils/NetworkUtils': 'NetworkUtils',
                '../base/GameInfoMgr': 'GameInfoMgr',
                '../util/PU': 'PU',
                './InfocHelper': 'InfocHelper',
            },
        ],
        InsFactory: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '0d187rdpt9OXbJ885fVR0xG', 'InsFactory'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function n() {
                        this.mFactory = {};
                    }
                    return (
                        (n._getInstance = function () {
                            return n._inited || ((n._inited = !0), (n._instance = new n())), n._instance;
                        }),
                        (n.setIns = function (e, t, i) {
                            void 0 === i && (i = !1);
                            var o = n._getInstance().mFactory;
                            return !(o[e] && !i) && ((o[e] = t), !0);
                        }),
                        (n.getIns = function (e) {
                            var t = n._getInstance().mFactory[e];
                            return t || null;
                        }),
                        (n._inited = !1),
                        n
                    );
                })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        InstrumentFactory: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'bbdfeA2aoNPMIMk4BjfuYr5', 'InstrumentFactory'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./MusicInstrument'),
                    n = (function () {
                        function e() {
                            this.instruments = [];
                        }
                        return (
                            (e.prototype.get = function (e) {
                                for (var t = 0; t < this.instruments.length; ++t) if (this.instruments[t].name === e) return this.instruments[t];
                                var i = new o.default(e);
                                return this.instruments.push(i), i.makeUp(), i;
                            }),
                            (e.prototype.preloadMusic = function () {
                                this.get('piano');
                            }),
                            e
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                './MusicInstrument': 'MusicInstrument',
            },
        ],
        InviteAwardManager: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '43a658I8w5LaoGYD2UyXssT', 'InviteAwardManager'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var s = e('../DB/DBMgr'),
                    o = (function () {
                        function e() {}
                        return (
                            (e.getInstance = function () {
                                return e.mInstance || (e.mInstance = new e()), e.mInstance;
                            }),
                            (e.prototype.getInviteAwardVM = function () {
                                for (var e = [], t = 0, i = s.default.Ins().getDBRows(s.eDataBase.eDB_InviteAward); t < i.length; t++) {
                                    var o = i[t],
                                        n = parseInt(o.mRowData[0]);
                                    if (n && 'number' == typeof n) {
                                        var a = new c(),
                                            r = o;
                                        (a.id = r.getId()), (a.type = r.getType()), (a.fragments = r.getFragments()), (a.diamonds = r.getDiamonds()), (a.coins = r.getCoins()), (a.power = r.getPower()), e.push(a);
                                    }
                                }
                                return Object.seal(e);
                            }),
                            e
                        );
                    })();
                i.InviteAwardManager = o;
                var c = function () {};
                (i.InviteAwardVM = c), cc._RF.pop();
            },
            {
                '../DB/DBMgr': 'DBMgr',
            },
        ],
        InviteAward: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'efc21SsLPxClp2y3MYFleS6', 'InviteAward'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.findInviteAwardById = function (e) {
                                return this.find('id', e);
                            }),
                            (t.prototype.getRow = function () {
                                return new a();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.InviteAward = n;
                var a = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getId = function () {
                            return this.getInt('id');
                        }),
                        (t.prototype.getType = function () {
                            return this.getInt('type');
                        }),
                        (t.prototype.getFragments = function () {
                            return this.getInt('fragments');
                        }),
                        (t.prototype.getDiamonds = function () {
                            return this.getInt('diamonds');
                        }),
                        (t.prototype.getCoins = function () {
                            return this.getInt('coins');
                        }),
                        (t.prototype.getPower = function () {
                            return this.getInt('power');
                        }),
                        t
                    );
                })(o.default);
                (i.InviteAwardRow = a), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        InviteSkinManager: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'dcfb0BV1ZxH/52/55T6TaYY', 'InviteSkinManager'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../reward/ActivityRewardManager'),
                    n = e('../reward/ActivityBean'),
                    a = e('./SkinDataManager'),
                    r = (function () {
                        function e() {}
                        return (
                            (e.refreshInviteSkinData = function () {
                                var t = this;
                                a.SkinDataMgr.Ins().isUnLockAllInviteSkin() ||
                                    (this.updateInviteSkinData(o.ActivityRewardMgr.Ins().getCacheInviteRewardList(n.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SKIN)),
                                    o.ActivityRewardMgr.Ins().getInviteSuccessListComplete(n.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SKIN, function (e) {
                                        t.updateInviteSkinData(e);
                                    }));
                            }),
                            (e.updateInviteSkinData = function (e) {
                                if (e && 0 < e.length) {
                                    var t = 0;
                                    e.forEach(function (e) {
                                        e.hd_id == n.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SKIN && e.is_new_player && t++;
                                    }),
                                        3 <= t && a.SkinDataMgr.Ins().unlockInviteSkin(),
                                        a.SkinDataMgr.Ins().updateInviteSkinCount(3 < t ? 3 : t);
                                }
                            }),
                            e
                        );
                    })();
                (i.InviteSkinManager = r), cc._RF.pop();
            },
            {
                '../reward/ActivityBean': 'ActivityBean',
                '../reward/ActivityRewardManager': 'ActivityRewardManager',
                './SkinDataManager': 'SkinDataManager',
            },
        ],
        InviteSkinPrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'd1be4emRMNMbIVkEUMLHFBw', 'InviteSkinPrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../UI/GameEntraScene/BasicTouchEvent'),
                    n = e('../../../modules/MGAppShare/scripts/ShareImageUtils'),
                    a = e('../UI/GameEntraScene/ToastPrefab'),
                    r = e('../gameover/SaveSuccessPrefab'),
                    s = e('../../base/Log'),
                    c = e('../../social/WXHelper'),
                    l = e('../reward/ActivityBean'),
                    u = e('../UI/GameEntraScene/ImgCache'),
                    d = e('../Logic/SkinDataManager'),
                    p = e('../reward/ActivityRewardManager'),
                    h = e('../../base/G'),
                    f = e('./SkinTryData'),
                    m = e('./SkinUtils'),
                    g = e('../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    _ = e('../Logic/EventBus'),
                    y = e('../Logic/NotifyEvent'),
                    S = e('../../../modules/MGAppShare/scripts/MGShareUtil'),
                    v = e('../../social/AvatarUtil'),
                    I = e('../../../modules/MGAppShare/scripts/ShareImage'),
                    T = e('../../util/PU'),
                    C = e('../UI/GameEntraScene/mainpage/MainpageBaseComponent'),
                    E = e('../../infoc/m_p2_daily_activity'),
                    A = e('../UI/GameEntraScene/mainpage/WelfareController'),
                    P = cc._decorator,
                    k = P.ccclass,
                    M = P.property,
                    L = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.content_layout = null), (e.invite_fds_btn = null), (e.save_image_btn = null), (e.close_btn = null), (e.invite_count_text = null), (e.avatar_sprite1 = null), (e.mask_layout1 = null), (e.avatar_sprite2 = null), (e.mask_layout2 = null), (e.avatar_sprite3 = null), (e.mask_layout3 = null), (e.invite_count_layout = null), (e.try_btn = null), (e.popup_layout = null), (e.source = A.default.SRC_HOME_PAGE_CLICK), (e.newUserCount = 0), (e.mCloseBtnClickCallback = null), (e.mInviteFdsBtnClickCallback = null), (e.mSaveImageBtnCallback = null), (e.mTryBtnCallback = null), (e.mTrySource = A.default.SRC_SKIN_INVITE_SHOW), (e.isSaving = !1), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.setSource = function (e) {
                                this.source = e;
                            }),
                            (e.prototype.setCloseCallback = function (e) {
                                this.mCloseCallback = e;
                            }),
                            (e.prototype.setInvitefdsCallback = function (e) {
                                this.mInviteFdsCallback = e;
                            }),
                            (e.prototype.setSaveImageCallback = function (e) {
                                this.mSaveImageCallback = e;
                            }),
                            (e.prototype.setTrySource = function (e) {
                                this.mTrySource = e;
                            }),
                            (e.prototype.onLoad = function () {
                                this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                }),
                                    s.default.i('[SkinStore] InviteSKin initView onLoad.....'),
                                    this.initEvent(),
                                    this.initData(),
                                    this.hideShareToFriCircleForQQ();
                            }),
                            (e.prototype.hideShareToFriCircleForQQ = function () {
                                T.default.isQQ() && (this.save_image_btn.active = !1);
                            }),
                            (e.prototype.initEvent = function () {
                                var e = this;
                                (this.mCloseBtnClickCallback = new o.default(function () {
                                    e.closeBtnClick();
                                })),
                                    this.setTouchCb(this.close_btn, this.mCloseBtnClickCallback),
                                    (this.mInviteFdsBtnClickCallback = new o.default(function () {
                                        e.inviteFdsBtnClick(), E.default.report(e.mSource, E.default.ACTION_CLICK_SHARE);
                                    })),
                                    this.setTouchCb(this.invite_fds_btn, this.mInviteFdsBtnClickCallback),
                                    (this.mSaveImageBtnCallback = new o.default(function () {
                                        e.saveImageBtnClick(), E.default.report(e.mSource, E.default.ACTION_CLICK_SAVE);
                                    })),
                                    this.setTouchCb(this.save_image_btn, this.mSaveImageBtnCallback),
                                    (this.mTryBtnCallback = new o.default(function () {
                                        e.clickTrySkin(), E.default.report(e.mSource, E.default.ACTION_CLICK_TRY);
                                    })),
                                    this.setTouchCb(this.try_btn, this.mTryBtnCallback);
                            }),
                            (e.prototype.setTouchCb = function (e, t) {
                                if (e && t) {
                                    var i = e instanceof cc.Component ? e.node : e;
                                    i && i.on(cc.Node.EventType.TOUCH_END, t.click, t);
                                }
                            }),
                            (e.prototype.clickTrySkin = function () {
                                var e = this,
                                    t = d.SkinDataMgr.Ins().getInviteSkin();
                                null != t
                                    ? (console.log('[SkinStore] itemTrySkinCallback skin = ' + t),
                                      m.default.trySkin(
                                          t,
                                          this.popup_layout.node,
                                          function () {},
                                          function () {},
                                          function () {
                                              h.G.skinTryData || (h.G.skinTryData = new f.default()), (h.G.skinTryData.source = e.mTrySource);
                                          },
                                      ))
                                    : console.error('[InviteSkinStore] trySkin skin = null');
                            }),
                            (e.prototype.initData = function () {
                                var t = this;
                                s.default.i('[SkinStore] InviteSKin initData.....'),
                                    p.ActivityRewardMgr.Ins().getInviteSuccessListComplete(l.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SKIN, function (e) {
                                        (t.invitees = e), t.initView();
                                    });
                            }),
                            (e.prototype.initView = function () {
                                var t = this;
                                if ((s.default.i('[SkinStore] InviteSKin initView this.invitees.', this.invitees), this.invitees && 0 < this.invitees.length)) {
                                    var i = 0;
                                    if (
                                        (this.invitees.forEach(function (e) {
                                            e.hd_id == l.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SKIN && e.is_new_player && (1 == ++i && ((t.mask_layout1.node.active = !0), (t.avatar_sprite1.node.width = 108), (t.avatar_sprite1.node.height = 108), v.default.showUserAvatar(e.avatar_url, t.avatar_sprite1, !1)), 2 == i && ((t.mask_layout2.node.active = !0), (t.avatar_sprite2.node.width = 108), (t.avatar_sprite2.node.height = 108), v.default.showUserAvatar(e.avatar_url, t.avatar_sprite2, !1)), 3 == i && ((t.mask_layout3.node.active = !0), (t.avatar_sprite3.node.width = 108), (t.avatar_sprite3.node.height = 108), v.default.showUserAvatar(e.avatar_url, t.avatar_sprite3, !1))), s.default.i('[SkinStore] InviteSKin initView invitee = ' + e);
                                        }),
                                        3 <= i)
                                    )
                                        (this.invite_count_layout.node.active = !1), d.SkinDataMgr.Ins().unlockInviteSkin();
                                    else {
                                        this.invite_count_layout.node.active = !0;
                                        var e = '/ui/skin_invite_num' + i;
                                        u.default.get2(e, this.invite_count_text);
                                    }
                                    d.SkinDataMgr.Ins().updateInviteSkinCount(3 < i ? 3 : i), (this.newUserCount = 3 < i ? 3 : i);
                                }
                                s.default.i('[SkinStore] InviteSKin initView.....');
                            }),
                            (e.prototype.closeBtnClick = function () {
                                this.invokeCloseCb(), this.mCloseCallback && this.mCloseCallback();
                            }),
                            (e.prototype.inviteFdsBtnClick = function () {
                                this.mInviteFdsCallback && this.mInviteFdsCallback(),
                                    g.MGUser.getUserLoginInfo({
                                        complete: function (e) {
                                            e &&
                                                S.MGShareUtils.shareForInviteSkin(e.playerId, l.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SKIN, function (e) {
                                                    s.default.i('邀请好友得皮肤卡片分享,result : ' + e), _.default.fire(y.default.SHARE_HOME_SHOW_INVITE_TIPS);
                                                });
                                        },
                                    });
                            }),
                            (e.prototype.saveImageBtnClick = function () {
                                this.isSaving || ((this.isSaving = !0), this.mSaveImageCallback && this.mSaveImageCallback(), this.shareQRCodeToFriendCircle(), (this.isSaving = !1));
                            }),
                            (e.prototype.shareQRCodeToFriendCircle = function () {
                                var i = this,
                                    t = new n.default();
                                this.showGenerateToast(),
                                    t.getShraeQRCode(
                                        function (e) {
                                            t.setShareImageFds(e),
                                                t.getShareImage(I.ShareImage.TYPE_SHARE_GIFT_FDS, function (e, t) {
                                                    i.hideGenerateToast(),
                                                        e
                                                            ? (i.showSavingToast(),
                                                              i.saveImgToAlbum(
                                                                  t,
                                                                  function () {
                                                                      i.hideSavingToast(), i.showSaveSuccessDialog();
                                                                  },
                                                                  function () {
                                                                      i.hideSavingToast(), i.showSavingFailToast();
                                                                  },
                                                              ))
                                                            : i.hideSavingToast();
                                                });
                                        },
                                        I.ShareImage.QRCODE_IMAGE_WIDHT,
                                        I.ShareImage.QRCODE_IMAGE_HEIGHT,
                                        l.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SKIN,
                                    );
                            }),
                            (e.prototype.saveImgToAlbum = function (e, t, i) {
                                c.WXHelper.saveTmpImgToAlbum(e, t, i);
                            }),
                            (e.prototype.showLoadingQRCodeFailToast = function () {
                                var e = cc.instantiate(this.mToastPrefb);
                                e.getComponent(a.default).showTips('保存失败\n\r请联网后重试!', function () {
                                    e.destroy();
                                }),
                                    this.node.addChild(e);
                            }),
                            (e.prototype.showSavingFailToast = function () {
                                var e = cc.instantiate(this.mToastPrefb);
                                e.getComponent(a.default).showLoadFail(function () {
                                    e.destroy();
                                }),
                                    this.node.addChild(e);
                            }),
                            (e.prototype.showGenerateToast = function () {
                                var e = cc.instantiate(this.mToastPrefb);
                                (e.name = 'generateToast'), e.getComponent(a.default).showLoading('正在生成图片'), this.node.addChild(e);
                            }),
                            (e.prototype.hideGenerateToast = function () {
                                var e = this.node.getChildByName('generateToast');
                                e && e.destroy();
                            }),
                            (e.prototype.showSavingToast = function () {
                                var e = cc.instantiate(this.mToastPrefb);
                                (e.name = 'savingToast'), e.getComponent(a.default).showLoading('正在保存图片'), this.node.addChild(e);
                            }),
                            (e.prototype.hideSavingToast = function () {
                                var e = this.node.getChildByName('savingToast');
                                e && e.destroy();
                            }),
                            (e.prototype.showSaveSuccessDialog = function () {
                                var e = cc.instantiate(this.mSaveToAlbumPrefb);
                                e.getComponent(r.default).setTips(' 快去朋友圈分享吧!'), this.node.addChild(e);
                            }),
                            (e.prototype.start = function () {}),
                            (e.skinName = 'ice'),
                            __decorate([M(cc.Layout)], e.prototype, 'content_layout', void 0),
                            __decorate([M(cc.Button)], e.prototype, 'invite_fds_btn', void 0),
                            __decorate([M(cc.Node)], e.prototype, 'save_image_btn', void 0),
                            __decorate([M(cc.Button)], e.prototype, 'close_btn', void 0),
                            __decorate([M(cc.Sprite)], e.prototype, 'invite_count_text', void 0),
                            __decorate([M(cc.Sprite)], e.prototype, 'avatar_sprite1', void 0),
                            __decorate([M(cc.Layout)], e.prototype, 'mask_layout1', void 0),
                            __decorate([M(cc.Sprite)], e.prototype, 'avatar_sprite2', void 0),
                            __decorate([M(cc.Layout)], e.prototype, 'mask_layout2', void 0),
                            __decorate([M(cc.Sprite)], e.prototype, 'avatar_sprite3', void 0),
                            __decorate([M(cc.Layout)], e.prototype, 'mask_layout3', void 0),
                            __decorate([M(cc.Layout)], e.prototype, 'invite_count_layout', void 0),
                            __decorate([M(cc.Button)], e.prototype, 'try_btn', void 0),
                            __decorate([M(cc.Prefab)], e.prototype, 'mToastPrefb', void 0),
                            __decorate([M(cc.Prefab)], e.prototype, 'mSaveToAlbumPrefb', void 0),
                            __decorate([M(cc.Layout)], e.prototype, 'popup_layout', void 0),
                            (e = __decorate([k], e))
                        );
                    })(C.default);
                (i.default = L), cc._RF.pop();
            },
            {
                '../../../modules/MGAppShare/scripts/MGShareUtil': 'MGShareUtil',
                '../../../modules/MGAppShare/scripts/ShareImage': 'ShareImage',
                '../../../modules/MGAppShare/scripts/ShareImageUtils': 'ShareImageUtils',
                '../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../base/G': 'G',
                '../../base/Log': 'Log',
                '../../infoc/m_p2_daily_activity': 'm_p2_daily_activity',
                '../../social/AvatarUtil': 'AvatarUtil',
                '../../social/WXHelper': 'WXHelper',
                '../../util/PU': 'PU',
                '../Logic/EventBus': 'EventBus',
                '../Logic/NotifyEvent': 'NotifyEvent',
                '../Logic/SkinDataManager': 'SkinDataManager',
                '../UI/GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
                '../UI/GameEntraScene/ImgCache': 'ImgCache',
                '../UI/GameEntraScene/ToastPrefab': 'ToastPrefab',
                '../UI/GameEntraScene/mainpage/MainpageBaseComponent': 'MainpageBaseComponent',
                '../UI/GameEntraScene/mainpage/WelfareController': 'WelfareController',
                '../gameover/SaveSuccessPrefab': 'SaveSuccessPrefab',
                '../reward/ActivityBean': 'ActivityBean',
                '../reward/ActivityRewardManager': 'ActivityRewardManager',
                './SkinTryData': 'SkinTryData',
                './SkinUtils': 'SkinUtils',
            },
        ],
        InviteTipsPrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'c188d5hbXtHvLRurL0TNLbr', 'InviteTipsPrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./BasicTouchEvent'),
                    n = cc._decorator,
                    a = n.ccclass,
                    r = n.property,
                    s = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.title = null), (e.content = null), (e.bottomTips = null), (e.confirmButton = null), (e.closeBtn = null), (e.confirmLabel = null), (e.mConfirmClickCallback = null), (e.mCloseClickCallback = null), (e.mResolve = null), (e.mCloseCallback = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.onLoad = function () {
                                var e = this;
                                this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                }),
                                    this.confirmButton &&
                                        ((this.mConfirmClickCallback = new o.default(function () {
                                            e.onTapConfirm();
                                        })),
                                        this.confirmButton.node.on(cc.Node.EventType.TOUCH_END, this.mConfirmClickCallback.click, this.mConfirmClickCallback)),
                                    this.closeBtn &&
                                        ((this.mCloseClickCallback = new o.default(function () {
                                            e.onTapClose();
                                        })),
                                        this.closeBtn.node.on(cc.Node.EventType.TOUCH_END, this.mCloseClickCallback.click, this.mCloseClickCallback));
                            }),
                            (e.prototype.onTapClose = function () {
                                this.mCloseCallback && this.mCloseCallback();
                            }),
                            (e.prototype.onTapConfirm = function () {
                                this.mResolve && this.mResolve();
                            }),
                            (e.prototype.setTitle = function (e) {
                                this.title && (this.title.string = e);
                            }),
                            (e.prototype.setContent = function (e) {
                                this.content && (this.content.string = e);
                            }),
                            (e.prototype.setConfirmBtnContent = function (e) {
                                e && (this.confirmLabel.string = e);
                            }),
                            (e.prototype.setBottomTips = function (e) {
                                this.bottomTips && (this.bottomTips.string = e);
                            }),
                            (e.prototype.setConfirmCallback = function (e) {
                                this.mResolve = e;
                            }),
                            (e.prototype.setCloseCallback = function (e) {
                                this.mCloseCallback = e;
                            }),
                            __decorate([r(cc.Label)], e.prototype, 'title', void 0),
                            __decorate([r(cc.Label)], e.prototype, 'content', void 0),
                            __decorate([r(cc.Label)], e.prototype, 'bottomTips', void 0),
                            __decorate([r(cc.Button)], e.prototype, 'confirmButton', void 0),
                            __decorate([r(cc.Button)], e.prototype, 'closeBtn', void 0),
                            __decorate([r(cc.Label)], e.prototype, 'confirmLabel', void 0),
                            (e = __decorate([a], e))
                        );
                    })(cc.Component);
                (i.default = s), cc._RF.pop();
            },
            {
                './BasicTouchEvent': 'BasicTouchEvent',
            },
        ],
        InviteUnlockMusicCountdownUtil: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '6ab9b5wNTpLZJfld+MmDtJW', 'InviteUnlockMusicCountdownUtil'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../../util/StringUtil'),
                    n = e('../../../Logic/EventBus'),
                    a = e('../../../Logic/NotifyEvent'),
                    r = e('../../../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    s = (function () {
                        function e() {
                            (this.mIsActivityOver = !1), (this.mServerTime = r.MGUser.getCurrentServerTime()), this.initCountDownTime(this.mServerTime), cc.director.getScheduler().schedule(this.mCountdownTimeCallback, cc.director, 1, cc.macro.REPEAT_FOREVER, 0);
                        }
                        return (
                            (e.Ins = function () {
                                return null == this.sInstance && (this.sInstance = new e()), this.sInstance;
                            }),
                            (e.prototype.updateServerTime = function () {
                                (this.mServerTime = r.MGUser.getCurrentServerTime()), n.default.fire(a.default.UPDATE_MUSIC_LIST_CURRENT_TIME, this.mServerTime);
                            }),
                            (e.prototype.getActivityCountdownTime = function () {
                                return this.mIsActivityOver;
                            }),
                            (e.prototype.getCountdownTimeFormat = function () {
                                return this.mFormatTimeStr;
                            }),
                            (e.prototype.isBeyondActivityDeadline = function (e) {
                                return !o.StringUtil.isEmpty(e) && parseInt(e) < this.mServerTime;
                            }),
                            (e.prototype.getCurrentTime = function () {
                                return this.mServerTime;
                            }),
                            (e.prototype.initCountDownTime = function (e) {
                                var t,
                                    i,
                                    o,
                                    n,
                                    a = this,
                                    r = e - this.mServerTime,
                                    s = parseInt(r / 864e5 + ''),
                                    c = parseInt((r % 864e5) / 36e5 + ''),
                                    l = parseInt((r % 36e5) / 6e4 + ''),
                                    u = parseInt((r % 6e4) / 1e3 + '');
                                this.mCountdownTimeCallback = function () {
                                    --u < 0 && ((u = 59), --l < 0 && ((l = 59), --c < 0 && ((c = 23), s--))), 0 == s && 0 == c && 0 == l && 0 == u && ((a.mIsActivityOver = !0), a.stopCountdown()), (t = s < 10 ? '0' + s : s), (i = c < 10 ? '0' + c : c), (o = l < 10 ? '0' + l : l), (n = u < 10 ? '0' + u : u), (a.mFormatTimeStr = t + '天' + i + '时' + o + '分' + n + '秒'), a.mServerTime++;
                                };
                            }),
                            (e.prototype.stopCountdown = function () {
                                cc.director.getScheduler().unschedule(this.mCountdownTimeCallback, this);
                            }),
                            (e.sInstance = null),
                            e
                        );
                    })();
                (i.default = s), cc._RF.pop();
            },
            {
                '../../../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../../../util/StringUtil': 'StringUtil',
                '../../../Logic/EventBus': 'EventBus',
                '../../../Logic/NotifyEvent': 'NotifyEvent',
            },
        ],
        KeyNode: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '16ec3U5tpZOkbH1jdj05o22', 'KeyNode'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../MUI/MUISprite'),
                    n = e('../loader/KeypadFrameLoader'),
                    a = e('../../MUI/MUINode'),
                    r = (function (i) {
                        function e(e) {
                            void 0 === e && (e = null);
                            var t = i.call(this, e) || this;
                            return (t.imageData = n.default.getInstance().getAtlas()), console.error(t.imageData), (t.imageItem = n.default.getInstance().getKeyImageItem(e)), t.setContentSize(t.imageItem.rect.width, t.imageItem.rect.height), t.setPosition(-t.imageItem.rect.width / 2, -t.imageItem.rect.height / 2), t;
                        }
                        return __extends(e, i), e;
                    })(o.default),
                    s = (function (i) {
                        function e(e) {
                            void 0 === e && (e = null);
                            var t = i.call(this, 'key_' + e) || this;
                            return (t.touch = void 0), (t.keyI = void 0), (t.keyP = void 0), (t.keyE = void 0), t.setContentSize(1, 1), t.setScale(1.5, 1.5), 'd' != e && 'f' != e && 'j' != e && 'k' != e ? console.error('Unsupported name => ' + e) : ((t.touch = new r('touch')), t.touch.setVisible(!1), t.addChild(t.touch), (t.keyI = new r(e + '_white')), t.keyI.setVisible(!0), t.addChild(t.keyI), (t.keyP = new r(e + '_green')), t.keyP.setVisible(!1), t.addChild(t.keyP), (t.keyE = new r(e + '_red')), t.keyE.setVisible(!1), t.addChild(t.keyE)), t;
                        }
                        return (
                            __extends(e, i),
                            (e.prototype.onPressed = function () {
                                this.touch.setVisible(!0), this.keyI.setVisible(!1), this.keyP.setVisible(!0), this.keyE.setVisible(!1);
                            }),
                            (e.prototype.onReleased = function () {
                                this.touch.setVisible(!1), this.keyI.setVisible(!0), this.keyP.setVisible(!1), this.keyE.setVisible(!1);
                            }),
                            e
                        );
                    })(a.default);
                (i.default = s), cc._RF.pop();
            },
            {
                '../../MUI/MUINode': 'MUINode',
                '../../MUI/MUISprite': 'MUISprite',
                '../loader/KeypadFrameLoader': 'KeypadFrameLoader',
            },
        ],
        KeyTouchLine: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '396ecYPslpOxp/8d1dV1yut', 'KeyTouchLine'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var l = e('../../../base/G'),
                    o = e('../../MUI/MUILine'),
                    s = e('../../data/CMTouchEvent'),
                    u = e('../../MUI/MUIDefines'),
                    n = e('./KeyNode'),
                    a = e('../../../business/keypad/KeypadNavigator'),
                    r = (function (c) {
                        function e(e) {
                            var t = c.call(this, e) || this;
                            (t.rootNode = void 0), (t.keyMap = {}), (t.keyPos = {}), (t.mCMTouchEvent = void 0), (t.ratio = 0), (t.touchBuffer = null), (t.keyNodes = {}), (t.ratio = cc.view.getDevicePixelRatio()), t.updateLines(l.G.Ap.config.presentScale), t.setColor(new cc.Color(255, 255, 255, 255)), a.default.getInstance().addKeyDownCB(t.onKeyDown.bind(t)), a.default.getInstance().addKeyUpCB(t.onKeyUp.bind(t)), (t.rootNode = cc.find('Canvas')), (t.mCMTouchEvent = new s.CMTouchEvent()), (t.keyNodes = {});
                            var i = s.CMTouchID.D;
                            return (t.keyNodes[i] = new n.default('d')), t.keyNodes[i].setPosition(t.keyPos[i].x, t.keyPos[i].y), t.addChild(t.keyNodes[i]), (i = s.CMTouchID.F), (t.keyNodes[i] = new n.default('f')), t.keyNodes[i].setPosition(t.keyPos[i].x, t.keyPos[i].y), t.addChild(t.keyNodes[i]), (i = s.CMTouchID.J), (t.keyNodes[i] = new n.default('j')), t.keyNodes[i].setPosition(t.keyPos[i].x, t.keyPos[i].y), t.addChild(t.keyNodes[i]), (i = s.CMTouchID.K), (t.keyNodes[i] = new n.default('k')), t.keyNodes[i].setPosition(t.keyPos[i].x, t.keyPos[i].y), t.addChild(t.keyNodes[i]), t;
                        }
                        return (
                            __extends(e, c),
                            (e.prototype.removeFromParent = function () {
                                c.prototype.removeFromParent.call(this), a.default.getInstance().removeKeyDownCB(this.onKeyDown.bind(this)), a.default.getInstance().removeKeyUpCB(this.onKeyUp.bind(this));
                            }),
                            (e.prototype.draw = function (e, t) {
                                c.prototype.draw.call(this, e, t);
                                var i = u.MUI.global.renderType === u.MUI.RenderType.WEBGL,
                                    o = this.mCMTouchEvent.getPressedEvents();
                                switch (u.MUI.global.renderType) {
                                    case u.MUI.RenderType.WEBGL:
                                        o.length;
                                        break;
                                    case u.MUI.RenderType.CANVAS:
                                        var n = e;
                                        (n.fillStyle = 'red'), n.beginPath();
                                        for (var a = 0; a < o.length; a++) {
                                            var r = o[a].x * l.G.Ap.config.presentScale,
                                                s = 0;
                                            (s = i ? o[a].y * l.G.Ap.config.presentScale : (l.G.Ap.config.presentHeight - o[a].y) * l.G.Ap.config.presentScale), n.arc(r, s, 10 * this.ratio, 0, 2 * Math.PI, !1);
                                        }
                                        n.closePath(), n.fill();
                                }
                            }),
                            (e.prototype.updateLines = function (e) {
                                var t = u.MUI.global.renderType === u.MUI.RenderType.WEBGL,
                                    i = l.G.Ap.config.presentWidth * l.G.Ap.config.presentScale,
                                    o = Math.round(l.G.Ap.config.presentHeight * (t ? 0.28 : 0.72) * l.G.Ap.config.presentScale),
                                    n = [];
                                n.push(new cc.Vec2(0, o)), n.push(new cc.Vec2(i, o)), this.setLine(n);
                                var a = 0.25 * l.G.Ap.config.presentWidth,
                                    r = 0.28 * l.G.Ap.config.presentHeight;
                                (this.keyPos[s.CMTouchID.D] = {
                                    x: Math.round(0.5 * a),
                                    y: r,
                                }),
                                    (this.keyPos[s.CMTouchID.F] = {
                                        x: Math.round(1.5 * a),
                                        y: r,
                                    }),
                                    (this.keyPos[s.CMTouchID.J] = {
                                        x: Math.round(2.5 * a),
                                        y: r,
                                    }),
                                    (this.keyPos[s.CMTouchID.K] = {
                                        x: Math.round(3.5 * a),
                                        y: r,
                                    });
                            }),
                            (e.prototype.emitTouch = function (e, t) {
                                var i = this.keyPos[e];
                                0 == t ? (this.mCMTouchEvent.update(e, s.CMState.PRESSED, i.x, i.y), this.rootNode.emit('cm_touchstart', this.mCMTouchEvent.getPressedEvents()), this.keyNodes[e].setPosition(i.x, i.y), this.keyNodes[e].onPressed()) : 2 == t && (this.mCMTouchEvent.update(e, s.CMState.RELEASED, i.x, i.y), this.rootNode.emit('cm_touchend', this.mCMTouchEvent.getReleasedEvents()), this.mCMTouchEvent.update(e, s.CMState.IDLE, i.x, i.y), this.keyNodes[e].onReleased());
                            }),
                            (e.prototype.onKeyDown = function (e) {
                                var t = 1 == this.keyMap[e.keyCode] ? 1 : 0;
                                switch (((this.keyMap[e.keyCode] = 1), e.keyCode)) {
                                    case 68:
                                        this.emitTouch(s.CMTouchID.D, t);
                                        break;
                                    case 70:
                                        this.emitTouch(s.CMTouchID.F, t);
                                        break;
                                    case 74:
                                        this.emitTouch(s.CMTouchID.J, t);
                                        break;
                                    case 75:
                                        this.emitTouch(s.CMTouchID.K, t);
                                }
                            }),
                            (e.prototype.onKeyUp = function (e) {
                                switch (((this.keyMap[e.keyCode] = 0), e.keyCode)) {
                                    case 68:
                                        this.emitTouch(s.CMTouchID.D, 2);
                                        break;
                                    case 70:
                                        this.emitTouch(s.CMTouchID.F, 2);
                                        break;
                                    case 74:
                                        this.emitTouch(s.CMTouchID.J, 2);
                                        break;
                                    case 75:
                                        this.emitTouch(s.CMTouchID.K, 2);
                                }
                            }),
                            e
                        );
                    })(o.default);
                (i.default = r), cc._RF.pop();
            },
            {
                '../../../base/G': 'G',
                '../../../business/keypad/KeypadNavigator': 'KeypadNavigator',
                '../../MUI/MUIDefines': 'MUIDefines',
                '../../MUI/MUILine': 'MUILine',
                '../../data/CMTouchEvent': 'CMTouchEvent',
                './KeyNode': 'KeyNode',
            },
        ],
        KeyValuePair: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '675acqOxYFGNYkMYRI+jQI6', 'KeyValuePair'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e(e, t) {
                        (this._key = e), (this._value = t);
                    }
                    return (
                        Object.defineProperty(e.prototype, 'key', {
                            get: function () {
                                return this._key;
                            },
                            enumerable: !0,
                            configurable: !0,
                        }),
                        Object.defineProperty(e.prototype, 'value', {
                            get: function () {
                                return this._value;
                            },
                            enumerable: !0,
                            configurable: !0,
                        }),
                        (e.prototype.toString = function () {
                            return '[' + (this._key || '') + ', ' + (this._value || '') + ']';
                        }),
                        e
                    );
                })();
                (i.KeyValuePair = o), cc._RF.pop();
            },
            {},
        ],
        KeypadFocusedUI: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '657acnSs31Djrx4Xu6UcX/2', 'KeypadFocusedUI'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var c = '_focus_block_',
                    o = (function () {
                        function e() {
                            var i = this;
                            (this.focusBlockPrefab = void 0),
                                cc.loader.loadRes('prefab/keypad/FocusBlock', cc.Prefab, function (e, t) {
                                    t && (console.error('KeypadFocusedUI:: => FocusBlock Prefab Ready'), (i.focusBlockPrefab = t));
                                });
                        }
                        return (
                            (e.getInstance = function () {
                                return e.mInstance || (e.mInstance = new e()), e.mInstance;
                            }),
                            (e.prototype.hideFocusEffect = function () {
                                var e = cc.find('NavigatorNode');
                                if (e) {
                                    var t = e.getChildByName(c);
                                    t && t.removeFromParent();
                                }
                            }),
                            (e.prototype.showFocusEffect = function (e) {
                                this.showFocusEffectWithRetry(e, 3);
                            }),
                            (e.prototype.showFocusEffectWithRetry = function (e, t) {
                                var i = this;
                                if (e && e.isValid) {
                                    if (!this.focusBlockPrefab)
                                        return (
                                            console.error('KeypadFocusedUI::showFocusEffect => Missing FocusBlock'),
                                            void (
                                                1 <= t &&
                                                setTimeout(function () {
                                                    i.showFocusEffectWithRetry(e, t - 1);
                                                }, 500)
                                            )
                                        );
                                    var o = cc.find('NavigatorNode');
                                    if (o) {
                                        var n = o.getChildByName(c);
                                        n && n.removeFromParent();
                                        var a = e.getBoundingBoxToWorld(),
                                            r = o.convertToNodeSpaceAR(a.center),
                                            s = cc.instantiate(this.focusBlockPrefab);
                                        (s.name = c), (s.width = Math.round(a.width + 32)), (s.height = Math.round(a.height + 32)), (s.x = Math.round(r.x)), (s.y = Math.round(r.y)), o.addChild(s), console.error('KeypadFocusedUI::showFocusEffect => ' + e.name + ' (' + Math.round(a.x) + ', ' + Math.round(a.y) + ')');
                                    } else console.error('KeypadFocusedUI::showFocusEffect => Missing Canvas');
                                }
                            }),
                            (e.mInstance = void 0),
                            e
                        );
                    })();
                (i.KeypadFocusedUI = o), cc._RF.pop();
            },
            {},
        ],
        KeypadFrameLoader: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'bdf95X3IzVDBLFLNC2h3uht', 'KeypadFrameLoader'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../atlas/SimpleAtlas'),
                    n = (function () {
                        function e() {
                            (this.mAtlas = null), (this.mInit = !1), (this.mAtlas = new o.default());
                        }
                        return (
                            (e.getInstance = function () {
                                return null == e.sInstance && (e.sInstance = new e()), e.sInstance;
                            }),
                            (e.prototype.init = function () {
                                return __awaiter(this, void 0, void 0, function () {
                                    return __generator(this, function (e) {
                                        switch (e.label) {
                                            case 0:
                                                return this.mInit ? [2] : ((this.mInit = !0), [4, this.mAtlas.load('gameImage/keypad')]);
                                            case 1:
                                                return e.sent(), [2];
                                        }
                                    });
                                });
                            }),
                            (e.prototype.getAtlas = function () {
                                return this.mAtlas;
                            }),
                            (e.prototype.getKeyImageItem = function (e) {
                                return this.mAtlas.getItem(e);
                            }),
                            (e.sInstance = null),
                            e
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../../atlas/SimpleAtlas': 'SimpleAtlas',
            },
        ],
        KeypadNavigatorBase: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '49a2bO6e25Ar7YB42oRuB4L', 'KeypadNavigatorBase'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var d,
                    o,
                    n = e('./KeypadFocusedUI'),
                    a = e('./KeypadUtil'),
                    r = e('../UI/GameEntraScene/MusicLib/NormalMusicCardItemPrefb'),
                    M = e('../UI/GameEntraScene/MusicLib/LevelMusicListCtrl'),
                    L = e('../UI/GameEntraScene/MusicLib/HotMusicListCtrl'),
                    s = e('../UI/GameEntraScene/MusicLib/HotMusicCardItemPrefb'),
                    c = e('../Logic/MoneySystem'),
                    b = function (e, t) {
                        return Math.sqrt(Math.pow(Math.abs(e.x - t.x), 2) + Math.pow(Math.abs(e.y - t.y), 2));
                    },
                    N = function (e, t) {
                        return Math.abs(e.y - t.y) <= 12;
                    },
                    R = function (e, t) {
                        return Math.abs(e.x - t.x) <= 12;
                    },
                    D = function (e) {
                        return !(!e.active || !e.activeInHierarchy);
                    };
                ((o = d || (d = {}))[(o.PUSH_DIALOG = 0)] = 'PUSH_DIALOG'), (o[(o.GOTO_SCENE = 1)] = 'GOTO_SCENE'), (o[(o.POP_DIALOG = 2)] = 'POP_DIALOG'), (o[(o.REFRESH = 3)] = 'REFRESH');
                var w = console.error,
                    p = console.warn,
                    l = function (e) {
                        return e && e.preventDefault ? e.preventDefault() : (window.event.returnValue = !1), !1;
                    },
                    u = (function () {
                        function e() {
                            var t = this;
                            (this.isHorizontalMode = !1),
                                (this.mPageStack = []),
                                (this.currPageName = void 0),
                                (this.currPageData = void 0),
                                (this.currPageNode = void 0),
                                (this.currFocusParent = void 0),
                                (this.currFocusNode = void 0),
                                (this.currFocusIndex = void 0),
                                (this.mTaskList = []),
                                (this.mCurrTask = void 0),
                                (this.mIsDebugMode = !1),
                                (this.mKeyDownCB = []),
                                (this.mKeyUpCB = []),
                                (this.mDispatchEventFunc = void 0),
                                (this.lastPageTime = 0),
                                (this.lastPageName = ''),
                                (this.lastPageAction = void 0),
                                (this.mIsDebugMode = 'true' == CMPlay.getQueryString('_cm_debug_', 'false')),
                                (this.isHorizontalMode = a.default.isHorizon()),
                                this.isHorizontalMode &&
                                    (cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDownSys, this),
                                    cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUpSys, this),
                                    n.KeypadFocusedUI.getInstance(),
                                    (window.document.body.onkeydown = function (e) {
                                        t.onKeyDownBody(e), l(e);
                                    }),
                                    (window.document.body.onkeyup = function (e) {
                                        t.onKeyUpBody(e), l(e);
                                    }));
                        }
                        return (
                            (e.prototype.addKeyDownCB = function (e) {
                                -1 == this.mKeyDownCB.indexOf(e) && this.mKeyDownCB.push(e);
                            }),
                            (e.prototype.removeKeyDownCB = function (e) {
                                var t = this.mKeyDownCB.indexOf(e);
                                -1 != t && this.mKeyDownCB.splice(t, 1);
                            }),
                            (e.prototype.addKeyUpCB = function (e) {
                                -1 == this.mKeyUpCB.indexOf(e) && this.mKeyUpCB.push(e);
                            }),
                            (e.prototype.removeKeyUpCB = function (e) {
                                var t = this.mKeyUpCB.indexOf(e);
                                -1 != t && this.mKeyUpCB.splice(t, 1);
                            }),
                            (e.prototype.setDispatchEventFunc = function (e) {
                                this.mDispatchEventFunc = e;
                            }),
                            (e.prototype.pushDialog = function (e, t) {
                                if ((void 0 === t && (t = void 0), this.isHorizontalMode)) {
                                    var i = t || e.name;
                                    p('KeypadNavigator::pushDialog => ' + i), this.handlePage(e, i, d.PUSH_DIALOG);
                                }
                            }),
                            (e.prototype.popDialog = function (e, t) {
                                if ((void 0 === t && (t = void 0), this.isHorizontalMode)) {
                                    var i = t || e.name;
                                    p('KeypadNavigator::popDialog => ' + i), this.handlePage(e, i, d.POP_DIALOG);
                                }
                            }),
                            (e.prototype.gotoPage = function (e, t, i) {
                                if ((void 0 === t && (t = void 0), void 0 === i && (i = ''), this.isHorizontalMode)) {
                                    var o = t || e.name;
                                    p('KeypadNavigator::gotoPage => ' + o + i ? 'from tag[' + i + ']' : ''), this.handlePage(e, o, d.GOTO_SCENE);
                                }
                            }),
                            (e.prototype.refreshPage = function (e, t, i) {
                                if ((void 0 === t && (t = void 0), void 0 === i && (i = void 0), this.isHorizontalMode)) {
                                    var o = t || e.name;
                                    p('KeypadNavigator::refreshPage => ' + o), this.handlePage(e, o, d.REFRESH, i);
                                }
                            }),
                            (e.prototype.handlePage = function (e, t, i, o) {
                                void 0 === t && (t = void 0), void 0 === o && (o = void 0);
                                var n = new Date().getTime();
                                this.lastPageName == t && this.lastPageAction == i && Math.abs(n - this.lastPageTime) < 500
                                    ? w('KeypadNavigator::handlePage => ' + t + ' ERROR: skip for duplicate')
                                    : ((this.lastPageAction = i),
                                      (this.lastPageName = t),
                                      (this.lastPageTime = n),
                                      this.mTaskList.push({
                                          node: e,
                                          action: i,
                                          name: t,
                                          callback: o,
                                      }),
                                      this.processPageTask());
                            }),
                            (e.prototype.processPageTask = function () {
                                var e = this;
                                if (!(this.mTaskList.length <= 0) && !this.mCurrTask && ((this.mCurrTask = this.mTaskList.shift()), this.mCurrTask)) {
                                    var t = this.mCurrTask.callback;
                                    this.processPageItem(this.mCurrTask.node, this.mCurrTask.action, this.mCurrTask.name, function () {
                                        (e.mCurrTask = void 0), e.processPageTask(), t && t();
                                    });
                                }
                            }),
                            (e.prototype.processPageItem = function (e, t, i, o) {
                                var n = this;
                                if ((void 0 === i && (i = void 0), t == d.REFRESH))
                                    if (this.currPageName != i) p('KeypadNavigator::processPageItem => REFRESH # name:' + i + ' => SKIP for currPage:' + this.currPageName), o && o();
                                    else {
                                        p('KeypadNavigator::processPageItem => REFRESH # name:' + i), this.hideFocusEffect();
                                        var a = this.currPageNode,
                                            r = this.currFocusParent,
                                            s = this.currFocusNode,
                                            c = this.currFocusIndex;
                                        this._updateCurrPage(function () {
                                            var e = n.getLatestNode(a, r, s, c) || n.goFirstNode();
                                            e && n.focusNode(e), o && o();
                                        });
                                    }
                                else if (t == d.POP_DIALOG) {
                                    if (this.currPageName != i) p('KeypadNavigator::processPageItem => POP_DIALOG # name:' + i + ' => SKIP for currPage:' + this.currPageName);
                                    else {
                                        p('KeypadNavigator::processPageItem => POP_DIALOG # name:' + i), this.hideFocusEffect();
                                        var l = this.mPageStack.pop();
                                        l
                                            ? (p('POP => name:' + l.name),
                                              (this.currPageName = l.name),
                                              (this.currPageData = l.data),
                                              this.focusNode({
                                                  candidate: l.node,
                                                  focusParent: l.focusParent,
                                                  focusNode: l.focusNode,
                                                  focusIndex: l.focusIndex,
                                              }))
                                            : ((this.currPageName = void 0), (this.currPageData = void 0), (this.currPageNode = void 0), (this.currFocusParent = void 0), (this.currFocusNode = void 0), (this.currFocusIndex = void 0), p('POP => WARN: NO MORE PAGE FOUND!!!'));
                                    }
                                    o && o();
                                } else {
                                    this.hideFocusEffect(),
                                        t == d.PUSH_DIALOG
                                            ? (p('KeypadNavigator::processPageItem => PUSH_DIALOG # name:' + i),
                                              p('PUSH => name:' + this.currPageName),
                                              this.mPageStack.push({
                                                  name: this.currPageName,
                                                  data: this.currPageData,
                                                  node: this.currPageNode,
                                                  focusParent: this.currFocusParent,
                                                  focusNode: this.currFocusNode,
                                                  focusIndex: this.currFocusIndex,
                                              }))
                                            : (p('KeypadNavigator::processPageItem => GOTO_SCENE # name:' + i), (this.mPageStack = []));
                                    var u = function () {
                                        this.goFirstNode(), o && o();
                                    }.bind(this);
                                    this._processPageItem(e, t, i, u);
                                }
                            }),
                            (e.prototype.isNodeExists = function (e) {
                                if (this.currPageData && this.currPageData.buttons) for (var t = this.currPageData.buttons, i = t.length, o = 0; o < i; o++) if (t[o].name == e) return !0;
                                return !1;
                            }),
                            (e.prototype._processPageItem = function (e, t, i, o) {
                                var n = this.getPageMap(i);
                                if (!n) return w('KeypadNavigator::processTaskItem => Unsupport page: ' + i), (this.currPageName = void 0), (this.currPageData = void 0), (this.currPageNode = void 0), void (o && o());
                                w('KeypadNavigator::processTaskItem => BEGIN: ' + i), (this.currPageName = i), (this.currPageData = n), (this.currPageData.rootNode = e), (this.currPageData.action = t), this._updateCurrPage(o);
                            }),
                            (e.prototype._updateCurrPage = function (a) {
                                var r = this.currPageData.rootNode,
                                    s = this.currPageName;
                                (this.currPageData.buttons = []), (this.currPageNode = void 0);
                                var c = this.currPageData.nameList,
                                    l = this.currPageData.multiList,
                                    e = function () {
                                        var e = [];
                                        this.findAllNodeByComponent(r, c, l, e);
                                        for (var t = 0; t < c.length; t++)
                                            for (var i = 0; i < e.length; i++) {
                                                if ((n = e[i]).name == c[t] && D(n)) {
                                                    var o = this.getNodeVec(n);
                                                    this.mIsDebugMode && p('Found node => ' + n.name + ' (' + Math.round(o.x) + ', ' + Math.round(o.y) + ')'), this.currPageData.buttons.push(n);
                                                }
                                            }
                                        for (i = 0; l && i < e.length; i++) {
                                            var n;
                                            if (D((n = e[i])) && -1 != l.indexOf(n.name)) {
                                                o = this.getNodeVec(n);
                                                this.mIsDebugMode && p('Found multi node => ' + n.name + ' (' + Math.round(o.x) + ', ' + Math.round(o.y) + ')'), this.currPageData.buttons.push(n);
                                            }
                                        }
                                        w('KeypadNavigator::processTaskItem => count(' + this.currPageData.buttons.length + ') END: ' + s), a && a();
                                    }.bind(this);
                                0 < this.currPageData.delayMS ? setTimeout(e, this.currPageData.delayMS) : e();
                            }),
                            (e.prototype.findAllNodeByComponent = function (e, t, i, o) {
                                for (var n = e && e.children ? e.children : [], a = 0; a < n.length; a++) {
                                    var r = n[a];
                                    '' != r.name && ('MainPagePrefab' == this.currPageName && 'start_btn' == r.name ? 'entra_middle_mainpage' == r.parent.name && -1 != t.indexOf(r.name) && (this.mIsDebugMode && p('push => ' + r.name), o.push(r)) : -1 != t.indexOf(r.name) ? (this.mIsDebugMode && w('push => ' + r.name), o.push(r)) : i && -1 != i.indexOf(r.name) && (this.mIsDebugMode && w('push => ' + r.name), o.push(r))), r.children && 0 < r.children.length && this.findAllNodeByComponent(r, t, i, o);
                                }
                            }),
                            (e.prototype.findFirstChildByName = function (e, t) {
                                for (var i = e && e.children ? e.children : [], o = 0; o < i.length; o++) {
                                    var n = i[o];
                                    if (n && '' != n.name && -1 != t.indexOf(n.name) && D(n)) return n;
                                    if (n.children && 0 < n.children.length) {
                                        var a = this.findFirstChildByName(n, t);
                                        if (null != a) return a;
                                    }
                                }
                            }),
                            (e.prototype.findGroupChildNode = function (e, t) {
                                if (t.parent) return t.parent == e ? t : this.findGroupChildNode(e, t.parent);
                            }),
                            (e.prototype.focusNode = function (e) {
                                e && e.candidate && e.focusNode && ((this.currPageNode = e.candidate), (this.currFocusNode = e.focusNode), (this.currFocusIndex = e.focusIndex || 0), (this.currFocusParent = e.focusParent || e.focusNode), this._focusNode_(e.delayMS));
                            }),
                            (e.prototype._focusNode_ = function (e) {
                                try {
                                    var t = this.currFocusNode;
                                    t &&
                                        t instanceof cc.Node &&
                                        (e && 0 < e
                                            ? (n.KeypadFocusedUI.getInstance().hideFocusEffect(),
                                              setTimeout(function () {
                                                  n.KeypadFocusedUI.getInstance().showFocusEffect(t);
                                              }, e))
                                            : n.KeypadFocusedUI.getInstance().showFocusEffect(t),
                                        this.currPageNode && this.currPageNode != t ? console.warn('_focusNode_ => ' + t.name + '(' + this.currPageNode.name + ')') : console.warn('_focusNode_ => ' + t.name));
                                } catch (e) {
                                    console.error('_focusNode_ => ' + e.message);
                                }
                            }),
                            (e.prototype.hideFocusEffect = function () {
                                this.isHorizontalMode && n.KeypadFocusedUI.getInstance().hideFocusEffect();
                            }),
                            (e.prototype.onKeyDownSys = function (e) {
                                this.onKeyDown(e);
                            }),
                            (e.prototype.onKeyUpSys = function (e) {
                                this.onKeyUp(e);
                            }),
                            (e.prototype.onKeyDownBody = function (e) {
                                this.onKeyDown(e);
                            }),
                            (e.prototype.onKeyUpBody = function (e) {
                                this.onKeyUp(e);
                            }),
                            (e.prototype.onKeyUp = function (e) {
                                for (var t = this.mKeyUpCB, i = 0; i < t.length; i++) t[i](e);
                            }),
                            (e.prototype.onKeyDown = function (e) {
                                for (var t = this.mKeyDownCB, i = 0; i < t.length; i++) t[i](e);
                                try {
                                    if (this.mDispatchEventFunc) if (this.mDispatchEventFunc(e)) return;
                                } catch (e) {
                                    console.error('KeypadNavigator => A ERROR: ' + JSON.stringify(e.stack));
                                }
                                try {
                                    switch (e.keyCode) {
                                        case 27:
                                            this.onPressBack();
                                            break;
                                        case 9:
                                            this.onPressTab();
                                            break;
                                        case 37:
                                            this.onPressLeft();
                                            break;
                                        case 38:
                                            this.onPressUp();
                                            break;
                                        case 39:
                                            this.onPressRight();
                                            break;
                                        case 40:
                                            this.onPressDown();
                                            break;
                                        case 13:
                                            this.onPressEnter();
                                            break;
                                        case 32:
                                            this.onPressSpace();
                                            break;
                                        case 123:
                                            this.mIsDebugMode && c.MoneySystem.increaseDiamond(100);
                                    }
                                } catch (e) {
                                    console.error('KeypadNavigator => B ERROR: ' + JSON.stringify(e.stack));
                                }
                            }),
                            (e.prototype.isNodeFocus = function () {
                                return null != this.currPageNode;
                            }),
                            (e.prototype.emitTouchEnd = function () {
                                var e = this.currFocusNode || this.currPageNode;
                                e instanceof cc.Node && (w('emitTouchEnd => node: ' + e.name), e.emit(cc.Node.EventType.TOUCH_END));
                            }),
                            (e.prototype.goFirstNode = function () {
                                var e = this.getFirstNode();
                                e && this.focusNode(e);
                            }),
                            (e.prototype.getLatestNode = function (e, t, i, o) {
                                for (var n = this.currPageData.buttons, a = n.length, r = void 0, s = 0; s < a; s++)
                                    if (D(n[s]) && n[s] == e) {
                                        r = n[s];
                                        break;
                                    }
                                var c = r && r.getComponent(cc.ScrollView);
                                if (c) {
                                    var l = c.content.children;
                                    if ('StoreSkinScrollView' == r.name) {
                                        this.mIsDebugMode && w('getLatestNode => StoreSkinScrollView');
                                        for (s = 0; s < l.length; s++) {
                                            var u = l[s];
                                            if ((console.error('node.name=' + u.name + ', focusParent.name=' + t.name + ', VALID_NODE=' + D(u)), u && u == t && D(u))) {
                                                var d = this.findFirstChildByName(u, [i.name]);
                                                d = d || this.findFirstChildByName(u, this.currPageData.wildList) || u;
                                                var p = 1 - ((s * u.height) / c.content.height) * 0.7;
                                                return (
                                                    c.scrollToPercentVertical(p, 0.12),
                                                    {
                                                        candidate: r,
                                                        focusParent: t,
                                                        focusNode: d,
                                                        focusIndex: o,
                                                        delayMS: 150,
                                                    }
                                                );
                                            }
                                        }
                                    } else if ('LevelMusicScrollView' == r.name || 'HotMusicScrollView' == r.name) {
                                        this.mIsDebugMode && w('getLatestNode => ' + r.name);
                                        var h = 'LevelMusicScrollView' == r.name,
                                            f = (h ? r.parent.getComponent(M.default) : r.parent.getComponent(L.default)).getTotalCount();
                                        for (s = 0; s < l.length; s++) {
                                            u = l[s];
                                            var m = this.getNodeRealIndex(u);
                                            if ((this.mIsDebugMode && w('getLatestNode => [' + s + '] index=' + m + ' focusIndex=' + o), u && m == o && D(u))) {
                                                var g = this.findFirstChildByName(u, [i.name]);
                                                if ((g = g || this.findFirstChildByName(u, this.currPageData.wildList))) {
                                                    p = Math.max((m - 2) / (f - (h ? 3 : 4)), 0);
                                                    return (
                                                        c.scrollToPercentVertical(1 - p, 0.12),
                                                        this.mIsDebugMode && w('getDownNode => FOUND index:' + m + ' total:' + f),
                                                        {
                                                            candidate: r,
                                                            focusParent: t,
                                                            focusNode: g,
                                                            focusIndex: o,
                                                            delayMS: 150,
                                                        }
                                                    );
                                                }
                                                return (
                                                    this.mIsDebugMode && w('getDownNode => FOUND ERROR'),
                                                    {
                                                        candidate: r,
                                                        focusParent: t,
                                                        focusNode: i,
                                                        focusIndex: o,
                                                    }
                                                );
                                            }
                                        }
                                    }
                                }
                                if (r)
                                    return {
                                        candidate: r,
                                        focusNode: r,
                                    };
                            }),
                            (e.prototype.getFirstNode = function () {
                                if (this.currPageData && this.currPageData.buttons) {
                                    for (var e, t = this.currPageData.firstName, i = this.currPageData.buttons, o = i.length, n = void 0, a = 0; a < o; a++)
                                        if (D(i[a]))
                                            if (t instanceof Array) {
                                                if (-1 != t.indexOf(i[a].name)) {
                                                    n = i[a];
                                                    break;
                                                }
                                            } else if (t == i[a].name) {
                                                n = i[a];
                                                break;
                                            }
                                    !n && 0 < o && (n = i[0]);
                                    var r = n && n.getComponent(cc.ScrollView);
                                    if (r) {
                                        var s = 0,
                                            c = r.content.childrenCount;
                                        if (0 < c) {
                                            if (r.vertical) {
                                                this.mIsDebugMode && w('getFirstNode => candidate Vertical List');
                                                var l = (s = c - 1) / c,
                                                    u = new cc.Vec2(0, l);
                                                3 < c && r.scrollTo(u);
                                            } else {
                                                this.mIsDebugMode && w('getFirstNode => candidate Horizontal List');
                                                (l = s / c), (u = new cc.Vec2(l, 0));
                                                3 < c && r.scrollTo(u);
                                            }
                                            return {
                                                candidate: n,
                                                focusParent: (e = r.content.children[s]),
                                                focusNode: this.findFirstChildByName(e, this.currPageData.wildList) || e,
                                                focusIndex: s,
                                            };
                                        }
                                    }
                                    if (n)
                                        return {
                                            candidate: n,
                                            focusNode: n,
                                        };
                                }
                            }),
                            (e.prototype.getBackNode = function () {
                                if (this.currPageData && this.currPageData.buttons) {
                                    var e = void 0,
                                        t = this.currPageData.backName;
                                    if (this.currPageData && t)
                                        for (var i = this.currPageData.buttons, o = 0; o < i.length; o++)
                                            if (t instanceof Array) {
                                                if (-1 != t.indexOf(i[o].name)) {
                                                    e = i[o];
                                                    break;
                                                }
                                            } else if (t == i[o].name) {
                                                e = i[o];
                                                break;
                                            }
                                    if (e)
                                        return {
                                            candidate: e,
                                            focusNode: e,
                                        };
                                }
                            }),
                            (e.prototype.getNextNode = function () {
                                if (this.currPageData && this.currPageData.buttons) {
                                    if (!this.currPageNode) return this.getFirstNode();
                                    for (var e, t = void 0, i = this.currPageData.buttons, o = i.length, n = 0; n < o; n++) {
                                        if (this.currPageNode == i[n])
                                            for (var a = 1; a < o; a++) {
                                                var r = (n + a) % o;
                                                if (D(i[r])) {
                                                    t = i[r];
                                                    break;
                                                }
                                            }
                                        if (t) break;
                                    }
                                    var s = t && t.getComponent(cc.ScrollView);
                                    if (s) {
                                        var c = 0,
                                            l = s.content.childrenCount;
                                        if (0 < l) {
                                            if (s.vertical) {
                                                this.mIsDebugMode && w('getNextNode => candidate Vertical List');
                                                var u = (c = l - 1) / l,
                                                    d = new cc.Vec2(0, u);
                                                3 < l && s.scrollTo(d);
                                            } else {
                                                this.mIsDebugMode && w('getNextNode => candidate Horizontal List');
                                                (u = c / l), (d = new cc.Vec2(u, 0));
                                                3 < l && s.scrollTo(d);
                                            }
                                            return {
                                                candidate: t,
                                                focusParent: (e = s.content.children[c]),
                                                focusNode: this.findFirstChildByName(e, this.currPageData.wildList) || e,
                                                focusIndex: c,
                                            };
                                        }
                                    }
                                    if (t)
                                        return {
                                            candidate: t,
                                            focusNode: t,
                                        };
                                }
                            }),
                            (e.prototype.getLeftNode = function () {
                                if (this.currPageData && this.currPageData.buttons) {
                                    if (!this.currPageNode) return this.getFirstNode();
                                    var e = this.currPageNode && this.currPageNode.getComponent(cc.ScrollView);
                                    if ((this.mIsDebugMode && w('getLeftNode => currPageNode.name=' + this.currPageNode.name), e)) {
                                        this.mIsDebugMode && w('getLeftNode => ' + this.currPageNode.name);
                                        var t = this.currFocusParent,
                                            i = this.currFocusNode,
                                            o = this.currFocusIndex,
                                            n = e.content.children;
                                        if ('StoreSkinScrollView' == this.currPageNode.name) {
                                            if ('gain_btn' == i.name && t) {
                                                var a = this.findFirstChildByName(t, ['try_btn']) || i;
                                                return {
                                                    candidate: this.currPageNode,
                                                    focusParent: t,
                                                    focusNode: a,
                                                    focusIndex: o,
                                                };
                                            }
                                            if (0 <= o && o < n.length - 1)
                                                for (var r = this.getNodeVec(i), s = 0; s < n.length; s++) {
                                                    if ((h = n[s]) && s != o && D(h))
                                                        if ((f = this.getNodeVec(h)).x < r.x && N(r, f) && !R(r, f)) {
                                                            var c = ['gain_btn', 'use_btn'];
                                                            a = this.findFirstChildByName(h, c) || h;
                                                            return {
                                                                candidate: this.currPageNode,
                                                                focusParent: h,
                                                                focusNode: a,
                                                                focusIndex: s,
                                                            };
                                                        }
                                                }
                                        } else if (('LevelMusicScrollView' == this.currPageNode.name || 'HotMusicScrollView' == this.currPageNode.name) && t) {
                                            var l = (c = this.currPageData.wildList.concat([])).indexOf(i.name);
                                            -1 < l && c.splice(l, 1);
                                            a = this.findFirstChildByName(t, c) || i;
                                            return {
                                                candidate: this.currPageNode,
                                                focusParent: t,
                                                focusNode: a,
                                                focusIndex: o,
                                            };
                                        }
                                    }
                                    var u = this.getNodeVec(this.currPageNode),
                                        d = this.currPageData.buttons,
                                        p = void 0;
                                    for (s = 0; s < d.length; s++) {
                                        var h, f;
                                        if ((h = d[s]) && h != this.currPageNode && D(h))
                                            if ((f = this.getNodeVec(h)).x < u.x && N(u, f))
                                                if (null == p) p = h;
                                                else {
                                                    var m = this.getNodeVec(p);
                                                    b(f, u) < b(m, u) && (p = h);
                                                }
                                    }
                                    if (p)
                                        return {
                                            candidate: p,
                                            focusNode: p,
                                        };
                                }
                            }),
                            (e.prototype.getRightNode = function () {
                                if (this.currPageData && this.currPageData.buttons) {
                                    if (!this.currPageNode) return this.getFirstNode();
                                    var e = this.currPageNode && this.currPageNode.getComponent(cc.ScrollView);
                                    if (e) {
                                        var t = e.content.children;
                                        if ((this.mIsDebugMode && w('getRightNode => ' + this.currPageNode.name), 'StoreSkinScrollView' == this.currPageNode.name)) {
                                            if ('try_btn' == this.currFocusNode.name && 0 <= this.currFocusIndex) {
                                                var i = t[(a = this.currFocusIndex)],
                                                    o = this.findFirstChildByName(i, ['gain_btn']) || i;
                                                return {
                                                    candidate: this.currPageNode,
                                                    focusParent: i,
                                                    focusNode: o,
                                                    focusIndex: a,
                                                };
                                            }
                                            if (0 <= this.currFocusIndex && this.currFocusIndex < t.length - 1)
                                                for (var n = this.getNodeVec(this.currFocusNode), a = 0; a < t.length; a++) {
                                                    if ((i = t[a]) && a != this.currFocusIndex && D(i))
                                                        if ((f = this.getNodeVec(i)).x > n.x && N(n, f) && !R(n, f)) {
                                                            o = this.findFirstChildByName(i, this.currPageData.wildList) || i;
                                                            return {
                                                                candidate: this.currPageNode,
                                                                focusParent: i,
                                                                focusNode: o,
                                                                focusIndex: a,
                                                            };
                                                        }
                                                }
                                        } else if ('LevelMusicScrollView' == this.currPageNode.name || 'HotMusicScrollView' == this.currPageNode.name) {
                                            var r = this.currFocusParent;
                                            if (r) {
                                                var s = this.currFocusIndex,
                                                    c = this.currFocusNode,
                                                    l = this.currPageData.wildList.concat([]),
                                                    u = l.indexOf(c.name);
                                                -1 < u && l.splice(u, 1);
                                                o = this.findFirstChildByName(r, l) || c;
                                                return {
                                                    candidate: this.currPageNode,
                                                    focusParent: r,
                                                    focusNode: o,
                                                    focusIndex: s,
                                                };
                                            }
                                        }
                                    }
                                    var d = this.getNodeVec(this.currPageNode),
                                        p = this.currPageData.buttons,
                                        h = void 0;
                                    for (a = 0; a < p.length; a++) {
                                        var f;
                                        if ((i = p[a]) && i != this.currPageNode && D(i))
                                            if ((f = this.getNodeVec(i)).x > d.x && N(d, f))
                                                if (null == h) h = i;
                                                else {
                                                    var m = this.getNodeVec(h);
                                                    b(f, d) < b(m, d) && (h = i);
                                                }
                                    }
                                    if (h)
                                        return {
                                            candidate: h,
                                            focusNode: h,
                                        };
                                }
                            }),
                            (e.prototype.getDownNode = function (u) {
                                var d = this;
                                if ((void 0 === u && (u = void 0), this.currPageData && this.currPageData.buttons)) {
                                    if (!this.currPageNode) return this.getFirstNode();
                                    var e,
                                        p,
                                        h = this.currPageNode,
                                        t = this.currFocusIndex,
                                        i = this.currFocusParent,
                                        f = this.currFocusNode,
                                        m = h && h.getComponent(cc.ScrollView);
                                    if (m) {
                                        var o = m.content.children;
                                        if ('StoreSkinScrollView' == h.name) {
                                            this.mIsDebugMode && w('getDownNode => StoreSkinScrollView');
                                            for (var n = this.getNodeVec(f), a = f.name, r = 0; r < o.length; r++) {
                                                if ((y = o[r]) && r != this.currFocusIndex && D(y))
                                                    if (((p = (p = this.findFirstChildByName(y, [a])) || this.findFirstChildByName(y, this.currPageData.wildList) || y), (C = this.getNodeVec(p)).y < n.y && !N(n, C) && R(n, C))) {
                                                        var s = 1 - ((r * y.height) / m.content.height) * 0.7;
                                                        return (
                                                            m.scrollToPercentVertical(s, 0.12),
                                                            {
                                                                candidate: h,
                                                                focusParent: y,
                                                                focusNode: p,
                                                                focusIndex: r,
                                                                delayMS: 150,
                                                            }
                                                        );
                                                    }
                                            }
                                            return {
                                                candidate: h,
                                                focusParent: i,
                                                focusNode: f,
                                                focusIndex: t,
                                            };
                                        }
                                        if ('LevelMusicScrollView' == h.name || 'HotMusicScrollView' == h.name) {
                                            this.mIsDebugMode && w('getDownNode => ' + h.name);
                                            a = f.name;
                                            var c = this.currFocusIndex,
                                                l = c + 1,
                                                g = 'LevelMusicScrollView' == h.name,
                                                _ = (g ? h.parent.getComponent(M.default) : h.parent.getComponent(L.default)).getTotalCount();
                                            for (r = 0; r < o.length; r++) {
                                                var y = o[r],
                                                    S = this.getNodeRealIndex(y);
                                                if ((this.mIsDebugMode && w('getDownNode => [' + r + '] index=' + S + ' targetIndex=' + l + ' focusIndex=' + c), y && S == l && D(y))) {
                                                    if ((p = (p = this.findFirstChildByName(y, [a])) || this.findFirstChildByName(y, this.currPageData.wildList))) {
                                                        s = Math.max((S - 2) / (_ - (g ? 3 : 4)), 0);
                                                        return (
                                                            m.scrollToPercentVertical(1 - s, 0.12),
                                                            this.mIsDebugMode && w('getDownNode => FOUND index:' + S + ' total:' + _),
                                                            {
                                                                candidate: h,
                                                                focusParent: y,
                                                                focusNode: p,
                                                                focusIndex: S,
                                                                delayMS: 150,
                                                            }
                                                        );
                                                    }
                                                    return (
                                                        this.mIsDebugMode && w('getDownNode => FOUND ERROR'),
                                                        {
                                                            candidate: h,
                                                            focusParent: this.currFocusParent,
                                                            focusNode: f,
                                                            focusIndex: this.currFocusIndex,
                                                        }
                                                    );
                                                }
                                            }
                                        }
                                    }
                                    var v = this.getNodeVec(h),
                                        I = this.currPageData.buttons,
                                        T = void 0;
                                    for (r = 0; r < I.length; r++) {
                                        var C;
                                        if ((y = I[r]) && y != h && D(y))
                                            if ((C = this.getNodeVec(y)).y < v.y && !N(v, C))
                                                if (null == T) T = y;
                                                else {
                                                    var E = this.getNodeVec(T);
                                                    E.y < C.y && (N(E, C) ? b(C, v) < b(E, v) && (T = y) : (T = y));
                                                }
                                    }
                                    if ((m = T && T.getComponent(cc.ScrollView))) {
                                        if ('StoreSkinScrollView' == T.name) {
                                            m.scrollToTop(0.12), (e = m.content.children[1]);
                                            return (
                                                (p = this.findFirstChildByName(e, ['gain_btn', 'use_btn']) || e),
                                                {
                                                    candidate: T,
                                                    focusParent: e,
                                                    focusNode: p,
                                                    focusIndex: 1,
                                                    delayMS: 150,
                                                }
                                            );
                                        }
                                        if ('LevelMusicScrollView' == T.name || 'HotMusicScrollView' == T.name) {
                                            var A = this.currFocusParent,
                                                P = this.currFocusIndex,
                                                k = 'LevelMusicScrollView' == T.name;
                                            return (
                                                m.scrollToTop(0.12),
                                                void setTimeout(function () {
                                                    for (var e = k ? 1 : 0, t = 0, i = 99999, o = m.content.children, n = 0; n < o.length; n++) {
                                                        var a = o[n],
                                                            r = d.getNodeRealIndex(a);
                                                        if (r == e) {
                                                            t = n;
                                                            break;
                                                        }
                                                        r < i && ((i = r), (t = n));
                                                    }
                                                    var s = void 0,
                                                        c = m.content.children[t];
                                                    if ((p = d.findFirstChildByName(c, d.currPageData.wildList))) {
                                                        var l = d.getNodeRealIndex(c);
                                                        d.mIsDebugMode && w('getDownNode => ' + T.name + ' init index:' + l),
                                                            (s = {
                                                                candidate: T,
                                                                focusParent: c,
                                                                focusNode: p,
                                                                focusIndex: l,
                                                                delayMS: 150,
                                                            });
                                                    } else
                                                        d.mIsDebugMode && w('getDownNode => ' + T.name + ' ERROR'),
                                                            (s = {
                                                                candidate: h,
                                                                focusParent: A,
                                                                focusNode: f,
                                                                focusIndex: P,
                                                            });
                                                    u && u(s);
                                                }, 120)
                                            );
                                        }
                                    }
                                    return (
                                        (this.currFocusNode = void 0),
                                        this.mIsDebugMode && w('getDownNode => candidate.name: ' + (T ? T.name : 'UNKNOWN')),
                                        T
                                            ? {
                                                  candidate: T,
                                                  focusNode: T,
                                              }
                                            : {
                                                  candidate: h,
                                                  focusNode: f,
                                              }
                                    );
                                }
                            }),
                            (e.prototype.getUpNode = function () {
                                if (this.currPageData && this.currPageData.buttons) {
                                    if (!this.currPageNode) return this.getFirstNode();
                                    var e = this.currPageNode,
                                        t = this.currFocusNode,
                                        i = e && e.getComponent(cc.ScrollView);
                                    if (i) {
                                        var o = i.content.children;
                                        if ('StoreSkinScrollView' == e.name) {
                                            this.mIsDebugMode && w('getUpNode => StoreSkinScrollView');
                                            for (var n = this.getNodeVec(t), a = t.name, r = o.length - 1; 0 <= r; r--) {
                                                if ((p = o[r]) && r != this.currFocusIndex && D(p))
                                                    if (((f = (f = this.findFirstChildByName(p, [a])) || this.findFirstChildByName(p, this.currPageData.wildList) || p), (y = this.getNodeVec(f)).y > n.y && !N(n, y) && R(n, y))) {
                                                        if (r < 2) i.scrollToTop(0.12);
                                                        else {
                                                            var s = 1 - ((r * p.height) / i.content.height) * 0.7;
                                                            i.scrollToPercentVertical(s, 0.12);
                                                        }
                                                        return {
                                                            candidate: e,
                                                            focusParent: p,
                                                            focusNode: f,
                                                            focusIndex: r,
                                                            delayMS: 150,
                                                        };
                                                    }
                                            }
                                        } else if ('LevelMusicScrollView' == e.name || 'HotMusicScrollView' == e.name) {
                                            this.mIsDebugMode && w('getUpNode => ' + e.name);
                                            a = t.name;
                                            var c = this.currFocusIndex,
                                                l = c - 1,
                                                u = 'LevelMusicScrollView' == e.name,
                                                d = (u ? e.parent.getComponent(M.default) : e.parent.getComponent(L.default)).getTotalCount();
                                            for (r = o.length - 1; 0 <= r; r--) {
                                                var p = o[r],
                                                    h = this.getNodeRealIndex(p);
                                                if ((this.mIsDebugMode && w('getUpNode => [' + r + '] index=' + h + ' targetIndex=' + l + ' focusIndex=' + c), p && h == l && D(p))) {
                                                    var f;
                                                    if ((f = (f = this.findFirstChildByName(p, [a])) || this.findFirstChildByName(p, this.currPageData.wildList))) {
                                                        s = Math.max((h - 2) / (d - (u ? 3 : 4)), 0);
                                                        return (
                                                            i.scrollToPercentVertical(1 - s, 0.12),
                                                            this.mIsDebugMode && w('getUpNode => FOUND index:' + h + ' total:' + d),
                                                            {
                                                                candidate: e,
                                                                focusParent: p,
                                                                focusNode: f,
                                                                focusIndex: h,
                                                                delayMS: 150,
                                                            }
                                                        );
                                                    }
                                                    return (
                                                        this.mIsDebugMode && w('getUpNode => FOUND ERROR'),
                                                        {
                                                            candidate: e,
                                                            focusParent: this.currFocusParent,
                                                            focusNode: t,
                                                            focusIndex: this.currFocusIndex,
                                                        }
                                                    );
                                                }
                                            }
                                        }
                                    }
                                    var m = this.getNodeVec(e),
                                        g = this.currPageData.buttons,
                                        _ = void 0;
                                    for (r = 0; r < g.length; r++) {
                                        var y;
                                        if ((p = g[r]) && p != e && D(p))
                                            if ((this.mIsDebugMode && w('getUpNode => currNode.name:' + e.name + ', node.name:' + p.name), (y = this.getNodeVec(p)).y > m.y && !N(m, y)))
                                                if (null == _) (_ = p), this.mIsDebugMode && w('getUpNode => A SET candidate ' + p.name);
                                                else {
                                                    var S = this.getNodeVec(_);
                                                    S.y > y.y && (N(S, y) ? b(y, m) < b(S, m) && ((_ = p), this.mIsDebugMode && w('getUpNode => B SET candidate ' + p.name)) : ((_ = p), this.mIsDebugMode && w('getUpNode => C SET candidate ' + p.name)));
                                                }
                                    }
                                    return (
                                        (this.currFocusNode = void 0),
                                        this.mIsDebugMode && w('getUpNode => candidate.name: ' + (_ ? _.name : 'UNKNOWN')),
                                        _
                                            ? {
                                                  candidate: _,
                                                  focusNode: _,
                                              }
                                            : {
                                                  candidate: e,
                                                  focusNode: t,
                                              }
                                    );
                                }
                            }),
                            (e.prototype.getNodeVec = function (e) {
                                try {
                                    if (e && e instanceof cc.Node) return e.getBoundingBoxToWorld();
                                } catch (e) {
                                    console.error('KeypadNavigator::getNodeVec => ' + e.message);
                                }
                                return {
                                    x: -1,
                                    y: -1,
                                    width: 0,
                                    height: 0,
                                };
                            }),
                            (e.prototype.getNodeRealIndex = function (e) {
                                var t = e.getComponent(r.default);
                                if (t) return t.mIndex;
                                var i = e.getComponent(s.default);
                                return i ? i.itemID : -1;
                            }),
                            e
                        );
                    })();
                (i.default = u), cc._RF.pop();
            },
            {
                '../Logic/MoneySystem': 'MoneySystem',
                '../UI/GameEntraScene/MusicLib/HotMusicCardItemPrefb': 'HotMusicCardItemPrefb',
                '../UI/GameEntraScene/MusicLib/HotMusicListCtrl': 'HotMusicListCtrl',
                '../UI/GameEntraScene/MusicLib/LevelMusicListCtrl': 'LevelMusicListCtrl',
                '../UI/GameEntraScene/MusicLib/NormalMusicCardItemPrefb': 'NormalMusicCardItemPrefb',
                './KeypadFocusedUI': 'KeypadFocusedUI',
                './KeypadUtil': 'KeypadUtil',
            },
        ],
        KeypadNavigator: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'e8cedyKFStN4405NGT2m7fE', 'KeypadNavigator'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./KeypadNavigatorBase'),
                    n = e('./KeypadUtil'),
                    a = e('../../base/G'),
                    r = {
                        FirstEnter: {
                            firstName: 'startBtn',
                            nameList: ['startBtn'],
                            rootNode: void 0,
                            buttons: [],
                            delayMS: 500,
                        },
                        MainPagePrefab: {
                            firstName: 'start_btn',
                            nameList: ['energy_btn', 'gold_btn', 'diamond_btn', 'LucyDipOutBtn', 'ChosenBtn', 'DailyBtn', 'start_btn', 'MusicLIbBtn', 'HotSongBtn'],
                            rootNode: void 0,
                            buttons: [],
                            delayMS: 500,
                        },
                        DailyAttendancePrefb: {
                            firstName: 'GetBtn',
                            backName: 'CloseBtn',
                            nameList: ['CloseBtn', 'day1', 'day2', 'day3', 'day4', 'day5', 'day6', 'day7', 'toggleRV', 'GetBtn'],
                            rootNode: void 0,
                            buttons: [],
                            delayMS: 500,
                        },
                        LotteryPrefab: {
                            firstName: 'startBtn',
                            backName: 'closeBtn',
                            nameList: ['startBtn', 'getAwardBtn', 'closeBtn'],
                            rootNode: void 0,
                            buttons: [],
                            delayMS: 500,
                        },
                        DiamondPopupProfab: {
                            firstName: 'close_btn',
                            backName: 'close_btn',
                            nameList: ['video_btn', 'count_down_timer_btn', 'close_btn'],
                            rootNode: void 0,
                            buttons: [],
                            delayMS: 500,
                        },
                        EnergyPopupProfab: {
                            firstName: 'close_btn',
                            backName: 'close_btn',
                            nameList: ['close_btn', '1_free_btn', '1_buy_btn', '2_free_btn', '2_buy_btn', '3_free_btn', '3_buy_btn', '4_free_btn', '4_buy_btn'],
                            wildList: [],
                            rootNode: void 0,
                            buttons: [],
                            delayMS: 500,
                        },
                        GoldPopupProfab: {
                            firstName: 'close_btn',
                            backName: 'close_btn',
                            nameList: ['close_btn', 'get_gold_100_btn', 'get_gold_1100_btn', 'get_gold_12999_btn'],
                            rootNode: void 0,
                            buttons: [],
                            delayMS: 500,
                        },
                        MusicLibraryPrefabLevel: {
                            firstName: 'BackBtn',
                            backName: 'BackBtn',
                            nameList: ['LevelMusicTab', 'HotMusicTab', 'LevelMusicScrollView', 'BackBtn'],
                            wildList: ['start_btn', 'SpecialStartButton', 'SpecialConditionBtn'],
                            rootNode: void 0,
                            buttons: [],
                            delayMS: 500,
                        },
                        MusicLibraryPrefabHot: {
                            firstName: 'HotMusicTab',
                            backName: 'BackBtn',
                            nameList: ['HotMusicTab', 'BackBtn', 'HotMusicScrollView', 'LevelMusicTab'],
                            wildList: ['TryBtn', 'StartBtn', 'UnlockBtn1'],
                            rootNode: void 0,
                            buttons: [],
                            delayMS: 500,
                        },
                        SkinStorePrefab: {
                            firstName: 'back_btn',
                            backName: 'back_btn',
                            nameList: ['back_btn', 'defaultBtn', 'StoreSkinScrollView'],
                            wildList: ['try_btn', 'gain_btn', 'use_btn'],
                            rootNode: void 0,
                            buttons: [],
                            delayMS: 500,
                        },
                        SkinGainPrefab: {
                            firstName: 'gainBtn1',
                            backName: 'closeBtn',
                            nameList: ['closeBtn', 'gainBtn1', 'gainBtn2', 'gainBtn3'],
                            rootNode: void 0,
                            buttons: [],
                            delayMS: 200,
                        },
                        FirstFailTipDialog: {
                            firstName: 'Btn',
                            backName: 'Btn',
                            nameList: ['Btn'],
                            rootNode: void 0,
                            buttons: [],
                            delayMS: 600,
                        },
                        GameOverPrefab: {
                            firstName: 'TryAgainButton',
                            backName: 'GoHomeButton',
                            nameList: ['TryAgainButton', 'GoNextButton', 'TopEnergyPanel', 'TopGoldPanel', 'TopDiamondPanel', 'GoHomeButton'],
                            wildList: ['invite_btn'],
                            rootNode: void 0,
                            buttons: [],
                            delayMS: 500,
                        },
                        giftBox: {
                            firstName: '',
                            backName: '',
                            nameList: [],
                            rootNode: void 0,
                            buttons: [],
                            delayMS: 500,
                        },
                        RelivePrefbTotal: {
                            firstName: 'relive_video_btn',
                            backName: 'skip_layout',
                            nameList: ['skip_layout', 'relive_video_btn', 'relive_diamond_btn'],
                            rootNode: void 0,
                            buttons: [],
                            delayMS: 500,
                        },
                        UnlockConfirmDialogPrefab: {
                            firstName: 'CloseBtn',
                            backName: 'CloseBtn',
                            nameList: ['CloseBtn', 'ConfirmBtn'],
                            rootNode: void 0,
                            buttons: [],
                            delayMS: 500,
                        },
                        AwardCommonResultPrefab: {
                            firstName: 'viodeButton',
                            backName: 'SkipLabel',
                            nameList: ['viodeButton', 'OKButton', 'closeBtn', 'SkipLabel'],
                            rootNode: void 0,
                            buttons: [],
                            delayMS: 500,
                        },
                        UpdateDialog: {
                            firstName: 'updateContentBtn',
                            backName: 'updateContentBtn',
                            nameList: ['updateContentBtn'],
                            rootNode: void 0,
                            buttons: [],
                            delayMS: 800,
                        },
                        UpdateContent: {
                            firstName: 'button',
                            backName: 'button',
                            nameList: ['button'],
                            multiList: ['start_btn', 'SpecialStartButton', 'SpecialConditionBtn'],
                            rootNode: void 0,
                            buttons: [],
                            delayMS: 500,
                        },
                        GameSceneEntry: {
                            firstName: 'propertyicondash',
                            backName: '',
                            nameList: ['AdvRewardBtn', 'propertyicondash', 'propertyiconslow', 'propertyiconshield'],
                            rootNode: void 0,
                            buttons: [],
                            delayMS: 500,
                        },
                        AdvGetPropertyDialog: {
                            firstName: 'button',
                            backName: 'button',
                            nameList: ['button'],
                            rootNode: void 0,
                            buttons: [],
                            delayMS: 500,
                        },
                        PropertyStorePrefab: {
                            firstName: 'freeButton',
                            backName: 'closebutton',
                            nameList: ['buybutton', 'freeButton', 'closebutton', 'leftbtn', 'rightbtn'],
                            rootNode: void 0,
                            buttons: [],
                            delayMS: 300,
                        },
                        PropertyIntroduction: {
                            firstName: 'confirm_button',
                            backName: 'confirm_button',
                            nameList: ['confirm_button'],
                            rootNode: void 0,
                            buttons: [],
                            delayMS: 300,
                        },
                        DecelerateConfirm: {
                            firstName: 'confirmbutton',
                            backName: 'closebutton',
                            nameList: ['closebutton', 'confirmbutton'],
                            rootNode: void 0,
                            buttons: [],
                            delayMS: 300,
                        },
                        InviteTipsPrefab: {
                            firstName: 'button',
                            backName: 'closeBtn',
                            nameList: ['button', 'closeBtn'],
                            rootNode: void 0,
                            buttons: [],
                            delayMS: 300,
                        },
                        DialogOneButtonPrefab: {
                            firstName: 'button',
                            backName: 'button',
                            nameList: ['button'],
                            rootNode: void 0,
                            buttons: [],
                            delayMS: 300,
                        },
                        LevelVideoGetSkinPrefab: {
                            firstName: 'viodeButton',
                            backName: 'closeBtn',
                            nameList: ['viodeButton', 'OKButton', 'closeBtn', 'SkipLabel'],
                            rootNode: void 0,
                            buttons: [],
                            delayMS: 300,
                        },
                    },
                    s = (function (t) {
                        function e() {
                            var e = t.call(this) || this;
                            return (
                                (e.currPageName = void 0),
                                (e.currPageData = void 0),
                                (e.currPageNode = void 0),
                                (e.mEnable = !1),
                                (e.mEnable = !0),
                                n.default.isHorizon() &&
                                    (window.addEventListener(
                                        'focus',
                                        function () {
                                            console.log('=> focus');
                                        },
                                        !0,
                                    ),
                                    window.addEventListener(
                                        'blur',
                                        function () {
                                            setTimeout(function () {
                                                console.log('=> window.focus'), window.focus();
                                            }, 0);
                                        },
                                        !0,
                                    )),
                                e
                            );
                        }
                        return (
                            __extends(e, t),
                            (e.getInstance = function () {
                                return e.mInstance || (e.mInstance = new e()), e.mInstance;
                            }),
                            (e.prototype.getPageMap = function (e) {
                                var t = r[e];
                                return null == t && (console.error('getPageMap => name:' + e), console.error(r)), t;
                            }),
                            (e.prototype.setEnable = function (e) {
                                this.mEnable = e;
                            }),
                            (e.prototype.onPressTab = function () {
                                if (this.mEnable) {
                                    var e = this.getNextNode();
                                    e && this.focusNode(e);
                                } else console.warn('onPressTab => skip for disabled');
                            }),
                            (e.prototype.onPressLeft = function () {
                                if (this.mEnable) {
                                    var e = this.getLeftNode();
                                    e && this.focusNode(e);
                                } else console.warn('onPressTab => skip for disabled');
                            }),
                            (e.prototype.onPressRight = function () {
                                if (this.mEnable) {
                                    var e = this.getRightNode();
                                    e && this.focusNode(e);
                                } else console.warn('onPressTab => skip for disabled');
                            }),
                            (e.prototype.onPressUp = function () {
                                if (this.mEnable) {
                                    var e = this.getUpNode();
                                    e && this.focusNode(e);
                                } else console.warn('onPressTab => skip for disabled');
                            }),
                            (e.prototype.onPressDown = function () {
                                var t = this;
                                if (this.mEnable) {
                                    var e = this.getDownNode(function (e) {
                                        t.focusNode(e);
                                    });
                                    e && this.focusNode(e);
                                } else console.warn('onPressTab => skip for disabled');
                            }),
                            (e.prototype.onPressEnter = function () {
                                this.mEnable ? this.currPageData && (this.currPageNode ? this.emitTouchEnd() : this.goFirstNode()) : console.warn('onPressTab => skip for disabled');
                            }),
                            (e.prototype.onPressSpace = function () {
                                this.mEnable ? this.currPageData && (this.currPageNode ? this.emitTouchEnd() : this.goFirstNode()) : console.warn('onPressTab => skip for disabled');
                            }),
                            (e.prototype.onPressBack = function () {
                                var e = this;
                                if (this.mEnable) {
                                    if (this.isNodeFocus()) {
                                        var t = this.getBackNode();
                                        t
                                            ? (this.focusNode(t),
                                              setTimeout(function () {
                                                  e.emitTouchEnd();
                                              }, 100))
                                            : 'GameSceneEntry' == this.currPageName && a.G.Ap.presenter.enterScene('MainScene');
                                    }
                                } else console.warn('onPressTab => skip for disabled');
                            }),
                            (e.prototype.hideFocus = function () {
                                t.prototype.hideFocusEffect.call(this);
                            }),
                            (e.mInstance = void 0),
                            e
                        );
                    })(o.default);
                (i.default = s), cc._RF.pop();
            },
            {
                '../../base/G': 'G',
                './KeypadNavigatorBase': 'KeypadNavigatorBase',
                './KeypadUtil': 'KeypadUtil',
            },
        ],
        KeypadUtil: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '7e03ceSEk9MdoEBNnQ83eiD', 'KeypadUtil'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {}
                    return (
                        (e.isHorizon = function () {
                            return null == this.isHori && (this.isHori = window.innerWidth > window.innerHeight), this.isHori;
                        }),
                        (e.isOversea = function () {
                            return 'oversea' == CMPlay.getQueryString('region', 'oversea');
                        }),
                        (e.isHori = void 0),
                        e
                    );
                })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        LRUCache: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '318d7yOKclCXYAdDrCNwMIC', 'LRUCache'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('../../modules/MGBasic/scripts/Logic/MGBasicEntrance'),
                    a = e('./InsFactory'),
                    o = (function () {
                        function o(e) {
                            (this.memoryObj = null), (this.mKeyAll = 'user_chat'), (this.mErrorVal = '0.0'), (this.isBatchSave = !1), (this.mSavedVal = ''), (this.memoryObj = new Object()), (this.mKeyAll = e);
                            var t = this.readFromFlash(this.mKeyAll, this.mErrorVal);
                            t == this.mErrorVal || this.isEmpty(t) || (this.memoryObj = JSON.parse(t));
                        }
                        return (
                            (o.Ins = function (e) {
                                var t = 'LRUCache-' + e,
                                    i = a.default.getIns(t);
                                return i || (a.default.setIns(t, new o(e)), a.default.getIns(t));
                            }),
                            (o.prototype.isEmpty = function (e) {
                                return null == e || null == e || 0 == e.length;
                            }),
                            (o.prototype.batchSaveStart = function () {
                                this.isBatchSave = !0;
                            }),
                            (o.prototype.batchSaveEnd = function () {
                                (this.isBatchSave = !1), this.flushToFile();
                            }),
                            (o.prototype.save = function (e, t) {
                                this.isEmpty(e) || ((this.memoryObj[e] = t), this.isBatchSave || this.flushToFile());
                            }),
                            (o.prototype.read = function (e, t) {
                                return void 0 === t && (t = null), this.isEmpty(e) ? t : this.memoryObj[e];
                            }),
                            (o.prototype.remove = function (e) {
                                if (!this.isEmpty(e))
                                    try {
                                        if (e == this.mKeyAll) {
                                            for (var t = Object.keys(this.memoryObj), i = 0; i < t.length; i++) {
                                                var o = t[i];
                                                null != o && null != o && delete this.memoryObj[o];
                                            }
                                            this.removeFromFlash(this.mKeyAll);
                                        } else delete this.memoryObj[e];
                                        this.flushToFile();
                                    } catch (e) {}
                            }),
                            (o.prototype.flushToFile = function () {
                                var e = this,
                                    t = JSON.stringify(this.memoryObj);
                                this.mSavedVal !== t &&
                                    setTimeout(function () {
                                        e.saveToFlash(e.mKeyAll, t) && (e.mSavedVal = t);
                                    }, 10);
                            }),
                            (o.prototype.saveToFlash = function (e, t) {
                                try {
                                    return n.MGBasic.setStorage(e, t);
                                } catch (e) {
                                    return !1;
                                }
                            }),
                            (o.prototype.readFromFlash = function (e, t) {
                                void 0 === t && (t = '');
                                try {
                                    return n.MGBasic.getStorage(e);
                                } catch (e) {
                                    return t;
                                }
                            }),
                            (o.prototype.removeFromFlash = function (e) {
                                n.MGBasic.delStorage(e);
                            }),
                            (o.TAG = 'cache => '),
                            o
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../../modules/MGBasic/scripts/Logic/MGBasicEntrance': 'MGBasicEntrance',
                './InsFactory': 'InsFactory',
            },
        ],
        LSKey: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '54a61cjFNBC1Jz48tRMawly', 'LSKey'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {}
                    return (e.CMG_DEBUG_USE_LOCAL_TIME = 'cmg_debug_use_local_time'), (e.CMG_USE_INOFC_DEBUG_SERVER = 'cmg_use_infoc_debug_server'), (e.UserInfo = 'UIF'), (e.UserLevelRecord = 'LevelRecord'), (e.UserLastLevelMid = 'last_level_mid'), (e.BASIC_DATA_VER = 'bs_data_ver'), (e.IS_NEED_REDOWNLOAD = 're_downloadss'), (e.RES_PRELOAD_INFO = 'res_preload'), (e.RES_SKIN_INFO = 'res_skin'), (e.TODAY_SHARE_RELIVE_COUNT = 'today_share_relive_count'), (e.LAST_SHARE_RELIVE_TIME = 'last_share_relive_time'), (e.HAS_FIRST_PLAY_LITTLE_STAR = 'has_first_play_little_star'), (e.LAST_WATCH_VIDEO_WITH_PROP_RELIVE_TIME = 'last_watch_video_with_prop_relive_time'), (e.TODAY_SHARE_GAIN_ENERGY_COUNT = 'today_share_gain_energy_count'), (e.LAST_SHARE_GAIN_ENERGY_TIME = 'last_share_gain_energy_time'), (e.TODAY_SHARE_GAIN_GOLD_COUNT_ON_RELIVE = 'today_share_gain_gold_count_on_relive'), (e.LAST_SHARE_GAIN_GOLD_TIME_ON_RELIVE = 'last_share_gain_gold_time_on_relive'), (e.TODAY_SHARE_GAIN_DIAMOND_COUNT = 'today_share_gain_diamond_count'), (e.LAST_SHARE_GAIN_DIAMOND_TIME = 'last_share_gain_diamond_time'), (e.TODAY_SHARE_GAIN_DIAMOND_GROUP_IDS = 'today_share_gain_diamond_group_ids'), (e.LAST_SHARE_GAIN_DIAMOND_GROUP_IDS_TIME = 'last_share_gain_diamond_group_ids_time'), (e.TODAY_SHARE_GAIN_DIAMOND_RELIVE_GROUP_IDS = 'today_share_gain_diamond_relive_group_ids'), (e.LAST_SHARE_GAIN_DIAMOND_RELIVE_GROUP_IDS_TIME = 'last_share_gain_diamond_relive_group_ids_time'), (e.UD_DROP_CD_INFO = 'drop_cd_info'), (e.UD_LAST_OPEN_TIME = 'drop_last_open_time'), (e.UD_OPEN_COUNT = 'drop_open_count'), (e.HAS_SHOW_DOWNLOADING_PROGRESS = 'show_download_progress'), (e.HAS_SHARE_TO_GROUP = 'has_share_to_group'), (e.NEED_REPUSH = 'RPCOREINF'), (e.FIRST_ENTER_TIME = 'first_enter_time'), (e.NOT_SHOW_GAME_GUIDE = 'not_show_game_guide'), (e.INVITE_DATE = 'invite_date'), (e.SURPRISE_GIFT_BOX = 'surprise_gift_box'), (e.INVITE_REWARD_INFO_LIST = 'invite_reward_info_list'), (e.HAS_CLICK_SHARE_GIFT_ICON = 'has_click_share_gift_icon'), (e.LEVEL_MUSIC_LIB_SCROLL_POSITION = 'level_music_lib_scroll_position'), (e.HOT_MUSIC_LIB_SCROLL_POSITION = 'hot_music_lib_scroll_position'), (e.HAS_SCORLL_TO_TARGET_POSITION = 'has_scroll_to_target_position'), (e.BENCHMARK_LEVEL = 'benchmark_level'), (e.SIGN_IN_LAST_DATE = 'sign_in_last_date'), (e.SIGN_IN_TIMES = 'sign_in_times'), (e.SHOW_DAILY_AWARD_DIALOG_LAST_TIMES = 'show_daily_award_dailg_last_times'), (e.HAS_SHOW_SHORTCUT_GUIDE = 'has_show_shortcut_guide'), (e.MAIN_PAGE_SHOW_COUNT = 'main_page_show_count'), (e.SKIN_PIECE_DATA = 'skin_chip_data'), (e.SKIN_OWNED = 'owned_skins'), (e.SKIN_USING = 'skin_using'), (e.Cm_SKIN_ADS_INFO = 'cm_skin_ads_info'), (e.HAS_SHOW_SKIN_SPLASH = 'has_show_skin_splash'), (e.ACTIVE_GIVE_TRADE_ID_ARRAY = 'active_give_trade_id_array'), (e.ACTIVE_DEMAND_BILL_ID_ARRAY = 'active_ask_for_trade_id_array'), (e.HAS_CLICK_SKIN_CHIP_ENTRY = 'has_click_skin_chip_enter'), (e.LAST_CLICK_SKIN_CHIP_ENTRY_TIME = 'last_click_skin_chip_enter_time'), (e.SKIN_CHIP_REFRESH_COUNT_DOWN = 'skin_chip_refresh_count_down'), (e.JIGSAW_INVITE_LIST = 'jigsaw_invite_list'), (e.JIGSAW_INVITE_DATE = 'jigsaw_invite_date'), (e.LAST_CLEAN_CHIP_TIME = 'last_clean_chip_time'), (e.HAS_REWARD_15_TIMES = 'has_reward_15_times'), (e.ACTIVITY_INVITE_BEAN_LIST = 'activity_invite_bean_list'), (e.ACTIVITY_INVITE_BEAN_DIC = 'activity_invite_bean_dic'), (e.LAST_SHOW_INVITE_SKIN_TIMES = 'last_show_invite_skin_times'), (e.HAS_UNLOACK_INVITE_SKIN = 'has_unlock_invite_skin'), (e.HAS_SHOW_INVITE_3_FOR_SKIN_DIALOG = 'has_show_invite_3_for_skin_dialog'), (e.SHOWED_GROUP_RANK_TOTAL_DIALOG = 'showed_group_rank_total_dialog'), (e.SHOWED_GROUP_RANK_SONG_DIALOG = 'showed_group_rank_song_dialog'), (e.HAS_SHOW_INVITE_FOR_SONG_DIALOG = 'has_show_invite_for_song_dialog'), (e.HOME_WATCH_VIDEO_REMAINING_TIMES_THE_DAY = 'home_watch_video_remaining_times_the_day'), (e.SHOW_HOT_SONG_SPLASH_TIMES = 'show_hot_song_splash_times'), (e.HAS_SHOW_MUSIC_RED_SPOT = 'has_show_music_red_spot'), (e.STORAGE_VERSION = 'sver'), (e.CHALLENGECOMPETITION_KEY = 'cp_key'), (e.CHALLENGECOMPETITION_MUSIC_STATUS = 'cp_music_status'), (e.CHALLENGECOMPETITION_TIMES = 'challenge_times'), (e.CHALLENGECOMPETITION_FRIEND_HELP_SUCC_TIMES = 'challenge_friend_help_succ_time'), (e.LAST_CHALLENGE_TIME = 'last_challenge_time'), (e.HAS_FIGHT_WIN = 'has_fight_win'), (e.SINGLE_DAY_TOP_SCORE = 'single_day_top_score'), (e.CHALLENGE_MUSIC_NAME = 'challenge_music_name'), (e.CHALLENGE_INVITE_LIST = 'challenge_invite_list'), (e.CHALLENGE_INVITE_DATE = 'challenge_invite_date'), (e.RESULT_REWARD_COUNT = 'result_reward_count'), (e.RESULT_REWARD_COUNT_DATE = 'result_reward_count_date'), (e.SHOP_GOODS_ALREADY_BUY_TIMES = 'shop_goods_already_buy_times'), (e.SHOP_GOODS_PAY_COUNT = 'shop_goods_pay_count'), (e.SHOP_FIRST_PAY_AB_RESULT = 'shop_first_pay_ab_result'), (e.SHOW_PLAYER_TASK_ENTRY = 'show_player_task_entry'), (e.PLAYER_TASK_REWARD_TAKEN = 'player_task_reward_taken'), (e.GAMESCENE_GUIDE_SHOWED = 'game_scene_guide_showed'), (e.SHARE_FOR_GIFT_SHARED = 'share_for_gift_shared'), (e.HOT_SONG_UNLOCKED = 'hot_song_unlocked'), (e.HAS_RELIVE_FREE = 'has_relive_free'), (e.DEBUG_INFINITE_CHALLENGE_TIME = 'debug_infinite_challenge_times'), (e.QQ_RED_PACKET_ACTIVITY_SOURCE = 'qq_red_packet_activity_source'), (e.QQ_RED_PACKET_ACTIVITY_TIME = 'qq_red_packet_activity_time'), (e.QQ_RED_PACKET_ACTIVITY_ENTER_TIME = 'qq_red_packet_activity_enter_time'), (e.QQ_RED_PACKET_ACTIVITY_HIGH_SCORE = 'qq_red_packet_activity_high_score'), (e.QQ_RED_PACKET_ACTIVITY_HIGH_SCORE_TIME = 'qq_red_packet_activity_high_score_time'), (e.PROPERTY_DATA = 'g_p_data_oot'), (e.HAS_SHOW_GAMEOVER_GUIDE = 'has_show_gameover_guide'), (e.HAS_CLICK_MORE_GAME_ICON = 'has_click_more_game_icon'), (e.USER_AVATAR_PATH = 'user_avatar_path'), (e.LAST_SHOW_LUCKY_DIP_DIALOG_TIME = 'last_show_lucky_dip_dialog_time'), (e.LAST_LOTTERY_DATE = 'last_lottery_date'), (e.LOTTERY_DATA_RECENTLY = 'lottery_data_recently'), (e.LOTTERY_COUNT = 'lottery_count'), (e.LOTTERY_COUNTDOWN = 'lottery_countdown'), (e.DEBUG_INFINITE_LOTTERY = 'debug_infinite_lottery'), (e.DEBUG_ENABLE_FLAUNT_PAGE = 'DEBUG_ENABLE_FLAUNT_PAGE'), (e.PIANO_TONE_OWN = 'piano_tone_own'), (e.PIANO_TONE_USE = 'piano_tone_use'), (e.PIANO_STORAGE_KEY = 'PIANO_Local_CACHE'), (e.VIP_LOCAL_CACHE = 'vip_level'), (e.VIP_DAILY_REWARD_TAKEN_TIME = 'vip_daily_reward_taken_time'), (e.VIP_INTERRUPTED = 'vip_buy_interrupted'), (e.HAS_SHOW_VIP_PAGE = 'has_show_vip_page'), (e.HAS_SHOW_TOPPED_PAGE = 'has_show_topped_page'), (e.HOT_SONG_KEY = 'lver_hotsong'), (e.GAME_OVER_INVITE_SHOW_INDEX = 'game_over_invite_show_index'), (e.GAME_OVER_LAST_SHOW_TIME = 'game_over_last_show_time'), (e.GAME_OVER_INVIE_SKIN_LAST_SHOW_TIME = 'game_over_invite_skin_last_show_time'), (e.GAME_OVER_INVITE_SONG_LAST_SHOW_TIME = 'game_over_invite_song_last_show_time'), (e.GAME_OVER_HAS_SHOW_FIRST_PAY = 'game_over_has_show_first_pay'), (e.GAME_OVER_SHOW_COUNT = 'game_over_show_show_count'), (e.PROPERTY_INTRODUCTION_SHOW = 'property_introduction_show'), (e.MUSIC_PIANO = 'music_piano'), (e.MUSIC_PIANO_ZIP_PATH = 'music_piano_zip_path'), (e.MUSIC_PIANO_NEED_UPDATE = 'music_piano_need_update'), (e.GAME_OVER_LAST_SHOW_HOT_MUSIC_BATTLE_TIPS_TIME = 'game_over_last_show_hot_music_battle_tips_time'), (e.HAS_SHOW_HOME_PAGE = 'has_show_home_page'), (e.QQ_SHARE_RELIVE_CHECK_TIME = 'qq_share_relive_check_time'), (e.QQ_SHARE_RELIVE_SUCC_TIMES = 'qq_share_relive_succ_times'), (e.RELIVE_SHARE_FIRST_TIME = 'relive_share_first_time'), (e.IS_NEW_TO_SHOW_GUIDE = 'is_new_to_show_guide'), (e.IS_NEW_RECORD_TIME = 'is_new_record_time'), (e.IS_SHARE_CLICK_RECORD_TIME = 'is_share_click_record_time'), (e.IS_SKIN_CLICK_RECORD_TIME = 'is_skin_click_record_time'), (e.IS_NEWER_TARGET_RECORD_TIME = 'is_newer_target_record_time'), (e.PROP_BIG_GIFT_BAG_RECHARGE_TIME_1 = 'prop_big_gift_bag_recharge_time_1'), (e.PROP_BIG_GIFT_BAG_RECHARGE_TIME_2 = 'prop_big_gift_bag_recharge_time_2'), (e.HAS_SHOW_SHARE_ANIM = 'has_show_share_anim'), (e.RECOMMEND_GAME_A_OR_B = 'recommend_game_a_or_b'), (e.RECOMMEND_GAME_RED_SPOT_CLICKED = 'recommend_game_red_spot_clicked'), (e.ENTER_GAME_BY_HOT_SONG_SHARE = 'enter_game_by_hot_song_share'), (e.RESULT_PAGE_TIME_WITH_NORMAL_MUSIC = 'result_page_time_with_normal_music'), (e.SHARE_FOR_GIFT_DAILY_SHOWED_DATE = 'share_for_gift_daily_showed_date'), (e.HAS_PLAY_CHALLENGE = 'has_play_challenge'), (e.HAS_CLICK_QQ_SUB = 'has_click_QQ_SUB'), (e.USE_ADV_GET_PROPERTY_COUNT = 'use_adv_get_property_count'), (e.LAST_USE_ADV_GET_PROPERTY_TIME = 'last_use_adv_get_property_time'), (e.ADD_FAV_ICON_SHOW_TIME = 'add_fav_icon_show_time'), (e.QQ_REPORT_UNLOCK_SONG_NUM = 'qq_report_unlock_song_num'), (e.QQ_REPORT_GRADE = 'qq_report_grade'), (e.START_UP_CHANNEL = 'startup_channel'), (e.FIGHT_DAILY_REWARD_INFO = 'fight_daily_reward'), (e.FIGHT_DAY_TIMES = 'fight_day_times'), (e.FIGHT_AUTO_SHOW_SAESON_REWARD = 'fight_auto_show_season_reward'), (e.FIGHT_VIDEO_AD_RECORD = 'fight_video_ad_record'), (e.FIGHT_CLOUD_CFG = 'fight_cloud_cfg'), (e.HAS_WIN_FIGHT = 'has_win_fight'), (e.GUIDE_TO_FIGHT_TIMES = 'guide_to_fight_times'), (e.LAST_GUIDE_TO_FIGHT_TIME = 'last_guide_to_fight_time'), (e.HAS_SHOW_GAME_ENTRA = 'has_show_game_entra'), (e.AD_VIDEO_PROPERTY_SHOW_INFO = 'ad_video_property_show_info'), (e.SKIN_TASK_STEP_STATUS = 'skin_task_step_status'), (e.LOTTERY_TOTAL_COUNT = 'lottery_total_count'), (e.OPEN_GAMEOVER_FROM = 'open_game_from'), (e.HAS_AUTO_OPEN_LEFT = 'has_auto_open_left'), (e.LAST_AUTO_OPEN_TIME = 'last_auto_open_time'), (e.HAS_SHOW_SKIN_PIECE_TIPS_DIALOG = 'has_show_skin_piece_tips_dialog'), (e.KEY_CLOUD_CFG = 'KEY_CLOUD_CFG'), (e.HAS_CLICK_HOME_AVATOR = 'has_click_home_avator'), (e.HAS_ENTER_FROM_ATTENTION = 'has_enter_from_attention'), (e.WELFARE_SHOWED_TAB = 'welfare_showed_tab'), (e.GET_REWARD_FROM_SUBSCRIPTION_FOLLOW = 'get_reward_from_subscription_follow'), (e.TRUMPET_COUNT = 'trumpet_count'), (e.FRIEND_FROM_SHARE_REWARD = 'friend_from_share'), (e.FRIEND_POP_APPLYLIST = 'firend_pop_applylist'), (e.HOLIDAY_TASK_LIST = 'holiday_task_list'), (e.DAILY_TRY_ANIM_PLAY = 'daily_tone_anim_play'), (e.PIANO_TONE_SHOW_COVER = 'piano_tone_show_cover'), (e.HOTMUSIC_ACTIVITY = 'hotmusic_activity'), (e.KEYS_NEED_SYNC = [e.UserInfo, e.UserLevelRecord, e.HAS_FIRST_PLAY_LITTLE_STAR, e.TODAY_SHARE_GAIN_DIAMOND_COUNT, e.LAST_SHARE_GAIN_DIAMOND_TIME, e.TODAY_SHARE_GAIN_ENERGY_COUNT, e.LAST_SHARE_GAIN_ENERGY_TIME, e.TODAY_SHARE_RELIVE_COUNT, e.LAST_SHARE_RELIVE_TIME, e.HAS_SHARE_TO_GROUP, e.TODAY_SHARE_GAIN_GOLD_COUNT_ON_RELIVE, e.LAST_SHARE_GAIN_GOLD_TIME_ON_RELIVE, e.INVITE_DATE, e.SURPRISE_GIFT_BOX, e.INVITE_REWARD_INFO_LIST, e.SIGN_IN_LAST_DATE, e.SIGN_IN_TIMES, e.SKIN_PIECE_DATA, e.SKIN_OWNED, e.SKIN_USING, e.JIGSAW_INVITE_DATE, e.JIGSAW_INVITE_LIST, e.LAST_CLEAN_CHIP_TIME, e.HAS_REWARD_15_TIMES, e.ACTIVITY_INVITE_BEAN_LIST, e.ACTIVITY_INVITE_BEAN_DIC, e.HAS_UNLOACK_INVITE_SKIN, e.HOME_WATCH_VIDEO_REMAINING_TIMES_THE_DAY, e.STORAGE_VERSION, e.CHALLENGECOMPETITION_TIMES, e.LAST_CHALLENGE_TIME, e.HAS_FIGHT_WIN, e.SINGLE_DAY_TOP_SCORE, e.CHALLENGE_INVITE_LIST, e.CHALLENGE_INVITE_DATE, e.CHALLENGECOMPETITION_FRIEND_HELP_SUCC_TIMES, e.SHOP_GOODS_ALREADY_BUY_TIMES, e.SHOP_GOODS_PAY_COUNT, e.PLAYER_TASK_REWARD_TAKEN, e.SHOW_PLAYER_TASK_ENTRY, e.HAS_RELIVE_FREE, e.PROPERTY_DATA, e.HAS_SHOW_GAMEOVER_GUIDE, e.LAST_SHOW_LUCKY_DIP_DIALOG_TIME, e.LAST_LOTTERY_DATE, e.LOTTERY_COUNT, e.VIP_DAILY_REWARD_TAKEN_TIME, e.VIP_INTERRUPTED, e.LOTTERY_COUNTDOWN, e.PROPERTY_INTRODUCTION_SHOW, e.QQ_SHARE_RELIVE_CHECK_TIME, e.QQ_SHARE_RELIVE_SUCC_TIMES, e.RELIVE_SHARE_FIRST_TIME, e.IS_NEW_TO_SHOW_GUIDE, e.IS_NEW_RECORD_TIME, e.HAS_SHOW_SHARE_ANIM, e.HAS_PLAY_CHALLENGE, e.HAS_CLICK_QQ_SUB, e.FIGHT_DAILY_REWARD_INFO, e.HAS_WIN_FIGHT, e.USE_ADV_GET_PROPERTY_COUNT, e.LAST_USE_ADV_GET_PROPERTY_TIME, e.ADD_FAV_ICON_SHOW_TIME, e.FIGHT_AUTO_SHOW_SAESON_REWARD, e.GUIDE_TO_FIGHT_TIMES, e.LAST_GUIDE_TO_FIGHT_TIME, e.QQ_REPORT_GRADE, e.SKIN_TASK_STEP_STATUS, e.LOTTERY_TOTAL_COUNT, e.LAST_AUTO_OPEN_TIME, e.HAS_SHOW_GAME_ENTRA, e.HAS_AUTO_OPEN_LEFT, e.GET_REWARD_FROM_SUBSCRIPTION_FOLLOW, e.TRUMPET_COUNT, e.FRIEND_FROM_SHARE_REWARD, e.PIANO_TONE_OWN, e.PIANO_TONE_USE, e.Cm_SKIN_ADS_INFO, e.HOLIDAY_TASK_LIST]), e;
                })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        LangMgr: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'e35ea1vaDBH9px1B1rvdrxn', 'LangMgr'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../Logic/I18nManager'),
                    n = (function () {
                        function e() {
                            this.mCache = {};
                        }
                        return (
                            (e.gIns = function () {
                                return null == e.sInstance && (e.sInstance = new e()), e.sInstance;
                            }),
                            (e.prototype.setLanguage = function (e, t) {
                                o.default.getInstance().setLanguage(e, t);
                            }),
                            (e.prototype.getLanguageByKey = function (e) {
                                return o.default.getInstance().getLanguageByKey(e);
                            }),
                            (e.sInstance = null),
                            e
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../Logic/I18nManager': 'I18nManager',
            },
        ],
        LanguageData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '61de062n4dJ7ZM9/Xdumozn', 'LanguageData');
                var o = e('polyglot.min'),
                    n = null;

                function a(e) {
                    return window.i18n.languages[e];
                }

                function r(e) {
                    e &&
                        (n
                            ? n.replace(e)
                            : (n = new o({
                                  phrases: e,
                                  allowMissing: !0,
                              })));
                }
                window.i18n ||
                    (window.i18n = {
                        languages: {},
                        curLang: '',
                    }),
                    (t.exports = {
                        init: function (e) {
                            if (e !== window.i18n.curLang) {
                                var t = a(e) || {};
                                (window.i18n.curLang = e), r(t), (this.inst = n);
                            }
                        },
                        t: function (e, t) {
                            if (n) return n.t(e, t);
                        },
                        inst: n,
                        updateSceneRenderers: function () {
                            for (var e = cc.director.getScene().children, t = [], i = 0; i < e.length; ++i) {
                                var o = e[i].getComponentsInChildren('LocalizedLabel');
                                Array.prototype.push.apply(t, o);
                            }
                            for (var n = 0; n < t.length; ++n) {
                                t[n].updateLabel();
                            }
                            for (var a = [], r = 0; r < e.length; ++r) {
                                var s = e[r].getComponentsInChildren('LocalizedSprite');
                                Array.prototype.push.apply(a, s);
                            }
                            for (var c = 0; c < a.length; ++c) {
                                a[c].updateSprite(window.i18n.curLang);
                            }
                        },
                    }),
                    cc._RF.pop();
            },
            {
                'polyglot.min': 'polyglot.min',
            },
        ],
        LanguageSongData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '8ceaalNgdxMOZSTTwfC8bk/', 'LanguageSongData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.findLanguage = function (e) {
                                return this.find('TID', e);
                            }),
                            (t.prototype.getRow = function () {
                                return new a();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.default = n;
                var a = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getTID = function () {
                            return this.getString('TID');
                        }),
                        (t.prototype.getCN = function () {
                            return this.getString('CN');
                        }),
                        (t.prototype.getTW = function () {
                            return this.getString('TW');
                        }),
                        t
                    );
                })(o.default);
                (i.LanguageSongRow = a), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        LevelConsumeData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'b9bc1lMHlNOjovwWT9RvGFE', 'LevelConsumeData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.findMid = function (e) {
                                return this.find('Mid', e);
                            }),
                            (t.prototype.getRow = function () {
                                return new a();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.LevelConsumeData = n;
                var a = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getID = function () {
                            return this.getInt('Id');
                        }),
                        (t.prototype.getMid = function () {
                            return this.getInt('Mid');
                        }),
                        (t.prototype.getSpendType = function () {
                            return this.getInt('SpendType');
                        }),
                        (t.prototype.getSpendEnergy = function () {
                            return this.getInt('SpendEnergy');
                        }),
                        (t.prototype.getSpendGold = function () {
                            return this.getInt('SpendGold');
                        }),
                        (t.prototype.getSpendDiamond = function () {
                            return this.getInt('SpendDiamond');
                        }),
                        (t.prototype.getTestType = function () {
                            return this.getInt('TestType');
                        }),
                        (t.prototype.getTestEnergy = function () {
                            return this.getInt('TestEnergy');
                        }),
                        (t.prototype.getTestGold = function () {
                            return this.getInt('TestGold');
                        }),
                        (t.prototype.getTestDiamond = function () {
                            return this.getFloat('TestDiamond');
                        }),
                        (t.prototype.getUnlockActive = function () {
                            return this.getFloat('UnlockActive');
                        }),
                        (t.prototype.getActiveBeginTime = function () {
                            return this.getFloat('ActiveBeginTime');
                        }),
                        (t.prototype.getActiveEndTime = function () {
                            return this.getFloat('ActiveEndTime');
                        }),
                        (t.prototype.getUnlockCount = function () {
                            return this.getFloat('UnlockCount');
                        }),
                        (t.prototype.getIsNew = function () {
                            return this.getFloat('IsNew');
                        }),
                        (t.prototype.getBackgroundImg = function () {
                            return this.getString('BackgroundImg');
                        }),
                        t
                    );
                })(o.default);
                (i.LevelConsumeRow = a), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        LevelData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '18693MqTXhIVItuZ0Lwu59n', 'LevelData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.findLevel = function (e) {
                                return this.find('Id', e);
                            }),
                            (t.prototype.getRow = function () {
                                return new a();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.default = n;
                var a = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getId = function () {
                            return this.getInt('Id');
                        }),
                        (t.prototype.getMid = function () {
                            return this.getInt('Mid');
                        }),
                        (t.prototype.getType = function () {
                            return this.getInt('Type');
                        }),
                        (t.prototype.getLock = function () {
                            return this.getInt('Lock');
                        }),
                        (t.prototype.getNeedLv = function () {
                            return this.getInt('NeedLv');
                        }),
                        (t.prototype.getNeedGold = function () {
                            return this.getInt('NeedGold');
                        }),
                        (t.prototype.getNeedDiamond = function () {
                            return this.getInt('NeedDiamond');
                        }),
                        (t.prototype.getMusicLevel = function () {
                            return this.getInt('Musiclevel');
                        }),
                        (t.prototype.getRewarID = function () {
                            return this.getInt('RewarID');
                        }),
                        (t.prototype.getLocalMusicVer = function () {
                            return this.getInt('LocalMusicVer');
                        }),
                        (t.prototype.getMusicCard = function () {
                            return this.getInt('MusicCard');
                        }),
                        (t.prototype.getMusicTime = function () {
                            return this.getString('MusicTime');
                        }),
                        (t.prototype.getHomeOrder = function () {
                            return this.getInt('HomeOrder');
                        }),
                        (t.prototype.getVipMusicVersion = function () {
                            return this.getInt('VipMusicVersion');
                        }),
                        (t.prototype.getFavoriteRate = function () {
                            return this.getInt('FavoriteRate');
                        }),
                        (t.prototype.getVipCn = function () {
                            return this.getInt('VipCn');
                        }),
                        (t.prototype.getName = function () {
                            return this.getString('Name');
                        }),
                        (t.prototype.getBpm = function () {
                            return this.getInt('bpm');
                        }),
                        (t.prototype.getBpmIncrease = function () {
                            return this.getFloat('bpmIncrease');
                        }),
                        (t.prototype.getPlusType = function () {
                            return this.getInt('PlusType');
                        }),
                        (t.prototype.getPlusTime = function () {
                            return this.getInt('PlusTime');
                        }),
                        (t.prototype.getPlusID1 = function () {
                            return this.getInt('PlusID1');
                        }),
                        (t.prototype.getPlusID2 = function () {
                            return this.getInt('PlusID2');
                        }),
                        (t.prototype.getPlusID3 = function () {
                            return this.getInt('PlusID3');
                        }),
                        (t.prototype.getRewarLife = function () {
                            return this.getInt('RewarLife');
                        }),
                        (t.prototype.getRewarGoal = function () {
                            return this.getInt('RewarGoal');
                        }),
                        (t.prototype.getRewarGoalRevise = function () {
                            return this.getInt('RewarGoalRevise');
                        }),
                        (t.prototype.getMusiclevel = function () {
                            return this.getInt('Musiclevel');
                        }),
                        (t.prototype.getNeedlevel = function () {
                            return this.getInt('Needlevel');
                        }),
                        (t.prototype.getNeedStar = function () {
                            return this.getInt('NeedStar');
                        }),
                        (t.prototype.getNeedCrow = function () {
                            return this.getInt('NeedCrow');
                        }),
                        (t.prototype.getNeedCrow2 = function () {
                            return this.getInt('NeedCrow2');
                        }),
                        (t.prototype.getMusicJson = function () {
                            return this.getString('MusicJson');
                        }),
                        (t.prototype.getMusician = function () {
                            return this.getString('Musician');
                        }),
                        t
                    );
                })(o.default);
                (i.LevelRow = a), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        LevelMgr: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '2964d9m/21HTJLgUxs64V0p', 'LevelMgr'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var p = e('./Level'),
                    n = e('../../util/Dictionary'),
                    h = e('../DB/DBMgr'),
                    a = e('../Core/GameDefine'),
                    f = e('./CopyrightManager'),
                    o = (function () {
                        function o() {
                            (this.FIRSTCELL = 1), (this.SECONDCELL = 2), (this.THIRDCELL = 3), (this.DEFAULT_ANIID_1 = 1024001), (this.DEFAULT_ANIID_2 = 1024002), (this.DEFAULT_ANIID_3 = 1024003), (this.DEFAULT_BRIDGEANI_1 = 2048001), (this.DEFAULT_BRIDGEANI_2 = 2048002), (this.m_LocalMusicVer = 0), (this.isMusicIndexMapIndexed = !1), this.reset();
                        }
                        return (
                            (o.Ins = function () {
                                return o.mInstance || (o.mInstance = new o()), o.mInstance;
                            }),
                            (o.prototype.reset = function () {
                                (this.m_Levels = new n.Dictionary()), (this.m_mapSuoYinInfo = new n.Dictionary()), (this.suoyinMapInfo = new n.Dictionary()), (this.m_showLevels = []), (this.m_mapNeedLvToLevel = new n.Dictionary()), (this.m_mapLevelInfo = new n.Dictionary()), (this.m_midToLevelId = new n.Dictionary());
                                var e = Date.now();
                                this.initLevel(), console.warn('[LevelManager.initLevel] timecost=' + (Date.now() - e) + 'ms');
                            }),
                            (o.prototype.getShowLevels = function () {
                                return this.m_showLevels;
                            }),
                            (o.prototype.getLevel = function (e) {
                                return this.m_Levels.get(e);
                            }),
                            (o.prototype.getLevelByMid = function (e) {
                                for (var t = this.m_Levels.getPairs(), i = 0; i < t.length; ++i) {
                                    var o = t[i].value;
                                    if (o.music.mid == e) return o;
                                }
                                return null;
                            }),
                            (o.prototype.getDefaultAwardStar = function () {
                                var e = new p.AwardStar();
                                return e.insertAward(1, o.STARONE), e.insertAward(2, o.STARTWO), e.insertAward(3, o.STARTHREE), e.insertAward(4, o.STARFOUR), e.insertAward(5, o.STARFIVE), e.insertAward(6, o.STARSIXE), e;
                            }),
                            (o.prototype.initLevel = function () {
                                var e = Date.now(),
                                    t = h.default.Ins(),
                                    i = t.getData(h.eDataBase.eDB_Level);
                                if (i) {
                                    console.warn('[LevelManager.initLevel] timecost2=' + (Date.now() - e) + 'ms'), (e = Date.now());
                                    for (var o = i.getAllDB(), n = 0; n < o.length; ++n) {
                                        var a = o[n];
                                        if (0 != a.length) {
                                            var r = t.getDBRow(h.eDataBase.eDB_Level, a[0]);
                                            if (r && 0 != r.getId()) {
                                                var s = r.getMid();
                                                if (!f.default.getInstance().isCopyrightMusic(s)) {
                                                    this.m_midToLevelId.put(s, r.getId());
                                                    var c = r.getId(),
                                                        l = new p.Level();
                                                    (l.id = r.getId()), (l.type = r.getType()), (l.needLv = r.getNeedLv());
                                                    var u = new p.LevelUnlock();
                                                    switch (((u.unlockType = r.getLock()), r.getLock())) {
                                                        case p.eUnlockType.UNLOCK_TYPE_LV:
                                                            u.unlockValue = r.getNeedLv();
                                                            break;
                                                        case p.eUnlockType.UNLOCK_TYPE_GOLD:
                                                            u.unlockValue = r.getNeedGold();
                                                            break;
                                                        case p.eUnlockType.UNLOCK_TYPE_DIAMOND:
                                                            u.unlockValue = r.getNeedDiamond();
                                                            break;
                                                        case p.eUnlockType.UNLOCK_TYPE_VIDEO:
                                                            u.unlockValue = 1;
                                                    }
                                                    (l.levelUnlock = u), (l.awardStar = this.getDefaultAwardStar());
                                                    var d = new p.LevelMusic();
                                                    (d.mid = r.getMid()), (d.musicLevel = r.getMusicLevel()), (d.bpmIncrease = 0) < r.getMusicTime().length && (d.musicTime = 0), (d.homeOrder = r.getHomeOrder()), (d.musicCard = r.getMusicCard()), (d.localMusicVer = r.getLocalMusicVer()), this.m_LocalMusicVer < d.localMusicVer && (this.m_LocalMusicVer = d.localMusicVer), (d.musicName = r.getMusicJson()), (d.musician = r.getMusician()), (l.music = d), this.m_Levels.put(c, l), this.m_showLevels.push(c), this.putNeedLvToLevel(l.needLv, l), this.initLevelInfo(r);
                                                }
                                            }
                                        }
                                    }
                                    console.warn('[LevelManager.initLevel] timecost3=' + (Date.now() - e) + 'ms', this.m_Levels);
                                } else console.log('XError: CSV Level is error.');
                            }),
                            (o.prototype.initLevelReward = function (e) {
                                var t = h.default.Ins(),
                                    i = h.default.Ins().getDBRow(h.eDataBase.eDB_Level, String(e.id)),
                                    o = new p.ClearanceAward();
                                if (0 < i.getRewarID()) {
                                    var n = String(i.getRewarID()),
                                        a = t.getDBRow(h.eDataBase.eDB_LevelReward, n);
                                    (e.reward3Gold = a.getRewar3Gold()), (e.reward3Goldline = a.getRewar3Goldline());
                                    var r = new p.Earnings();
                                    (r.exp = a.getRewar1Exp()), (r.gold = 0), o.insertAward(1, r);
                                    var s = new p.Earnings();
                                    (s.exp = a.getRewar2ExpFirst()), (s.gold = 0), o.insertAward(2, s);
                                    var c = new p.Earnings();
                                    (c.exp = a.getRewar3Exp()), (c.gold = 0), o.insertAward(3, c);
                                } else (e.reward3Gold = 0), (e.reward3Goldline = 0);
                                e.clearanceAward = o;
                            }),
                            (o.prototype.initMusicIndexMap = function () {
                                if (!this.isMusicIndexMapIndexed) {
                                    var e = h.default.Ins().getData(h.eDataBase.eDB_MusicJson);
                                    if (e) {
                                        for (var t = e.getAllDB(), i = 0; i < t.length; ++i) {
                                            var o = t[i];
                                            if (0 < o.length) {
                                                var n = parseInt(o[0]),
                                                    a = Math.floor(n / 100),
                                                    r = this.suoyinMapInfo.get(a);
                                                if (r) r.push(n);
                                                else {
                                                    var s = new Array();
                                                    s.push(n), this.suoyinMapInfo.put(a, s);
                                                }
                                                this.m_mapSuoYinInfo.put(n, i);
                                            }
                                        }
                                        this.isMusicIndexMapIndexed = !0;
                                    } else console.log('XError: CSV MusicJson is error.');
                                }
                            }),
                            (o.prototype.intMusicCells = function (a) {
                                var r = this;
                                if (a && 0 == a.getMusicCellCount()) {
                                    this.initMusicIndexMap();
                                    var e = this.parseMidToLevelId(a.mid),
                                        s = h.default.Ins(),
                                        c = h.default.Ins().getDBRow(h.eDataBase.eDB_Level, e),
                                        t = this.suoyinMapInfo.get(e);
                                    t && c
                                        ? t.forEach(function (e) {
                                              var t = r.m_mapSuoYinInfo.get(e),
                                                  i = s.getDBRowByRowID(h.eDataBase.eDB_MusicJson, t);
                                              if (i && c.getMid() == i.getMid()) {
                                                  var o = new p.MusicCell();
                                                  (o.BPM = i.getBPM()), (o.musicJson = i.getMusicJson()), (o.baseBeats = parseFloat(i.mRowData[3]));
                                                  var n = i.getId() % 10;
                                                  (o.musicCellid = n), 0 != i.getAniID() ? ((o.aniID = i.getAniID()), (o.bridgeAniID = i.getBridgeAniID())) : n == r.FIRSTCELL ? ((o.aniID = r.DEFAULT_ANIID_1), (o.bridgeAniID = r.DEFAULT_BRIDGEANI_1)) : n == r.SECONDCELL ? ((o.aniID = r.DEFAULT_ANIID_2), (o.bridgeAniID = r.DEFAULT_BRIDGEANI_2)) : n == r.THIRDCELL ? (o.aniID = r.DEFAULT_ANIID_3) : ((o.aniID = i.getAniID()), (o.bridgeAniID = i.getBridgeAniID())), (o.acceleration = i.getAcceleration()), a.insertMusicCell(n, o);
                                              } else console.log('XError: MusicJsonRow error!');
                                          })
                                        : console.info('initMusicCells error musicitem or rowlevel is null.', t, c);
                                }
                            }),
                            (o.prototype.getClearanceAward = function (e) {
                                var t = this.m_Levels.get(e);
                                return (null != t.clearanceAward && null != t.clearanceAward) || this.initLevelReward(t), t.clearanceAward;
                            }),
                            (o.prototype.getRewardGold = function (e) {
                                var t = this.m_Levels.get(e);
                                return (
                                    (-1 != t.reward3Gold && -1 != t.reward3Goldline) || this.initLevelReward(t),
                                    {
                                        gold: t.reward3Gold,
                                        goldline: t.reward3Goldline,
                                    }
                                );
                            }),
                            (o.prototype.initLevelInfo = function (e) {
                                var t = new a.LevelInfo();
                                if (e) {
                                    if (((t.mId = e.getId()), (t.mMid = e.getMid()), (t.mBpm = e.getBpm()), (t.mBpmIncrease = e.getBpmIncrease()), (t.mName = e.getName()), (t.mPlusID1 = e.getPlusID1()), (t.mPlusID2 = e.getPlusID2()), (t.mPlusID3 = e.getPlusID3()), (t.mPlusTime = e.getPlusTime()), (t.mPlusType = e.getPlusType()), (t.mScoreType = o.SCORETYPE), (t.mStarOne = o.STARONE), (t.mStarTwo = o.STARTWO), (t.mStarThree = o.STARTHREE), (t.mStarFour = o.STARFOUR), (t.mStarFive = o.STARFIVE), (t.mStarSix = o.STARSIXE), (t.mRewarLife = e.getRewarLife()), (t.mRewarGoal = e.getRewarGoal()), (t.mRewarGoalRevise = e.getRewarGoalRevise()), (t.mType = e.getType()), (t.mMusicLevel = e.getMusiclevel() < 0 ? 1 : e.getMusiclevel()), (t.m_needCrown = e.getNeedCrow()), (t.m_needCrown2 = e.getNeedCrow2()), (t.mUnlockType = e.getLock()), (t.mUnlockLevel = e.getNeedlevel()), (t.mUnlockLv = e.getNeedLv()), (t.mUnlockStar = e.getNeedStar()), (t.mUnlockGold = e.getNeedGold()), (t.mUnlockDiamond = e.getNeedDiamond()), (t.mUnlockDiamondOnSale = e.getNeedDiamond() / 2), 0 < e.getRewarID())) {
                                        var i = h.default.Ins().getDBRow(h.eDataBase.eDB_LevelReward, e.getRewarID() + '');
                                        i && ((t.mRewarPro = i.getRewarPro()), (t.mRewar3Gold = i.getRewar3Gold()), (t.mRewar3Goldline = i.getRewar3Goldline()), (t.mRewarID = e.getRewarID()), (t.mRewarMax = i.getRewarMax()));
                                    }
                                    (t.mBasicDiamond = 0), this.m_mapLevelInfo.put(t.mId, t);
                                }
                            }),
                            (o.prototype.getLevelInfo = function (e) {
                                return this.m_mapLevelInfo.get(e);
                            }),
                            (o.prototype.getLevelByNeedLv = function (e) {
                                return this.m_mapNeedLvToLevel.get(e);
                            }),
                            (o.prototype.putNeedLvToLevel = function (e, t) {
                                var i = this.m_mapNeedLvToLevel.get(e);
                                i ? i.push(t) : ((i = []).push(t), this.m_mapNeedLvToLevel.put(e, i));
                            }),
                            (o.prototype.parseMidToLevelId = function (e) {
                                return this.m_midToLevelId.get(e);
                            }),
                            (o.SCORETYPE = 1),
                            (o.STARONE = 1),
                            (o.STARTWO = 2),
                            (o.STARTHREE = 3),
                            (o.STARFOUR = 4),
                            (o.STARFIVE = 6),
                            (o.STARSIXE = 9),
                            o
                        );
                    })();
                (i.LevelMgr = o), cc._RF.pop();
            },
            {
                '../../util/Dictionary': 'Dictionary',
                '../Core/GameDefine': 'GameDefine',
                '../DB/DBMgr': 'DBMgr',
                './CopyrightManager': 'CopyrightManager',
                './Level': 'Level',
            },
        ],
        LevelMusicListCtrl: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '2eba4omr/1JGbCw5ua7uWI4', 'LevelMusicListCtrl'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('../../MusicLevelDataLoader'),
                    _ = e('./NormalMusicCardItemPrefb'),
                    o = e('../../../Network/Protocol/StorageUtil'),
                    n = e('../../../../config/LSKey'),
                    r = e('../ImgCache'),
                    s = e('../../../keypad/KeypadUtil'),
                    c = cc._decorator,
                    l = c.ccclass,
                    u = c.property,
                    d = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.itemPrefb = null), (e.scrollView = null), (e.spawnCount = 0), (e.totalCount = 0), (e.spacing = 0), (e.bufferZone = 0), (e.items = []), (e.lastContentPosY = 0), (e.musicInfoArray = new Array()), (e.updateMusicItemCount = 0), (e.mRealIndex = []), (e.mLevelGroupHeight = 36), (e.mContentGroupHeight = 176), (e.mSpecialGroupHeight = 222), (e.mInitHideShowState = !1), (e.mHideAfterLoad = !1), (e.mSkipCount = 0), (e.mAlreadyShow = !1), (e.mHasLoadedListView = !1), (e.mLoadingListView = !1), (e.mUpdateTask = []), (e.mLastItemHeight = 0), e;
                        }
                        return (
                            __extends(e, t),
                            Object.defineProperty(e.prototype, 'hideAfterLoad', {
                                get: function () {
                                    return this.mHideAfterLoad;
                                },
                                set: function (e) {
                                    this.mHideAfterLoad = e;
                                },
                                enumerable: !0,
                                configurable: !0,
                            }),
                            (e.prototype.getTotalCount = function () {
                                return this.musicInfoArray.length;
                            }),
                            (e.prototype.onLoad = function () {
                                this.content = this.scrollView.content;
                            }),
                            (e.prototype.start = function () {}),
                            (e.prototype.loadData = function () {
                                return __awaiter(this, void 0, void 0, function () {
                                    var i = this;
                                    return __generator(this, function (e) {
                                        return (
                                            this.postUpdateTask(function () {
                                                cc.isValid(i.node) &&
                                                    r.default.saveMusicItemBgImageAtlas('/musiclist/music_list_item_bg', ['bg_music_list_item_lock', 'bg_music_list_item_star', 'bg_music_list_item_crown'], function (e, t) {
                                                        cc.isValid(i.node) &&
                                                            i.postUpdateTask(function () {
                                                                (i.musicInfoArray = a.MusicLevelDataLoader.getAllItemInfo()), (i.updateMusicItemCount = i.spawnCount);
                                                                var e = new a.ItemInfo();
                                                                (e.id = _.default.exceptionMoreId),
                                                                    (e.level = _.default.exceptionMoreId),
                                                                    i.musicInfoArray.push(e),
                                                                    i.postUpdateTask(function () {
                                                                        i.initListView(i.musicInfoArray);
                                                                    });
                                                            });
                                                    });
                                            }),
                                            [2]
                                        );
                                    });
                                });
                            }),
                            (e.prototype.initListView = function (d) {
                                return __awaiter(this, void 0, void 0, function () {
                                    var t,
                                        i,
                                        o,
                                        n,
                                        a,
                                        r,
                                        s,
                                        c,
                                        l,
                                        u = this;
                                    return __generator(this, function (e) {
                                        for (Date.now(), t = -9999, l = a = n = o = 0; l < d.length; l++) d[l].id != _.default.exceptionMoreId && (d[l].isCrownLock ? a++ : n++, d[l].level != t && (o++, (t = d[l].level)));
                                        for (
                                            i = (this.mContentGroupHeight + this.spacing) * n + (this.mSpecialGroupHeight + this.spacing) * a + this.mLevelGroupHeight * o + this.spacing + this.mContentGroupHeight + this.spacing,
                                                Date.now(),
                                                r = -9999,
                                                this.content.height = i,
                                                s = function (e) {
                                                    var n = d[e],
                                                        a = e;
                                                    c.postUpdateTask(function () {
                                                        var e = cc.instantiate(u.itemPrefb),
                                                            t = e.getComponent(_.default);
                                                        if ((t.setData(n, a), n.isCrownLock)) {
                                                            var i = {
                                                                isSpecial: !0,
                                                            };
                                                            e.attr(i);
                                                        } else {
                                                            i = {
                                                                isSpecial: !1,
                                                            };
                                                            e.attr(i);
                                                        }
                                                        if (r != n.level) {
                                                            if (((r = n.level), t.setLevel(n.level), 0 == a)) e.setPosition(0, -u.spacing);
                                                            else {
                                                                var o = u.items[a - 1];
                                                                e.setPosition(0, o.y - u.mLastItemHeight - u.spacing);
                                                            }
                                                            (e.tag = 1), (e.height = u.mContentGroupHeight + u.mLevelGroupHeight);
                                                        } else {
                                                            if ((t.removeLevel(), 0 == a)) e.setPosition(0, -u.spacing);
                                                            else {
                                                                o = u.items[a - 1];
                                                                e.setPosition(0, o.y - u.mLastItemHeight - u.spacing);
                                                            }
                                                            (e.tag = 0), n.isCrownLock ? (e.height = u.mSpecialGroupHeight) : (e.height = u.mContentGroupHeight);
                                                        }
                                                        u.content.addChild(e),
                                                            u.items.push(e),
                                                            u.mRealIndex.push(a),
                                                            (u.mLastItemHeight = e.height),
                                                            (u.updateMusicItemCount -= 1),
                                                            u.updateMusicItemCount <= 0 &&
                                                                ((u.mAlreadyShow = !0),
                                                                (u.mHasLoadedListView = !0),
                                                                (u.mLoadingListView = !1),
                                                                (u.scrollView.enabled = !0),
                                                                u.scheduleOnce(function () {
                                                                    u.scrollToRememberPosition();
                                                                }, 0.001));
                                                    });
                                                },
                                                c = this,
                                                l = 0;
                                            l < this.spawnCount;
                                            l++
                                        )
                                            s(l);
                                        return [2];
                                    });
                                });
                            }),
                            (e.prototype.getPositionInView = function (e) {
                                var t = e.parent.convertToWorldSpaceAR(e.position);
                                return this.scrollView.node.convertToNodeSpaceAR(t);
                            }),
                            (e.prototype.update = function (e) {
                                (this.mInitHideShowState || (this.mHideAfterLoad, this.mSkipCount++, 3 <= this.mSkipCount && ((this.mHideAfterLoad = !1), (this.mInitHideShowState = !0))), 0 < this.mUpdateTask.length) && this.mUpdateTask.shift()();
                            }),
                            (e.prototype.postUpdateTask = function (e) {
                                this.mUpdateTask.push(e);
                            }),
                            (e.prototype.onShow = function () {
                                this.mHasLoadedListView || this.mLoadingListView ? this.updateListView() : ((this.mLoadingListView = !0), (this.scrollView.enabled = !1), this.loadData());
                            }),
                            (e.prototype.updateListView = function () {
                                (this.scrollView.enabled = !0), (this.mAlreadyShow = !0), (this.musicInfoArray = a.MusicLevelDataLoader.getAllItemInfo());
                                var e = new a.ItemInfo();
                                (e.id = _.default.exceptionMoreId), this.musicInfoArray.push(e);
                                for (var t, i, o = this.mRealIndex.length, n = 0; n < o; n++) (t = this.mRealIndex[n]), (i = this.items[t].getComponent(_.default)).setData(this.musicInfoArray[i.itemID], i.itemID);
                                this.scrollToRememberPosition();
                            }),
                            (e.prototype.onHide = function () {
                                this.scrollView.stopAutoScroll(), this.mAlreadyShow && this.rememberScrollPosition();
                            }),
                            (e.prototype.setEnable = function (e) {
                                this.scrollView.enabled = e;
                            }),
                            (e.prototype.update2 = function () {
                                var e,
                                    t,
                                    i,
                                    o,
                                    n,
                                    a,
                                    r,
                                    s,
                                    c,
                                    l,
                                    u,
                                    d,
                                    p,
                                    h = this.items,
                                    f = this.bufferZone;
                                if (this.scrollView.content.y < this.lastContentPosY)
                                    for (var m = this.mRealIndex.length - 1; 0 <= m && ((e = this.mRealIndex[m]), (t = this.mRealIndex[0]), (i = h[e]), (o = h[t]), (n = this.getPositionInView(i)).y < -f && o.y + this.spacing + i.height < 0); m--) {
                                        if ((0 == (r = (a = i.getComponent(_.default)).itemID - this.spawnCount) && console.log(''), 0 == r)) {
                                            a.setLevel(this.musicInfoArray[r].level), a.setData(this.musicInfoArray[r], r), (s = this.mRealIndex.pop()), this.mRealIndex.unshift(s), (c = this.mContentGroupHeight + this.mLevelGroupHeight), (i.tag = 1), i.setPositionY(o.y + this.spacing + c);
                                            break;
                                        }
                                        if ((this.musicInfoArray[r].id == _.default.exceptionMoreId ? ((i.tag = 0), (i.height = this.mContentGroupHeight), a.removeLevel()) : this.musicInfoArray[r].level != this.musicInfoArray[r - 1].level ? (a.setLevel(this.musicInfoArray[r].level), (i.tag = 1), (i.height = this.mContentGroupHeight + this.mLevelGroupHeight)) : (a.removeLevel(), (i.tag = 0), this.musicInfoArray[r].isCrownLock ? (i.height = this.mSpecialGroupHeight) : (i.height = this.mContentGroupHeight)), a.setData(this.musicInfoArray[r], r), (s = this.mRealIndex.pop()), this.mRealIndex.unshift(s), (c = this.musicInfoArray[r].isCrownLock ? (1 == i.tag ? this.mSpecialGroupHeight + this.mLevelGroupHeight : this.mSpecialGroupHeight) : 1 == i.tag ? this.mContentGroupHeight + this.mLevelGroupHeight : this.mContentGroupHeight), i.setPositionY(o.y + this.spacing + c), this.musicInfoArray[r].isCrownLock)) {
                                            var g = {
                                                isSpecial: !0,
                                            };
                                            i.attr(g);
                                        } else {
                                            g = {
                                                isSpecial: !1,
                                            };
                                            i.attr(g);
                                        }
                                        m++;
                                    }
                                else
                                    for (m = 0; m < this.mRealIndex.length && ((e = this.mRealIndex[m]), (l = this.mRealIndex[this.mRealIndex.length - 1]), (i = this.items[e]), (u = this.items[l]), (n = this.getPositionInView(i)), (d = u.isSpecial ? (1 == u.tag ? this.mSpecialGroupHeight + this.mLevelGroupHeight : this.mSpecialGroupHeight) : 1 == u.tag ? this.mContentGroupHeight + this.mLevelGroupHeight : this.mContentGroupHeight), n.y > f && u.y - d - this.spacing > -this.content.height); m++) {
                                        if (((r = (a = i.getComponent(_.default)).itemID + this.spawnCount), this.musicInfoArray[r].id == _.default.exceptionMoreId ? ((i.tag = 0), (i.height = this.mContentGroupHeight), a.removeLevel()) : this.musicInfoArray[r].level != this.musicInfoArray[r - 1].level ? (a.setLevel(this.musicInfoArray[r].level), (i.tag = 1), (i.height = this.mContentGroupHeight + this.mLevelGroupHeight)) : (a.removeLevel(), (i.tag = 0), this.musicInfoArray[r].isCrownLock ? (i.height = this.mSpecialGroupHeight) : (i.height = this.mContentGroupHeight)), a.setData(this.musicInfoArray[r], r), (p = this.mRealIndex.shift()), this.mRealIndex.push(p), i.setPositionY(u.y - d - this.spacing), this.musicInfoArray[r].isCrownLock)) {
                                            g = {
                                                isSpecial: !0,
                                            };
                                            i.attr(g);
                                        } else {
                                            g = {
                                                isSpecial: !1,
                                            };
                                            i.attr(g);
                                        }
                                        m--;
                                    }
                                this.lastContentPosY = this.scrollView.content.y;
                            }),
                            (e.prototype.scrollEvent = function (e, t) {
                                switch (t) {
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    case 4:
                                        this.update2();
                                }
                            }),
                            (e.prototype.addHeight = function () {}),
                            (e.prototype.rememberScrollPosition = function () {
                                o.default.save(n.default.LEVEL_MUSIC_LIB_SCROLL_POSITION, this.scrollView.getScrollOffset().y + '');
                                o.default.read(n.default.LEVEL_MUSIC_LIB_SCROLL_POSITION);
                            }),
                            (e.prototype.scrollToRememberPosition = function () {
                                if (s.default.isHorizon()) console.warn('== skip scrollToRememberPosition for horizontal ==');
                                else {
                                    var e = o.default.read(n.default.LEVEL_MUSIC_LIB_SCROLL_POSITION);
                                    e ? this.scrollView.scrollTo(cc.p(0, 1 - parseFloat(e) / this.scrollView.getMaxScrollOffset().y), 0.1) : this.scrollView.scrollToTop();
                                }
                            }),
                            __decorate([u(cc.Prefab)], e.prototype, 'itemPrefb', void 0),
                            __decorate([u(cc.ScrollView)], e.prototype, 'scrollView', void 0),
                            __decorate([u], e.prototype, 'spawnCount', void 0),
                            __decorate([u], e.prototype, 'totalCount', void 0),
                            __decorate([u], e.prototype, 'spacing', void 0),
                            __decorate([u], e.prototype, 'bufferZone', void 0),
                            (e = __decorate([l], e))
                        );
                    })(cc.Component);
                (i.default = d), cc._RF.pop();
            },
            {
                '../../../../config/LSKey': 'LSKey',
                '../../../Network/Protocol/StorageUtil': 'StorageUtil',
                '../../../keypad/KeypadUtil': 'KeypadUtil',
                '../../MusicLevelDataLoader': 'MusicLevelDataLoader',
                '../ImgCache': 'ImgCache',
                './NormalMusicCardItemPrefb': 'NormalMusicCardItemPrefb',
            },
        ],
        LevelRewardData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '5e6e9cIfmtNrbRTmwKyQiwO', 'LevelRewardData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.findLevel = function (e) {
                                return this.find('RewarID', e);
                            }),
                            (t.prototype.getRow = function () {
                                return new a();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.LevelRewardData = n;
                var a = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getRewardID = function () {
                            return this.getInt('RewarID');
                        }),
                        (t.prototype.getRewar1Exp = function () {
                            return this.getInt('Rewar1Exp');
                        }),
                        (t.prototype.getRewar2ExpFirst = function () {
                            return this.getInt('Rewar2ExpFirst');
                        }),
                        (t.prototype.getRewar3Exp = function () {
                            return this.getInt('Rewar3Exp');
                        }),
                        (t.prototype.getRewar3Gold = function () {
                            return this.getInt('Rewar3Gold');
                        }),
                        (t.prototype.getRewar3Goldline = function () {
                            return this.getInt('Rewar3Goldline');
                        }),
                        (t.prototype.getRewarMax = function () {
                            return this.getInt('RewarMax');
                        }),
                        (t.prototype.getRewarDaily = function () {
                            return this.getInt('RewarDaily');
                        }),
                        (t.prototype.getRewarMax2 = function () {
                            return this.getInt('RewarMax2');
                        }),
                        (t.prototype.getRewarPro = function () {
                            return this.getFloat('RewarPro');
                        }),
                        t
                    );
                })(o.default);
                (i.LevelRewardRow = a), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        LevelThreeTask: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'e215d/Cz0NA0JFeYfCRdcnB', 'LevelThreeTask'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./TaskItemImpl'),
                    n = e('../../Logic/PlayerMgr'),
                    a = e('../TaskItem'),
                    r = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.update = function () {
                                var e = n.default.Ins().getUserLevel();
                                3 <= e ? ((this.currentStep = this.totalStep), (this.status = a.TaskStatus.TASK_STATUS_SUCCESS)) : ((this.currentStep = e), (this.status = a.TaskStatus.TASK_STATUS_DOING));
                            }),
                            t
                        );
                    })(o.default);
                (i.default = r), cc._RF.pop();
            },
            {
                '../../Logic/PlayerMgr': 'PlayerMgr',
                '../TaskItem': 'TaskItem',
                './TaskItemImpl': 'TaskItemImpl',
            },
        ],
        LevelVideoGetSkinPrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '0e24fmkzjpFor9goqYqOMsZ', 'LevelVideoGetSkinPrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../modules/MGAdv/scripts/Logic/MGAdvEntrance'),
                    n = e('../../../modules/MGAdv/scripts/Logic/MGAdvDefine'),
                    a = e('../../base/Log'),
                    r = e('../Logic/SkinDataManager'),
                    s = e('../skin/SkinUtils'),
                    c = e('../UI/GameEntraScene/PrefabMgr'),
                    l = e('../UI/GameEntraScene/ToastPrefab'),
                    u = e('../keypad/KeypadNavigator'),
                    d = cc._decorator,
                    p = d.ccclass,
                    h = d.property,
                    f = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.equitBtn = null), (e.doubleBtn = null), (e.skipBtn = null), (e.closeBtn = null), (e.closeCallback = null), (e.useSkinLock = !1), e;
                        }
                        var i;
                        return (
                            __extends(e, t),
                            ((i = e).prototype.start = function () {
                                var e = this;
                                this.addListener(),
                                    this.scheduleOnce(function () {
                                        u.default.getInstance().pushDialog(e.node);
                                    }, 0.1);
                            }),
                            (e.prototype.addListener = function () {
                                this.closeBtn.on(cc.Node.EventType.TOUCH_END, this.closeComplete, this), this.equitBtn.on(cc.Node.EventType.TOUCH_END, this.equitComplete, this), this.doubleBtn.on(cc.Node.EventType.TOUCH_END, this.doubleComplete, this), this.skipBtn.on(cc.Node.EventType.TOUCH_END, this.skipComplete, this);
                            }),
                            (e.prototype.removeListener = function () {
                                this.closeBtn.off(cc.Node.EventType.TOUCH_END, this.closeComplete, this), this.equitBtn.off(cc.Node.EventType.TOUCH_END, this.equitComplete, this), this.doubleBtn.off(cc.Node.EventType.TOUCH_END, this.doubleComplete, this), this.skipBtn.off(cc.Node.EventType.TOUCH_END, this.skipComplete, this);
                            }),
                            (e.prototype.equitComplete = function () {
                                var e = this;
                                if (this.useSkinLock) this.showToastTips('new skin loading !');
                                else {
                                    this.useSkinLock = !0;
                                    var t = r.SkinDataMgr.Ins().getSkinListExceptDefault()[5],
                                        i = r.SkinDataMgr.Ins().getSkinItemInfo(t.name);
                                    s.default.useSkin(
                                        i,
                                        this.node,
                                        function () {},
                                        function () {
                                            (e.useSkinLock = !1), e.showToastTips('Failed to load skin');
                                        },
                                        function () {
                                            e.closeComplete();
                                        },
                                        function () {
                                            (e.useSkinLock = !1), e.showToastTips('Failed to use skin');
                                        },
                                    );
                                }
                            }),
                            (e.prototype.doubleComplete = function () {
                                this.watchAds();
                            }),
                            (e.prototype.skipComplete = function () {
                                this.closeComplete();
                            }),
                            (e.prototype.closeComplete = function () {
                                u.default.getInstance().popDialog(this.node), this.removeListener(), this.node.parent.removeChild(this.node), this.closeCallback && this.closeCallback();
                            }),
                            (e.prototype.watchAds = function () {
                                var t = this,
                                    e = n.ADScene.SCENE_CM_PLAY_SKIN_WATCH_ADS;
                                o.MGAdv.show(e, n.QQ_ADV_TYPE.VIDEO_TYPE_SKIN_UNLOCK, function (e) {
                                    if (cc.isValid(t, !0))
                                        switch (e) {
                                            case n.ADStat.NOT_NETWORK:
                                                t.showToastTips('No network available');
                                                break;
                                            case n.ADStat.SHOW_SUCCESS_CLOSE:
                                                a.default.i(i.TAG + ' watchAds success '), t.onWatchAdsSuccess();
                                                break;
                                            case n.ADStat.SHOW_NOT_ENED_CLOSE:
                                                t.showToastTips('show not end close');
                                                break;
                                            case n.ADStat.SHOW_GET_AD_FAILED:
                                                t.showToastTips('No video ads available');
                                        }
                                });
                            }),
                            (e.prototype.showToastTips = function (i) {
                                var o = this;
                                c.default.load('prefab/ToastPrefab', function (e, t) {
                                    t.getComponent(l.default).showTips(i, function () {
                                        t.destroy();
                                    }),
                                        o.node.addChild(t);
                                });
                            }),
                            (e.prototype.onWatchAdsSuccess = function () {
                                var e = r.SkinDataMgr.Ins().getSkinListExceptDefault()[5];
                                r.SkinDataMgr.Ins().unlockSkin(e.name), (this.doubleBtn.active = !1), u.default.getInstance().refreshPage(this.node);
                            }),
                            (e.TAG = 'LevelVideoGetSkinPrefab'),
                            __decorate([h(cc.Node)], e.prototype, 'equitBtn', void 0),
                            __decorate([h(cc.Node)], e.prototype, 'doubleBtn', void 0),
                            __decorate([h(cc.Node)], e.prototype, 'skipBtn', void 0),
                            __decorate([h(cc.Node)], e.prototype, 'closeBtn', void 0),
                            (e = i = __decorate([p], e))
                        );
                    })(cc.Component);
                (i.default = f), cc._RF.pop();
            },
            {
                '../../../modules/MGAdv/scripts/Logic/MGAdvDefine': 'MGAdvDefine',
                '../../../modules/MGAdv/scripts/Logic/MGAdvEntrance': 'MGAdvEntrance',
                '../../base/Log': 'Log',
                '../Logic/SkinDataManager': 'SkinDataManager',
                '../UI/GameEntraScene/PrefabMgr': 'PrefabMgr',
                '../UI/GameEntraScene/ToastPrefab': 'ToastPrefab',
                '../keypad/KeypadNavigator': 'KeypadNavigator',
                '../skin/SkinUtils': 'SkinUtils',
            },
        ],
        Level: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '9ac8530fKlBjbH5kYz+IsOE', 'Level'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../util/Dictionary'),
                    n = function () {
                        (this.id = 0), (this.type = 0), (this.reward3Gold = -1), (this.reward3Goldline = -1);
                    };
                i.Level = n;
                var a = (function () {
                    function e() {
                        (this.mid = 0), (this.musicLevel = 0), (this.bpmIncrease = 0), (this.musicTime = 0), (this.homeOrder = 0), (this.localMusicVer = 0), (this.musicCard = 0), (this._cells = new o.Dictionary());
                    }
                    return (
                        (e.prototype.insertMusicCell = function (e, t) {
                            this._cells.put(e, t);
                        }),
                        (e.prototype.getMusicCells = function () {
                            return this._cells;
                        }),
                        (e.prototype.getMusicCellCount = function () {
                            return this._cells.size();
                        }),
                        e
                    );
                })();
                i.LevelMusic = a;
                var r = function () {
                    (this.unlockType = 0), (this.unlockValue = 0);
                };
                i.LevelUnlock = r;
                var s = (function () {
                    function e() {
                        this.m_Star = new o.Dictionary();
                    }
                    return (
                        (e.prototype.insertAward = function (e, t) {
                            this.m_Star.put(e, t);
                        }),
                        (e.prototype.getAward = function (e) {
                            return this.m_Star.get(e);
                        }),
                        e
                    );
                })();
                i.AwardStar = s;
                var c = function () {
                    (this.BPM = 0), (this.musicCellid = 0), (this.aniID = 0), (this.bridgeAniID = 0), (this.baseBeats = 0), (this.volFactor = 0), (this.acceleration = 0), (this.startX = 0), (this.startY = 0), (this.endX = 0), (this.endY = 0);
                };
                i.MusicCell = c;
                var l = function () {
                    (this.gold = 0), (this.exp = 0);
                };
                i.Earnings = l;
                var u,
                    d,
                    p,
                    h = (function () {
                        function e() {
                            this._earnings = new o.Dictionary();
                        }
                        return (
                            (e.prototype.insertAward = function (e, t) {
                                this._earnings.put(e, t);
                            }),
                            (e.prototype.getAward = function (e) {
                                return this._earnings.get(e);
                            }),
                            e
                        );
                    })();
                (i.ClearanceAward = h), ((u = i.eLevelKind || (i.eLevelKind = {}))[(u.eLevel_Normal = 1)] = 'eLevel_Normal'), (u[(u.eLevel_Gold = 2)] = 'eLevel_Gold'), (u[(u.eLevel_Honor = 3)] = 'eLevel_Honor'), (u[(u.eLevel_Diamond = 4)] = 'eLevel_Diamond'), (u[(u.eLevel_Class = 10)] = 'eLevel_Class'), (u[(u.eLevel_Popular = 16)] = 'eLevel_Popular'), (u[(u.eLevel_Choiceness = 19)] = 'eLevel_Choiceness'), ((d = i.eUnlockType || (i.eUnlockType = {}))[(d.UNLOCK_TYPE_LV = 1)] = 'UNLOCK_TYPE_LV'), (d[(d.UNLOCK_TYPE_GOLD = 2)] = 'UNLOCK_TYPE_GOLD'), (d[(d.UNLOCK_TYPE_STAR = 3)] = 'UNLOCK_TYPE_STAR'), (d[(d.UNLOCK_TYPE_DIAMOND = 13)] = 'UNLOCK_TYPE_DIAMOND'), (d[(d.UNLOCK_TYPE_ACTIVITY = 14)] = 'UNLOCK_TYPE_ACTIVITY'), (d[(d.UNLOCK_TYPE_LV_TRY = 17)] = 'UNLOCK_TYPE_LV_TRY'), (d[(d.UNLOCK_TYPE_VIP = 21)] = 'UNLOCK_TYPE_VIP'), (d[(d.UNLOCK_TYPE_VIDEO = 22)] = 'UNLOCK_TYPE_VIDEO'), ((p = i.eSymbolKind || (i.eSymbolKind = {}))[(p.eSymbolDefault = 0)] = 'eSymbolDefault'), (p[(p.eSymbolOrigin = 1)] = 'eSymbolOrigin'), cc._RF.pop();
            },
            {
                '../../util/Dictionary': 'Dictionary',
            },
        ],
        LifeData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'd7f45yR3VBGUppkSep3nrJo', 'LifeData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.findId = function (e) {
                                return this.find('id', e);
                            }),
                            (t.prototype.getRow = function () {
                                return new a();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.LifeData = n;
                var a = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getId = function () {
                            return this.getInt('id');
                        }),
                        (t.prototype.getlv = function () {
                            return this.getInt('lv');
                        }),
                        (t.prototype.getLife = function () {
                            return this.getInt('Life');
                        }),
                        (t.prototype.getLifeRecovery = function () {
                            return this.getInt('LifeRecovery');
                        }),
                        t
                    );
                })(o.default);
                (i.LifeRow = a), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        Lifecycle: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '37584Vg2p1Avaj57Irfgasa', 'Lifecycle'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../social/SocialHelper'),
                    n = e('../social/SocialManager'),
                    a = e('../business/Network/Protocol/StorageUtil'),
                    r = e('../infoc/m_p2_PData'),
                    s = e('../business/Logic/PlayerMgr'),
                    c = e('./G'),
                    l = e('../business/Logic/EventBus'),
                    u = e('../business/Logic/NotifyEvent'),
                    d = e('../business/Logic/SkinDataManager'),
                    p = e('../business/UI/GameEntraScene/MusicLib/InviteUnlockMusicCountdownUtil'),
                    h = e('../infoc/minigame_piano2_leave_page'),
                    f = e('../util/PageHeap'),
                    m = (function () {
                        function e() {
                            (this.mIsInited = !1), (this.mIsShow = !1), (this.onShowFunc = null), (this.onHideFunc = null);
                        }
                        return (
                            (e.getIntance = function () {
                                return e.mInstance || (e.mInstance = new e()), e.mInstance;
                            }),
                            (e.prototype.init = function () {
                                var t = this;
                                this.mIsInited ||
                                    (o.SocialHelper.onShowListen(function (e) {
                                        t.onShow(e);
                                    }),
                                    o.SocialHelper.onHideListen(function () {
                                        t.onHide();
                                    }),
                                    (this.onShowFunc = function () {
                                        console.log('--- onActivityShow ---'), t.onShow(null);
                                    }),
                                    (this.onHideFunc = function () {
                                        console.log('--- onActivityHide ---'), t.onHide();
                                    }),
                                    CMPlay.onShow(this.onShowFunc),
                                    CMPlay.onHide(this.onHideFunc),
                                    (this.mIsInited = !0),
                                    (this.mIsShow = !0));
                            }),
                            (e.prototype.onShow = function (e) {
                                if (!this.mIsShow) {
                                    (this.mIsShow = !0), (c.G.enterGameTime = new Date().getTime());
                                    var t = s.default.Ins();
                                    r.default.report(r.default.ENTER_GAME, 0, t.getUserLevel(), t.getUserCurrentExp(), t.getUserCoin(), t.getHP(), t.getUserDiamond(), t.getTotalCrown(), t.getTotalStar(), r.default.HOT_AWAKE, d.SkinDataMgr.Ins().getCurSkin(), d.SkinDataMgr.Ins().getUnLockSkinNum()), n.default.getInstance().onShow(e), (c.G.launchOption = e), l.default.fire(u.default.LIFE_CYCLE_ON_SHOW, e), p.default.Ins().updateServerTime();
                                }
                            }),
                            (e.prototype.onHide = function () {
                                if (this.mIsShow) {
                                    (this.mIsShow = !1), n.default.getInstance().onHide();
                                    var e = new Date().getTime(),
                                        t = 0;
                                    null != c.G.enterGameTime && 0 != c.G.enterGameTime && (t = Math.ceil((e - c.G.enterGameTime) / 1e3)) < 0 && (t = 0);
                                    var i = s.default.Ins();
                                    r.default.report(r.default.EXIT_GAME, t, i.getUserLevel(), i.getUserCurrentExp(), i.getUserCoin(), i.getHP(), i.getUserDiamond(), i.getTotalCrown(), i.getTotalStar(), r.default.QUIT, d.SkinDataMgr.Ins().getCurSkin(), d.SkinDataMgr.Ins().getUnLockSkinNum()), h.default.report(f.default.Ins().toString()), a.default.pushAsync(), l.default.fire(u.default.LIFE_CYCLE_ON_HIDE);
                                }
                            }),
                            (e.prototype.onNetworkStatusChange = function (e) {
                                (c.G.networkType = e.networkType), (c.G.networkIsConnected = e.isConnected);
                            }),
                            e
                        );
                    })();
                (i.default = m), cc._RF.pop();
            },
            {
                '../business/Logic/EventBus': 'EventBus',
                '../business/Logic/NotifyEvent': 'NotifyEvent',
                '../business/Logic/PlayerMgr': 'PlayerMgr',
                '../business/Logic/SkinDataManager': 'SkinDataManager',
                '../business/Network/Protocol/StorageUtil': 'StorageUtil',
                '../business/UI/GameEntraScene/MusicLib/InviteUnlockMusicCountdownUtil': 'InviteUnlockMusicCountdownUtil',
                '../infoc/m_p2_PData': 'm_p2_PData',
                '../infoc/minigame_piano2_leave_page': 'minigame_piano2_leave_page',
                '../social/SocialHelper': 'SocialHelper',
                '../social/SocialManager': 'SocialManager',
                '../util/PageHeap': 'PageHeap',
                './G': 'G',
            },
        ],
        List: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '53780t0F8JPo6ru/BIw7o07', 'List'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = function () {
                        (this.data = null), (this.prev = null), (this.next = null);
                    },
                    n = (function () {
                        function e() {
                            this.create();
                        }
                        return (
                            (e.prototype.push = function (e) {
                                var t = this.tail.prev,
                                    i = new o();
                                (i.data = e), (i.next = null), ((i.prev = t).next = i), (this.tail.prev = i);
                            }),
                            (e.prototype.pop = function () {
                                var e = this.tail.prev;
                                if (e === this.head) return null;
                                var t = e.prev;
                                return (t.next = this.tail), (this.tail.prev = t), e.data;
                            }),
                            (e.prototype.at = function (e) {
                                return e.data;
                            }),
                            (e.prototype.begin = function () {
                                return this.head.next;
                            }),
                            (e.prototype.next = function (e) {
                                return e.next;
                            }),
                            (e.prototype.end = function () {
                                return this.tail;
                            }),
                            (e.prototype.create = function () {
                                (this.head = new o()), (this.tail = new o()), (this.tail.prev = this.head), (this.head.next = this.tail);
                            }),
                            e
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {},
        ],
        LoaderInit: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '5cdb370AsZO/pIANCF9T3mD', 'LoaderInit'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./BeginFrameLoader'),
                    n = e('./GameSceneFrameLoader'),
                    a = e('./NumberFrameLoader'),
                    r = e('./KeypadFrameLoader');
                ((i.LoaderInit || (i.LoaderInit = {})).initilize = function () {
                    return __awaiter(this, void 0, void 0, function () {
                        var t = this;
                        return __generator(this, function (e) {
                            switch (e.label) {
                                case 0:
                                    return [4, o.default.getInstance().init()];
                                case 1:
                                    return (
                                        e.sent(),
                                        n.default.getInstance().init(function () {
                                            return __awaiter(t, void 0, void 0, function () {
                                                return __generator(this, function (e) {
                                                    switch (e.label) {
                                                        case 0:
                                                            return [4, a.default.getInstance().init()];
                                                        case 1:
                                                            return e.sent(), [4, r.default.getInstance().init()];
                                                        case 2:
                                                            return e.sent(), [2];
                                                    }
                                                });
                                            });
                                        }, this),
                                        [2]
                                    );
                            }
                        });
                    });
                }),
                    cc._RF.pop();
            },
            {
                './BeginFrameLoader': 'BeginFrameLoader',
                './GameSceneFrameLoader': 'GameSceneFrameLoader',
                './KeypadFrameLoader': 'KeypadFrameLoader',
                './NumberFrameLoader': 'NumberFrameLoader',
            },
        ],
        LoadingFailedPrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '97237Bflm5BF75opDQI3BEB', 'LoadingFailedPrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./BasicTouchEvent'),
                    n = e('../../../util/StringUtil'),
                    a = e('../../../util/PU'),
                    r = e('../../../../modules/MGUtils/QQHelper'),
                    s = e('../../Logic/I18nManager'),
                    c = cc._decorator,
                    l = c.ccclass,
                    u = c.property,
                    d = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.retryAgain = null), (e.labelMsg = null), (e.mErrorCode = null), (e.callback = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.onLoad = function () {
                                var e = this;
                                this.retryAgain.node.on(cc.Node.EventType.TOUCH_END, this.retryBtnTouchCallback, this);
                                var t = new o.default(function () {
                                    e.showPlayerId();
                                });
                                this.labelMsg.node.on(cc.Node.EventType.TOUCH_END, t.click, t), this.updateTips();
                            }),
                            (e.prototype.showPlayerId = function () {
                                var t = this;
                                a.default.isQQ() &&
                                    r.QQHelper.fetchOpenKey({
                                        success: function (e) {
                                            cc.isValid(t, !0) && e && -1 == t.labelMsg.string.indexOf(e) && (t.labelMsg.string += '\n(' + e + ')');
                                        },
                                    });
                            }),
                            (e.prototype.updateTips = function () {
                                var e = '资源加载失败，请检查网络状态后重试';
                                s.default.getInstance().isEnglish() && (e = 'Loading failed.Please check the network and try again'), n.StringUtil.isNullOrUndefined(this.mErrorCode) || (e = e + '（' + this.mErrorCode + '）'), (this.labelMsg.string = e);
                            }),
                            (e.prototype.retryBtnTouchCallback = function () {
                                this.callback && this.callback();
                            }),
                            (e.prototype.setErrorCode = function (e) {
                                this.mErrorCode = e;
                            }),
                            (e.prototype.setRetryCallback = function (e) {
                                this.callback = e;
                            }),
                            __decorate([u(cc.Button)], e.prototype, 'retryAgain', void 0),
                            __decorate([u(cc.Label)], e.prototype, 'labelMsg', void 0),
                            (e = __decorate([l], e))
                        );
                    })(cc.Component);
                (i.default = d), cc._RF.pop();
            },
            {
                '../../../../modules/MGUtils/QQHelper': 'QQHelper',
                '../../../util/PU': 'PU',
                '../../../util/StringUtil': 'StringUtil',
                '../../Logic/I18nManager': 'I18nManager',
                './BasicTouchEvent': 'BasicTouchEvent',
            },
        ],
        LoadingScene: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '747e7T6bQZNb6qvf3Adh4W7', 'LoadingScene'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var r = e('../../../base/G'),
                    s = e('../../../gamescene/element/loader/LoaderInit'),
                    o = e('../../../base/GameApp'),
                    c = e('../../../base/Log'),
                    l = e('../../Logic/Plugin/PluginMgr'),
                    u = e('../../Logic/PlayerMgr'),
                    n = e('../../Network/Protocol/StorageUtil'),
                    a = e('../../../config/LSKey'),
                    d = e('../../../social/SocialHelper'),
                    p = e('../../Logic/EventBus'),
                    h = e('../../Logic/NotifyEvent'),
                    f = e('./LoadingFailedPrefab'),
                    m = e('../../../base/Lifecycle'),
                    g = e('../../../social/SocialManager'),
                    _ = e('../../../infoc/m_p2_PData'),
                    y = e('../../../util/SUtil'),
                    S = e('../../../util/PU'),
                    v = e('../../Logic/SkinDataManager'),
                    I = e('../../../upgrade/ResMgr'),
                    T = e('../../../infoc/Infoc'),
                    C = e('../../../base/CrashMonitor'),
                    E = e('../../skin/SkinManager'),
                    A = e('../../../base/GameInfoMgr'),
                    P = e('../../../infoc/m_p2_DL'),
                    k = e('../../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    M = e('../../Network/Protocol/MemCache'),
                    L = e('./PrefabMgr'),
                    b = e('./GameEntranceScene'),
                    N = e('../../../gamescene/MUI/MUIDefines'),
                    R = e('../../../LogicPlatform/PlatformProxy'),
                    D = e('../../../../modules/MGAppShare/scripts/MGShareUtil'),
                    w = e('../../../../modules/MGAppShare/scripts/ShareHelper'),
                    B = e('../../DB/DBMgr'),
                    G = e('../UserInfoBtnManager'),
                    O = e('../../../util/QQReport'),
                    U = e('./../../propAddition/Define'),
                    F = e('../../../../modules/MGBasic/scripts/LocalStorageHelplerWeb'),
                    H = e('../HotmusicActivityMgr'),
                    x = e('./PreLoadAssets'),
                    V = e('../../../business/Logic/I18nManager'),
                    K = cc._decorator,
                    W = K.ccclass,
                    Y = K.property;
                cc.sys.platform == cc.sys.QQ_PLAY && (Promise = e('../../../../../node_modules/promise'));
                var Q = (function (t) {
                    function e() {
                        var e = (null !== t && t.apply(this, arguments)) || this;
                        return (e.downloadProgress = null), (e.downloadPrgBar = null), (e.downloadSprite = null), (e.headPhoneSprite = null), (e.headPhoneTips = null), (e.staticTips = null), (e.downloadFailedMaskLayout = null), (e.mRightNode = null), (e.mRightLine1 = null), (e.mRightLine2 = null), (e.version_label = null), (e.gd_label = null), (e.mLastProgress = -1), (e.download_total_prg = 79), (e.load_image_total_prg = 5), (e.load_db_total_prg = 15), (e.mDownloadTotalPercent = 1), (e.mProgressMap = new Object()), (e.mPullUserOpportunity = 1), (e.USER_PULL_DATA_NOW = 1), (e.USER_DELAY_PULL_DATA = 2), (e.USER_ERROR = 3), (e.USER_NEW = 4), e;
                    }
                    return (
                        __extends(e, t),
                        (e.prototype.onLoadingProgressChanged = function (t, i) {
                            var o = this;
                            try {
                                if ((console.info('onLoadingProgressChanged =>' + event + '  args=' + JSON.stringify(i)), h.default.LOADING_DOWNLOAD === t)) {
                                    if (this.mProgressMap[i[0]] != i[1]) {
                                        this.mProgressMap[i[0]] = i[1];
                                        var e = Object.keys(this.mProgressMap),
                                            n = 0;
                                        e.forEach(function (e) {
                                            n += o.mProgressMap[e];
                                        });
                                        var a = n / (1 * this.mDownloadTotalPercent);
                                        this.setGlobalProgress(a * this.download_total_prg);
                                    }
                                } else h.default.LOADING_IMAGE === t ? this.setGlobalProgress(this.download_total_prg + i * this.load_image_total_prg) : h.default.LOADING_DB === t && this.setGlobalProgress(this.download_total_prg + this.load_image_total_prg + i * this.load_db_total_prg);
                            } catch (e) {
                                c.default.e('[LoadingScene] onLoadingProgressChanged:' + e, t, i);
                            }
                        }),
                        (e.prototype.setGlobalProgress = function (e) {
                            if ((isNaN(e) && (e = 0), (e = parseInt(e + '')), !(this.mLastProgress >= e))) {
                                (this.mLastProgress = e), V.default.getInstance().isEnglish() ? (this.downloadProgress.string = 'Loading music resources...' + e + '%') : (this.downloadProgress.string = '正在加载音乐资源...' + e + '%'), (this.downloadPrgBar.progress = e / 100);
                                var t = this.downloadPrgBar.getComponent(cc.Widget);
                                this.downloadSprite.getComponent(cc.Widget).node.x = t.node.x + (t.node.width * e) / 100;
                            }
                        }),
                        (e.prototype.initUI = function (e) {
                            e ? ((this.downloadProgress.node.active = !0), (this.downloadPrgBar.node.active = !0), (this.downloadSprite.node.active = !0), (this.headPhoneSprite.node.active = !1), (this.headPhoneTips.node.active = !1)) : ((this.downloadProgress.node.active = !1), (this.downloadPrgBar.node.active = !1), (this.downloadSprite.node.active = !1), (this.headPhoneSprite.node.active = !0), (this.headPhoneTips.node.active = !0));
                        }),
                        (e.prototype.setBg = function (e) {}),
                        (e.prototype.updateUI = function (e, t) {
                            if (h.default.LOADING_UI_NOTIFY === e) {
                                this.setGlobalProgress(0);
                                var i = '';
                                t && 0 < t.length && (i = t[0]), (this.mDownloadTotalPercent = 1);
                                for (var o = Object.keys(this.mProgressMap), n = 0; n < o.length; n++) delete this.mProgressMap[o[n]];
                                'download' == i && 1 < i.length && (this.mDownloadTotalPercent = t[1]), this.initUI('download' == i);
                            }
                        }),
                        (e.prototype.showLoadingFailed = function (e, o, n) {
                            var a = this;
                            L.default.load('prefab/LoadingFailedPrefab', function (e, t) {
                                var i = t.getComponent(f.default);
                                i.setErrorCode(o),
                                    i.setRetryCallback(function () {
                                        t.destroy(), n ? n() : a.doLoad();
                                    }),
                                    a.downloadFailedMaskLayout.node.addChild(t);
                            });
                        }),
                        (e.prototype.resetDownloadProgress = function () {
                            this.mLastProgress = -1;
                        }),
                        (e.prototype.checkResFileIsExist = function (t) {
                            var i = S.default.getResourcePath('resources/DB/level.txt');
                            R.default
                                .Ins()
                                .getFileSystemManager()
                                .access({
                                    path: i,
                                    success: function (e) {
                                        t(!!e);
                                    },
                                    fail: function (e) {
                                        c.default.i('LoadingScence. checkResFileIsExist ', i, e.errMsg), t(!1);
                                    },
                                });
                        }),
                        (e.prototype.onDestroy = function () {
                            p.default.remove(h.default.LIFE_CYCLE_ON_SHOW, this.onShow, this), p.default.remove(h.default.LIFE_CYCLE_ON_HIDE, this.onHide, this), cc.sys.garbageCollect();
                        }),
                        (e.prototype.updateMUIGlobal = function () {
                            cc._renderType !== cc.game.RENDER_TYPE_CANVAS ? N.MUI.global.initilize(N.MUI.RenderType.WEBGL, cc.game.canvas.getContext('webgl'), cc.game.canvas.width, cc.game.canvas.height) : N.MUI.global.initilize(N.MUI.RenderType.CANVAS, cc.game.canvas.getContext('2d'), cc.game.canvas.width, cc.game.canvas.height);
                        }),
                        (e.prototype.onLoad = function () {
                            console.log('[loadingscene] onload0');
                            var e = A.GameInfoMgr.Ins().getInfo();
                            F.LocalStorageHelperWeb.init(e.gameid), c.default.init(e), S.default.init(), S.default.initGameModel(e, c.default.isDebug()), G.UserInfoBtnManager.getInstance().init(), this.saveFirstEnterTime(), console.log('[loadingscene] onload1'), this.updateMUIGlobal(), this.doInit();
                        }),
                        (e.prototype.saveFirstEnterTime = function () {
                            var e = n.default.read(a.default.FIRST_ENTER_TIME);
                            if (null == e || null == e || 0 == e.length) {
                                var t = new Date().getTime();
                                n.default.save(a.default.FIRST_ENTER_TIME, t + '');
                            }
                        }),
                        (e.prototype.doInit = function () {
                            var e = this;
                            this.init(A.GameInfoMgr.Ins().getInfo(), function () {
                                e.initGlobalInfo(), e.doLoad();
                            });
                        }),
                        (e.prototype.init = function (t, o) {
                            var i = this;
                            if ((console.log('[loadingscene] init'), t)) {
                                this.version_label && this.version_label.isValid && (this.version_label.string = '1.9.27.1');
                                Date.now();
                                console.info('start getuserinfo.'),
                                    k.MGUser.getUserBasicInfo({
                                        complete: function (e) {
                                            console.info('getuserinfo finished.'),
                                                i.tryStartupTestReportServer(),
                                                Date.now(),
                                                S.default.initGameUserModel(t, c.default.isDebug(), function (e) {
                                                    e
                                                        ? I.default.Ins().init(function (e) {
                                                              if (!S.default.isCM() && !S.default.isWeb())
                                                                  for (var t = I.default.Ins().getBasicInfoBeans(), i = 0; i < t.length; ++i)
                                                                      if (t[i] && t[i].isNeedUpdate()) {
                                                                          !0;
                                                                          break;
                                                                      }
                                                              o();
                                                          })
                                                        : i.showLoadingFailed('gameUserLoginInfoFailed', '001', i.doInit.bind(i));
                                                });
                                        },
                                    });
                            }
                        }),
                        (e.prototype.tryStartupTestReportServer = function () {
                            '1' == n.default.read(a.default.CMG_USE_INOFC_DEBUG_SERVER, '0') && (T.Infoc.UseTestReportHost = !0);
                        }),
                        (e.prototype.initGlobalInfo = function () {
                            if ((p.default.register(h.default.LIFE_CYCLE_ON_SHOW, this.onShow, this), p.default.register(h.default.LIFE_CYCLE_ON_HIDE, this.onHide, this), C.default.begin(), null == r.G.Ap)) {
                                r.G.Ap = new o.default();
                                var e = function () {
                                    var e = r.G.Ap.config;
                                    (e.presentScale = cc.game.canvas.width / e.designWidth), (e.presentWidth = e.designWidth), (e.presentHeight = Math.floor(cc.game.canvas.height / e.presentScale)), (e.mBaseBlockWidth = e.presentWidth >>> 2), (e.mBaseBlockHeight = e.presentHeight >>> 2), (e.mBaseBlockWidthScale = 1), (e.mBaseBlockHeightScale = e.mBaseBlockHeight / e.designBlockHeight), this.updateMUIGlobal();
                                }.bind(this);
                                window.addEventListener('resize', function () {
                                    e();
                                }),
                                    e();
                            }
                            null == r.G.propAddition && (r.G.propAddition = new U.PropAddition()), (r.G.enterGameTime = new Date().getTime()), y.SUtil.ins().isLiuHai() ? r.G.Ap.skinMgr.setScreenType('s3') : y.SUtil.ins().isQuanMian() ? r.G.Ap.skinMgr.setScreenType('s2') : y.SUtil.ins().isPuTong() && r.G.Ap.skinMgr.setScreenType('s1');
                        }),
                        (e.prototype.doLoad = function () {
                            var e = this;
                            console.log('[loadingscene] doload'),
                                this.registLoadingEvent(),
                                R.default.Ins().needDownloadRes()
                                    ? (c.default.l('[LoadingScene] platform need download res'),
                                      this.adapterUI(),
                                      this.validateLocalRes(function () {
                                          d.SocialHelper.updateCache(), e.startup();
                                      }))
                                    : x.PreLoadAssets.preload(function () {
                                          d.SocialHelper.updateCache(), e.startup();
                                      }),
                                n.default.save(a.default.HAS_SCORLL_TO_TARGET_POSITION, 'false'),
                                n.default.save(a.default.HAS_SHOW_HOME_PAGE, 'false');
                        }),
                        (e.prototype.adapterUI = function () {
                            y.SUtil.ins().isLiuHai() ? (y.SUtil.ins().toBottomByPercent(this.downloadProgress, 20.9), y.SUtil.ins().toBottomByPercent(this.downloadPrgBar, 17.2), y.SUtil.ins().toBottomByPercent(this.downloadSprite, 17.1), y.SUtil.ins().toBottomByPercent(this.headPhoneSprite, 22.84), y.SUtil.ins().toBottomByPercent(this.headPhoneTips, 22.39), y.SUtil.ins().toBottomByPercent(this.staticTips, 8.8), this.setBg(0), (this.mRightNode.height = 127), y.SUtil.ins().toBottomByPercent(this.mRightNode, 0), y.SUtil.ins().toTop(this.mRightLine1, 1.2), y.SUtil.ins().toTop(this.mRightLine2, 3), y.SUtil.ins().toBottomByPercent(this.mRightLine1, 5.4), y.SUtil.ins().toBottomByPercent(this.mRightLine2, 3.6), y.SUtil.ins().toTopByPixel(this.version_label, 104)) : y.SUtil.ins().isQuanMian() ? (y.SUtil.ins().toBottomByPercent(this.downloadProgress, 19.6), y.SUtil.ins().toBottomByPercent(this.downloadPrgBar, 15.8), y.SUtil.ins().toBottomByPercent(this.downloadSprite, 15.4), y.SUtil.ins().toBottomByPercent(this.headPhoneSprite, 21.37), y.SUtil.ins().toBottomByPercent(this.headPhoneTips, 20.9), y.SUtil.ins().toBottomByPercent(this.staticTips, 6.5), (this.mRightNode.height = 83), y.SUtil.ins().toBottomByPercent(this.mRightNode, 0), y.SUtil.ins().toTop(this.mRightLine1, 1), y.SUtil.ins().toTop(this.mRightLine2, 3), y.SUtil.ins().toBottomByPercent(this.mRightLine1, 3), y.SUtil.ins().toBottomByPercent(this.mRightLine2, 1), y.SUtil.ins().toTopByPixel(this.version_label, 45), this.setBg(-40)) : y.SUtil.ins().isPuTong() && this.setBg(-140);
                        }),
                        (e.prototype.registLoadingEvent = function () {
                            p.default.register(h.default.LOADING_UI_NOTIFY, this.updateUI, this), p.default.register(h.default.LOADING_DOWNLOAD, this.onLoadingProgressChanged, this), p.default.register(h.default.LOADING_IMAGE, this.onLoadingProgressChanged, this), p.default.register(h.default.LOADING_DB, this.onLoadingProgressChanged, this);
                        }),
                        (e.prototype.removeLoadingNotifyEvent = function () {
                            p.default.remove(h.default.LOADING_DOWNLOAD, this.onLoadingProgressChanged, this), p.default.remove(h.default.LOADING_IMAGE, this.onLoadingProgressChanged, this), p.default.remove(h.default.LOADING_DB, this.onLoadingProgressChanged, this), p.default.remove(h.default.LOADING_UI_NOTIFY, this.updateUI, this);
                        }),
                        (e.prototype.validateLocalRes = function (t) {
                            var i = this;
                            this.resetDownloadProgress(), c.default.i('ResManager.gIns().init');
                            Date.now();
                            this.checkResFileIsExist(function (e) {
                                0 == e && I.default.Ins().clearLocalResInfo(),
                                    P.default.start(),
                                    I.default
                                        .Ins()
                                        .downloadBasicRes(I.default.Ins().getBasicInfoBeans())
                                        .then(
                                            function (e) {
                                                t && t();
                                            },
                                            function () {
                                                i.removeLoadingNotifyEvent(), i.showLoadingFailed('resDonwloadError', '100');
                                            },
                                        );
                            });
                        }),
                        (e.prototype.onShow = function () {}),
                        (e.prototype.onHide = function () {}),
                        (e.prototype.startup = function () {
                            return __awaiter(this, void 0, void 0, function () {
                                var t = this;
                                return __generator(this, function (e) {
                                    return (
                                        this.doWork(
                                            function () {
                                                Date.now();
                                                t.loadSkin(
                                                    function () {
                                                        t.reportPlayerData(), t.switchScene();
                                                    },
                                                    function () {
                                                        t.showLoadingFailed('loadSkinError', '300');
                                                    },
                                                );
                                            },
                                            function () {
                                                t.showLoadingFailed('doworkError', '200');
                                            },
                                        ),
                                        [2]
                                    );
                                });
                            });
                        }),
                        (e.prototype.doWork = function (n, a) {
                            return __awaiter(this, void 0, void 0, function () {
                                var t,
                                    i,
                                    o = this;
                                return __generator(this, function (e) {
                                    switch (e.label) {
                                        case 0:
                                            D.MGShareUtils.initShare(), m.default.getIntance().init(), (t = d.SocialHelper.getLaunchParameter()) && t.query && t.query.source ? console.log('doWork Launch Option  source 字段存在' + t.query.source) : console.log('doWork Launch Option  source 字段不存在'), O.QQReport.reportUnLockSong(0), (e.label = 1);
                                        case 1:
                                            return e.trys.push([1, 3, , 4]), Date.now(), [4, s.LoaderInit.initilize()];
                                        case 2:
                                            return e.sent(), [3, 4];
                                        case 3:
                                            return (i = e.sent()), c.default.e('[LoadingScene] LoaderInit.initilize error: ', i), a(), [2];
                                        case 4:
                                            return (
                                                Date.now(),
                                                B.default.Ins().loadAllDataAsync(function () {
                                                    return __awaiter(o, void 0, void 0, function () {
                                                        var t = this;
                                                        return __generator(this, function (e) {
                                                            return (
                                                                u.default.Ins().init(),
                                                                l.default.Ins().init(),
                                                                Date.now(),
                                                                u.default
                                                                    .Ins()
                                                                    .pullCloudInfo()
                                                                    .then(function () {
                                                                        t.afterLoadBasicData(n),
                                                                            setTimeout(function () {
                                                                                k.MGUser.uploadUserLevelInfo({
                                                                                    user_level: u.default.Ins().getUserLevel(),
                                                                                });
                                                                            });
                                                                    }),
                                                                [2]
                                                            );
                                                        });
                                                    });
                                                }),
                                                r.G.Ap.initlizeOnLoadFinish(),
                                                [2]
                                            );
                                    }
                                });
                            });
                        }),
                        (e.prototype.getPullCloudDataOpportunity = function () {
                            var i = this;
                            return new Promise(function (t, e) {
                                k.MGUser.getUserLoginInfo({
                                    complete: function (e) {
                                        e ? (e.isNewUser ? t(i.USER_NEW) : e.isNewUser || M.MemCache.Ins().hasLocalData() ? t(i.USER_DELAY_PULL_DATA) : t(i.USER_PULL_DATA_NOW)) : t(i.USER_ERROR);
                                    },
                                });
                            });
                        }),
                        (e.prototype.afterLoadBasicData = function (t) {
                            return __awaiter(this, void 0, void 0, function () {
                                return __generator(this, function (e) {
                                    return (S.default.isQQ() || S.default.isWeiXin()) && d.SocialHelper.refreshSelfRankData(), this.removeLoadingNotifyEvent(), r.G.Ap.initializeOnLoadDataFinish(), H.default.Ins().init(t), [2];
                                });
                            });
                        }),
                        (e.prototype.loadSkin = function (i, o) {
                            var n = this;
                            E.SkinMgr.Ins().checkCurrentSkinTimeLimit();
                            var a = v.SkinDataMgr.Ins().getCurSkinItemInfo();
                            c.default.i('loadSkin:', a),
                                v.SkinDataMgr.isSkinExist(a.name, function (e) {
                                    if (e) {
                                        if (v.SkinDataMgr.SKIN_DEFAULT == a.name)
                                            return void n.changeSkin(a, i, function () {
                                                n.loadDefaultSkin(i, o);
                                            });
                                        var t = I.default.Ins().getSkinBean(a.name);
                                        if (null == t) return void o();
                                        t.isNeedUpdate()
                                            ? (c.default.w('update skin start.', t),
                                              v.SkinDataMgr.downloadSkin(a.name, i, o).then(
                                                  function () {
                                                      c.default.w('update skin finish.', t),
                                                          n.changeSkin(a, i, function () {
                                                              n.loadDefaultSkin(i, o);
                                                          });
                                                  },
                                                  function () {
                                                      o();
                                                  },
                                              ))
                                            : n.changeSkin(a, i, function () {
                                                  n.loadDefaultSkin(i, o);
                                              });
                                    } else n.loadDefaultSkin(i, o);
                                });
                        }),
                        (e.prototype.changeSkin = function (e, t, i) {
                            v.SkinDataMgr.Ins().changeSkin(
                                e,
                                function (e) {
                                    0 == e ? t() : i();
                                },
                                function () {
                                    i();
                                },
                            );
                        }),
                        (e.prototype.loadDefaultSkin = function (e, t) {
                            this.changeSkin(v.SkinDataMgr.Ins().getDefaultSkinItem(), e, t);
                        }),
                        (e.prototype.switchScene = function () {
                            var e = d.SocialHelper.getLaunchParameter();
                            e && e.query && e.query.source ? console.log('switchScene Launch Option  source 字段存在' + e.query.source) : console.log('switchScene Launch Option  source 字段不存在'), g.default.shouldEnterGameSceneByHotSongShare(e) ? (g.default.getInstance().enterGameForHotSong(e), n.default.save(a.default.ENTER_GAME_BY_HOT_SONG_SHARE, 'true')) : (this.toSpcialPage(e), this.gotoMainPage());
                        }),
                        (e.prototype.toSpcialPage = function (e) {
                            e && e.query && e.query.src && e.query.src == d.SocialHelper.SHARE_TYPE_SHARE && e.query.source && (e.query.source == w.ShareHelper.SHARE_SOURCE_INVITE_SONG ? (b.default.DefaultPageIndex = b.default.GAME_ENTRA_SCENE_INDEX.TO_HOT_INDEX) : e.query.source == w.ShareHelper.SHARE_SOURCE_FIGHT_WIN && (b.default.DefaultPageIndex = b.default.GAME_ENTRA_SCENE_INDEX.TO_FIGHT_INDEX));
                        }),
                        (e.prototype.gotoMainPage = function () {
                            this.mGotoMainPageListener();
                        }),
                        (e.prototype.reportPlayerData = function () {
                            var e = u.default.Ins();
                            _.default.report(_.default.ENTER_GAME, 0, e.getUserLevel(), e.getUserCurrentExp(), e.getUserCoin(), e.getHP(), e.getUserDiamond(), e.getTotalCrown(), e.getTotalStar(), _.default.COLD_AWAKE, v.SkinDataMgr.Ins().getCurSkin(), v.SkinDataMgr.Ins().getUnLockSkinNum());
                        }),
                        (e.prototype.setGotoMainPageListener = function (e) {
                            this.mGotoMainPageListener = e;
                        }),
                        (e.prototype.preloadEnglishRes = function (e) {
                            if ('en' == window.i18n.curLang) {
                                cc.loader.loadResArray(['/static_res/share_gift_congratulation_title_en', '/static_res/share_gift_congratulation_title_en', '/static_res/btn_getreward_normal_en', '/static_res/btn_getreward_press_en', 'static_res/gameover/relive_by_video_with_dash_en', 'static_res/gameover/relive_by_video_with_sheild_en', 'static_res/gamestore_en', '/static_res/button_daily_checkin_award_normal_en', '/static_res/button_daily_checkin_award_pressed_en', '/static_res/share_gift_congratulation_title_en', 'static_res/gamestore_en', '/static_res/share_gift_congratulation_title_en', '/ui/skin_store_use_default_press_en', '/ui/skin_store_use_default_en', '/static_res/share_gift_congratulation_title_en', 'static_res/homepage/home_music_lib_icon_en', 'static_res/homepage/home_music_lib_icon_press_en', 'static_res/homepage/home_hot_music_icon_en', 'static_res/homepage/home_hot_music_icon_press_en', 'static_res/homepage/home_lottary_btn_en', 'static_res/homepage/home_lottary_btn_press_en', 'static_res/homepage/home_chosen_music_en', 'static_res/homepage/home_chosen_music_press_en', 'static_res/homepage/home_daily_btn_en', 'static_res/homepage/home_daily_btn_press_en', '/musiclist/new_music_corner_icon_en', '/static_res/share_gift_congratulation_title_en', 'gameImage/gameScene2_en', 'static_res/gamestore_en'], function () {
                                    e && e();
                                });
                            } else e && e();
                        }),
                        __decorate([Y(cc.Label)], e.prototype, 'downloadProgress', void 0),
                        __decorate([Y(cc.ProgressBar)], e.prototype, 'downloadPrgBar', void 0),
                        __decorate([Y(cc.Sprite)], e.prototype, 'downloadSprite', void 0),
                        __decorate([Y(cc.Sprite)], e.prototype, 'headPhoneSprite', void 0),
                        __decorate([Y(cc.Label)], e.prototype, 'headPhoneTips', void 0),
                        __decorate([Y(cc.Label)], e.prototype, 'staticTips', void 0),
                        __decorate([Y(cc.Layout)], e.prototype, 'downloadFailedMaskLayout', void 0),
                        __decorate([Y(cc.Node)], e.prototype, 'mRightNode', void 0),
                        __decorate([Y(cc.Node)], e.prototype, 'mRightLine1', void 0),
                        __decorate([Y(cc.Node)], e.prototype, 'mRightLine2', void 0),
                        __decorate([Y(cc.Label)], e.prototype, 'version_label', void 0),
                        __decorate([Y(cc.Label)], e.prototype, 'gd_label', void 0),
                        (e = __decorate([W], e))
                    );
                })(cc.Component);
                (i.default = Q), cc._RF.pop();
            },
            {
                '../../../../../node_modules/promise': 1,
                '../../../../modules/MGAppShare/scripts/MGShareUtil': 'MGShareUtil',
                '../../../../modules/MGAppShare/scripts/ShareHelper': 'ShareHelper',
                '../../../../modules/MGBasic/scripts/LocalStorageHelplerWeb': 'LocalStorageHelplerWeb',
                '../../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../../LogicPlatform/PlatformProxy': 'PlatformProxy',
                '../../../base/CrashMonitor': 'CrashMonitor',
                '../../../base/G': 'G',
                '../../../base/GameApp': 'GameApp',
                '../../../base/GameInfoMgr': 'GameInfoMgr',
                '../../../base/Lifecycle': 'Lifecycle',
                '../../../base/Log': 'Log',
                '../../../business/Logic/I18nManager': 'I18nManager',
                '../../../config/LSKey': 'LSKey',
                '../../../gamescene/MUI/MUIDefines': 'MUIDefines',
                '../../../gamescene/element/loader/LoaderInit': 'LoaderInit',
                '../../../infoc/Infoc': 'Infoc',
                '../../../infoc/m_p2_DL': 'm_p2_DL',
                '../../../infoc/m_p2_PData': 'm_p2_PData',
                '../../../social/SocialHelper': 'SocialHelper',
                '../../../social/SocialManager': 'SocialManager',
                '../../../upgrade/ResMgr': 'ResMgr',
                '../../../util/PU': 'PU',
                '../../../util/QQReport': 'QQReport',
                '../../../util/SUtil': 'SUtil',
                '../../DB/DBMgr': 'DBMgr',
                '../../Logic/EventBus': 'EventBus',
                '../../Logic/NotifyEvent': 'NotifyEvent',
                '../../Logic/PlayerMgr': 'PlayerMgr',
                '../../Logic/Plugin/PluginMgr': 'PluginMgr',
                '../../Logic/SkinDataManager': 'SkinDataManager',
                '../../Network/Protocol/MemCache': 'MemCache',
                '../../Network/Protocol/StorageUtil': 'StorageUtil',
                '../../skin/SkinManager': 'SkinManager',
                '../HotmusicActivityMgr': 'HotmusicActivityMgr',
                '../UserInfoBtnManager': 'UserInfoBtnManager',
                './../../propAddition/Define': 'Define',
                './GameEntranceScene': 'GameEntranceScene',
                './LoadingFailedPrefab': 'LoadingFailedPrefab',
                './PreLoadAssets': 'PreLoadAssets',
                './PrefabMgr': 'PrefabMgr',
            },
        ],
        LoadingTimecost: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '413ceOUNY9CZZgKaUnJhgAq', 'LoadingTimecost'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../base/Log'),
                    n = (function () {
                        function i() {}
                        return (
                            (i.start = function () {
                                o.default.isDebug() && ((i.startTime = Date.now()), (i.lastTime = i.startTime), (i.content = '[LoadingTimecost] '));
                            }),
                            (i.mark = function (e) {
                                if (o.default.isDebug()) {
                                    var t = Date.now();
                                    (i.content += e + ' ' + (t - i.lastTime) + 'ms,\n'), (i.lastTime = t);
                                }
                            }),
                            (i.end = function () {
                                if (o.default.isDebug()) {
                                    var e = Date.now();
                                    (i.content += 'total_timecost: ' + (e - i.startTime) + 'ms'), console.warn(i.content);
                                }
                            }),
                            (i.content = ''),
                            i
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../base/Log': 'Log',
            },
        ],
        LocalStorageHelplerWeb: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '66a89OFDOVHlLyjpwT14Iqc', 'LocalStorageHelplerWeb'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function n() {}
                    return (
                        (n.init = function (e) {
                            n.mGameid = e;
                        }),
                        (n.setItem = function (e, t) {
                            var i = n.mGameid + '_' + e;
                            return cc.sys.localStorage.setItem(i, t), !0;
                        }),
                        (n.getItem = function (e) {
                            var t = n.mGameid + '_' + e,
                                i = cc.sys.localStorage.getItem(t);
                            if (null != i && null != i) return i;
                            var o = cc.sys.localStorage.getItem(e);
                            return null != o && null != o && n.setItem(e, o), o;
                        }),
                        (n.removeItem = function (e) {
                            var t = n.mGameid + '_' + e;
                            return cc.sys.localStorage.removeItem(t), !0;
                        }),
                        (n.mGameid = '0'),
                        n
                    );
                })();
                (i.LocalStorageHelperWeb = o), cc._RF.pop();
            },
            {},
        ],
        LocalizedLabel: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '744dcs4DCdNprNhG0xwq6FK', 'LocalizedLabel');
                var o = e('LanguageData');
                cc.Class({
                    extends: cc.Component,
                    editor: {
                        executeInEditMode: !0,
                        menu: 'i18n/LocalizedLabel',
                    },
                    properties: {
                        dataID: {
                            get: function () {
                                return this._dataID;
                            },
                            set: function (e) {
                                this._dataID !== e && ((this._dataID = e), this.updateLabel());
                            },
                        },
                        _dataID: '',
                    },
                    onLoad: function () {
                        o.inst || o.init(), this.fetchRender();
                    },
                    fetchRender: function () {
                        var e = this.getComponent(cc.Label);
                        if (e) return (this.label = e), void this.updateLabel();
                    },
                    updateLabel: function () {
                        this.label ? o.t(this.dataID) && (this.label.string = o.t(this.dataID)) : cc.error('Failed to update localized label, label component is invalid!');
                    },
                }),
                    cc._RF.pop();
            },
            {
                LanguageData: 'LanguageData',
            },
        ],
        LocalizedSprite: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'f34ac2GGiVOBbG6XlfvgYP4', 'LocalizedSprite');
                var o = e('SpriteFrameSet');
                cc.Class({
                    extends: cc.Component,
                    editor: {
                        executeInEditMode: !0,
                        inspector: 'packages://i18n/inspector/localized-sprite.js',
                        menu: 'i18n/LocalizedSprite',
                    },
                    properties: {
                        spriteFrameSet: {
                            default: [],
                            type: o,
                        },
                    },
                    onLoad: function () {
                        this.fetchRender();
                    },
                    fetchRender: function () {
                        var e = this.getComponent(cc.Sprite);
                        if (e) return (this.sprite = e), void this.updateSprite(window.i18n.curLang);
                    },
                    getSpriteFrameByLang: function (e) {
                        for (var t = 0; t < this.spriteFrameSet.length; ++t) if (this.spriteFrameSet[t].language === e) return this.spriteFrameSet[t].spriteFrame;
                    },
                    updateSprite: function (e) {
                        if (this.sprite) {
                            var t = this.getSpriteFrameByLang(e);
                            !t && this.spriteFrameSet[0] && (t = this.spriteFrameSet[0].spriteFrame), (this.sprite.spriteFrame = t);
                        } else cc.error('Failed to update localized sprite, sprite component is invalid!');
                    },
                }),
                    cc._RF.pop();
            },
            {
                SpriteFrameSet: 'SpriteFrameSet',
            },
        ],
        Log4JS: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '1dfa3KcUYxBP5itOtSWAX7Y', 'Log4JS'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./LRUCache'),
                    a = e('../util/StringUtil'),
                    n = (function () {
                        function n() {}
                        return (
                            (n.appendLog4JS = function (e, t) {
                                void 0 === t && (t = 'loading'), n.mCache || (n.mCache = o.default.Ins('log.txt')).remove(t);
                                var i = n.mCache.read(t);
                                a.StringUtil.isEmpty(i) ? (i = e) : (i += '\r\n' + e),
                                    n.mCache.batchSaveStart(),
                                    n.mCache.save(t, i),
                                    setTimeout(function () {
                                        n.mCache.batchSaveEnd();
                                    }, 1e3);
                            }),
                            (n.l = function (e) {
                                for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
                                n.appendLog4JS(n.getSingleStr.apply(n, [e].concat(t)));
                            }),
                            (n.getSingleStr = function (e) {
                                for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
                                a.StringUtil.isNullOrUndefined(e) && (e = '');
                                var o = n.getPrefix();
                                return (o += 'string' == typeof e ? e : n.toJsonString(e)), t && 0 < t.length && (o += '   【' + n.toJsonString(t) + '】'), o;
                            }),
                            (n.toJsonString = function (e) {
                                if (null == e || null == e) return '';
                                try {
                                    return JSON.stringify(e);
                                } catch (e) {
                                    return '';
                                }
                            }),
                            (n.formatDateTime = function () {
                                var e = new Date(),
                                    t = e.getHours().toString(),
                                    i = e.getMinutes().toString(),
                                    o = e.getSeconds().toString(),
                                    n = e.getMilliseconds().toString();
                                if ((i.length < 2 && (i = '0' + i), o.length < 2 && (o = '0' + o), n.length < 3)) for (var a = 0; a < 3 - n.length; a++) n = '0' + n;
                                return t + ':' + i + ':' + o + ' ' + n;
                            }),
                            (n.getPrefix = function () {
                                return this.formatDateTime() + '  =>  ';
                            }),
                            n
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../util/StringUtil': 'StringUtil',
                './LRUCache': 'LRUCache',
            },
        ],
        LoginRewardManager: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '6130b/zcsRIqII1QWz3wGOm', 'LoginRewardManager'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var r = e('../DB/DBMgr'),
                    o = (function () {
                        function e() {}
                        return (
                            (e.Ins = function () {
                                return e.mInstance || (e.mInstance = new e()), e.mInstance;
                            }),
                            (e.prototype.getLoginRewardVM = function (e) {
                                for (var t = [], i = 0, o = r.default.Ins().getDBRows(r.eDataBase.eDB_LoginReward, e + ''); i < o.length; i++) {
                                    var n = o[i],
                                        a = new s();
                                    (a.id = n.getId()), (a.logOnDays = n.getLogOnDays()), (a.newComing = n.getNewComing()), (a.skinPiece = n.getSkinPiece()), (a.diamonds = n.getDiamonds()), (a.skins = n.getSkins()), t.push(a);
                                }
                                return Object.seal(t);
                            }),
                            e
                        );
                    })();
                i.LoginRewardMgr = o;
                var s = function () {};
                (i.LoginRewardVM = s), cc._RF.pop();
            },
            {
                '../DB/DBMgr': 'DBMgr',
            },
        ],
        LoginReward: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '58c9cxmadBLIoVn4H68M3gH', 'LoginReward'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.findLoginRewardById = function (e) {
                                return this.find('id', e);
                            }),
                            (t.prototype.findLoginRewardsByNewCome = function (e) {
                                var t = this.csvGetRows('new_coming', e),
                                    i = [];
                                if (t && 0 < t.length)
                                    for (var o = 0, n = t; o < n.length; o++) {
                                        var a = n[o],
                                            r = new s();
                                        (r.mRowData = a), (r.mCsvFile = this), i.push(r);
                                    }
                                return Object.seal(i);
                            }),
                            (t.prototype.getAllLoginReward = function () {
                                return Object.seal(this.getAllDB());
                            }),
                            (t.prototype.getRow = function () {
                                return new s();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.LoginReward = n;
                var s = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getId = function () {
                            return this.getInt('id');
                        }),
                        (t.prototype.setId = function (e) {
                            this.setInt('id', e);
                        }),
                        (t.prototype.getLogOnDays = function () {
                            return this.getInt('log_on_days');
                        }),
                        (t.prototype.setLogOnDays = function (e) {
                            this.setInt('log_on_days', e);
                        }),
                        (t.prototype.getNewComing = function () {
                            return this.getInt('new_coming');
                        }),
                        (t.prototype.setNewComing = function (e) {
                            this.setInt('new_coming', e);
                        }),
                        (t.prototype.getSkinPiece = function () {
                            return this.getString('skin_piece');
                        }),
                        (t.prototype.setSkinPiece = function (e) {
                            this.setString('skin_piece', e);
                        }),
                        (t.prototype.getDiamonds = function () {
                            return this.getInt('diamonds');
                        }),
                        (t.prototype.setDiamonds = function (e) {
                            this.setInt('diamonds', e);
                        }),
                        (t.prototype.getSkins = function () {
                            return this.getInt('skins');
                        }),
                        (t.prototype.setSkins = function (e) {
                            this.setInt('skins', e);
                        }),
                        t
                    );
                })(o.default);
                (i.LoginRewardRow = s), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        Log: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'a53cdRZS/JLlY/mC9shG1Ex', 'Log'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('../util/PU'),
                    a = e('../../modules/MGUtils/MGLog'),
                    o = (function () {
                        function o() {}
                        return (
                            (o.init = function (e) {
                                (o.sIsDebug = !1), a.default.init(o.sIsDebug);
                            }),
                            (o.isDebug = function () {
                                return o.sIsDebug;
                            }),
                            (o.getPrefix = function () {
                                return a.default.getPrefix();
                            }),
                            (o.l = function (e) {
                                for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
                                o.isDebug() && (n.default.isQQ() || n.default.isCM() ? console.log(o.getPrefix() + ' msg: ' + e + ' subst: ' + this.toJsonString(t)) : console.log(o.getPrefix(), e, t));
                            }),
                            (o.w = function (e) {
                                for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
                                n.default.isQQ() || n.default.isCM() ? console.warn(o.getPrefix() + ' msg: ' + e + ' subst: ' + this.toJsonString(t)) : console.warn(o.getPrefix(), e, t);
                            }),
                            (o.e = function (e) {
                                for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
                                n.default.isQQ() || n.default.isCM() ? console.error(o.getPrefix() + ' msg: ' + e + ' subst: ' + this.toJsonString(t)) : console.error(o.getPrefix(), e, t);
                            }),
                            (o.i = function (e) {
                                for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
                                o.isDebug() && (n.default.isQQ() || n.default.isCM() ? console.info(o.getPrefix() + ' msg: ' + e + ' subst: ' + this.toJsonString(t)) : console.info(o.getPrefix(), e, t));
                            }),
                            (o.toJsonString = function (e) {
                                if (null == e || null == e) return '';
                                try {
                                    return JSON.stringify(e);
                                } catch (e) {
                                    return '';
                                }
                            }),
                            (o.GAME_ID_RELEASE_VERSION_WX = 1001),
                            (o.GAME_ID_RELEASE_VERSION_QQ = 2001),
                            o
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../../modules/MGUtils/MGLog': 'MGLog',
                '../util/PU': 'PU',
            },
        ],
        LongBlockAnimation: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'e732c3elSZFoYT4ypMv2ZsF', 'LongBlockAnimation'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('../../GameBus'),
                    r = e('../../animation/action/MFadeTo'),
                    s = e('../../animation/action/MSequence'),
                    c = e('../../animation/action/MScaleTo'),
                    l = e('../../animation/action/MSpawn'),
                    n = e('../../animation/action/MDelay'),
                    u = e('../../animation/action/MMoveTo'),
                    d = e('../../animation/action/MCallFunc'),
                    p = e('../../animation/action/MResizeTo'),
                    h = e('../../../base/G'),
                    f = (function () {
                        function e(e, t) {
                            (this.mDotAnimLayer = null), (this.mDotLightRootLayer = null), (this.mCircleNode = null), (this.mDotNode = null), (this.mSpeed = 0), (this.mNormalScale = 0), (this.mMaxCircleScale = 0), (this.mDotAnimOffset = 0), (this.mCircleAction = null), (this.mDotAction = null), (this.mDotAnimLayer = e), (this.mDotLightRootLayer = t), this.mDotAnimLayer && ((this.mDotNode = this.mDotAnimLayer.getChildByTag(o.TAG_NODE_ANIM_DOT)), (this.mCircleNode = this.mDotAnimLayer.getChildByTag(o.TAG_NODE_ANIM_CIRCLE)), (this.mDotAnimOffset = (this.mCircleNode.getHeight() * this.mCircleNode.getScale()) / 2), (this.mNormalScale = this.mCircleNode.getScale()), (this.mMaxCircleScale = 1.3 * this.mNormalScale));
                        }
                        return (
                            (e.prototype.setSpeed = function (e) {
                                this.mSpeed = e;
                            }),
                            (e.prototype.reset = function () {
                                this.mSpeed = 0;
                            }),
                            (e.prototype.hideAnimation = function () {
                                null != this.mDotNode && this.mDotNode.setOpacity(0), null != this.mCircleNode && this.mCircleNode.setOpacity(0);
                            }),
                            (e.prototype.showAnimation = function (e, t, i) {
                                if (h.G.Ap.config.longBlockDotPosShow) {
                                    var o = this.mDotLightRootLayer.getChildByTag(i);
                                    null != o && o.setVisible(!1);
                                }
                                if (h.G.Ap.config.longBlockDotAnimEnable) {
                                    var n = t - e;
                                    if (n <= 0) return;
                                    var a = n / this.mSpeed;
                                    a < 0.1 ? (a = 0.2) : 1 < a && (a = 0.5), this.mDotAnimLayer.setPositionY(e), this.startCircleAnimation(a), this.startDotAnimation(a);
                                }
                            }),
                            (e.prototype.startCircleAnimation = function (e) {
                                if ((this.mCircleNode.setOpacity(0), this.mCircleNode.setScale(this.mNormalScale), !this.mCircleAction)) {
                                    var t = e / 3,
                                        i = e - t,
                                        o = new s.default(new r.default(1, t), new r.default(0, i)),
                                        n = new c.default(this.mMaxCircleScale, this.mMaxCircleScale, t + i);
                                    this.mCircleAction = new l.default(n, o);
                                }
                                a.default.getInstance().animationMgr.runAction(this.mCircleNode, this.mCircleAction);
                            }),
                            (e.prototype.startDotAnimation = function (e) {
                                if ((this.mDotNode.setOpacity(1), this.mDotNode.setScale(this.mNormalScale), !this.mDotAction)) {
                                    var t = e / 3,
                                        i = e - t,
                                        o = new l.default(new c.default(0, 0, i), new r.default(0, i));
                                    this.mDotAction = new s.default(new n.default(t), o);
                                }
                                a.default.getInstance().animationMgr.runAction(this.mDotNode, this.mDotAction);
                            }),
                            (e.prototype.stopAnimation = function () {}),
                            e
                        );
                    })(),
                    m = (function () {
                        function e(e, t) {
                            (this.mLightLayer = null), (this.mNumberText = null), (this.mNormalTextScale = 0), (this.mMaxTextScale = 0), (this.mAction = null), (this.mLightAlpha = null), (this.mLightLayer = e), (this.mNumberText = t), (this.mNormalTextScale = t.getScale()), (this.mMaxTextScale = 1.08 * this.mNormalTextScale);
                        }
                        return (
                            (e.prototype.showAnimation = function (e) {
                                this.showLightHideAnimation(e), this.showScoreAnimation(e);
                            }),
                            (e.prototype.showLightHideAnimation = function (e) {
                                this.mLightAlpha || (this.mLightAlpha = new r.default(0, 0.3)), a.default.getInstance().animationMgr.runAction(this.mLightLayer, this.mLightAlpha);
                            }),
                            (e.prototype.showScoreAnimation = function (e) {
                                if ((this.mNumberText.setPosition(0, e.rect.height + 23), this.mNumberText.setNumberValue(e.attainScore), this.mNumberText.setVisible(!0), this.mNumberText.setOpacity(1), this.mNumberText.setScale(this.mNormalTextScale), !this.mAction)) {
                                    var t = new r.default(0, 0.5),
                                        i = new s.default(new c.default(this.mMaxTextScale, this.mMaxTextScale, 0.25), new c.default(this.mNormalTextScale, this.mNormalTextScale, 0.25));
                                    this.mAction = new l.default(t, i);
                                }
                                a.default.getInstance().animationMgr.runAction(this.mNumberText, this.mAction);
                            }),
                            e
                        );
                    })(),
                    o = (function () {
                        function o(e) {
                            (this.mState = o.STATE_NORMAL), (this.mBlock = null), (this.mTailLayer = null), (this.mHeadLayer = null), (this.mLightLayer = null), (this.mLightTopLayer = null), (this.mScoreLayer = null), (this.mDotAnimLayer = null), (this.mDotLightRootLayer = null), (this.mDotPosArray = null), (this.mHasDots = !1), (this.mLastTouchMove = 0), (this.mRootNode = null), (this.mLightTopOffset = 0), (this.mCircleDotAnimation = null), (this.mFinishAnimation = null), (this.mBlock = e);
                        }
                        return (
                            (o.prototype.onLayerCreated = function (e, t) {
                                (this.mRootNode = e), (this.mLightTopOffset = t), (h.G.Ap.config.longBlockDotAnimEnable || h.G.Ap.config.longBlockDotPosShow) && (this.mCircleDotAnimation = new f(this.mDotAnimLayer, this.mDotLightRootLayer)), (this.mFinishAnimation = new m(this.mLightLayer, this.mScoreLayer)), this.updateBlockState(o.STATE_NORMAL);
                            }),
                            (o.prototype.reuse = function (e) {
                                (this.mBlock = e), (this.mLastTouchMove = 0), this.mLightLayer.setOpacity(1), h.G.Ap.config.longBlockChangeLength && this.mTailLayer.setPosition(0, 0), (h.G.Ap.config.longBlockDotAnimEnable || h.G.Ap.config.longBlockDotPosShow) && this.mCircleDotAnimation.reset(), this.updateBlockState(o.STATE_NORMAL);
                            }),
                            (o.prototype.updateBlockState = function (e) {
                                switch ((this.mState = e)) {
                                    case o.STATE_NORMAL:
                                        this.mTailLayer.setVisible(!0), this.mHeadLayer.setVisible(!0), this.mLightLayer.setVisible(!1), this.mLightTopLayer.setVisible(!1), this.mScoreLayer.setVisible(!1), h.G.Ap.config.longBlockDotAnimEnable && this.mDotAnimLayer.setVisible(!1), h.G.Ap.config.longBlockDotPosShow && this.mDotLightRootLayer.setVisible(!1);
                                        break;
                                    case o.STATE_ROLLING:
                                        this.mTailLayer.setVisible(!0), this.mHeadLayer.setVisible(!1), this.mLightLayer.setVisible(!0), this.mLightTopLayer.setVisible(!0), this.mScoreLayer.setVisible(!1), h.G.Ap.config.longBlockDotAnimEnable && this.mDotAnimLayer.setVisible(!0), h.G.Ap.config.longBlockDotPosShow && this.mDotLightRootLayer.setVisible(!0);
                                        break;
                                    case o.STATE_FINISH:
                                        this.mTailLayer.setVisible(!1), this.mHeadLayer.setVisible(!1), this.mLightLayer.setVisible(!0), this.mLightTopLayer.setVisible(!1), this.mScoreLayer.setVisible(!0), h.G.Ap.config.longBlockDotAnimEnable && this.mDotAnimLayer.setVisible(!0), h.G.Ap.config.longBlockDotPosShow && this.mDotLightRootLayer.setVisible(!1);
                                        break;
                                    case o.STATE_PAUSE:
                                        this.mTailLayer.setVisible(!0), this.mHeadLayer.setVisible(!0), this.mLightLayer.setVisible(!1), this.mLightTopLayer.setVisible(!1), this.mScoreLayer.setVisible(!1), h.G.Ap.config.longBlockDotAnimEnable && this.mDotAnimLayer.setVisible(!1), h.G.Ap.config.longBlockDotPosShow && this.mDotLightRootLayer.setVisible(!1);
                                }
                            }),
                            (o.prototype.update = function (e) {
                                if (null != this.mBlock && this.mState == o.STATE_ROLLING) {
                                    h.G.Ap.config.longBlockDotAnimEnable && this.mCircleDotAnimation.setSpeed(e);
                                    var t = this.mBlock.touchMove,
                                        i = this.mBlock.rect.height - this.mLightTopOffset;
                                    this.mLastTouchMove != t && (i <= t ? this.moveFinish() : this.moveBlockLight(), (this.mLastTouchMove = t));
                                }
                            }),
                            (o.prototype.updateTouchState = function (e) {
                                e ? this.updateBlockState(o.STATE_ROLLING) : this.checkFinishAndMoveLightHead();
                            }),
                            (o.prototype.moveFinish = function () {
                                0 !== this.mRootNode.getOpacity() && (h.G.Ap.config.longBlockChangeLength && this.mTailLayer.setContentSize(this.mBlock.rect.width, this.mBlock.rect.height), this.mLightLayer.setContentSize(this.mBlock.rect.width, this.mBlock.rect.height), this.updateBlockState(o.STATE_FINISH), this.mFinishAnimation.showAnimation(this.mBlock));
                            }),
                            (o.prototype.moveBlockLight = function () {
                                this.mLightLayer.setContentSize(this.mBlock.rect.width, this.mBlock.touchMove + this.mLightTopOffset), h.G.Ap.config.longBlockChangeLength && this.mTailLayer.setContentSize(this.mBlock.rect.width, this.mBlock.rect.height - this.mBlock.touchMove);
                                var e = this.mBlock.touchMove + this.mLightTopOffset;
                                e < this.mBlock.rect.height + 20 && (this.mLightTopLayer.setPositionY(this.mBlock.touchMove), h.G.Ap.config.longBlockChangeLength && this.mTailLayer.setPositionY(this.mBlock.touchMove), h.G.Ap.config.longBlockDotAnimEnable && this.mDotAnimLayer.setPositionY(e)), this.showCircleDotAnimation(e);
                            }),
                            (o.prototype.showCircleDotAnimation = function (e) {
                                if (h.G.Ap.config.longBlockDotAnimEnable || h.G.Ap.config.longBlockDotPosShow)
                                    if (this.mHasDots)
                                        for (var t = 0; t < this.mDotPosArray.length; t++) {
                                            var i = this.mDotPosArray[t];
                                            if (i <= e) {
                                                var o = -1;
                                                (o = t + 1 < this.mDotPosArray.length ? this.mDotPosArray[t + 1] : this.mBlock.rect.height), this.mCircleDotAnimation.showAnimation(i, o, i), this.mDotPosArray.splice(t, 1);
                                                break;
                                            }
                                        }
                                    else this.mCircleDotAnimation.hideAnimation();
                            }),
                            (o.prototype.checkFinishAndMoveLightHead = function () {
                                var t = this,
                                    e = this.mBlock.rect.height - this.mLightTopOffset;
                                if (this.mBlock.touchMove > e - 50 && this.mBlock.touchMove < e) {
                                    var i = new p.default(this.mBlock.rect.width, this.mBlock.rect.height, 0.2);
                                    a.default.getInstance().animationMgr.runAction(this.mLightLayer, i);
                                    var o = new u.default(0, e, 0.2),
                                        n = new s.default(
                                            o,
                                            new d.default(function (e) {
                                                t.moveFinish();
                                            }),
                                        );
                                    a.default.getInstance().animationMgr.runAction(this.mLightTopLayer, n), this.checkRestDots();
                                } else (h.G.Ap.config.longBlockDotAnimEnable || h.G.Ap.config.longBlockDotPosShow) && this.mCircleDotAnimation.stopAnimation();
                            }),
                            (o.prototype.checkRestDots = function () {
                                if ((h.G.Ap.config.longBlockDotAnimEnable || h.G.Ap.config.longBlockDotPosShow) && 0 < this.mDotPosArray.length) {
                                    var e = this.mDotPosArray[0];
                                    this.mCircleDotAnimation.showAnimation(e, this.mBlock.rect.height, e), (this.mDotPosArray = []);
                                }
                            }),
                            (o.prototype.updatePauseState = function (e) {
                                e && this.updateBlockState(o.STATE_PAUSE);
                            }),
                            (o.prototype.setTailLayer = function (e) {
                                this.mTailLayer = e;
                            }),
                            (o.prototype.getTailLayer = function () {
                                return this.mTailLayer;
                            }),
                            (o.prototype.setHeadLayer = function (e) {
                                this.mHeadLayer = e;
                            }),
                            (o.prototype.setLightLayer = function (e) {
                                this.mLightLayer = e;
                            }),
                            (o.prototype.getLightLayer = function () {
                                return this.mLightLayer;
                            }),
                            (o.prototype.setLightTopLayer = function (e) {
                                this.mLightTopLayer = e;
                            }),
                            (o.prototype.getLightTopLayer = function () {
                                return this.mLightTopLayer;
                            }),
                            (o.prototype.setDotLightLayer = function (e, t) {
                                (this.mDotLightRootLayer = e), (this.mDotPosArray = t), this.mDotPosArray && 0 < this.mDotPosArray.length ? (this.mHasDots = !0) : (this.mHasDots = !1);
                            }),
                            (o.prototype.getDotLightLayer = function () {
                                return this.mDotLightRootLayer;
                            }),
                            (o.prototype.setDotAnimLayer = function (e) {
                                this.mDotAnimLayer = e;
                            }),
                            (o.prototype.getDotAnimLayer = function () {
                                return this.mDotAnimLayer;
                            }),
                            (o.prototype.setScoreLayer = function (e) {
                                this.mScoreLayer = e;
                            }),
                            (o.TAG_NODE_ANIM_CIRCLE = 10086),
                            (o.TAG_NODE_ANIM_DOT = 10010),
                            (o.STATE_NORMAL = 0),
                            (o.STATE_ROLLING = 1),
                            (o.STATE_FINISH = 2),
                            (o.STATE_PAUSE = 3),
                            o
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../../../base/G': 'G',
                '../../GameBus': 'GameBus',
                '../../animation/action/MCallFunc': 'MCallFunc',
                '../../animation/action/MDelay': 'MDelay',
                '../../animation/action/MFadeTo': 'MFadeTo',
                '../../animation/action/MMoveTo': 'MMoveTo',
                '../../animation/action/MResizeTo': 'MResizeTo',
                '../../animation/action/MScaleTo': 'MScaleTo',
                '../../animation/action/MSequence': 'MSequence',
                '../../animation/action/MSpawn': 'MSpawn',
            },
        ],
        LongBlockNode: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '1d197I5y0tKMJPu46NBnlfp', 'LongBlockNode'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var v = e('../loader/GameSceneFrameLoader'),
                    I = e('../loader/BlockSkinFrameLoader'),
                    o = e('./BlockNode'),
                    T = e('../anim/LongBlockAnimation'),
                    C = e('../../../base/G'),
                    E = e('./ReuseNodePool'),
                    d = e('./ReuseNode'),
                    A = e('../../MUI/MUISprite'),
                    P = e('../../MUI/MUINode'),
                    k = e('../component/MUINumber'),
                    M = e('../loader/NumberFrameLoader'),
                    L = e('../../MUI/MUINineScaleSprite'),
                    b = e('../../../util/Utility'),
                    n = (function (y) {
                        function S() {
                            return (null !== y && y.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(S, y),
                            (S.getBlockHeightScale = function () {
                                return 0 == S.sBlockScale && (S.sBlockScale = C.G.Ap.config.getBlockHeight() / C.G.Ap.config.getDesignBlockHeight()), S.sBlockScale;
                            }),
                            (S.prototype.unuse = function () {
                                if ((y.prototype.unuse.call(this), C.G.Ap.config.longBlockDotPosShow))
                                    for (var e = 0, t = this.mLongBlockAnimation.getDotLightLayer().getAllChildren(); e < t.length; e++) {
                                        var i = t[e];
                                        i.setTag(0), this.mDotNodeCache.put(i);
                                    }
                            }),
                            (S.prototype.reuse = function (e) {
                                if ((y.prototype.reuse.call(this, e), this.updatePauseState(!1), this.mLongBlockAnimation.reuse(this.mBlock), this.mLongBlockAnimation.getTailLayer().setContentSize(this.mBlock.rect.width, this.mBlock.rect.height), C.G.Ap.config.longBlockDotAnimEnable)) {
                                    var t = this.mLongBlockAnimation.getDotAnimLayer();
                                    t.setPositionY(0), t.setVisible(!1);
                                }
                                if (C.G.Ap.config.longBlockDotPosShow) {
                                    var i = this.mLongBlockAnimation.getLightTopLayer(),
                                        o = i.getWidth() / i.imageItem.rect.width,
                                        n = this.mLongBlockAnimation.getDotLightLayer(),
                                        a = this.addDotNodes(n, o, i.getHeight());
                                    this.mLongBlockAnimation.setDotLightLayer(n, a);
                                }
                            }),
                            (S.prototype.updateLayers = function (e) {
                                this.mLongBlockAnimation.update(e);
                            }),
                            (S.prototype.createLayers = function () {
                                y.prototype.createLayers.call(this), (this.mLongBlockAnimation = new T.default(this.mBlock)), (this.mDotNodeCache = new E.default());
                                var e = I.default.getInstance().getLongBlockTail(),
                                    t = new L.default();
                                t.setContentSize(this.mBlock.rect.width, this.mBlock.rect.height), (t.imageItem = e), (t.imageData = I.default.getInstance().getAtlas());
                                var i = e.isScale9Grid ? e.scale9Grid : new b.Utility.Rect(0, 60, 0, 0);
                                t.setInset(i.x, i.y, i.width, i.height), t.setVisible(!1), this.addChild(t), this.mLongBlockAnimation.setTailLayer(t);
                                var o = I.default.getInstance().getLongBlockHead(),
                                    n = new A.default();
                                n.setContentSize(this.mBlock.rect.width, (o.rect.height * this.mBlock.rect.width) / o.rect.width), (n.imageItem = o), (n.imageData = I.default.getInstance().getAtlas()), n.setVisible(!1), this.addChild(n), this.mLongBlockAnimation.setHeadLayer(n);
                                var a = I.default.getInstance().getLongBlockLightTop(),
                                    r = new L.default();
                                r.setContentSize(this.mBlock.rect.width, this.mBlock.rect.height), (r.imageItem = a), (r.imageData = I.default.getInstance().getAtlas());
                                var s = a.isScale9Grid ? a.scale9Grid : new b.Utility.Rect(0, 100, 0, 0);
                                r.setInset(s.x, s.y, s.width, s.height), r.setVisible(!1), this.addChild(r), this.mLongBlockAnimation.setLightLayer(r);
                                var c = I.default.getInstance().getLongBlockLightTop(),
                                    l = new A.default();
                                if ((l.setContentSize(this.mBlock.rect.width, c.rect.height * S.getBlockHeightScale()), (l.imageItem = c), (l.imageData = I.default.getInstance().getAtlas()), l.setOpacity(0), l.setVisible(!1), this.mLongBlockAnimation.setLightTopLayer(l), C.G.Ap.config.longBlockDotAnimEnable)) {
                                    var u = new P.default();
                                    u.setPositionX(this.mBlock.rect.width / 2);
                                    var d = l.getWidth() / l.imageItem.rect.width,
                                        p = v.default.getInstance().getCircleLight(),
                                        h = new A.default();
                                    (h.imageData = v.default.getInstance().getAtlas()), h.setImageItem(p), h.setScale(d), h.setPositionX(-h.imageItem.rect.width / 2), h.setPositionY(-h.imageItem.rect.height / 2);
                                    var f = v.default.getInstance().getDotLight(),
                                        m = new A.default();
                                    (m.imageData = v.default.getInstance().getAtlas()), m.setImageItem(f), m.setScale(d), m.setPositionX(-m.imageItem.rect.width / 2), m.setPositionY(-m.imageItem.rect.height / 2), u.addChild(h, T.default.TAG_NODE_ANIM_CIRCLE), u.addChild(m, T.default.TAG_NODE_ANIM_DOT), this.addChild(u), u.setVisible(!1), this.mLongBlockAnimation.setDotAnimLayer(u);
                                }
                                if (C.G.Ap.config.longBlockDotPosShow) {
                                    d = l.getWidth() / l.imageItem.rect.width;
                                    this.addLightDotsLayer(d, l.getHeight());
                                }
                                var g = I.default.getInstance().getLongBlockFinish();
                                (this.imageItem = g), (this.imageData = I.default.getInstance().getAtlas());
                                var _ = new k.default(M.default.getInstance().getAtlas(), 2);
                                _.setContentSize(this.mBlock.rect.width, 132), _.setScale(0.78), _.setShowSign(!0), _.setCenterNumber(!0), _.setNumberColor(k.NumberColor.BLUE), _.setVisible(!1), this.addChild(_), this.mLongBlockAnimation.setScoreLayer(_), this.mLongBlockAnimation.onLayerCreated(this, l.getHeight());
                            }),
                            (S.prototype.addLightDotsLayer = function (e, t) {
                                var i = new P.default();
                                i.setPosition(this.mBlock.rect.width / 2, 0);
                                var o = this.addDotNodes(i, e, t);
                                this.addChild(i), this.mLongBlockAnimation.setDotLightLayer(i, o);
                            }),
                            (S.prototype.addDotNodes = function (e, t, i) {
                                for (var o = [], n = this.mBlock.bounus, a = I.default.getInstance().getDot(), r = -a.rect.width / 2, s = 0, c = n; s < c.length; s++) {
                                    var l = c[s].time * C.G.Ap.config.getBlockHeight() + i - a.rect.height / 2;
                                    o.push(l);
                                    var u = this.mDotNodeCache.get();
                                    null == u && (((u = new d.default()).imageData = I.default.getInstance().getAtlas()), u.setImageItem(a), u.setScale(t)), u.setPosition(r, l), u.isAdded() ? u.setTag(l) : e.addChild(u, l);
                                }
                                return o;
                            }),
                            (S.prototype.updateTouchState = function (e) {
                                this.mLongBlockAnimation.updateTouchState(e);
                            }),
                            (S.prototype.updatePauseState = function (e) {
                                var t = this.getChildByTag(S.TAG_NODE_PAUSE);
                                if (e && !t) {
                                    var i = I.default.getInstance().getStartLabel(),
                                        o = this.mBlock.rect.width / i.rect.width,
                                        n = this.mBlock.rect.width,
                                        a = i.rect.height * o,
                                        r = new A.default();
                                    (r.imageData = I.default.getInstance().getAtlas()), (r.imageItem = i), r.move(0, (120 - a) / 2, n, a), this.addChild(r, S.TAG_NODE_PAUSE);
                                }
                                t && t.setVisible(e);
                            }),
                            (S.sBlockScale = 0),
                            (S.TAG_NODE_PAUSE = 100),
                            S
                        );
                    })(o.default);
                (i.default = n), cc._RF.pop();
            },
            {
                '../../../base/G': 'G',
                '../../../util/Utility': 'Utility',
                '../../MUI/MUINineScaleSprite': 'MUINineScaleSprite',
                '../../MUI/MUINode': 'MUINode',
                '../../MUI/MUISprite': 'MUISprite',
                '../anim/LongBlockAnimation': 'LongBlockAnimation',
                '../component/MUINumber': 'MUINumber',
                '../loader/BlockSkinFrameLoader': 'BlockSkinFrameLoader',
                '../loader/GameSceneFrameLoader': 'GameSceneFrameLoader',
                '../loader/NumberFrameLoader': 'NumberFrameLoader',
                './BlockNode': 'BlockNode',
                './ReuseNode': 'ReuseNode',
                './ReuseNodePool': 'ReuseNodePool',
            },
        ],
        Looper: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '2913dCc+mFIMoGO46Dt+Yh7', 'Looper'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../Network/Protocol/UserUtil'),
                    n = (function (t) {
                        function e() {
                            var e = t.call(this) || this;
                            return (e.mInterval = 4), (e.isWorking = !1), (e.isStarted = !1), (e.scheduler = cc.director.getScheduler()), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.start = function (e) {
                                var t = this;
                                void 0 === e && (e = 5), (this.isStarted = !0), (this.mInterval = e);
                                var i = o.default.getCurSysTime();
                                this.scheduler.scheduleUpdate(this, cc.Scheduler.PRIORITY_NON_SYSTEM, !1, function () {
                                    if (!t.isWorking) {
                                        var e = o.default.getCurSysTime();
                                        e - i > t.mInterval && (t.doWork(), (i = e), (t.isWorking = !1));
                                    }
                                });
                            }),
                            (e.prototype.stop = function () {
                                this.isStarted && (this.scheduler.unscheduleUpdate(this), (this.isStarted = !1));
                            }),
                            (e.prototype.doWork = function () {
                                (this.isWorking = !0), this.mWork && this.mWork();
                            }),
                            (e.prototype.setWork = function (e, t) {
                                void 0 === t && (t = 4), (this.mWork = e), (this.mInterval = t);
                            }),
                            (e.prototype.setInterval = function (e) {
                                e && 0 <= e && (this.mInterval = e);
                            }),
                            (e.prototype.getStarted = function () {
                                return this.isStarted;
                            }),
                            e
                        );
                    })(cc.Node);
                (i.default = n), cc._RF.pop();
            },
            {
                '../Network/Protocol/UserUtil': 'UserUtil',
            },
        ],
        LotteryDataManager: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '2a6ab0GNjpCx6/tGAqbx3mO', 'LotteryDataManager'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var c = e('../DB/DBMgr'),
                    o = (function () {
                        function e() {}
                        return (
                            (e.Ins = function () {
                                return e.mInstance || (e.mInstance = new e()), e.mInstance;
                            }),
                            (e.prototype.getLotteryDataVM = function (e) {
                                for (var t = [], i = 0, o = c.default.Ins().getDBRows(c.eDataBase.eDB_Lottery, e + ''); i < o.length; i++) {
                                    var n = o[i],
                                        a = parseInt(n.mRowData[0]);
                                    if (a && 'number' == typeof a) {
                                        var r = new l(),
                                            s = n;
                                        (r.id = s.getId()), (r.rewardType = s.getRewardType()), (r.newComing = s.getNewComing()), (r.chanceMin = s.getChanceMin()), (r.chanceMax = s.getChanceMax()), (r.count = s.getCount()), (r.isSkinPiece = s.getIsSkinPiece()), t.push(r);
                                    }
                                }
                                return Object.seal(t);
                            }),
                            e
                        );
                    })();
                i.LotteryDataMgr = o;
                var l = function () {};
                (i.LotteryDataVM = l), cc._RF.pop();
            },
            {
                '../DB/DBMgr': 'DBMgr',
            },
        ],
        LotteryData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'da5c6Hzg7ZMnLreFQL1IwRl', 'LotteryData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.findLotteryDataById = function (e) {
                                return this.find('rewardType', e);
                            }),
                            (t.prototype.findLotteryDataByNewCome = function (e) {
                                void 0 === e && (e = '0');
                                var t = this.csvGetRows('newComing', e),
                                    i = [];
                                if (t && 0 < t.length)
                                    for (var o = 0, n = t; o < n.length; o++) {
                                        var a = n[o],
                                            r = new s();
                                        (r.mRowData = a), (r.mCsvFile = this), i.push(r);
                                    }
                                return Object.seal(i);
                            }),
                            (t.prototype.getRow = function () {
                                return new s();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.LotteryData = n;
                var s = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getId = function () {
                            return this.getInt('id');
                        }),
                        (t.prototype.getRewardType = function () {
                            return this.getString('rewardType');
                        }),
                        (t.prototype.getNewComing = function () {
                            return this.getInt('newComing');
                        }),
                        (t.prototype.getChanceMin = function () {
                            return this.getInt('chanceMin');
                        }),
                        (t.prototype.getChanceMax = function () {
                            return this.getInt('chanceMax');
                        }),
                        (t.prototype.getCount = function () {
                            return this.getInt('count');
                        }),
                        (t.prototype.getIsSkinPiece = function () {
                            return this.getInt('isSkinPiece');
                        }),
                        t
                    );
                })(o.default);
                (i.LotteryDataRow = s), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        LotteryEnum: [
            function (e, t, i) {
                'use strict';
                var o, n, a, r, s, c, l;
                cc._RF.push(t, '832f7hOQgRDj4FrqChb0FP2', 'LotteryEnum'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    ((o = i.UserEnum || (i.UserEnum = {}))[(o.NONE = 0)] = 'NONE'),
                    (o[(o.NEW_COMING = 1)] = 'NEW_COMING'),
                    (o[(o.PASS_COMING = 2)] = 'PASS_COMING'),
                    ((n = i.BUTTON_STATUS || (i.BUTTON_STATUS = {}))[(n.NONE = 0)] = 'NONE'),
                    (n[(n.SUCCESS = 1)] = 'SUCCESS'),
                    (n[(n.FAIL = 2)] = 'FAIL'),
                    (n[(n.INTERACTABLE = 3)] = 'INTERACTABLE'),
                    (n[(n.END = 4)] = 'END'),
                    ((a = i.AD_STATUS || (i.AD_STATUS = {}))[(a.NONE = 0)] = 'NONE'),
                    (a[(a.SKIP_AD = 1)] = 'SKIP_AD'),
                    (a[(a.NETWORK_FAIL = 2)] = 'NETWORK_FAIL'),
                    (a[(a.EXIT_AD = 3)] = 'EXIT_AD'),
                    ((r = i.REWARD_TYPE || (i.REWARD_TYPE = {}))[(r.GOLD = 0)] = 'GOLD'),
                    (r[(r.ENERGY = 1)] = 'ENERGY'),
                    (r[(r.DIAMOND = 2)] = 'DIAMOND'),
                    (r[(r.SKIN = 3)] = 'SKIN'),
                    (r[(r.PROP_DASH = 4)] = 'PROP_DASH'),
                    (r[(r.PROP_SLOW = 5)] = 'PROP_SLOW'),
                    (r[(r.PROP_SHIELD = 6)] = 'PROP_SHIELD'),
                    ((s = i.SKIN_TYPE || (i.SKIN_TYPE = {}))[(s.ONE_DAY = 1)] = 'ONE_DAY'),
                    (s[(s.TWO_DAY = 2)] = 'TWO_DAY'),
                    (s[(s.THREE_DAY = 4)] = 'THREE_DAY'),
                    (s[(s.LIMIT = 8)] = 'LIMIT'),
                    (s[(s.FOREVER = 16)] = 'FOREVER'),
                    (s[(s.NONE = 32)] = 'NONE'),
                    ((c = i.TIP_TYPE || (i.TIP_TYPE = {}))[(c.TIP_COUNT_DOWN = 0)] = 'TIP_COUNT_DOWN'),
                    (c[(c.TIP_RUN_OUT = 1)] = 'TIP_RUN_OUT'),
                    (c[(c.TIP_NORMAL = 2)] = 'TIP_NORMAL'),
                    ((l = i.LOTTERY_MODE || (i.LOTTERY_MODE = {}))[(l.MODE_AD = 0)] = 'MODE_AD'),
                    (l[(l.MODE_AUTO = 1)] = 'MODE_AUTO'),
                    cc._RF.pop();
            },
            {},
        ],
        LotteryHandler: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '73b5c7cM45MoYcCEhURqFvi', 'LotteryHandler'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../gamescene/services/ServiceProvider'),
                    n = e('./workers/DataEntryWorker'),
                    r = e('./workers/SwitchWorker'),
                    s = e('../../gamescene/workers/WorkerState'),
                    c = e('../../util/TimeUtil'),
                    l = e('../Network/Protocol/StorageUtil'),
                    u = e('../../config/LSKey'),
                    d = e('../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    p = e('../looper/Looper'),
                    h = e('../../util/StringUtil'),
                    a = (function () {
                        function a() {
                            (this.lotteryProvider = new o.ServiceProvider()), (this.dataEntryWorker = null), (this.switchWorker = null), (this.LotteryVMList = null), (this.countDown = 0), (this.countDownRunning = !1), (this.doneCount = 0), (this.currentLotteryStat = !1), (this.lastLotteryDate = ''), (this.serverDate = null), (this.looper = null), (this.rollingEndCallback = null), (this.countDownCallback = null), (this.COUNT_DOWN = 60), this.initDate();
                        }
                        return (
                            (a.prototype.startDataEntry = function (e) {
                                console.log('--- startDataEntry newComing---', e), (this.dataEntryWorker && this.dataEntryWorker.state === s.WorkerState.running) || (this.lotteryProvider.register('DataEntryWorker', new n.default()), (this.dataEntryWorker = this.lotteryProvider.resolve('DataEntryWorker')), (this.dataEntryWorker.canPauseAndContinue = !0), this.dataEntryWorker.start(this, e));
                            }),
                            (a.prototype.stopDataEntry = function () {
                                this.dataEntryWorker && this.dataEntryWorker.stop();
                            }),
                            (a.prototype.startSwitchWorker = function (e, t) {
                                (this.switchWorker && this.switchWorker.state === s.WorkerState.running) || (this.lotteryProvider.register('SwitchWorker', new r.default()), (this.switchWorker = this.lotteryProvider.resolve('SwitchWorker')), (this.switchWorker.canPauseAndContinue = !0), this.switchWorker.start(this, e, t), this.saveData());
                            }),
                            (a.prototype.stopSwitchWorker = function () {
                                this.switchWorker && this.switchWorker.stop();
                            }),
                            (a.prototype.initDate = function () {
                                (this.lastLotteryDate = l.default.read(u.default.LAST_LOTTERY_DATE, '1970_01_01')), !this.lastLotteryDate && (this.lastLotteryDate = '1970_01_01');
                            }),
                            (a.prototype.saveData = function () {
                                try {
                                    if ((this.addDoneCount(), this.doneCount > a.EVERYDAY_LOTTERY_COUNT)) return;
                                    var e = this.serverDate;
                                    (this.lastLotteryDate = e ? c.default.formatDate(e.valueOf()) : ''), l.default.save(u.default.LAST_LOTTERY_DATE, this.lastLotteryDate), l.default.save(u.default.LOTTERY_COUNT, this.doneCount + ''), this.addLotteryTimes();
                                } catch (e) {
                                    console.log('--- handler saveData err---', e);
                                }
                            }),
                            (a.prototype.addLotteryTimes = function () {
                                var e = l.default.read(u.default.LOTTERY_TOTAL_COUNT);
                                if (h.StringUtil.isEmpty(e)) l.default.save(u.default.LOTTERY_TOTAL_COUNT, '1');
                                else {
                                    if (10 < parseInt(e)) return;
                                    l.default.save(u.default.LOTTERY_TOTAL_COUNT, parseInt(e) + 1 + '');
                                }
                            }),
                            (a.prototype.addDoneCount = function () {
                                0 <= this.doneCount && this.doneCount < a.EVERYDAY_LOTTERY_COUNT && this.doneCount++, console.log('addDoneCount this.doneCount', this.doneCount);
                            }),
                            (a.prototype.getLotteryStat = function (i) {
                                var o = this;
                                try {
                                    this.getServerTime(function (e, t) {
                                        (o.currentLotteryStat = !1), e && (o.currentLotteryStat = o.getRefreshState(t)), i(o.currentLotteryStat);
                                    });
                                } catch (e) {
                                    console.log('--- handler getLotteryStat err---', e);
                                }
                            }),
                            (a.prototype.getRefreshState = function (e) {
                                var t = a.EVERYDAY_LOTTERY_COUNT,
                                    i = new Date(e),
                                    o = c.default.formatDate(i.valueOf());
                                (this.serverDate = i), (this.lastLotteryDate = l.default.read(u.default.LAST_LOTTERY_DATE, this.lastLotteryDate)), (this.doneCount = Math.floor(parseInt(l.default.read(u.default.LOTTERY_COUNT, this.doneCount))) || 0);
                                var n = !1;
                                return o === this.lastLotteryDate ? (n = 0 <= this.doneCount && this.doneCount < t) : (o > this.lastLotteryDate || !this.lastLotteryDate) && ((n = !0), (this.doneCount = 0), l.default.save(u.default.LOTTERY_COUNT, this.doneCount + '')), n;
                            }),
                            (a.prototype.getServerTime = function (i) {
                                d.MGUser.getCurrentServerRealTime({
                                    complete: function (e, t) {
                                        i(e, t);
                                    },
                                });
                            }),
                            (a.prototype.setLotteryVMList = function (e) {
                                e && (this.LotteryVMList = e);
                            }),
                            (a.prototype.getLotteryVMList = function () {
                                return this.LotteryVMList;
                            }),
                            (a.prototype.getDoneCount = function () {
                                return this.doneCount;
                            }),
                            (a.prototype.startCountDown = function (t) {
                                var i = this;
                                void 0 === t && (t = this.COUNT_DOWN);
                                try {
                                    this.getLotteryStat(function (e) {
                                        console.log('--- getLotteryStat currentLotteryStat ---' + e), 0 < i.countDown || !e || i.countDownRunning || i.buildTimer(t);
                                    });
                                } catch (e) {
                                    this.setCountDown(0), this.countDownCallback && this.countDownCallback(), (this.countDownRunning = !1);
                                }
                            }),
                            (a.prototype.buildTimer = function (e) {
                                (this.looper = new p.default()), (this.countDown = e), (this.countDownRunning = !0), this.looper.setWork(this.timer.bind(this)), this.looper.start(1);
                            }),
                            (a.prototype.timer = function () {
                                0 < this.countDown ? (this.setCountDown(this.countDown), this.countDown--) : (this.setCountDown(this.countDown), this.countDownCallback && this.countDownCallback(), (this.countDownRunning = !1), this.looper.stop());
                            }),
                            (a.prototype.setCountDown = function (e) {
                                e < 0 || l.default.save(u.default.LOTTERY_COUNTDOWN, this.countDown + '');
                            }),
                            (a.prototype.getCountDown = function () {
                                var e = parseInt(l.default.read(u.default.LOTTERY_COUNTDOWN, this.countDown));
                                return 0 < (e = 0 === e ? this.countDown : e) && !this.countDownRunning && this.startCountDown(e), e;
                            }),
                            (a.prototype.getCurrentLotteryStat = function (e) {
                                e && ('true' === l.default.read(u.default.DEBUG_INFINITE_LOTTERY) ? (0 === this.countDown ? e(!0) : e(!1)) : this.getLotteryStat(e));
                            }),
                            (a.prototype.setRollingEndCallback = function (e) {
                                e && (this.rollingEndCallback = e);
                            }),
                            (a.prototype.getRollingEndCallback = function () {
                                return this.rollingEndCallback;
                            }),
                            (a.prototype.setCountDownCallback = function (e) {
                                e && (this.countDownCallback = e);
                            }),
                            (a.prototype.getCountDownCallback = function () {
                                return this.countDownCallback;
                            }),
                            (a.prototype.getWorkerState = function (e) {
                                var t = null;
                                switch (e) {
                                    case 'DataEntryWorker':
                                        t = this.dataEntryWorker;
                                        break;
                                    case 'SwitchWorker':
                                        t = this.switchWorker;
                                }
                                return t ? t.state : s.WorkerState.stopped;
                            }),
                            (a.EVERYDAY_LOTTERY_COUNT = 3),
                            a
                        );
                    })();
                (i.LotteryHandler = a), cc._RF.pop();
            },
            {
                '../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../config/LSKey': 'LSKey',
                '../../gamescene/services/ServiceProvider': 'ServiceProvider',
                '../../gamescene/workers/WorkerState': 'WorkerState',
                '../../util/StringUtil': 'StringUtil',
                '../../util/TimeUtil': 'TimeUtil',
                '../Network/Protocol/StorageUtil': 'StorageUtil',
                '../looper/Looper': 'Looper',
                './workers/DataEntryWorker': 'DataEntryWorker',
                './workers/SwitchWorker': 'SwitchWorker',
            },
        ],
        LotteryIndex: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '73972N8uJ1Db71LK67h5rGY', 'LotteryIndex'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./../skin/frag/SkinTaskMgr'),
                    n = e('../UI/GameEntraScene/BasicTouchEvent'),
                    a = e('./LotteryProcess'),
                    r = e('./LotteryItem'),
                    s = e('../UI/GameEntraScene/ToastPrefab'),
                    c = e('../UI/GameEntraScene/ImgCache'),
                    l = e('../../gamescene/workers/WorkerState'),
                    u = e('../Network/Protocol/StorageUtil'),
                    d = e('../../config/LSKey'),
                    p = e('../awardcontroller/AwardController'),
                    h = e('../Logic/GameItemsManager'),
                    f = e('./LotteryEnum'),
                    m = e('../../infoc/m_p2_PData_Dia'),
                    g = e('../../infoc/m_p2_Uaction'),
                    _ = e('../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    y = e('../../../modules/MGAdv/scripts/Logic/MGAdvDefine'),
                    S = e('../../../modules/MGAdv/scripts/Logic/MGAdvEntrance'),
                    v = e('../UI/GameEntraScene/PrefabMgr'),
                    I = e('../../base/Log'),
                    T = e('../../util/StringUtil'),
                    C = e('../Logic/SkinDataManager'),
                    E = e('../skin/frag/SkinTaskMgr'),
                    A = e('../../util/PU'),
                    P = e('../../upgrade/BannerDelayShowToggle'),
                    k = e('../../upgrade/ToggleBean'),
                    M = e('../Logic/I18nManager'),
                    L = e('../keypad/KeypadNavigator'),
                    b = cc._decorator,
                    N = b.ccclass,
                    R = b.property,
                    D = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mainPanel = null), (e.startBtn = null), (e.getAwardBtn = null), (e.skip = null), (e.content = null), (e.item = null), (e.bkg = null), (e.tipTxt = null), (e.mSkinTipsLabel = null), (e.mSkinCountLabel = null), (e.lotteryProcess = null), (e.lotteryHandler = null), (e.startBtnClickEvent = null), (e.getAwardBtnClickEvent = null), (e.closeBtnClickEvent = null), (e.currentLotteryStat = !0), (e.itemNodes = []), (e.lotteryAwards = null), (e.adBackStatus = null), (e.isADFeatureEnable = !0), (e.TIP_NORMAL_TXT_WX = '看15s广告即可免费抽奖'), (e.TIP_NORMAL_TXT_QQ = '观看完整视频可获得游戏奖励'), (e.TIP_RUN_OUT_TXT = '今日抽奖次数已用完'), (e.STAR_SKIN_ID = '5-7-0'), (e._lotteryMode = f.LOTTERY_MODE.MODE_AD), (e.mbBannerShowed = !1), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.enResLoad = function () {}),
                            (e.prototype.enSpriteSetNull = function () {
                                (this.startBtn.getComponent(cc.Sprite).spriteFrame = null), (this.getAwardBtn.getComponent(cc.Sprite).spriteFrame = null);
                            }),
                            (e.prototype.onLoad = function () {
                                M.default.getInstance().isEnglish() && this.enResLoad(), this.saveShowTime(), A.default.isWeiXin() || (S.MGAdv.load(y.ADScene.LOTTERY, y.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK), S.MGAdv.load(y.ADScene.LOTTERY_DOUBLE_AWARD, y.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK)), L.default.getInstance().pushDialog(this.node);
                            }),
                            (e.prototype.onDestroy = function () {
                                this.destroyBannerAd(), L.default.getInstance().popDialog(this.node);
                            }),
                            (e.prototype.destroyBannerAd = function () {
                                this.isBannerShowed() && S.MGAdv.destroyBanner(y.ADScene.SOURCE_LOTTERY_BANNER);
                            }),
                            (e.prototype.init = function (e) {
                                try {
                                    (this.lotteryProcess = e), this.lotteryProcess.callLotteryFrame(), (this.lotteryHandler = this.lotteryProcess.getLotteryHandler()), this.buildBkg(), this.buildContent(), this.initLotteryMode(), this.initCloseBtnClickEvent(), this.initTipTxt(f.TIP_TYPE.TIP_NORMAL), this.initAds(), this.initToast(), this.initRollingEndCallback(), this.initCountDownCallback(), this.adaptorUI(), this.showBannerAd(), this.report(2), this.setSkinItem();
                                } catch (e) {
                                    console.log('--- lottery index err:---', e);
                                }
                            }),
                            (e.wx2cc = function (e) {
                                var t = cc.winSize,
                                    i = wx.getSystemInfoSync();
                                return t && i ? (e * t.height) / i.windowHeight : 0;
                            }),
                            (e.prototype.showBannerAd = function () {
                                var o = this;
                                if ((console.log('[MGB_DEBUG] showBannerAd enter'), !A.default.isWeb())) {
                                    var e = void 0,
                                        t = void 0,
                                        i = void 0;
                                    if (A.default.isQQ()) i = t = e = 0;
                                    else if (A.default.isWeiXin()) {
                                        var n = wx.getSystemInfoSync();
                                        (e = n.screenWidth), (t = n.screenHeight), (i = 0);
                                    }
                                    var a = this.tagBannerShowed.bind(this),
                                        r = this.isBannerShowed.bind(this);
                                    if (S.MGAdv.isBannerCached(y.ADScene.SOURCE_LOTTERY_BANNER)) {
                                        var s = P.default.getBannerDelayTime(k.ToggleKey.BANNER_DELAY_LOTTERY_PAGE);
                                        this.scheduleOnce(function () {
                                            cc.isValid(o, !0) &&
                                                S.MGAdv.showBanner(y.ADScene.SOURCE_LOTTERY_BANNER, function (e, t, i) {
                                                    console.log('[MGB_DEBUG] success show SOURCE_LOTTERY_BANNER, bannerHeight:' + i), o.adjustPos(i), a();
                                                });
                                        }, s.normalDelayTime / 1e3);
                                    } else
                                        console.log('[MGB_DEBUG] before load SOURCE_LOTTERY_BANNER'),
                                            S.MGAdv.loadBanner(
                                                e,
                                                i,
                                                t,
                                                function (e, t) {
                                                    if (e == y.ADStat.LOAD_SUCCESS)
                                                        if ((console.log('[MGB_DEBUG] after load LOAD_SUCCESS'), cc.isValid(o, !0) && !r())) {
                                                            console.log('[MGB_DEBUG] before show SOURCE_LOTTERY_BANNER');
                                                            var i = P.default.getBannerDelayTime(k.ToggleKey.BANNER_DELAY_LOTTERY_PAGE);
                                                            o.scheduleOnce(function () {
                                                                cc.isValid(o, !0) &&
                                                                    S.MGAdv.showBanner(y.ADScene.SOURCE_LOTTERY_BANNER, function (e, t, i) {
                                                                        console.log('[MGB_DEBUG] success show SOURCE_LOTTERY_BANNER, bannerHeight:' + i), o.adjustPos(i), a();
                                                                    });
                                                            }, i.normalDelayTime / 1e3);
                                                        } else S.MGAdv.hideBanner(y.ADScene.SOURCE_LOTTERY_BANNER), S.MGAdv.destroyBanner(y.ADScene.SOURCE_LOTTERY_BANNER);
                                                },
                                                y.ADScene.SOURCE_LOTTERY_BANNER,
                                            );
                                }
                            }),
                            (e.prototype.adjustPos = function (e) {
                                console.log('[MGB_DEBUG] adjustPos bannerHeight:' + e);
                            }),
                            (e.prototype.tagBannerShowed = function () {
                                this.mbBannerShowed = !0;
                            }),
                            (e.prototype.isBannerShowed = function () {
                                return this.mbBannerShowed;
                            }),
                            (e.prototype.setSkinItem = function () {
                                var e = u.default.read(d.default.LOTTERY_TOTAL_COUNT),
                                    t = null;
                                (t = !T.StringUtil.isEmpty(e) && 5 <= parseInt(e) ? '/lottery/forever_skin' : '/lottery/star_skin'), c.default.get2(t, this.mSkinTipsLabel);
                                var i = '';
                                T.StringUtil.isEmpty(e) ? (i = '/lottery/5') : parseInt(e) < 5 && (i = '/lottery/' + (5 - parseInt(e))), T.StringUtil.isEmpty(i) ? (this.mSkinCountLabel.node.active = !1) : c.default.get2(i, this.mSkinCountLabel);
                            }),
                            (e.prototype.isStarSkinLocked = function () {
                                for (var e = !0, t = C.SkinDataMgr.Ins().getSkinList(), i = 0; i < t.length; i++)
                                    if ('stars' == t[i].name) {
                                        e = t[i].isLock;
                                        break;
                                    }
                                return e;
                            }),
                            (e.prototype.buildContent = function () {
                                for (var e = 0, t = 0, i = this.getLotteryVMList(); t < i.length; t++) {
                                    var o = i[t],
                                        n = cc.instantiate(this.item),
                                        a = n.getComponent(r.default);
                                    this.content.getChildByName(e + '').addChild(n), a.init(o), this.itemNodes.push(n), e++;
                                }
                            }),
                            (e.prototype.buildBkg = function () {
                                var e = this.bkg;
                                e &&
                                    (e.on(cc.Node.EventType.TOUCH_START, function (e) {
                                        e.stopPropagation();
                                    }),
                                    e.on(cc.Node.EventType.TOUCH_END, function (e) {
                                        e.stopPropagation();
                                    }));
                            }),
                            (e.prototype.initStartBtn = function () {
                                var t = this;
                                this.lotteryHandler &&
                                    this.lotteryHandler.getCurrentLotteryStat(function (e) {
                                        cc.isValid(t, !0) && ((t.tipTxt.node.active = !0), (t.currentLotteryStat = e), (t.getAwardBtn.node.active = !1), (t.startBtn.node.active = !0), t.removeStartBtnClickEvent(), t.currentLotteryStat ? (t.updateStartBtn(f.BUTTON_STATUS.NONE), t.initStartBtnClickEvent()) : t.updateStartBtn(f.BUTTON_STATUS.INTERACTABLE));
                                    });
                            }),
                            (e.prototype.initGetAwardbtn = function () {
                                (this.tipTxt.node.active = !1), (this.startBtn.node.active = !1), (this.getAwardBtn.node.active = !0), this.initGetAwardClickEvent();
                            }),
                            (e.prototype.initCloseBtnClickEvent = function () {
                                var e = this,
                                    t = this.skip.node;
                                t &&
                                    ((this.closeBtnClickEvent = new n.default(function () {
                                        e.closeCallback && (e.removeEvents(), e.lotteryHandler.stopSwitchWorker(), e.closeCallback());
                                    })),
                                    t.on(cc.Node.EventType.TOUCH_END, this.closeBtnClickEvent.click, this.closeBtnClickEvent));
                            }),
                            (e.prototype.initStartBtnClickEvent = function () {
                                (this.startBtnClickEvent = new n.default(this.startBtnClick.bind(this))), this.startBtn.node.on(cc.Node.EventType.TOUCH_END, this.startBtnClickEvent.click, this.startBtnClickEvent);
                            }),
                            (e.prototype.initGetAwardClickEvent = function () {
                                (this.getAwardBtnClickEvent = new n.default(this.getAwardBtnClick.bind(this))), this.getAwardBtn.node.on(cc.Node.EventType.TOUCH_END, this.getAwardBtnClickEvent.click, this.getAwardBtnClickEvent);
                            }),
                            (e.prototype.initTipTxt = function (e, t) {
                                this.TIP_NORMAL_TXT_WX;
                                var i = this.TIP_NORMAL_TXT_QQ,
                                    o = this.TIP_RUN_OUT_TXT,
                                    n = '后可再次抽奖';
                                if ((M.default.getInstance().isEnglish() && ("Watch 15s' ad for a free wheel", (i = 'Watch the video completely to get rewards'), (o = 'no chance left today'), (n = 'after , get rewards again')), this.tipTxt)) {
                                    var a = '';
                                    switch (e) {
                                        case f.TIP_TYPE.TIP_NORMAL:
                                            A.default.isCM() && (a = i);
                                            break;
                                        case f.TIP_TYPE.TIP_COUNT_DOWN:
                                            a = '00:00:' + (t < 10 ? '0' + t : '' + t) + ' ' + n;
                                            break;
                                        case f.TIP_TYPE.TIP_RUN_OUT:
                                            a = o;
                                    }
                                    this.tipTxt.string = a;
                                }
                            }),
                            (e.prototype.initAds = function () {
                                A.default.isWeiXin() || S.MGAdv.load(y.ADScene.LOTTERY, y.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK), (this.isADFeatureEnable = cc.sys.isBrowser || S.MGAdv.isADFeatureEnable());
                            }),
                            (e.prototype.initRollingEndCallback = function () {
                                var o = this;
                                this.lotteryHandler.setRollingEndCallback(function (i) {
                                    o.lotteryProcess &&
                                        o.lotteryHandler &&
                                        ((o.currentLotteryStat = !1),
                                        o.lotteryHandler.getCurrentLotteryStat(function (e) {
                                            var t;
                                            cc.isValid(o, !0) &&
                                                ((o.currentLotteryStat = e),
                                                (o.doRollingButton.node.active = !0),
                                                (t = o.currentLotteryStat ? f.BUTTON_STATUS.END : f.BUTTON_STATUS.INTERACTABLE),
                                                o.changeBtnStyle(t, function (e, t) {
                                                    cc.isValid(o, !0) && (e && console.log('--- changeBtnStyle err ---', e), (o.doRollingButton.disabledSprite = t), o.initLotteryMode(), o.setSkinItem(), i && (o.showRewardPage(i), o.report(1, i), o.notifyTaskSys()));
                                                }));
                                        }));
                                });
                            }),
                            (e.prototype.initCountDownCallback = function () {
                                var e = this;
                                this.lotteryHandler.setCountDownCallback(function () {
                                    e.initStartBtn();
                                });
                            }),
                            (e.prototype.initToast = function () {
                                var e = this;
                                this.setToastEndCallback(function () {
                                    e.lotteryHandler && (3 <= e.lotteryHandler.getDoneCount() ? ((e.currentLotteryStat = !1), e.updateStartBtn(f.BUTTON_STATUS.INTERACTABLE)) : e.updateStartBtn(f.BUTTON_STATUS.SUCCESS));
                                });
                            }),
                            Object.defineProperty(e.prototype, 'lotteryMode', {
                                set: function (e) {
                                    (this._lotteryMode = e) == f.LOTTERY_MODE.MODE_AD ? ((this.getAwardBtn.node.active = !1), this.updateStartBtn(f.BUTTON_STATUS.NONE), this.removeGetAwardBtnClickEvent(), this.initStartBtn()) : e == f.LOTTERY_MODE.MODE_AUTO && ((this.startBtn.node.active = !1), this.updateStartBtn(f.BUTTON_STATUS.NONE), this.removeStartBtnClickEvent(), this.initGetAwardbtn());
                                },
                                enumerable: !0,
                                configurable: !0,
                            }),
                            (e.prototype.initLotteryMode = function () {
                                this.lotteryMode = f.LOTTERY_MODE.MODE_AD;
                            }),
                            (e.prototype.startBtnClick = function () {
                                if (S.MGAdv.isADCached(y.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK) || A.default.isWeb()) {
                                    console.log('--- startBtnClick --- ');
                                    var e = this.lotteryHandler.getWorkerState('SwitchWorker');
                                    if (!this.currentLotteryStat || e !== l.WorkerState.stopped) return void console.log(1);
                                    console.log(2), this.buildAds(), this.report(3);
                                } else M.default.getInstance().isEnglish() ? this.showToastTips('No video ads available,please try again later', !1) : this.showToastTips('暂无可用视频广告，请稍后重试', !1), A.default.isWeiXin() || S.MGAdv.load(y.ADScene.LOTTERY, y.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK);
                            }),
                            (e.prototype.getAwardBtnClick = function () {
                                this.updateStartBtn(f.BUTTON_STATUS.SUCCESS);
                            }),
                            Object.defineProperty(e.prototype, 'doRollingButton', {
                                get: function () {
                                    return this._lotteryMode == f.LOTTERY_MODE.MODE_AD ? this.startBtn : this._lotteryMode == f.LOTTERY_MODE.MODE_AUTO ? this.getAwardBtn : this.startBtn;
                                },
                                enumerable: !0,
                                configurable: !0,
                            }),
                            (e.prototype.updateStartBtn = function (e) {
                                var i = this;
                                switch ((console.log('--- updateStartBtn type --- ', e), e)) {
                                    case f.BUTTON_STATUS.SUCCESS:
                                        this._lotteryMode == f.LOTTERY_MODE.MODE_AD ? this.lotteryProcess.updateLotteryRecently() : this._lotteryMode == f.LOTTERY_MODE.MODE_AUTO && this.lotteryProcess.setLotteryYestoday();
                                        var t = this.itemNodes,
                                            o = this.adBackStatus;
                                        this.lotteryProcess.startRoll(t, o),
                                            this.changeBtnStyle(f.BUTTON_STATUS.SUCCESS, function (e, t) {
                                                e && console.log('--- changeBtnStyle err ---', e), (i.doRollingButton.interactable = !1), (i.doRollingButton.disabledSprite = t);
                                            });
                                        break;
                                    case f.BUTTON_STATUS.FAIL:
                                        break;
                                    case f.BUTTON_STATUS.INTERACTABLE:
                                        this.doRollingButton.interactable = !1;
                                        break;
                                    case f.BUTTON_STATUS.NONE:
                                        this.doRollingButton.interactable = !0;
                                        break;
                                    default:
                                        this.doRollingButton.interactable = !1;
                                }
                            }),
                            (e.prototype.removeEvents = function () {
                                this.removeCloseBtnClickEvent(), this.removeStartBtnClickEvent();
                            }),
                            (e.prototype.removeCloseBtnClickEvent = function () {
                                this.closeBtnClickEvent && this.skip.node.off(cc.Node.EventType.TOUCH_END, this.closeBtnClickEvent.click, this.closeBtnClickEvent);
                            }),
                            (e.prototype.removeStartBtnClickEvent = function () {
                                this.startBtnClickEvent && this.startBtn.node.off(cc.Node.EventType.TOUCH_END, this.startBtnClickEvent.click, this.startBtnClickEvent);
                            }),
                            (e.prototype.removeGetAwardBtnClickEvent = function () {
                                this.getAwardBtnClickEvent && this.getAwardBtn.node.off(cc.Node.EventType.TOUCH_END, this.getAwardBtnClickEvent.click, this.getAwardBtnClickEvent);
                            }),
                            (e.prototype.saveShowTime = function () {
                                var e = _.MGUser.getCurrentServerTime() + '';
                                u.default.save(d.default.LAST_SHOW_LUCKY_DIP_DIALOG_TIME, e);
                            }),
                            (e.prototype.setToastEndCallback = function (e) {
                                e && (this.toastEndCallback = e);
                            }),
                            (e.prototype.getLotteryVMList = function () {
                                return this.lotteryHandler.getLotteryVMList();
                            }),
                            (e.prototype.setCloseCallback = function (e) {
                                this.closeCallback = e;
                            }),
                            (e.prototype.buildAds = function () {
                                var t = this;
                                if (this.isADFeatureEnable) {
                                    var e = 'true' === u.default.read(d.default.DEBUG_INFINITE_LOTTERY),
                                        i = y.ADScene.LOTTERY_RESULT_REWARD;
                                    !e &&
                                        S.MGAdv.show(i, y.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK, function (e) {
                                            if (e) {
                                                switch (e) {
                                                    case y.ADStat.NOT_NETWORK:
                                                        t.showToastTips('No network available', !1);
                                                        break;
                                                    case y.ADStat.SHOW_SUCCESS_CLOSE:
                                                        t.updateStartBtn(f.BUTTON_STATUS.SUCCESS);
                                                        break;
                                                    case y.ADStat.SHOW_NOT_ENED_CLOSE:
                                                        break;
                                                    case y.ADStat.SHOW_GET_AD_FAILED:
                                                        (t.adBackStatus = f.AD_STATUS.SKIP_AD), t.showToastTips('No video ads available', !1, t.toastEndCallback);
                                                }
                                                A.default.isWeiXin() || S.MGAdv.load(y.ADScene.LOTTERY, y.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK);
                                            }
                                        }),
                                        e && this.updateStartBtn(f.BUTTON_STATUS.SUCCESS);
                                } else this.showToastTips('微信版本过低，请升至最新版微信再抽奖!', !1);
                            }),
                            (e.prototype.showToastTips = function (o, n, a) {
                                var r = this;
                                v.default.load('prefab/ToastPrefab', function (e, t) {
                                    if (t) {
                                        var i = t.getComponent(s.default);
                                        i.showTips(o, function () {
                                            t.destroy(), a && a();
                                        }),
                                            i.setLong(n),
                                            r.node.addChild(t);
                                    }
                                });
                            }),
                            (e.prototype.changeBtnStyle = function (e, t) {
                                var i = {},
                                    o = {};
                                M.default.getInstance().isEnglish() ? ((o[f.LOTTERY_MODE.MODE_AD] = 'lottery/button_rolling_en'), (o[f.LOTTERY_MODE.MODE_AUTO] = 'lottery/get_award_btn_disable_en')) : ((o[f.LOTTERY_MODE.MODE_AD] = 'lottery/button_rolling'), (o[f.LOTTERY_MODE.MODE_AUTO] = 'lottery/get_award_btn_disable')), (i[f.BUTTON_STATUS.SUCCESS] = o), (o = {}), M.default.getInstance().isEnglish() ? ((o[f.LOTTERY_MODE.MODE_AD] = 'lottery/button_normal_en'), (o[f.LOTTERY_MODE.MODE_AUTO] = 'lottery/get_award_btn_enable_en')) : ((o[f.LOTTERY_MODE.MODE_AD] = 'lottery/button_normal'), (o[f.LOTTERY_MODE.MODE_AUTO] = 'lottery/get_award_btn_enable')), (i[f.BUTTON_STATUS.END] = o), (o = {}), M.default.getInstance().isEnglish() ? ((o[f.LOTTERY_MODE.MODE_AD] = 'lottery/button_disable_en'), (o[f.LOTTERY_MODE.MODE_AUTO] = 'lottery/get_award_btn_disable_en')) : ((o[f.LOTTERY_MODE.MODE_AD] = 'lottery/button_disable'), (o[f.LOTTERY_MODE.MODE_AUTO] = 'lottery/get_award_btn_disable')), (i[f.BUTTON_STATUS.INTERACTABLE] = o);
                                var n = i[e][this._lotteryMode];
                                c.default.get(n, t);
                            }),
                            (e.prototype.adaptorUI = function () {}),
                            (e.prototype.update = function (e) {
                                3 <= this.lotteryHandler.getDoneCount() && this.initTipTxt(f.TIP_TYPE.TIP_RUN_OUT);
                            }),
                            (e.prototype.checkStopLottery = function () {
                                (!S.MGAdv.isADCached(y.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK) || 3 <= a.LotteryProcess.getInstance().getLotteryHandler().getDoneCount()) && this.closeCallback && (this.closeCallback(), this.removeEvents(), this.lotteryHandler.stopSwitchWorker());
                            }),
                            (e.prototype.showRewardPage = function (e) {
                                var t,
                                    o = this,
                                    n = new p.AwardResultInfo();
                                if ((n.setIsNeedGiveAwardInfo(!0).steSource(p.AwardResultInfo.SOURCE_LOTTERY), 1 == e.getIsSkinPiece() || (t = new p.AwardContent(h.GameItemsManager.getIns().getItemTypeByItemId(e.getId()), e.getCount(), e.getId())), n.addAwardContentItem(t), this.isStarSkinLocked()) && '5' == u.default.read(d.default.LOTTERY_TOTAL_COUNT)) {
                                    var i = new p.AwardContent(h.GameItemsManager.getIns().getItemTypeByItemId(this.STAR_SKIN_ID), 1, this.STAR_SKIN_ID);
                                    n.addAwardContentItem(i);
                                }
                                n.setCloseParentCallback(function () {
                                    o.closeCallback && (o.closeCallback(), o.removeEvents(), o.lotteryHandler.stopSwitchWorker());
                                });
                                var a = '/static_res/button_daily_checkin_award_normal',
                                    r = '/static_res/button_daily_checkin_award_pressed';
                                if ((M.default.getInstance().isEnglish() && ((a = '/static_res/button_daily_checkin_award_normal_en'), (r = '/static_res/button_daily_checkin_award_pressed_en')), p.AwardController.shouldDoubleAward(t)))
                                    n.setIsShowText(!1),
                                        n.setRichOkBtn('', a, r, function () {
                                            o.showAdvForDoubleAwards(function (e, t) {
                                                if (e)
                                                    if (o.lotteryAwards) {
                                                        I.default.i('LotteryIndex', 'video adv shown, give awards.');
                                                        var i = p.AwardController.filterAwardsForDouble(o.lotteryAwards);
                                                        p.AwardController.giveAwardInfo(i), (o.lotteryAwards = null);
                                                    } else I.default.i('LotteryIndex', 'video adv shown, but awards is invalidate');
                                                else I.default.i('LotteryIndex', 'video adv status callback');
                                                t ? p.AwardController.getIns().dismissAwardResultPage(n) : I.default.i('LotteryIndex', "video adv status callback BUT don't dismiss page");
                                            });
                                        }),
                                        n.enableSkipLabel('', function () {
                                            p.AwardController.getIns().dismissAwardResultPage(n), o.checkStopLottery();
                                        });
                                else {
                                    var s = '好的';
                                    M.default.getInstance().isEnglish() && (s = 'OK'),
                                        n.setOkBtn(s, function () {
                                            p.AwardController.getIns().dismissAwardResultPage(n), o.checkStopLottery();
                                        });
                                }
                                M.default.getInstance().isEnglish() ? n.setTitlePicPath('/static_res/share_gift_congratulation_title_en') : n.setTitlePicPath('/static_res/share_gift_congratulation_title'), (this.lotteryAwards = n.getAwardContentList()), p.AwardController.getIns().showCommonAwardResultPage(n, this.node);
                            }),
                            (e.prototype.showAdvForDoubleAwards = function (n) {
                                var a = this,
                                    e = y.ADScene.LOTTERY_DOUBLE_AWARD;
                                A.default.isCM() && (e = window.SUPERVIDEO_LOTTERY_DOUBLE_AWARD);
                                S.MGAdv.show(e, y.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK, function (e) {
                                    var t = !1,
                                        i = !1;
                                    switch (e) {
                                        case y.ADStat.NOT_NETWORK:
                                            a.showToastTips('No network available', !1), (i = !0);
                                            break;
                                        case y.ADStat.SHOW_SUCCESS_CLOSE:
                                            if (((i = t = !0), a.lotteryAwards)) {
                                                var o = p.AwardController.filterAwardsForDouble(a.lotteryAwards);
                                                a.showToastTips(p.AwardController.getAwardsToastTip(o), !1);
                                            }
                                            break;
                                        case y.ADStat.SHOW_NOT_ENED_CLOSE:
                                            i = !0;
                                            break;
                                        case y.ADStat.SHOW_GET_AD_FAILED:
                                            a.showToastTips('No video ads available', !1), A.default.isWeiXin() || S.MGAdv.load(y.ADScene.LOTTERY_DOUBLE_AWARD, y.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK), (i = !0);
                                    }
                                    n && n(t, i), A.default.isWeiXin() || S.MGAdv.load(y.ADScene.LOTTERY, y.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK);
                                });
                            }),
                            (e.prototype.report = function (e, t) {
                                switch (e) {
                                    case 1:
                                        if (!t) return;
                                        var i = t.getId();
                                        h.GameItemsManager.getIns().isDiamondsType(i) && m.default.report(t.getCount(), m.default.SOURCE_GET_LOTTERY, m.default.ACTION_GET_DIAMOND);
                                        break;
                                    case 2:
                                        g.default.report(0, g.default.ACTION_SHOW_LOTTERY_FRAME);
                                        break;
                                    case 3:
                                        g.default.report(0, g.default.ACTION_CLICK_LOTTERY_START);
                                }
                            }),
                            (e.prototype.notifyTaskSys = function () {
                                I.default.i('notifyTaskSys => notify lottery');
                                var e = new o.NormalEvent();
                                (e.type = o.NormalEventType.LOTTERY), E.default.Ins().notifyNormalEvent(e);
                            }),
                            __decorate([R(cc.Node)], e.prototype, 'mainPanel', void 0),
                            __decorate([R(cc.Button)], e.prototype, 'startBtn', void 0),
                            __decorate([R(cc.Button)], e.prototype, 'getAwardBtn', void 0),
                            __decorate([R(cc.Label)], e.prototype, 'skip', void 0),
                            __decorate([R(cc.Node)], e.prototype, 'content', void 0),
                            __decorate([R(cc.Prefab)], e.prototype, 'item', void 0),
                            __decorate([R(cc.Node)], e.prototype, 'bkg', void 0),
                            __decorate([R(cc.Label)], e.prototype, 'tipTxt', void 0),
                            __decorate([R(cc.Sprite)], e.prototype, 'mSkinTipsLabel', void 0),
                            __decorate([R(cc.Sprite)], e.prototype, 'mSkinCountLabel', void 0),
                            (e = __decorate([N], e))
                        );
                    })(cc.Component);
                (i.default = D), cc._RF.pop();
            },
            {
                '../../../modules/MGAdv/scripts/Logic/MGAdvDefine': 'MGAdvDefine',
                '../../../modules/MGAdv/scripts/Logic/MGAdvEntrance': 'MGAdvEntrance',
                '../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../base/Log': 'Log',
                '../../config/LSKey': 'LSKey',
                '../../gamescene/workers/WorkerState': 'WorkerState',
                '../../infoc/m_p2_PData_Dia': 'm_p2_PData_Dia',
                '../../infoc/m_p2_Uaction': 'm_p2_Uaction',
                '../../upgrade/BannerDelayShowToggle': 'BannerDelayShowToggle',
                '../../upgrade/ToggleBean': 'ToggleBean',
                '../../util/PU': 'PU',
                '../../util/StringUtil': 'StringUtil',
                '../Logic/GameItemsManager': 'GameItemsManager',
                '../Logic/I18nManager': 'I18nManager',
                '../Logic/SkinDataManager': 'SkinDataManager',
                '../Network/Protocol/StorageUtil': 'StorageUtil',
                '../UI/GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
                '../UI/GameEntraScene/ImgCache': 'ImgCache',
                '../UI/GameEntraScene/PrefabMgr': 'PrefabMgr',
                '../UI/GameEntraScene/ToastPrefab': 'ToastPrefab',
                '../awardcontroller/AwardController': 'AwardController',
                '../keypad/KeypadNavigator': 'KeypadNavigator',
                '../skin/frag/SkinTaskMgr': 'SkinTaskMgr',
                './../skin/frag/SkinTaskMgr': 'SkinTaskMgr',
                './LotteryEnum': 'LotteryEnum',
                './LotteryItem': 'LotteryItem',
                './LotteryProcess': 'LotteryProcess',
            },
        ],
        LotteryItem: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '40731aCC7xNmZ0XIpwNOdfJ', 'LotteryItem'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../UI/GameEntraScene/ImgCache'),
                    n = e('./LotteryEnum'),
                    a = e('../Logic/I18nManager'),
                    r = cc._decorator,
                    s = r.ccclass,
                    c = r.property,
                    l = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.icon = null), (e.numTxt = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.init = function (e) {
                                e && (this.initIcon(e), this.initNumTxt(e));
                            }),
                            (e.prototype.initIcon = function (e) {
                                if (1 == e.getIsSkinPiece()) {
                                    var t = '/static_res/skin_chip/common_skin_piece';
                                    o.default.get2(t, this.icon);
                                } else {
                                    (t = e.getIcon()) && o.default.get2(t, this.icon);
                                }
                            }),
                            (e.prototype.initNumTxt = function (e) {
                                if (this.numTxt)
                                    if (1 == e.getIsSkinPiece()) {
                                        var t = '',
                                            i = e.getCount();
                                        (t = '皮肤碎片 x ' + e.getCount()), (this.numTxt.string = t);
                                    } else {
                                        (t = ''), (i = e.getCount());
                                        var o = e.getSkinType();
                                        (t = o === n.SKIN_TYPE.FOREVER ? a.default.getInstance().getLanguageByKey('label_text.lottery_prize1') : o === n.SKIN_TYPE.LIMIT ? a.default.getInstance().getLanguageByKey('label_text.lottery_prize2') : 'x ' + i), (this.numTxt.string = t);
                                    }
                            }),
                            __decorate([c(cc.Sprite)], e.prototype, 'icon', void 0),
                            __decorate([c(cc.Label)], e.prototype, 'numTxt', void 0),
                            (e = __decorate([s], e))
                        );
                    })(cc.Component);
                (i.default = l), cc._RF.pop();
            },
            {
                '../Logic/I18nManager': 'I18nManager',
                '../UI/GameEntraScene/ImgCache': 'ImgCache',
                './LotteryEnum': 'LotteryEnum',
            },
        ],
        LotteryProcess: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'c7a15X0miJFybr2Yytx/9Dr', 'LotteryProcess'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var s = e('./LotteryHandler'),
                    l = e('../Network/Protocol/StorageUtil'),
                    u = e('../../config/LSKey'),
                    d = e('../../util/StringUtil'),
                    c = e('../../util/TimeUtil'),
                    o = e('../../base/Log'),
                    n = e('../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    p = e('../../../modules/MGAdv/scripts/Logic/MGAdvEntrance'),
                    h = e('../../../modules/MGAdv/scripts/Logic/MGAdvDefine'),
                    a = (function () {
                        function e() {
                            (this.lotteryHandler = null), (this.newComing = null), (this.hasShowLotteryOpenCold = !1), (this.lotteryHandler = new s.LotteryHandler());
                        }
                        return (
                            (e.getInstance = function () {
                                return e.mInstance || (e.mInstance = new e()), e.mInstance;
                            }),
                            (e.prototype.setNewComing = function (e) {
                                this.newComing = e;
                            }),
                            (e.prototype.callLotteryFrame = function () {
                                this.lotteryHandler.startDataEntry(this.newComing);
                            }),
                            (e.prototype.startRoll = function (e, t) {
                                this.lotteryHandler.startSwitchWorker(e, t);
                            }),
                            (e.prototype.getCurrentLotteryStat = function (e) {
                                this.lotteryHandler && this.lotteryHandler.getCurrentLotteryStat(e);
                            }),
                            (e.prototype.getLotteryHandler = function () {
                                return this.lotteryHandler;
                            }),
                            (e.prototype.autoShowLottoryDlg = function () {
                                var e = l.default.read(u.default.LAST_SHOW_LUCKY_DIP_DIALOG_TIME);
                                if (d.StringUtil.isEmpty(e)) return !0;
                                var t = new Date(e),
                                    i = t.getFullYear(),
                                    o = t.getMonth() + 1,
                                    n = t.getDay(),
                                    a = new Date(),
                                    r = a.getFullYear(),
                                    s = a.getMonth() + 1,
                                    c = a.getDay();
                                return i < r || o < s || n < c;
                            }),
                            (e.prototype.needShowLottoryDlgOpenCold = function (a) {
                                var r = this;
                                if (this.hasShowLotteryOpenCold || !p.MGAdv.isADCached(h.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK)) return o.default.i('[zf]LotteryProcess.needShowLottoryDlgOpenCold this.hasShowLotteryOpenCold = ' + this.hasShowLotteryOpenCold + ', this.getCountDown() = ,!ADLoadManager.gIns().isADCached() = ' + !p.MGAdv.isADCached(h.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK)), void a(!1);
                                n.MGUser.getCurrentServerRealTime({
                                    complete: function (e, t) {
                                        if (e) {
                                            var i = c.default.formatDate(t),
                                                o = l.default.read(u.default.LAST_LOTTERY_DATE, '');
                                            if ((console.log('[zf]LotteryProcess.needShowLottoryDlgOpenCold currentDate = ' + i + ',lastLotteryDate = ' + o), i === o)) {
                                                var n = s.LotteryHandler.EVERYDAY_LOTTERY_COUNT - Math.floor(parseInt(l.default.read(u.default.LOTTERY_COUNT, 0)));
                                                console.log('[zf]LotteryProcess.needShowLottoryDlgOpenCold doneCount = ' + n), 0 < n ? ((r.hasShowLotteryOpenCold = !0), a(!0)) : a(!1);
                                            } else (o < i || !o) && ((r.hasShowLotteryOpenCold = !0), a(!0));
                                        } else a(!1);
                                    },
                                });
                            }),
                            (e.prototype.updateLotteryRecently = function () {
                                var i = this;
                                this.ServerDateNow().then(function (e) {
                                    if (0 != e) {
                                        var t = c.default.formatDate(e);
                                        i.setLotteryRecentlyByKey(t);
                                    } else console.error('Call Server Time Error Occur');
                                });
                            }),
                            (e.prototype.setLotteryRecentlyByKey = function (e) {
                                if (!d.StringUtil.isNullOrUndefined(e)) {
                                    var t = l.default.read(u.default.LOTTERY_DATA_RECENTLY, '{}'),
                                        i = JSON.parse(t);
                                    i.hasOwnProperty(e) ? (i[e] = i[e] + 1) : (i[e] = 1);
                                    for (var o = Object.keys(i).sort(), n = 7; n < o.length; n++) delete i[o[n]];
                                    l.default.save(u.default.LOTTERY_DATA_RECENTLY, JSON.stringify(i));
                                }
                            }),
                            (e.prototype.getLotteryRecentlyBykey = function (e) {
                                var t = l.default.read(u.default.LOTTERY_DATA_RECENTLY, '{}'),
                                    i = JSON.parse(t);
                                return e && i.hasOwnProperty(e) ? i[e] : 0;
                            }),
                            (e.prototype.ServerDateNow = function () {
                                return new Promise(function (i) {
                                    n.MGUser.getCurrentServerRealTime({
                                        complete: function (e, t) {
                                            i(e ? t : 0);
                                        },
                                    });
                                });
                            }),
                            (e.prototype.hasLotteryYestoday = function () {
                                return __awaiter(this, void 0, Promise, function () {
                                    var t, i, o, n;
                                    return __generator(this, function (e) {
                                        switch (e.label) {
                                            case 0:
                                                return [4, this.ServerDateNow()];
                                            case 1:
                                                return 0 == (t = e.sent()) ? (console.error('Call Server Time Error Occur'), [2, !1]) : ((i = new Date(t)), (o = i.setDate(i.getDate() - 1)), (n = c.default.formatDate(o)), [2, 0 < this.getLotteryRecentlyBykey(n)]);
                                        }
                                    });
                                });
                            }),
                            (e.prototype.setLotteryYestoday = function () {
                                var n = this;
                                this.ServerDateNow().then(function (e) {
                                    if (0 != e) {
                                        var t = new Date(e),
                                            i = t.setDate(t.getDate() - 1),
                                            o = c.default.formatDate(i);
                                        n.setLotteryRecentlyByKey(o);
                                    } else console.error('Call Server Time Error Occur');
                                });
                            }),
                            e
                        );
                    })();
                (i.LotteryProcess = a), cc._RF.pop();
            },
            {
                '../../../modules/MGAdv/scripts/Logic/MGAdvDefine': 'MGAdvDefine',
                '../../../modules/MGAdv/scripts/Logic/MGAdvEntrance': 'MGAdvEntrance',
                '../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../base/Log': 'Log',
                '../../config/LSKey': 'LSKey',
                '../../util/StringUtil': 'StringUtil',
                '../../util/TimeUtil': 'TimeUtil',
                '../Network/Protocol/StorageUtil': 'StorageUtil',
                './LotteryHandler': 'LotteryHandler',
            },
        ],
        LotteryRoll: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '95604c0xgJEK7xQSPjypywS', 'LotteryRoll'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {
                        (this.index = 0), (this.count = 8), (this.timer = 0), (this.speed = 70), (this.times = 0), (this.cycle = 30), (this.prize = -1);
                    }
                    return (
                        (e.prototype.start = function (e) {
                            try {
                                if (!e) return;
                                var t = this.index,
                                    i = this.count,
                                    o = e[t];
                                o && o.children && (o.getChildByName('active').active = !1), i - 1 < (t += 1) && (t = 0);
                                var n = e[t];
                                n && o.children && (n.getChildByName('active').active = !0), (this.index = t);
                            } catch (e) {
                                console.log('--- roll start err---', e);
                            }
                        }),
                        (e.prototype.stop = function (e) {
                            this.prize = e;
                        }),
                        e
                    );
                })();
                (i.LotteryRoll = o), cc._RF.pop();
            },
            {},
        ],
        LotteryTask: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '9a152BE0FtFR4uTo0ofy5Y0', 'LotteryTask'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return __extends(t, e), (t.prototype.initTask = function (e) {}), t;
                })(e('../SkinTaskItem').default);
                (i.default = o), cc._RF.pop();
            },
            {
                '../SkinTaskItem': 'SkinTaskItem',
            },
        ],
        LotteryVM: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '0ea48yhcOxKXJ71QJbOU6vv', 'LotteryVM'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {}
                    return (
                        (e.prototype.getId = function () {
                            return this.id;
                        }),
                        (e.prototype.setId = function (e) {
                            e && (this.id = e);
                        }),
                        (e.prototype.getChanceMin = function () {
                            return this.chanceMin;
                        }),
                        (e.prototype.setChanceMin = function (e) {
                            e && (this.chanceMin = e);
                        }),
                        (e.prototype.getChanceMax = function () {
                            return this.chanceMax;
                        }),
                        (e.prototype.setChanceMax = function (e) {
                            e && (this.chanceMax = e);
                        }),
                        (e.prototype.getCount = function () {
                            return this.count;
                        }),
                        (e.prototype.setCount = function (e) {
                            e && (this.count = e);
                        }),
                        (e.prototype.getIcon = function () {
                            return this.icon;
                        }),
                        (e.prototype.setIcon = function (e) {
                            e && (this.icon = e);
                        }),
                        (e.prototype.setRewardType = function (e) {
                            e && (this.rewardType = e);
                        }),
                        (e.prototype.getRewardType = function () {
                            return this.rewardType;
                        }),
                        (e.prototype.setSkinType = function (e) {
                            e && (this.skinType = e);
                        }),
                        (e.prototype.getSkinType = function () {
                            return this.skinType;
                        }),
                        (e.prototype.setIndex = function (e) {
                            e && (this.index = e);
                        }),
                        (e.prototype.getIndex = function () {
                            return this.index;
                        }),
                        (e.prototype.setBigIcon = function (e) {
                            e && (this.bigIcon = e);
                        }),
                        (e.prototype.getBigIcon = function () {
                            return this.bigIcon;
                        }),
                        (e.prototype.setIsSkinPiece = function (e) {
                            this.isSkinPiece = e;
                        }),
                        (e.prototype.getIsSkinPiece = function () {
                            return this.isSkinPiece;
                        }),
                        e
                    );
                })();
                (i.LotteryVM = o), cc._RF.pop();
            },
            {},
        ],
        LvData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '5c875K9PlNCR7uksVP8cpMl', 'LvData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.findLv = function (e) {
                                return this.find('lv', e);
                            }),
                            (t.prototype.getRow = function () {
                                return new a();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.LvData = n;
                var a = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getLv = function () {
                            return this.getInt('lv');
                        }),
                        (t.prototype.getExp = function () {
                            return this.getInt('exp');
                        }),
                        (t.prototype.getRewarGold = function () {
                            return this.getInt('RewarGold');
                        }),
                        (t.prototype.getRewarLife = function () {
                            return this.getInt('RewarLife');
                        }),
                        t
                    );
                })(o.default);
                (i.LvRow = a), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        MActionFactory: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '2c318aaNMlCtpG1PELWjEn8', 'MActionFactory'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./MScaleBy'),
                    n = e('./MScaleTo'),
                    a = e('./MFadeTo'),
                    r = e('./MMoveTo'),
                    s = e('./MMoveBy'),
                    c = e('./MSequence'),
                    l = e('./MSpawn'),
                    u = e('./MAdvanceAnimation'),
                    d = e('./MFrameSequence'),
                    p = e('./MChildAction'),
                    h = e('./MPropValue'),
                    f = e('./MCircleMoveBy'),
                    m = e('./MCircleMoveTo'),
                    g = e('./MDelay'),
                    _ = e('./MRandomMove'),
                    y = e('./MRandomFade'),
                    S = e('./MRandomScale'),
                    v = e('./MRandomChange'),
                    I = e('../../MUI/MUIDefines'),
                    T = e('./MSetProperty'),
                    C = e('./MCallFunc'),
                    E = (function () {
                        function e() {
                            (this.nameToIdMap = new Object()), (this.nameToIdMap.MAdvanceAnimation = I.MUI.ActionId.AdvanceAnimation), (this.nameToIdMap.MBlink = I.MUI.ActionId.Blink), (this.nameToIdMap.MCallFunc = I.MUI.ActionId.CallFunc), (this.nameToIdMap.MChildAction = I.MUI.ActionId.ChildAction), (this.nameToIdMap.MCircleMoveBy = I.MUI.ActionId.CircleMoveBy), (this.nameToIdMap.MCircleMoveTo = I.MUI.ActionId.CircleMoveTo), (this.nameToIdMap.MDelay = I.MUI.ActionId.Delay), (this.nameToIdMap.MFadeTo = I.MUI.ActionId.FadeTo), (this.nameToIdMap.MFrameSequence = I.MUI.ActionId.FrameSequence), (this.nameToIdMap.MMoveBy = I.MUI.ActionId.MoveBy), (this.nameToIdMap.MMoveTo = I.MUI.ActionId.MoveTo), (this.nameToIdMap.MPropValue = I.MUI.ActionId.PropValue), (this.nameToIdMap.MRandomChange = I.MUI.ActionId.RandomChange), (this.nameToIdMap.MRandomFade = I.MUI.ActionId.RandomFade), (this.nameToIdMap.MRandomMove = I.MUI.ActionId.RandomMove), (this.nameToIdMap.MRandomScale = I.MUI.ActionId.RandomScale), (this.nameToIdMap.MResizeBy = I.MUI.ActionId.ResizeBy), (this.nameToIdMap.MResizeTo = I.MUI.ActionId.ResizeTo), (this.nameToIdMap.MScaleBy = I.MUI.ActionId.ScaleBy), (this.nameToIdMap.MScaleTo = I.MUI.ActionId.ScaleTo), (this.nameToIdMap.MSelfDefine = I.MUI.ActionId.SelfDefine), (this.nameToIdMap.MSequence = I.MUI.ActionId.Sequence), (this.nameToIdMap.MSpawn = I.MUI.ActionId.Spawn), (this.nameToIdMap.MSetProperty = I.MUI.ActionId.SetProperty);
                        }
                        return (
                            (e.prototype.getIdByName = function (e) {
                                var t = this.nameToIdMap[e];
                                return null == t && (t = I.MUI.ActionId.None), t;
                            }),
                            (e.prototype.createMCallFuncAction = function (e) {
                                return new C.default(e);
                            }),
                            (e.prototype.createMChildAction = function (e, t) {
                                return new p.default(e, t);
                            }),
                            (e.prototype.createMDelayAction = function (e) {
                                return new g.default(e);
                            }),
                            (e.prototype.createMScaleTo = function (e, t, i) {
                                return new n.default(e, t, i);
                            }),
                            (e.prototype.createMScaleBy = function (e, t, i) {
                                return new o.default(e, t, i);
                            }),
                            (e.prototype.createMFadeTo = function (e, t) {
                                return new a.default(e, t);
                            }),
                            (e.prototype.createMMoveTo = function (e, t, i) {
                                return new r.default(e, t, i);
                            }),
                            (e.prototype.createMMoveBy = function (e, t, i) {
                                return new s.default(e, t, i);
                            }),
                            (e.prototype.createMCircleMoveTo = function (e, t, i, o) {
                                return new m.default(e, t, i, o);
                            }),
                            (e.prototype.createMCircleMoveBy = function (e, t, i, o) {
                                return new f.default(e, t, i, o);
                            }),
                            (e.prototype.createMPropValue = function (e, t) {
                                return new h.default(e, t);
                            }),
                            (e.prototype.createMAdvanceAnimation = function (e) {
                                return new u.default(e);
                            }),
                            (e.prototype.createMFrameSequence = function (e, t) {
                                return new d.default(e, t);
                            }),
                            (e.prototype.createMSequence = function () {
                                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                                return new (c.default.bind.apply(c.default, [void 0].concat(e)))();
                            }),
                            (e.prototype.createMSpawn = function () {
                                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                                return new (l.default.bind.apply(l.default, [void 0].concat(e)))();
                            }),
                            (e.prototype.createMRandomMove = function (e, t, i, o) {
                                return new _.default(e, t, i, o);
                            }),
                            (e.prototype.createMRandomFade = function (e, t) {
                                return new y.default(e, t);
                            }),
                            (e.prototype.createMRandomScale = function (e, t, i, o) {
                                return new S.default(e, t, i, o);
                            }),
                            (e.prototype.createMRandomChange = function (e, t, i, o, n, a, r, s, c, l, u, d, p, h, f, m, g, _, y) {
                                return new v.default(e, t, i, o, n, a, r, s, c, l, u, d, p, h, f, m, g, _, y);
                            }),
                            (e.prototype.createMSetProperty = function (e) {
                                return new T.default(e);
                            }),
                            (e.instance = new e()),
                            e
                        );
                    })();
                (i.default = E), cc._RF.pop();
            },
            {
                '../../MUI/MUIDefines': 'MUIDefines',
                './MAdvanceAnimation': 'MAdvanceAnimation',
                './MCallFunc': 'MCallFunc',
                './MChildAction': 'MChildAction',
                './MCircleMoveBy': 'MCircleMoveBy',
                './MCircleMoveTo': 'MCircleMoveTo',
                './MDelay': 'MDelay',
                './MFadeTo': 'MFadeTo',
                './MFrameSequence': 'MFrameSequence',
                './MMoveBy': 'MMoveBy',
                './MMoveTo': 'MMoveTo',
                './MPropValue': 'MPropValue',
                './MRandomChange': 'MRandomChange',
                './MRandomFade': 'MRandomFade',
                './MRandomMove': 'MRandomMove',
                './MRandomScale': 'MRandomScale',
                './MScaleBy': 'MScaleBy',
                './MScaleTo': 'MScaleTo',
                './MSequence': 'MSequence',
                './MSetProperty': 'MSetProperty',
                './MSpawn': 'MSpawn',
            },
        ],
        MAction: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '5500fYapYBIZKfj4uc/AvHV', 'MAction'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e(e) {
                        (this.name = ''), (this.duration = 0), (this.time = 0), (this.target = null), (this.duration = e);
                    }
                    return (
                        (e.prototype.getDuration = function () {
                            return this.duration;
                        }),
                        (e.prototype.getTime = function () {
                            return this.time;
                        }),
                        (e.prototype.getTarget = function () {
                            return this.target;
                        }),
                        (e.prototype.ready = function () {
                            (this.time = 0), (this.target = null);
                        }),
                        (e.prototype.start = function (e) {
                            this.target = e;
                        }),
                        (e.prototype.update = function (e) {
                            return (this.time += e), this.time >= this.duration;
                        }),
                        (e.prototype.last = function (e) {
                            this.target = null;
                        }),
                        (e.prototype.finish = function () {
                            return this.time >= this.duration;
                        }),
                        (e.prototype.stopForce = function () {
                            this.time = this.duration;
                        }),
                        (e.prototype.percent = function () {
                            return this.duration <= 0 ? 0 : this.time / this.duration;
                        }),
                        e
                    );
                })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        MAdvanceAnimation: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'afd989lj8pAHKJtbEKXlgGI', 'MAdvanceAnimation'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./MAction'),
                    n = e('./AnimationWork'),
                    a = e('../../../util/Utility'),
                    r = function () {
                        (this.node = null), (this.rect = new a.Utility.Rect(0, 0, 0, 0));
                    },
                    s = (function (s) {
                        function e(e) {
                            var t = s.call(this, 0) || this;
                            return (t.work = new n.default()), t.work.load(e), (t.duration = t.work._duration), t;
                        }
                        return (
                            __extends(e, s),
                            (e.prototype.ready = function () {
                                s.prototype.ready.call(this), (this.objectMap = null);
                            }),
                            (e.prototype.start = function (e) {
                                s.prototype.start.call(this, e), this.work.start();
                            }),
                            (e.prototype.update = function (e) {
                                var t = s.prototype.update.call(this, e);
                                if ((this.work.update(e), this.target))
                                    for (var i in this.work._allValues) {
                                        var o = this.work._allValues[i],
                                            n = this.getNodeAndCache(i);
                                        if (null != n)
                                            for (var a in o)
                                                if ('scale' === a) {
                                                    var r = o[a];
                                                    n.node.setScale(r.x);
                                                } else if ('position' === a) {
                                                    r = o[a];
                                                    n.node.setPosition(r.x + n.rect.x, r.y + n.rect.y);
                                                } else if ('x' === a) {
                                                    r = o[a];
                                                    n.node.setPositionX(r + n.rect.x);
                                                } else if ('y' === a) {
                                                    r = o[a];
                                                    n.node.setPositionY(r + n.rect.y);
                                                } else if ('opacity' === a) {
                                                    r = o[a];
                                                    n.node.setOpacity(r / 255);
                                                } else if ('rotation' === a) {
                                                    r = o[a];
                                                    n.node.setRotation((r / 360) * Math.PI);
                                                }
                                    }
                                return t;
                            }),
                            (e.prototype.last = function (e) {
                                for (var t in (void 0 === e && (e = !1), this.objectMap)) {
                                    var i = this.objectMap[t];
                                    i.node.move(i.rect.x, i.rect.y, i.rect.width, i.rect.height);
                                }
                                (this.objectMap = null), s.prototype.last.call(this, e);
                            }),
                            (e.prototype.getNodeAndCache = function (e) {
                                null == this.objectMap && (this.objectMap = new Object());
                                var t = this.objectMap[e];
                                if (null == t) {
                                    var i = this.target,
                                        o = null;
                                    (o = 'root' === e ? i : i.getChildByName(e)) && (((t = new r()).node = o), t.rect.copy(t.node.getRect()), (this.objectMap[e] = t));
                                }
                                return t;
                            }),
                            e
                        );
                    })(o.default);
                (i.default = s), cc._RF.pop();
            },
            {
                '../../../util/Utility': 'Utility',
                './AnimationWork': 'AnimationWork',
                './MAction': 'MAction',
            },
        ],
        MAnimationMgr: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'aa7eaKTtmVMtI/b6oxkKZhI', 'MAnimationMgr'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = function () {
                        (this.data = null), (this.repeat = !1), (this.deleted = !1);
                    },
                    o = (function () {
                        function e() {
                            this.actionItems = [];
                        }
                        return (
                            (e.prototype.update = function (e) {
                                for (var t = 0, i = this.actionItems.length; t < i; ++t) {
                                    if (!(n = this.actionItems[t]).deleted)
                                        if (n.data.update(e))
                                            if (n.repeat) {
                                                var o = n.data.getTarget();
                                                n.data.last(!1), n.data.ready(), n.data.start(o);
                                            } else n.data.last(!1), (n.deleted = !0);
                                }
                                for (t = 0, i = this.actionItems.length; t < i; ++t) {
                                    var n;
                                    (n = this.actionItems[t]).deleted && (this.actionItems.splice(t, 1), --t, --i);
                                }
                            }),
                            (e.prototype.runAction = function (e, t, i) {
                                if ((void 0 === i && (i = null), !t || !e)) return null;
                                t.getTarget() && this.stopAction(t), i && (t.name = i), t.ready(), t.start(e);
                                var o = new n();
                                return (o.data = t), this.actionItems.push(o), o;
                            }),
                            (e.prototype.runActionRepeat = function (e, t, i) {
                                void 0 === i && (i = null);
                                var o = this.runAction(e, t, i);
                                o && (o.repeat = !0);
                            }),
                            (e.prototype.stopAction = function (e) {
                                for (var t = 0, i = this.actionItems.length; t < i; ++t) {
                                    var o = this.actionItems[t];
                                    if (e == o.data) return (o.deleted = !0), o.data.last(!0), !0;
                                }
                                return !1;
                            }),
                            (e.prototype.stopActionByName = function (e) {
                                for (var t = 0, i = this.actionItems.length; t < i; ++t) {
                                    var o = this.actionItems[t];
                                    if (o.data.name === e) return (o.deleted = !0), o.data.last(!0), !0;
                                }
                                return !1;
                            }),
                            (e.prototype.stopTargetActions = function (e) {
                                for (var t = !1, i = 0, o = this.actionItems.length; i < o; ++i) {
                                    var n = this.actionItems[i];
                                    n.data.getTarget() == e && ((n.deleted = !0), n.data.last(!0), (t = !0));
                                }
                                return t;
                            }),
                            (e.prototype.stopAllActions = function () {
                                for (var e = 0, t = this.actionItems.length; e < t; ++e) {
                                    var i = this.actionItems[e];
                                    (i.deleted = !0), i.data.last(!0);
                                }
                            }),
                            e
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        MBlink: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'd1713FiOE1JNaF0ykUHyX6m', 'MBlink'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (a) {
                    function e(e, t) {
                        var i = a.call(this, t) || this;
                        return (i.currentFrame = 0), (i.frameCount = 2 * e), i;
                    }
                    return (
                        __extends(e, a),
                        (e.prototype.ready = function () {
                            a.prototype.ready.call(this), (this.currentFrame = 0);
                        }),
                        (e.prototype.update = function (e) {
                            var t = a.prototype.update.call(this, e),
                                i = Math.floor(this.percent() * this.frameCount);
                            if (i > this.currentFrame) {
                                this.currentFrame = i;
                                var o = this.target;
                                if (o) {
                                    var n = !o.getVisible();
                                    o.setVisible(n);
                                }
                            }
                            return t;
                        }),
                        (e.prototype.stopForce = function () {
                            a.prototype.stopForce.call(this), (this.currentFrame = this.frameCount);
                        }),
                        e
                    );
                })(e('./MAction').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './MAction': 'MAction',
            },
        ],
        MCallFunc: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '141aeEpNkdAyos3PyNbe0WS', 'MCallFunc'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (i) {
                    function e(e) {
                        var t = i.call(this, 0) || this;
                        return (t.cb = null), (t.executed = !1), (t.cb = e), t;
                    }
                    return (
                        __extends(e, i),
                        (e.prototype.ready = function () {
                            i.prototype.ready.call(this), (this.executed = !1);
                        }),
                        (e.prototype.update = function (e) {
                            return i.prototype.update.call(this, e), this.cb && this.cb(), (this.executed = !0);
                        }),
                        (e.prototype.finish = function () {
                            return this.executed;
                        }),
                        e
                    );
                })(e('./MAction').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './MAction': 'MAction',
            },
        ],
        MChildAction: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'c4ce61l1lZHCrOpLTNIxwk3', 'MChildAction'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (o) {
                    function e(e, t) {
                        var i = o.call(this, t.getDuration()) || this;
                        return (i.childName = e), (i.childNode = null), (i.innerAction = t), i;
                    }
                    return (
                        __extends(e, o),
                        (e.prototype.ready = function () {
                            o.prototype.ready.call(this), (this.childNode = null), this.innerAction.ready();
                        }),
                        (e.prototype.start = function (e) {
                            o.prototype.start.call(this, e), (this.childNode = e.getChildByName(this.childName)), this.innerAction.start(this.childNode);
                        }),
                        (e.prototype.update = function (e) {
                            return (this.time += e), this.innerAction.update(e);
                        }),
                        (e.prototype.last = function (e) {
                            o.prototype.last.call(this, e), (this.childNode = null), this.innerAction.last(e);
                        }),
                        (e.prototype.stopForce = function () {
                            o.prototype.stopForce.call(this), this.innerAction.stopForce();
                        }),
                        e
                    );
                })(e('./MAction').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './MAction': 'MAction',
            },
        ],
        MCircleMoveBy: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '33a6f/1jMBOVKwborLoYilH', 'MCircleMoveBy'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (r) {
                    function e(e, t, i, o) {
                        var n = r.call(this, o) || this;
                        return (n.origRadians = 0), (n.byRadians = 0), (n.radius = 0), (n.centerX = 0), (n.centerY = 0), (n.centerX = e), (n.centerY = t), (n.byRadians = cc.degreesToRadians(i)), n;
                    }
                    return (
                        __extends(e, r),
                        (e.prototype.ready = function () {
                            r.prototype.ready.call(this), (this.radius = 0), (this.origRadians = 0);
                        }),
                        (e.prototype.start = function (e) {
                            r.prototype.start.call(this, e);
                            var t = this.target;
                            if (t) {
                                t.getRect();
                                var i = this.centerX,
                                    o = this.centerY;
                                (this.radius = cc.pDistance(new cc.Vec2(0, 0), new cc.Vec2(this.centerX, this.centerY))), (this.origRadians = Math.atan2(o, i));
                            }
                        }),
                        (e.prototype.update = function (e) {
                            var t = r.prototype.update.call(this, e),
                                i = this.target;
                            if (i) {
                                var o = this.origRadians + this.byRadians * this.percent(),
                                    n = this.centerX + this.radius * Math.cos(o),
                                    a = this.centerY + this.radius * Math.sin(o);
                                i.move(n, a);
                            }
                            return t;
                        }),
                        e
                    );
                })(e('./MAction').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './MAction': 'MAction',
            },
        ],
        MCircleMoveTo: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'e13d10oOSlPprMQLjwBk5tM', 'MCircleMoveTo'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (n) {
                    function e(e, t, i, o) {
                        return n.call(this, e, t, i, o) || this;
                    }
                    return (
                        __extends(e, n),
                        (e.prototype.start = function (e) {
                            n.prototype.start.call(this, e), (this.byRadians = this.byRadians - this.origRadians);
                        }),
                        e
                    );
                })(e('./MCircleMoveBy').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './MCircleMoveBy': 'MCircleMoveBy',
            },
        ],
        MDelay: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'bbee5CqkHdOTqE8D97to3/v', 'MDelay'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (t) {
                    function e(e) {
                        return t.call(this, e) || this;
                    }
                    return __extends(e, t), e;
                })(e('./MAction').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './MAction': 'MAction',
            },
        ],
        MFadeTo: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '7e19aTYxrNK/LRVWjZfN6lL', 'MFadeTo'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (n) {
                    function e(e, t) {
                        var i = n.call(this, t) || this;
                        return (i.originOpacity = 0), (i.destOpacity = 0), (i.deltaOpacity = 0), (i.destOpacity = e), i;
                    }
                    return (
                        __extends(e, n),
                        (e.prototype.ready = function () {
                            n.prototype.ready.call(this), (this.originOpacity = 0), (this.deltaOpacity = 0);
                        }),
                        (e.prototype.start = function (e) {
                            n.prototype.start.call(this, e);
                            var t = this.target;
                            t && ((this.originOpacity = t.getOpacity()), (this.deltaOpacity = this.destOpacity - this.originOpacity));
                        }),
                        (e.prototype.update = function (e) {
                            var t = n.prototype.update.call(this, e),
                                i = this.target;
                            if (i) {
                                var o = this.deltaOpacity * this.percent() + this.originOpacity;
                                i.setOpacity(o);
                            }
                            return t;
                        }),
                        e
                    );
                })(e('./MAction').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './MAction': 'MAction',
            },
        ],
        MFrameSequence: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '05e33HBfMZO7YJve1FPp4CI', 'MFrameSequence'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (n) {
                    function e(e, t) {
                        var i = n.call(this, t) || this;
                        return (i.currentFrame = 0), (i.frameCount = e), i;
                    }
                    return (
                        __extends(e, n),
                        (e.prototype.ready = function () {
                            n.prototype.ready.call(this), (this.currentFrame = 0);
                        }),
                        (e.prototype.update = function (e) {
                            var t = n.prototype.update.call(this, e),
                                i = Math.floor(this.percent() * this.frameCount);
                            if (i > this.currentFrame) {
                                this.currentFrame = i;
                                var o = this.target;
                                o && o.setFrame(i);
                            }
                            return t;
                        }),
                        (e.prototype.stopForce = function () {
                            n.prototype.stopForce.call(this), (this.currentFrame = this.frameCount);
                        }),
                        (e.prototype.last = function (e) {
                            n.prototype.last.call(this, e), this.currentFrame != this.frameCount && console.warn('this.currentFrame != this.frameCount');
                        }),
                        e
                    );
                })(e('./MAction').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './MAction': 'MAction',
            },
        ],
        MGAdUnitManager: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'dae1bwDz/5IbpeaK7Cuuggm', 'MGAdUnitManager'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../scripts/base/Log'),
                    n = e('../../scripts/LogicPlatform/PlatformProxy'),
                    a = e('../MGBasic/scripts/Logic/MGBasicEntrance'),
                    r = (function () {
                        function e() {
                            (this.mData = null), (this.inited = !1);
                        }
                        return (
                            (e.Instance = function () {
                                return null == e.sinstance && (e.sinstance = new e()).init(), e.sinstance;
                            }),
                            (e.prototype.init = function () {
                                this.getConfig();
                            }),
                            (e.prototype.getConfig = function () {
                                var t = this;
                                this.requestCfg(
                                    function (e) {
                                        (t.mData = e), (t.inited = !0);
                                    },
                                    function () {
                                        t.inited = !0;
                                    },
                                );
                            }),
                            (e.prototype.getBannerAdUnit = function (e, t) {
                                if (!this.inited) return t;
                                var i = this.getObjByChannel(e);
                                if (!i) return t;
                                if (i.hasOwnProperty('banner') && i.hasOwnProperty('begin_time') && i.hasOwnProperty('end_time')) {
                                    var o = i.begin_time,
                                        n = i.end_time,
                                        a = i.banner;
                                    if (o && n) {
                                        var r = new Date(),
                                            s = new Date(o);
                                        if (r < new Date(n) && s < r) return a;
                                    }
                                    return t;
                                }
                                return t;
                            }),
                            (e.prototype.getVideoAdUnit = function (e, t) {
                                if (!this.inited) return t;
                                var i = this.getObjByChannel(e);
                                if (!i) return t;
                                if (i.hasOwnProperty('video') && i.hasOwnProperty('begin_time') && i.hasOwnProperty('end_time')) {
                                    var o = i.begin_time,
                                        n = i.end_time,
                                        a = i.video;
                                    if (o && n) {
                                        var r = new Date(),
                                            s = new Date(o);
                                        if (r < new Date(n) && s < r) return a;
                                    }
                                    return t;
                                }
                                return t;
                            }),
                            (e.prototype.getObjByChannel = function (e) {
                                if (!this.mData || !e) return null;
                                for (var t = 0; t < this.mData.length; t++) {
                                    var i = this.mData[t];
                                    if (i) if (i.hasOwnProperty('channel')) if (e === i.channel) return i;
                                }
                            }),
                            (e.prototype.uinit = function () {
                                (this.mData = null), (this.inited = !1);
                            }),
                            (e.prototype.requestCfg = function (t, i) {
                                n.default.Ins().downloadFile(
                                    e.CFG_URL,
                                    function (e) {
                                        a.MGBasic.readFile({
                                            filePath: e,
                                            encoding: 'utf8',
                                            success: function (e) {
                                                t(e);
                                            },
                                            fail: function () {
                                                i();
                                            },
                                        });
                                    },
                                    function () {
                                        o.default.e('download failed.' + e.CFG_URL), i();
                                    },
                                    0,
                                    !1,
                                );
                            }),
                            (e.sinstance = null),
                            (e.CFG_URL = 'https://piano-weixin-game.cmcm.com/pianotiles2/mammon/channel_adunit_cfg.json'),
                            e
                        );
                    })();
                (i.default = r), cc._RF.pop();
            },
            {
                '../../scripts/LogicPlatform/PlatformProxy': 'PlatformProxy',
                '../../scripts/base/Log': 'Log',
                '../MGBasic/scripts/Logic/MGBasicEntrance': 'MGBasicEntrance',
            },
        ],
        MGAdvDefine: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '143a9pExjdID6jNoqh35C3H', 'MGAdvDefine'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {}
                    return (e.NONE = -2), (e.NOT_SUPPORT = -1), (e.NOT_NETWORK = 0), (e.LOAD_SUCCESS = 1), (e.LOAD_FAILED = 2), (e.SHOW_SUCCESS_CLOSE = 3), (e.SHOW_NOT_ENED_CLOSE = 4), (e.SHOW_GET_AD_FAILED = 5), (e.SHOWING_PAGE = 6), (e.CLICK_BANNER = 7), e;
                })();
                i.ADStat = o;
                var n = (function () {
                    function e() {}
                    return (e.GET_DIAMOND_POPUP = 1), (e.GET_ENERGY_POPUP = 2), (e.RELIVE_POPUP = 3), (e.NORMAL_RESULT_REWARD = 4), (e.CHALLENGE_RESULT_REWARD = 5), (e.PLAY_GAME = 40), (e.PLAY_AGAIN = 41), (e.LOTTERY_RESULT_REWARD = 6), (e.LOTTERY = 7), (e.GAME_RESULT_BANNER = 8), (e.BATTLE_MAIN_PAGE = 9), (e.GAME_SCENE_REWARD_PROP = 10), (e.FIGHT_RESULT_BANNER = 11), (e.DAILY_ATTENDANCE_CHECKIN = 12), (e.SCENE_VIDEO_PRIZE_PROPERTY = 13), (e.LOTTERY_DOUBLE_AWARD = 14), (e.SCENE_VIDEO_FIGHT_RESULT = 15), (e.SCENE_CHANLENGE_FLAUNT_RESULT = 16), (e.SCENE_SINGLESONG_FLAUNT_RESULT = 17), (e.SCENE_VIDEO_RELIVE_NORMAL = 18), (e.SCENE_VIDEO_RELIVE_CHALLENGE = 19), (e.SCENE_FIGHT_FAILED = 20), (e.SCENE_FIGHT_WIN2 = 21), (e.SCENE_SKIN_TASK = 22), (e.SCENE_PLAYING_DASH = 24), (e.SCENE_PLAYING_SLOW = 25), (e.SCENE_PLAYING_COUNTERACT = 26), (e.SCENE_LOTTERY_FREE = 27), (e.SOURCE_RELIVE_WITH_DASH_NORMAL = 23), (e.SOURCE_RELIVE_WITH_SHEILD_NORMAL = 30), (e.SOURCE_RELIVE_WITH_DASH_CHALLENG = 28), (e.SOURCE_RELIVE_WITH_SHEILD_CHALLENG = 29), (e.SOURCE_NORMAL_RESULT_BANNER_DYNAMIC = 31), (e.SOURCE_DAILY_ATTENDANCE_FRONT = 32), (e.SOURCE_LOTTERY_BANNER = 33), (e.SOURCE_DAILY_WELFARE = 34), (e.SOURCE_SHOW_AWARD = 35), (e.SOURCE_DAILY_AWARD = 36), (e.SOURCE_FIGHT_RESULT_SHOW_OFF = 37), (e.SCENE_CM_PLAY_SKIN_WATCH_ADS = 38), (e.SOURCE_HOTMUSIC_UNLOCK = 39), e;
                })();
                i.ADScene = n;
                var a = (function () {
                    function e() {}
                    return (e.VIDEO_TYPE_GAME_BANNER = 0), (e.VIDEO_TYPE_GAME_OVER = 1), (e.VIDEO_TYPE_GAME_TASK = 2), (e.VIDEO_TYPE_GAME_RELIVE = 3), (e.VIDEO_TYPE_HOTMUSIC_UNLOCK = 4), (e.VIDEO_TYPE_SKIN_UNLOCK = 5), (e.VIDEO_TYPE_PLAY_GAME = 6), (e.VIDEO_TYPE_PLAY_AGAIN = 7), e;
                })();
                i.QQ_ADV_TYPE = a;
                var r = (function () {
                    function e() {}
                    return (e.STATIC_BANNER = 1001), (e.DYNAMIC_BANNER = 1002), (e.GDT_BANNER = 1003), e;
                })();
                (i.QQ_BANNER_TYPE = r), cc._RF.pop();
            },
            {},
        ],
        MGAdvEntrance: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '9f057DA6RtFrpjX4YRso3pK', 'MGAdvEntrance'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('./MGAdvDefine'),
                    a = e('../Adapter/AdvHelperCMplay'),
                    o = (function () {
                        function o() {
                            (this.mLastGetADFailedTime = 0), (this.mCurrentBannerScene = -1);
                        }
                        return (
                            (o.prototype.init = function (e) {
                                (this.mMGAdvHelper = new a.default(e)), this.mMGAdvHelper.init();
                            }),
                            (o.prototype.isADFeatureEnable = function () {
                                return this.mMGAdvHelper.isEnable();
                            }),
                            (o.prototype.load = function (e, t, i) {
                                this.isADCached(t)
                                    ? i && i(n.ADStat.LOAD_SUCCESS)
                                    : this.doLoad(t, function (e, t) {
                                          i && i(e);
                                      });
                            }),
                            (o.prototype.doLoad = function (e, t) {
                                0 != this.isADFeatureEnable() ? (0 != this.isNetWorkConnected() ? this.mMGAdvHelper && this.mMGAdvHelper.load(e, t) : t && t(n.ADStat.NOT_NETWORK)) : t && t(n.ADStat.NOT_SUPPORT);
                            }),
                            (o.isClickRVAdTooMuch = function () {
                                var e,
                                    t = Date.now();
                                return (e = t - o.timeClickRVBtnLast < 2e3), (o.timeClickRVBtnLast = t), e && MGB.Log.i('MGB_DEBUG', 'click video btn too much.'), e;
                            }),
                            (o.prototype.show = function (e, t, i) {
                                o.isClickRVAdTooMuch()
                                    ? MGB.Log.i('MGB_DEBUG', 'click reward video button too much.')
                                    : this.doShow(
                                          t,
                                          function (e, t) {
                                              i && i(e);
                                          },
                                          e,
                                      );
                            }),
                            (o.prototype.commercialBreak = function (e, t, i) {
                                o.isClickRVAdTooMuch()
                                    ? MGB.Log.i('MGB_DEBUG', 'click commercialBreak button too much.')
                                    : 0 != this.isNetWorkConnected()
                                    ? this.mMGAdvHelper.commercialBreak(
                                          t,
                                          function (e, t) {
                                              i && i(e, t);
                                          },
                                          e,
                                      )
                                    : i && i(n.ADStat.NOT_NETWORK);
                            }),
                            (o.prototype.gameplayStart = function () {
                                0 != this.isNetWorkConnected() && this.mMGAdvHelper.gameplayStart();
                            }),
                            (o.prototype.gameplayStop = function () {
                                0 != this.isNetWorkConnected() && this.mMGAdvHelper.gameplayStop();
                            }),
                            (o.prototype.roundStart = function (e) {
                                0 != this.isNetWorkConnected() && this.mMGAdvHelper.roundStart(e);
                            }),
                            (o.prototype.roundEnd = function (e) {
                                0 != this.isNetWorkConnected() && this.mMGAdvHelper.roundEnd(e);
                            }),
                            (o.prototype.displayAD = function (e) {
                                void 0 === e && (e = !0), 0 != this.isNetWorkConnected() && this.mMGAdvHelper.displayAD(e);
                            }),
                            (o.prototype.customEvent = function (e, t, i) {
                                0 != this.isNetWorkConnected() && this.mMGAdvHelper.customEvent(e, t, i);
                            }),
                            (o.prototype.doShow = function (e, i, t) {
                                var o = this;
                                0 != this.isADFeatureEnable()
                                    ? 0 != this.isNetWorkConnected()
                                        ? this.mMGAdvHelper.show(
                                              e,
                                              function (e, t) {
                                                  e === n.ADStat.SHOW_GET_AD_FAILED && (o.mLastGetADFailedTime = new Date().getTime()), i && i(e, t);
                                              },
                                              t,
                                          )
                                        : i && i(n.ADStat.NOT_NETWORK)
                                    : i && i(n.ADStat.NOT_SUPPORT);
                            }),
                            (o.prototype.isNetWorkConnected = function () {
                                return this.mMGAdvHelper.isNetWorkConnected();
                            }),
                            (o.prototype.isADCached = function (e) {
                                return !!this.mMGAdvHelper && this.mMGAdvHelper.isADCached(e);
                            }),
                            (o.prototype.lastFailIs30Minutes = function () {
                                return 0 == this.mLastGetADFailedTime || new Date().getTime() - this.mLastGetADFailedTime >= o.LAST_FAILS_TIME_INTERVAL;
                            }),
                            (o.prototype.isBannerShow = function () {
                                return -1 != this.mCurrentBannerScene;
                            }),
                            (o.prototype.loadBanner = function (e, t, i, o, n, a) {
                                console.log('MGAdv loadBanner'), this.mMGAdvHelper.loadBanner(e, t, i, o, n, a), (this.mCurrentBannerScene = n || 0);
                            }),
                            (o.prototype.showBanner = function (e, o) {
                                console.log('MGAdv showBanner'),
                                    0 != this.isADFeatureEnable()
                                        ? 0 != this.isNetWorkConnected()
                                            ? ((this.mCurrentBannerScene = e),
                                              this.mMGAdvHelper.showBanner(
                                                  function (e, t, i) {
                                                      o && o(n.ADStat.SHOWING_PAGE, t, i);
                                                  },
                                                  function () {},
                                                  null,
                                                  e,
                                              ))
                                            : o && o(n.ADStat.NOT_NETWORK)
                                        : o && o(n.ADStat.NOT_SUPPORT);
                            }),
                            (o.prototype.hideBanner = function (e) {
                                this.mMGAdvHelper.hideBanner(e);
                            }),
                            (o.prototype.destroyBanner = function (e) {
                                this.mMGAdvHelper.destoryBanner(e), e == this.mCurrentBannerScene && (this.mCurrentBannerScene = -1);
                            }),
                            (o.prototype.isBannerCached = function (e) {
                                return console.log('MGAdv isBannerCache: ' + (this.mMGAdvHelper && this.mMGAdvHelper.isBannerCached())), this.mMGAdvHelper.isBannerCached(e);
                            }),
                            (o.prototype.isOverPageBannerShow = function () {
                                return this.mMGAdvHelper.isOverPageBannerShowed();
                            }),
                            (o.LAST_FAILS_TIME_INTERVAL = 18e5),
                            (o.timeClickRVBtnLast = 0),
                            o
                        );
                    })();
                (i.default = o), (i.MGAdv = new o()), cc._RF.pop();
            },
            {
                '../Adapter/AdvHelperCMplay': 'AdvHelperCMplay',
                './MGAdvDefine': 'MGAdvDefine',
            },
        ],
        MGAdvHelper: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '4a070Ww58FBHrk33U4RH09j', 'MGAdvHelper'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e(e) {
                        this.mPlatformType = e;
                    }
                    return (
                        (e.prototype.getPlatformType = function () {
                            return this.mPlatformType;
                        }),
                        e
                    );
                })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        MGAppShare: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '3a799ulyEFO+YB4EK54+f+3', 'MGAppShare'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./Utils'),
                    r = e('../../../scripts/util/PU'),
                    n = e('../../../scripts/base/Log'),
                    a = (function () {
                        function i() {}
                        return (
                            (i.share = function (e, t) {
                                if ((n.default.i('[MGAppShare] share : ' + (e ? JSON.stringify(e) : '')), !i.mShareAdapter))
                                    if (cc.sys.platform == cc.sys.WECHAT_GAME) i.mShareAdapter = new l();
                                    else if (cc.sys.platform == cc.sys.QQ_PLAY) i.mShareAdapter = new c();
                                    else {
                                        if (!r.default.isCM)
                                            return void (
                                                t &&
                                                t({
                                                    result: !1,
                                                })
                                            );
                                        i.mShareAdapter = new u();
                                    }
                                cc.sys.platform == cc.sys.WECHAT_GAME && (e.query && e.type ? (e.query += '&src=' + e.type) : e.type && (e.query = 'src=' + e.type)), i.mShareAdapter.share(e, t);
                            }),
                            (i.initShare = function (t, i, o, n) {
                                var a = this;
                                r.default.isWeiXin() &&
                                    this.showShareMenu(!0, function (e) {
                                        e ? a.onShareAppMessage(t, i, o, n) : n && n(!1);
                                    });
                            }),
                            (i.showShareMenu = function (e, t) {
                                wx.showShareMenu({
                                    withShareTicket: e,
                                    success: function () {
                                        t && t(!0);
                                    },
                                    fail: function () {
                                        t && t(!1);
                                    },
                                });
                            }),
                            (i.onShareAppMessage = function (i, o, n, a) {
                                wx.onShareAppMessage(function (e, t) {
                                    return {
                                        title: i,
                                        imageUrl: o,
                                        query: n,
                                        success: function () {
                                            a && a(!0);
                                        },
                                        fail: function () {
                                            a && a(!1);
                                        },
                                    };
                                });
                            }),
                            i
                        );
                    })();
                i.default = a;
                var s = function () {},
                    c = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.share = function (e, t) {
                                e.imgUrlSocial ? (console.log('shareAppMessageWithDialog'), o.Utils.shareAppMessageWithDialog(e.title, e.imgUrl, e.imgUrlSocial, e.query, e.type, t)) : (console.log('shareAppMessageQQ'), o.Utils.shareAppMessageQQ(e.title, e.imgUrl, e.query, e.type, t));
                            }),
                            t
                        );
                    })(s),
                    l = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.share = function (e, t) {
                                o.Utils.shareAppMessageWX(e.title, e.imgUrl, e.query, t);
                            }),
                            t
                        );
                    })(s),
                    u = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.share = function (e, t) {
                                o.Utils.shareAppMessageCM(e.title, e.type, e.query, t);
                            }),
                            t
                        );
                    })(s);
                cc._RF.pop();
            },
            {
                '../../../scripts/base/Log': 'Log',
                '../../../scripts/util/PU': 'PU',
                './Utils': 'Utils',
            },
        ],
        MGBGiftBoxWrapper: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '4b0d4mlzOhB950s1vmwpv3/', 'MGBGiftBoxWrapper'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('../looper/Looper'),
                    a = e('./MGBSdkInit'),
                    o = (function () {
                        function o() {
                            (this.mRcmdDest = null), (this.mSprite = null), (this.mDlBrickesLooper = null);
                        }
                        return (
                            (o.prototype.initGiftBox = function (e, t, i) {
                                void 0 === i && (i = o.INTERVAL_TIME), a.default.initMGBSdk(t), (this.mSprite = e);
                                this.fetchData('1001102', !0, i);
                            }),
                            (o.prototype.fetchData = function (t, e, i) {
                                var o = this;
                                new MGB.MGBRcmd4GiftBox(t, {
                                    onReady: function (e) {
                                        MGRPT.minigame_common_ad.report(t, MGB.MGBAdAction.ACTION_BUTTON_SHOW, 0, MGB.MGBAdDefs.APTYPE_RCMD_GIFTBOX), o.startLoop(e, i);
                                    },
                                    onFailed: function () {
                                        e && (MGB.MGBRcmd4GiftBox.fillCache(o.localData4RcmdGiftBox()), o.fetchData(t, !1, i));
                                    },
                                });
                            }),
                            (o.prototype.startLoop = function (e, t) {
                                var i = this;
                                e &&
                                    ((this.mRcmdDest = e),
                                    this.mRcmdDest && this.loadIcon(this.startAnim.bind(this)),
                                    this.mDlBrickesLooper ||
                                        ((this.mDlBrickesLooper = new n.default()),
                                        this.mDlBrickesLooper.setWork(function () {
                                            i.mRcmdDest.next(), i.loadIcon(i.startAnim.bind(i));
                                        }),
                                        this.mDlBrickesLooper.start(t)),
                                    this.mSprite && this.mSprite.node && this.mSprite.node.on(cc.Node.EventType.TOUCH_END, this.onClickDestIcon.bind(this)));
                            }),
                            (o.prototype.loadIcon = function (i) {
                                if (this.mRcmdDest) {
                                    var e = this.mRcmdDest.getIconUrlCur();
                                    cc.loader.load(e, function (e, t) {
                                        i && i(e, t);
                                    });
                                }
                            }),
                            (o.prototype.startAnim = function (e, t) {
                                if (this.mSprite && !e) {
                                    this.mSprite.node.stopAllActions(), (this.mSprite.spriteFrame = new cc.SpriteFrame(t));
                                    var i = this.getAnimAction();
                                    this.mSprite.node.runAction(i), (this.mSprite.node.active = !0), (this.mSprite.node.width = 60), (this.mSprite.node.height = 80);
                                }
                            }),
                            (o.prototype.onClickDestIcon = function () {
                                var e = this;
                                setTimeout(function () {
                                    e.mRcmdDest.jump();
                                }, 0);
                            }),
                            (o.prototype.getAnimAction = function () {
                                var e = cc.scaleTo(0.3, 1.15),
                                    t = cc.scaleTo(0.2, 1.2),
                                    i = cc.scaleTo(0.5, 0.9),
                                    o = cc.scaleTo(0.3, 1),
                                    n = cc.scaleTo(0.5, 1);
                                return cc.repeatForever(cc.sequence(e, t, i, o, n));
                            }),
                            (o.prototype.onDestroy = function () {
                                this.mDlBrickesLooper && this.mDlBrickesLooper.stop(), this.mSprite && this.mSprite.node && this.mSprite.node.stopAllActions();
                            }),
                            (o.prototype.onHide = function () {
                                this.mDlBrickesLooper && this.mDlBrickesLooper.stop(), this.mSprite && this.mSprite.node && this.mSprite.node.pauseAllActions();
                            }),
                            (o.prototype.onShow = function (e) {
                                void 0 === e && (e = o.INTERVAL_TIME), this.mDlBrickesLooper && (this.mDlBrickesLooper.getStarted() || this.mDlBrickesLooper.start(e)), this.mSprite && this.mSprite.node && this.mSprite.node.resumeAllActions();
                            }),
                            (o.prototype.localData4RcmdGiftBox = function () {
                                return '{            "games": [                {                    "name": "BNB",                    "gameid_wx": "wx3ab3658aab34d7db",                    "gameid_qq": "3511",                    "icon": "https://piano-weixin-game.cmcm.com/pianotiles2/cfg/game_rcmd/2001/brickes.png"                },                {                    "name": "DL",                    "gameid_wx": "wxf976a9e8c25dedf2",                    "gameid_qq": "3091",                    "icon": "https://piano-weixin-game.cmcm.com/pianotiles2/cfg/game_rcmd/2001/dancinglineA.png"                }            ],            "posconfig": [                {                    "posid": 1001102,                    "start_pos": 0                },                {                    "posid": 1001103,                    "start_pos": 1                }            ]        }';
                            }),
                            (o.INTERVAL_TIME = 8),
                            o
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../looper/Looper': 'Looper',
                './MGBSdkInit': 'MGBSdkInit',
            },
        ],
        MGBSdkInit: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '1c792oNN1lONIHcZl6XFlp5', 'MGBSdkInit'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../base/GameInfoMgr'),
                    n = (function () {
                        function e() {}
                        return (
                            (e.initMGBSdk = function (e) {
                                if (!this.mbInited) {
                                    var t = o.GameInfoMgr.Ins().getInfo();
                                    MGB.MGBRcmdModule.inst().init(t.gameid), (this.mbInited = !0);
                                }
                            }),
                            (e.mbInited = !1),
                            e
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../../base/GameInfoMgr': 'GameInfoMgr',
            },
        ],
        MGBasicEntrance: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '16b091rE4RLrbmywr5PI0ag', 'MGBasicEntrance'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../Adapter/BasicHelperWX'),
                    n = e('../Adapter/BasicHelperQQ'),
                    a = e('../Adapter/BasicHelperFB'),
                    r = e('../Adapter/BasicHelperWeb'),
                    s = e('../../../MGUtils/TypeDefinition'),
                    c = e('../Adapter/BasicHelperCM'),
                    l = (function () {
                        function e() {}
                        return (
                            (e.prototype.init = function (e) {
                                switch (e) {
                                    case s.PlatformType.PLATFORM_H5SDK:
                                    case s.PlatformType.PLATFORM_GAMEHALL:
                                    case s.PlatformType.PLATFORM_WECHAT:
                                        this.mMGBasicHelper = new o.BasicHelperWX(e);
                                        break;
                                    case s.PlatformType.PLATFORM_FACEBOOK:
                                        this.mMGBasicHelper = new a.BasicHelperFB(e);
                                        break;
                                    case s.PlatformType.PLATFORM_QQPLAY:
                                        this.mMGBasicHelper = new n.BasicHelperQQ(e);
                                        break;
                                    case s.PlatformType.PLATFORM_CMPLAY:
                                        this.mMGBasicHelper = new c.BasicHelperCM(e);
                                        break;
                                    default:
                                        this.mMGBasicHelper = new r.BasicHelperWeb(e);
                                }
                            }),
                            (e.prototype.setStorage = function (e, t) {
                                return !!this.mMGBasicHelper && this.mMGBasicHelper.setStorage(e, t);
                            }),
                            (e.prototype.getStorage = function (e) {
                                return this.mMGBasicHelper ? this.mMGBasicHelper.getStorage(e) : '';
                            }),
                            (e.prototype.delStorage = function (e) {
                                return !!this.mMGBasicHelper && this.mMGBasicHelper.delStorage(e);
                            }),
                            (e.prototype.networkRequest = function (e) {
                                if (this.mMGBasicHelper) return this.mMGBasicHelper.networkRequest(e);
                            }),
                            (e.prototype.getLaunchParameter = function () {
                                return this.mMGBasicHelper ? this.mMGBasicHelper.getLaunchParameter() : new s.LaunchOption();
                            }),
                            (e.prototype.readFile = function (e) {
                                if (!this.mMGBasicHelper) return e.complete && e.complete(!1, null), void (e.fail && e.fail());
                                this.mMGBasicHelper.readFile(e);
                            }),
                            (e.prototype.navigateToMiniProgram = function (e) {
                                if (!this.mMGBasicHelper) return e.complete && e.complete(!1, null), void (e.fail && e.fail());
                                this.mMGBasicHelper.navigateToMiniProgram(e);
                            }),
                            (e.prototype.getChannelId = function () {
                                return this.mMGBasicHelper.getChannelId();
                            }),
                            e
                        );
                    })();
                (i.default = l), (i.MGBasic = new l()), cc._RF.pop();
            },
            {
                '../../../MGUtils/TypeDefinition': 'TypeDefinition',
                '../Adapter/BasicHelperCM': 'BasicHelperCM',
                '../Adapter/BasicHelperFB': 'BasicHelperFB',
                '../Adapter/BasicHelperQQ': 'BasicHelperQQ',
                '../Adapter/BasicHelperWX': 'BasicHelperWX',
                '../Adapter/BasicHelperWeb': 'BasicHelperWeb',
            },
        ],
        MGBasicHelper: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '87826w1lC1AkIP1lrV2av5Q', 'MGBasicHelper'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../MGUtils/NetworkUtils'),
                    n = (function () {
                        function e(e) {
                            this.mPlatformType = e;
                        }
                        return (
                            (e.prototype.networkRequest = function (i) {
                                o.default.request({
                                    platform: this.mPlatformType,
                                    url: i.url,
                                    data: i.data,
                                    header: i.header,
                                    method: i.method,
                                    dataType: i.dataType,
                                    token: i.token,
                                    checkAuthorization: i.checkAuthorization,
                                    success: function (e) {
                                        i.complete && i.complete(!0, e), i.success && i.success(e);
                                    },
                                    fail: function (e, t) {
                                        i.complete && i.complete(!1, t), i.fail && i.fail(e, t);
                                    },
                                });
                            }),
                            (e.prototype.getChannelId = function () {
                                return '';
                            }),
                            e
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../../../MGUtils/NetworkUtils': 'NetworkUtils',
            },
        ],
        MGCloudStorageEntrance: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '23fe1aZJC1G4pLKorDECxYF', 'MGCloudStorageEntrance'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('../Adapter/CloudStorageHelperWX'),
                    r = e('../Adapter/CloudStorageHelperQQ'),
                    s = e('../Adapter/CloudStorageHelperFB'),
                    c = e('../Adapter/CloudStorageHelperWeb'),
                    l = e('../../../MGUtils/TypeDefinition'),
                    u = e('../Adapter/CloudStorageHelperCM'),
                    o = (function () {
                        function e() {
                            this.mMGCloudStorageHelper = null;
                        }
                        return (
                            (e.prototype.init = function (e, t, i, o, n) {
                                switch (e) {
                                    case l.PlatformType.PLATFORM_H5SDK:
                                    case l.PlatformType.PLATFORM_GAMEHALL:
                                    case l.PlatformType.PLATFORM_WECHAT:
                                        this.mMGCloudStorageHelper = new a.CloudStorageHelperWX(e, t, i, o, n);
                                        break;
                                    case l.PlatformType.PLATFORM_FACEBOOK:
                                        this.mMGCloudStorageHelper = new s.CloudStorageHelperFB(e, t, i, o, n);
                                        break;
                                    case l.PlatformType.PLATFORM_QQPLAY:
                                        this.mMGCloudStorageHelper = new r.CloudStorageHelperQQ(e, t, i, o, n);
                                        break;
                                    case l.PlatformType.PLATFORM_CMPLAY:
                                        this.mMGCloudStorageHelper = new u.CloudStorageHelperCM(e, t, i, o, n);
                                        break;
                                    default:
                                        this.mMGCloudStorageHelper = new c.CloudStorageHelperWeb(e, t, i, o, n);
                                }
                            }),
                            (e.prototype.setStorage = function (e) {
                                this.mMGCloudStorageHelper ? this.mMGCloudStorageHelper.setStorage(e) : e.fail && e.fail(-1);
                            }),
                            (e.prototype.getStorage = function (e) {
                                this.mMGCloudStorageHelper ? this.mMGCloudStorageHelper.getStorage(e) : e.fail && e.fail(-1);
                            }),
                            (e.prototype.delStorage = function (e) {
                                this.mMGCloudStorageHelper ? this.mMGCloudStorageHelper.delStorage(e) : e.fail && e.fail(-1);
                            }),
                            e
                        );
                    })();
                (i.default = o), (i.MGCloudStorage = new o()), cc._RF.pop();
            },
            {
                '../../../MGUtils/TypeDefinition': 'TypeDefinition',
                '../Adapter/CloudStorageHelperCM': 'CloudStorageHelperCM',
                '../Adapter/CloudStorageHelperFB': 'CloudStorageHelperFB',
                '../Adapter/CloudStorageHelperQQ': 'CloudStorageHelperQQ',
                '../Adapter/CloudStorageHelperWX': 'CloudStorageHelperWX',
                '../Adapter/CloudStorageHelperWeb': 'CloudStorageHelperWeb',
            },
        ],
        MGCloudStorageHelper: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'f7ea4t0nAlO44u5jxEySHRu', 'MGCloudStorageHelper'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../MGUtils/NetworkUtils'),
                    n = (function () {
                        function e(e, t, i, o, n) {
                            (this.mPlatformType = e), (this.mGameId = t), (this.mToken = i), (this.mPlayerId = o), (this.mIsDebug = n);
                        }
                        return (
                            (e.prototype.isDebug = function () {
                                return this.mIsDebug;
                            }),
                            (e.prototype.setStorage = function (e) {
                                if (!this.mGameId || !this.mPlayerId || !this.mToken) return e.complete && e.complete(!1), void (e.fail && e.fail(-1));
                                this.request({
                                    url: this.getUrlToSetStorage(),
                                    data: e.kvDatas,
                                    complete: e.complete,
                                    success: e.success,
                                    fail: e.fail,
                                });
                            }),
                            (e.prototype.getStorage = function (o) {
                                if (!this.mGameId || !this.mPlayerId || !this.mToken) return o.complete && o.complete(!1, null), void (o.fail && o.fail(-1));
                                this.request({
                                    url: this.getUrlToGetStorage(),
                                    data: o.keys,
                                    complete: function (e, t) {
                                        if (o.complete)
                                            if (e && t)
                                                try {
                                                    var i = JSON.parse(t);
                                                    i && i.result && i.result.data && o.complete(!0, i.result.data);
                                                } catch (e) {
                                                    o.complete(!1, t);
                                                }
                                            else o.complete(!1, t);
                                    },
                                    success: function (e) {
                                        if (e)
                                            try {
                                                var t = JSON.parse(e);
                                                t && t.result && t.result.data && o.success && o.success(t.result.data);
                                            } catch (e) {
                                                o.fail && o.fail(-1);
                                            }
                                        else o.fail && o.fail(-1);
                                    },
                                    fail: o.fail,
                                });
                            }),
                            (e.prototype.delStorage = function (e) {
                                if (!this.mGameId || !this.mPlayerId || !this.mToken) return e.complete && e.complete(!1), void (e.fail && e.fail(-1));
                                this.request({
                                    url: this.getUrlToDetStorage(),
                                    data: e.keys,
                                    complete: e.complete,
                                    success: e.success,
                                    fail: e.fail,
                                });
                            }),
                            (e.prototype.request = function (i) {
                                var e = this.getBody(this.mPlayerId, this.mGameId, i.data),
                                    t = o.default.createAuthorization(e, this.mToken);
                                o.default.request({
                                    platform: this.mPlatformType,
                                    url: i.url,
                                    data: e,
                                    header: {
                                        Authorization: t,
                                    },
                                    method: o.default.METHOD_POST,
                                    dataType: 'string',
                                    token: this.mToken,
                                    checkAuthorization: !0,
                                    success: function (e) {
                                        i.complete && i.complete(!0, e), i.success && i.success(e);
                                    },
                                    fail: function (e, t) {
                                        i.complete && i.complete(!1, null), i.fail && i.fail(e, t);
                                    },
                                });
                            }),
                            (e.prototype.getBody = function (e, t, i) {
                                return {
                                    playerid: e,
                                    timestamp: new Date().getTime(),
                                    gameid: t,
                                    data: i,
                                };
                            }),
                            e
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../../../MGUtils/NetworkUtils': 'NetworkUtils',
            },
        ],
        MGLog: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '5941fdKY5NIabq0W+7QmPBo', 'MGLog'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function o() {}
                    return (
                        (o.init = function (e) {
                            o.sIsDebug = e;
                        }),
                        (o.isDebug = function () {
                            return o.sIsDebug;
                        }),
                        (o.formatDateTime = function () {
                            var e = new Date(),
                                t = e.getHours().toString(),
                                i = e.getMinutes().toString(),
                                o = e.getSeconds().toString(),
                                n = e.getMilliseconds().toString();
                            if ((i.length < 2 && (i = '0' + i), o.length < 2 && (o = '0' + o), n.length < 3)) for (var a = 0; a < 3 - n.length; a++) n = '0' + n;
                            return t + ':' + i + ':' + o + ' ' + n;
                        }),
                        (o.getPrefix = function () {
                            return this.formatDateTime() + '  =>  ';
                        }),
                        (o.l = function (e) {
                            for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
                            o.isDebug() && console.log(this.getPrefix() + e + o.stringifyData(t));
                        }),
                        (o.w = function (e) {
                            for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
                            console.warn(this.getPrefix() + e + o.stringifyData(t));
                        }),
                        (o.e = function (e) {
                            for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
                            console.error(this.getPrefix() + e + o.stringifyData(t));
                        }),
                        (o.i = function (e) {
                            for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
                            o.isDebug() && console.info(this.getPrefix() + e + o.stringifyData(t));
                        }),
                        (o.stringifyData = function () {
                            for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                            return e && e.length, JSON.stringify(e);
                        }),
                        (o.sIsDebug = !1),
                        o
                    );
                })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        MGPlatform: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '5ba21cWkPpLRbjl4KHWO+Z6', 'MGPlatform'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./SystemInfo'),
                    n = e('../../scripts/util/SUtil'),
                    a = (function () {
                        function e() {}
                        return (
                            (e.getSystemInfoSync = function () {
                                return cc.sys.platform == cc.sys.WECHAT_GAME ? wx.getSystemInfoSync() : cc.sys.platform == cc.sys.QQ_PLAY ? e.getSystemInfoQQ() : e.getSystemInfoCM();
                            }),
                            (e.getSystemInfoCM = function () {
                                var e = new o.SystemInfo();
                                return (e.brand = ''), (e.model = ''), (e.pixelRatio = 0), (e.version = ''), (e.system = ''), (e.SDKVersion = ''), (e.screenWidth = n.SUtil.ins().mScreenWidth), (e.screenHeight = n.SUtil.ins().mScreenHeight), (e.language = ''), (e.platform = cc.sys.platform + ''), (e.fontSizeSetting = 0), e;
                            }),
                            (e.getSystemInfoQQ = function () {
                                var e = new o.SystemInfo();
                                return (e.brand = ''), (e.model = ''), (e.pixelRatio = 0), (e.version = GameStatusInfo.QQVer), (e.system = GameStatusInfo.platform + ' ' + GameStatusInfo.osVersion), (e.SDKVersion = ''), (e.screenWidth = BK.Director.screenPixelSize.width), (e.screenHeight = BK.Director.screenPixelSize.height), (e.language = ''), (e.platform = GameStatusInfo.platform), (e.fontSizeSetting = 0), e;
                            }),
                            e
                        );
                    })();
                (i.MGPlatform = a), cc._RF.pop();
            },
            {
                '../../scripts/util/SUtil': 'SUtil',
                './SystemInfo': 'SystemInfo',
            },
        ],
        MGSha1: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '08e1e2nRUtKAIflALh5znlG', 'MGSha1'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = 0,
                    r = '';

                function o(e) {
                    return c(n(d(e)));
                }

                function n(e) {
                    return h(f(p(e), 8 * e.length));
                }

                function s(e, t) {
                    var i = p(e);
                    16 < i.length && (i = f(i, 8 * e.length));
                    for (var o = Array(16), n = Array(16), a = 0; a < 16; a++) (o[a] = 909522486 ^ i[a]), (n[a] = 1549556828 ^ i[a]);
                    var r = f(o.concat(p(t)), 512 + 8 * t.length);
                    return h(f(n.concat(r), 672));
                }

                function c(e) {
                    for (var t, i = a ? '0123456789ABCDEF' : '0123456789abcdef', o = '', n = 0; n < e.length; n++) (t = e.charCodeAt(n)), (o += i.charAt((t >>> 4) & 15) + i.charAt(15 & t));
                    return o;
                }

                function l(e) {
                    for (var t = '', i = e.length, o = 0; o < i; o += 3) for (var n = (e.charCodeAt(o) << 16) | (o + 1 < i ? e.charCodeAt(o + 1) << 8 : 0) | (o + 2 < i ? e.charCodeAt(o + 2) : 0), a = 0; a < 4; a++) 8 * o + 6 * a > 8 * e.length ? (t += r) : (t += 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.charAt((n >>> (6 * (3 - a))) & 63));
                    return t;
                }

                function u(e, t) {
                    var i,
                        o,
                        n,
                        a,
                        r = t.length,
                        s = Array(),
                        c = Array(Math.ceil(e.length / 2));
                    for (i = 0; i < c.length; i++) c[i] = (e.charCodeAt(2 * i) << 8) | e.charCodeAt(2 * i + 1);
                    for (; 0 < c.length; ) {
                        for (a = Array(), i = n = 0; i < c.length; i++) (n = (n << 16) + c[i]), (n -= (o = Math.floor(n / r)) * r), (0 < a.length || 0 < o) && (a[a.length] = o);
                        (s[s.length] = n), (c = a);
                    }
                    var l = '';
                    for (i = s.length - 1; 0 <= i; i--) l += t.charAt(s[i]);
                    var u = Math.ceil((8 * e.length) / (Math.log(t.length) / Math.log(2)));
                    for (i = l.length; i < u; i++) l = t[0] + l;
                    return l;
                }

                function d(e) {
                    for (var t, i, o = '', n = -1; ++n < e.length; ) (t = e.charCodeAt(n)), (i = n + 1 < e.length ? e.charCodeAt(n + 1) : 0), 55296 <= t && t <= 56319 && 56320 <= i && i <= 57343 && ((t = 65536 + ((1023 & t) << 10) + (1023 & i)), n++), t <= 127 ? (o += String.fromCharCode(t)) : t <= 2047 ? (o += String.fromCharCode(192 | ((t >>> 6) & 31), 128 | (63 & t))) : t <= 65535 ? (o += String.fromCharCode(224 | ((t >>> 12) & 15), 128 | ((t >>> 6) & 63), 128 | (63 & t))) : t <= 2097151 && (o += String.fromCharCode(240 | ((t >>> 18) & 7), 128 | ((t >>> 12) & 63), 128 | ((t >>> 6) & 63), 128 | (63 & t)));
                    return o;
                }

                function p(e) {
                    for (var t = Array(e.length >> 2), i = 0; i < t.length; i++) t[i] = 0;
                    for (i = 0; i < 8 * e.length; i += 8) t[i >> 5] |= (255 & e.charCodeAt(i / 8)) << (24 - (i % 32));
                    return t;
                }

                function h(e) {
                    for (var t = '', i = 0; i < 32 * e.length; i += 8) t += String.fromCharCode((e[i >> 5] >>> (24 - (i % 32))) & 255);
                    return t;
                }

                function f(e, t) {
                    (e[t >> 5] |= 128 << (24 - (t % 32))), (e[15 + (((t + 64) >> 9) << 4)] = t);
                    for (var i, o = Array(80), n = 1732584193, a = -271733879, r = -1732584194, s = 271733878, c = -1009589776, l = 0; l < e.length; l += 16) {
                        for (var u = n, d = a, p = r, h = s, f = c, m = 0; m < 80; m++) {
                            o[m] = m < 16 ? e[l + m] : S(o[m - 3] ^ o[m - 8] ^ o[m - 14] ^ o[m - 16], 1);
                            var g = y(y(S(n, 5), _(m, a, r, s)), y(y(c, o[m]), (i = m) < 20 ? 1518500249 : i < 40 ? 1859775393 : i < 60 ? -1894007588 : -899497514));
                            (c = s), (s = r), (r = S(a, 30)), (a = n), (n = g);
                        }
                        (n = y(n, u)), (a = y(a, d)), (r = y(r, p)), (s = y(s, h)), (c = y(c, f));
                    }
                    return Array(n, a, r, s, c);
                }

                function _(e, t, i, o) {
                    return e < 20 ? (t & i) | (~t & o) : e < 40 ? t ^ i ^ o : e < 60 ? (t & i) | (t & o) | (i & o) : t ^ i ^ o;
                }

                function y(e, t) {
                    var i = (65535 & e) + (65535 & t);
                    return (((e >> 16) + (t >> 16) + (i >> 16)) << 16) | (65535 & i);
                }

                function S(e, t) {
                    return (e << t) | (e >>> (32 - t));
                }
                (i.hex_sha1 = o),
                    (i.b64_sha1 = function (e) {
                        return l(n(d(e)));
                    }),
                    (i.any_sha1 = function (e, t) {
                        return u(n(d(e)), t);
                    }),
                    (i.hex_hmac_sha1 = function (e, t) {
                        return c(s(d(e), d(t)));
                    }),
                    (i.b64_hmac_sha1 = function (e, t) {
                        return l(s(d(e), d(t)));
                    }),
                    (i.any_hmac_sha1 = function (e, t, i) {
                        return u(s(d(e), d(t)), i);
                    }),
                    cc._RF.pop();
            },
            {},
        ],
        MGShareUtil: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '6adacTtQnND0KYTss1Yc3gg', 'MGShareUtil'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var u = e('./ShareHelper'),
                    d = e('./MGAppShare'),
                    p = e('../../../scripts/infoc/m_p2_share'),
                    h = e('../../../scripts/util/PU'),
                    s = e('../../../scripts/business/Network/Protocol/StorageUtil'),
                    c = e('../../../scripts/config/LSKey'),
                    l = e('../../../scripts/util/StringUtil'),
                    o = e('../../MGUser/scripts/Logic/MGUserEntrance'),
                    f = e('./ShareImageUtils'),
                    m = e('../../../scripts/social/SocialHelper'),
                    g = e('./ShareImage'),
                    r = e('../../../scripts/business/Logic/SkinDataManager'),
                    _ = e('../../MGUtils/MGLog'),
                    y = e('../../../scripts/base/Log'),
                    n = (function () {
                        function e() {}
                        return (
                            (e.initShare = function () {
                                h.default.isWeiXin() &&
                                    (_.default.i('initShare ='),
                                    u.ShareHelper.getDefaultShareData(function (t, e, i) {
                                        p.default.reportForMultiPlatform(p.default.ACTION_LAUNCH_SHARE, p.default.SOURCE_INIT, t),
                                            m.SocialHelper.initShare(e, i, 'source=' + u.ShareHelper.SHARE_SOURCE_INIT + '&card_type=' + t, m.SocialHelper.SHARE_TYPE_SHARE, function (e) {
                                                e ? p.default.reportForMultiPlatform(p.default.ACTION_SHARE_SUCCESS, p.default.SOURCE_INIT, t) : p.default.reportForMultiPlatform(p.default.ACTION_SHARE_FAIL, p.default.SOURCE_INIT, t);
                                            });
                                    }));
                            }),
                            (e.shareForReliveFdHelp = function (e, t) {
                                if (h.default.isWeiXin() || h.default.isQQ()) {
                                    var i = p.default.CARD_TYPE_EIGHT_ONE;
                                    h.default.isWeiXin() ? u.ShareHelper.SHARE_TITLE_WX_RELIVE : u.ShareHelper.SHARE_TITLE_QQ_RELIVE, u.ShareHelper.SHARE_SOURCE_RELIVE, m.SocialHelper.SHARE_TYPE_SHARE;
                                }
                            }),
                            (e.shareForGiftReward = function (e, t, i) {
                                if (h.default.isWeiXin()) {
                                    var o = p.default.CARD_TYPE_SIX_ONE,
                                        n = p.default.SOURCE_INVITE_FRIEND;
                                    1 == t && (n = p.default.SOURCE_SHARE_GIFT_POPUP_INVITE);
                                    var a = {
                                            title: u.ShareHelper.SHARE_TITLEB_WX_SHARE_FOR_GIFT,
                                            query: 'source=' + u.ShareHelper.SHARE_SOURCE_INVITE_FRIEND + '&inviterId=' + e + '&card_type=' + o,
                                            imgUrl: '',
                                            type: m.SocialHelper.SHARE_TYPE_SHARE,
                                        },
                                        r = function (e) {
                                            i(e.result), e.result ? p.default.reportForMultiPlatform(p.default.ACTION_SHARE_SUCCESS, p.default.SOURCE_RELIVE, 0) : p.default.reportForMultiPlatform(p.default.ACTION_SHARE_FAIL, p.default.SOURCE_RELIVE, 0);
                                        };
                                    new f.default().getShareImage(g.ShareImage.TYPE_SHARE_FOR_REWARD_B, function (e, t) {
                                        e && ((a.imgUrl = t), d.default.share(a, r), p.default.reportForMultiPlatform(p.default.ACTION_LAUNCH_SHARE, n, o), s.default.save(c.default.SHARE_FOR_GIFT_SHARED, 'true'));
                                    });
                                } else h.default.isQQ();
                            }),
                            (e.shareForInviteSkin = function (e, t, i, o, n, a) {
                                if ((_.default.i('MgShareUtils shareForInviteSkin inviterId = ' + e), h.default.isCM())) {
                                    var r = {
                                        title: t,
                                        query: (y.default.isDebug() ? this.inviteUrlDebug : this.inviteUrlRelease) + '?scene_id=' + t + '&prop_name=' + encodeURIComponent(n) + '&friend_num=' + a,
                                        imgUrl: '',
                                        type: o,
                                    };
                                    d.default.share(r, function (e) {
                                        e.result && y.default.i('CMPlayShare: MGShareUtil===>share succeed!');
                                    });
                                }
                            }),
                            (e.shareForInviteSong = function (e, t, i, o, n, a) {
                                if (h.default.isCM()) {
                                    var r = {
                                        title: t,
                                        query: (y.default.isDebug() ? this.inviteUrlDebug : this.inviteUrlRelease) + '?scene_id=' + t + '&prop_name=' + encodeURIComponent(o) + '&friend_num=1',
                                        imgUrl: '',
                                        type: '1',
                                    };
                                    d.default.share(r, function (e) {
                                        e.result;
                                    });
                                }
                            }),
                            (e.shareForChallengeInvite = function (e, t, i) {
                                if (h.default.isWeiXin() || h.default.isQQ()) {
                                    var o = g.ShareImage.TYPE_SHARE_INVITE_CHALLENGE_TIMES;
                                    0.5 < Math.random() && (o = g.ShareImage.TYPE_SHARE_INVITE_CHALLENGE_TIMES_B);
                                    var n = u.ShareHelper.SHARE_TITLE_CHALLENGE_TIMES.replace('musicName', l.StringUtil.getFixedlengthStr(t, 14)),
                                        a = p.default.CARD_TYPE_NINE;
                                    o == g.ShareImage.TYPE_SHARE_INVITE_CHALLENGE_TIMES_B && ((n = u.ShareHelper.SHARE_TITLE_CHALLENGE_TIMES_B), (a = p.default.CARD_TYPE_NINE_ONE));
                                    var r = {
                                            title: n,
                                            query: 'source=' + u.ShareHelper.SHARE_SOURCE_INVITE_CHALLENGE_TIMES + '&inviterId=' + e + '&card_type=' + a,
                                            imgUrl: '',
                                            type: m.SocialHelper.SHARE_TYPE_SHARE,
                                        },
                                        s = function (e) {
                                            i && i(e.result), e.result ? p.default.reportForMultiPlatform(p.default.ACTION_SHARE_SUCCESS, p.default.SOURCE_SHARE_CHALLENGE_INVITE_GAIN_TIMES, 0) : p.default.reportForMultiPlatform(p.default.ACTION_SHARE_FAIL, p.default.SOURCE_SHARE_CHALLENGE_INVITE_GAIN_TIMES, 0);
                                        };
                                    if (h.default.isWeiXin())
                                        new f.default().getShareImage(o, function (e, t) {
                                            e && ((r.imgUrl = t), d.default.share(r, s), p.default.reportForMultiPlatform(p.default.ACTION_LAUNCH_SHARE, p.default.SOURCE_SHARE_CHALLENGE_INVITE_GAIN_TIMES, 0));
                                        });
                                    else h.default.isQQ();
                                }
                            }),
                            (e.shareChallengeShowOff = function (e, t, i, o) {
                                if (h.default.isWeiXin() || h.default.isQQ()) {
                                    var n = '';
                                    if (i <= 10) n = '我在世界擂台赛中排第' + i + '名,你能超过我吗?';
                                    else if (i <= 999999)
                                        if (null == o || null == o) n = '我在世界擂台赛中排第' + i + '名,你能超过我吗?';
                                        else {
                                            var a = o;
                                            n = (a = o <= 5 ? 5 : 10 * Math.ceil(o / 10)) <= 90 ? '我在世界擂台赛中排第' + i + '名(前' + a + '%),你能超过我吗?' : '我在世界擂台赛中排第' + i + '名,你能超过我吗?';
                                        }
                                    else {
                                        var r = 10 * Math.floor(i / 1e5);
                                        if (null == o || null == o) n = '我在世界擂台赛中排' + r + '万+,你能超过我吗?';
                                        else {
                                            a = o;
                                            n = (a = o <= 5 ? 5 : 10 * Math.ceil(o / 10)) <= 90 ? '我在世界擂台赛中排' + r + '万+(前' + a + '%),你能超过我吗?' : '我在世界擂台赛中排' + r + '万+,你能超过我吗?';
                                        }
                                    }
                                    var s = {
                                            title: n,
                                            query: 'source=' + u.ShareHelper.SHARE_SOURCE_CHALLENGE_SHOW_OFF,
                                            imgUrl: '',
                                            type: m.SocialHelper.SHARE_TYPE_SHARE,
                                        },
                                        c = function (e) {
                                            e.result ? p.default.reportForMultiPlatform(p.default.ACTION_SHARE_SUCCESS, p.default.SOURCE_SHARE_CHALLENGE_RESULT_SHOW_OFF, 0) : p.default.reportForMultiPlatform(p.default.ACTION_SHARE_FAIL, p.default.SOURCE_SHARE_CHALLENGE_RESULT_SHOW_OFF, 0);
                                        };
                                    if (h.default.isWeiXin()) {
                                        var l = new f.default();
                                        l.setChallengeShowOff(e, t, i),
                                            l.getShareImage(g.ShareImage.TYPE_SHARE_CHALLENGE_SHOW_OFF, function (e, t) {
                                                e && ((s.imgUrl = t), d.default.share(s, c), p.default.reportForMultiPlatform(p.default.ACTION_LAUNCH_SHARE, p.default.SOURCE_SHARE_CHALLENGE_RESULT_SHOW_OFF, 0));
                                            });
                                    } else h.default.isQQ();
                                }
                            }),
                            (e.shareForSKinPiece = function (e, t, i, o) {
                                _.default.l('[MGShare] shareForSKinPiece  ....... skinId = ' + o);
                                var n = {
                                        title: u.ShareHelper.SHATR_TITLE_SKIN_PIECE,
                                        query: 'source=' + u.ShareHelper.SHARE_SOURCE_SKIN_PIECE + '&nickName=' + e + '&inviterId=' + t + '&activityId=' + i + '&skinId=' + o,
                                        imgUrl: '',
                                        type: m.SocialHelper.SHARE_TYPE_SHARE,
                                    },
                                    a = function (e) {
                                        e.result ? p.default.reportForMultiPlatform(p.default.ACTION_SHARE_SUCCESS, p.default.SOURCE_SHARE_SKIN_PIECE, 0) : p.default.reportForMultiPlatform(p.default.ACTION_SHARE_FAIL, p.default.SOURCE_SHARE_SKIN_PIECE, 0);
                                    };
                                h.default.isWeiXin()
                                    ? new f.default().getShareImage(
                                          g.ShareImage.TYPE_SHARE_SKIN_PIECE,
                                          function (e, t) {
                                              e && ((n.imgUrl = t), d.default.share(n, a), p.default.reportForMultiPlatform(p.default.ACTION_LAUNCH_SHARE, p.default.SOURCE_SHARE_SKIN_PIECE, 0));
                                          },
                                          {
                                              skinName: r.SkinDataMgr.Ins().getSkinItemInfoBySkinId(o).name,
                                          },
                                      )
                                    : h.default.isQQ();
                            }),
                            (e.shareForUnlockTone = function (n, a) {
                                o.MGUser.getUserLoginInfo({
                                    complete: function (t) {
                                        o.MGUser.getUserBasicInfo({
                                            complete: function (e) {
                                                if (h.default.isWeiXin() || h.default.isQQ()) {
                                                    var i = {
                                                            title: u.ShareHelper.SHARE_TITLE_FOR_TONE,
                                                            query: 'source=' + u.ShareHelper.SHARE_SOURCE_TONE + '&inviterId=' + t.playerId + '&activityId=' + n + '&nickName=' + (e ? e.nickName : '--'),
                                                            imgUrl: '',
                                                            type: m.SocialHelper.SHARE_TYPE_SHARE,
                                                        },
                                                        o = function (e) {
                                                            a && a(e.result), e.result ? p.default.reportForMultiPlatform(p.default.ACTION_SHARE_SUCCESS, p.default.SOURCE_SHARE_TONE, 0) : p.default.reportForMultiPlatform(p.default.ACTION_SHARE_FAIL, p.default.SOURCE_SHARE_TONE, 0);
                                                        };
                                                    if (h.default.isWeiXin())
                                                        new f.default().getShareImage(g.ShareImage.TYPE_SHARE_TONE, function (e, t) {
                                                            e && ((i.imgUrl = t), d.default.share(i, o), p.default.reportForMultiPlatform(p.default.ACTION_LAUNCH_SHARE, p.default.SOURCE_SHARE_TONE, 0));
                                                        });
                                                    else h.default.isQQ();
                                                }
                                            },
                                        });
                                    },
                                });
                            }),
                            (e.inviteUrlDebug = 'http://gmmall.liebao.cn/share/funny_game_piano_landing'),
                            (e.inviteUrlRelease = 'https://gmmall.liebao.cn/share/funny_game_piano_landing'),
                            (e.QQ_SHARE_TYPE_SINGLE_CHAMP = 1),
                            (e.QQ_SHARE_TYPE_SHOW_OFF = 2),
                            (e.QQ_SHARE_TYPE_NEW_RECORD = 3),
                            e
                        );
                    })();
                (i.MGShareUtils = n), cc._RF.pop();
            },
            {
                '../../../scripts/base/Log': 'Log',
                '../../../scripts/business/Logic/SkinDataManager': 'SkinDataManager',
                '../../../scripts/business/Network/Protocol/StorageUtil': 'StorageUtil',
                '../../../scripts/config/LSKey': 'LSKey',
                '../../../scripts/infoc/m_p2_share': 'm_p2_share',
                '../../../scripts/social/SocialHelper': 'SocialHelper',
                '../../../scripts/util/PU': 'PU',
                '../../../scripts/util/StringUtil': 'StringUtil',
                '../../MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../MGUtils/MGLog': 'MGLog',
                './MGAppShare': 'MGAppShare',
                './ShareHelper': 'ShareHelper',
                './ShareImage': 'ShareImage',
                './ShareImageUtils': 'ShareImageUtils',
            },
        ],
        MGUserEntrance: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '4f2f3y4skBGk63+zTjf1saq', 'MGUserEntrance'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('../../../MGUtils/TypeDefinition'),
                    r = e('../Adapter/UserHelperWX'),
                    s = e('../Adapter/UserHelperH5SDK'),
                    c = e('../Adapter/UserHelperGameHall'),
                    l = e('../Adapter/UserHelperQQ'),
                    u = e('../Adapter/UserHelperFB'),
                    d = e('../Adapter/UserHelperWeb'),
                    p = e('../Adapter/UserHelperCM'),
                    o = (function () {
                        function e() {}
                        return (
                            (e.prototype.init = function (e, t, i, o, n) {
                                switch (e) {
                                    case a.PlatformType.PLATFORM_H5SDK:
                                        this.mMGUserHelper = new s.default(e, t, i, o, n);
                                        break;
                                    case a.PlatformType.PLATFORM_GAMEHALL:
                                        this.mMGUserHelper = new c.default(e, t, i, o, n);
                                        break;
                                    case a.PlatformType.PLATFORM_WECHAT:
                                        this.mMGUserHelper = new r.default(e, t, i, o, n);
                                        break;
                                    case a.PlatformType.PLATFORM_FACEBOOK:
                                        this.mMGUserHelper = new u.default(e, t, i, o, n);
                                        break;
                                    case a.PlatformType.PLATFORM_QQPLAY:
                                        this.mMGUserHelper = new l.default(e, t, i, o, n);
                                        break;
                                    case a.PlatformType.PLATFORM_CMPLAY:
                                        this.mMGUserHelper = new p.default(e, t, i, o, n);
                                        break;
                                    default:
                                        this.mMGUserHelper = new d.default(e, t, i, o, n);
                                }
                            }),
                            (e.prototype.getUserLoginInfo = function (e) {
                                if (CMPlay.isCMPlay()) return this.mMGUserHelper ? void this.mMGUserHelper.getUserLoginInfo(e) : (e && e.complete && e.complete(null), void (e && e.fail && e.fail()));
                                e.fail && e.fail();
                            }),
                            (e.prototype.getUserBasicInfo = function (e) {
                                if (!this.mMGUserHelper) return e && e.complete && e.complete(null), void (e && e.fail && e.fail());
                                this.mMGUserHelper.getUserBasicInfo(e);
                            }),
                            (e.prototype.uploadUserLevelInfo = function (e) {
                                if (!this.mMGUserHelper) return e && e.complete && e.complete(!1), void (e && e.fail && e.fail(-1));
                                this.mMGUserHelper.uploadUserLevelInfo(e);
                            }),
                            (e.prototype.uploadUserInfo = function (e) {
                                if (!this.mMGUserHelper) return e && e.complete && e.complete(!1), void (e && e.fail && e.fail(-1));
                                this.mMGUserHelper.uploadUserInfo(e);
                            }),
                            (e.prototype.uploadUserInfoEx = function (e) {
                                if (!this.mMGUserHelper) return e && e.complete && e.complete(!1), void (e && e.fail && e.fail(-1));
                                this.mMGUserHelper.uploadUserInfoEx(e);
                            }),
                            (e.prototype.switchUseLocalTime = function (e) {
                                this.mMGUserHelper && this.mMGUserHelper.switchUseLocalTime(e);
                            }),
                            (e.prototype.getCurrentServerTime = function () {
                                return this.mMGUserHelper ? this.mMGUserHelper.getCurrentServerTime() : 0;
                            }),
                            (e.prototype.getCurrentServerRealTime = function (e) {
                                if (!this.mMGUserHelper) return e && e.complete && e.complete(!1, 0), void (e && e.fail && e.fail(-1));
                                this.mMGUserHelper.getCurrentServerRealTime(e);
                            }),
                            e
                        );
                    })();
                (i.default = o), (i.MGUser = new o()), cc._RF.pop();
            },
            {
                '../../../MGUtils/TypeDefinition': 'TypeDefinition',
                '../Adapter/UserHelperCM': 'UserHelperCM',
                '../Adapter/UserHelperFB': 'UserHelperFB',
                '../Adapter/UserHelperGameHall': 'UserHelperGameHall',
                '../Adapter/UserHelperH5SDK': 'UserHelperH5SDK',
                '../Adapter/UserHelperQQ': 'UserHelperQQ',
                '../Adapter/UserHelperWX': 'UserHelperWX',
                '../Adapter/UserHelperWeb': 'UserHelperWeb',
            },
        ],
        MGUserHelper: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '8b04fKnReFBMY3lsWj3zp8k', 'MGUserHelper'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('../../../MGUtils/TypeDefinition'),
                    r = e('../../../MGUtils/NetworkUtils'),
                    o = (function () {
                        function o(e, t, i, o, n) {
                            (this.mTimeDifference = 0), (this.mIsLoadingBaseInfo = !1), (this.mBaseInfoCallbackList = []), (this.mIsLoadingLoginInfo = !1), (this.mLoginInfoCallbackList = []), (this.mPlatformType = e), (this.mGameId = t), (this.mAppId = i), (this.mIsDebug = n);
                        }
                        return (
                            (o.prototype.getGameId = function () {
                                return this.mGameId;
                            }),
                            (o.prototype.getAppId = function () {
                                return this.mAppId;
                            }),
                            (o.prototype.getPlatformType = function () {
                                return this.mPlatformType;
                            }),
                            (o.prototype.getTimeDifference = function () {
                                return this.mTimeDifference;
                            }),
                            (o.prototype.setTimeDifference = function (e) {
                                this.mTimeDifference = e;
                            }),
                            (o.prototype.isDebug = function () {
                                return this.mIsDebug;
                            }),
                            (o.prototype.getUserBasicInfo = function (e) {
                                var t = this;
                                this.mUserInfo || (this.mUserInfo = new n.UserInfo()),
                                    this.mUserInfo.userBasicInfo
                                        ? o.baseInfoCallback(!0, this.mUserInfo.userBasicInfo, e)
                                        : (this.mBaseInfoCallbackList.push(e),
                                          this.mIsLoadingBaseInfo ||
                                              ((this.mIsLoadingBaseInfo = !0),
                                              this.getUserBaseInfoInner({
                                                  complete: function (e) {},
                                                  success: function (e) {
                                                      (t.mUserInfo.userBasicInfo = e), (t.mIsLoadingBaseInfo = !1), t.baseInfoInnerCallback(!0, t.mBaseInfoCallbackList);
                                                  },
                                                  fail: function () {
                                                      (t.mIsLoadingBaseInfo = !1), t.baseInfoInnerCallback(!1, t.mBaseInfoCallbackList);
                                                  },
                                              })));
                            }),
                            (o.prototype.baseInfoInnerCallback = function (e, t) {
                                for (; t && 0 < t.length; ) {
                                    var i = t.pop();
                                    o.baseInfoCallback(e, this.mUserInfo.userBasicInfo, i);
                                }
                            }),
                            (o.prototype.getUserLoginInfo = function (e) {
                                var t = this;
                                this.mUserInfo || (this.mUserInfo = new n.UserInfo()),
                                    this.mUserInfo.userLoginInfo
                                        ? o.loginInfoCallback(!0, this.mUserInfo.userLoginInfo, e)
                                        : (this.mLoginInfoCallbackList.push(e),
                                          this.mIsLoadingLoginInfo ||
                                              ((this.mIsLoadingLoginInfo = !0),
                                              this.getUserLoginInfoInner({
                                                  complete: function (e) {},
                                                  success: function (e) {
                                                      (t.mUserInfo.userLoginInfo = e), (t.mIsLoadingLoginInfo = !1), t.loginInfoInnerCallback(!0, t.mLoginInfoCallbackList);
                                                  },
                                                  fail: function () {
                                                      (t.mIsLoadingLoginInfo = !1), t.loginInfoInnerCallback(!1, t.mLoginInfoCallbackList);
                                                  },
                                              })));
                            }),
                            (o.prototype.loginInfoInnerCallback = function (e, t) {
                                for (; t && 0 < t.length; ) {
                                    var i = t.pop();
                                    o.loginInfoCallback(e, this.mUserInfo.userLoginInfo, i);
                                }
                            }),
                            (o.prototype.uploadUserInfoEx = function (n) {
                                var a = this;
                                this.getUserLoginInfo({
                                    success: function (e) {
                                        if (!e) return n.complete && n.complete(!1), void (n.fail && n.fail(-1));
                                        var t = {
                                                nickname: n.userBasicInfo.nickName,
                                                avatar_url: n.userBasicInfo.avatarUrl,
                                                gender: n.userBasicInfo.gender,
                                                city: n.userBasicInfo.city,
                                                province: n.userBasicInfo.province,
                                                country: n.userBasicInfo.country,
                                            },
                                            i = {
                                                playerid: e.playerId,
                                                timestamp: new Date().getTime(),
                                                gameid: a.getGameId(),
                                                data: t,
                                            },
                                            o = r.default.createAuthorization(i, e.token);
                                        r.default.request({
                                            platform: a.getPlatformType(),
                                            url: a.getUrlToUploadUserInfo(),
                                            data: i,
                                            header: {
                                                Authorization: o,
                                            },
                                            method: r.default.METHOD_POST,
                                            dataType: 'string',
                                            token: e.token,
                                            checkAuthorization: !0,
                                            success: function (e) {
                                                n.complete && n.complete(!0), n.success && n.success();
                                            },
                                            fail: function (e, t) {
                                                n.complete && n.complete(!1), n.fail && n.fail(e);
                                            },
                                        });
                                    },
                                    fail: function () {
                                        n.complete && n.complete(!1), n.fail && n.fail(-1);
                                    },
                                });
                            }),
                            (o.prototype.uploadUserLevelInfo = function (o) {
                                var n = this;
                                this.getUserLoginInfo({
                                    success: function (e) {
                                        if (!e) return o.complete && o.complete(!1), void (o.fail && o.fail(-1));
                                        var t = {
                                                playerid: e.playerId,
                                                timestamp: new Date().getTime(),
                                                gameid: n.getGameId(),
                                                user_level: o.user_level,
                                            },
                                            i = r.default.createAuthorization(t, e.token);
                                        r.default.request({
                                            platform: n.getPlatformType(),
                                            url: n.getUrlToUploadUserLevel(),
                                            data: t,
                                            header: {
                                                Authorization: i,
                                            },
                                            method: r.default.METHOD_POST,
                                            dataType: 'string',
                                            token: e.token,
                                            checkAuthorization: !0,
                                            success: function (e) {
                                                o.complete && o.complete(!0), o.success && o.success();
                                            },
                                            fail: function (e, t) {
                                                o.complete && o.complete(!1), o.fail && o.fail(e);
                                            },
                                        });
                                    },
                                    fail: function () {
                                        o.complete && o.complete(!1), o.fail && o.fail(-1);
                                    },
                                });
                            }),
                            (o.prototype.uploadUserInfo = function (t) {
                                var i = this;
                                this.getUserBasicInfo({
                                    success: function (e) {
                                        i.uploadUserInfoEx({
                                            userBasicInfo: e,
                                            complete: t.complete,
                                            success: t.success,
                                            fail: t.fail,
                                        });
                                    },
                                    fail: function () {
                                        t.complete && t.complete(!1), t.fail && t.fail(-1);
                                    },
                                });
                            }),
                            (o.prototype.switchUseLocalTime = function (e) {
                                this.mUseLocalTime = e;
                            }),
                            (o.prototype.getCurrentServerTime = function () {
                                return this.mUseLocalTime ? new Date().getTime() : new Date().getTime() - this.getTimeDifference();
                            }),
                            (o.prototype.getCurrentServerRealTime = function (o) {
                                var n = this;
                                if (this.mUseLocalTime || (cc.sys.platform != cc.sys.WECHAT_GAME && cc.sys.platform != cc.sys.QQ_PLAY)) {
                                    var e = new Date().getTime();
                                    return o.complete && o.complete(!0, e), void (o.success && o.success(e));
                                }
                                this.getUserLoginInfo({
                                    success: function (e) {
                                        if (!e || !e.token || !e.playerId) return o.complete && o.complete(!1, 0), void (o.fail && o.fail(-1));
                                        var t = {
                                                playerid: e.playerId,
                                                timestamp: new Date().getTime(),
                                                gameid: n.getGameId(),
                                            },
                                            i = r.default.createAuthorization(t, e.token);
                                        r.default.request({
                                            platform: n.getPlatformType(),
                                            url: n.getUrlToGetCurrentServerRealTime(),
                                            data: t,
                                            header: {
                                                Authorization: i,
                                            },
                                            method: r.default.METHOD_POST,
                                            dataType: 'string',
                                            token: e.token,
                                            checkAuthorization: !0,
                                            success: function (e) {
                                                if (e) {
                                                    var t = JSON.parse(e);
                                                    if (t && t.timestamp) return o.complete && o.complete(!0, 1e3 * t.timestamp), void (o.success && o.success(1e3 * t.timestamp));
                                                }
                                                o.complete && o.complete(!1, 0), o.fail && o.fail(-1);
                                            },
                                            fail: function (e, t) {
                                                o.complete && o.complete(!1, 0), o.fail && o.fail(e);
                                            },
                                        });
                                    },
                                    fail: function () {
                                        o.complete && o.complete(!1, 0), o.fail && o.fail(-1);
                                    },
                                });
                            }),
                            (o.loginInfoCallback = function (e, t, i) {
                                e ? (i.complete && i.complete(t), i.success && i.success(t)) : (i.complete && i.complete(null), i.fail && i.fail());
                            }),
                            (o.baseInfoCallback = function (e, t, i) {
                                e ? (i.complete && i.complete(t), i.success && i.success(t)) : (i.complete && i.complete(null), i.fail && i.fail());
                            }),
                            o
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../../../MGUtils/NetworkUtils': 'NetworkUtils',
                '../../../MGUtils/TypeDefinition': 'TypeDefinition',
            },
        ],
        MMoveBy: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '2ac47Wrd+lFj7Xw29/BRLhM', 'MMoveBy'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (n) {
                    function e(e, t, i) {
                        var o = n.call(this, i) || this;
                        return (o.deltaX = 0), (o.deltaY = 0), (o.originX = 0), (o.originY = 0), (o.deltaX = e), (o.deltaY = t), o;
                    }
                    return (
                        __extends(e, n),
                        (e.prototype.ready = function () {
                            n.prototype.ready.call(this), (this.originX = 0), (this.originY = 0);
                        }),
                        (e.prototype.start = function (e) {
                            n.prototype.start.call(this, e);
                            var t = this.target;
                            if (t) {
                                var i = t.getRect();
                                (this.originX = i.x), (this.originY = i.y);
                            }
                        }),
                        (e.prototype.update = function (e) {
                            var t = n.prototype.update.call(this, e),
                                i = this.target;
                            if (i) {
                                var o = this.percent();
                                i.move(o * this.deltaX + this.originX, o * this.deltaY + this.originY);
                            }
                            return t;
                        }),
                        e
                    );
                })(e('./MAction').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './MAction': 'MAction',
            },
        ],
        MMoveTo: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '161d73qTeFH0baySa5qnbp5', 'MMoveTo'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (n) {
                    function e(e, t, i) {
                        var o = n.call(this, 0, 0, i) || this;
                        return (o.destX = 0), (o.destY = 0), (o.destX = e), (o.destY = t), o;
                    }
                    return (
                        __extends(e, n),
                        (e.prototype.ready = function () {
                            n.prototype.ready.call(this), (this.deltaX = 0), (this.deltaY = 0);
                        }),
                        (e.prototype.start = function (e) {
                            n.prototype.start.call(this, e), this.target && ((this.deltaX = this.destX - this.originX), (this.deltaY = this.destY - this.originY));
                        }),
                        e
                    );
                })(e('./MMoveBy').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './MMoveBy': 'MMoveBy',
            },
        ],
        MPropValue: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'ab26719sTlF8L8TcoWWV6rh', 'MPropValue'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (o) {
                    function e(e, t) {
                        var i = o.call(this, 0) || this;
                        return (i.prop = null), (i.value = null), (i.executed = !1), (i.prop = e), (i.value = t), i;
                    }
                    return (
                        __extends(e, o),
                        (e.prototype.ready = function () {
                            o.prototype.ready.call(this), (this.executed = !1);
                        }),
                        (e.prototype.update = function (e) {
                            o.prototype.update.call(this, e);
                            var t = this.target;
                            return t && (t[this.prop] = this.value), (this.executed = !0);
                        }),
                        (e.prototype.finish = function () {
                            return this.executed;
                        }),
                        e
                    );
                })(e('./MAction').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './MAction': 'MAction',
            },
        ],
        MRandomChange: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '7510cHa+OtFD5zAjFUS7EF+', 'MRandomChange'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./MAction'),
                    I = e('../../../util/Utility'),
                    n = (function (v) {
                        function e(e, t, i, o, n, a, r, s, c, l, u, d, p, h, f, m, g, _, y) {
                            var S = v.call(this, y) || this;
                            return (S.cycle = 0), (S.moveStepX = 0), (S.moveStepY = 0), (S.moveRegion = new I.Utility.Rect(0, 0, 0, 0)), (S.directX = 0), (S.directY = 0), (S.randomMoveOnHitEdge = 0), (S.scaleMin = 0), (S.scaleMax = 0), (S.scaleOncePreCycle = !0), (S.opacityMin = 0), (S.opacityMax = 0), (S.randomMoveOnFade = !1), (S.opacityFollowScale = 0), (S.frameCount = 0), (S.frameSpeedMin = 0), (S.frameSpeedMax = 0), (S.bornRegion = new I.Utility.Rect(0, 0, 0, 0)), (S.runTimes = 0), (S.vx = 0), (S.vy = 0), (S.opacitySpeed = 0), (S.scaleSpeed = 0), (S.frameSpeed = 0), (S.frameIndex = 0), (S.cycle = Math.max(1, e)), (S.runTimes = 0), (S.moveStepX = t), (S.moveStepY = i), S.moveRegion.copy(o), (S.directX = n), (S.directY = a), (S.scaleMin = r), (S.scaleMax = s), (S.scaleOncePreCycle = c), (S.opacityMin = l), (S.opacityMax = u), (S.opacityFollowScale = d), (S.frameCount = p), (S.frameSpeedMin = h), (S.frameSpeedMax = f), (S.randomMoveOnHitEdge = m), (S.randomMoveOnFade = g), S.bornRegion.copy(_), S;
                        }
                        return (
                            __extends(e, v),
                            (e.prototype.ready = function () {
                                v.prototype.ready.call(this), (this.runTimes = this.cycle), (this.vx = this.moveStepX), (this.vy = this.moveStepY), (this.opacitySpeed = 0), (this.scaleSpeed = 0), (this.frameSpeed = 0), (this.frameIndex = 0);
                            }),
                            (e.prototype.start = function (e) {
                                v.prototype.start.call(this, e);
                            }),
                            (e.prototype.update = function (e) {
                                var t = v.prototype.update.call(this, e);
                                this.runTimes++, this.runTimes >= this.cycle && this.newFrame();
                                var i = this.target;
                                if (i) {
                                    var o = i.getRect();
                                    (o.x += this.vx), (o.y += this.vy);
                                    var n = 0;
                                    o.x <= this.moveRegion.x ? ((o.x = this.moveRegion.x), (n += 1)) : o.x >= this.moveRegion.xMax && ((o.x = this.moveRegion.xMax), (n += 2)), o.y <= this.moveRegion.y ? ((o.y = this.moveRegion.y), (n += 4)) : o.y >= this.moveRegion.yMax && ((o.y = this.moveRegion.yMax), (n += 8)), 0 != (n & this.randomMoveOnHitEdge) && this.randomMove();
                                    var a = i.getScale();
                                    if ((this.scaleOncePreCycle || ((a += this.scaleSpeed) < this.scaleMin ? (a = this.scaleMin) : a > this.scaleMax && (a = this.scaleMax), i.setScale(a)), 0 === this.opacityFollowScale)) {
                                        var r = i.getOpacity();
                                        (r += this.opacitySpeed) <= 0 ? ((r = 0), this.randomMoveOnFade && this.randomMove()) : 1 < r && (r = 1), i.setOpacity(r);
                                    } else i.setOpacity(Math.min(a, 1));
                                    0 < this.frameCount && ((this.frameIndex += this.frameSpeed), this.frameIndex >= this.frameCount + 1 && (this.frameIndex -= this.frameCount), i.setFrame(Math.floor(this.frameIndex)));
                                }
                                return t;
                            }),
                            (e.prototype.randomMove = function () {
                                var e = this.target;
                                if (e) {
                                    var t = this.bornRegion.x,
                                        i = this.bornRegion.y;
                                    (t += Math.random() * this.bornRegion.width), (i += Math.random() * this.bornRegion.height), e.setPosition(t, i), e.setOpacity(this.opacityMin), (this.opacitySpeed = Math.abs(this.opacitySpeed));
                                }
                            }),
                            (e.prototype.newFrame = function () {
                                if (((this.runTimes = 0), this.moveStepX < 0 ? (this.vx = -this.moveStepX) : (this.vx = (Math.random() - 0.5) * this.moveStepX), this.moveStepY < 0 ? (this.vy = -this.moveStepY) : (this.vy = (Math.random() - 0.5) * this.moveStepY), 0 != this.directX && (this.vx = this.vx * this.directX), 0 != this.directY && (this.vy = Math.abs(this.vy) * this.directY), (this.opacitySpeed = ((2 * Math.random() - 1) * (this.opacityMax - this.opacityMin)) / this.cycle), this.scaleOncePreCycle)) {
                                    var e = this.scaleMin + (this.scaleMax - this.scaleMin) * Math.random(),
                                        t = this.target;
                                    t && t.setScale(e);
                                } else this.scaleSpeed = ((2 * Math.random() - 1) * (this.scaleMax - this.scaleMin)) / this.cycle;
                                0 < this.frameCount && (this.frameSpeed = this.frameSpeedMin + (this.frameSpeedMax - this.frameSpeedMin) * Math.random());
                            }),
                            e
                        );
                    })(o.default);
                (i.default = n), cc._RF.pop();
            },
            {
                '../../../util/Utility': 'Utility',
                './MAction': 'MAction',
            },
        ],
        MRandomFade: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'cd878ztGSNNZ59LFSh+cWLC', 'MRandomFade'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (n) {
                    function e(e, t) {
                        var i = n.call(this, t) || this;
                        return (i.frames = 0), (i.cycle = 0), (i.opacityDelta = 0), (i.cycle = Math.max(1, e)), (i.frames = 0), i;
                    }
                    return (
                        __extends(e, n),
                        (e.prototype.ready = function () {
                            n.prototype.ready.call(this), (this.frames = this.cycle);
                        }),
                        (e.prototype.start = function (e) {
                            n.prototype.start.call(this, e);
                        }),
                        (e.prototype.update = function (e) {
                            var t = n.prototype.update.call(this, e);
                            this.frames++, this.frames >= this.cycle && ((this.frames = 0), (this.opacityDelta = (Math.random() - 0.5) * (1 / this.cycle)));
                            var i = this.target;
                            if (i) {
                                var o = i.getOpacity();
                                (o += this.opacityDelta) <= 0 ? (o = 0) : 1 < o && (o = 1), i.setOpacity(o);
                            }
                            return t;
                        }),
                        e
                    );
                })(e('./MAction').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './MAction': 'MAction',
            },
        ],
        MRandomMove: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'bfa93MJuHRLHZvUOW1ZlLSD', 'MRandomMove'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./MAction'),
                    r = e('../../../util/Utility'),
                    n = (function (a) {
                        function e(e, t, i, o) {
                            var n = a.call(this, o) || this;
                            return (n.frames = 0), (n.cycle = 0), (n.moveStep = 0), (n.vx = 0), (n.vy = 0), (n.moveRegion = new r.Utility.Rect(0, 0, 0, 0)), (n.cycle = e), (n.moveStep = t), (n.frames = 0), n.moveRegion.copy(i), n;
                        }
                        return (
                            __extends(e, a),
                            (e.prototype.ready = function () {
                                a.prototype.ready.call(this), (this.frames = this.cycle), (this.vx = 0), (this.vy = 0);
                            }),
                            (e.prototype.start = function (e) {
                                a.prototype.start.call(this, e);
                            }),
                            (e.prototype.update = function (e) {
                                var t = a.prototype.update.call(this, e);
                                this.frames++, this.frames >= this.cycle && ((this.frames = 0), (this.vx = (Math.random() - 0.5) * this.moveStep), (this.vy = (Math.random() - 0.5) * this.moveStep));
                                var i = this.target;
                                if (i) {
                                    var o = i.getRect();
                                    (o.x += this.vx), (o.y += this.vy), o.x <= this.moveRegion.x ? (o.x = this.moveRegion.x) : o.x >= this.moveRegion.xMax && (o.x = this.moveRegion.xMax), o.y <= this.moveRegion.y ? (o.y = this.moveRegion.y) : o.y >= this.moveRegion.yMax && (o.y = this.moveRegion.yMax);
                                }
                                return t;
                            }),
                            e
                        );
                    })(o.default);
                (i.default = n), cc._RF.pop();
            },
            {
                '../../../util/Utility': 'Utility',
                './MAction': 'MAction',
            },
        ],
        MRandomScale: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'ac6c4/zCuFDLYIdW1ccgLC1', 'MRandomScale'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (a) {
                    function e(e, t, i, o) {
                        var n = a.call(this, o) || this;
                        return (n.frames = 0), (n.cycle = 0), (n.scaleMin = 0), (n.scaleMax = 0), (n.cycle = Math.max(1, e)), (n.frames = 0), (n.scaleMin = t), (n.scaleMax = i), n;
                    }
                    return (
                        __extends(e, a),
                        (e.prototype.ready = function () {
                            a.prototype.ready.call(this), (this.frames = this.cycle);
                        }),
                        (e.prototype.start = function (e) {
                            a.prototype.start.call(this, e);
                        }),
                        (e.prototype.update = function (e) {
                            var t = a.prototype.update.call(this, e);
                            if ((this.frames++, this.frames >= this.cycle)) {
                                this.frames = 0;
                                var i = this.scaleMin + (this.scaleMax - this.scaleMin) * Math.random(),
                                    o = this.target;
                                o && o.setScale(i);
                            }
                            return t;
                        }),
                        e
                    );
                })(e('./MAction').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './MAction': 'MAction',
            },
        ],
        MResizeBy: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'c400eNB0RNJpJdw5LwDMxaZ', 'MResizeBy'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (n) {
                    function e(e, t, i) {
                        var o = n.call(this, i) || this;
                        return (o.deltaWidth = 0), (o.deltaHeight = 0), (o.originWidth = 0), (o.originHeight = 0), (o.deltaWidth = e), (o.deltaHeight = t), o;
                    }
                    return (
                        __extends(e, n),
                        (e.prototype.ready = function () {
                            n.prototype.ready.call(this), (this.originWidth = 0), (this.originHeight = 0);
                        }),
                        (e.prototype.start = function (e) {
                            n.prototype.start.call(this, e);
                            var t = this.target;
                            if (t) {
                                var i = t.getRect();
                                (this.originWidth = i.width), (this.originHeight = i.height);
                            }
                        }),
                        (e.prototype.update = function (e) {
                            var t = n.prototype.update.call(this, e),
                                i = this.percent(),
                                o = this.target;
                            return o && o.setContentSize(i * this.deltaWidth + this.originWidth, i * this.deltaHeight + this.originHeight), t;
                        }),
                        e
                    );
                })(e('./MAction').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './MAction': 'MAction',
            },
        ],
        MResizeTo: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '88a52kSaiRGu7ksx4mZkW+u', 'MResizeTo'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (n) {
                    function e(e, t, i) {
                        var o = n.call(this, 0, 0, i) || this;
                        return (o.destWidth = 0), (o.destHeight = 0), (o.destWidth = e), (o.destHeight = t), o;
                    }
                    return (
                        __extends(e, n),
                        (e.prototype.ready = function () {
                            n.prototype.ready.call(this), (this.deltaWidth = 0), (this.deltaHeight = 0);
                        }),
                        (e.prototype.start = function (e) {
                            n.prototype.start.call(this, e), this.target && ((this.deltaWidth = this.destWidth - this.originWidth), (this.deltaHeight = this.destHeight - this.originHeight));
                        }),
                        e
                    );
                })(e('./MResizeBy').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './MResizeBy': 'MResizeBy',
            },
        ],
        MScaleBy: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'a23d9qn6sxCerGgUvFLk89Z', 'MScaleBy'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (n) {
                    function e(e, t, i) {
                        var o = n.call(this, i) || this;
                        return (o.originScaleX = 0), (o.originScaleY = 0), (o.deltaScaleX = 0), (o.deltaScaleY = 0), (o.deltaScaleX = e), (o.deltaScaleY = t), o;
                    }
                    return (
                        __extends(e, n),
                        (e.prototype.ready = function () {
                            n.prototype.ready.call(this), (this.originScaleX = 0), (this.originScaleY = 0);
                        }),
                        (e.prototype.start = function (e) {
                            n.prototype.start.call(this, e);
                            var t = this.target;
                            t && ((this.originScaleX = t.getScale()), (this.originScaleY = this.originScaleX));
                        }),
                        (e.prototype.update = function (e) {
                            var t = n.prototype.update.call(this, e),
                                i = this.target;
                            if (i) {
                                var o = this.deltaScaleX * this.percent() + this.originScaleX;
                                i.setScale(o);
                            }
                            return t;
                        }),
                        e
                    );
                })(e('./MAction').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './MAction': 'MAction',
            },
        ],
        MScaleTo: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'a4e75+HD51Ier8IvEc1lF/3', 'MScaleTo'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (n) {
                    function e(e, t, i) {
                        var o = n.call(this, 0, 0, i) || this;
                        return (o.destScaleX = 0), (o.destScaleY = 0), (o.destScaleX = e), (o.destScaleY = t), o;
                    }
                    return (
                        __extends(e, n),
                        (e.prototype.ready = function () {
                            n.prototype.ready.call(this), (this.deltaScaleX = 0), (this.deltaScaleY = 0);
                        }),
                        (e.prototype.start = function (e) {
                            n.prototype.start.call(this, e), this.target && ((this.deltaScaleX = this.destScaleX - this.originScaleX), (this.deltaScaleY = this.destScaleY - this.originScaleY));
                        }),
                        e
                    );
                })(e('./MScaleBy').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './MScaleBy': 'MScaleBy',
            },
        ],
        MScheduler: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '9ffb6K4vMRKmpT2sMrHm7l6', 'MScheduler'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../util/ObjectPool'),
                    n = (function () {
                        function e() {
                            (this.delay = 0), (this.times = 0), (this.interval = 0), (this.runDuration = 0), (this.runTimes = 0), (this.nextTimeMark = 0), (this.needPercent = !1), (this.deleted = !1), (this.cb = null);
                        }
                        return (
                            (e.prototype.reset = function () {
                                (this.delay = 0), (this.times = 0), (this.interval = 0), (this.runDuration = 0), (this.runTimes = 0), (this.nextTimeMark = 0), (this.cb = null), (this.deleted = !1), (this.needPercent = !1);
                            }),
                            e
                        );
                    })(),
                    a = (function () {
                        function e() {
                            (this.items = []), (this.pool = new o.default(e.createItem));
                        }
                        return (
                            (e.prototype.update = function (e) {
                                for (var t = 0, i = this.items.length; t < i; ++t) {
                                    if (!(n = this.items[t]).deleted && ((n.runDuration += e), n.runDuration >= n.nextTimeMark)) {
                                        if ((n.runTimes++, (n.nextTimeMark += n.interval), n.needPercent))
                                            if (0 === n.times) n.cb(1);
                                            else {
                                                var o = n.runTimes / n.times;
                                                n.cb(o);
                                            }
                                        else n.cb();
                                        n.runTimes >= n.times && (n.deleted = !0);
                                    }
                                }
                                for (t = 0, i = this.items.length; t < i; ++t) {
                                    var n;
                                    (n = this.items[t]).deleted && (this.items.splice(t, 1), n.reset(), this.pool.put(n), --t, --i);
                                }
                            }),
                            (e.prototype.scheduleOnce = function (e, t) {
                                return this.scheduleLoop(e, 0, 1, t);
                            }),
                            (e.prototype.scheduleLoop = function (e, t, i, o, n) {
                                if ((void 0 === n && (n = !1), 0 == i)) return !1;
                                var a = this.pool.get();
                                return (a.delay = o), (a.interval = t), (a.times = i), (a.needPercent = n), (a.nextTimeMark = o), (a.cb = e), this.items.push(a), !0;
                            }),
                            (e.prototype.unSchedule = function (e) {
                                for (var t = 0, i = this.items.length; t < i; ++t) {
                                    var o = this.items[t];
                                    if (o.cb == e) return (o.deleted = !0);
                                }
                                return !1;
                            }),
                            (e.prototype.unScheduleAll = function () {
                                for (var e = 0, t = this.items.length; e < t; ++e) {
                                    this.items[e].deleted = !0;
                                }
                            }),
                            (e.createItem = function () {
                                return new n();
                            }),
                            (e.INFINITE = 999999),
                            e
                        );
                    })();
                (i.default = a), cc._RF.pop();
            },
            {
                '../../util/ObjectPool': 'ObjectPool',
            },
        ],
        MSelfDefine: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '25e03Ad/zBBFYrda2H7fR37', 'MSelfDefine'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (n) {
                    function e(e, t) {
                        var i = n.call(this, t) || this;
                        return (i.cb = null), (i.cb = e), i;
                    }
                    return (
                        __extends(e, n),
                        (e.prototype.update = function (e) {
                            var t = this.percent(),
                                i = n.prototype.update.call(this, e),
                                o = this.percent();
                            return this.cb(o, o - t), i;
                        }),
                        e
                    );
                })(e('./MAction').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './MAction': 'MAction',
            },
        ],
        MSequence: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '0223fZmRz9HU64HCaYX5t8F', 'MSequence'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (n) {
                    function e() {
                        for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                        var i = n.call(this, 0) || this;
                        return (i.subActions = []), (i.current = 0), i.addActions(e), i;
                    }
                    return (
                        __extends(e, n),
                        (e.prototype.addActions = function (e) {
                            for (var t = 0, i = e.length; t < i; ++t) this.subActions.push(e[t]);
                            this.duration = this.calcTotalDuration();
                        }),
                        (e.prototype.ready = function () {
                            n.prototype.ready.call(this);
                            for (var e = (this.current = 0), t = this.subActions.length; e < t; ++e) this.subActions[e].ready();
                        }),
                        (e.prototype.start = function (e) {
                            (n.prototype.start.call(this, e), this.current < this.subActions.length) && this.subActions[this.current].start(this.target);
                        }),
                        (e.prototype.update = function (e) {
                            var t = n.prototype.update.call(this, e);
                            if (this.current < this.subActions.length) {
                                var i = this.subActions[this.current];
                                if (i.update(e)) {
                                    var o = i.getTime() - i.getDuration();
                                    i.last(!1), this.nextAction(o);
                                }
                            }
                            return t;
                        }),
                        (e.prototype.finish = function () {
                            return this.current >= this.subActions.length;
                        }),
                        (e.prototype.last = function (e) {
                            if ((n.prototype.last.call(this, e), e))
                                for (var t = 0, i = this.subActions.length; t < i; ++t) {
                                    this.subActions[t].last(e);
                                }
                        }),
                        (e.prototype.calcTotalDuration = function () {
                            for (var e = 0, t = 0, i = this.subActions.length; t < i; ++t) e += this.subActions[t].getDuration();
                            return e;
                        }),
                        (e.prototype.nextAction = function (e) {
                            if ((void 0 === e && (e = 0), this.current++, !(this.current >= this.subActions.length))) {
                                var t = this.subActions[this.current];
                                if ((t.start(this.target), t.update(e), t.finish())) {
                                    var i = t.getTime() - t.getDuration();
                                    t.last(!1), this.nextAction(i);
                                }
                            }
                        }),
                        e
                    );
                })(e('./MAction').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './MAction': 'MAction',
            },
        ],
        MSetProperty: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'bd5e7TuoOFJDZC1Q02136Px', 'MSetProperty'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (e) {
                    function t(o) {
                        var n =
                            e.call(this, function () {
                                var e = n.target;
                                for (var t in o) {
                                    var i = o[t];
                                    void 0 !== e[t] && (e[t] = i);
                                }
                            }) || this;
                        return n;
                    }
                    return __extends(t, e), t;
                })(e('./MCallFunc').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './MCallFunc': 'MCallFunc',
            },
        ],
        MSpawn: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '50602Gwsn9By73C0FCy5o24', 'MSpawn'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (a) {
                    function e() {
                        for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                        var i = a.call(this, 0) || this;
                        return (i.subActions = []), i.addActions(e), i;
                    }
                    return (
                        __extends(e, a),
                        (e.prototype.addActions = function (e) {
                            for (var t = 0, i = e.length; t < i; ++t) this.subActions.push(e[t]);
                            this.duration = this.calcMaxDuration();
                        }),
                        (e.prototype.ready = function () {
                            a.prototype.ready.call(this);
                            for (var e = 0, t = this.subActions.length; e < t; ++e) this.subActions[e].ready();
                        }),
                        (e.prototype.start = function (e) {
                            a.prototype.start.call(this, e);
                            for (var t = 0, i = this.subActions.length; t < i; ++t) this.subActions[t].start(e);
                        }),
                        (e.prototype.update = function (e) {
                            for (var t = a.prototype.update.call(this, e), i = 0, o = this.subActions.length; i < o; ++i) {
                                var n = this.subActions[i];
                                if (!n.finish()) n.update(e) && n.last(!1);
                            }
                            return t;
                        }),
                        (e.prototype.last = function (e) {
                            if ((void 0 === e && (e = !1), a.prototype.last.call(this, e), e))
                                for (var t = 0, i = this.subActions.length; t < i; ++t) {
                                    this.subActions[t].last(e);
                                }
                        }),
                        (e.prototype.calcMaxDuration = function () {
                            for (var e = 0, t = 0, i = this.subActions.length; t < i; ++t) {
                                var o = this.subActions[t].getDuration();
                                e < o && (e = o);
                            }
                            return e;
                        }),
                        e
                    );
                })(e('./MAction').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './MAction': 'MAction',
            },
        ],
        MUIBoard: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '1ce5ezW31xDdq5n+g7RbRuA', 'MUIBoard'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./MUINode'),
                    a = e('./MUIDefines'),
                    n = e('../../util/Utility'),
                    r = (function () {
                        function e() {}
                        return (e.prototype.initilize = function (e) {}), (e.prototype.uninitilize = function (e) {}), (e.prototype.begin = function (e) {}), (e.prototype.commit = function (e) {}), (e.prototype.beginRTT = function (e, t) {}), (e.prototype.commitRTT = function (e) {}), e;
                    })(),
                    s = (function () {
                        function e() {
                            switch (((this.rootNode = new o.default()), (this.renderParam = new a.MUI.RenderParam()), (this.width = 0), (this.height = 0), a.MUI.global.renderType)) {
                                case a.MUI.RenderType.CANVAS:
                                    this.implement = new l();
                                    break;
                                case a.MUI.RenderType.WEBGL:
                                    this.implement = new c();
                            }
                        }
                        return (
                            (e.prototype.setSize = function (e, t) {
                                (this.width = e), (this.height = t);
                            }),
                            (e.prototype.getWidth = function () {
                                return this.width;
                            }),
                            (e.prototype.getHeight = function () {
                                return this.height;
                            }),
                            (e.prototype.initilize = function (e) {
                                this.implement.initilize(e);
                            }),
                            (e.prototype.uninitilize = function (e) {
                                this.implement.uninitilize(e), this.getRootNode().destroy();
                            }),
                            (e.prototype.render = function (e) {
                                this.implement.begin(e), (this.renderParam.scale = this.rootNode.getScale()), this.rootNode.draw(e, this.renderParam), this.implement.commit(e);
                            }),
                            (e.prototype.renderToTexture = function (e, t) {
                                this.implement.beginRTT(e, t), (this.renderParam.scale = this.rootNode.getScale()), this.rootNode.draw(e, this.renderParam), this.implement.commitRTT(e);
                            }),
                            (e.prototype.getRootNode = function () {
                                return this.rootNode;
                            }),
                            e
                        );
                    })();
                i.default = s;
                var c = (function (t) {
                    function e() {
                        var e = t.call(this) || this;
                        return (e.fragmentShaderSrc = ''), (e.rttFramebuffer = null), (e.rttRenderBuffer = null), (e.oldFrameBuffer = null), (e.oldShaderProgram = null), (e.oldViewPort = new n.Utility.Rect(0, 0, 0, 0)), e;
                    }
                    return (
                        __extends(e, t),
                        (e.prototype.initilize = function (e) {}),
                        (e.prototype.uninitilize = function (e) {
                            var t = e;
                            this.rttFramebuffer && (t.deleteFramebuffer(this.rttFramebuffer), (this.rttFramebuffer = null)), this.rttRenderBuffer && (t.deleteRenderbuffer(this.rttRenderBuffer), (this.rttRenderBuffer = null));
                        }),
                        (e.prototype.begin = function (e) {
                            var t = e;
                            this.storeGLStatues(t), t.enable(t.BLEND), t.disable(t.DEPTH_TEST), t.blendFunc(t.SRC_ALPHA, t.ONE_MINUS_SRC_ALPHA), t.clearColor(0, 0, 0, 0), t.clear(t.COLOR_BUFFER_BIT | t.DEPTH_BUFFER_BIT), null !== a.MUI.global.shaderObject && t.useProgram(a.MUI.global.shaderObject.shaderProgram);
                        }),
                        (e.prototype.commit = function (e) {
                            var t = e;
                            cc.sys.platform === cc.sys.QQ_PLAY && t.glCommit(), this.reStoreGLStatues(t);
                        }),
                        (e.prototype.beginRTT = function (e, t) {
                            var i = e,
                                o = t;
                            if ((this.rttFramebuffer || this.createRTTFrameBuffer(i, o), this.storeRTTGLStatues(i), this.rttFramebuffer)) {
                                i.enable(i.BLEND), i.disable(i.DEPTH_TEST), i.blendFunc(i.SRC_ALPHA, i.ONE_MINUS_SRC_ALPHA), i.bindFramebuffer(i.FRAMEBUFFER, this.rttFramebuffer);
                                var n = a.MUI.global.rttViewPort;
                                i.viewport(n[0], n[1], n[2], n[3]), i.framebufferTexture2D(i.FRAMEBUFFER, i.COLOR_ATTACHMENT0, i.TEXTURE_2D, o, 0), i.clearColor(0, 0, 0, 0), i.clear(i.COLOR_BUFFER_BIT | i.DEPTH_BUFFER_BIT), null !== a.MUI.global.shaderObject && i.useProgram(a.MUI.global.shaderObject.shaderProgram);
                            }
                        }),
                        (e.prototype.commitRTT = function (e) {
                            var t = e;
                            cc.sys.platform === cc.sys.QQ_PLAY && t.glCommit(), this.reStoreRTTGLStatues(t);
                        }),
                        (e.prototype.storeGLStatues = function (e) {
                            this.oldShaderProgram = e.getParameter(e.CURRENT_PROGRAM);
                        }),
                        (e.prototype.reStoreGLStatues = function (e) {
                            e.useProgram(this.oldShaderProgram);
                        }),
                        (e.prototype.storeRTTGLStatues = function (e) {
                            (this.oldFrameBuffer = e.getParameter(e.FRAMEBUFFER_BINDING)), (this.oldShaderProgram = e.getParameter(e.CURRENT_PROGRAM));
                        }),
                        (e.prototype.reStoreRTTGLStatues = function (e) {
                            e.bindFramebuffer(e.FRAMEBUFFER, this.oldFrameBuffer), e.useProgram(this.oldShaderProgram), e.viewport(0, 0, a.MUI.global.viewWidth, a.MUI.global.viewHeight);
                        }),
                        (e.prototype.createRTTFrameBuffer = function (e, t) {
                            if (((this.rttFramebuffer = e.createFramebuffer()), null != this.rttFramebuffer)) {
                                this.rttRenderBuffer = e.createRenderbuffer();
                                var i = e.getParameter(e.RENDERBUFFER_BINDING);
                                e.bindRenderbuffer(e.RENDERBUFFER, this.rttRenderBuffer), e.renderbufferStorage(e.RENDERBUFFER, e.DEPTH_COMPONENT16, a.MUI.global.rttWidth, a.MUI.global.rttHeight), e.bindRenderbuffer(e.RENDERBUFFER, i), e.bindFramebuffer(e.FRAMEBUFFER, this.rttFramebuffer), e.framebufferRenderbuffer(e.FRAMEBUFFER, e.DEPTH_ATTACHMENT, e.RENDERBUFFER, this.rttRenderBuffer);
                                var o = e.checkFramebufferStatus(e.FRAMEBUFFER);
                                o != e.FRAMEBUFFER_COMPLETE && console.log('gl.checkFramebufferStatus e = ' + o), e.bindFramebuffer(e.FRAMEBUFFER, null);
                            }
                        }),
                        e
                    );
                })(r);
                i.MUIBoardWebGLImpl = c;
                var l = (function (e) {
                    function t() {
                        return e.call(this) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.begin = function (e) {
                            e.clearRect(0, 0, a.MUI.global.viewWidth, a.MUI.global.viewHeight);
                        }),
                        (t.prototype.commit = function (e) {}),
                        (t.prototype.beginRTT = function (e, t) {
                            e.clearRect(0, 0, a.MUI.global.viewWidth, a.MUI.global.viewHeight);
                        }),
                        (t.prototype.commitRTT = function (e) {}),
                        t
                    );
                })(r);
                (i.MUIBoardCanvasImpl = l), cc._RF.pop();
            },
            {
                '../../util/Utility': 'Utility',
                './MUIDefines': 'MUIDefines',
                './MUINode': 'MUINode',
            },
        ],
        MUIButton: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'cc2eeOUPulElYelwgHG0o7H', 'MUIButton'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (a) {
                    function e(e, t, i, o) {
                        void 0 === o && (o = null);
                        var n = a.call(this) || this;
                        return (n.touched = !1), (n.enabled = !0), (n.normalImageItem = null), (n.pressedImageItem = null), (n.onTouchListener = null), (n.touchHandler = null), (n.imageData = e), n.setImageItem(t), (n.normalImageItem = t), i && (n.pressedImageItem = i), n;
                    }
                    return (
                        __extends(e, a),
                        (e.prototype.setOnTouchListener = function (e) {
                            this.onTouchListener = e;
                        }),
                        (e.prototype.setEnable = function (e) {
                            this.enabled = e;
                        }),
                        (e.prototype.touchStart = function (e) {
                            if (!this.enabled || !this.visible) return !1;
                            for (var t = !1, i = 0, o = e.length; i < o; ++i) {
                                var n = e[i];
                                if (this.rect.contains(n.clientX, n.clientY)) {
                                    t = !0;
                                    break;
                                }
                            }
                            return t && ((this.touched = !0), this.pressedImageItem && (this.imageItem = this.pressedImageItem), this.onTouchListener && this.onTouchListener()), t;
                        }),
                        (e.prototype.touchEnd = function () {
                            return !!this.touched && ((this.touched = !1), (this.imageItem = this.normalImageItem), !0);
                        }),
                        (e.prototype.setTouchHandler = function (e) {
                            e && (this.touchHandler = e);
                        }),
                        e
                    );
                })(e('./MUISprite').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './MUISprite': 'MUISprite',
            },
        ],
        MUIDefines: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '437fbkI5AlDP5uUZbT1JRMP', 'MUIDefines'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    (function (s) {
                        var e, t;
                        ((t = e = s.RenderType || (s.RenderType = {}))[(t.WEBGL = 1)] = 'WEBGL'), (t[(t.CANVAS = 2)] = 'CANVAS');
                        var i = function () {
                            (this.shaderProgram = null), (this.vertexPositionAttribute = null), (this.vertexTextureAttribute = null), (this.texture0Uniform = null), (this.opacityUniform = null), (this.typeUniform = null), (this.color0Uniform = null);
                        };
                        s.ShaderObject = i;
                        var o = (function () {
                            function r() {}
                            return (
                                (r.initilize = function (e, t, i, o) {
                                    var n = r;
                                    if (e === s.RenderType.WEBGL) {
                                        (n.renderType = s.RenderType.WEBGL), (n.ctx = t), (n.viewWidth = Math.max(1, i)), (n.viewHeight = Math.max(1, o));
                                        var a = t;
                                        n.pickFitRTTSize(a), n.calcRttViewPort(), (n.shaderObject = n.initShaderProgram(a, n.vertexShaderSrc, n.fragmentShaderSrc)), console.log('rttWidth = ' + n.rttWidth + ' ,  rttHeight = ' + n.rttHeight);
                                    } else (n.renderType = s.RenderType.CANVAS), (n.ctx = t), (n.viewWidth = i), (n.viewHeight = o), (n.rttWidth = i), (n.rttHeight = o), (r.rttViewPort[0] = 0), (r.rttViewPort[1] = 0), (r.rttViewPort[2] = i), (r.rttViewPort[3] = o);
                                }),
                                (r.unInitilize = function () {
                                    var e = r;
                                    if (e.renderType === s.RenderType.WEBGL) {
                                        var t = e.ctx;
                                        e.shaderObject && e.shaderObject.shaderProgram && (t.deleteProgram(e.shaderObject.shaderProgram), (e.shaderObject = null));
                                    }
                                }),
                                (r.initShaderProgram = function (e, t, i) {
                                    var o = new s.ShaderObject(),
                                        n = this.loadShader(e, e.VERTEX_SHADER, t);
                                    if (null == n) return null;
                                    var a = this.loadShader(e, e.FRAGMENT_SHADER, i);
                                    if (null == a) return e.deleteShader(n), null;
                                    var r = e.createProgram();
                                    return e.attachShader(r, n), e.attachShader(r, a), e.linkProgram(r), e.getProgramParameter(r, e.LINK_STATUS) ? (e.deleteShader(n), e.deleteShader(a), (o.shaderProgram = r), (o.vertexPositionAttribute = e.getAttribLocation(r, 'pos')), e.enableVertexAttribArray(o.vertexPositionAttribute), (o.vertexTextureAttribute = e.getAttribLocation(r, 'aTexPos')), e.enableVertexAttribArray(o.vertexTextureAttribute), (o.texture0Uniform = e.getUniformLocation(r, 'texture0')), (o.opacityUniform = e.getUniformLocation(r, 'opacity')), (o.typeUniform = e.getUniformLocation(r, 'type')), (o.color0Uniform = e.getUniformLocation(r, 'color0')), o) : (console.warn('gl.getProgramParameter error'), e.deleteShader(n), e.deleteShader(a), null);
                                }),
                                (r.loadShader = function (e, t, i) {
                                    var o = e.createShader(t);
                                    return e.shaderSource(o, i), e.compileShader(o), e.getShaderParameter(o, e.COMPILE_STATUS) ? o : (console.warn('gl.getShaderParameter error'), e.deleteShader(o), null);
                                }),
                                (r.pickFitRTTSize = function (e) {
                                    var t = e.getParameter(e.MAX_TEXTURE_SIZE);
                                    0 === t && (t = 512);
                                    var i = r;
                                    for (i.viewHeight > i.rttHeight && (i.rttHeight = r.nextPot(Math.floor(i.viewHeight))), i.viewWidth > i.rttWidth && (i.rttWidth = r.nextPot(Math.floor(i.viewWidth))); i.rttHeight > t; ) i.rttHeight = i.rttHeight >>> 1;
                                    for (; i.rttWidth > t; ) i.rttWidth = i.rttWidth >>> 1;
                                }),
                                (r.calcRttViewPort = function () {
                                    (r.rttViewPort[0] = 0), (r.rttViewPort[1] = 0);
                                    var e = r.viewWidth / r.viewHeight,
                                        t = Math.min(r.rttHeight, r.viewHeight),
                                        i = t * e;
                                    r.rttWidth < t * e && (t = (i = r.rttWidth) / e), (r.rttViewPort[2] = i), (r.rttViewPort[3] = t);
                                }),
                                (r.nextPot = function (e) {
                                    return (e -= 1), (e |= e >> 1), (e |= e >> 2), (e |= e >> 4), (e |= e >> 8), (e |= e >> 16) + 1;
                                }),
                                (r.renderType = e.WEBGL),
                                (r.ctx = null),
                                (r.shaderObject = null),
                                (r.viewWidth = 1),
                                (r.viewHeight = 1),
                                (r.rttWidth = 512),
                                (r.rttHeight = 512),
                                (r.rttViewPort = [0, 0, 0, 0]),
                                (r.vertexShaderSrc = '\n        attribute vec3 pos;\n        attribute vec2 aTexPos;\n\n        varying vec2 vTexPos;\n        void main() {\n            gl_Position = vec4(pos.x, pos.y, pos.z, 1.0);\n\n            vTexPos = aTexPos;\n        }\n        '),
                                (r.fragmentShaderSrc = '\n        precision mediump float;\n        varying vec2 vTexPos;\n\n        uniform int type;\n        uniform float opacity;\n\n        uniform sampler2D texture0;\n        uniform vec4 color0;\n\n        void main() {\n            //gl_FragColor = vec4(vTexPos.s, vTexPos.t, vTexPos.s, 1.0);\n            if (type == 0) {\n                vec4 color = texture2D(texture0, vTexPos);\n                gl_FragColor = vec4(color.r, color.g, color.b,  color.a * opacity);\n            } else {\n                gl_FragColor = vec4(color0.r, color0.g, color0.b,  color0.a * opacity);\n            }\n            \n        }\n        '),
                                r
                            );
                        })();
                        s.global = o;
                        var n,
                            a = function () {
                                (this.centerX = 0), (this.centerY = 0), (this.width = 0), (this.height = 0), (this.scale = 1), (this.opacity = 1), (this.rotation = 0), (this.dirty = !0);
                            };
                        (s.RenderParam = a), ((n = s.ActionId || (s.ActionId = {}))[(n.None = 0)] = 'None'), (n[(n.AdvanceAnimation = 1)] = 'AdvanceAnimation'), (n[(n.Blink = 2)] = 'Blink'), (n[(n.CallFunc = 3)] = 'CallFunc'), (n[(n.ChildAction = 4)] = 'ChildAction'), (n[(n.CircleMoveBy = 5)] = 'CircleMoveBy'), (n[(n.CircleMoveTo = 6)] = 'CircleMoveTo'), (n[(n.Delay = 7)] = 'Delay'), (n[(n.FadeTo = 8)] = 'FadeTo'), (n[(n.FrameSequence = 9)] = 'FrameSequence'), (n[(n.MoveBy = 10)] = 'MoveBy'), (n[(n.MoveTo = 11)] = 'MoveTo'), (n[(n.PropValue = 12)] = 'PropValue'), (n[(n.RandomChange = 13)] = 'RandomChange'), (n[(n.RandomFade = 14)] = 'RandomFade'), (n[(n.RandomMove = 15)] = 'RandomMove'), (n[(n.RandomScale = 16)] = 'RandomScale'), (n[(n.ResizeBy = 17)] = 'ResizeBy'), (n[(n.ScaleBy = 18)] = 'ScaleBy'), (n[(n.ScaleTo = 19)] = 'ScaleTo'), (n[(n.SelfDefine = 20)] = 'SelfDefine'), (n[(n.Sequence = 21)] = 'Sequence'), (n[(n.Spawn = 22)] = 'Spawn'), (n[(n.ResizeTo = 23)] = 'ResizeTo'), (n[(n.SetProperty = 24)] = 'SetProperty');
                    })(i.MUI || (i.MUI = {})),
                    cc._RF.pop();
            },
            {},
        ],
        MUIDrawNode: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'ab7e81tnm1M+IH4b56LGziQ', 'MUIDrawNode'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (o) {
                    function e(e, t) {
                        void 0 === t && (t = null);
                        var i = o.call(this, t) || this;
                        return (i.drawFunction = e), i;
                    }
                    return (
                        __extends(e, o),
                        (e.prototype.draw = function (e, t) {
                            this.drawFunction(e, t), o.prototype.drawChildren.call(this, e, t);
                        }),
                        e
                    );
                })(e('./MUINode').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './MUINode': 'MUINode',
            },
        ],
        MUIFactory: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '0355dcZ7ttDE7Gjj+8kKYOM', 'MUIFactory'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./MUINode'),
                    n = e('./MUISprite'),
                    a = e('./MUINineScaleSprite'),
                    r = (function () {
                        function e() {}
                        return (
                            (e.prototype.createNode = function (e) {
                                return void 0 === e && (e = null), new o.default(e);
                            }),
                            (e.prototype.createSpriteNode = function (e) {
                                return void 0 === e && (e = null), new n.default(e);
                            }),
                            (e.prototype.createNineScaleSpriteNode = function (e) {
                                return void 0 === e && (e = null), new a.default(e);
                            }),
                            (e.prototype.createParticularNode = function (e, t) {
                                return void 0 === t && (t = null), 'MUISprite' === e ? this.createSpriteNode(t) : 'MUINineScaleSprite' === e ? this.createNineScaleSpriteNode(t) : null;
                            }),
                            (e.instance = new e()),
                            e
                        );
                    })();
                (i.default = r), cc._RF.pop();
            },
            {
                './MUINineScaleSprite': 'MUINineScaleSprite',
                './MUINode': 'MUINode',
                './MUISprite': 'MUISprite',
            },
        ],
        MUILabel: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '74fc1hu9AVDTJLdL728SF0d', 'MUILabel'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./MUINode'),
                    d = e('./MUIDefines'),
                    n = (function (u) {
                        function e() {
                            var e = (null !== u && u.apply(this, arguments)) || this;
                            return (e.text = null), (e.size = null), (e.font = null), (e.color = null), (e.align = null), (e.baseline = null), e;
                        }
                        return (
                            __extends(e, u),
                            (e.prototype.draw = function (e, t) {
                                switch (d.MUI.global.renderType) {
                                    case d.MUI.RenderType.WEBGL:
                                        break;
                                    case d.MUI.RenderType.CANVAS:
                                        if (this.text && 0 < this.size) {
                                            var i = e,
                                                o = i.fillStyle,
                                                n = i.globalAlpha;
                                            i.globalAlpha = t.opacity;
                                            var a = Math.floor(t.centerX),
                                                r = Math.floor(i.canvas.height - t.centerY);
                                            i.translate(a, r);
                                            var s = -(t.width >>> 1),
                                                c = -(t.height >>> 1);
                                            (i.fillStyle = this.color || '#000000'), (i.textAlign = this.align || 'center'), (i.textBaseline = this.baseline || 'center');
                                            var l = this.font || 'Arial';
                                            (i.font = Math.round(this.size * t.scale) + 'px ' + l), i.fillText(this.text, s, c), i.translate(-a, -r), (i.globalAlpha = n), (i.fillStyle = o);
                                        }
                                }
                                u.prototype.drawChildren.call(this, e, t);
                            }),
                            (e.prototype.reload = function () {
                                d.MUI.global.renderType, d.MUI.RenderType.WEBGL;
                            }),
                            e
                        );
                    })(o.default);
                (i.default = n), cc._RF.pop();
            },
            {
                './MUIDefines': 'MUIDefines',
                './MUINode': 'MUINode',
            },
        ],
        MUILine: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '0d240nEthJAXZTNI/iMIWAW', 'MUILine'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./MUINode'),
                    s = e('./MUIDefines'),
                    n = (function (r) {
                        function e(e) {
                            void 0 === e && (e = null);
                            var t = r.call(this, e) || this;
                            return (t.pts = []), (t.color = new cc.Color(0, 0, 0, 255)), (t.colorHex = '#000000'), (t.dirty = !1), (t.vertexBuffer = null), t;
                        }
                        return (
                            __extends(e, r),
                            (e.prototype.draw = function (e, t) {
                                switch (s.MUI.global.renderType) {
                                    case s.MUI.RenderType.WEBGL:
                                        var i = e;
                                        if ((this.dirty && (this.updateVertexBuffer(e), (this.dirty = !1)), s.MUI.global.shaderObject && this.vertexBuffer)) {
                                            i.uniform1i(s.MUI.global.shaderObject.typeUniform, 1), i.uniform1f(s.MUI.global.shaderObject.opacityUniform, t.opacity), i.uniform4f(s.MUI.global.shaderObject.color0Uniform, this.color.getR() / 255, this.color.getG() / 255, this.color.getB() / 255, this.color.getA() / 255), i.bindBuffer(i.ARRAY_BUFFER, this.vertexBuffer);
                                            i.vertexAttribPointer(s.MUI.global.shaderObject.vertexPositionAttribute, 3, i.FLOAT, !0, 20, 0), i.vertexAttribPointer(s.MUI.global.shaderObject.vertexTextureAttribute, 2, i.FLOAT, !0, 20, 12), i.drawArrays(i.LINES, 0, this.pts.length), i.bindBuffer(i.ARRAY_BUFFER, null);
                                        }
                                        break;
                                    case s.MUI.RenderType.CANVAS:
                                        var o = e;
                                        (o.lineWidth = 1), (o.strokeStyle = this.colorHex), o.beginPath();
                                        for (var n = 0, a = this.pts.length; n + 1 < a; n += 2) o.moveTo(this.pts[n].x, this.pts[n].y), o.lineTo(this.pts[n + 1].x, this.pts[n + 1].y);
                                        o.closePath(), o.stroke();
                                }
                                r.prototype.drawChildren.call(this, e, t);
                            }),
                            (e.prototype.setColor = function (e) {
                                (this.color = e.clone()), (this.colorHex = '#' + this.color.toHEX('#rrggbb'));
                            }),
                            (e.prototype.setLine = function (e) {
                                for (var t = 0, i = e.length; t < i; ++t) this.pts.push(e[t]);
                                this.dirty = !0;
                            }),
                            (e.prototype.updateVertexBuffer = function (e) {
                                this.vertexBuffer || (this.vertexBuffer = e.createBuffer());
                                for (var t = new Float32Array(5 * this.pts.length), i = 0, o = this.pts.length; i < o; ++i) {
                                    var n = this.pts[i],
                                        a = 5 * i;
                                    (t[a++] = (n.x / s.MUI.global.viewWidth) * 2 - 1), (t[a++] = (n.y / s.MUI.global.viewHeight) * 2 - 1), (t[a++] = 0), (t[a++] = 0), (t[a++] = 0);
                                }
                                e.bindBuffer(e.ARRAY_BUFFER, this.vertexBuffer), e.bufferData(e.ARRAY_BUFFER, t, e.STREAM_DRAW), e.bindBuffer(e.ARRAY_BUFFER, null);
                            }),
                            e
                        );
                    })(o.default);
                (i.default = n), cc._RF.pop();
            },
            {
                './MUIDefines': 'MUIDefines',
                './MUINode': 'MUINode',
            },
        ],
        MUINineScaleSprite: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '9326dvHjUhK/b1zhXLBiUcc', 'MUINineScaleSprite'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./MUISprite'),
                    v = e('./MUIDefines'),
                    m = e('../atlas/CanvasFunction'),
                    a = (function () {
                        function e() {
                            (this.sl = 0), (this.ss = 0), (this.l = 0), (this.s = 0), (this.minusL = !1), (this.minusS = !1);
                        }
                        return (
                            (e.prototype.set = function (e, t, i, o, n, a) {
                                void 0 === n && (n = !1), void 0 === a && (a = !1), (this.sl = e), (this.ss = t), (this.l = i), (this.s = o), (this.minusL = n), (this.minusS = a);
                            }),
                            e
                        );
                    })(),
                    n = (function (f) {
                        function e(e) {
                            void 0 === e && (e = null);
                            var t = f.call(this, e) || this;
                            return (t.insetTop = 0), (t.insetBottom = 0), (t.insetLeft = 0), (t.insetRight = 0), (t.insetDirty = !0), (t.xparams = []), (t.yparams = []), t;
                        }
                        return (
                            __extends(e, f),
                            (e.prototype.setInset = function (e, t, i, o) {
                                0 <= t && (this.insetTop = t), 0 <= o && (this.insetBottom = o), 0 <= e && (this.insetLeft = e), 0 <= i && (this.insetRight = i), this.calcNineParam();
                            }),
                            (e.prototype.draw = function (e, t) {
                                var i = this.imageItem;
                                if ((0 < this.frame && (i = this.frameSequence.frames[this.frame - 1]), i)) {
                                    if (v.MUI.global.renderType === v.MUI.RenderType.WEBGL) {
                                        var o = e;
                                        if ((this.updateVertex(e, t, i), this.updateVertexBuffer(e), (t.dirty = !1), v.MUI.global.shaderObject)) {
                                            o.uniform1i(v.MUI.global.shaderObject.typeUniform, 0), o.uniform1f(v.MUI.global.shaderObject.opacityUniform, t.opacity), o.activeTexture(o.TEXTURE0), o.bindTexture(o.TEXTURE_2D, this.imageData.texture), o.uniform1i(v.MUI.global.shaderObject.texture0Uniform, 0), o.bindBuffer(o.ARRAY_BUFFER, this.vertexBuffer);
                                            var n = this.vertexArray.BYTES_PER_ELEMENT;
                                            o.vertexAttribPointer(v.MUI.global.shaderObject.vertexPositionAttribute, 3, o.FLOAT, !0, 5 * n, 0), o.vertexAttribPointer(v.MUI.global.shaderObject.vertexTextureAttribute, 2, o.FLOAT, !0, 5 * n, 3 * n);
                                            for (var a = 0; a < 3; ++a) {
                                                if (null != (p = this.xparams[a]))
                                                    for (var r = 0; r < 3; ++r) {
                                                        null != (h = this.yparams[r]) && o.drawArrays(o.TRIANGLE_STRIP, 4 * (3 * a + r), 4);
                                                    }
                                            }
                                            o.bindBuffer(o.ARRAY_BUFFER, null);
                                        }
                                    } else {
                                        var s = e.globalAlpha;
                                        e.globalAlpha = t.opacity;
                                        var c = t.centerX,
                                            l = e.canvas.height - t.centerY;
                                        e.translate(c, l);
                                        var u = -t.width / 2,
                                            d = -t.height / 2;
                                        for (a = 0; a < 3; ++a) {
                                            var p;
                                            if (null != (p = this.xparams[a]))
                                                for (r = 0; r < 3; ++r) {
                                                    var h;
                                                    null != (h = this.yparams[r]) && (1 != t.scale ? m.CanvasFunction.drawPartImageItemScale(e, this.imageData, i, p.sl, h.sl, p.ss, h.ss, u + (p.minusL ? t.width + p.l * t.scale : p.l * t.scale), d + (h.minusL ? t.height + h.l * t.scale : h.l * t.scale), p.minusS ? t.width + p.s * t.scale : p.s * t.scale, h.minusS ? t.height + h.s * t.scale : h.s * t.scale) : m.CanvasFunction.drawPartImageItemScale(e, this.imageData, i, p.sl, h.sl, p.ss, h.ss, u + (p.minusL ? t.width + p.l : p.l), d + (h.minusL ? t.height + h.l : h.l), p.minusS ? t.width + p.s : p.s, h.minusS ? t.height + h.s : h.s));
                                                }
                                        }
                                        e.translate(-c, -l), (e.globalAlpha = s);
                                    }
                                    f.prototype.drawChildren.call(this, e, t);
                                } else f.prototype.drawChildren.call(this, e, t);
                            }),
                            (e.prototype.calcNineParam = function () {
                                var e = this.imageItem;
                                if ((0 < this.frame && (e = this.frameSequence.frames[this.frame - 1]), null != e)) {
                                    (this.xparams = []), (this.yparams = []);
                                    for (var t = 0; t < 3; ++t) {
                                        if (0 === t) {
                                            if (0 === this.insetLeft) continue;
                                            null == this.xparams[t] && (this.xparams[t] = new a()), this.xparams[t].set(0, this.insetLeft, 0, this.insetLeft);
                                        } else if (1 === t) {
                                            var i = this.insetLeft + this.insetRight;
                                            if (i >= e.rect.width) continue;
                                            null == this.xparams[t] && (this.xparams[t] = new a()), this.xparams[t].set(this.insetLeft, e.rect.width - i, this.insetLeft, -i, !1, !0);
                                        } else {
                                            if (0 === this.insetRight) continue;
                                            null == this.xparams[t] && (this.xparams[t] = new a()), this.xparams[t].set(e.rect.width - this.insetRight, this.insetRight, -this.insetRight, this.insetRight, !0, !1);
                                        }
                                        for (var o = 0; o < 3; ++o)
                                            if (0 === o) {
                                                if (0 === this.insetTop) continue;
                                                null == this.yparams[o] && (this.yparams[o] = new a()), this.yparams[o].set(0, this.insetTop, 0, this.insetTop);
                                            } else if (1 === o) {
                                                var n = this.insetTop + this.insetBottom;
                                                if (n >= e.rect.height) continue;
                                                null == this.yparams[o] && (this.yparams[o] = new a()), this.yparams[o].set(this.insetTop, e.rect.height - n, this.insetTop, -n, !1, !0);
                                            } else {
                                                if (0 === this.insetBottom) continue;
                                                null == this.yparams[o] && (this.yparams[o] = new a()), this.yparams[o].set(e.rect.height - this.insetBottom, this.insetBottom, -this.insetBottom, this.insetBottom, !0, !1);
                                            }
                                    }
                                } else console.warn('MUINineScaleSprite.calcNineParam imageItem is null.');
                            }),
                            (e.prototype.updateVertex = function (e, t, i) {
                                var o = t.centerX - t.width / 2,
                                    n = t.centerY - t.height / 2;
                                this.vertexArray || (this.vertexArray = new Float32Array(180));
                                for (var a = this.vertexArray, r = 0; r < 3; ++r) {
                                    var s = this.xparams[r];
                                    if (null != s)
                                        for (var c = 0; c < 3; ++c) {
                                            var l = this.yparams[c];
                                            if (null != l) {
                                                var u = 20 * (3 * r + c),
                                                    d = ((l.minusS ? t.height + l.s * t.scale : l.s * t.scale) / v.MUI.global.viewHeight) * 2,
                                                    p = ((o + (s.minusL ? t.width + s.l * t.scale : s.l * t.scale)) / v.MUI.global.viewWidth) * 2 - 1,
                                                    h = -d + ((n + t.height - (l.minusL ? t.height + l.l * t.scale : l.l * t.scale)) / v.MUI.global.viewHeight) * 2 - 1,
                                                    f = p + ((s.minusS ? t.width + s.s * t.scale : s.s * t.scale) / v.MUI.global.viewWidth) * 2,
                                                    m = h + d,
                                                    g = (i.rect.x + s.sl) / this.imageData.image.width,
                                                    _ = (i.rect.y + l.sl) / this.imageData.image.height,
                                                    y = g + s.ss / this.imageData.image.width,
                                                    S = _ + l.ss / this.imageData.image.height;
                                                (a[u++] = p), (a[u++] = m), (a[u++] = 0), (a[u++] = g), (a[u++] = _), (a[u++] = p), (a[u++] = h), (a[u++] = 0), (a[u++] = g), (a[u++] = S), (a[u++] = f), (a[u++] = m), (a[u++] = 0), (a[u++] = y), (a[u++] = _), (a[u++] = f), (a[u++] = h), (a[u++] = 0), (a[u++] = y), (a[u++] = S);
                                            }
                                        }
                                }
                            }),
                            e
                        );
                    })(o.default);
                (i.default = n), cc._RF.pop();
            },
            {
                '../atlas/CanvasFunction': 'CanvasFunction',
                './MUIDefines': 'MUIDefines',
                './MUISprite': 'MUISprite',
            },
        ],
        MUINodePool: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'e79adUwkXpIApGRJpARMApQ', 'MUINodePool'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e(e, t, i) {
                        (this.rootNode = e), (this.createFunc = t), (this.updateFunc = i), (this.nodeCaches = []);
                    }
                    return (
                        (e.prototype.initPool = function (e) {
                            for (var t = 0; t < e; ++t) {
                                var i = this.createNode(null);
                                i.setVisible(!1), this.put(i);
                            }
                        }),
                        (e.prototype.get = function (e, t) {
                            if ((void 0 === t && (t = !0), 0 < this.nodeCaches.length)) {
                                var i = this.nodeCaches.pop();
                                return i.setVisible(t), this.updateNode(i, e), i;
                            }
                            var o = this.createNode(e);
                            return o.setVisible(t), o;
                        }),
                        (e.prototype.put = function (e) {
                            e && (e.setVisible(!1), this.nodeCaches.push(e));
                        }),
                        (e.prototype.createNode = function (e) {
                            var t = this.createFunc(this.rootNode, this);
                            return this.updateNode(e, t), t;
                        }),
                        (e.prototype.updateNode = function (e, t) {
                            this.updateFunc(e, t);
                        }),
                        e
                    );
                })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        MUINode: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '00458yfV8tIj4c0p3IV0sly', 'MUINode'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../util/Utility'),
                    n = e('./MUIDefines'),
                    a = (function () {
                        function e(e) {
                            void 0 === e && (e = null), (this.parent = null), (this.tag = 0), (this.visible = !0), (this.opacity = 1), (this.scale = 1), (this.frame = 0), (this.ratation = 0), (this.rect = new o.Utility.Rect(0, 0, 0, 0)), (this.renderParam = new n.MUI.RenderParam()), (this.children = []), (this.name = e), (this.userData = null), this.onCreate();
                        }
                        return (
                            (e.prototype.removeFromParent = function () {
                                null != this.parent && this.parent.removeChild(this);
                            }),
                            (e.prototype.draw = function (e, t) {
                                this.drawChildren(e, t);
                            }),
                            (e.prototype.drawChildren = function (e, t) {
                                for (var i = 0, o = this.children.length; i < o; ++i) {
                                    var n = this.children[i];
                                    if (n.visible) {
                                        var a = n.renderParam;
                                        1 == t.scale ? ((a.scale = n.scale), (a.centerX = t.centerX - t.width / 2 + n.rect.xCenter), (a.centerY = t.centerY - t.height / 2 + n.rect.yCenter), 1 == a.scale ? ((a.width = n.rect.width), (a.height = n.rect.height)) : ((a.width = n.rect.width * a.scale), (a.height = n.rect.height * a.scale))) : ((a.scale = t.scale * n.scale), (a.centerX = t.centerX - t.width / 2 + n.rect.xCenter * t.scale), (a.centerY = t.centerY - t.height / 2 + n.rect.yCenter * t.scale), (a.width = n.rect.width * a.scale), (a.height = n.rect.height * a.scale)), 1 == t.opacity ? (a.opacity = n.opacity) : (a.opacity = t.opacity * n.opacity), 0 != a.opacity && n.draw(e, a);
                                    }
                                }
                            }),
                            (e.prototype.setUserData = function (e) {
                                this.userData = e;
                            }),
                            (e.prototype.getUserData = function () {
                                return this.userData;
                            }),
                            (e.prototype.setTag = function (e) {
                                this.tag = e;
                            }),
                            (e.prototype.getTag = function () {
                                return this.tag;
                            }),
                            (e.prototype.setName = function (e) {
                                this.name = e;
                            }),
                            (e.prototype.getName = function () {
                                return this.name;
                            }),
                            (e.prototype.getPosition = function () {
                                return new cc.Vec2(this.rect.x, this.rect.y);
                            }),
                            (e.prototype.setPositionX = function (e) {
                                (this.rect.x = e), (this.renderParam.dirty = !0);
                            }),
                            (e.prototype.setPositionY = function (e) {
                                (this.rect.y = e), (this.renderParam.dirty = !0);
                            }),
                            (e.prototype.setPosition = function (e, t) {
                                this.move(e, t);
                            }),
                            (e.prototype.setContentSize = function (e, t) {
                                (this.rect.width = e), (this.rect.height = t), (this.renderParam.dirty = !0);
                            }),
                            (e.prototype.getHeight = function () {
                                return this.rect.height;
                            }),
                            (e.prototype.getWidth = function () {
                                return this.rect.width;
                            }),
                            (e.prototype.addChild = function (e, t) {
                                return void 0 === t && (t = 0), (e.tag = t), (e.parent = this).children.push(e), this.children.length - 1;
                            }),
                            (e.prototype.insertChild = function (e, t, i) {
                                return void 0 === i && (i = 0), (t.tag = i), (t.parent = this).children.splice(e, 0, t), this.children.length - 1;
                            }),
                            (e.prototype.removeChild = function (e) {
                                var t = this.getChildIndex(e);
                                return this.removeChildByIndex(t);
                            }),
                            (e.prototype.removeChildByIndex = function (e) {
                                if (e < 0 || e >= this.children.length) return !1;
                                (this.children[e].parent = null), this.children.splice(e, 1);
                            }),
                            (e.prototype.removeAllChildren = function () {
                                this.children = [];
                            }),
                            (e.prototype.getChildByTag = function (e) {
                                for (var t = 0, i = this.children.length; t < i; ++t) if (this.children[t].tag == e) return this.children[t];
                                return null;
                            }),
                            (e.prototype.getChildByName = function (e) {
                                for (var t = 0, i = this.children.length; t < i; ++t) if (this.children[t].name === e) return this.children[t];
                                return null;
                            }),
                            (e.prototype.getChildByIndex = function (e) {
                                return this.children[e];
                            }),
                            (e.prototype.getChildIndex = function (e) {
                                for (var t = 0, i = this.children.length; t < i; ++t) if (e == this.children[t]) return t;
                                return -1;
                            }),
                            (e.prototype.getAllChildren = function () {
                                return this.children;
                            }),
                            (e.prototype.setVisible = function (e) {
                                (this.visible = e), (this.renderParam.dirty = !0);
                            }),
                            (e.prototype.getVisible = function () {
                                return this.visible;
                            }),
                            (e.prototype.move = function (e, t, i, o) {
                                void 0 === i && (i = null), void 0 === o && (o = null), null == i && (i = this.rect.width), null == o && (o = this.rect.height), this.rect.set(e, t, i, o), (this.renderParam.dirty = !0);
                            }),
                            (e.prototype.moveBy = function (e, t) {
                                (this.rect.x += e), (this.rect.y += t), (this.renderParam.dirty = !0);
                            }),
                            (e.prototype.getRect = function () {
                                return this.rect;
                            }),
                            (e.prototype.getScale = function () {
                                return this.scale;
                            }),
                            (e.prototype.setScale = function (e, t) {
                                void 0 === t && (t = 1), (this.scale = e), (this.renderParam.dirty = !0);
                            }),
                            (e.prototype.getOpacity = function () {
                                return this.opacity;
                            }),
                            (e.prototype.setOpacity = function (e) {
                                1 < e ? (e = 1) : e < 0 && (e = 0), (this.opacity = e), (this.renderParam.dirty = !0);
                            }),
                            (e.prototype.setRotation = function (e) {
                                this.ratation = e;
                            }),
                            (e.prototype.getRotation = function () {
                                return this.ratation;
                            }),
                            (e.prototype.setFrame = function (e) {
                                this.frame = e;
                            }),
                            (e.prototype.isAdded = function () {
                                return null !== this.parent;
                            }),
                            (e.prototype.destroy = function () {
                                for (var e = 0, t = this.children.length; e < t; ++e) this.children[e].destroy();
                                this.onDestroy();
                            }),
                            (e.prototype.onCreate = function () {}),
                            (e.prototype.onDestroy = function () {}),
                            e
                        );
                    })();
                (i.default = a), cc._RF.pop();
            },
            {
                '../../util/Utility': 'Utility',
                './MUIDefines': 'MUIDefines',
            },
        ],
        MUINumber: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '2f839ACzBdNfo0/aHGxjF/t', 'MUINumber'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o,
                    n = e('../../MUI/MUINode'),
                    a = e('../../MUI/MUISprite');
                ((o = i.NumberColor || (i.NumberColor = {})).WHITE = 'white'), (o.RED = 'red'), (o.BLUE = 'blue'), (o.YELLOW = 'yellow'), (o.LIGHTYELLOW = 'lightyellow'), (o.LIGHTBLUE = 'lightblue'), (o.YELLOWSMALL = 'yellowsmall'), (o.COMBO = 'combo'), (o.GO = 'go'), (o.GOSMALL = 'gosmall');
                var r = (function (n) {
                    function r(e, t, i) {
                        void 0 === i && (i = null);
                        var o = n.call(this, i) || this;
                        return (o.numberAtlas = null), (o.numberColor = null), (o.nodeWidthScale = 1), (o.preCreateNodeCount = 2), (o.showSign = !1), (o.numberValue = 1 / 0), (o.centerNumber = r.HLEFT), (o.lastShowCount = 0), (o.numberNodeWidth = 0), (o.numberNodeHeight = 0), (o.halfNumberNodeWidth = 0), (o.nodeWidthOffset = 0), (o.numberNodeList = null), (o.spriteFrames = null), (o.numberAtlas = e), (o.preCreateNodeCount = t), o.onLoad(), o;
                    }
                    return (
                        __extends(r, n),
                        (r.prototype.onLoad = function () {
                            (this.numberNodeList = []), this.preCreateNodeCount <= 0 && (this.preCreateNodeCount = 1);
                            for (var e = 0; e < this.preCreateNodeCount; e++) this.addNewNumberNode();
                        }),
                        (r.prototype.setNumberColor = function (e, t) {
                            void 0 === t && (t = 1.18), this.numberColor !== e && ((this.numberColor = e), t && this.setNodeWidthScale(t), this.initSpriteFrames());
                        }),
                        (r.prototype.setNodeWidthScale = function (e) {
                            if (this.numberColor && !(e < 1) && this.nodeWidthScale !== e && ((this.nodeWidthScale = e), null != this.numberAtlas)) {
                                var t = this.numberAtlas.getItem(this.numberColor + '_+').rect.width,
                                    i = t * e,
                                    o = (i - t) / 2;
                                this.resetNumberNodeWidth(i, o);
                            }
                        }),
                        (r.prototype.setNumberValue = function (e) {
                            this.numberValue !== e && ((this.numberValue = e), this.update());
                        }),
                        (r.prototype.setCenterNumber = function (e, t) {
                            void 0 === t && (t = !1);
                            var i = e ? r.HCENTER : r.HLEFT;
                            this.centerNumber !== i && ((this.centerNumber = i), t && this.update());
                        }),
                        (r.prototype.setHAlineType = function (e, t) {
                            void 0 === t && (t = !1), this.centerNumber !== e && ((this.centerNumber = e), t && this.update());
                        }),
                        (r.prototype.setShowSign = function (e, t) {
                            void 0 === t && (t = !1), this.showSign !== e && ((this.showSign = e), t && this.update());
                        }),
                        (r.prototype.setNumberSize = function (e, t) {
                            (this.numberNodeWidth = e), (this.numberNodeHeight = t), (this.halfNumberNodeWidth = this.numberNodeWidth / 2);
                        }),
                        (r.prototype.addNewNumberNode = function (e) {
                            void 0 === e && (e = !1);
                            var t = new a.default();
                            (t.imageData = this.numberAtlas), this.addChild(t), e ? this.numberNodeList.unshift(t) : this.numberNodeList.push(t);
                        }),
                        (r.prototype.initSpriteFrames = function () {
                            if (null != this.numberAtlas) {
                                this.spriteFrames = [];
                                for (var e = 0; e < 10; e++) this.spriteFrames.push(this.numberAtlas.getItem(this.numberColor + '_' + e.toString()));
                                this.spriteFrames.push(this.numberAtlas.getItem(this.numberColor + '_+'));
                            }
                        }),
                        (r.prototype.resetNumberNodeWidth = function (e, t) {
                            e && (this.numberNodeWidth = e), t && (this.nodeWidthOffset = t), (this.halfNumberNodeWidth = this.numberNodeWidth / 2);
                        }),
                        (r.prototype.update = function () {
                            null !== this.numberAtlas && this.numberValue !== 1 / 0 && this.setScoreData(this.numberValue);
                        }),
                        (r.prototype.setScoreData = function (e) {
                            var t = Math.abs(e),
                                i = this.getNumberLength(t);
                            if (0 !== i) {
                                this.updateNumberSprite(i, t);
                                var o = i;
                                if (this.showSign) {
                                    o++, this.numberNodeList.length < o && this.addNewNumberNode(!0);
                                    var n = this.numberNodeList.length - o,
                                        a = this.numberNodeList[n];
                                    a.setImageItem(this.spriteFrames[10]), 0 < this.numberNodeHeight && a.setContentSize(this.numberNodeWidth, this.numberNodeHeight);
                                }
                                if (this.lastShowCount !== i)
                                    switch (((this.lastShowCount = i), this.centerNumber)) {
                                        case r.HLEFT:
                                            this.updateNodePositionLeft(o);
                                            break;
                                        case r.HCENTER:
                                            this.updateNodePositionCenter(o);
                                            break;
                                        case r.HRIGHT:
                                            this.updateNodePositionRight(o);
                                    }
                            }
                        }),
                        (r.prototype.getNumberLength = function (e) {
                            return e < 10 ? 1 : e < 100 ? 2 : e < 1e3 ? 3 : e < 1e4 ? 4 : Math.floor(Math.log10(e)) + 1;
                        }),
                        (r.prototype.updateNumberSprite = function (e, t) {
                            var i = this.numberNodeList.length,
                                o = 0;
                            if (i < e) for (var n = i; n < e; n++) this.addNewNumberNode();
                            else if (e < i) {
                                o = i - e;
                                for (var a = 0; a < o; a++) this.numberNodeList[a].imageItem = null;
                            }
                            for (var r = 10, s = 0, c = this.numberNodeList.length - 1, l = c; o <= l; l--) l === c ? (s = t % 10) : l === o ? (s = Math.floor(t / r)) : ((s = Math.floor(t / r) % 10), (r *= 10)), this.numberNodeList[l].setImageItem(this.getNumberSpriteFrame(s)), 0 < this.numberNodeHeight && this.numberNodeList[l].setContentSize(this.numberNodeWidth, this.numberNodeHeight);
                        }),
                        (r.prototype.updateNodePosition = function (e, t) {
                            for (var i = this.numberNodeList.length, o = i - e, n = t, a = i - 1; o <= a; a--) this.numberNodeList[a].setPositionX(n), (n -= this.numberNodeWidth);
                        }),
                        (r.prototype.updateNodePositionCenter = function (e) {
                            var t = this.rect.width / 2 + this.halfNumberNodeWidth * (e - 2) + this.nodeWidthOffset;
                            this.updateNodePosition(e, t);
                        }),
                        (r.prototype.updateNodePositionLeft = function (e) {
                            var t = this.numberNodeWidth * (e - 1) + this.nodeWidthOffset;
                            this.updateNodePosition(e, t);
                        }),
                        (r.prototype.updateNodePositionRight = function (e) {
                            var t = this.rect.width - this.numberNodeWidth - this.nodeWidthOffset;
                            this.updateNodePosition(e, t);
                        }),
                        (r.prototype.getNumberSpriteFrame = function (e) {
                            return e < 0 || 9 < e ? null : this.spriteFrames[e];
                        }),
                        (r.HLEFT = 0),
                        (r.HCENTER = 1),
                        (r.HRIGHT = 2),
                        r
                    );
                })(n.default);
                (i.default = r), cc._RF.pop();
            },
            {
                '../../MUI/MUINode': 'MUINode',
                '../../MUI/MUISprite': 'MUISprite',
            },
        ],
        MUIParticle: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'a6109QWZO9LqazDezvw4Rqj', 'MUIParticle'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./MUINode'),
                    n = function () {
                        (this.atlas = null), (this.atlasItems = []), (this.duration = 0), (this.emissionRate = 0), (this.particleLifespan = 0), (this.particleLifespanVariance = 0), (this.finishParticleSize = 0), (this.finishParticleSizeVariance = 0), (this.maxParticles = 0), (this.angle = 0), (this.angleVariance = 0);
                    };
                i.ParticleParam = n;
                var a = (function (e) {
                    function t() {
                        return e.call(this) || this;
                    }
                    return __extends(t, e), t;
                })(o.default);
                (i.default = a), cc._RF.pop();
            },
            {
                './MUINode': 'MUINode',
            },
        ],
        MUIProgressBar: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '87bacaewOJPhKlz5rPV6Fd2', 'MUIProgressBar'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (n) {
                    function e(e, t, i) {
                        void 0 === i && (i = null);
                        var o = n.call(this, i) || this;
                        return (o.progress = 0), (o.updateFunc = t), e(o), o;
                    }
                    return (
                        __extends(e, n),
                        (e.prototype.setProgress = function (e) {
                            (this.progress = e), this.updateFunc(this, e);
                        }),
                        e
                    );
                })(e('./MUINode').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './MUINode': 'MUINode',
            },
        ],
        MUISprite: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'deeeaSeiEdAmrmd/v+F5z3+', 'MUISprite'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./MUINode'),
                    a = e('../atlas/SimpleImage'),
                    m = e('./MUIDefines'),
                    p = e('../atlas/CanvasFunction'),
                    r = e('../../util/Utility'),
                    n = (function (d) {
                        function e(e) {
                            void 0 === e && (e = null);
                            var t = d.call(this, e) || this;
                            return (t.imageData = null), (t.imageItem = null), (t.frameSequence = null), (t.vertexBuffer = null), (t.vertexArray = null), t;
                        }
                        return (
                            __extends(e, d),
                            (e.prototype.onCreate = function () {}),
                            (e.prototype.draw = function (e, t) {
                                var i = this.imageItem;
                                if ((0 < this.frame && (i = this.frameSequence.frames[this.frame - 1]), i)) {
                                    switch (m.MUI.global.renderType) {
                                        case m.MUI.RenderType.WEBGL:
                                            var o = e;
                                            if ((this.updateVertex(e, t, i), this.updateVertexBuffer(e), (t.dirty = !1), m.MUI.global.shaderObject)) {
                                                o.uniform1i(m.MUI.global.shaderObject.typeUniform, 0), o.uniform1f(m.MUI.global.shaderObject.opacityUniform, t.opacity), o.activeTexture(o.TEXTURE0), o.bindTexture(o.TEXTURE_2D, this.imageData.texture), o.uniform1i(m.MUI.global.shaderObject.texture0Uniform, 0), o.bindBuffer(o.ARRAY_BUFFER, this.vertexBuffer);
                                                var n = this.vertexArray.BYTES_PER_ELEMENT;
                                                o.vertexAttribPointer(m.MUI.global.shaderObject.vertexPositionAttribute, 3, o.FLOAT, !0, 5 * n, 0), o.vertexAttribPointer(m.MUI.global.shaderObject.vertexTextureAttribute, 2, o.FLOAT, !0, 5 * n, 3 * n), o.drawArrays(o.TRIANGLE_STRIP, 0, 4), o.bindBuffer(o.ARRAY_BUFFER, null);
                                            }
                                            break;
                                        case m.MUI.RenderType.CANVAS:
                                            var a = e,
                                                r = a.globalAlpha;
                                            a.globalAlpha = t.opacity;
                                            var s = Math.floor(t.centerX),
                                                c = Math.floor(a.canvas.height - t.centerY);
                                            a.translate(s, c);
                                            var l = -(t.width >>> 1),
                                                u = -(t.height >>> 1);
                                            this.frame <= 0 ? p.CanvasFunction.drawImageItemScale(a, this.imageData, this.imageItem, l, u, t.width, t.height) : p.CanvasFunction.drawImageItemScale(a, this.imageData, this.frameSequence.frames[this.frame - 1], l, u, t.width, t.height), a.translate(-s, -c), (a.globalAlpha = r);
                                    }
                                    d.prototype.drawChildren.call(this, e, t);
                                } else d.prototype.drawChildren.call(this, e, t);
                            }),
                            (e.prototype.setFrame = function (e) {
                                (this.frameSequence && e > this.frameSequence.frames.length) || d.prototype.setFrame.call(this, e);
                            }),
                            (e.prototype.setImageItem = function (e) {
                                (this.imageItem = e) && this.setContentSize(e.rect.width, e.rect.height);
                            }),
                            (e.prototype.loadLocalImage = function (e, i, o) {
                                var n = this;
                                (this.imageData = new a.default()),
                                    (this.imageData.image.onload = function () {
                                        var e = n.imageData.image.width,
                                            t = n.imageData.image.height;
                                        (n.imageItem = new a.SimpleImageItem()), (n.imageItem.rect = new r.Utility.Rect(0, 0, e, t)), (n.imageItem.rotated = i), o && o();
                                    }),
                                    (this.imageData.image.src = e);
                            }),
                            (e.prototype.onDestroy = function () {
                                if (m.MUI.global.renderType === m.MUI.RenderType.WEBGL) {
                                    var e = m.MUI.global.ctx;
                                    this.vertexBuffer && (e.deleteBuffer(this.vertexBuffer), (this.vertexBuffer = null));
                                }
                            }),
                            (e.prototype.updateVertex = function (e, t, i) {
                                var o = t.width / 2,
                                    n = t.height / 2,
                                    a = ((t.centerX - o) / m.MUI.global.viewWidth) * 2 - 1,
                                    r = ((t.centerY - n) / m.MUI.global.viewHeight) * 2 - 1,
                                    s = a + (t.width / m.MUI.global.viewWidth) * 2,
                                    c = r + (t.height / m.MUI.global.viewHeight) * 2,
                                    l = i.rect.x / this.imageData.image.width,
                                    u = i.rect.y / this.imageData.image.height,
                                    d = l + i.rect.width / this.imageData.image.width,
                                    p = u + i.rect.height / this.imageData.image.height;
                                this.vertexArray || (this.vertexArray = new Float32Array(20));
                                var h = this.vertexArray,
                                    f = 0;
                                (h[f++] = a), (h[f++] = c), (h[f++] = 0), (h[f++] = l), (h[f++] = u), (h[f++] = a), (h[f++] = r), (h[f++] = 0), (h[f++] = l), (h[f++] = p), (h[f++] = s), (h[f++] = c), (h[f++] = 0), (h[f++] = d), (h[f++] = u), (h[f++] = s), (h[f++] = r), (h[f++] = 0), (h[f++] = d), (h[f++] = p);
                            }),
                            (e.prototype.updateVertexBuffer = function (e) {
                                this.vertexBuffer || (this.vertexBuffer = e.createBuffer()), e.bindBuffer(e.ARRAY_BUFFER, this.vertexBuffer), e.bufferData(e.ARRAY_BUFFER, this.vertexArray, e.DYNAMIC_DRAW), e.bindBuffer(e.ARRAY_BUFFER, null);
                            }),
                            e
                        );
                    })(o.default);
                (i.default = n), cc._RF.pop();
            },
            {
                '../../util/Utility': 'Utility',
                '../atlas/CanvasFunction': 'CanvasFunction',
                '../atlas/SimpleImage': 'SimpleImage',
                './MUIDefines': 'MUIDefines',
                './MUINode': 'MUINode',
            },
        ],
        MainScene: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '281c7YtyvVPN5O1jjj34bMC', 'MainScene'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('../business/UI/GameEntraScene/PrefabMgr'),
                    o = e('../business/UI/GameEntraScene/LoadingScene'),
                    a = e('../base/Startup'),
                    r = e('../business/UI/GameEntraScene/UICache'),
                    s = e('../business/Logic/I18nManager'),
                    c = e('../business/Network/Protocol/StorageUtil'),
                    l = e('../config/LSKey'),
                    u = cc._decorator,
                    d = u.ccclass,
                    p = u.property,
                    h = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.loadingPage_layout = null), (e.mainPage_layout = null), (e.transferNode = null), (e.timeoutHandler = void 0), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.onLoad = function () {
                                var e = this;
                                a.default.isColdStart
                                    ? this.initCMPlay(function () {
                                          s.default.init(), (a.default.enterTimeStamp = Date.now()), e.showLoadingPage(), (a.default.isColdStart = !1);
                                      })
                                    : this.showMainPage(null);
                            }),
                            (e.prototype.initCMPlay = function (e) {
                                var t = this;
                                if (!window.CMPlay)
                                    return (
                                        this.timeoutHandler && (clearTimeout(this.timeoutHandler), (this.timeoutHandler = void 0)),
                                        console.error('=====> initCMPlay delay'),
                                        void (this.timeoutHandler = setTimeout(function () {
                                            t.initCMPlay(e);
                                        }, 500))
                                    );
                                console.error('=====> initCMPlay OK'),
                                    CMPlay.init({
                                        pageId: 28,
                                        gameId: 6001,
                                        gameName: '钢琴块2',
                                        videoAdId: '908427310',
                                        bannerAdId: '908427599',
                                        gdtVideoAdId: '3060856285839507',
                                        interstitalAdId: '908427296',
                                    }),
                                    e && e();
                            }),
                            (e.prototype.showLoadingPage = function () {
                                var i = this;
                                CMPlay.GameState.onGameLoadStart(),
                                    n.default.load('prefab/LoadingPagePrefab', function (e, t) {
                                        t.getComponent(o.default).setGotoMainPageListener(function () {
                                            CMPlay.GameState.onGameLoadFinished();
                                            var e = function () {
                                                t.destroy(), i.loadingPage_layout.removeAllChildren();
                                            };
                                            c.default.read(l.default.HAS_FIRST_PLAY_LITTLE_STAR)
                                                ? i.showMainPage(function () {
                                                      e();
                                                  })
                                                : i.showLittleStart(function () {
                                                      e();
                                                  });
                                        }),
                                            i.loadingPage_layout.addChild(t);
                                    });
                            }),
                            (e.prototype.showLittleStart = function (i) {
                                var o = this;
                                n.default.load('prefab/GameEntranceSceneFirstEnter', function (e, t) {
                                    o.mainPage_layout.addChild(t), i && i(), null != o.transferNode && (o.transferNode.removeFromParent(), (o.transferNode = void 0));
                                });
                            }),
                            (e.prototype.showMainPage = function (i) {
                                var o = this;
                                r.UICache.musicListView
                                    ? r.UICache.showMusicView()
                                    : n.default.load('prefab/MainPagePrefab', function (e, t) {
                                          o.mainPage_layout.addChild(t), (r.UICache.musicListView = o.mainPage_layout), cc.game.addPersistRootNode(o.mainPage_layout), CMPlay.GameState.onGameMainStart(), i && i(), null != o.transferNode && (o.transferNode.removeFromParent(), (o.transferNode = void 0));
                                      });
                            }),
                            __decorate([p(cc.Node)], e.prototype, 'loadingPage_layout', void 0),
                            __decorate([p(cc.Node)], e.prototype, 'mainPage_layout', void 0),
                            __decorate([p(cc.Node)], e.prototype, 'transferNode', void 0),
                            (e = __decorate([d], e))
                        );
                    })(cc.Component);
                (i.default = h), cc._RF.pop();
            },
            {
                '../base/Startup': 'Startup',
                '../business/Logic/I18nManager': 'I18nManager',
                '../business/Network/Protocol/StorageUtil': 'StorageUtil',
                '../business/UI/GameEntraScene/LoadingScene': 'LoadingScene',
                '../business/UI/GameEntraScene/PrefabMgr': 'PrefabMgr',
                '../business/UI/GameEntraScene/UICache': 'UICache',
                '../config/LSKey': 'LSKey',
            },
        ],
        MainpageBaseComponent: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '8ec97WPSpJNTrj8v1wW3oDo', 'MainpageBaseComponent'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./WelfareController'),
                    n = cc._decorator,
                    a = n.ccclass,
                    r =
                        (n.property,
                        (function (t) {
                            function e() {
                                var e = (null !== t && t.apply(this, arguments)) || this;
                                return (e.mSource = o.default.SRC_HOME_PAGE_CLICK), (e.mUpdateTask = []), e;
                            }
                            return (
                                __extends(e, t),
                                (e.prototype.setSource = function (e) {
                                    this.mSource = e;
                                }),
                                (e.prototype.setOnCloseCb = function (e) {
                                    this.mCloseCb = e;
                                }),
                                (e.prototype.setSubItem = function (e) {
                                    this.mSubItem = e;
                                }),
                                (e.prototype.getSubItem = function () {
                                    return this.mSubItem;
                                }),
                                (e.prototype.invokeCloseCb = function () {
                                    this.mCloseCb && this.mCloseCb(this.getSubItem());
                                }),
                                (e.prototype.refreshUi = function () {}),
                                (e.prototype.postUpdateTask = function (e) {
                                    this.mUpdateTask.push(e);
                                }),
                                (e.prototype.update = function (e) {
                                    if (0 < this.mUpdateTask.length) {
                                        var t = this.mUpdateTask.shift();
                                        t && t();
                                    }
                                }),
                                (e = __decorate([a], e))
                            );
                        })(cc.Component));
                (i.default = r), cc._RF.pop();
            },
            {
                './WelfareController': 'WelfareController',
            },
        ],
        MainpageLeftBtnPanelOld: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'a750c5HSRZOOZot9PFisr5E', 'MainpageLeftBtnPanelOld'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../infoc/m_p2_Uaction'),
                    n = e('./BasicTouchEvent'),
                    a = e('../../Logic/EventBus'),
                    r = e('../../Logic/NotifyEvent'),
                    s = e('../../../util/PU'),
                    c = e('../../../util/Utility'),
                    l = e('./ImgCache'),
                    u = e('../../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    d = cc._decorator,
                    p = d.ccclass,
                    h = d.property,
                    f = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mMailTouchCallback = null), (e.mToMailPageCallback = null), (e.mVipTouchCallback = null), (e.mToVipPageCallback = null), (e.mStoreTouchCallback = null), (e.mToStorePageCallback = null), (e.mToDailyPageCallback = null), (e.mGameClubCallbacak = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.onLoad = function () {
                                this.initViews(), this.initEvents();
                            }),
                            (e.prototype.onDestroy = function () {}),
                            (e.prototype.initViews = function () {
                                s.default.isIOS() && this.setStoreIcon();
                            }),
                            (e.prototype.setStoreIcon = function () {
                                var i = this;
                                l.default.get('static_res/homepage/home_daily_left_btn', function (e, t) {
                                    cc.isValid(i, !0) && (i.mStoreBtn.normalSprite = t);
                                }),
                                    l.default.get('static_res/homepage/home_daily_left_btn_press', function (e, t) {
                                        cc.isValid(i, !0) && (i.mStoreBtn.pressedSprite = t);
                                    });
                            }),
                            (e.prototype.setEventStopCallback = function (e) {
                                this.mEventStopCallback = e;
                            }),
                            (e.prototype.initEvents = function () {
                                var e = this;
                                o.default.report(0, o.default.ACTION_SHOW_MAIL_ICON),
                                    (this.mMailTouchCallback = new n.default(
                                        function () {
                                            o.default.report(0, o.default.ACTION_CLICK_MAIL_ICON), e.mToMailPageCallback && e.mToMailPageCallback(), e.mEventStopCallback && e.mEventStopCallback(cc.Node.EventType.TOUCH_END);
                                        },
                                        function () {
                                            e.mEventStopCallback && e.mEventStopCallback(cc.Node.EventType.TOUCH_END);
                                        },
                                    )),
                                    this.mMailBtn.node.on(cc.Node.EventType.TOUCH_END, this.mMailTouchCallback.click, this.mMailTouchCallback),
                                    this.handleMutiTouch(this.mMailBtn.node),
                                    (this.mVipTouchCallback = new n.default(
                                        function () {
                                            e.mToVipPageCallback && e.mToVipPageCallback(), e.mEventStopCallback && e.mEventStopCallback(cc.Node.EventType.TOUCH_END);
                                        },
                                        function () {
                                            e.mEventStopCallback && e.mEventStopCallback(cc.Node.EventType.TOUCH_END);
                                        },
                                    )),
                                    this.mVipBtn.node.on(cc.Node.EventType.TOUCH_END, this.mVipTouchCallback.click, this.mVipTouchCallback),
                                    this.handleMutiTouch(this.mVipBtn.node),
                                    (this.mStoreTouchCallback = new n.default(
                                        function () {
                                            if (s.default.isIOS()) {
                                                u.MGUser.getCurrentServerTime();
                                                e.mToDailyPageCallback && e.mToDailyPageCallback();
                                            } else e.mToStorePageCallback && e.mToStorePageCallback();
                                            e.mEventStopCallback && e.mEventStopCallback(cc.Node.EventType.TOUCH_END);
                                        },
                                        function () {
                                            e.mEventStopCallback && e.mEventStopCallback(cc.Node.EventType.TOUCH_END);
                                        },
                                    )),
                                    this.mStoreBtn.node.on(cc.Node.EventType.TOUCH_END, this.mStoreTouchCallback.click, this.mStoreTouchCallback),
                                    this.handleMutiTouch(this.mStoreBtn.node),
                                    (this.mGameClubCallbacak = new n.default(function () {
                                        if (s.default.isQQ()) BK.MQQ.Webview.open('https://buluo.qq.com/mobile/barindex.html?_bid=128&_wv=1027&bid=406042');
                                        else {
                                            c.Utility.compareVersion(s.default.SDKVersion, '2.0.3');
                                            c.Utility.compareVersion(s.default.SDKVersion, '2.0.3') < 0 && a.default.fire(r.default.UPDATE_WX_VERSION_TOAST);
                                        }
                                    })),
                                    this.mGameClubSprite.node.on(cc.Node.EventType.TOUCH_END, this.mGameClubCallbacak.click, this.mGameClubCallbacak);
                            }),
                            (e.prototype.setToStorePageCallback = function (e) {
                                this.mToStorePageCallback = e;
                            }),
                            (e.prototype.setToDailyPageCallback = function (e) {
                                this.mToDailyPageCallback = e;
                            }),
                            (e.prototype.handleMutiTouch = function (e) {
                                var t = this;
                                e.on(
                                    cc.Node.EventType.TOUCH_START,
                                    function () {
                                        t.mEventStopCallback && t.mEventStopCallback(cc.Node.EventType.TOUCH_START);
                                    },
                                    this,
                                ),
                                    e.on(
                                        cc.Node.EventType.TOUCH_CANCEL,
                                        function () {
                                            t.mEventStopCallback && t.mEventStopCallback(cc.Node.EventType.TOUCH_CANCEL);
                                        },
                                        this,
                                    );
                            }),
                            __decorate([h(cc.Button)], e.prototype, 'mMailBtn', void 0),
                            __decorate([h(cc.Sprite)], e.prototype, 'mMailCountBg', void 0),
                            __decorate([h(cc.Label)], e.prototype, 'mMailCountLabel', void 0),
                            __decorate([h(cc.Node)], e.prototype, 'mVipBtnPanel', void 0),
                            __decorate([h(cc.Button)], e.prototype, 'mVipBtn', void 0),
                            __decorate([h(cc.Sprite)], e.prototype, 'mVipRedSpot', void 0),
                            __decorate([h(cc.Button)], e.prototype, 'mStoreBtn', void 0),
                            __decorate([h(cc.Sprite)], e.prototype, 'mGameClubSprite', void 0),
                            (e = __decorate([p], e))
                        );
                    })(cc.Component);
                (i.default = f), cc._RF.pop();
            },
            {
                '../../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../../infoc/m_p2_Uaction': 'm_p2_Uaction',
                '../../../util/PU': 'PU',
                '../../../util/Utility': 'Utility',
                '../../Logic/EventBus': 'EventBus',
                '../../Logic/NotifyEvent': 'NotifyEvent',
                './BasicTouchEvent': 'BasicTouchEvent',
                './ImgCache': 'ImgCache',
            },
        ],
        MainpageLeftBtnPanel: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'fe5800g+CpIqIPs06bffrz6', 'MainpageLeftBtnPanel'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../infoc/m_p2_Uaction'),
                    a = e('./BasicTouchEvent'),
                    n = e('../../Network/Protocol/StorageUtil'),
                    r = e('../../../config/LSKey'),
                    s = e('../../Logic/EventBus'),
                    c = e('../../Logic/NotifyEvent'),
                    l = e('../GameClub'),
                    u = e('../../../util/PU'),
                    d = e('../../../util/Utility'),
                    p = e('./ImgCache'),
                    h = e('../../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    f = e('../../../util/StringUtil'),
                    m = e('../../../util/TimeUtil'),
                    g = e('../../daily/DAwardMgr'),
                    _ = cc._decorator,
                    y = _.ccclass,
                    S = _.property,
                    v = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mRootNode = null), (e.mDailyBtn = null), (e.mDailyRedSpot = null), (e.mExchangeBtn = null), (e.mArrowBtn = null), (e.mArrowPanel = null), (e.mIconPanel = null), (e.mRedspotLabel = null), (e.mRedspotSprite = null), (e.mMailTouchCallback = null), (e.mToMailPageCallback = null), (e.mVipTouchCallback = null), (e.mToVipPageCallback = null), (e.mStoreTouchCallback = null), (e.mToStorePageCallback = null), (e.mDailyTouchCallback = null), (e.mToDailyPageCallback = null), (e.mExchangeTouchCallback = null), (e.mToExchangePageCallback = null), (e.mGameClubCallbacak = null), (e.mOnIconShowCallback = null), (e.mOnIconHideCallback = null), (e.mOnLoadFinishCB = null), (e.mStatus = 0), (e.mAutoOpen = !1), (e.mIsIconShow = !1), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.onLoad = function () {
                                this.initViews(), this.initEvents(), s.default.register(c.default.DAILY_GET_AWARD, this.setDailyAttendanceIcon, this);
                            }),
                            (e.prototype.onDestroy = function () {
                                s.default.remove(c.default.DAILY_GET_AWARD, this.setDailyAttendanceIcon, this);
                            }),
                            (e.prototype.initViews = function () {
                                this.setStoreBtn(), this.setDailyAttendanceIcon(), this.initAnim(), this.updateIconsPos();
                            }),
                            (e.prototype.autoOpen = function (e) {
                                var t = this;
                                if (this.mAutoOpen) {
                                    var i = n.default.read(r.default.HAS_AUTO_OPEN_LEFT),
                                        o = n.default.read(r.default.LAST_AUTO_OPEN_TIME);
                                    f.StringUtil.isEmpty(o) || m.default.isSameDay(new Date(parseInt(o)), new Date(h.MGUser.getCurrentServerTime())) || (i = 'false'),
                                        'true' == i
                                            ? ((this.mAutoOpen = !1), e && e())
                                            : (n.default.save(r.default.HAS_AUTO_OPEN_LEFT, 'true'),
                                              this.scheduleOnce(function () {
                                                  n.default.save(r.default.LAST_AUTO_OPEN_TIME, h.MGUser.getCurrentServerTime().toString()), t.playOpenAnim(e);
                                              }, 0.1));
                                } else e && e();
                            }),
                            (e.prototype.setDailyAttendanceIcon = function () {
                                var t = this;
                                g.DAwardMgr.getIns().checkReceiveStatAsyn(function (e) {
                                    (t.mDailyRedSpot.node.active = e), cc.isValid(t, !0) && t.showRedspot();
                                });
                            }),
                            (e.prototype.updateIconsPos = function () {
                                var e,
                                    t,
                                    i,
                                    o,
                                    n = this.canShowStoreIcon();
                                n || ((this.mStatus = 2), (this.mDailyBtn.node.active = !0), ((e = this.mDailyBtn.getComponent(cc.Widget)).top = 111), e.updateAlignment(), ((t = this.mMailBtn.getComponent(cc.Widget)).top = 210), t.updateAlignment(), ((i = this.mExchangeBtn.getComponent(cc.Widget)).top = 306), i.updateAlignment(), ((o = this.mGameClubSprite.getComponent(cc.Widget)).top = 410), o.updateAlignment());
                            }),
                            (e.prototype.setEventStopCallback = function (e) {
                                this.mEventStopCallback = e;
                            }),
                            (e.prototype.initEvents = function () {
                                var e = this;
                                this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                }),
                                    this.mArrowPanel.on(cc.Node.EventType.TOUCH_START, function (e) {
                                        e.stopPropagation();
                                    }),
                                    o.default.report(0, o.default.ACTION_SHOW_MAIL_ICON),
                                    (this.mMailTouchCallback = new a.default(
                                        function () {
                                            o.default.report(0, o.default.ACTION_CLICK_MAIL_ICON), e.mToMailPageCallback && e.mToMailPageCallback(), e.mEventStopCallback && e.mEventStopCallback(cc.Node.EventType.TOUCH_END);
                                        },
                                        function () {
                                            e.mEventStopCallback && e.mEventStopCallback(cc.Node.EventType.TOUCH_END);
                                        },
                                    )),
                                    this.mMailBtn.node.on(cc.Node.EventType.TOUCH_END, this.mMailTouchCallback.click, this.mMailTouchCallback),
                                    this.handleMutiTouch(this.mMailBtn.node),
                                    (this.mVipTouchCallback = new a.default(
                                        function () {
                                            e.mToVipPageCallback && e.mToVipPageCallback(), e.mEventStopCallback && e.mEventStopCallback(cc.Node.EventType.TOUCH_END);
                                        },
                                        function () {
                                            e.mEventStopCallback && e.mEventStopCallback(cc.Node.EventType.TOUCH_END);
                                        },
                                    )),
                                    this.mVipBtn.node.on(cc.Node.EventType.TOUCH_END, this.mVipTouchCallback.click, this.mVipTouchCallback),
                                    this.handleMutiTouch(this.mVipBtn.node),
                                    (this.mStoreTouchCallback = new a.default(
                                        function () {
                                            e.mToStorePageCallback && e.mToStorePageCallback(), e.mEventStopCallback && e.mEventStopCallback(cc.Node.EventType.TOUCH_END);
                                        },
                                        function () {
                                            e.mEventStopCallback && e.mEventStopCallback(cc.Node.EventType.TOUCH_END);
                                        },
                                    )),
                                    this.mStoreBtn.node.on(cc.Node.EventType.TOUCH_END, this.mStoreTouchCallback.click, this.mStoreTouchCallback),
                                    this.handleMutiTouch(this.mStoreBtn.node),
                                    (this.mGameClubCallbacak = new a.default(function () {
                                        u.default.isQQ() ? BK.MQQ.Webview.open('https://buluo.qq.com/mobile/barindex.html?_bid=128&_wv=1027&bid=406042') : d.Utility.compareVersion(u.default.SDKVersion, '2.0.3') < 0 && s.default.fire(c.default.UPDATE_WX_VERSION_TOAST);
                                    })),
                                    this.mGameClubSprite.node.on(cc.Node.EventType.TOUCH_END, this.mGameClubCallbacak.click, this.mGameClubCallbacak),
                                    (this.mDailyTouchCallback = new a.default(
                                        function () {
                                            e.mToDailyPageCallback && e.mToDailyPageCallback();
                                        },
                                        function () {
                                            e.mEventStopCallback && e.mEventStopCallback(cc.Node.EventType.TOUCH_END);
                                        },
                                    )),
                                    this.mDailyBtn.node.on(cc.Node.EventType.TOUCH_END, this.mDailyTouchCallback.click, this.mDailyTouchCallback),
                                    this.handleMutiTouch(this.mDailyBtn.node),
                                    (this.mExchangeTouchCallback = new a.default(
                                        function () {
                                            e.mToExchangePageCallback && e.mToExchangePageCallback();
                                        },
                                        function () {
                                            e.mEventStopCallback && e.mEventStopCallback(cc.Node.EventType.TOUCH_END);
                                        },
                                    )),
                                    this.mExchangeBtn.node.on(cc.Node.EventType.TOUCH_END, this.mExchangeTouchCallback.click, this.mExchangeTouchCallback),
                                    this.handleMutiTouch(this.mExchangeBtn.node);
                            }),
                            (e.prototype.setToExchangePageCallback = function (e) {
                                this.mToExchangePageCallback = e;
                            }),
                            (e.prototype.setToStorePageCallback = function (e) {
                                this.mToStorePageCallback = e;
                            }),
                            (e.prototype.setToDailyPageCallback = function (e) {
                                this.mToDailyPageCallback = e;
                            }),
                            (e.prototype.setToVipPageCallback = function (e) {
                                this.mToVipPageCallback = e;
                            }),
                            (e.prototype.setToMailPageCallback = function (e) {
                                this.mToMailPageCallback = e;
                            }),
                            (e.prototype.handleMutiTouch = function (e) {
                                var t = this;
                                e.on(
                                    cc.Node.EventType.TOUCH_START,
                                    function () {
                                        t.mEventStopCallback && t.mEventStopCallback(cc.Node.EventType.TOUCH_START);
                                    },
                                    this,
                                ),
                                    e.on(
                                        cc.Node.EventType.TOUCH_CANCEL,
                                        function () {
                                            t.mEventStopCallback && t.mEventStopCallback(cc.Node.EventType.TOUCH_CANCEL);
                                        },
                                        this,
                                    );
                            }),
                            (e.prototype.initAnim = function () {
                                var e = this,
                                    t = new a.default(function () {
                                        e.mAutoOpen ? ((e.mAutoOpen = !1), e.playHideAnim()) : e.mIsIconShow || e.playOpenAnim();
                                    });
                                this.mArrowBtn.node.once(cc.Node.EventType.TOUCH_END, t.click, t);
                            }),
                            (e.prototype.playOpenAnim = function (t) {
                                var i = this;
                                this.hideRedspot(), s.default.fire(c.default.RCM_SHOW_MAIN_ENTRY_ICO, !0), (this.mIsIconShow = !0);
                                var o = this,
                                    n = o.mRootNode.getComponent(cc.Animation);
                                n.targetOff(o),
                                    n.on(
                                        'finished',
                                        function () {
                                            i.showGameClub(), p.default.get2('/static_res/homepage/home_down_up', o.mArrowBtn);
                                            var e = new a.default(function () {
                                                i.playHideAnim();
                                            });
                                            o.mArrowBtn.node.once(cc.Node.EventType.TOUCH_END, e.click, e), n.targetOff(i), 0 == i.mStatus ? n.stop('home_left_show_icon') : 1 == i.mStatus ? n.stop('home_left_show_icon1') : 2 == i.mStatus && n.stop('home_left_show_icon2'), t && t();
                                        },
                                        this,
                                    ),
                                    n.on('play', function () {
                                        i.canShowStoreIcon() && (o.mStoreBtn.node.active = !0), (o.mVipBtnPanel.active = !1), (o.mDailyBtn.node.active = !0), (o.mMailBtn.node.active = !0), (o.mExchangeBtn.node.active = !0), (o.mGameClubSprite.node.active = !0), i.mOnIconHideCallback && i.mOnIconHideCallback();
                                    }),
                                    0 == this.mStatus ? n.play('home_left_show_icon') : 1 == this.mStatus ? n.play('home_left_show_icon1') : 2 == this.mStatus && n.play('home_left_show_icon2');
                            }),
                            (e.prototype.isShowIcon = function () {
                                return this.mIsIconShow;
                            }),
                            (e.prototype.hideRedspot = function () {
                                (this.mRedspotLabel.string = ''), (this.mRedspotSprite.node.active = !1);
                            }),
                            (e.prototype.showRedspot = function () {
                                this.doShowRedspot(0);
                            }),
                            (e.prototype.isVipAndDialyHasRedspot = function () {
                                var e = !1;
                                this.mVipRedSpot && this.mVipRedSpot.node && (e = this.mVipRedSpot.node.active);
                                var t = !1;
                                return this.mDailyRedSpot && this.mDailyRedSpot.node && (t = this.mDailyRedSpot.node.active), e || t;
                            }),
                            (e.prototype.doShowRedspot = function (e) {
                                this.isShowIcon() ? this.hideRedspot() : u.default.isIOS() ? (0 < e ? ((this.mRedspotLabel.string = e + ''), (this.mRedspotSprite.node.active = !0)) : this.hideRedspot()) : 0 < e ? ((this.mRedspotLabel.string = e + ''), (this.mRedspotSprite.node.active = !0)) : this.isVipAndDialyHasRedspot() ? ((this.mRedspotLabel.string = ''), (this.mRedspotSprite.node.active = !0)) : this.hideRedspot();
                            }),
                            (e.prototype.playHideAnim = function () {
                                var e = this;
                                s.default.fire(c.default.RCM_SHOW_MAIN_ENTRY_ICO, !1), (this.mIsIconShow = !1);
                                var t = this,
                                    i = t.mRootNode.getComponent(cc.Animation);
                                i.targetOff(t),
                                    i.on(
                                        'finished',
                                        function () {
                                            p.default.get2('/static_res/homepage/home_down_arrow', t.mArrowBtn), i.stop('home_left_hide_icon'), i.targetOff(e), t.mOnIconShowCallback && t.mOnIconShowCallback(), 1 == e.mVipBtnPanel.active && 1 == e.mStoreBtn.node.active ? (t.mDailyBtn.node.active = !1) : 1 == e.mVipBtnPanel.active && 0 == e.mStoreBtn.node.active ? ((t.mVipBtnPanel.active = !0), (e.mVipBtnPanel.opacity = 255), (t.mDailyBtn.node.active = !1)) : 0 == e.mVipBtnPanel.active && 0 == e.mStoreBtn.node.active && ((t.mDailyBtn.node.active = !0), (t.mDailyBtn.node.opacity = 255)), (t.mMailBtn.node.active = !1), (t.mExchangeBtn.node.active = !1), (t.mGameClubSprite.node.active = !1), t.initAnim(), e.showRedspot();
                                        },
                                        this,
                                    ),
                                    t.hideGameClub(),
                                    0 == this.mStatus ? i.play('home_left_hide_icon') : 1 == this.mStatus ? i.play('home_left_hide_icon1') : 2 == this.mStatus && i.play('home_left_hide_icon2');
                            }),
                            (e.prototype.showGameClub = function () {
                                l.default.show(this.mStatus);
                            }),
                            (e.prototype.hideGameClub = function () {
                                l.default.hide();
                            }),
                            (e.prototype.setStoreBtn = function () {
                                this.canShowStoreIcon() ? (this.mStoreBtn.node.active = !0) : (this.mStoreBtn.node.active = !1);
                            }),
                            (e.prototype.canShowStoreIcon = function () {
                                return !u.default.isIOS();
                            }),
                            (e.prototype.playVipBgAnim = function () {
                                var e = this.mVipBtnPanel.getComponent(cc.Animation);
                                e && e.play('vip_bg_light');
                            }),
                            (e.prototype.setOnIconShowCallback = function (e) {
                                this.mOnIconShowCallback = e;
                            }),
                            (e.prototype.setOnIconHideCallback = function (e) {
                                this.mOnIconHideCallback = e;
                            }),
                            (e.prototype.setOnLoadFinishCb = function (e) {
                                this.mOnLoadFinishCB = e;
                            }),
                            (e.prototype.invokeOnLoadFinish = function () {
                                this.mOnLoadFinishCB && this.mOnLoadFinishCB();
                            }),
                            __decorate([S(cc.Node)], e.prototype, 'mRootNode', void 0),
                            __decorate([S(cc.Button)], e.prototype, 'mMailBtn', void 0),
                            __decorate([S(cc.Sprite)], e.prototype, 'mMailCountBg', void 0),
                            __decorate([S(cc.Label)], e.prototype, 'mMailCountLabel', void 0),
                            __decorate([S(cc.Node)], e.prototype, 'mVipBtnPanel', void 0),
                            __decorate([S(cc.Button)], e.prototype, 'mVipBtn', void 0),
                            __decorate([S(cc.Sprite)], e.prototype, 'mVipRedSpot', void 0),
                            __decorate([S(cc.Button)], e.prototype, 'mStoreBtn', void 0),
                            __decorate([S(cc.Sprite)], e.prototype, 'mGameClubSprite', void 0),
                            __decorate([S(cc.Button)], e.prototype, 'mDailyBtn', void 0),
                            __decorate([S(cc.Sprite)], e.prototype, 'mDailyRedSpot', void 0),
                            __decorate([S(cc.Button)], e.prototype, 'mExchangeBtn', void 0),
                            __decorate([S(cc.Sprite)], e.prototype, 'mArrowBtn', void 0),
                            __decorate([S(cc.Node)], e.prototype, 'mArrowPanel', void 0),
                            __decorate([S(cc.Node)], e.prototype, 'mIconPanel', void 0),
                            __decorate([S(cc.Label)], e.prototype, 'mRedspotLabel', void 0),
                            __decorate([S(cc.Sprite)], e.prototype, 'mRedspotSprite', void 0),
                            (e = __decorate([y], e))
                        );
                    })(cc.Component);
                (i.default = v), cc._RF.pop();
            },
            {
                '../../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../../config/LSKey': 'LSKey',
                '../../../infoc/m_p2_Uaction': 'm_p2_Uaction',
                '../../../util/PU': 'PU',
                '../../../util/StringUtil': 'StringUtil',
                '../../../util/TimeUtil': 'TimeUtil',
                '../../../util/Utility': 'Utility',
                '../../Logic/EventBus': 'EventBus',
                '../../Logic/NotifyEvent': 'NotifyEvent',
                '../../Network/Protocol/StorageUtil': 'StorageUtil',
                '../../daily/DAwardMgr': 'DAwardMgr',
                '../GameClub': 'GameClub',
                './BasicTouchEvent': 'BasicTouchEvent',
                './ImgCache': 'ImgCache',
            },
        ],
        MainpageRecommendPanel: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '44f0bNXvBpOk4aM/zuuvbTo', 'MainpageRecommendPanel'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../util/PU'),
                    n = e('../MgPluginManager'),
                    a = e('../../../infoc/InfocHelper'),
                    r = e('../../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    s = cc._decorator,
                    c = s.ccclass,
                    l = s.property,
                    u = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.recommend0 = null), (e.redSpot0 = null), (e.recommend1 = null), (e.redSpot1 = null), (e.recommend2 = null), (e.recommend3 = null), (e.mMgPluginMananger = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.onLoad = function () {
                                var t = this;
                                if (o.default.isQQ()) {
                                    if (1 === a.InfocHelper.isNewUser())
                                        return void r.MGUser.getUserLoginInfo({
                                            complete: function (e) {
                                                e && e.playerId && t.initQQ(e.playerId);
                                            },
                                        });
                                    this.initQQ();
                                } else o.default.isWeiXin() && this.initWX();
                            }),
                            (e.prototype.initQQ = function (e) {
                                this.mMgPluginMananger || (this.mMgPluginMananger = new n.default()), this.mMgPluginMananger.initFollowGifts(this.recommend1, this.redSpot1), this.mMgPluginMananger.initMGBGiftBox(this.recommend3, e), this.mMgPluginMananger.initRecommend(this.recommend2);
                            }),
                            (e.prototype.initWX = function () {
                                this.mMgPluginMananger || (this.mMgPluginMananger = new n.default()), this.mMgPluginMananger.initFollowGifts(this.recommend0, this.redSpot0), this.mMgPluginMananger.initEntryLooper(this.recommend1), this.mMgPluginMananger.initQQGame(this.recommend2), this.mMgPluginMananger.initRecommend(this.recommend3);
                            }),
                            (e.prototype.onDestroy = function () {
                                this.mMgPluginMananger && this.mMgPluginMananger.onDestroy();
                            }),
                            (e.prototype.initViews = function () {}),
                            (e.prototype.onHide = function () {
                                (this.node.active = !1), this.mMgPluginMananger && this.mMgPluginMananger.onHide();
                            }),
                            (e.prototype.onShow = function () {
                                (this.node.active = !0), this.mMgPluginMananger && this.mMgPluginMananger.onShow();
                            }),
                            __decorate([l(cc.Sprite)], e.prototype, 'recommend0', void 0),
                            __decorate([l(cc.Sprite)], e.prototype, 'redSpot0', void 0),
                            __decorate([l(cc.Sprite)], e.prototype, 'recommend1', void 0),
                            __decorate([l(cc.Sprite)], e.prototype, 'redSpot1', void 0),
                            __decorate([l(cc.Sprite)], e.prototype, 'recommend2', void 0),
                            __decorate([l(cc.Sprite)], e.prototype, 'recommend3', void 0),
                            (e = __decorate([c], e))
                        );
                    })(cc.Component);
                (i.default = u), cc._RF.pop();
            },
            {
                '../../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../../infoc/InfocHelper': 'InfocHelper',
                '../../../util/PU': 'PU',
                '../MgPluginManager': 'MgPluginManager',
            },
        ],
        MainpageRightBtnPanel: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'd6169JSKiFA1aEC1EL/FXzA', 'MainpageRightBtnPanel'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o,
                    n = e('../../../infoc/m_p2_Uaction'),
                    a = e('../../Logic/EventBus'),
                    r = e('../../Logic/NotifyEvent'),
                    s = e('./BasicTouchEvent'),
                    c = e('../../task/newguidance/NewGuidanceLoader'),
                    l = e('../MusicLevelDataLoader'),
                    u = e('../../daily/DAwardMgr'),
                    d = e('../../Logic/I18nManager'),
                    p = e('./ImgCache'),
                    h = cc._decorator,
                    f = h.ccclass,
                    m = h.property,
                    g = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mLottoryPanelOut = null), (e.mLottoryBtnOut = null), (e.mLottoryRedSpotOut = null), (e.mChoseMucicNode = null), (e.mChosenMusicBtn = null), (e.mChosenMusicTips = null), (e.mChosenMusicTipslabel = null), (e.mDailyBtn = null), (e.mDailyRedSpot = null), (e.isClickedShareBtn = !1), (e.isClickedNewSongBtn = !1), (e.isClickedSKinBtn = !1), (e.isNewerTargetClickedBtn = !1), (e.mWelfareClickCB = null), (e.mToWelfarePageCallback = null), (e.mShareClickCallback = null), (e.mToSharePageCallback = null), (e.mNewerRewardClickCallback = null), (e.mToChatPageCallback = null), (e.mLottaryOutClickCallback = null), (e.mToLottaryPageCallback = null), (e.mChosenMusicClickCallback = null), (e.mToChosenMusicPageCallback = null), (e.mSkinPieceClickCallback = null), (e.mToSkinPiecePageCallback = null), (e.mTMallPromotionClickCallback = null), (e.mToTMallPromotionCallback = null), (e.mDailyTouchCallback = null), (e.mToDailyPageCallback = null), (e.mHasShowFinger = !1), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.setToWelfarePageCb = function (e) {
                                this.mToWelfarePageCallback = e;
                            }),
                            (e.prototype.setToSharePageCallback = function (e) {
                                this.mToSharePageCallback = e;
                            }),
                            (e.prototype.setToChatPageCallback = function (e) {
                                this.mToChatPageCallback = e;
                            }),
                            (e.prototype.setToLottaryPageCallback = function (e) {
                                this.mToLottaryPageCallback = e;
                            }),
                            (e.prototype.setToSkinPiecesPageCallback = function (e) {
                                this.mToSkinPiecePageCallback = e;
                            }),
                            (e.prototype.setToChosenMusicPageCallback = function (e) {
                                this.mToChosenMusicPageCallback = e;
                            }),
                            (e.prototype.setToTMallPromotionCallback = function (e) {
                                this.mToTMallPromotionCallback = e;
                            }),
                            (e.prototype.setToDailyPageCallback = function (e) {
                                this.mToDailyPageCallback = e;
                            }),
                            (e.prototype.enResLoad = function () {
                                var i = this;
                                this.enSpriteSetNull(),
                                    p.default.get('static_res/homepage/en/home_lottary_btn_en', function (e, t) {
                                        cc.isValid(i, !0) && (i.mLottoryBtnOut.normalSprite = t);
                                    }),
                                    p.default.get('static_res/homepage/en/home_lottary_btn_press_en', function (e, t) {
                                        cc.isValid(i, !0) && (i.mLottoryBtnOut.pressedSprite = t);
                                    }),
                                    p.default.get('static_res/homepage/en/home_chosen_music_en', function (e, t) {
                                        cc.isValid(i, !0) && (i.mChosenMusicBtn.normalSprite = t);
                                    }),
                                    p.default.get('static_res/homepage/en/home_chosen_music_press_en', function (e, t) {
                                        cc.isValid(i, !0) && (i.mChosenMusicBtn.pressedSprite = t);
                                    }),
                                    p.default.get('static_res/homepage/en/home_daily_btn_en', function (e, t) {
                                        cc.isValid(i, !0) && (i.mDailyBtn.normalSprite = t);
                                    }),
                                    p.default.get('static_res/homepage/en/home_daily_btn_press_en', function (e, t) {
                                        cc.isValid(i, !0) && (i.mDailyBtn.pressedSprite = t);
                                    });
                            }),
                            (e.prototype.enSpriteSetNull = function () {
                                (this.mLottoryBtnOut.getComponent(cc.Sprite).spriteFrame = null), (this.mChosenMusicBtn.getComponent(cc.Sprite).spriteFrame = null), (this.mDailyBtn.getComponent(cc.Sprite).spriteFrame = null);
                            }),
                            (e.prototype.onLoad = function () {
                                d.default.getInstance().isEnglish() && this.enResLoad(), this.initViews(), this.initEvents(), this.registerEvent(), this.initNode();
                            }),
                            (e.prototype.initNode = function () {}),
                            (e.prototype.onDestroy = function () {
                                this.unRegisterEvent();
                            }),
                            (e.prototype.initViews = function () {
                                this.setIcons(), this.setChosenMusicTips(), this.setDailyAttendanceIcon();
                            }),
                            (e.prototype.hideEventStop = function (e) {
                                this.mEventStopCallback && this.mEventStopCallback(e);
                            }),
                            (e.prototype.initEvents = function () {
                                var e = this;
                                (this.mLottaryOutClickCallback = new s.default(
                                    function () {
                                        n.default.report(0, n.default.ACTION_CLICK_LOTTERY_ICON), e.mToLottaryPageCallback && e.mToLottaryPageCallback(), e.hideEventStop(cc.Node.EventType.TOUCH_END), (e.mLottoryRedSpotOut.node.active = !1);
                                    },
                                    function () {
                                        e.hideEventStop(cc.Node.EventType.TOUCH_END);
                                    },
                                )),
                                    this.mLottoryBtnOut.node.on(cc.Node.EventType.TOUCH_END, this.mLottaryOutClickCallback.click, this.mLottaryOutClickCallback),
                                    this.handleMutiTouch(this.mLottoryBtnOut.node),
                                    (this.mChosenMusicClickCallback = new s.default(
                                        function () {
                                            e.scheduleOnce(function () {
                                                e.mToChosenMusicPageCallback && e.mToChosenMusicPageCallback();
                                            }, 0.1),
                                                (e.isClickedNewSongBtn = !0);
                                        },
                                        function () {
                                            e.hideEventStop(cc.Node.EventType.TOUCH_END);
                                        },
                                    )),
                                    this.mChosenMusicBtn.node.on(cc.Node.EventType.TOUCH_END, this.mChosenMusicClickCallback.click, this.mChosenMusicClickCallback),
                                    this.handleMutiTouch(this.mChosenMusicBtn.node),
                                    (this.mDailyTouchCallback = new s.default(
                                        function () {
                                            e.mToDailyPageCallback && e.mToDailyPageCallback();
                                        },
                                        function () {
                                            e.mEventStopCallback && e.mEventStopCallback(cc.Node.EventType.TOUCH_END);
                                        },
                                    )),
                                    this.mDailyBtn.node.on(cc.Node.EventType.TOUCH_END, this.mDailyTouchCallback.click, this.mDailyTouchCallback),
                                    this.handleMutiTouch(this.mDailyBtn.node);
                            }),
                            (e.prototype.registerEvent = function () {
                                a.default.register(r.default.HIDE_GUIDE_FINGER, this.hideFinger, this), a.default.register(r.default.WELFARE_SHOW_FRESH, this.initNode, this), a.default.register(r.default.DAILY_GET_AWARD, this.setDailyAttendanceIcon, this);
                            }),
                            (e.prototype.unRegisterEvent = function () {
                                a.default.remove(r.default.HIDE_GUIDE_FINGER, this.hideFinger, this), a.default.remove(r.default.DAILY_GET_AWARD, this.setDailyAttendanceIcon, this), a.default.remove(r.default.WELFARE_SHOW_FRESH, this.initNode, this);
                            }),
                            (e.prototype.setIcons = function () {
                                this.setChoseMusicShow();
                            }),
                            (e.prototype.startLottoryAnim = function () {
                                if (this.mLottoryBtnOut && 1 == this.mLottoryBtnOut.node.active) {
                                    var e = this.mLottoryBtnOut.getComponent(cc.Animation);
                                    e.getAnimationState('lottory_jump') && !e.getAnimationState('lottory_jump').isPlaying && e.play('lottory_jump');
                                }
                            }),
                            (e.prototype.stopLottoryAnim = function () {
                                if (this.mLottoryBtnOut && 1 == this.mLottoryBtnOut.node.active) {
                                    var e = this.mLottoryBtnOut.getComponent(cc.Animation);
                                    e.getAnimationState('lottory_jump') && e.getAnimationState('lottory_jump').isPlaying && e.stop('lottory_jump');
                                }
                            }),
                            (e.prototype.setDailyAttendanceIcon = function () {
                                var t = this;
                                u.DAwardMgr.getIns().checkReceiveStatAsyn(function (e) {
                                    t.mDailyRedSpot.node.active = e;
                                });
                            }),
                            (e.prototype.setChosenMusicTips = function () {
                                var e = l.MusicLevelDataLoader.getNewSongCountInChoiceness();
                                this.mChosenMusicTipslabel.string = e + ' new';
                            }),
                            (e.prototype.setChoseMusicShow = function () {
                                this.isClickedNewSongBtn ? (this.mChosenMusicTips.node.active = !1) : (this.mChosenMusicTips.node.active = !0);
                            }),
                            (e.prototype.hideFinger = function () {
                                var e = this.node.parent.parent.getChildByTag(c.default.FINGER_NODE_TARGET_ICON_TAG);
                                e && this.node.parent.parent.removeChild(e);
                            }),
                            (e.prototype.handleMutiTouch = function (e) {
                                var t = this;
                                e.on(
                                    cc.Node.EventType.TOUCH_START,
                                    function () {
                                        t.mEventStopCallback && t.mEventStopCallback(cc.Node.EventType.TOUCH_START);
                                    },
                                    this,
                                ),
                                    e.on(
                                        cc.Node.EventType.TOUCH_CANCEL,
                                        function () {
                                            t.mEventStopCallback && t.mEventStopCallback(cc.Node.EventType.TOUCH_CANCEL);
                                        },
                                        this,
                                    );
                            }),
                            (e.prototype.setEventStopCallback = function (e) {
                                this.mEventStopCallback = e;
                            }),
                            (e.prototype.hideRightPanelByClickAnyWhere = function () {
                                this.hideEventStop(cc.Node.EventType.TOUCH_CANCEL);
                            }),
                            __decorate([m(cc.Node)], e.prototype, 'mLottoryPanelOut', void 0),
                            __decorate([m(cc.Button)], e.prototype, 'mLottoryBtnOut', void 0),
                            __decorate([m(cc.Sprite)], e.prototype, 'mLottoryRedSpotOut', void 0),
                            __decorate([m(cc.Node)], e.prototype, 'mChoseMucicNode', void 0),
                            __decorate([m(cc.Button)], e.prototype, 'mChosenMusicBtn', void 0),
                            __decorate([m(cc.Sprite)], e.prototype, 'mChosenMusicTips', void 0),
                            __decorate([m(cc.Label)], e.prototype, 'mChosenMusicTipslabel', void 0),
                            __decorate([m(cc.Button)], e.prototype, 'mDailyBtn', void 0),
                            __decorate([m(cc.Sprite)], e.prototype, 'mDailyRedSpot', void 0),
                            (e = __decorate([f], e))
                        );
                    })(cc.Component);
                (i.default = g), ((o = i.ChatBtnType || (i.ChatBtnType = {}))[(o.NORMAL = 0)] = 'NORMAL'), (o[(o.NEW_FIGHT = 1)] = 'NEW_FIGHT'), (o[(o.NEW_FRIEND = 2)] = 'NEW_FRIEND'), cc._RF.pop();
            },
            {
                '../../../infoc/m_p2_Uaction': 'm_p2_Uaction',
                '../../Logic/EventBus': 'EventBus',
                '../../Logic/I18nManager': 'I18nManager',
                '../../Logic/NotifyEvent': 'NotifyEvent',
                '../../daily/DAwardMgr': 'DAwardMgr',
                '../../task/newguidance/NewGuidanceLoader': 'NewGuidanceLoader',
                '../MusicLevelDataLoader': 'MusicLevelDataLoader',
                './BasicTouchEvent': 'BasicTouchEvent',
                './ImgCache': 'ImgCache',
            },
        ],
        MapGenerator: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'b5574euJGNKk5ZdAx0CqRS7', 'MapGenerator'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var T = e('../../util/Utility'),
                    v = e('../../music/MusicDefines'),
                    C = e('./Map'),
                    E = e('./Map'),
                    A = e('../../base/G');

                function P(e, t) {
                    return e < t ? -1 : t < e ? 1 : 0;
                }
                var o = (function () {
                    function I() {}
                    return (
                        (I.generate = function (e, t, i, o, n, a) {
                            var r = new E.default(t, i),
                                s = I.createBeginSegment(t, i, o);
                            r.segments.push(s);
                            var c = I.getFreeSlotsBySegment(t.slotCount, s),
                                l = s.rect.height;
                            if (e)
                                for (var u = e.getMusicParts(), d = 0; d < u.length; ++d) {
                                    var p = I.generateFromMusicPart(e, d, t, i, c);
                                    if (0 != p.length) {
                                        for (var h = 0, f = 0; f < p.length; ++f) {
                                            var m = p[f];
                                            (m.rect.y += l),
                                                r.segments.push(m),
                                                m.blocks.forEach(function (e) {
                                                    (A.G.Ap.state.perfectScore += e.score), e.type == T.Utility.BLOCKTYPE.LONG && (A.G.Ap.state.perfectScore += 1);
                                                }),
                                                (h += m.rect.height);
                                        }
                                        var g = n.length;
                                        for (f = 0; f < g; ++f) d + 1 === n[f] && (p[p.length - 1].haveHonor = !0);
                                        (c = this.getFreeSlotsBySegment(t.slotCount, p[p.length - 1])), (l += h);
                                    }
                                }
                            if (a) {
                                ((S = I.createDestinationSegment(t, i)).rect.height = 0), (S.rect.y += l);
                                for (var _ = r.segments[r.segments.length - 1], y = ((d = 0), _.slots.length); d < y; ++d) S.slots.push(_.slots[d]);
                                r.segments.push(S);
                            } else {
                                var S;
                                ((S = I.createDestinationSegment(t, i)).rect.height = 0), (S.rect.y += l), r.segments.push(S);
                                var v = I.createBlankSegment(t, i);
                                (v.rect.y += l), (v.rect.height = 5 * t.baseBlockHeight), r.segments.push(v);
                            }
                            return r;
                        }),
                        (I.generateBattle = function (e, t, i, o) {
                            var n = new E.default(t, i),
                                a = o,
                                r = 0;
                            if (e) {
                                e.getMusicParts();
                                for (var s = 0; s < 1; ++s) {
                                    var c = I.generateFromMusicPart(e, s, t, i, a);
                                    if (0 != c.length) {
                                        for (var l = 0, u = 0; u < 1; ++u) {
                                            var d = c[u];
                                            (d.rect.y += r), n.segments.push(d), (l += d.rect.height);
                                        }
                                        (a = this.getFreeSlotsBySegment(t.slotCount, c[c.length - 1])), (r += l);
                                    }
                                }
                            }
                            return n;
                        }),
                        (I.generateTrial = function (e, t, i, o) {
                            var n = new E.default(t, i),
                                a = I.createBeginSegment(t, i, o);
                            n.segments.push(a);
                            var r = I.getFreeSlotsBySegment(t.slotCount, a),
                                s = a.rect.height;
                            if (e)
                                for (var c = e.getMusicParts(), l = 0; l < 3 && l < c.length; ++l) {
                                    var u = I.generateFromMusicPart(e, l, t, i, r);
                                    if (0 != u.length) {
                                        for (var d = 0, p = 0; p < u.length; ++p) {
                                            var h = u[p];
                                            (h.rect.y += s), n.segments.push(h), (d += h.rect.height);
                                        }
                                        (r = this.getFreeSlotsBySegment(t.slotCount, u[u.length - 1])), (s += d), l < 2 && 0 < u.length && (u[u.length - 1].haveHonor = !0);
                                    }
                                }
                            var f = I.createBlankSegment(t, i);
                            (f.rect.y += s), (f.rect.height = 5 * t.baseBlockHeight), n.segments.push(f), (s += f.rect.height);
                            var m = I.createDestinationSegment(t, i);
                            return (m.rect.height = 0), (m.rect.y += s), n.segments.push(m), n;
                        }),
                        (I.generateTrialSong = function (e, t, i, o, n) {
                            void 0 === n && (n = 3);
                            var a = new E.default(t, i),
                                r = I.createBeginSegment(t, i, o);
                            a.segments.push(r);
                            var s = I.getFreeSlotsBySegment(t.slotCount, r),
                                c = r.rect.height;
                            if (e)
                                for (var l = e.getMusicParts(), u = 0; u < 2 && u < l.length; ++u) {
                                    var d = I.generateFromMusicPart(e, u, t, i, s);
                                    if (0 != d.length) {
                                        for (var p = 0, h = 0; h < d.length; ++h) {
                                            var f = d[h];
                                            (f.rect.y += c), a.segments.push(f), (p += f.rect.height);
                                        }
                                        (s = this.getFreeSlotsBySegment(t.slotCount, d[d.length - 1])), (c += p), u < 1 && 0 < d.length && (d[d.length - 1].haveHonor = !0);
                                    }
                                }
                            var m = I.createBlankSegment(t, i);
                            (m.rect.y += c), (m.rect.height = 5 * t.baseBlockHeight), a.segments.push(m), (c += m.rect.height);
                            var g = I.createDestinationSegment(t, i);
                            return (g.rect.height = 0), (g.rect.y += c), a.segments.push(g), a;
                        }),
                        (I.generateGuide = function (e, t) {
                            var i = new E.default(e, t),
                                o = 0,
                                n = I.createBlankSegment(e, t);
                            (n.type = T.Utility.SEGMENTTYPE.BEGIN), I.createShortBlockWithSegment(e, n, [0], !0), i.segments.push(n), (o += n.rect.height);
                            var a = I.createBlankSegment(e, t);
                            I.createLongBlockWithSegment(e, a, [2], !0), i.segments.push(a), (a.rect.y += o), (o += a.rect.height);
                            var r = I.createBlankSegment(e, t);
                            (r.rect.y += o), (r.rect.height = 5 * e.baseBlockHeight), i.segments.push(r), (o += r.rect.height);
                            var s = I.createDestinationSegment(e, t);
                            return (s.rect.height = 0), (s.rect.y += o), i.segments.push(s), i;
                        }),
                        (I.generateFromMusicPart = function (e, t, i, o, n) {
                            var a = [];
                            if (null == e) return a;
                            var r = e.getMusicParts();
                            if (t < 0 || t >= r.length) return a;
                            var s = 0,
                                c = [];
                            n.forEach(function (e) {
                                c.push(e);
                            });
                            for (var l = r[t].getMusicBlocks(), u = 0; u < l.length; ++u) {
                                var d = I.createSegmentByMusicBlock(e, t, u, i, o, c);
                                d && ((d.rect.y += s), a.push(d), (s += d.rect.height), (c = I.getFreeSlotsBySegment(i.slotCount, d)));
                            }
                            return a;
                        }),
                        (I.generateMoneyMap = function (e, t, i, o) {
                            for (var n = new E.default(i, o), a = e, r = [], s = 0; 0 < a && s < t; ++s) {
                                var c = 0;
                                a < (c = s % 2 == 0 ? T.Utility.getRandom(1, 2) : 3 - r[r.length - 1]) && (c = a), r.push(c), (a -= c);
                            }
                            var l = Math.floor(t / 2 - 1),
                                u = Math.floor(a / 3),
                                d = a % 3;
                            l <= u && (console.warn('generateMoneyMap money line is less.'), (u = l));
                            var p = 0,
                                h = 0,
                                f = T.Utility.getRandoms(0, l, u);
                            f.sort(P);
                            var m = T.Utility.getRandoms(0, l, u);
                            m.sort(P);
                            s = 0;
                            for (var g = r.length; s < g; ++s) 1 == r[s] ? (p++, 0 < f.length && p - 1 == f[0] && ((r[s] += 2), f.splice(0, 1), (a -= 2))) : (h++, 0 < m.length && h - 1 == m[0] && ((r[s] += 1), m.splice(0, 1), (a -= 1))), 0 < d && 1 == r[s] && ((r[s] += d), (a -= d), (d = 0));
                            0 != a && console.warn('put money error, left ' + a);
                            var _ = 0;
                            for (s = 0, g = r.length; s < g; ++s) {
                                var y = I.createMoneySegment(r[s], i, o);
                                y && ((y.rect.y += _), n.segments.push(y), (_ += y.rect.height));
                            }
                            var S = I.createDestinationSegment(i, o);
                            return S && ((S.rect.y += _), n.segments.push(S), (_ += S.rect.height)), n;
                        }),
                        (I.createBeginSegment = function (e, t, i) {
                            e.slotCount;
                            var o = e.baseBlockHeight,
                                n = new C.Segment(T.Utility.SEGMENTTYPE.BEGIN);
                            n.rect.set(0, 0, t.width, o), (n.inhereBlockCount = 1);
                            var a = 0;
                            a = 0 < i.length ? i[T.Utility.getRandom(0, i.length - 1)] : T.Utility.getRandom(0, e.slotCount);
                            var r = e.slotWidth,
                                s = new C.Block();
                            return (s.id = 0), (s.type = T.Utility.BLOCKTYPE.BEGIN), (s.slotIndex = a), s.rect.set(s.slotIndex * r, 0, r, n.rect.height), (s.paused = !0), n.blocks.push(s), n.slots.push(s.slotIndex), n;
                        }),
                        (I.createDestinationSegment = function (e, t) {
                            var i = new C.Segment(T.Utility.SEGMENTTYPE.DESTINATION);
                            return i.rect.set(0, 0, t.width, 4 * e.baseBlockHeight), i;
                        }),
                        (I.createBlankSegment = function (e, t) {
                            var i = new C.Segment(T.Utility.SEGMENTTYPE.MEDIUM);
                            return i.rect.set(0, 0, t.width, e.baseBlockHeight), i;
                        }),
                        (I.createMoneySegment = function (e, t, i) {
                            var o = new C.Segment(T.Utility.SEGMENTTYPE.MEDIUM);
                            o.rect.set(0, 0, i.width, t.baseBlockHeight);
                            for (var n = t.slotWidth, a = T.Utility.getRandoms(0, t.slotCount - 1, e), r = 0; r < a.length; ++r) {
                                var s = new C.Block();
                                (s.type = T.Utility.BLOCKTYPE.MONEY), (s.slotIndex = a[r]), s.rect.set(a[r] * n, 0, n, t.baseBlockHeight), (s.musicPartIndex = -1), (s.musicBlockIndex = 0), (s.score = 1), o.blocks.push(s), o.slots.push(s.slotIndex);
                            }
                            return o;
                        }),
                        (I.calcLessScoreByMusicBlock = function (e) {
                            var t = 0;
                            return null == e || (e.getMark() === v.MUSICMARK.DoubleBlack ? (t += 4) : e.getMark() === v.MUSICMARK.StopMark || (e.getMark() === v.MUSICMARK.LongPress || (e.getMark(), v.MUSICMARK.Accompaniment), (t += 1))), t;
                        }),
                        (I.createSegmentByMusicBlock = function (e, t, i, o, n, a) {
                            if (null == e) return null;
                            0 == a.length && console.error('createSegmentByMusicBlock startSlots is empty.');
                            var r = e.getMusicPart(t),
                                s = r ? r.getMusicBlock(i) : null;
                            if (null == s) return null;
                            var c = o.slotWidth,
                                l = new C.Segment(T.Utility.SEGMENTTYPE.MEDIUM);
                            if ((l.rect.set(0, 0, n.width, 0), (l.musicPartIndex = t), (l.musicBlockIndex = i), s.getMark() === v.MUSICMARK.DoubleBlack)) {
                                for (var u = I.getFreeSlotsForTwins(o.slotCount, a), d = 0, p = [(d = 0 < u.length ? u[T.Utility.getRandom(0, u.length - 1)] : T.Utility.getRandom(0, 1)), d + 2], h = 0; h < 2; ++h) {
                                    ((S = new C.Block()).type = T.Utility.BLOCKTYPE.TWINS), (S.slotIndex = p[h]), S.rect.set(p[h] * c, 0, c, o.baseBlockHeight), (S.musicPartIndex = t), (S.musicBlockIndex = i), (S.score = 2), (S.id = h), l.blocks.push(S), l.slots.push(S.slotIndex);
                                }
                                (l.rect.height = o.baseBlockHeight), (l.inhereBlockCount = 2);
                            } else if (s.getMark() === v.MUSICMARK.StopMark) {
                                var f = s.getBlockDuration() / (32 * r.getBaseBeats());
                                l.rect.height = o.baseBlockHeight * f;
                            } else if (s.getMark() === v.MUSICMARK.LongPress || s.getMark() === v.MUSICMARK.Accompaniment) {
                                f = s.getBlockDuration() / (32 * r.getBaseBeats());
                                var m = 0;
                                if (0 < a.length) m = a[T.Utility.getRandom(0, a.length - 1)];
                                else {
                                    m = T.Utility.getRandom(0, o.slotCount);
                                }
                                ((S = new C.Block()).type = T.Utility.BLOCKTYPE.LONG), (S.slotIndex = m), S.rect.set(m * c, 0, c, o.baseBlockHeight * f), (S.musicPartIndex = t), (S.musicBlockIndex = i), (S.score = Math.floor(f)), l.blocks.push(S), l.slots.push(S.slotIndex);
                                for (var g = s.GetAccompanyDelayTimes(), _ = 0; _ < g.length; ++_) {
                                    var y = new C.Bounus();
                                    (y.time = g[_].time / (32 * r.getBaseBeats())), (y.isBass = g[_].isBass), S.bounus.push(y);
                                }
                                (l.rect.height = S.rect.height), (l.inhereBlockCount = 1);
                            } else {
                                var S;
                                m = 0;
                                (m = 0 < a.length ? a[T.Utility.getRandom(0, a.length - 1)] : T.Utility.getRandom(0, o.slotCount)), ((S = new C.Block()).type = T.Utility.BLOCKTYPE.SHORT), (S.slotIndex = m), S.rect.set(m * c, 0, c, o.baseBlockHeight), (S.musicPartIndex = t), (S.musicBlockIndex = i), (S.score = 1), l.blocks.push(S), l.slots.push(S.slotIndex), (l.rect.height = S.rect.height), (l.inhereBlockCount = 1);
                            }
                            return l;
                        }),
                        (I.createSegmentByPreMusicBlock = function (e, t, i, o, n, a) {
                            if (null == e) return null;
                            var r = e.getMusicPart(t);
                            if (null == r) return null;
                            var s = t,
                                c = i + 1;
                            return c >= r.getMusicBlocks().length && ((s = (s + 1) % e.getMusicParts().length), (c = 0)), I.createSegmentByMusicBlock(e, s, c, o, n, a);
                        }),
                        (I.createShortBlockWithSegment = function (e, t, i, o) {
                            void 0 === o && (o = !1);
                            var n = 0;
                            n = 0 < i.length ? i[T.Utility.getRandom(0, i.length - 1)] : T.Utility.getRandom(0, e.slotCount);
                            var a = new C.Block();
                            (a.type = T.Utility.BLOCKTYPE.SHORT), (a.slotIndex = n), a.rect.set(n * e.slotWidth, 0, e.slotWidth, e.baseBlockHeight), (a.musicPartIndex = -1), (a.musicBlockIndex = -1), (a.score = 1), (a.paused = o), t.blocks.push(a), t.slots.push(a.slotIndex), (t.rect.height = a.rect.height), (t.inhereBlockCount = 1);
                        }),
                        (I.createLongBlockWithSegment = function (e, t, i, o) {
                            void 0 === o && (o = !1);
                            var n = 0;
                            if (0 < i.length) n = i[T.Utility.getRandom(0, i.length - 1)];
                            else {
                                n = T.Utility.getRandom(0, e.slotCount);
                            }
                            var a = new C.Block();
                            (a.type = T.Utility.BLOCKTYPE.LONG), (a.slotIndex = n), a.rect.set(n * e.slotWidth, 0, e.slotWidth, 2 * e.baseBlockHeight), (a.musicPartIndex = -1), (a.musicBlockIndex = -1), (a.score = 3), (a.paused = o), t.blocks.push(a), t.slots.push(a.slotIndex), (t.rect.height = a.rect.height), (t.inhereBlockCount = 1);
                        }),
                        (I.createBlock = function (e, t) {
                            var i = new C.Block();
                            return i.rect.copy(e), (i.type = t), i;
                        }),
                        (I.createGiftBlock = function (e, t) {
                            var i = new C.GiftBlock();
                            return i.rect.copy(e), (i.type = T.Utility.BLOCKTYPE.GIFT), (i.propChest = t), i;
                        }),
                        (I.createObstacleBlock = function (e, t) {
                            var i = new C.ObstacleBlock();
                            return i.rect.copy(e), (i.type = T.Utility.BLOCKTYPE.OBSTACLE), (i.obstacleType = t), i;
                        }),
                        (I.createPropertyBlock = function (e, t) {
                            var i = new C.PropertyBlock();
                            return i.rect.copy(e), (i.type = T.Utility.BLOCKTYPE.PROPERTY), (i.property = t.clone()), i;
                        }),
                        (I.getSlotsFromSegment = function (e) {
                            for (var t = [], i = e.slots.length, o = 0; o < i; ++o) t.push(e.slots[o]);
                            return t;
                        }),
                        (I.getFreeSlotsBySegmentForObstacle = function (e, t) {
                            return I.getFreeSlotsBySegment(e, t);
                        }),
                        (I.getFreeSlotsBySegmentForGift = function (e, t) {
                            var i = [];
                            if (1 == t.slots.length) t.slots[0] < 2 ? i.push(t.slots[0] + 2) : i.push(t.slots[0] - 2);
                            else for (var o = 0; o < e; ++o) i.push(o);
                            return i;
                        }),
                        (I.getFreeSlotsForTwins = function (e, t) {
                            for (var i = [], o = 0; o < e / 2; ++o) {
                                for (var n = 0, a = 0; a < t.length; ++a) (t[a] != o && t[a] != o + 2) || ++n;
                                2 <= n && i.push(o);
                            }
                            return i;
                        }),
                        (I.getFreeSlotsBySegment = function (e, t) {
                            for (var i = [], o = 0; o < e; ++o) {
                                for (var n = !1, a = 0, r = t.slots.length; a < r; ++a)
                                    if (t.slots[a] == o) {
                                        n = !0;
                                        break;
                                    }
                                n || i.push(o);
                            }
                            return i;
                        }),
                        (I.getFreeSlots = function (e) {
                            for (var t = [], i = 0; i < e; ++i) t.push(i);
                            return t;
                        }),
                        I
                    );
                })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../../base/G': 'G',
                '../../music/MusicDefines': 'MusicDefines',
                '../../util/Utility': 'Utility',
                './Map': 'Map',
            },
        ],
        Map: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '4f4a7z8WjdBh4zihj0+Xlx8', 'Map'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../util/Utility'),
                    n = function () {
                        (this.slotCount = 0), (this.baseBlockHeight = 0), (this.slotWidth = 0), (this.runSpeed = 0), (this.slotWidthsCache = []);
                    };
                i.MapGenerateParam = n;
                var a = function () {
                    (this.time = 0), (this.isBass = !1), (this.attain = !1);
                };
                i.Bounus = a;
                var r = function () {
                        (this.node = null), (this.type = o.Utility.BLOCKTYPE.SHORT), (this.rect = new o.Utility.Rect(0, 0, 0, 0)), (this.slotIndex = -1), (this.id = 0), (this.musicPartIndex = -1), (this.musicBlockIndex = -1), (this.bounus = []), (this.score = 0), (this.attainScore = 0), (this.added = !1), (this.touchCount = 0), (this.touchId = -1), (this.touchMove = 0), (this.paused = !1), (this.touchTime = 0), (this.counter = 0);
                    },
                    s = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return __extends(t, e), t;
                    })((i.Block = r));
                i.GiftBlock = s;
                var c = (function (t) {
                    function e() {
                        var e = (null !== t && t.apply(this, arguments)) || this;
                        return (e.obstacleType = o.Utility.BLOCKTYPE.SHORT), e;
                    }
                    return __extends(e, t), e;
                })(r);
                i.ObstacleBlock = c;
                var l = (function (t) {
                    function e() {
                        var e = (null !== t && t.apply(this, arguments)) || this;
                        return (e.property = null), e;
                    }
                    return __extends(e, t), e;
                })(r);
                i.PropertyBlock = l;
                var u = function (e) {
                    (this.blocks = []), (this.slots = []), (this.rect = new o.Utility.Rect(0, 0, 0, 0)), (this.haveHonor = !1), (this.musicPartIndex = -1), (this.musicBlockIndex = -1), (this.inhereBlockCount = 0), (this.type = o.Utility.SEGMENTTYPE.NONE), (this.type = e);
                };
                i.Segment = u;
                var d = function (e, t) {
                    (this.segments = []), (this.params = null), (this.bottom = 0), (this.top = 0), (this.move = 0), (this.params = e);
                };
                (i.default = d), cc._RF.pop();
            },
            {
                '../../util/Utility': 'Utility',
            },
        ],
        Md5: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '16f1eaYegtLmJq85F3WAJ68', 'Md5'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function l() {
                        (this._state = new Int32Array(4)), (this._buffer = new ArrayBuffer(68)), (this._buffer8 = new Uint8Array(this._buffer, 0, 68)), (this._buffer32 = new Uint32Array(this._buffer, 0, 17)), this.start();
                    }
                    return (
                        (l.hashStr = function (e, t) {
                            return void 0 === t && (t = !1), this.onePassHasher.start().appendStr(e).end(t);
                        }),
                        (l.hashAsciiStr = function (e, t) {
                            return void 0 === t && (t = !1), this.onePassHasher.start().appendAsciiStr(e).end(t);
                        }),
                        (l._hex = function (e) {
                            var t,
                                i,
                                o,
                                n,
                                a = l.hexChars,
                                r = l.hexOut;
                            for (n = 0; n < 4; n += 1) for (i = 8 * n, t = e[n], o = 0; o < 8; o += 2) (r[i + 1 + o] = a.charAt(15 & t)), (t >>>= 4), (r[i + 0 + o] = a.charAt(15 & t)), (t >>>= 4);
                            return r.join('');
                        }),
                        (l._md5cycle = function (e, t) {
                            var i = e[0],
                                o = e[1],
                                n = e[2],
                                a = e[3];
                            (o = ((((o += ((((n = ((((n += ((((a = ((((a += ((((i = ((((i += (((o & n) | (~o & a)) + t[0] - 680876936) | 0) << 7) | (i >>> 25)) + o) | 0) & o) | (~i & n)) + t[1] - 389564586) | 0) << 12) | (a >>> 20)) + i) | 0) & i) | (~a & o)) + t[2] + 606105819) | 0) << 17) | (n >>> 15)) + a) | 0) & a) | (~n & i)) + t[3] - 1044525330) | 0) << 22) | (o >>> 10)) + n) | 0), (o = ((((o += ((((n = ((((n += ((((a = ((((a += ((((i = ((((i += (((o & n) | (~o & a)) + t[4] - 176418897) | 0) << 7) | (i >>> 25)) + o) | 0) & o) | (~i & n)) + t[5] + 1200080426) | 0) << 12) | (a >>> 20)) + i) | 0) & i) | (~a & o)) + t[6] - 1473231341) | 0) << 17) | (n >>> 15)) + a) | 0) & a) | (~n & i)) + t[7] - 45705983) | 0) << 22) | (o >>> 10)) + n) | 0), (o = ((((o += ((((n = ((((n += ((((a = ((((a += ((((i = ((((i += (((o & n) | (~o & a)) + t[8] + 1770035416) | 0) << 7) | (i >>> 25)) + o) | 0) & o) | (~i & n)) + t[9] - 1958414417) | 0) << 12) | (a >>> 20)) + i) | 0) & i) | (~a & o)) + t[10] - 42063) | 0) << 17) | (n >>> 15)) + a) | 0) & a) | (~n & i)) + t[11] - 1990404162) | 0) << 22) | (o >>> 10)) + n) | 0), (o = ((((o += ((((n = ((((n += ((((a = ((((a += ((((i = ((((i += (((o & n) | (~o & a)) + t[12] + 1804603682) | 0) << 7) | (i >>> 25)) + o) | 0) & o) | (~i & n)) + t[13] - 40341101) | 0) << 12) | (a >>> 20)) + i) | 0) & i) | (~a & o)) + t[14] - 1502002290) | 0) << 17) | (n >>> 15)) + a) | 0) & a) | (~n & i)) + t[15] + 1236535329) | 0) << 22) | (o >>> 10)) + n) | 0), (o = ((((o += ((((n = ((((n += ((((a = ((((a += ((((i = ((((i += (((o & a) | (n & ~a)) + t[1] - 165796510) | 0) << 5) | (i >>> 27)) + o) | 0) & n) | (o & ~n)) + t[6] - 1069501632) | 0) << 9) | (a >>> 23)) + i) | 0) & o) | (i & ~o)) + t[11] + 643717713) | 0) << 14) | (n >>> 18)) + a) | 0) & i) | (a & ~i)) + t[0] - 373897302) | 0) << 20) | (o >>> 12)) + n) | 0), (o = ((((o += ((((n = ((((n += ((((a = ((((a += ((((i = ((((i += (((o & a) | (n & ~a)) + t[5] - 701558691) | 0) << 5) | (i >>> 27)) + o) | 0) & n) | (o & ~n)) + t[10] + 38016083) | 0) << 9) | (a >>> 23)) + i) | 0) & o) | (i & ~o)) + t[15] - 660478335) | 0) << 14) | (n >>> 18)) + a) | 0) & i) | (a & ~i)) + t[4] - 405537848) | 0) << 20) | (o >>> 12)) + n) | 0), (o = ((((o += ((((n = ((((n += ((((a = ((((a += ((((i = ((((i += (((o & a) | (n & ~a)) + t[9] + 568446438) | 0) << 5) | (i >>> 27)) + o) | 0) & n) | (o & ~n)) + t[14] - 1019803690) | 0) << 9) | (a >>> 23)) + i) | 0) & o) | (i & ~o)) + t[3] - 187363961) | 0) << 14) | (n >>> 18)) + a) | 0) & i) | (a & ~i)) + t[8] + 1163531501) | 0) << 20) | (o >>> 12)) + n) | 0), (o = ((((o += ((((n = ((((n += ((((a = ((((a += ((((i = ((((i += (((o & a) | (n & ~a)) + t[13] - 1444681467) | 0) << 5) | (i >>> 27)) + o) | 0) & n) | (o & ~n)) + t[2] - 51403784) | 0) << 9) | (a >>> 23)) + i) | 0) & o) | (i & ~o)) + t[7] + 1735328473) | 0) << 14) | (n >>> 18)) + a) | 0) & i) | (a & ~i)) + t[12] - 1926607734) | 0) << 20) | (o >>> 12)) + n) | 0), (o = ((((o += (((n = ((((n += (((a = ((((a += (((i = ((((i += ((o ^ n ^ a) + t[5] - 378558) | 0) << 4) | (i >>> 28)) + o) | 0) ^ o ^ n) + t[8] - 2022574463) | 0) << 11) | (a >>> 21)) + i) | 0) ^ i ^ o) + t[11] + 1839030562) | 0) << 16) | (n >>> 16)) + a) | 0) ^ a ^ i) + t[14] - 35309556) | 0) << 23) | (o >>> 9)) + n) | 0), (o = ((((o += (((n = ((((n += (((a = ((((a += (((i = ((((i += ((o ^ n ^ a) + t[1] - 1530992060) | 0) << 4) | (i >>> 28)) + o) | 0) ^ o ^ n) + t[4] + 1272893353) | 0) << 11) | (a >>> 21)) + i) | 0) ^ i ^ o) + t[7] - 155497632) | 0) << 16) | (n >>> 16)) + a) | 0) ^ a ^ i) + t[10] - 1094730640) | 0) << 23) | (o >>> 9)) + n) | 0), (o = ((((o += (((n = ((((n += (((a = ((((a += (((i = ((((i += ((o ^ n ^ a) + t[13] + 681279174) | 0) << 4) | (i >>> 28)) + o) | 0) ^ o ^ n) + t[0] - 358537222) | 0) << 11) | (a >>> 21)) + i) | 0) ^ i ^ o) + t[3] - 722521979) | 0) << 16) | (n >>> 16)) + a) | 0) ^ a ^ i) + t[6] + 76029189) | 0) << 23) | (o >>> 9)) + n) | 0), (o = ((((o += (((n = ((((n += (((a = ((((a += (((i = ((((i += ((o ^ n ^ a) + t[9] - 640364487) | 0) << 4) | (i >>> 28)) + o) | 0) ^ o ^ n) + t[12] - 421815835) | 0) << 11) | (a >>> 21)) + i) | 0) ^ i ^ o) + t[15] + 530742520) | 0) << 16) | (n >>> 16)) + a) | 0) ^ a ^ i) + t[2] - 995338651) | 0) << 23) | (o >>> 9)) + n) | 0), (o = ((((o += (((a = ((((a += ((o ^ ((i = ((((i += ((n ^ (o | ~a)) + t[0] - 198630844) | 0) << 6) | (i >>> 26)) + o) | 0) | ~n)) + t[7] + 1126891415) | 0) << 10) | (a >>> 22)) + i) | 0) ^ ((n = ((((n += ((i ^ (a | ~o)) + t[14] - 1416354905) | 0) << 15) | (n >>> 17)) + a) | 0) | ~i)) + t[5] - 57434055) | 0) << 21) | (o >>> 11)) + n) | 0), (o = ((((o += (((a = ((((a += ((o ^ ((i = ((((i += ((n ^ (o | ~a)) + t[12] + 1700485571) | 0) << 6) | (i >>> 26)) + o) | 0) | ~n)) + t[3] - 1894986606) | 0) << 10) | (a >>> 22)) + i) | 0) ^ ((n = ((((n += ((i ^ (a | ~o)) + t[10] - 1051523) | 0) << 15) | (n >>> 17)) + a) | 0) | ~i)) + t[1] - 2054922799) | 0) << 21) | (o >>> 11)) + n) | 0), (o = ((((o += (((a = ((((a += ((o ^ ((i = ((((i += ((n ^ (o | ~a)) + t[8] + 1873313359) | 0) << 6) | (i >>> 26)) + o) | 0) | ~n)) + t[15] - 30611744) | 0) << 10) | (a >>> 22)) + i) | 0) ^ ((n = ((((n += ((i ^ (a | ~o)) + t[6] - 1560198380) | 0) << 15) | (n >>> 17)) + a) | 0) | ~i)) + t[13] + 1309151649) | 0) << 21) | (o >>> 11)) + n) | 0), (o = ((((o += (((a = ((((a += ((o ^ ((i = ((((i += ((n ^ (o | ~a)) + t[4] - 145523070) | 0) << 6) | (i >>> 26)) + o) | 0) | ~n)) + t[11] - 1120210379) | 0) << 10) | (a >>> 22)) + i) | 0) ^ ((n = ((((n += ((i ^ (a | ~o)) + t[2] + 718787259) | 0) << 15) | (n >>> 17)) + a) | 0) | ~i)) + t[9] - 343485551) | 0) << 21) | (o >>> 11)) + n) | 0), (e[0] = (i + e[0]) | 0), (e[1] = (o + e[1]) | 0), (e[2] = (n + e[2]) | 0), (e[3] = (a + e[3]) | 0);
                        }),
                        (l.prototype.start = function () {
                            return (this._dataLength = 0), (this._bufferLength = 0), this._state.set(l.stateIdentity), this;
                        }),
                        (l.prototype.appendStr = function (e) {
                            var t,
                                i,
                                o = this._buffer8,
                                n = this._buffer32,
                                a = this._bufferLength;
                            for (i = 0; i < e.length; i += 1) {
                                if ((t = e.charCodeAt(i)) < 128) o[a++] = t;
                                else if (t < 2048) (o[a++] = 192 + (t >>> 6)), (o[a++] = (63 & t) | 128);
                                else if (t < 55296 || 56319 < t) (o[a++] = 224 + (t >>> 12)), (o[a++] = ((t >>> 6) & 63) | 128), (o[a++] = (63 & t) | 128);
                                else {
                                    if (1114111 < (t = 1024 * (t - 55296) + (e.charCodeAt(++i) - 56320) + 65536)) throw new Error('Unicode standard supports code points up to U+10FFFF');
                                    (o[a++] = 240 + (t >>> 18)), (o[a++] = ((t >>> 12) & 63) | 128), (o[a++] = ((t >>> 6) & 63) | 128), (o[a++] = (63 & t) | 128);
                                }
                                64 <= a && ((this._dataLength += 64), l._md5cycle(this._state, n), (a -= 64), (n[0] = n[16]));
                            }
                            return (this._bufferLength = a), this;
                        }),
                        (l.prototype.appendAsciiStr = function (e) {
                            for (var t, i = this._buffer8, o = this._buffer32, n = this._bufferLength, a = 0; ; ) {
                                for (t = Math.min(e.length - a, 64 - n); t--; ) i[n++] = e.charCodeAt(a++);
                                if (n < 64) break;
                                (this._dataLength += 64), l._md5cycle(this._state, o), (n = 0);
                            }
                            return (this._bufferLength = n), this;
                        }),
                        (l.prototype.appendByteArray = function (e) {
                            for (var t, i = this._buffer8, o = this._buffer32, n = this._bufferLength, a = 0; ; ) {
                                for (t = Math.min(e.length - a, 64 - n); t--; ) i[n++] = e[a++];
                                if (n < 64) break;
                                (this._dataLength += 64), l._md5cycle(this._state, o), (n = 0);
                            }
                            return (this._bufferLength = n), this;
                        }),
                        (l.prototype.getState = function () {
                            var e = this._state;
                            return {
                                buffer: String.fromCharCode.apply(null, this._buffer8),
                                buflen: this._bufferLength,
                                length: this._dataLength,
                                state: [e[0], e[1], e[2], e[3]],
                            };
                        }),
                        (l.prototype.setState = function (e) {
                            var t,
                                i = e.buffer,
                                o = e.state,
                                n = this._state;
                            for (this._dataLength = e.length, this._bufferLength = e.buflen, n[0] = o[0], n[1] = o[1], n[2] = o[2], n[3] = o[3], t = 0; t < i.length; t += 1) this._buffer8[t] = i.charCodeAt(t);
                        }),
                        (l.prototype.end = function (e) {
                            void 0 === e && (e = !1);
                            var t,
                                i = this._bufferLength,
                                o = this._buffer8,
                                n = this._buffer32,
                                a = 1 + (i >> 2);
                            if (((this._dataLength += i), (o[i] = 128), (o[i + 1] = o[i + 2] = o[i + 3] = 0), n.set(l.buffer32Identity.subarray(a), a), 55 < i && (l._md5cycle(this._state, n), n.set(l.buffer32Identity)), (t = 8 * this._dataLength) <= 4294967295)) n[14] = t;
                            else {
                                var r = t.toString(16).match(/(.*?)(.{0,8})$/);
                                if (null === r) return;
                                var s = parseInt(r[2], 16),
                                    c = parseInt(r[1], 16) || 0;
                                (n[14] = s), (n[15] = c);
                            }
                            return l._md5cycle(this._state, n), e ? this._state : l._hex(this._state);
                        }),
                        (l.stateIdentity = new Int32Array([1732584193, -271733879, -1732584194, 271733878])),
                        (l.buffer32Identity = new Int32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])),
                        (l.hexChars = '0123456789abcdef'),
                        (l.hexOut = []),
                        (l.onePassHasher = new l()),
                        l
                    );
                })();
                '5d41402abc4b2a76b9719d911017c592' !== (i.default = o).hashStr('hello') && console.error('Md5 self test failed.'), cc._RF.pop();
            },
            {},
        ],
        MemCache: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '74ff7KSKPlOOYnSZoqeHK94', 'MemCache'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var r = e('../../../config/LSKey'),
                    a = e('../../../util/StringUtil'),
                    s = e('../../../base/Log'),
                    o = e('../../../../modules/MGBasic/scripts/Logic/MGBasicEntrance'),
                    n = (function () {
                        function n() {
                            (this.memoryObj = null), (this.mCanUseMemoryCache = !0), (this.mErrorVal = '0.0'), (this.isHasLocalData = !1), (this.isBatchSave = !1), (this.mSavedVal = ''), (this.memoryObj = new Object());
                            var e = this.readFromFlash(n.KEY_ALL, this.mErrorVal);
                            e == this.mErrorVal || a.StringUtil.isEmpty(e) || (this.memoryObj = JSON.parse(e)), this.mergeLocalData();
                        }
                        return (
                            (n.prototype.mergeLocalData = function () {
                                var e = Object.keys(this.memoryObj);
                                Date.now();
                                if (e && 0 != e.length) this.isHasLocalData = !0;
                                else {
                                    var t = this.readFromFlash(r.default.UserInfo, this.mErrorVal);
                                    if (t == this.mErrorVal) (this.mCanUseMemoryCache = !1), (this.isHasLocalData = !1);
                                    else if (!a.StringUtil.isEmpty(t)) {
                                        (this.isHasLocalData = !0), (this.memoryObj[r.default.UserInfo] = t);
                                        var i = new Object();
                                        (this.mCanUseMemoryCache = this.readOldData(i)), this.mCanUseMemoryCache && ((this.memoryObj = i), (this.memoryObj[r.default.UserInfo] = t), this.removeOldData());
                                    }
                                }
                            }),
                            (n.prototype.hasLocalData = function () {
                                return this.isHasLocalData;
                            }),
                            (n.prototype.removeOldData = function () {
                                for (var e = Object.keys(r.default), t = 0; t < e.length; t++) {
                                    var i = e[t];
                                    'KEYS_NEED_SYNC' != i && this.removeFromFlash(r.default[i]);
                                }
                            }),
                            (n.prototype.readOldData = function (e) {
                                for (var t = Object.keys(r.default), i = 0; i < t.length; i++) {
                                    var o = t[i];
                                    if ('KEYS_NEED_SYNC' != o && 'UserInfo' != o) {
                                        var n = r.default[o],
                                            a = this.readFromFlash(n, this.mErrorVal);
                                        if (a == this.mErrorVal) return !1;
                                        e[n] = a;
                                    }
                                }
                                return !0;
                            }),
                            (n.Ins = function () {
                                return n._instance || (n._instance = new n()), n._instance;
                            }),
                            (n.prototype.batchSaveStart = function () {
                                this.isBatchSave = !0;
                            }),
                            (n.prototype.batchSaveEnd = function () {
                                (this.isBatchSave = !1), this.flushToFile();
                            }),
                            (n.prototype.save = function (e, t) {
                                a.StringUtil.isNullOrUndefined(e) || (this.mCanUseMemoryCache ? ((this.memoryObj[e] = t), this.isBatchSave || this.flushToFile()) : this.saveToFlash(e, t));
                            }),
                            (n.prototype.read = function (e, t) {
                                return void 0 === t && (t = null), a.StringUtil.isNullOrUndefined(e) ? t : this.mCanUseMemoryCache ? this.memoryObj[e] : this.readFromFlash(e, t);
                            }),
                            (n.prototype.remove = function (t) {
                                if (!a.StringUtil.isNullOrUndefined(t))
                                    try {
                                        if (this.mCanUseMemoryCache) {
                                            if (t == n.KEY_ALL)
                                                for (var e = Object.keys(this.memoryObj), i = 0; i < e.length; i++) {
                                                    var o = e[i];
                                                    null != o && null != o && delete this.memoryObj[o];
                                                }
                                            else delete this.memoryObj[t];
                                            this.flushToFile();
                                        } else this.removeFromFlash(t);
                                    } catch (e) {
                                        s.default.e(n.TAG + 'remove error', t, e);
                                    }
                            }),
                            (n.prototype.flushToFile = function () {
                                var e = this,
                                    t = JSON.stringify(this.memoryObj);
                                this.mSavedVal !== t &&
                                    setTimeout(function () {
                                        e.saveToFlash(n.KEY_ALL, t) && (e.mSavedVal = t);
                                    }, 0);
                            }),
                            (n.prototype.saveToFlash = function (e, t) {
                                try {
                                    return o.MGBasic.setStorage(e, t);
                                } catch (e) {
                                    return s.default.e(n.TAG + 'flush to file, error: ', e), !1;
                                }
                            }),
                            (n.prototype.readFromFlash = function (e, t) {
                                void 0 === t && (t = '');
                                try {
                                    return o.MGBasic.getStorage(e);
                                } catch (e) {
                                    return s.default.e(n.TAG + 'readFromCache', e), t;
                                }
                            }),
                            (n.prototype.removeFromFlash = function (e) {
                                try {
                                    o.MGBasic.delStorage(e);
                                } catch (e) {}
                            }),
                            (n.KEY_ALL = 'wx_id'),
                            (n.TAG = 'FileCache => '),
                            n
                        );
                    })();
                (i.MemCache = n), cc._RF.pop();
            },
            {
                '../../../../modules/MGBasic/scripts/Logic/MGBasicEntrance': 'MGBasicEntrance',
                '../../../base/Log': 'Log',
                '../../../config/LSKey': 'LSKey',
                '../../../util/StringUtil': 'StringUtil',
            },
        ],
        MgPluginManager: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '68eabUDSzJHiZCiWtxnB/GJ', 'MgPluginManager'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    n = e('../../util/PU'),
                    r = e('../../../modules/MGBasic/scripts/Logic/MGBasicEntrance'),
                    s = e('../Network/Protocol/StorageUtil'),
                    c = e('../../config/LSKey'),
                    l = e('../../infoc/m_p2_Uaction'),
                    u = e('../../base/Log'),
                    d = e('../looper/Looper'),
                    p = e('./GameEntraScene/ImgCache'),
                    h = e('./GameEntraScene/PrefabMgr'),
                    f = e('../skin/FollowGiftsPrefab'),
                    m = e('../../util/PageHeap'),
                    g = e('../../upgrade/ToggleChecker'),
                    _ = e('../../upgrade/ToggleBean'),
                    y = e('./MGBGiftBoxWrapper'),
                    S = e('../../util/Utility');
                e('../../libs/recommender.min');
                var v,
                    a,
                    I = (function () {
                        function a() {
                            (this.POSID_RCM = '1001102'), (this.ACTION_SHOW = 10001), (this.ACTION_CLICK = 10002), (this.ACTION_JUMP = 551), (this.ADTYPE_RCM = 5), (this.imageCache = {}), (this.dancingLineAppId = 'wxf976a9e8c25dedf2'), (this.dancingLineExtraDataSrc = 'piano2'), (this.dancingLineGameId = 3091), (this.dlIcon = '/static_res/homepage/recommend_game/dancinglineA'), (this.brickesAppId = 'wx3ab3658aab34d7db'), (this.brickesExtraDataSrc = 'piano2'), (this.brickesGameId = 3511), (this.brickesIcon = '/static_res/homepage/recommend_game/brickes'), (this.entryIconRollingsky = '/static_res/homepage/recommend_game/icon_rolling_sky'), (this.extraDataSrcRollingsky = 'piano2'), (this.appIdRollingsky = 'wx60001e99e6f99e70'), (this.gameIdRollingsky = ''), (this.followIcon = '/static_res/homepage/recommend_game/follow_icon'), (this.mDlBrickesLooper = null), (this.mGiftBoxWrpper = null), (this.mEntryType = a.PARAMS_TYPE_ROLLINGSKY);
                        }
                        return (
                            (a.prototype.createUI = function () {}),
                            (a.prototype.getRecommend = function (e) {
                                var t = 'wx3ff4ef6cb6e496a4',
                                    i = a.PLATFORM_WX;
                                return (
                                    n.default.isQQ() && ((t = '2749'), (i = a.PLATFORM_QQ)),
                                    new Recommender({
                                        appid: t,
                                        openid: e,
                                        forceOpen: !1,
                                        platform: i,
                                        debug: !1,
                                        env: a.ENV_PROD,
                                    })
                                );
                            }),
                            (a.prototype.onDestroy = function () {
                                u.default.i(a.TAG + ',onDestroy '), this.mDlBrickesLooper && this.mDlBrickesLooper.stop(), this.mGiftBoxWrpper && this.mGiftBoxWrpper.onDestroy();
                            }),
                            (a.prototype.onHide = function () {
                                u.default.i(a.TAG + ',onHide '), this.mDlBrickesLooper && this.mDlBrickesLooper.stop(), this.mGiftBoxWrpper && this.mGiftBoxWrpper.onHide();
                            }),
                            (a.prototype.onShow = function (e) {
                                void 0 === e && (e = a.INTERVAL_TIME), u.default.i(a.TAG + ',onShow '), this.mDlBrickesLooper && (u.default.i(a.TAG + ',onShow this.mDlBrickesLooper = ' + this.mDlBrickesLooper.getStarted()), this.mDlBrickesLooper.getStarted() || this.mDlBrickesLooper.start(e)), this.mGiftBoxWrpper && this.mGiftBoxWrpper.onShow();
                            }),
                            (a.prototype.initMGBGiftBox = function (e, t) {
                                this.mGiftBoxWrpper || (this.mGiftBoxWrpper = new y.default()), this.mGiftBoxWrpper.initGiftBox(e, t);
                            }),
                            (a.prototype.initEntryLooper = function (e, t) {
                                var i = this;
                                void 0 === t && (t = a.INTERVAL_TIME);
                                var o = this.getDLParams(),
                                    n = this.getRollingskyParams();
                                MGRPT.minigame_common_ad.report(this.POSID_RCM, this.ACTION_SHOW, 0, this.ADTYPE_RCM),
                                    this.initEntryIcon(this.mEntryType, e),
                                    this.mDlBrickesLooper ||
                                        ((this.mDlBrickesLooper = new d.default()),
                                        this.mDlBrickesLooper.setWork(function () {
                                            i.mEntryType == a.PARAMS_TYPE_DL ? (i.mEntryType = a.PARAMS_TYPE_ROLLINGSKY) : (i.mEntryType = a.PARAMS_TYPE_DL), i.initEntryIcon(i.mEntryType, e);
                                        }),
                                        this.mDlBrickesLooper.start(t)),
                                    e.node.on(cc.Node.EventType.TOUCH_END, function () {
                                        setTimeout(function () {
                                            var e = null;
                                            (e = i.mEntryType == a.PARAMS_TYPE_DL ? o : n),
                                                MGRPT.minigame_common_ad.report(i.POSID_RCM, i.ACTION_CLICK, e.appId, i.ADTYPE_RCM),
                                                (e.success = function () {
                                                    MGRPT.minigame_common_ad.report(i.POSID_RCM, i.ACTION_JUMP, e.appId, i.ADTYPE_RCM);
                                                }),
                                                r.MGBasic.navigateToMiniProgram(e);
                                        }, 0);
                                    });
                            }),
                            (a.prototype.initEntryIcon = function (e, t) {
                                var i = this.dlIcon;
                                e == a.PARAMS_TYPE_ROLLINGSKY && (i = this.entryIconRollingsky), p.default.get2(i, t);
                            }),
                            (a.prototype.initBrickes = function (e) {
                                u.default.i(a.TAG + ',initBrickes '), p.default.get2(this.brickesIcon, e);
                                var t = this.getBrickesParmas();
                                e.node.on(cc.Node.EventType.TOUCH_START, function () {
                                    u.default.i(a.TAG + ',initBrickes click params = ', t),
                                        setTimeout(function () {
                                            r.MGBasic.navigateToMiniProgram(t);
                                        }, 0);
                                });
                            }),
                            (a.prototype.initFollowGifts = function (i, o) {
                                var n = this;
                                u.default.i(a.TAG + ',initFollowGifs '),
                                    this.canShowIcon(i)
                                        ? this.initShowFollowGifts(function (e) {
                                              if (e) {
                                                  p.default.get2(n.followIcon, i);
                                                  var t = s.default.read('follow_gifts');
                                                  (null != t && '' != t && null != t) || (o.node.active = !0),
                                                      l.default.report(0, l.default.ACTION_FOLLOW_ICON_SHOW),
                                                      i.node.on(cc.Node.EventType.TOUCH_START, function () {
                                                          u.default.i(a.TAG + ',initFollowGifs '), l.default.report(0, l.default.ACTION_FOLLOW_ICON_CLICK), (o.node.active = !1), s.default.save('follow_gifts', 'true'), n.showFollowForGiftPrefb(i.node.parent.parent.parent);
                                                      });
                                              }
                                          })
                                        : console.warn(a.TAG + ' initFollow failed  ');
                            }),
                            (a.prototype.canShowIcon = function (e) {
                                return !(!e || null == e.node) && null != e.node.parent && null != e.node.parent.parent && !(n.default.isWeiXin() && S.Utility.compareVersion(n.default.SDKVersion, '2.0.3') < 0) && null != e.node.parent.parent.parent;
                            }),
                            (a.prototype.initDL = function (e) {
                                var t = this;
                                u.default.i(a.TAG + ',initDL '), p.default.get2(this.dlIcon, e);
                                var i = this.getDLParams();
                                this.report(1, 'dancinglineA'),
                                    e.node.on(cc.Node.EventType.TOUCH_START, function () {
                                        u.default.i(a.TAG + ',initDL click params = ', i),
                                            t.report(2, 'dancinglineA'),
                                            setTimeout(function () {
                                                r.MGBasic.navigateToMiniProgram(i);
                                            }, 0);
                                    });
                            }),
                            (a.prototype.getBrickesParmas = function () {
                                var e = this.brickesAppId;
                                return (
                                    n.default.isQQ() && (e = this.brickesGameId + ''),
                                    {
                                        appId: e,
                                        path: '',
                                        extraData: {
                                            src: this.brickesExtraDataSrc,
                                        },
                                    }
                                );
                            }),
                            (a.prototype.getDLParams = function () {
                                var e = this.dancingLineAppId;
                                return (
                                    n.default.isQQ() && (e = this.dancingLineGameId + ''),
                                    {
                                        appId: e,
                                        path: '',
                                        extraData: {
                                            src: this.dancingLineExtraDataSrc,
                                        },
                                    }
                                );
                            }),
                            (a.prototype.getRollingskyParams = function () {
                                return {
                                    appId: n.default.isWeiXin() ? this.appIdRollingsky : this.gameIdRollingsky,
                                    path: '',
                                    extraData: {
                                        src: this.extraDataSrcRollingsky,
                                    },
                                };
                            }),
                            (a.prototype.initQQGame = function (t) {
                                var i = this;
                                (n.default.isWeiXin() || n.default.isQQ()) &&
                                    (u.default.i('[Recommender] initQQ: '),
                                    o.MGUser.getUserLoginInfo({
                                        complete: function (e) {
                                            e && i.startQQ(e.playerId, t);
                                        },
                                    }));
                            }),
                            (a.prototype.initRecommend = function (t) {
                                var i = this;
                                n.default.isWeiXin() || n.default.isQQ()
                                    ? (u.default.i('[Recommender] initRecommend: '),
                                      o.MGUser.getUserLoginInfo({
                                          complete: function (e) {
                                              e && i.startRecommend(e.playerId, t);
                                          },
                                      }))
                                    : u.default.i('MgPlugin platform not support');
                            }),
                            (a.prototype.startQQ = function (e, i) {
                                var o = this;
                                this.getRecommend(e).getQQGameEntry(function (e) {
                                    if ((u.default.i('[Recommender] GetQQGameEntry: ', e), e && e.isOpen)) {
                                        i.node.active = !0;
                                        var t = e.icon;
                                        o.setImage(i, t),
                                            i.node.on(cc.Node.EventType.TOUCH_START, function () {
                                                u.default.i('[Recommender] QQ onlcik: jumpToCurrentGame '), e.navigateToMiniProgram();
                                            });
                                    } else i.node.active = !1;
                                });
                            }),
                            (a.prototype.showFollowForGiftPrefb = function (i) {
                                h.default.load('prefab/FollowGiftsPrefab', function (e, t) {
                                    (u.default.i(' show node => ' + t + 'error ->' + e), t) &&
                                        (t.getComponent(f.default).setCloseCallback(function () {
                                            u.default.i(' showFollowForGiftPrefb destroy'), m.default.Ins().pop('FollowGiftsPrefab'), t.destroy();
                                        }),
                                        i.addChild(t),
                                        m.default.Ins().push('FollowGiftsPrefab'));
                                });
                            }),
                            (a.prototype.startRecommend = function (e, i) {
                                var o = this,
                                    n = this.getRecommend(e);
                                n.onReady(function (e, t) {
                                    u.default.i('[Recommender] onReady: isOpen = ' + e + ', game = ', t),
                                        e
                                            ? ((i.node.active = !0),
                                              o.setImage(i, t.icon),
                                              i.node.on(cc.Node.EventType.TOUCH_START, function () {
                                                  u.default.i('[Recommender] onlcik: jumpToCurrentGame '), n.jumpToCurrentGame();
                                              }))
                                            : (i.node.active = !1);
                                }),
                                    n.onChange(function (e) {
                                        i && i.isValid && o.setImage(i, e.icon);
                                    });
                            }),
                            (a.prototype.buildRedSpot = function (e) {
                                var t = 'true' === s.default.read(c.default.RECOMMEND_GAME_RED_SPOT_CLICKED);
                                e.active = !t;
                            }),
                            (a.prototype.setImage = function (n, a, r) {
                                var s = this;
                                if (this.imageCache[a]) {
                                    if (((n.spriteFrame = this.imageCache[a]), !r)) {
                                        var e = n.spriteFrame.width <= 60 ? n.spriteFrame.width : 60,
                                            t = n.spriteFrame.height <= 80 ? n.spriteFrame.height : 80;
                                        (n.node.width = e), (n.node.height = t);
                                    }
                                } else
                                    cc.loader.load(
                                        {
                                            url: a,
                                        },
                                        function (e, t) {
                                            if (((s.imageCache[a] = n.spriteFrame = new cc.SpriteFrame(t)), !r)) {
                                                var i = n.spriteFrame.width <= 60 ? n.spriteFrame.width : 60,
                                                    o = n.spriteFrame.height <= 80 ? n.spriteFrame.height : 80;
                                                (n.node.width = i), (n.node.height = o);
                                            }
                                        },
                                    );
                            }),
                            (a.prototype.report = function (e, t) {
                                var i = 'dancinglineA' === t ? v.DancingLineA : v.DancingLineB;
                                switch (e) {
                                    case 1:
                                        a.reportShow(i);
                                        break;
                                    case 2:
                                        a.reportClick(i);
                                }
                            }),
                            (a.reportShow = function (e) {
                                switch (e) {
                                    case v.DancingLineA:
                                        l.default.report(0, l.default.ACTION_HOMEPAGE_RECOMMEND_GAME_SHOW_A);
                                        break;
                                    case v.DancingLineB:
                                        l.default.report(0, l.default.ACTION_HOMEPAGE_RECOMMEND_GAME_SHOW_B);
                                }
                            }),
                            (a.reportClick = function (e) {
                                switch (e) {
                                    case v.DancingLineA:
                                        l.default.report(0, l.default.ACTION_HOMEPAGE_RECOMMEND_GAME_CLICK_A);
                                        break;
                                    case v.DancingLineB:
                                        l.default.report(0, l.default.ACTION_HOMEPAGE_RECOMMEND_GAME_CLICK_B);
                                }
                            }),
                            (a.prototype.getServerTime = function (i) {
                                o.MGUser.getCurrentServerRealTime({
                                    complete: function (e, t) {
                                        i(e, t);
                                    },
                                });
                            }),
                            (a.prototype.initShowFollowGifts = function (t) {
                                g.default.ins().init(function () {
                                    var e = g.default.ins().getToggleStatus(_.ToggleKey.SUBSCRIPTION_ICON, 0, 0);
                                    t(1 == e);
                                });
                            }),
                            (a.TAG = 'MgPluginManager====>>>'),
                            (a.ENV_PRE = 'pre'),
                            (a.ENV = a.ENV_PROD = 'prod'),
                            (a.PLATFORM_WX = 'wx'),
                            (a.PLATFORM_QQ = 'qq'),
                            (a.PLATFORM = a.PLATFORM_WX),
                            (a.isEnable = !0),
                            (a.PARAMS_TYPE_DL = 0),
                            (a.PARAMS_TYPE_BRICKES = 1),
                            (a.PARAMS_TYPE_ROLLINGSKY = 2),
                            (a.INTERVAL_TIME = 8),
                            a
                        );
                    })();
                (i.default = I), ((a = v = i.RECOMMEND_GAME_NAME || (i.RECOMMEND_GAME_NAME = {}))[(a.DancingLineA = 0)] = 'DancingLineA'), (a[(a.DancingLineB = 1)] = 'DancingLineB'), cc._RF.pop();
            },
            {
                '../../../modules/MGBasic/scripts/Logic/MGBasicEntrance': 'MGBasicEntrance',
                '../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../base/Log': 'Log',
                '../../config/LSKey': 'LSKey',
                '../../infoc/m_p2_Uaction': 'm_p2_Uaction',
                '../../libs/recommender.min': 'recommender.min',
                '../../upgrade/ToggleBean': 'ToggleBean',
                '../../upgrade/ToggleChecker': 'ToggleChecker',
                '../../util/PU': 'PU',
                '../../util/PageHeap': 'PageHeap',
                '../../util/Utility': 'Utility',
                '../Network/Protocol/StorageUtil': 'StorageUtil',
                '../looper/Looper': 'Looper',
                '../skin/FollowGiftsPrefab': 'FollowGiftsPrefab',
                './GameEntraScene/ImgCache': 'ImgCache',
                './GameEntraScene/PrefabMgr': 'PrefabMgr',
                './MGBGiftBoxWrapper': 'MGBGiftBoxWrapper',
            },
        ],
        MistakeBlockNode: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '7c904jbo5pDfKSPZsk5e744', 'MistakeBlockNode'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../loader/BlockSkinFrameLoader'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.createLayers = function () {
                                this.setPosition(this.mBlock.rect.x, this.mBlock.rect.y), this.setContentSize(this.mBlock.rect.width, this.mBlock.rect.height);
                                var e = o.default.getInstance().getMistakeBlockBackground();
                                (this.imageItem = e), (this.imageData = o.default.getInstance().getAtlas());
                            }),
                            (t.prototype.updateTouchState = function (e) {
                                this.opacity = e ? 0.2 : 1;
                            }),
                            t
                        );
                    })(e('./BlockNode').default);
                (i.default = n), cc._RF.pop();
            },
            {
                '../loader/BlockSkinFrameLoader': 'BlockSkinFrameLoader',
                './BlockNode': 'BlockNode',
            },
        ],
        MoneyBlockNode: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '76f47OGjN5OYLrDTHTUPH31', 'MoneyBlockNode'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../loader/GameSceneFrameLoader'),
                    n = (function (t) {
                        function e() {
                            return (null !== t && t.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.createLayers = function () {
                                t.prototype.createLayers.call(this);
                                var e = o.default.getInstance().getMoneyBlockBackground();
                                (this.imageItem = e), (this.imageData = o.default.getInstance().getAtlas());
                            }),
                            (e.prototype.updateTouchState = function (e) {
                                this.opacity = e ? 0.2 : 1;
                            }),
                            e
                        );
                    })(e('./BlockNode').default);
                (i.default = n), cc._RF.pop();
            },
            {
                '../loader/GameSceneFrameLoader': 'GameSceneFrameLoader',
                './BlockNode': 'BlockNode',
            },
        ],
        MoneySystem: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '11a63MVO+dCV4Jt4/dfIWmE', 'MoneySystem'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('./Plugin/PluginMgr'),
                    a = e('./Plugin/IPlugin'),
                    o = (function () {
                        function e() {}
                        return (
                            (e.costCoinToHp = function (e) {
                                var t = n.default.Ins().getPluginEx(a.default.Plugin_Economy),
                                    i = n.default.Ins().getPluginEx(a.default.Plugin_Energy);
                                if (t.getCurGold() < e) return !1;
                                var o = !0;
                                switch (e) {
                                    case 0:
                                        i.addEnergy(2);
                                        break;
                                    case 100:
                                        t.gainGold(-100), i.addEnergy(2);
                                        break;
                                    case 220:
                                        t.gainGold(-220), i.addEnergy(5);
                                        break;
                                    case 430:
                                        t.gainGold(-430), i.addEnergy(10);
                                        break;
                                    case 850:
                                        t.gainGold(-850), i.addEnergy(20);
                                        break;
                                    default:
                                        o = !1;
                                }
                                return o;
                            }),
                            (e.costDiamondToCoin = function (e) {
                                var t = !1,
                                    i = n.default.Ins().getPluginEx(a.default.Plugin_Economy);
                                switch (e) {
                                    case 1:
                                        i.costDiamond(1) && (i.gainGold(100), (t = !0));
                                        break;
                                    case 10:
                                        i.costDiamond(10) && (i.gainGold(1100), (t = !0));
                                        break;
                                    case 100:
                                        i.costDiamond(100) && (i.gainGold(12999), (t = !0));
                                }
                                return t;
                            }),
                            (e.increaseHp = function (e) {
                                isNaN(e) && (e = 0), n.default.Ins().getPluginEx(a.default.Plugin_Energy).addEnergy(e);
                            }),
                            (e.getHpCount = function () {
                                return n.default.Ins().getPluginEx(a.default.Plugin_Energy).getCurrentEnergy();
                            }),
                            (e.consumeHp = function (e) {
                                isNaN(e) && (e = 0);
                                var t = n.default.Ins().getPluginEx(a.default.Plugin_Energy);
                                return e <= t.getCurrentEnergy() && (t.decreaseEnergy(e), !0);
                            }),
                            (e.increaseGold = function (e) {
                                isNaN(e) && (e = 0), n.default.Ins().getPluginEx(a.default.Plugin_Economy).gainGold(e);
                            }),
                            (e.getGoldCount = function () {
                                return n.default.Ins().getPluginEx(a.default.Plugin_Economy).getCurGold();
                            }),
                            (e.consumeGold = function (e) {
                                if (e <= 0) throw new Error('count must bigger than 0.');
                                var t = n.default.Ins().getPluginEx(a.default.Plugin_Economy);
                                return e <= t.getCurGold() && (t.gainGold(-1 * e), !0);
                            }),
                            (e.increaseDiamond = function (e) {
                                isNaN(e) && (e = 0), n.default.Ins().getPluginEx(a.default.Plugin_Economy).addDiamond(e);
                            }),
                            (e.getDiamondCount = function () {
                                return n.default.Ins().getPluginEx(a.default.Plugin_Economy).getCurDiamond();
                            }),
                            (e.consumeDiamond = function (e) {
                                if (0 < e) {
                                    var t = n.default.Ins().getPluginEx(a.default.Plugin_Economy);
                                    return t.getCurDiamond() >= e && (t.costDiamond(e), !0);
                                }
                                return !0;
                            }),
                            e
                        );
                    })();
                (i.MoneySystem = o), cc._RF.pop();
            },
            {
                './Plugin/IPlugin': 'IPlugin',
                './Plugin/PluginMgr': 'PluginMgr',
            },
        ],
        MusicBeat: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'b7f68wfVapGR7HS6/n7SYJU', 'MusicBeat'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = function () {
                    (this.beatName = ''), (this.fileName = ''), (this.realPath = ''), (this.isStopMark = !1), (this.audioId = -1);
                };
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        MusicBlock: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '947b91X2GFCSqgjaqmcvNbd', 'MusicBlock'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./MusicDefines'),
                    n = (function () {
                        function e() {
                            (this.syllableRefs = []), (this.accompanySyllableRefs = []), (this.accompanyDelays = []), (this.mark = o.MUSICMARK.None), (this.duration = 0);
                        }
                        return (
                            (e.prototype.addSyllable = function (e) {
                                this.syllableRefs.push(e);
                            }),
                            (e.prototype.addAccompanySyllable = function (e, t) {
                                e.addAccDelay(t), e.setDelayFromParent(0);
                                var i = new o.AccompanyDelay();
                                (i.time = e.getAccDelay()), (i.isBass = e.getInstrument().isName('bass')), this.addaccompanyDelay(i), this.accompanySyllableRefs.push(e);
                            }),
                            (e.prototype.addAccompanySyllables = function (e, t) {
                                for (var i = 0; i < e.length; ++i) this.addAccompanySyllable(e[i], t);
                            }),
                            (e.prototype.setMark = function (e) {
                                this.mark = e;
                            }),
                            (e.prototype.getMark = function () {
                                return this.mark;
                            }),
                            (e.prototype.getBlockDuration = function () {
                                for (var e = 0, t = 0; t < this.syllableRefs.length; ++t) e += this.syllableRefs[t].getDuration();
                                return e;
                            }),
                            (e.prototype.GetAccompanyDelayTimes = function () {
                                return this.accompanyDelays;
                            }),
                            (e.prototype.playSingleSyllable = function (e, t) {
                                null != e && 0 <= t && t < this.syllableRefs.length && e.addSyllable(this.syllableRefs[t]);
                            }),
                            (e.prototype.playAllSyllablsInOrder = function (e) {
                                if (null != e)
                                    for (var t = 0, i = 0; i < this.syllableRefs.length; i++) {
                                        var o = this.syllableRefs[i];
                                        o.resetPlayData(), o.setStartTime(t), e.addSyllable(o), (t += o.getDuration());
                                    }
                            }),
                            (e.prototype.playAccompanySyllablsInOrder = function (e) {
                                if (null != e)
                                    for (var t = 0, i = 0; i < this.accompanySyllableRefs.length; i++) {
                                        var o = this.accompanySyllableRefs[i];
                                        o.setStartTime(t), (t += o.getDuration()), e.addSyllable(o);
                                    }
                            }),
                            (e.prototype.playAccompanySyllable = function (e, t) {
                                if (null != e)
                                    if (0 <= t && t < this.accompanyDelays.length)
                                        for (var i = this.accompanyDelays[t], o = 0; o < this.accompanySyllableRefs.length; o++) {
                                            (n = this.accompanySyllableRefs[o]).getAccDelay() == i.time && (n.resetPlayData(), (n.playState.gain = 1), e.addSyllable(n));
                                        }
                                    else if (-1 == t)
                                        for (o = 0; o < this.accompanySyllableRefs.length; o++) {
                                            var n;
                                            (n = this.accompanySyllableRefs[o]).setStartTime(n.getAccDelay()), (n.playState.gain = 1), e.addSyllable(n);
                                        }
                            }),
                            (e.prototype.addaccompanyDelay = function (e) {
                                for (var t = 0; t < this.accompanyDelays.length; t++) {
                                    if (e.time == this.accompanyDelays[t].time) return;
                                    if (e.time < this.accompanyDelays[t].time) return void this.accompanyDelays.splice(t, 0, e);
                                }
                                this.accompanyDelays.push(e);
                            }),
                            e
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                './MusicDefines': 'MusicDefines',
            },
        ],
        MusicCache: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '76d43HcHRdOFZ5Ry1h7W2Qu', 'MusicCache'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var c = e('./MusicParser'),
                    l = e('../base/G'),
                    u = e('../business/Logic/LevelMgr'),
                    o = (function () {
                        function e() {
                            this.musicCaches = [];
                        }
                        return (
                            (e.prototype.getMusic = function (e) {
                                for (var t = null, i = 0; i < this.musicCaches.length; ++i) {
                                    var o = this.musicCaches[i];
                                    o.getName() === e && (t = o);
                                }
                                return t;
                            }),
                            (e.prototype.loadMusic = function (e, t, i) {
                                var o = this.getMusic(t);
                                if (o) return o;
                                var n = null;
                                (n = l.G.Ap.config.debugPlayerIdCustomMusic ? null : e ? e.getMusicCells() : null), !l.G.Ap.config.debugPlayerIdCustomMusic && e && (u.LevelMgr.Ins().intMusicCells(e), (n = e.getMusicCells()));
                                var a = new c.MusicParserParam();
                                if (n)
                                    for (var r = 0; r < n.size(); ++r) {
                                        var s = n.get(r + 1);
                                        s && (a.bpm.push(s.BPM), a.basebeats.push(s.baseBeats));
                                    }
                                return (o = c.default.parseJson(t, i, a, l.G.Ap.sound.getInstrumentFactory())) && ((this.musicCaches = []), this.musicCaches.push(o)), o;
                            }),
                            e
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../base/G': 'G',
                '../business/Logic/LevelMgr': 'LevelMgr',
                './MusicParser': 'MusicParser',
            },
        ],
        MusicContext: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'b024aCQdz1L4bP8tGiJ3DFw', 'MusicContext'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./Adapter/QQMusicContext'),
                    n = e('./Adapter/WXMusicContext'),
                    a = (function () {
                        function e(e, t) {
                            (this.mIMusicContext = null), cc.sys.platform == cc.sys.QQ_PLAY ? (this.mIMusicContext = new o.default(e, t)) : cc.sys.platform === cc.sys.WECHAT_GAME && (this.mIMusicContext = new n.default(e));
                        }
                        return (
                            (e.prototype.getIndex = function () {
                                return this.mIMusicContext.getIndex();
                            }),
                            (e.prototype.getPath = function () {
                                return this.mIMusicContext.getPath();
                            }),
                            (e.prototype.play = function () {
                                this.mIMusicContext.play();
                            }),
                            (e.prototype.playA = function (e, t) {
                                this.mIMusicContext.playA(e, t);
                            }),
                            (e.prototype.playB = function (e, t) {
                                this.mIMusicContext.playB(e, t);
                            }),
                            (e.prototype.stop = function () {
                                this.mIMusicContext.stop();
                            }),
                            (e.prototype.pause = function () {
                                this.mIMusicContext.pause();
                            }),
                            (e.prototype.seek = function (e) {
                                this.mIMusicContext.seek(e);
                            }),
                            (e.prototype.getTimeStamp = function () {
                                return this.mIMusicContext.getTimeStamp();
                            }),
                            (e.prototype.isEnded = function () {
                                return this.mIMusicContext.isEnded();
                            }),
                            e
                        );
                    })();
                (i.default = a), cc._RF.pop();
            },
            {
                './Adapter/QQMusicContext': 'QQMusicContext',
                './Adapter/WXMusicContext': 'WXMusicContext',
            },
        ],
        MusicDefines: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '410b9aXKcROAohCdQJ4Q5LX', 'MusicDefines'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o,
                    n,
                    a,
                    r,
                    s = e('../util/runtime/ClassType'),
                    c = (function () {
                        function e() {}
                        return (e.durationStart = '['), (e.durationEnd = ']'), (e.groupStart = '<'), (e.groupEnd = '>'), (e.mixingStart = '('), (e.mixingEnd = ')'), e;
                    })();
                (i.FORMATSYMBOL = c), ((n = o = i.MUSICMARK || (i.MUSICMARK = {}))[(n.None = 0)] = 'None'), (n[(n.Normal = 1)] = 'Normal'), (n[(n.LongPress = 2)] = 'LongPress'), (n[(n.Craze = 3)] = 'Craze'), (n[(n.DoubleBlack = 5)] = 'DoubleBlack'), (n[(n.Accompaniment = 6)] = 'Accompaniment'), (n[(n.TiltAccompaniment = 7)] = 'TiltAccompaniment'), (n[(n.FixedTiltAccompaniment = 8)] = 'FixedTiltAccompaniment'), (n[(n.StopMark = 1024)] = 'StopMark'), ((r = a = i.SYLLABLEPLAYMETHOD || (i.SYLLABLEPLAYMETHOD = {}))[(r.StopMark = 1)] = 'StopMark'), (r[(r.Simple = 2)] = 'Simple'), (r[(r.Chord = 4)] = 'Chord'), (r[(r.Arpeggio = 8)] = 'Arpeggio'), (r[(r.Legato = 16)] = 'Legato'), (r[(r.Staccato = 32)] = 'Staccato'), (r[(r.Wave = 64)] = 'Wave'), (r[(r.Trill = 128)] = 'Trill'), (r[(r.Echo = 256)] = 'Echo'), (r[(r.LAppoggiatura = 512)] = 'LAppoggiatura'), (r[(r.SAppoggiatura = 1024)] = 'SAppoggiatura');
                var l = (function () {
                    function e() {}
                    return (
                        (e.contents = [
                            {
                                form: '1<',
                                mark: o.None,
                            },
                            {
                                form: '2<',
                                mark: o.LongPress,
                            },
                            {
                                form: '3<',
                                mark: o.Craze,
                            },
                            {
                                form: '5<',
                                mark: o.DoubleBlack,
                            },
                            {
                                form: '6<',
                                mark: o.Accompaniment,
                            },
                            {
                                form: '7<',
                                mark: o.TiltAccompaniment,
                            },
                            {
                                form: '8<',
                                mark: o.FixedTiltAccompaniment,
                            },
                        ]),
                        e
                    );
                })();
                i.GROUPFORM = l;
                var u = (function () {
                    function e() {}
                    return (
                        (e.contents = [
                            {
                                form: 'Q',
                                time: 256,
                            },
                            {
                                form: 'R',
                                time: 128,
                            },
                            {
                                form: 'S',
                                time: 64,
                            },
                            {
                                form: 'T',
                                time: 32,
                            },
                            {
                                form: 'U',
                                time: 16,
                            },
                            {
                                form: 'V',
                                time: 8,
                            },
                            {
                                form: 'W',
                                time: 4,
                            },
                            {
                                form: 'X',
                                time: 2,
                            },
                            {
                                form: 'Y',
                                time: 1,
                            },
                        ]),
                        e
                    );
                })();
                i.STOPFORM = u;
                var d = (function () {
                    function e() {}
                    return (
                        (e.contents = [
                            {
                                form: 'H',
                                time: 256,
                            },
                            {
                                form: 'I',
                                time: 128,
                            },
                            {
                                form: 'J',
                                time: 64,
                            },
                            {
                                form: 'K',
                                time: 32,
                            },
                            {
                                form: 'L',
                                time: 16,
                            },
                            {
                                form: 'M',
                                time: 8,
                            },
                            {
                                form: 'N',
                                time: 4,
                            },
                            {
                                form: 'O',
                                time: 2,
                            },
                            {
                                form: 'P',
                                time: 1,
                            },
                        ]),
                        e
                    );
                })();
                i.DURATIONFORM = d;
                var p = (function () {
                    function e() {}
                    return (e.content = '.~@&^$%!'), (e.reloveMethods = [a.Chord, a.Legato, a.Arpeggio, a.Wave, a.Trill, a.Echo, a.LAppoggiatura, a.SAppoggiatura]), e;
                })();
                i.BEATSPLIT = p;
                var h = function () {
                    (this.time = 0), (this.isBass = !1);
                };
                i.AccompanyDelay = h;
                var f,
                    m,
                    g = (function () {
                        function e() {}
                        return (e.contents = ['A-3', '#A-3', 'B-3', 'C-2', '#C-2', 'D-2', '#D-2', 'E-2', 'F-2', '#F-2', 'G-2', '#G-2', 'A-2', '#A-2', 'B-2', 'C-1', '#C-1', 'D-1', '#D-1', 'E-1', 'F-1', '#F-1', 'G-1', '#G-1', 'A-1', '#A-1', 'B-1', 'c', '#c', 'd', '#d', 'e', 'f', '#f', 'g', '#g', 'a', '#a', 'b', 'c1', '#c1', 'd1', '#d1', 'e1', 'f1', '#f1', 'g1', '#g1', 'a1', '#a1', 'b1', 'c2', '#c2', 'd2', '#d2', 'e2', 'f2', '#f2', 'g2', '#g2', 'a2', '#a2', 'b2', 'c3', '#c3', 'd3', '#d3', 'e3', 'f3', '#f3', 'g3', '#g3', 'a3', '#a3', 'b3', 'c4', '#c4', 'd4', '#d4', 'e4', 'f4', '#f4', 'g4', '#g4', 'a4', '#a4', 'b4', 'c5', 'mute']), e;
                    })();
                (i.BEATNAMES = g),
                    ((m = f = i.INTENSITY_TYPE || (i.INTENSITY_TYPE = {}))[(m.LOW = 0)] = 'LOW'),
                    (m[(m.MIDDLE = 1)] = 'MIDDLE'),
                    (m[(m.HIGH = 2)] = 'HIGH'),
                    s.Type.setMetadata(f, {
                        LOW: {
                            description: 'piano_low',
                        },
                        MIDDLE: {
                            description: 'piano',
                        },
                        HIGH: {
                            description: 'piano_high',
                        },
                    }),
                    cc._RF.pop();
            },
            {
                '../util/runtime/ClassType': 'ClassType',
            },
        ],
        MusicDownLoadPrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'edb15gNkZRNBbiBnVjfDYe7', 'MusicDownLoadPrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../UI/GameEntraScene/BasicTouchEvent'),
                    n = e('./MusicDownloadProcess'),
                    a = e('./MusicDownloadHandler'),
                    r = cc._decorator,
                    s = r.ccclass,
                    c = r.property,
                    l = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.downloadLabel = null), (e.cancelBtn = null), (e.progressbar = null), (e.unZiping = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.onLoad = function () {
                                this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                }),
                                    this.initEvent();
                            }),
                            (e.prototype.start = function () {
                                this.getComponent(cc.Animation).play('dowanloading_popup');
                            }),
                            (e.prototype.initEvent = function () {
                                var e = this,
                                    t = new o.default(function () {
                                        e.cancelClick();
                                    });
                                this.cancelBtn.node.on(cc.Node.EventType.TOUCH_END, t.click, t);
                            }),
                            (e.prototype.cancelClick = function () {
                                this.cancelCallback && this.cancelCallback();
                            }),
                            (e.prototype.setCancelCallback = function (e) {
                                this.cancelCallback = e;
                            }),
                            (e.prototype.setSuccessCallback = function (e) {
                                this.successCallback = e;
                            }),
                            (e.prototype.setFailCallback = function (e) {
                                this.failCallback = e;
                            }),
                            (e.prototype.update = function (e) {
                                var t = n.MusicDownloadProcess.Ins(),
                                    i = t.getProcess(),
                                    o = t.getDownloadStatus();
                                this.progressbar && 0 <= i && (this.progressbar.progress = i), (this.downloadLabel.string = '正在更新钢琴资源...' + Math.round(100 * i) + '%'), o === a.DOWNLOAD_STATUS.Success ? (!this.unZiping && t.unZipFile(), (this.unZiping = !0), 1 <= i && this.successCallback()) : o === a.DOWNLOAD_STATUS.Downloading || (o === a.DOWNLOAD_STATUS.Fail && this.failCallback());
                            }),
                            __decorate([c(cc.Label)], e.prototype, 'downloadLabel', void 0),
                            __decorate([c(cc.Button)], e.prototype, 'cancelBtn', void 0),
                            __decorate([c(cc.ProgressBar)], e.prototype, 'progressbar', void 0),
                            (e = __decorate([s], e))
                        );
                    })(cc.Component);
                (i.default = l), cc._RF.pop();
            },
            {
                '../UI/GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
                './MusicDownloadHandler': 'MusicDownloadHandler',
                './MusicDownloadProcess': 'MusicDownloadProcess',
            },
        ],
        MusicDownloadHandler: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '49992ceXVdITbpop6VIr+cc', 'MusicDownloadHandler'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o,
                    n,
                    a = e('../../gamescene/services/ServiceProvider'),
                    r = e('../../gamescene/workers/WorkerState'),
                    s = e('./MusicDownloadWorker'),
                    c = e('../../util/PU'),
                    l = e('../Network/Protocol/StorageUtil'),
                    u = e('../../config/LSKey'),
                    d = e('../../LogicPlatform/PlatformProxy'),
                    p = e('../../base/Log');
                ((n = o = i.DOWNLOAD_STATUS || (i.DOWNLOAD_STATUS = {}))[(n.Success = 0)] = 'Success'), (n[(n.Fail = 1)] = 'Fail'), (n[(n.Other = 2)] = 'Other'), (n[(n.Downloading = 3)] = 'Downloading');
                var h = (function () {
                    function e() {
                        (this.musicDownloadProvider = new a.ServiceProvider()), (this.musicDownloadWorker = null), (this.process = 0), (this.downloadStatus = null), (this.manager = null), (this.musicBean = null), (this.musicPianoPath = null), (this.needUpdate = null), (this.musicPianoExist = null);
                    }
                    return (
                        (e.prototype.startMusicDownload = function () {
                            var t = this;
                            if (!this.musicDownloadWorker || this.musicDownloadWorker.state !== r.WorkerState.running) {
                                this.musicDownloadProvider.register('MusicDownloadWorker', new s.default()), (this.musicDownloadWorker = this.musicDownloadProvider.resolve('MusicDownloadWorker')), (this.musicDownloadWorker.canPauseAndContinue = !0);
                                this.musicDownloadWorker.start(this, function (e) {
                                    (t.downloadStatus = e) === o.Fail && t.stopMusicDownload();
                                });
                            }
                        }),
                        (e.prototype.stopMusicDownload = function () {
                            this.musicDownloadWorker && this.musicDownloadWorker.stop();
                        }),
                        (e.prototype.isDownloadWorking = function () {
                            return this.musicDownloadWorker && this.musicDownloadWorker.state === r.WorkerState.running;
                        }),
                        (e.prototype.checkMusicPianoExist = function (i) {
                            var o = this;
                            try {
                                if (cc.sys.isBrowser) return;
                                this.isMusicPianoExist('/piano_high/a', function (t) {
                                    o.isMusicPianoExist('/piano_low/a', function (e) {
                                        (o.musicPianoExist = t && e), i && i(o.musicPianoExist), p.default.l('--- checkMusicPianoExist this.musicPianoExist ---' + o.musicPianoExist);
                                    });
                                });
                            } catch (e) {
                                (this.musicPianoExist = !1), i && i(!1), p.default.l('--- checkMusicPianoExist err ---' + e);
                            }
                        }),
                        (e.prototype.isMusicPianoExist = function (e, t) {
                            if (e) {
                                var i = c.default.getResourcePath('resources/music' + e + '.mp3');
                                try {
                                    d.default
                                        .Ins()
                                        .getFileSystemManager()
                                        .access({
                                            path: i,
                                            success: function (e) {
                                                p.default.i('--- isMusicPianoExist success result ---' + e), t(!!e);
                                            },
                                            fail: function (e) {
                                                p.default.i('--- isMusicPianoExist false ---'), t(!1);
                                            },
                                        });
                                } catch (e) {
                                    p.default.w('--- isMusicPianoExist err ---' + e), t(!1);
                                }
                            } else t(!1);
                        }),
                        (e.prototype.isUnzipFileExist = function (e, t) {
                            void 0 === e && (e = '');
                            try {
                                if (!e || '' === e) return void t(!1);
                                d.default
                                    .Ins()
                                    .getFileSystemManager()
                                    .access({
                                        path: e,
                                        success: function (e) {
                                            t(!!e), p.default.w('--- isUnzipFileExist success result ---');
                                        },
                                        fail: function (e) {
                                            t(!1), p.default.w('--- isUnzipFileExist fail false ---');
                                        },
                                    });
                            } catch (e) {
                                p.default.w('--- isUnzipFileExist err ---' + e), t(!1);
                            }
                        }),
                        (e.prototype.unZipFile = function () {
                            var e = this;
                            try {
                                if ((this.musicDownloadWorker && this.musicDownloadWorker.state !== r.WorkerState.running) || !this.musicBean) return;
                                this.manager.unZipFile(this.musicPianoPath).then(
                                    function () {
                                        p.default.w('--- 音乐piano解压 完毕 ---'), e.unzipFileSuccess();
                                    },
                                    function () {
                                        p.default.w('--- 音乐piano解压 失败 ---'), e.unzipFileFail();
                                    },
                                );
                            } catch (e) {
                                p.default.l('--- unZipFile err---' + e), this.unzipFileFail();
                            }
                        }),
                        (e.prototype.unzipFileSuccess = function () {
                            this.stopMusicDownload(), this.setNeedUpdateToCache('false'), (this.musicPianoExist = !0), (this.downloadStatus = o.Success);
                        }),
                        (e.prototype.unzipFileFail = function () {
                            var t = this;
                            this.checkMusicPianoExist(function (e) {
                                t.stopMusicDownload(), t.setNeedUpdateToCache('false'), (t.downloadStatus = o.Fail);
                            });
                        }),
                        (e.prototype.setManager = function (e) {
                            this.manager = e;
                        }),
                        (e.prototype.setMusicBean = function (e) {
                            this.musicBean = e;
                        }),
                        (e.prototype.setMusicPianoPath = function (e) {
                            this.musicPianoPath = e;
                        }),
                        (e.prototype.setProcess = function (e) {
                            this.process = e;
                        }),
                        (e.prototype.setNeedUpdate = function (e) {
                            (this.needUpdate = e) && this.setNeedUpdateToCache('true');
                        }),
                        (e.prototype.setNeedUpdateToCache = function (e) {
                            l.default.save(u.default.MUSIC_PIANO_NEED_UPDATE, e);
                        }),
                        (e.prototype.getNeedUpdate = function () {
                            return this.needUpdate;
                        }),
                        (e.prototype.getNeedUpdateFromCache = function () {
                            return 'true' === l.default.read(u.default.MUSIC_PIANO_NEED_UPDATE, 'false');
                        }),
                        (e.prototype.getProcess = function () {
                            return this.process;
                        }),
                        (e.prototype.getDownloadStatus = function () {
                            return this.downloadStatus;
                        }),
                        (e.prototype.getIsMusicPianoExist = function () {
                            return this.musicPianoExist;
                        }),
                        e
                    );
                })();
                (i.MusicDownloadHandler = h), cc._RF.pop();
            },
            {
                '../../LogicPlatform/PlatformProxy': 'PlatformProxy',
                '../../base/Log': 'Log',
                '../../config/LSKey': 'LSKey',
                '../../gamescene/services/ServiceProvider': 'ServiceProvider',
                '../../gamescene/workers/WorkerState': 'WorkerState',
                '../../util/PU': 'PU',
                '../Network/Protocol/StorageUtil': 'StorageUtil',
                './MusicDownloadWorker': 'MusicDownloadWorker',
            },
        ],
        MusicDownloadProcess: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '96dcc0qOsRLCJE0f5w5kic6', 'MusicDownloadProcess'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./MusicDownloadHandler'),
                    c = e('./MusicDownLoadPrefab'),
                    n = e('../UI/GameEntraScene/ToastPrefab'),
                    l = e('../../gamescene/GameSceneSetting'),
                    u = e('../UI/GameEntraScene/PrefabMgr'),
                    a = (function () {
                        function e() {
                            (this.musicDownloadHandler = null), (this.mList = []), (this.isLoading = !1), (this.musicDownloadHandler = new o.MusicDownloadHandler()), this.musicDownloadHandler.checkMusicPianoExist();
                        }
                        return (
                            (e.Ins = function () {
                                return this.mInstance || (this.mInstance = new e()), this.mInstance;
                            }),
                            (e.prototype.updateMusicPiano = function () {
                                var e = l.default.getInstance().getFromSource();
                                cc.sys.isBrowser || this.musicDownloadHandler.isDownloadWorking() || e === l.FromSource.SOURCE_GUIDE || this.musicDownloadHandler.startMusicDownload();
                            }),
                            (e.prototype.invokeDownloadCb = function (e) {
                                for (; this.mList && 0 < this.mList.length; ) {
                                    var t = this.mList.pop();
                                    t && t(e);
                                }
                                this.isLoading = !1;
                            }),
                            (e.prototype.showMusicDownloadingPopup = function (o, e) {
                                var n = this;
                                if ((this.mList.push(e), !this.isLoading)) {
                                    this.isLoading = !0;
                                    try {
                                        var t = l.default.getInstance().getFromSource(),
                                            i = this.musicDownloadHandler.getNeedUpdate(),
                                            a = this.musicDownloadHandler.getNeedUpdateFromCache(),
                                            r = this.musicDownloadHandler.getIsMusicPianoExist(),
                                            s = cc.sys.isBrowser;
                                        (i || a || !r) && !s && t !== l.FromSource.SOURCE_GUIDE && t != l.FromSource.SOURCE_RESULT_UPGRADE
                                            ? u.default.load('prefab/musicdownload/MusicDownLoading', function (e, t) {
                                                  var i = t.getComponent(c.default);
                                                  i.setCancelCallback(function () {
                                                      t.destroy(), n.musicDownloadHandler.stopMusicDownload(), n.invokeDownloadCb(!0);
                                                  }),
                                                      i.setSuccessCallback(function () {
                                                          t.destroy(), n.invokeDownloadCb(!0);
                                                      }),
                                                      i.setFailCallback(function () {
                                                          t.destroy(), n.invokeDownloadCb(!0);
                                                      }),
                                                      o.addChild(t),
                                                      console.log('--- showMusicDownloadingPopup loadRes success ---');
                                              })
                                            : this.invokeDownloadCb(!0);
                                    } catch (e) {
                                        console.log('--- showMusicDownloadingPopup err ---' + e), this.invokeDownloadCb(!0);
                                    }
                                }
                            }),
                            (e.prototype.showToast = function (i, o) {
                                u.default.load('prefab/ToastPrefab', function (e, t) {
                                    t.getComponent(n.default).showTips(i, function () {
                                        t.destroy();
                                    }),
                                        o.addChild(t);
                                });
                            }),
                            (e.prototype.unZipFile = function () {
                                this.musicDownloadHandler.isDownloadWorking() && this.musicDownloadHandler.unZipFile();
                            }),
                            (e.prototype.isMusicPianoExist = function () {
                                if (this.musicDownloadHandler) return this.musicDownloadHandler.getIsMusicPianoExist();
                            }),
                            (e.prototype.getProcess = function () {
                                return this.musicDownloadHandler.getProcess();
                            }),
                            (e.prototype.getDownloadStatus = function () {
                                return this.musicDownloadHandler.getDownloadStatus();
                            }),
                            e
                        );
                    })();
                (i.MusicDownloadProcess = a), cc._RF.pop();
            },
            {
                '../../gamescene/GameSceneSetting': 'GameSceneSetting',
                '../UI/GameEntraScene/PrefabMgr': 'PrefabMgr',
                '../UI/GameEntraScene/ToastPrefab': 'ToastPrefab',
                './MusicDownLoadPrefab': 'MusicDownLoadPrefab',
                './MusicDownloadHandler': 'MusicDownloadHandler',
            },
        ],
        MusicDownloadWorker: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '25cbewqyFZI+YNvsBvBjYSX', 'MusicDownloadWorker'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../gamescene/workers/WorkerBase'),
                    s = e('./MusicDownloadHandler'),
                    n = e('../../upgrade/CloudResMgr'),
                    c = e('../../config/LSKey'),
                    a = e('../Logic/NotifyEvent'),
                    r = e('../Logic/EventBus'),
                    l = e('../../upgrade/Downloader'),
                    u = e('../Network/Protocol/StorageUtil'),
                    d = (function (t) {
                        function e() {
                            var e = t.call(this, 'MusicDownloadWorker') || this;
                            return (e.musicDownloadHandler = null), (e.workCallback = null), (e.manager = null), (e.musicBean = null), (e.CLOUD_MUSIC_PIANO_URL = 'https://piano-weixin-game.cmcm.com/pianotiles2/cfg/musicpiano/music_config.json'), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.init = function (e, t) {
                                (this.musicDownloadHandler = e), (this.workCallback = t);
                            }),
                            (e.prototype.onStart = function () {
                                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                                try {
                                    if (e && e.length <= 0) return;
                                    console.log('--- onStart ---' + new Date().valueOf());
                                    var i = e[0],
                                        o = e[1];
                                    this.init(i, o), this.musicPianoWork();
                                } catch (e) {
                                    console.log('--- MusicDownloadWorker onStart err:---' + e);
                                }
                            }),
                            (e.prototype.onStop = function () {
                                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                                try {
                                    return this.musicDownloadHandler.setProcess(1), this.cancelMusicPianoWork(), this.reset(), void console.log('--- onStop ---' + new Date().valueOf());
                                } catch (e) {
                                    console.log('--- MusicDownloadWorker onStop err:---' + e);
                                }
                            }),
                            (e.prototype.musicPianoWork = function () {
                                (this.manager = new n.CloudResMgr('MusicPiano', c.default.MUSIC_PIANO, this.CLOUD_MUSIC_PIANO_URL)), this.manager.request(this.successCallback.bind(this), this.failCallback.bind(this)), r.default.register(a.default.LOADING_DOWNLOAD, this.downloadProcess, this), this.musicDownloadHandler.setManager(this.manager);
                            }),
                            (e.prototype.cancelMusicPianoWork = function () {
                                this.musicBean && l.default.Ins().cancelDownload(this.musicBean);
                            }),
                            (e.prototype.downloadProcess = function (e, t) {
                                if (t && 2 <= t.length && t[1] && 0 <= t[1] && t[1] <= 1) {
                                    var i = Math.min(t[1], 0.99);
                                    this.musicDownloadHandler.setProcess(i), 1 === i && console.log(new Date().valueOf());
                                }
                            }),
                            (e.prototype.successCallback = function () {
                                var o = this;
                                if (this.manager)
                                    try {
                                        var n = this.manager,
                                            a = n.getData(),
                                            r = u.default.read(c.default.MUSIC_PIANO_ZIP_PATH, '') || '';
                                        this.musicDownloadHandler.isUnzipFileExist(r, function (e) {
                                            if ((o.musicDownloadHandler.setMusicPianoPath(r), a && 0 < a.length)) {
                                                var t = a.filter(function (e) {
                                                    return 'music_piano' === e.type && 'music_config' === e.key;
                                                });
                                                if (t && 0 < t.length && t[0]) {
                                                    o.musicBean = t[0];
                                                    var i = o.musicBean.isNeedUpdate() || !e;
                                                    console.warn('--- successCallback needUpdate---' + i),
                                                        o.musicDownloadHandler.setMusicBean(o.musicBean),
                                                        o.musicDownloadHandler.setNeedUpdate(i),
                                                        o.musicBean && i
                                                            ? (n.download(o.musicBean, !0).then(function (e) {
                                                                  console.warn('--- 音乐piano更新完毕 path: ---' + e), (o.musicBean.localMd5 = o.musicBean.md5), (o.musicBean.localVer = o.musicBean.serverVer), n.saveData(), u.default.save(c.default.MUSIC_PIANO_ZIP_PATH, e), o.musicDownloadHandler.setMusicPianoPath(e), o.workCallback && o.workCallback(s.DOWNLOAD_STATUS.Success);
                                                              }),
                                                              o.workCallback && o.workCallback(s.DOWNLOAD_STATUS.Downloading))
                                                            : (o.musicDownloadHandler.setProcess(0.99), o.workCallback && o.workCallback(s.DOWNLOAD_STATUS.Success));
                                                }
                                            }
                                        });
                                    } catch (e) {
                                        console.log('---MusicDownloadWorker successCallback err---' + e);
                                    }
                            }),
                            (e.prototype.failCallback = function () {
                                console.warn('音乐piano更新失败'), this.workCallback && this.workCallback(s.DOWNLOAD_STATUS.Fail);
                            }),
                            (e.prototype.onStateChanged = function (e) {}),
                            (e.prototype.reset = function () {
                                (this.musicDownloadHandler = null), (this.workCallback = null), (this.manager = null), (this.musicBean = null), r.default.remove(a.default.LOADING_DOWNLOAD, this.downloadProcess, this);
                            }),
                            (e.prototype.onPause = function () {
                                console.log('--- MusicDownloadWorker onPause---');
                            }),
                            (e.prototype.onResume = function () {
                                console.log('--- MusicDownloadWorker onResume---');
                            }),
                            e
                        );
                    })(o.WorkerBase);
                (i.default = d), cc._RF.pop();
            },
            {
                '../../config/LSKey': 'LSKey',
                '../../gamescene/workers/WorkerBase': 'WorkerBase',
                '../../upgrade/CloudResMgr': 'CloudResMgr',
                '../../upgrade/Downloader': 'Downloader',
                '../Logic/EventBus': 'EventBus',
                '../Logic/NotifyEvent': 'NotifyEvent',
                '../Network/Protocol/StorageUtil': 'StorageUtil',
                './MusicDownloadHandler': 'MusicDownloadHandler',
            },
        ],
        MusicInstrument: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '20e2c4sz/NNkZj3u0d6gsT0', 'MusicInstrument'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./MusicBeat'),
                    n = e('./MusicDefines'),
                    a = e('../util/PU'),
                    r = (function () {
                        function e(e) {
                            (this.beats = []), (this.name = ''), (this.name = e);
                        }
                        return (
                            (e.prototype.getBeat = function (e) {
                                for (var t = 0; t < this.beats.length; ++t) if (e == this.beats[t].beatName) return this.beats[t];
                                return null;
                            }),
                            (e.prototype.makeUp = function () {
                                this.beats = [];
                                for (var e = 0; e < n.BEATNAMES.contents.length; ++e) {
                                    ((t = new o.default()).beatName = n.BEATNAMES.contents[e]), (t.fileName = 'resources/music/' + this.name + '/' + n.BEATNAMES.contents[e] + '.mp3'), (t.fileName = t.fileName.replace('#', '-35-')), (t.realPath = t.fileName), (t.isStopMark = !1), (t.audioId = e), this.beats.push(t);
                                }
                                for (e = 0; e < n.STOPFORM.contents.length; ++e) {
                                    var t;
                                    ((t = new o.default()).beatName = n.STOPFORM.contents[e].form), (t.fileName = 'resources/music/' + this.name + '/' + n.STOPFORM.contents[e].form + '.mp3'), (t.isStopMark = !0), this.beats.push(t);
                                }
                                this.resetMusicRealPath();
                            }),
                            (e.prototype.resetMusicRealPath = function () {
                                for (var e = 0, t = this.beats; e < t.length; e++) {
                                    var i = t[e],
                                        o = a.default.getResourcePath(i.fileName);
                                    i.realPath = o;
                                }
                            }),
                            (e.prototype.isName = function (e) {
                                return this.name === e;
                            }),
                            e
                        );
                    })();
                (i.default = r), cc._RF.pop();
            },
            {
                '../util/PU': 'PU',
                './MusicBeat': 'MusicBeat',
                './MusicDefines': 'MusicDefines',
            },
        ],
        MusicJsonData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'c1a5eIuTkdOtLrSDeSerpOG', 'MusicJsonData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.findMusic = function (e) {
                                return this.find('Id', e);
                            }),
                            (t.prototype.findMusicByRowID = function (e) {
                                if (-1 < e && e < this.mRowArr.length) {
                                    var t = new a();
                                    return (t.mRowData = this.mRowArr[e]), (t.mCsvFile = this), t;
                                }
                                return null;
                            }),
                            (t.prototype.findMusicBiany = function (e) {
                                var t = this.csvFindRowBiany('Id', e);
                                if (t) {
                                    var i = new a();
                                    return (i.mRowData = t), (i.mCsvFile = this), i;
                                }
                                return this.findMusic(e);
                            }),
                            (t.prototype.getRow = function () {
                                return new a();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.MusicJsonData = n;
                var a = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getId = function () {
                            return this.getInt('Id');
                        }),
                        (t.prototype.getMid = function () {
                            return this.getInt('Mid');
                        }),
                        (t.prototype.getBPM = function () {
                            return this.getInt('BPM');
                        }),
                        (t.prototype.getMusicJson = function () {
                            return this.getString('MusicJson');
                        }),
                        (t.prototype.getAniID = function () {
                            return this.getInt('AniID');
                        }),
                        (t.prototype.getBridgeAniID = function () {
                            return this.getInt('BridgeAniID');
                        }),
                        (t.prototype.getMusician = function () {
                            return this.getString('Musician');
                        }),
                        (t.prototype.getAcceleration = function () {
                            return this.getFloat('Acceleration');
                        }),
                        t
                    );
                })(o.default);
                (i.MusicJsonRow = a), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        MusicKeyData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '6de53fgUlZD8JVbGN0DVssA', 'MusicKeyData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.findMusicByMid = function (e) {
                                return this.find('Mid', e);
                            }),
                            (t.prototype.getAllMusic = function () {
                                return this.getAllDB();
                            }),
                            (t.prototype.getRow = function () {
                                return new a();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.MusicKeyData = n;
                var a = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getKid = function () {
                            return this.getInt('Kid');
                        }),
                        (t.prototype.getMid = function () {
                            return this.getInt('Mid');
                        }),
                        t
                    );
                })(o.default);
                (i.MusicKeyRow = a), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        MusicLevelDataLoader: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'c479armrDBLMouYDgCESns7', 'MusicLevelDataLoader'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var l = e('../Logic/ActivityManager'),
                    s = e('../Logic/Level'),
                    u = e('../Logic/LevelMgr'),
                    o = e('../Core/GameDefine'),
                    n = e('../DB/DBMgr'),
                    d = e('../Logic/PlayerMgr'),
                    p = e('../Logic/LangMgr'),
                    a = e('../../util/Dictionary'),
                    h = e('../../base/Log'),
                    f = e('./HotmusicActivityMgr'),
                    r = e('../../util/PU'),
                    c = (function () {
                        function c() {}
                        return (
                            (c.preload = function () {
                                var e = c.getMusicLevelId(),
                                    t = 1;
                                e.forEach(function (e) {
                                    c.mIndexMap.put(e, t++);
                                });
                                var i = l.default.getInstance().getChoicenessLevels(),
                                    o = 1;
                                i.forEach(function (e) {
                                    c.mIndexMap.put(e, o++);
                                });
                            }),
                            (c.getIndex = function (e) {
                                return c.sPreloadIndexMap || (c.preload(), (c.sPreloadIndexMap = !0)), this.mIndexMap.get(e);
                            }),
                            (c.getConsumeData = function (e) {
                                if (null == e || null == e) return null;
                                var t = n.default.Ins().getDBRow(n.eDataBase.eDB_LevelConsume, e + ''),
                                    i = null;
                                if (t) {
                                    var o = t;
                                    o && (((i = new g()).id = o.getID()), (i.mid = o.getMid()), (i.spendType = o.getSpendType()), (i.spendEnergy = o.getSpendEnergy()), (i.spendGold = o.getSpendGold()), (i.spendDiamond = o.getSpendDiamond()), (i.testType = o.getTestType()), (i.testEnergy = o.getTestEnergy()), (i.testGold = o.getTestGold()), (i.testDiamond = o.getTestDiamond()), (i.unlockActive = 1 == o.getUnlockActive()), (i.activeBeginTime = o.getActiveBeginTime()), (i.activeEndTime = o.getActiveEndTime()), (i.unlockCount = o.getUnlockCount()), (i.isNew = 1 == o.getIsNew()), (i.backgroundImg = o.getBackgroundImg()));
                                }
                                return i;
                            }),
                            (c.getItemInfoById = function (e) {
                                var t = u.LevelMgr.Ins().getLevel(e);
                                if (!t) return null;
                                var i = d.default.Ins().getLevelRecordByMid(t.music.mid),
                                    o = new m(),
                                    n = c.getConsumeData(t.music.mid);
                                if (((o.id = t.id), (o.level = t.needLv), (o.unlockType = t.levelUnlock), (o.isLocked = !i || i.isRecordLocked()), (o.musicId = t.music.mid), (o.index = c.getIndex(t.id)), (o.bestScore = i ? i.mBestScore : 0), (o.mGameComsume = n), (o.musicName = p.default.gIns().getLanguageByKey(t.music.musicName)), (o.musician = p.default.gIns().getLanguageByKey(t.music.musician)), (o.bestStar = i ? i.mBestStar : 0), o.unlockType.unlockType == s.eUnlockType.UNLOCK_TYPE_LV_TRY)) {
                                    o.isCrownLock = !0;
                                    var a = u.LevelMgr.Ins().getLevelInfo(t.id);
                                    (o.needStarNum = a.m_needCrown), (o.needCrownNum = a.m_needCrown2);
                                    var r = c.getTotalCrownByLv(t.needLv);
                                    (o.curTotalStarNum = r.star), (o.curTotalCrownNum = r.crown);
                                }
                                return o;
                            }),
                            (c.getItemInfoByMid = function (e) {
                                for (var t = l.default.getInstance().getAllLevels(), i = 0; i < t.length; ++i) {
                                    var o = c.getItemInfoById(t[i]);
                                    if (o && o.musicId === e) return o;
                                }
                                return h.default.e('[MusicLevelDataLoader.getItemInfoToMid] item is null'), null;
                            }),
                            (c.getAllItemInfo = function () {
                                for (var e = c.getMusicLevelId(), t = [], i = 0; i < e.length; ++i) {
                                    var o = c.getItemInfoById(e[i]);
                                    o && t.push(o);
                                }
                                return t;
                            }),
                            (c.getNormalMusicUnlockInfo = function (e) {
                                if (null != e) {
                                    for (var t = c.getAllItemInfo(), i = 0, o = t.length, n = 0; n < t.length; ++n) {
                                        var a = t[n];
                                        a && !a.isLocked && i++;
                                    }
                                    e(i, o);
                                }
                            }),
                            (c.getMusicLevelId = function () {
                                var i = [];
                                return (
                                    l.default
                                        .getInstance()
                                        .getShowLevels()
                                        .forEach(function (e) {
                                            var t = u.LevelMgr.Ins().getLevel(e);
                                            c.isLvUnLockMusic(t) && i.push(e);
                                        }),
                                    i
                                );
                            }),
                            (c.getNewSongCountInChoiceness = function () {
                                var e = c.getChoicenessAllItemInfo(),
                                    t = 0;
                                if (e)
                                    for (var i = 0; i < e.length; i++) {
                                        var o = e[i];
                                        o && o.mGameComsume && o.mGameComsume.isNew && t++;
                                    }
                                return t;
                            }),
                            (c.getChoicenessAllItemInfo = function () {
                                return r.default.isCM() ? this.doGetChoicenessOnCMPlay() : this.doGetChoicenessNormal();
                            }),
                            (c.doGetChoicenessNormal = function () {
                                for (
                                    var i = l.default.getInstance().getChoicenessLevels(),
                                        o = [],
                                        e = function (e) {
                                            var t = c.getItemInfoById(i[e]);
                                            if (t) {
                                                if (
                                                    0 <
                                                        n.mIgnoreMusicArray.filter(function (e) {
                                                            return e == t.musicId;
                                                        }).length &&
                                                    t.isLocked
                                                )
                                                    return 'continue';
                                                o.push(t);
                                            }
                                        },
                                        n = this,
                                        t = 0;
                                    t < i.length;
                                    ++t
                                )
                                    e(t);
                                return o;
                            }),
                            (c.doGetChoicenessOnCMPlay = function () {
                                for (
                                    var i = l.default.getInstance().getChoicenessLevels(),
                                        n = [],
                                        a = f.default.Ins().getTodayActivityMusic(),
                                        r = [],
                                        e = function (e) {
                                            var o = c.getItemInfoById(i[e]);
                                            if (o) {
                                                if (
                                                    0 <
                                                        s.mIgnoreMusicArray.filter(function (e) {
                                                            return e == o.musicId;
                                                        }).length &&
                                                    o.isLocked
                                                )
                                                    return 'continue';
                                                var t = a.find(function (e, t, i) {
                                                    return e && e.mid == o.musicId;
                                                });
                                                t && o.mGameComsume ? ((o.mGameComsume.activeBeginTime = t.start), (o.mGameComsume.activeEndTime = t.end), (o.mGameComsume.unlockActive = !0), r.push(o)) : (o.mGameComsume && (o.mGameComsume.unlockActive = !1), n.push(o));
                                            }
                                        },
                                        s = this,
                                        t = 0;
                                    t < i.length;
                                    ++t
                                )
                                    e(t);
                                return (
                                    (r = r.sort(function (t, i) {
                                        return (
                                            a.findIndex(function (e) {
                                                return e.mid == t.musicId;
                                            }) -
                                            a.findIndex(function (e) {
                                                return e.mid == i.musicId;
                                            })
                                        );
                                    })),
                                    (n = r.concat(n))
                                );
                            }),
                            (c.getNewChoiceness = function (e) {
                                void 0 === e && (e = 3);
                                var t = c.getChoicenessAllItemInfo(),
                                    i = [];
                                if (t)
                                    for (var o = 0; o < t.length; o++) {
                                        var n = t[o];
                                        if (n && n.mGameComsume && n.mGameComsume.isNew && (i.push(n), i.length >= e)) break;
                                    }
                                return i;
                            }),
                            (c.getValidActiveInfo = function (e, t) {
                                void 0 === t && (t = 3), t <= 0 && (t = 3);
                                var i = c.getChoicenessAllItemInfo(),
                                    o = [];
                                if (i)
                                    for (var n = 0; n < i.length; n++) {
                                        var a = i[n];
                                        if (a && a.mGameComsume && a.mGameComsume.isActive(e) && (o.push(a), o.length >= t)) break;
                                    }
                                return o;
                            }),
                            (c.getMusicLevel = function () {
                                var i = [];
                                return (
                                    l.default
                                        .getInstance()
                                        .getShowLevels()
                                        .forEach(function (e) {
                                            var t = u.LevelMgr.Ins().getLevel(e);
                                            c.isLvUnLockMusic(t) && i.push(t);
                                        }),
                                    i
                                );
                            }),
                            (c.getAllMusiclLevels = function () {
                                var i = [];
                                return (
                                    l.default
                                        .getInstance()
                                        .getAllLevels()
                                        .forEach(function (e) {
                                            var t = u.LevelMgr.Ins().getLevel(e);
                                            t && i.push(t);
                                        }),
                                    i
                                );
                            }),
                            (c.getMusicLevelsByLv = function (e) {
                                var t = [];
                                return (
                                    u.LevelMgr.Ins()
                                        .getLevelByNeedLv(e)
                                        .forEach(function (e) {
                                            c.isLvUnLockMusic(e) && t.push(e);
                                        }),
                                    t
                                );
                            }),
                            (c.getHomePageItemInfo = function () {
                                var i,
                                    e = new m(),
                                    o = d.default.Ins(),
                                    t = o.getUserLevel(),
                                    n = u.LevelMgr.Ins().getLevelByNeedLv(t),
                                    a = 0,
                                    r = null;
                                return (
                                    n &&
                                        n.forEach(function (e) {
                                            if (c.isLvUnLockMusic(e)) {
                                                var t = o.getLevelRecordByMid(e.music.mid);
                                                t && !t.isRecordLocked() && (r ? t.mBestScore < a && ((a = t.mBestScore), (r = t), (i = e)) : ((a = t.mBestScore), (r = t), (i = e)));
                                            }
                                        }),
                                    r || (h.default.e('[MusicLevelDataLoader] getHomePageItemInfo find minLevelRecord error'), (i = u.LevelMgr.Ins().getLevel(1)), (r = o.getLevelRecordByMid(i.music.mid))),
                                    c.setItemInfo(e, i, r),
                                    e
                                );
                            }),
                            (c.setItemInfo = function (e, t, i) {
                                (e.id = t.id), (e.level = t.needLv), (e.unlockType = t.levelUnlock), (e.musicId = t.music.mid), (e.index = c.getIndex(t.id)), (e.musicName = p.default.gIns().getLanguageByKey(t.music.musicName)), (e.musician = p.default.gIns().getLanguageByKey(t.music.musician)), i && ((e.isLocked = i.isRecordLocked()), (e.bestStar = i.mBestStar));
                            }),
                            (c.getItemInfoByNeedLv = function (e) {
                                var i = [];
                                return (
                                    u.LevelMgr.Ins()
                                        .getLevelByNeedLv(e)
                                        .forEach(function (e) {
                                            if (c.isLvUnLockMusic(e)) {
                                                var t = c.getItemInfoById(e.id);
                                                i.push(t);
                                            }
                                        }),
                                    i
                                );
                            }),
                            (c.isLvUnLockMusic = function (e) {
                                return !(!e || e.type != s.eLevelKind.eLevel_Normal || (e.levelUnlock.unlockType != s.eUnlockType.UNLOCK_TYPE_LV && e.levelUnlock.unlockType != s.eUnlockType.UNLOCK_TYPE_LV_TRY) || !(e.id < o.Constant.DIAMONDSONG_STARTID));
                            }),
                            (c.isLastLv = function (e) {
                                return (
                                    -1 ==
                                    n.default
                                        .Ins()
                                        .getDBRow(n.eDataBase.eDB_Lv, e + '')
                                        .getExp()
                                );
                            }),
                            (c.getNextLvGold = function (e) {
                                var t = e + 1,
                                    i = n.default.Ins().getDBRow(n.eDataBase.eDB_Lv, t + '');
                                return i ? i.getRewarGold() : 0;
                            }),
                            (c.getNextLvUnLockMusic = function (e) {
                                var t = e + 1,
                                    i = [];
                                return (
                                    u.LevelMgr.Ins()
                                        .getLevelByNeedLv(t)
                                        .forEach(function (e) {
                                            if (c.isLvUnLockMusic(e) && e.levelUnlock.unlockType != s.eUnlockType.UNLOCK_TYPE_LV_TRY) {
                                                var t = new m();
                                                c.setItemInfo(t, e), i.push(t);
                                            }
                                        }),
                                    i
                                );
                            }),
                            (c.getNextLevel = function (e) {
                                for (var t = null, i = !1, o = l.default.getInstance().getShowLevels(), n = 0; n < o.length; ++n)
                                    if (i || e != o[n]) {
                                        if (i) {
                                            var a = u.LevelMgr.Ins().getLevel(o[n]);
                                            if (c.isLvUnLockMusic(a)) {
                                                t = a;
                                                break;
                                            }
                                        }
                                    } else i = !0;
                                return t;
                            }),
                            (c.getTotalCrownByLv = function (e) {
                                var t = c.getMusicLevelsByLv(e),
                                    i = 0,
                                    o = 0;
                                return (
                                    t.forEach(function (e) {
                                        if (e.levelUnlock.unlockType == s.eUnlockType.UNLOCK_TYPE_LV) {
                                            var t = d.default.Ins().getLevelRecord(e.id);
                                            t && !t.isRecordLocked() && (3 < t.mBestStar ? ((i += 3), (o += t.mBestStar - 3)) : (i += t.mBestStar));
                                        }
                                    }),
                                    {
                                        star: i,
                                        crown: o,
                                    }
                                );
                            }),
                            (c.getUnlockItemInfo = function () {
                                for (var e = c.getMusicLevelId(), t = [], i = 0; i < e.length; ++i) {
                                    var o = c.getItemInfoById(e[i]);
                                    o && !o.isLocked && t.push(o);
                                }
                                return t;
                            }),
                            (c.mIndexMap = new a.Dictionary()),
                            (c.sPreloadIndexMap = !1),
                            (c.mIgnoreMusicArray = [400009, 400028, 400020, 400026, 400027]),
                            c
                        );
                    })();
                i.MusicLevelDataLoader = c;
                var m = function () {
                    (this.id = 0), (this.level = 0), (this.index = 0), (this.isLocked = !1), (this.isCrownLock = !1), (this.needStarNum = 0), (this.needCrownNum = 0), (this.curTotalStarNum = 0), (this.curTotalCrownNum = 0), (this.bestScore = 0), (this.musicId = 0), (this.musicName = ''), (this.musician = ''), (this.bestStar = 0), (this.mGameComsume = null);
                };
                i.ItemInfo = m;
                var g = (function () {
                    function e() {
                        (this.id = 0), (this.mid = 0), (this.spendType = e.SPENDTYPE_DEFAULT), (this.spendEnergy = 0), (this.spendGold = 0), (this.spendDiamond = 0), (this.testType = e.TESTTYPE_DEFAULT), (this.testEnergy = 0), (this.testGold = 0), (this.testDiamond = 0), (this.unlockActive = !1), (this.activeBeginTime = 0), (this.activeEndTime = 0), (this.unlockCount = 0), (this.isNew = !1), (this.backgroundImg = '');
                    }
                    return (
                        (e.prototype.isActive = function (e) {
                            return !!r.default.isCM() || (!!this.unlockActive && this.activeBeginTime <= e && e < this.activeEndTime);
                        }),
                        (e.prototype.isPlayConsumeGameProps = function () {
                            return this.spendType == e.SPENDTYPE_ENERGY || this.spendType == e.SPENDTYPE_GOLD || this.spendType == e.SPENDTYPE_DIAMOND;
                        }),
                        (e.prototype.isTestConsumeGameProps = function () {
                            return this.testType == e.TESTTYPE_ENERGY || this.testType == e.TESTTYPE_GOLD || this.testType == e.TESTTYPE_DIAMOND;
                        }),
                        (e.SPENDTYPE_DEFAULT = 0),
                        (e.SPENDTYPE_ENERGY = 3),
                        (e.SPENDTYPE_GOLD = 4),
                        (e.SPENDTYPE_DIAMOND = 5),
                        (e.TESTTYPE_ENERGY = 3),
                        (e.TESTTYPE_GOLD = 4),
                        (e.TESTTYPE_DIAMOND = 5),
                        (e.TESTTYPE_DEFAULT = 0),
                        e
                    );
                })();
                (i.GameConsume = g), cc._RF.pop();
            },
            {
                '../../base/Log': 'Log',
                '../../util/Dictionary': 'Dictionary',
                '../../util/PU': 'PU',
                '../Core/GameDefine': 'GameDefine',
                '../DB/DBMgr': 'DBMgr',
                '../Logic/ActivityManager': 'ActivityManager',
                '../Logic/LangMgr': 'LangMgr',
                '../Logic/Level': 'Level',
                '../Logic/LevelMgr': 'LevelMgr',
                '../Logic/PlayerMgr': 'PlayerMgr',
                './HotmusicActivityMgr': 'HotmusicActivityMgr',
            },
        ],
        MusicLibraryManager: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '3506abbYJhDP6uHXSw62UTP', 'MusicLibraryManager'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./HotMusicListCtrl'),
                    n = e('../BasicTouchEvent'),
                    r = e('./LevelMusicListCtrl'),
                    s = e('../ImgCache'),
                    c = e('../../../../util/SUtil'),
                    l = e('../../../Network/Protocol/StorageUtil'),
                    u = e('../../../../config/LSKey'),
                    d = e('../../MusicLevelDataLoader'),
                    p = e('./InviteUnlockMusicCountdownUtil'),
                    h = e('../../../Logic/EventBus'),
                    f = e('../../../Logic/NotifyEvent'),
                    m = e('../../../../infoc/m_p2_Uaction'),
                    g = e('../../../../util/Delay'),
                    _ = e('../../../../util/PU'),
                    y = e('../../../keypad/KeypadNavigator'),
                    a = cc._decorator,
                    S = a.ccclass,
                    v = a.property,
                    I = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mUnSelectBg1 = null), (e.mUnSelectBg2 = null), (e.mLevelMusicLibBtn = null), (e.mHotMusicLibBtn = null), (e.mRankTabBtn = null), (e.mLevelMusicTabTouchCallback = null), (e.mHotMusicTabTouchCallback = null), (e.mRankTabTouchCallback = null), (e.mBackBtnClickCallback = null), (e.mToVipPageCallback = null), (e.mToVipCallback = null), (e.mCloseCallback = null), (e.mOnLoadCallback = null), (e.mLevelMusicList = null), (e.mHotMusicList = null), (e.mRankPageNode = null), (e.mTabNode = null), (e.mTabBg = null), (e.mNewCountLabel = null), (e.mRedSpotSprite = null), (e.mBackBtn = null), (e.mVipPanel = null), (e.mVipUnlockNode = null), (e.mVipUnlockBtn = null), (e.mVipEightSaleBanner = null), (e.mLevelMusicListCtrl = null), (e.mHotMusicListCtrl = null), (e.mDialogMgr = null), (e.mPageIndex = a.NONE_INDEX), (e.currHotTab = void 0), e;
                        }
                        var a;
                        return (
                            __extends(e, t),
                            ((a = e).prototype.onLoad = function () {
                                var e = this;
                                Date.now();
                                this.initVipBanner(),
                                    _.default.isCM() && ((this.mRankTabBtn.node.active = !1), (this.mUnSelectBg2.node.active = !1)),
                                    (this.mTabNode.active = !1),
                                    this.initialize(),
                                    this.initEvents(),
                                    this.hideAfterLoad(),
                                    this.adaptorUI(),
                                    h.default.register(f.default.BUY_VIP_SUCCESS_NOTIFICATION, this.initVipBanner, this),
                                    h.default.register(f.default.NOTIFY_MUSIC_LIBRARY_UPDATE, this.notifyDataChange, this),
                                    g.Delay.wait(10).then(function () {
                                        cc.isValid(e.node) && e.mOnLoadCallback && e.mOnLoadCallback();
                                    }),
                                    g.Delay.wait(10).then(function () {
                                        cc.isValid(e.node) && e.initVipBanner();
                                    });
                            }),
                            (e.prototype.start = function () {}),
                            (e.prototype.notifyDataChange = function (e, t) {
                                var i = t[0];
                                this.onShow(i);
                            }),
                            (e.prototype.initVipBanner = function () {
                                var i = this;
                                if (this.mPageIndex != a.NONE_INDEX)
                                    if (this.mPageIndex != a.RANK_INDEX) {
                                        var e = null,
                                            t = null,
                                            o = null,
                                            n = null;
                                        this.mVipPanel.active = !1;
                                        if (_.default.isIOS()) this.mPageIndex == a.LEVEL_MUSIC_LIB_INDEX ? ((this.mVipPanel.active = !1), c.SUtil.ins().isQuanMian() ? ((this.mLevelMusicList.height = c.SUtil.ins().mScreenHeight - 106), c.SUtil.ins().toTopByPx(this.mLevelMusicList, 106)) : c.SUtil.ins().isLiuHai() ? ((this.mLevelMusicList.height = c.SUtil.ins().mScreenHeight - 172), c.SUtil.ins().toTopByPx(this.mLevelMusicList, 172)) : c.SUtil.ins().isPuTong() && ((this.mLevelMusicList.height = c.SUtil.ins().mScreenHeight - 106), c.SUtil.ins().toTopByPx(this.mLevelMusicList, 106)), this.updateWidget(this.mLevelMusicList), this.updateChild(!1)) : this.mPageIndex == a.HOT_MUSIC_LIB_INDEX && ((this.mVipPanel.active = !1), (this.mHotMusicList.y = -103), c.SUtil.ins().isQuanMian() ? ((this.mHotMusicList.height = c.SUtil.ins().mScreenHeight - 206), c.SUtil.ins().toTopByPx(this.mHotMusicList, 206)) : c.SUtil.ins().isLiuHai() ? ((this.mHotMusicList.height = c.SUtil.ins().mScreenHeight - 272), c.SUtil.ins().toTopByPx(this.mHotMusicList, 272)) : c.SUtil.ins().isPuTong() && ((this.mHotMusicList.height = c.SUtil.ins().mScreenHeight - 206), c.SUtil.ins().toTopByPx(this.mHotMusicList, 206)), this.updateChild(!0), this.updateWidget(this.mHotMusicList));
                                        else if (this.mPageIndex == a.LEVEL_MUSIC_LIB_INDEX) {
                                            if (_.default.isCM()) {
                                                this.mVipPanel.active = !1;
                                                this.mLevelMusicList.getPosition().x;
                                                c.SUtil.ins().isQuanMian() ? ((this.mLevelMusicList.height = c.SUtil.ins().mScreenHeight - 106), c.SUtil.ins().toTopByPx(this.mLevelMusicList, 106)) : c.SUtil.ins().isLiuHai() ? ((this.mLevelMusicList.height = c.SUtil.ins().mScreenHeight - 172), c.SUtil.ins().toTopByPx(this.mLevelMusicList, 172)) : c.SUtil.ins().isPuTong() && ((this.mLevelMusicList.height = c.SUtil.ins().mScreenHeight - 106), c.SUtil.ins().toTopByPx(this.mLevelMusicList, 106));
                                            } else (this.mVipPanel.active = !0), (this.mVipEightSaleBanner.node.active = !1), (this.mVipUnlockNode.node.active = !0), (t = '/musiclist/vip_unlock_level_btn'), (o = '/musiclist/vip_unlock_btn'), (n = '/musiclist/vip_unlock_btn_press'), c.SUtil.ins().isQuanMian() ? ((this.mLevelMusicList.height = c.SUtil.ins().mScreenHeight - 330), c.SUtil.ins().toTopByPx(this.mLevelMusicList, 330)) : c.SUtil.ins().isLiuHai() ? ((this.mLevelMusicList.height = c.SUtil.ins().mScreenHeight - 403), c.SUtil.ins().toTopByPx(this.mLevelMusicList, 403), c.SUtil.ins().toTopByPx(this.mVipPanel, 259)) : c.SUtil.ins().isPuTong() && ((this.mLevelMusicList.height = c.SUtil.ins().mScreenHeight - 330), c.SUtil.ins().toTopByPx(this.mLevelMusicList, 330)), m.default.report(0, m.default.ACTION_SHOW_NORMAL_MUSIC_UNLOCK_ALL);
                                            this.updateChild(!1), this.updateWidget(this.mLevelMusicList);
                                        } else this.mPageIndex == a.HOT_MUSIC_LIB_INDEX && (_.default.isCM() ? ((this.mVipPanel.active = !1), (this.mHotMusicList.y = -103), c.SUtil.ins().isQuanMian() ? ((this.mHotMusicList.height = c.SUtil.ins().mScreenHeight - 206), c.SUtil.ins().toTopByPx(this.mHotMusicList, 206)) : c.SUtil.ins().isLiuHai() ? ((this.mHotMusicList.height = c.SUtil.ins().mScreenHeight - 272), c.SUtil.ins().toTopByPx(this.mHotMusicList, 272)) : c.SUtil.ins().isPuTong() && ((this.mHotMusicList.height = c.SUtil.ins().mScreenHeight - 206), c.SUtil.ins().toTopByPx(this.mHotMusicList, 206))) : ((this.mVipPanel.active = !0), (this.mVipEightSaleBanner.node.active = !1), (this.mVipUnlockNode.node.active = !0), (t = '/musiclist/vip_unlock_hot_btn'), (o = '/musiclist/vip_youhui_btn'), (n = '/musiclist/vip_youhui_btn_press'), c.SUtil.ins().isQuanMian() ? ((this.mHotMusicList.height = c.SUtil.ins().mScreenHeight - 330), c.SUtil.ins().toTopByPx(this.mHotMusicList, 330)) : c.SUtil.ins().isLiuHai() ? (c.SUtil.ins().toTopByPx(this.mVipPanel, 259), (this.mHotMusicList.height = c.SUtil.ins().mScreenHeight - 403), c.SUtil.ins().toTopByPx(this.mHotMusicList, 403)) : c.SUtil.ins().isPuTong() && ((this.mHotMusicList.height = c.SUtil.ins().mScreenHeight - 330), c.SUtil.ins().toTopByPx(this.mHotMusicList, 330)), m.default.report(0, m.default.ACTION_SHOW_HOT_MUSIC_SALE_ALL)), this.updateChild(!0), this.updateWidget(this.mHotMusicList));
                                        null != e &&
                                            s.default.get(e, function (e, t) {
                                                cc.isValid(i.node) && (i.mVipEightSaleBanner.spriteFrame = t);
                                            }),
                                            null != t &&
                                                s.default.get(t, function (e, t) {
                                                    cc.isValid(i.node) && (i.mVipUnlockNode.spriteFrame = t);
                                                }),
                                            o &&
                                                s.default.get(o, function (e, t) {
                                                    cc.isValid(i.node) && (i.mVipUnlockBtn.normalSprite = t);
                                                }),
                                            n &&
                                                s.default.get(n, function (e, t) {
                                                    cc.isValid(i.node) && (i.mVipUnlockBtn.pressedSprite = t);
                                                });
                                    } else this.mVipPanel.active = !1;
                            }),
                            (e.prototype.updateWidget = function (e) {
                                e.getComponent(cc.Widget).updateAlignment();
                            }),
                            (e.prototype.updateChild = function (e) {
                                var t;
                                (t = e ? this.mHotMusicList.getChildByName('HotMusicScrollView') : this.mLevelMusicList.getChildByName('LevelMusicScrollView')), c.SUtil.ins().toTopByPx(t, 0), c.SUtil.ins().toBottomByPx(t, 0), this.updateWidget(t);
                                var i = t.getChildByName('view');
                                c.SUtil.ins().toTopByPx(i, 0), c.SUtil.ins().toBottomByPx(i, 0), this.updateWidget(i);
                            }),
                            (e.prototype.setHideAfterLoad = function (e) {
                                this.mHideAfterLoad = e;
                            }),
                            (e.prototype.setCloseCallback = function (e) {
                                this.mCloseCallback = e;
                            }),
                            (e.prototype.setOnLoadCallback = function (e) {
                                this.mOnLoadCallback = e;
                            }),
                            (e.prototype.initEvents = function () {
                                var e = this;
                                (this.mLevelMusicTabTouchCallback = new n.default(function () {
                                    e.changePage(a.LEVEL_MUSIC_LIB_INDEX),
                                        s.default.get(
                                            '/musiclist/level_lib_tab_bg',
                                            function (e, t) {
                                                cc.isValid(this.node) && (this.mTabBg.spriteFrame = t);
                                            }.bind(e),
                                        ),
                                        (e.mUnSelectBg1.node.x = 0);
                                })),
                                    this.mLevelMusicLibBtn.node.on(cc.Node.EventType.TOUCH_END, this.mLevelMusicTabTouchCallback.click, this.mLevelMusicTabTouchCallback),
                                    (this.mBackBtnClickCallback = new n.default(function () {
                                        e.mLevelMusicListCtrl.rememberScrollPosition(), e.mHotMusicListCtrl.rememberScrollPosition(), e.mCloseCallback && e.mCloseCallback(), e.hideNavigator();
                                    })),
                                    this.mBackBtn.node.on(cc.Node.EventType.TOUCH_END, this.mBackBtnClickCallback.click, this.mBackBtnClickCallback);
                            }),
                            (e.prototype.setToVipCallback = function (e) {
                                this.mToVipCallback = e;
                            }),
                            (e.prototype.initialize = function () {
                                if (((this.mLevelMusicListCtrl = this.mLevelMusicList.getComponent(r.default)), (this.mHotMusicListCtrl = this.mHotMusicList.getComponent(o.default)), l.default.read(u.default.HAS_SHOW_MUSIC_RED_SPOT))) this.mRedSpotSprite.node.active = !1;
                                else {
                                    var e = d.MusicLevelDataLoader.getNewSongCountInChoiceness();
                                    0 < e ? ((this.mNewCountLabel.string = e + ''), (this.mRedSpotSprite.node.active = !0)) : (this.mRedSpotSprite.node.active = !1);
                                }
                            }),
                            (e.prototype.hideRedIcon = function () {
                                this.mRedSpotSprite.node.active = !1;
                            }),
                            (e.prototype.showNavigator = function (e) {
                                if (this.currHotTab != e) {
                                    (this.currHotTab = e), console.log('MusicLibraryManager::showNavigator => currHotTab: ' + this.currHotTab);
                                    var t = this.currHotTab ? 'MusicLibraryPrefabHot' : 'MusicLibraryPrefabLevel';
                                    y.default.getInstance().pushDialog(this.node, t);
                                }
                            }),
                            (e.prototype.hideNavigator = function () {
                                if (null != this.currHotTab) {
                                    (this.currHotTab = void 0), console.log('MusicLibraryManager::hideNavigator =>');
                                    var e = this.currHotTab ? 'MusicLibraryPrefabHot' : 'MusicLibraryPrefabLevel';
                                    y.default.getInstance().popDialog(this.node, e);
                                }
                            }),
                            (e.prototype.setTabBg = function (e) {
                                (this.mPageIndex = e) == a.LEVEL_MUSIC_LIB_INDEX
                                    ? (s.default.get(
                                          '/musiclist/level_lib_tab_bg',
                                          function (e, t) {
                                              cc.isValid(this.node) && (this.mTabBg.spriteFrame = t);
                                          }.bind(this),
                                      ),
                                      (this.mUnSelectBg1.node.x = 0))
                                    : e == a.HOT_MUSIC_LIB_INDEX
                                    ? (s.default.get(
                                          '/musiclist/hot_lib_tab_bg',
                                          function (e, t) {
                                              cc.isValid(this.node) && (this.mTabBg.spriteFrame = t);
                                          }.bind(this),
                                      ),
                                      (this.mUnSelectBg1.node.x = -234))
                                    : e == a.RANK_INDEX &&
                                      (s.default.get(
                                          '/musiclist/rank_tab_bg',
                                          function (e, t) {
                                              cc.isValid(this.node) && (this.mTabBg.spriteFrame = t);
                                          }.bind(this),
                                      ),
                                      (this.mUnSelectBg1.node.x = 0));
                            }),
                            (e.prototype.changePage = function (e) {
                                this.mPageIndex != e && ((this.mPageIndex = e), this.mPageIndex == a.LEVEL_MUSIC_LIB_INDEX ? (c.SUtil.ins().toLeftByPx(this.mLevelMusicList, 0), c.SUtil.ins().toLeftByPx(this.mHotMusicList, -1e4), c.SUtil.ins().toLeftByPx(this.mRankPageNode, -1e4), (this.mLevelMusicList.active = !0), (this.mHotMusicList.active = !1), (this.mRankPageNode.active = !1), this.mLevelMusicListCtrl.onShow(), this.mHotMusicListCtrl.onHide()) : this.mPageIndex == a.HOT_MUSIC_LIB_INDEX ? (c.SUtil.ins().toLeftByPx(this.mLevelMusicList, -2e4), c.SUtil.ins().toLeftByPx(this.mHotMusicList, 0), c.SUtil.ins().toLeftByPx(this.mRankPageNode, -2e4), (this.mLevelMusicList.active = !1), (this.mHotMusicList.active = !0), (this.mRankPageNode.active = !1), this.mLevelMusicListCtrl.onHide(), this.mHotMusicListCtrl.onShow(), h.default.fire(f.default.INVITE_CHECK_ACTIVITY_SONG)) : this.mPageIndex == a.RANK_INDEX && (c.SUtil.ins().toLeftByPx(this.mLevelMusicList, -2e4), c.SUtil.ins().toLeftByPx(this.mHotMusicList, -2e4), c.SUtil.ins().toLeftByPx(this.mRankPageNode, 0), (this.mLevelMusicList.active = !1), (this.mHotMusicList.active = !1), (this.mRankPageNode.active = !0), this.mLevelMusicListCtrl.onHide(), this.mHotMusicListCtrl.onHide()), this.updateWidget(this.mLevelMusicList), this.updateWidget(this.mHotMusicList), this.updateWidget(this.mRankPageNode), this.initVipBanner(), this.mPageIndex == a.LEVEL_MUSIC_LIB_INDEX ? this.showNavigator(!1) : this.mPageIndex == a.HOT_MUSIC_LIB_INDEX && this.showNavigator(!0));
                            }),
                            (e.prototype.hideAfterLoad = function () {
                                (this.mLevelMusicListCtrl.hideAfterLoad = this.mHideAfterLoad), (this.mHotMusicListCtrl.hideAfterLoad = this.mHideAfterLoad);
                            }),
                            (e.prototype.onStart = function () {
                                var e = this;
                                null != this.mOnLoadCallback &&
                                    g.Delay.wait(10).then(function () {
                                        cc.isValid(e.node) && e.mOnLoadCallback && (e.mOnLoadCallback(), (e.mOnLoadCallback = null));
                                    });
                            }),
                            (e.prototype.onStop = function () {}),
                            (e.prototype.onShow = function (e) {
                                var t = this;
                                this.scheduleOnce(function () {
                                    t.initialize(), (t.node.x = 0), p.default.Ins().updateServerTime(), t.mPageIndex == a.LEVEL_MUSIC_LIB_INDEX ? t.mLevelMusicListCtrl.onShow() : t.mPageIndex == a.HOT_MUSIC_LIB_INDEX && t.mHotMusicListCtrl.onShow(e);
                                }, 1e-4);
                            }),
                            (e.prototype.onHide = function () {
                                this.initialize(), (this.node.x = -1e4), this.mPageIndex == a.LEVEL_MUSIC_LIB_INDEX ? this.mLevelMusicListCtrl.onHide() : this.mPageIndex == a.HOT_MUSIC_LIB_INDEX && this.mHotMusicListCtrl.onHide(), this.hideNavigator();
                            }),
                            (e.prototype.adaptorUI = function () {
                                c.SUtil.ins().isLiuHai() ? (c.SUtil.ins().toTopByPx(this.mTabNode, 175), c.SUtil.ins().toTopByPx(this.mBackBtn, 84), c.SUtil.ins().toTopByPx(this.mRankPageNode, 280)) : c.SUtil.ins().isQuanMian() && (c.SUtil.ins().toTopByPx(this.mTabNode, 105), c.SUtil.ins().toTopByPx(this.mBackBtn, 18));
                            }),
                            (e.prototype.setDialogMgr = function (e) {
                                this.mDialogMgr = e;
                            }),
                            (e.prototype.onDestroy = function () {
                                h.default.remove(f.default.BUY_VIP_SUCCESS_NOTIFICATION, this.initVipBanner, this), h.default.remove(f.default.NOTIFY_MUSIC_LIBRARY_UPDATE, this.notifyDataChange, this), this.hideNavigator();
                            }),
                            (e.LEVEL_MUSIC_LIB_INDEX = 0),
                            (e.HOT_MUSIC_LIB_INDEX = 1),
                            (e.RANK_INDEX = 2),
                            (e.NONE_INDEX = -1),
                            __decorate([v(cc.Sprite)], e.prototype, 'mUnSelectBg1', void 0),
                            __decorate([v(cc.Sprite)], e.prototype, 'mUnSelectBg2', void 0),
                            __decorate([v(cc.Label)], e.prototype, 'mLevelMusicLibBtn', void 0),
                            __decorate([v(cc.Label)], e.prototype, 'mHotMusicLibBtn', void 0),
                            __decorate([v(cc.Label)], e.prototype, 'mRankTabBtn', void 0),
                            __decorate([v(cc.Node)], e.prototype, 'mLevelMusicList', void 0),
                            __decorate([v(cc.Node)], e.prototype, 'mHotMusicList', void 0),
                            __decorate([v(cc.Node)], e.prototype, 'mRankPageNode', void 0),
                            __decorate([v(cc.Node)], e.prototype, 'mTabNode', void 0),
                            __decorate([v(cc.Sprite)], e.prototype, 'mTabBg', void 0),
                            __decorate([v(cc.Label)], e.prototype, 'mNewCountLabel', void 0),
                            __decorate([v(cc.Sprite)], e.prototype, 'mRedSpotSprite', void 0),
                            __decorate([v(cc.Button)], e.prototype, 'mBackBtn', void 0),
                            __decorate([v(cc.Node)], e.prototype, 'mVipPanel', void 0),
                            __decorate([v(cc.Sprite)], e.prototype, 'mVipUnlockNode', void 0),
                            __decorate([v(cc.Button)], e.prototype, 'mVipUnlockBtn', void 0),
                            __decorate([v(cc.Sprite)], e.prototype, 'mVipEightSaleBanner', void 0),
                            (e = a = __decorate([S], e))
                        );
                    })(cc.Component);
                (i.default = I), cc._RF.pop();
            },
            {
                '../../../../config/LSKey': 'LSKey',
                '../../../../infoc/m_p2_Uaction': 'm_p2_Uaction',
                '../../../../util/Delay': 'Delay',
                '../../../../util/PU': 'PU',
                '../../../../util/SUtil': 'SUtil',
                '../../../Logic/EventBus': 'EventBus',
                '../../../Logic/NotifyEvent': 'NotifyEvent',
                '../../../Network/Protocol/StorageUtil': 'StorageUtil',
                '../../../keypad/KeypadNavigator': 'KeypadNavigator',
                '../../MusicLevelDataLoader': 'MusicLevelDataLoader',
                '../BasicTouchEvent': 'BasicTouchEvent',
                '../ImgCache': 'ImgCache',
                './HotMusicListCtrl': 'HotMusicListCtrl',
                './InviteUnlockMusicCountdownUtil': 'InviteUnlockMusicCountdownUtil',
                './LevelMusicListCtrl': 'LevelMusicListCtrl',
            },
        ],
        MusicParser: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'ae6c7bEampP3pCss/juOsBR', 'MusicParser'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var y = e('./Music'),
                    S = e('./MusicPart'),
                    o = function () {
                        (this.bpm = []), (this.basebeats = []);
                    };
                i.MusicParserParam = o;
                var n = (function () {
                    function _() {}
                    return (
                        (_.parseJson = function (e, t, i, o) {
                            for (var n = new y.default(e), a = t.baseBpm, r = 0; r < t.musics.length; ++r) {
                                var s = t.musics[r],
                                    c = s.scores[0],
                                    l = s.instruments && 0 < s.instruments.length ? s.instruments[0] : 'piano';
                                _.isInstrumentReady(l) || (l = 'piano');
                                for (var u = [], d = [], p = 1; p < s.scores.length; ++p) {
                                    u.push(s.scores[p]);
                                    var h = s.instruments && s.instruments.length > p ? s.instruments[p] : 'piano';
                                    _.isInstrumentReady(h) || (h = 'piano'), d.push(h);
                                }
                                var f = i.bpm[r];
                                null == f && (f = null == s.bpm ? a : s.bpm);
                                var m = i.basebeats[r];
                                null == m && (m = s.baseBeats);
                                var g = new S.default();
                                g.setBPM(f), g.setBaseBeats(m), g.setTrackGain(s.highTrackGain, s.lowTrackGain), g.init(c, l, u, d, o), n.addMusicPart(g);
                            }
                            return n;
                        }),
                        (_.isInstrumentReady = function (e) {
                            return 'piano' === e;
                        }),
                        _
                    );
                })();
                (i.default = n), cc._RF.pop();
            },
            {
                './Music': 'Music',
                './MusicPart': 'MusicPart',
            },
        ],
        MusicPart: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '3a78frMX0NNfaG9mT2fOIK1', 'MusicPart'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var _ = e('./MusicSyllable'),
                    u = e('./MusicBlock'),
                    g = e('./MusicDefines'),
                    l = e('../business/music/MusicDownloadProcess'),
                    y = function () {
                        (this.startIndex = 0), (this.endIndex = 0), (this.mark = g.MUSICMARK.None);
                    },
                    d = function () {
                        (this.groups = []), (this.syllables = []), (this.musicInstrumentRef = null);
                    },
                    S = (function () {
                        function e() {}
                        return (
                            (e.reconiseHead = function (e) {
                                if (e.length < 2 || '<' != e[1]) return !1;
                                for (var t = 0; t < g.GROUPFORM.contents.length; ++t) {
                                    if (e.substr(0, g.GROUPFORM.contents[t].form.length) === g.GROUPFORM.contents[t].form) return !0;
                                }
                                return console.error('reconiseHead error:' + e), !1;
                            }),
                            (e.reconiseTail = function (e) {
                                return '>' === e;
                            }),
                            (e.parse = function (e, t) {
                                for (var i = 0, o = 0; o < g.GROUPFORM.contents.length; ++o) {
                                    if (e.substr(0, g.GROUPFORM.contents[o].form.length) === g.GROUPFORM.contents[o].form) {
                                        (t.mark = g.GROUPFORM.contents[o].mark), (i = g.GROUPFORM.contents[o].form.length);
                                        break;
                                    }
                                }
                                return i;
                            }),
                            e
                        );
                    })(),
                    v = (function () {
                        function m() {}
                        return (
                            (m.reconiseHead = function (e) {
                                if (0 === e.length) return !1;
                                if (m.reconiseStop(e)) return !0;
                                var t,
                                    i = 0;
                                return '!' === e[0] && (i = 1), !((t = e.indexOf('[')) < i) && 0 !== (e = e.substr(i, t - i)).length && (('(' === e[0] && ')' === e[e.length - 1]) || m.reconiseBeat(e));
                            }),
                            (m.parse = function (e, t, i, o, n) {
                                var a = m.parseStop(e);
                                if (0 < a) return i.setPlayMethod(g.SYLLABLEPLAYMETHOD.StopMark), i.setDuration(a), !0;
                                var r = !1,
                                    s = 0,
                                    c = e.indexOf('['),
                                    l = e.indexOf(']'),
                                    u = e.indexOf('{'),
                                    d = e.indexOf('}'),
                                    p = ~d ? d + 1 : l + 1,
                                    h = 0 < e.lastIndexOf(g.FORMATSYMBOL.groupEnd) ? e.length - g.FORMATSYMBOL.groupEnd.length : e.length;
                                if ((p < h && i.setVolnum(m.parseSyllableVolnum(e, p, h)), c < 0 || l < 0 || l <= c)) return console.log('parse error : ' + e), r;
                                if ((i.setDuration(m.parseSyllableDuration(e, c + 1, l - 1)), u < d && i.setIntensity(m.parseSyllableIntensity(e, u + 1, d, o, n)), '!' === e[0] && (i.setPlayMethod(g.SYLLABLEPLAYMETHOD.Staccato), (s = 1)), s < c)) {
                                    var f = '';
                                    '(' === e[s] && ')' === e[c - 1] ? s + 1 < c - 1 && ((f = e.substring(s + 1, c - 1)), i.getPlayMethod() === g.SYLLABLEPLAYMETHOD.Simple && i.setPlayMethod(g.SYLLABLEPLAYMETHOD.Chord)) : (f = e.substring(s, c)), (r = m.parseBeats(f, t, i));
                                }
                                return r;
                            }),
                            (m.parseBeats = function (e, t, i) {
                                if (0 == e.length) return !1;
                                for (var o = !0, n = 0, a = 0; a <= e.length; ++a) {
                                    var r = -1;
                                    if (a < e.length) {
                                        for (var s = 0; s < g.BEATSPLIT.content.length; ++s)
                                            if (e[a] === g.BEATSPLIT.content[s]) {
                                                r = s;
                                                break;
                                            }
                                        if (-1 == r) continue;
                                    }
                                    var c = e.substring(n, a),
                                        l = t.getBeat(c);
                                    if (!l) {
                                        console.log('parse beats error : ' + c), (o = !1);
                                        break;
                                    }
                                    i.addBeats(l), -1 != r && (i.addExtraPlayMethod(g.BEATSPLIT.reloveMethods[r]), 0 != r && i.setPlayMethod(g.BEATSPLIT.reloveMethods[r])), (n = a + 1);
                                }
                                return o;
                            }),
                            (m.parseSyllableDuration = function (e, t, i) {
                                for (var o = 0, n = t; n <= i; ++n)
                                    for (var a = 0; a < g.DURATIONFORM.contents.length; ++a)
                                        if (e[n] === g.DURATIONFORM.contents[a].form) {
                                            o += g.DURATIONFORM.contents[a].time;
                                            break;
                                        }
                                return o;
                            }),
                            (m.parseSyllableVolnum = function (e, t, i) {
                                var o = 1,
                                    n = e.slice(t, i);
                                if ('' != n) {
                                    var a = parseFloat('0.' + n);
                                    o = NaN != a ? a : 1;
                                }
                                return o;
                            }),
                            (m.parseSyllableIntensity = function (e, t, i, o, n) {
                                var a = g.INTENSITY_TYPE.MIDDLE,
                                    r = e.slice(t, i);
                                return n ? (r && '' !== r && ~['L', 'M', 'H'].indexOf(r) ? ('L' === r ? (a = g.INTENSITY_TYPE.LOW) : 'M' === r ? (a = g.INTENSITY_TYPE.MIDDLE) : 'H' === r && (a = g.INTENSITY_TYPE.HIGH)) : (a = o ? g.INTENSITY_TYPE.MIDDLE : g.INTENSITY_TYPE.LOW)) : (a = g.INTENSITY_TYPE.MIDDLE), a;
                            }),
                            (m.parseStop = function (e) {
                                for (var t = 0, i = 0; i <= e.length; ++i)
                                    for (var o = 0; o < g.STOPFORM.contents.length; ++o)
                                        if (e[i] === g.STOPFORM.contents[o].form[0]) {
                                            t += g.STOPFORM.contents[o].time;
                                            break;
                                        }
                                return t;
                            }),
                            (m.reconiseStop = function (e) {
                                for (var t = !1, i = 0; i <= e.length; ++i) {
                                    for (var o = 0; o < g.STOPFORM.contents.length; ++o)
                                        if (e[i] === g.STOPFORM.contents[o].form[0]) {
                                            t = !0;
                                            break;
                                        }
                                    if (t) break;
                                }
                                return t;
                            }),
                            (m.reconiseBeat = function (e) {
                                for (var t = !1, i = 0; i < g.BEATNAMES.contents.length; ++i)
                                    if (0 == e.indexOf(g.BEATNAMES.contents[i])) {
                                        t = !0;
                                        break;
                                    }
                                return t;
                            }),
                            m
                        );
                    })(),
                    o = (function () {
                        function c() {
                            (this.highMusicTrack = new d()), (this.lowMusicTracks = []), (this.musicBlocks = []), (this.baseBeat = 0), (this.bpm = 0), (this.acceleration = 0), (this.lowTrackGain = 1), (this.highTrackGain = 1), (this.isMusicPianoExist = null);
                        }
                        return (
                            (c.prototype.getMusicBlocks = function () {
                                return this.musicBlocks;
                            }),
                            (c.prototype.getMusicBlock = function (e) {
                                return e < 0 || e >= this.musicBlocks.length ? null : this.musicBlocks[e];
                            }),
                            (c.prototype.getAcceleration = function () {
                                return this.acceleration;
                            }),
                            (c.prototype.setAcceleration = function (e) {
                                this.acceleration = e;
                            }),
                            (c.prototype.setBPM = function (e) {
                                this.bpm = e;
                            }),
                            (c.prototype.getBPM = function () {
                                return this.bpm;
                            }),
                            (c.prototype.setBaseBeats = function (e) {
                                this.baseBeat = e;
                            }),
                            (c.prototype.getBaseBeats = function () {
                                return this.baseBeat;
                            }),
                            (c.prototype.setTrackGain = function (e, t) {
                                e && (this.highTrackGain = e), t && (this.lowTrackGain = t);
                            }),
                            (c.prototype.init = function (e, t, i, o, n) {
                                var a = l.MusicDownloadProcess.Ins().isMusicPianoExist();
                                if (((this.highMusicTrack.musicInstrumentRef = n.get(t)), this.parseSyllableString(e, this.highMusicTrack, !0, a), this.changeTrackGain(this.highMusicTrack, this.highTrackGain), !c.ADD_SINGLE_BEAT))
                                    for (var r = 0; r < i.length; ++r) {
                                        var s = new d();
                                        (s.musicInstrumentRef = n.get(o[r])), this.parseSyllableString(i[r], s, !1, a) && (this.changeTrackGain(s, this.lowTrackGain), this.lowMusicTracks.push(s));
                                    }
                                this.blendTrack(), (this.musicBlocks = this.generatePieces(32 * this.baseBeat)), (this.lowMusicTracks = []), (this.highMusicTrack = null);
                            }),
                            (c.prototype.changeTrackGain = function (e, t) {
                                for (var i = 0, o = e.syllables.length; i < o; ++i) {
                                    e.syllables[i].playState.partGain = t;
                                }
                            }),
                            (c.prototype.blendTrack = function () {
                                for (var e = 0, t = 0; t < this.highMusicTrack.syllables.length; ++t) {
                                    for (var i = this.highMusicTrack.syllables[t], o = i.getDuration(), n = this.lowMusicTracks.length, a = 0; a < n; ++a)
                                        for (var r = this.lowMusicTracks[a], s = 0, c = 0; c < r.syllables.length; ++c) {
                                            var l = r.syllables[c];
                                            if (s < e) s += l.getDuration();
                                            else {
                                                if (!(e <= s && s < e + o)) break;
                                                i.attatchLowSyllable(l, s - e), (s += l.getDuration());
                                            }
                                        }
                                    e += o;
                                }
                            }),
                            (c.prototype.stringifySyllableTrack = function (e) {
                                for (var t = '', i = 0; i < e.syllables.length; ++i) {
                                    var o = this.calcGroupIndex(i, e.groups);
                                    if (-1 == o) {
                                        (t += e.syllables[i].toString()), i != e.syllables.length - 1 && (t += ',');
                                    } else {
                                        for (var n = e.groups[o], a = 0; a < g.GROUPFORM.contents.length; ++a)
                                            if (g.GROUPFORM.contents[a].mark == n.mark) {
                                                t += g.GROUPFORM.contents[a].form;
                                                break;
                                            }
                                        for (a = n.startIndex; a <= n.endIndex; ++a) {
                                            (t += e.syllables[a].toString()), a != n.endIndex && (t += ',');
                                        }
                                        (t += '>,'), (i = n.endIndex);
                                    }
                                }
                                return t;
                            }),
                            (c.prototype.generatePieces = function (e) {
                                for (var t = [], i = 0; i < this.highMusicTrack.syllables.length; ++i) {
                                    var o = new u.default();
                                    t.push(o);
                                    var n = this.calcGroupIndex(i, this.highMusicTrack.groups);
                                    if (-1 == n) {
                                        var a = this.highMusicTrack.syllables[i];
                                        if (a.isStop()) o.addSyllable(a), o.setMark(g.MUSICMARK.StopMark);
                                        else if (a.getDuration() > e) {
                                            o.setMark(g.MUSICMARK.Accompaniment);
                                            l = a.getLowSyllables();
                                            o.addAccompanySyllables(l, 0), a.clearLowSyllables(), o.addSyllable(a);
                                        } else o.addSyllable(a), o.setMark(g.MUSICMARK.Normal);
                                    } else {
                                        var r = this.highMusicTrack.groups[n];
                                        if (r.mark == g.MUSICMARK.Accompaniment || r.mark == g.MUSICMARK.TiltAccompaniment || r.mark == g.MUSICMARK.FixedTiltAccompaniment)
                                            for (var s = 0, c = r.startIndex; c <= r.endIndex; ++c) {
                                                var l = this.highMusicTrack.syllables[c].getLowSyllables();
                                                o.addAccompanySyllables(l, s), this.highMusicTrack.syllables[c].clearLowSyllables(), o.addSyllable(this.highMusicTrack.syllables[c]), (s += this.highMusicTrack.syllables[c].getDuration());
                                            }
                                        else for (c = r.startIndex; c <= r.endIndex; ++c) o.addSyllable(this.highMusicTrack.syllables[c]);
                                        o.setMark(r.mark), (i = r.endIndex);
                                    }
                                }
                                return t;
                            }),
                            (c.prototype.calcGroupIndex = function (e, t) {
                                for (var i = -1, o = 0; o < t.length; ++o) {
                                    var n = t[o];
                                    if (e >= n.startIndex && e <= n.endIndex) {
                                        i = o;
                                        break;
                                    }
                                }
                                return i;
                            }),
                            (c.prototype.parseSyllableString = function (e, t, i, o) {
                                void 0 === i && (i = !1);
                                var n = t.syllables,
                                    a = t.groups,
                                    r = e;
                                r.replace(' ', '');
                                for (var s = null, c = r.split(';'), l = !0, u = 0; u < c.length; ++u) {
                                    for (var d = c[u].split(','), p = 0; p < d.length; ++p) {
                                        var h = d[p];
                                        if (S.reconiseHead(h)) {
                                            if (s) {
                                                l = !1;
                                                break;
                                            }
                                            var f = new y(),
                                                m = S.parse(h, f);
                                            (f.startIndex = n.length), a.push(f), (s = f), (h = h.slice(m));
                                        }
                                        if (v.reconiseHead(h)) {
                                            var g = new _.default(t.musicInstrumentRef);
                                            if (!v.parse(h, t.musicInstrumentRef, g, i, o)) {
                                                l = !1;
                                                break;
                                            }
                                            n.push(g);
                                        }
                                        if (S.reconiseTail(h[h.length - 1])) {
                                            if (null == s) {
                                                l = !1;
                                                break;
                                            }
                                            (s.endIndex = n.length - 1), (s = null);
                                        }
                                    }
                                    if (!l) break;
                                }
                                return l;
                            }),
                            (c.prototype.getHighMusicTrack = function () {
                                return this.highMusicTrack;
                            }),
                            (c.ADD_SINGLE_BEAT = !1),
                            c
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../business/music/MusicDownloadProcess': 'MusicDownloadProcess',
                './MusicBlock': 'MusicBlock',
                './MusicDefines': 'MusicDefines',
                './MusicSyllable': 'MusicSyllable',
            },
        ],
        MusicPlayCompat: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '6770fCUlMVPs6N3SQ8vsQIC', 'MusicPlayCompat'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./MusicContext'),
                    n = (function () {
                        function i() {
                            (this.index = 0), this.updateCompatEnabled(i.DEFAULT_COMPAT_ENABLED);
                        }
                        return (
                            (i.getInstance = function () {
                                return null == i.sInstance && (i.sInstance = new i()), i.sInstance;
                            }),
                            (i.prototype.updateCompatEnabled = function (e) {
                                if (((this.WECHAT_COMPAT_ENABLED = cc.sys.platform === cc.sys.WECHAT_GAME && e), (this.QQ_COMPAT_ENABLED = cc.sys.platform === cc.sys.QQ_PLAY && e), this.WECHAT_COMPAT_ENABLED && !this.mContextList)) {
                                    this.mContextList = [];
                                    for (var t = 0; t < i.MAX_CONTEXT_COUNT; t++) this.mContextList.push(new o.default(t));
                                } else this.QQ_COMPAT_ENABLED && !this.mContextList && ((BK.Audio.switch = !0), (this.mContextList = []));
                            }),
                            (i.prototype.isNeedFullPath = function () {
                                return this.WECHAT_COMPAT_ENABLED || this.QQ_COMPAT_ENABLED;
                            }),
                            (i.prototype.play = function (e, t, i) {
                                this.WECHAT_COMPAT_ENABLED ? this.playMusicContext(t, i) : cc.sys.platform === cc.sys.QQ_PLAY ? this.playMusicContextForQQ(t) : cc.audioEngine.play(t, !1, i);
                            }),
                            (i.prototype.playMusicContext = function (e, t) {
                                for (var i = -1, o = -1, n = Date.now(), a = 0; a < this.mContextList.length; a++) {
                                    var r = this.mContextList[a];
                                    if (r.isEnded()) {
                                        i = a;
                                        break;
                                    }
                                    r.getTimeStamp() < n && ((o = a), (n = r.getTimeStamp()));
                                }
                                (-1 != i ? this.mContextList[i] : this.mContextList[o]).playA(e, t);
                            }),
                            (i.prototype.playMusicContextForQQ = function (t) {
                                var e = this.mContextList.find(function (e) {
                                    return e.getPath() === t;
                                });
                                e ? e.play() : (this.commonAddContextList(this.index, t).play(), this.index++);
                            }),
                            (i.prototype.commonAddContextList = function (e, t) {
                                var i = new o.default(e, t);
                                return this.mContextList.push(i), i;
                            }),
                            (i.DEFAULT_COMPAT_ENABLED = !0),
                            (i.MAX_CONTEXT_COUNT = 30),
                            (i.sInstance = null),
                            i
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                './MusicContext': 'MusicContext',
            },
        ],
        MusicPlayer: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'd820fkKEhNH3Zg5w/0WgakZ', 'MusicPlayer'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var r = e('./MusicDefines'),
                    s = e('./MusicPlayCompat'),
                    c = e('../base/G'),
                    o = e('../gamescene/animation/MScheduler'),
                    a = e('./MusicThread'),
                    l = e('../util/common/EnumUtils'),
                    u = e('../business/music/tone/PianoToneMgr'),
                    n = (function () {
                        function n(e) {
                            (this.musicSyllableRefs = []), (this.bpm = 0), (this.scheduler = new o.default()), (this.thread = new a.default()), (this.bpm = e);
                        }
                        return (
                            (n.playMusicBeat = function (e, t, i, o) {
                                e.isStopMark || s.default.getInstance().play(e.audioId, e.realPath, i);
                            }),
                            (n.prototype.setBpm = function (e) {
                                this.bpm = e;
                            }),
                            (n.prototype.addSyllable = function (e) {
                                this.musicSyllableRefs.push(e);
                            }),
                            (n.prototype.update = function (e) {
                                for (var t = 0; t < this.musicSyllableRefs.length; ) {
                                    var i = this.musicSyllableRefs[t];
                                    this.tryPlay(i, e) ? (i.resetPlayData(), this.musicSyllableRefs.splice(t, 1)) : ++t;
                                }
                                this.scheduler.update(e), c.G.Ap.config.debugNoComplicatedPlayMode && this.thread.update(e);
                            }),
                            (n.prototype.playMusicBeatByThread = function (e, t, i, o, n) {
                                if ((void 0 === n && (n = r.INTENSITY_TYPE.MIDDLE), !c.G.Ap.config.debugNoBlockSound && !e.isStopMark))
                                    if (c.G.Ap.config.debugNoComplicatedPlayMode) this.thread.addBeat(e);
                                    else {
                                        var a = this.getPathByIntensity(n, e);
                                        s.default.getInstance().play(e.audioId, a, i);
                                    }
                            }),
                            (n.prototype.tryPlay = function (e, t) {
                                (e.playState.playBpm = this.bpm), (e.playState.totalPlayedTime += t);
                                var i = (e.playState.playBpm / 60) * e.playState.totalPlayedTime * 32,
                                    o = e.playState.played;
                                if (!e.playState.played) {
                                    if (!(0 <= i - (e.playState.startTime + e.getDelayFromParent()))) return !1;
                                    (e.playState.played = this.play(e)), e.playState.played && (o = !0);
                                }
                                for (var n = e.getLowSyllables(), a = 0; a < n.length; a++) {
                                    var r = n[a];
                                    this.tryPlay(r, t) || (o = !1);
                                }
                                return o;
                            }),
                            (n.prototype.tryPlaySubSyllableIsolate = function (e, t, i) {
                                return e.playState.played ? 2 : ((e.playState.playBpm = this.bpm), (e.playState.totalPlayedTime += t), i ? 0 : (0 <= (e.playState.playBpm / 60) * e.playState.totalPlayedTime * 32 - (e.playState.startTime + e.getDelayFromParent()) && (this.play(e), (e.playState.played = !0)), e.playState.played ? 1 : 0));
                            }),
                            (n.prototype.play = function (e) {
                                switch (e.getPlayMethod()) {
                                    case r.SYLLABLEPLAYMETHOD.StopMark:
                                        return !0;
                                    case r.SYLLABLEPLAYMETHOD.Simple:
                                    case r.SYLLABLEPLAYMETHOD.Staccato:
                                    case r.SYLLABLEPLAYMETHOD.Chord:
                                        return this.playSimple(e);
                                    case r.SYLLABLEPLAYMETHOD.Legato:
                                        return this.playLegato(e);
                                    case r.SYLLABLEPLAYMETHOD.Arpeggio:
                                        return this.playArpeggio(e);
                                    case r.SYLLABLEPLAYMETHOD.Wave:
                                    case r.SYLLABLEPLAYMETHOD.Trill:
                                        return this.playWav(e);
                                    case r.SYLLABLEPLAYMETHOD.Echo:
                                        return this.playEcho(e);
                                    case r.SYLLABLEPLAYMETHOD.LAppoggiatura:
                                        return this.playLAppoggiatura(e);
                                    case r.SYLLABLEPLAYMETHOD.SAppoggiatura:
                                        return this.playSAppoggiatura(e);
                                }
                                return !1;
                            }),
                            (n.prototype.playSimple = function (e) {
                                var t = this.calcSyllableTime(e);
                                e.playState.symPlayTime = t;
                                for (var i = e.getMusicBeats(), o = i.length, n = 0; n < o; n++) this.playMusicBeatByThread(i[n], e.playState.gain, e.getVolnum() * e.playState.partGain, e.playState.symPlayTime, e.getIntensity());
                                return !0;
                            }),
                            (n.prototype.playLegato = function (e) {
                                var t = this,
                                    i = this.calcSyllableTime(e),
                                    o = e.getExtraPlayMethodTimes(r.SYLLABLEPLAYMETHOD.Legato);
                                return (
                                    0 == o ||
                                        ((i /= o + 1),
                                        (e.playState.symPlayTime = i),
                                        (e.playState.lastPlayPos = 0),
                                        n.log('playLegato:' + (o - 1)),
                                        this.playingAppoggiatura(e),
                                        this.scheduler.scheduleLoop(
                                            function () {
                                                t.playingAppoggiatura(e);
                                            },
                                            i,
                                            o,
                                            i,
                                        )),
                                    !0
                                );
                            }),
                            (n.prototype.playArpeggio = function (e) {
                                var t = this,
                                    i = this.calcSyllableTime(e),
                                    o = e.getExtraPlayMethodTimes(r.SYLLABLEPLAYMETHOD.Arpeggio);
                                return (
                                    0 == o ||
                                        ((i *= 0.1),
                                        2 <= o && (i /= o - 1),
                                        (e.playState.symPlayTime = i),
                                        (e.playState.lastPlayPos = 0),
                                        n.log('playArpeggio:' + (o - 1)),
                                        this.playingAppoggiatura(e),
                                        this.scheduler.scheduleLoop(
                                            function () {
                                                t.playingAppoggiatura(e);
                                            },
                                            i,
                                            o,
                                            i,
                                        )),
                                    !0
                                );
                            }),
                            (n.prototype.playEcho = function (e) {
                                var t = this,
                                    i = this.calcSyllableTime(e),
                                    o = e.getExtraPlayMethodTimes(r.SYLLABLEPLAYMETHOD.Echo);
                                return (
                                    0 == o ||
                                        ((i /= o + 1),
                                        (e.playState.symPlayTime = i),
                                        (e.playState.lastPlayPos = 0),
                                        n.log('playEcho:' + (o - 1)),
                                        this.playingAppoggiatura(e),
                                        this.scheduler.scheduleLoop(
                                            function () {
                                                t.playingAppoggiatura(e);
                                            },
                                            i,
                                            o,
                                            i,
                                        )),
                                    !0
                                );
                            }),
                            (n.prototype.playWav = function (e) {
                                var t = this,
                                    i = this.calcSyllableTime(e),
                                    o = (i / 160) * 1e3 * 2;
                                return (
                                    (i /= o),
                                    (e.playState.symPlayTime = i),
                                    (e.playState.lastPlayPos = 0),
                                    n.log('playWav:' + (o - 1)),
                                    this.playingWav(e),
                                    this.scheduler.scheduleLoop(
                                        function () {
                                            t.playingWav(e);
                                        },
                                        i,
                                        o,
                                        i,
                                    ),
                                    !0
                                );
                            }),
                            (n.prototype.playSAppoggiatura = function (e) {
                                var t = this;
                                n.log('playSAppoggiatura:' + (e.getMusicBeats().length - 1));
                                var i = this.calcSyllableTime(e);
                                return (
                                    (i *= 0.15),
                                    (i /= Math.max(1, e.getMusicBeats().length - 1)),
                                    (e.playState.symPlayTime = i),
                                    (e.playState.lastPlayPos = 0),
                                    this.playingAppoggiatura(e),
                                    this.scheduler.scheduleLoop(
                                        function () {
                                            t.playingAppoggiatura(e);
                                        },
                                        i,
                                        e.getMusicBeats().length,
                                        i,
                                    ),
                                    !0
                                );
                            }),
                            (n.prototype.playLAppoggiatura = function (e) {
                                var t = this;
                                n.log('playLAppoggiatura:' + (e.getMusicBeats().length - 1));
                                var i = this.calcSyllableTime(e);
                                return (
                                    (i *= 0.3),
                                    (i /= Math.max(1, e.getMusicBeats().length - 1)),
                                    (e.playState.symPlayTime = i),
                                    (e.playState.lastPlayPos = 0),
                                    this.playingAppoggiatura(e),
                                    this.scheduler.scheduleLoop(
                                        function () {
                                            t.playingAppoggiatura(e);
                                        },
                                        i,
                                        e.getMusicBeats().length,
                                        i,
                                    ),
                                    !0
                                );
                            }),
                            (n.prototype.playingWav = function (e) {
                                n.log('playingWav playpos=' + e.playState.lastPlayPos);
                                var t = e.getMusicBeats();
                                2 == t.length && (this.playMusicBeatByThread(t[e.playState.lastPlayPos % 2], e.playState.gain, e.getVolnum() * e.playState.partGain, e.getDuration(), e.getIntensity()), e.playState.lastPlayPos++);
                            }),
                            (n.prototype.playingAppoggiatura = function (e) {
                                n.log('playingAppoggiatura playpos=' + e.playState.lastPlayPos);
                                var t = e.getMusicBeats();
                                if (e.playState.lastPlayPos < t.length) {
                                    this.playMusicBeatByThread(t[e.playState.lastPlayPos], e.playState.gain, e.getVolnum() * e.playState.partGain, e.getDuration(), e.getIntensity());
                                    var i = e.getExtraPlayMethods();
                                    e.playState.lastPlayPos < i.length && i[e.playState.lastPlayPos] === r.SYLLABLEPLAYMETHOD.Chord ? (e.playState.lastPlayPos++, this.playingAppoggiatura(e)) : e.playState.lastPlayPos++;
                                }
                            }),
                            (n.prototype.getPathByIntensity = function (e, t) {
                                var i = '';
                                try {
                                    var o = u.default.Ins().getCurTone();
                                    if (u.default.Ins().isUseDefaultTone())
                                        switch (e) {
                                            case r.INTENSITY_TYPE.LOW:
                                                var n = l.EnumUtils.getEntry(r.INTENSITY_TYPE.LOW, r.INTENSITY_TYPE);
                                                i = t.realPath.replace('piano/', n.description + '/');
                                                break;
                                            case r.INTENSITY_TYPE.MIDDLE:
                                                i = t.realPath;
                                                break;
                                            case r.INTENSITY_TYPE.HIGH:
                                                var a = l.EnumUtils.getEntry(r.INTENSITY_TYPE.HIGH, r.INTENSITY_TYPE);
                                                i = t.realPath.replace('piano/', a.description + '/');
                                                break;
                                            default:
                                                i = t.realPath;
                                        }
                                    else i = t.realPath.replace('piano/', o + '/');
                                } catch (e) {
                                    i = t.realPath;
                                }
                                return i;
                            }),
                            (n.prototype.calcSyllableTime = function (e) {
                                return ((60 / e.playState.playBpm) * e.getDuration()) / 32;
                            }),
                            (n.log = function (e) {}),
                            n
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../base/G': 'G',
                '../business/music/tone/PianoToneMgr': 'PianoToneMgr',
                '../gamescene/animation/MScheduler': 'MScheduler',
                '../util/common/EnumUtils': 'EnumUtils',
                './MusicDefines': 'MusicDefines',
                './MusicPlayCompat': 'MusicPlayCompat',
                './MusicThread': 'MusicThread',
            },
        ],
        MusicPreloader: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '4e6963OFkdGXLbCDmZ7PWIh', 'MusicPreloader'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {}
                    return (
                        (e.preload = function () {
                            cc.loader.loadResDir('music/piano', cc.AudioClip, function (e, t, i) {
                                for (var o = 0, n = i; o < n.length; o++) {
                                    var a = n[o];
                                    console.log('preload music: ' + a);
                                }
                            });
                        }),
                        e
                    );
                })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        MusicSyllable: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '44194l3JkdItra18bP3F4c7', 'MusicSyllable'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./MusicDefines'),
                    s = e('./MusicDefines'),
                    n = (function () {
                        function e() {
                            (this.playBpm = 0), (this.startTime = 0), (this.lastPlayPos = 0), (this.symPlayTime = 0), (this.played = !1), (this.totalPlayedTime = 0), (this.gain = 1), (this.partGain = 1);
                        }
                        return (
                            (e.prototype.reset = function () {
                                (this.played = !1), (this.totalPlayedTime = 0), (this.symPlayTime = 0), (this.startTime = 0), (this.playBpm = 0), (this.lastPlayPos = 0);
                            }),
                            e
                        );
                    })();
                i.MusicSyllablePlay = n;
                var a = (function () {
                    function e(e) {
                        (this.volnum = 1), (this.musicBeatRefs = []), (this.duration = 0), (this.delayFromParent = 0), (this.delayTime = 0), (this.intensity = o.INTENSITY_TYPE.MIDDLE), (this.playMethod = s.SYLLABLEPLAYMETHOD.Simple), (this.extraPlayMethods = []), (this.attachLowSyllableRefs = []), (this.instrumentRef = null), (this.playState = new n()), (this.instrumentRef = e);
                    }
                    return (
                        (e.prototype.getInstrument = function () {
                            return this.instrumentRef;
                        }),
                        (e.prototype.getPlayMethod = function () {
                            return this.playMethod;
                        }),
                        (e.prototype.setPlayMethod = function (e) {
                            this.playMethod = e;
                        }),
                        (e.prototype.getMusicBeats = function () {
                            return this.musicBeatRefs;
                        }),
                        (e.prototype.addBeats = function (e) {
                            this.musicBeatRefs.push(e);
                        }),
                        (e.prototype.getDuration = function () {
                            return this.duration;
                        }),
                        (e.prototype.setDuration = function (e) {
                            this.duration = e;
                        }),
                        (e.prototype.getVolnum = function () {
                            return this.volnum;
                        }),
                        (e.prototype.setVolnum = function (e) {
                            this.volnum = e;
                        }),
                        (e.prototype.getDelayFromParent = function () {
                            return this.delayFromParent;
                        }),
                        (e.prototype.setDelayFromParent = function (e) {
                            this.delayFromParent = e;
                        }),
                        (e.prototype.getAccDelay = function () {
                            return this.delayTime;
                        }),
                        (e.prototype.setDelay = function (e) {
                            this.delayTime = e;
                        }),
                        (e.prototype.getIntensity = function () {
                            return this.intensity;
                        }),
                        (e.prototype.setIntensity = function (e) {
                            this.intensity = e;
                        }),
                        (e.prototype.addAccDelay = function (e) {
                            this.delayTime += e;
                        }),
                        (e.prototype.isStop = function () {
                            if (this.getPlayMethod() != s.SYLLABLEPLAYMETHOD.StopMark) return !1;
                            for (var e = 0; e < this.attachLowSyllableRefs.length; e++) if (s.SYLLABLEPLAYMETHOD.StopMark != this.attachLowSyllableRefs[e].getPlayMethod()) return !1;
                            return !0;
                        }),
                        (e.prototype.attatchLowSyllable = function (e, t) {
                            e.setDelayFromParent(t), e.setDelay(t), this.attachLowSyllableRefs.push(e);
                        }),
                        (e.prototype.getLowSyllables = function () {
                            return this.attachLowSyllableRefs;
                        }),
                        (e.prototype.clearLowSyllables = function () {
                            this.attachLowSyllableRefs = [];
                        }),
                        (e.prototype.addExtraPlayMethod = function (e) {
                            this.extraPlayMethods.push(e);
                        }),
                        (e.prototype.getExtraPlayMethods = function () {
                            return this.extraPlayMethods;
                        }),
                        (e.prototype.getExtraPlayMethodTimes = function (e) {
                            for (var t = 0, i = this.extraPlayMethods, o = 0; o < i.length; o++) i[o] == e && t++;
                            return t;
                        }),
                        (e.prototype.resetPlayData = function () {
                            this.playState.reset();
                            for (var e = 0; e < this.attachLowSyllableRefs.length; e++) this.attachLowSyllableRefs[e].resetPlayData();
                        }),
                        (e.prototype.setStartTime = function (e) {
                            this.playState.startTime = e;
                            for (var t = 0; t < this.attachLowSyllableRefs.length; t++) this.attachLowSyllableRefs[t].setStartTime(e);
                        }),
                        (e.prototype.toString = function () {
                            var e = '';
                            if (this.playMethod == s.SYLLABLEPLAYMETHOD.StopMark) for (var t = this.getDuration(), i = 0; i < s.STOPFORM.contents.length; ++i) t >= s.STOPFORM.contents[i].time && ((e += s.STOPFORM.contents[i].form), (t -= s.STOPFORM.contents[i].time));
                            else {
                                var o = this.musicBeatRefs.length;
                                1 < o && (e += '(');
                                i = 0;
                                for (var n = this.musicBeatRefs.length; i < n; ++i) {
                                    if (0 < i)
                                        for (var a = this.extraPlayMethods[i - 1], r = 0; r < s.BEATSPLIT.reloveMethods.length; ++r)
                                            if (s.BEATSPLIT.reloveMethods[r] == a) {
                                                e += s.BEATSPLIT.content[r];
                                                break;
                                            }
                                    e += this.musicBeatRefs[i].beatName;
                                }
                                1 < o && (e += ')'), (e += '[');
                                for (t = this.getDuration(), i = 0; i < s.DURATIONFORM.contents.length; ++i) t >= s.DURATIONFORM.contents[i].time && ((e += s.DURATIONFORM.contents[i].form), (t -= s.DURATIONFORM.contents[i].time));
                                e += ']';
                            }
                            return e;
                        }),
                        e
                    );
                })();
                (i.default = a), cc._RF.pop();
            },
            {
                './MusicDefines': 'MusicDefines',
            },
        ],
        MusicThread: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '31c796b5xtELLmIDwTRha6c', 'MusicThread'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./MusicPlayCompat'),
                    n = (function () {
                        function e() {
                            (this.beats = []), (this.frame = 0), (this.beatsPreFrame = 0), (this.beatsAllFrame = 0);
                        }
                        return (
                            (e.prototype.update = function (e) {
                                if (0 < this.beats.length) {
                                    var t = this.beats[0];
                                    o.default.getInstance().play(t.audioId, t.realPath, 1), this.beats.splice(0, 1);
                                }
                            }),
                            (e.prototype.addBeat = function (e) {
                                this.beats.push(e);
                            }),
                            e
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                './MusicPlayCompat': 'MusicPlayCompat',
            },
        ],
        Music: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '8f393BeJe5Nw7Q3HtZ3qpbj', 'Music'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e(e) {
                        (this.musicName = ''), (this.musicParts = []), (this.musicName = e);
                    }
                    return (
                        (e.prototype.getName = function () {
                            return this.musicName;
                        }),
                        (e.prototype.getMusicParts = function () {
                            return this.musicParts;
                        }),
                        (e.prototype.addMusicPart = function (e) {
                            this.musicParts.push(e);
                        }),
                        (e.prototype.getMusicPart = function (e) {
                            return e < 0 || e >= this.musicParts.length ? null : this.musicParts[e];
                        }),
                        (e.prototype.getMusicBlock = function (e, t) {
                            var i = this.getMusicPart(e);
                            return null == i ? null : i.getMusicBlock(t);
                        }),
                        e
                    );
                })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        NetworkUtils: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '85be0cWDfBBlI3kXX2mylsI', 'NetworkUtils'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('./WeappHelper'),
                    r = e('./MGLog'),
                    o = e('./MGSha1'),
                    s = e('./QQHelper'),
                    c = e('./TypeDefinition'),
                    n = (function () {
                        function n() {}
                        return (
                            (n.request = function (e) {
                                if (e)
                                    switch (e.platform) {
                                        case c.PlatformType.PLATFORM_H5SDK:
                                        case c.PlatformType.PLATFORM_GAMEHALL:
                                        case c.PlatformType.PLATFORM_WECHAT:
                                            n.requestWX(e);
                                            break;
                                        case c.PlatformType.PLATFORM_WEB:
                                        case c.PlatformType.PLATFORM_FACEBOOK:
                                            n.requestFB(e);
                                            break;
                                        case c.PlatformType.PLATFORM_QQPLAY:
                                            n.requestQQ(e);
                                            break;
                                        case c.PlatformType.PLATFORM_CMPLAY:
                                            n.requestCMPlay(e);
                                            break;
                                        default:
                                            e.fail && e.fail(-1, null);
                                    }
                            }),
                            (n.requestWX = function (o) {
                                a.WeappHelper.networkRequest({
                                    url: o.url,
                                    data: o.data,
                                    header: o.header,
                                    method: o.method,
                                    dataType: o.dataType,
                                    success: function (e, t, i) {
                                        o.token && o.checkAuthorization && !n.checkAuthorization(i, t, o.token) ? o.fail(e, t) : o.success(t);
                                    },
                                    fail: function (e, t) {
                                        o.fail(e, t);
                                    },
                                });
                            }),
                            (n.requestFB = function (t) {
                                r.default.l('NetworkUtils requestFB, parameter:', t);
                                var i = new XMLHttpRequest();
                                for (var e in (i.open(t.method, t.url), t.header)) i.setRequestHeader(e, t.header[e]);
                                i.onreadystatechange = function () {
                                    if (4 == i.readyState)
                                        if (200 == i.status) {
                                            if ((r.default.l('NetworkUtils requestFB, success:', i.responseText), t.token && t.checkAuthorization && !n.checkAuthorization(i.getAllResponseHeaders(), i.responseText, t.token))) return void (t.fail && t.fail(i.status, i.responseText));
                                            if (t.success) {
                                                var e = i.responseText;
                                                if ('json' == t.dataType)
                                                    try {
                                                        e = JSON.parse(i.responseText);
                                                    } catch (e) {}
                                                t.success(e);
                                            }
                                        } else r.default.l('NetworkUtils requestFB, fail:', i.responseText), t.fail && t.fail(i.status, i.responseText);
                                };
                                var o = t.data ? JSON.stringify(t.data) : '';
                                i.send(o);
                            }),
                            (n.requestQQ = function (o) {
                                console.log('===NetworkUtils requestQQ parameter:' + o.url),
                                    s.QQHelper.networkRequest({
                                        url: o.url,
                                        data: o.data,
                                        header: o.header,
                                        method: o.method,
                                        dataType: o.dataType,
                                        success: function (e, t, i) {
                                            o.success && o.success(t);
                                        },
                                        fail: function (e, t) {
                                            console.error('===NetworkUtils requestQQ fail:' + e + ',' + (t ? JSON.stringify(t) : '')), o.fail && o.fail(e, t);
                                        },
                                    });
                            }),
                            (n.requestCMPlay = function (t) {
                                r.default.l('NetworkUtils requestCMPlay, parameter:', t);
                                var i = new XMLHttpRequest();
                                for (var e in (i.open(t.method, t.url), t.header)) i.setRequestHeader(e, t.header[e]);
                                i.onreadystatechange = function () {
                                    if (4 == i.readyState)
                                        if (200 == i.status) {
                                            if ((r.default.l('NetworkUtils requestCMPlay, success:', t, i.responseText), t.success)) {
                                                var e = i.responseText;
                                                if ('json' == t.dataType)
                                                    try {
                                                        e = JSON.parse(i.responseText);
                                                    } catch (e) {}
                                                t.success(e);
                                            }
                                        } else r.default.l('NetworkUtils requestCMPlay, fail:', t, i.responseText), t.fail && t.fail(i.status, i.responseText);
                                };
                                var o = t.data ? JSON.stringify(t.data) : '';
                                i.send(o);
                            }),
                            (n.checkAuthorization = function (e, t, i) {
                                return e && (e.Authorization || e.authorization) ? 'CMCM ' + o.hex_hmac_sha1(i, t) === (e.Authorization ? e.Authorization : e.authorization) || (r.default.e('NetworkUtils checkAuthorization, fail: Invalid authorization.'), !1) : (r.default.e('NetworkUtils checkAuthorization, fail: Authorization is empty.'), !1);
                            }),
                            (n.createAuthorization = function (e, t) {
                                return 'CMCM ' + o.hex_hmac_sha1(t, JSON.stringify(e));
                            }),
                            (n.METHOD_GET = 'GET'),
                            (n.METHOD_HEAD = 'HEAD'),
                            (n.METHOD_POST = 'POST'),
                            (n.METHOD_PUT = 'PUT'),
                            (n.METHOD_DELETE = 'DELETE'),
                            (n.METHOD_TRACE = 'TRACE'),
                            (n.METHOD_CONNECT = 'CONNECT'),
                            n
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                './MGLog': 'MGLog',
                './MGSha1': 'MGSha1',
                './QQHelper': 'QQHelper',
                './TypeDefinition': 'TypeDefinition',
                './WeappHelper': 'WeappHelper',
            },
        ],
        NewGuidanceLoader: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '78b51f2el5CNb7eR+GYz9p7', 'NewGuidanceLoader'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('../../../util/ResLoader'),
                    s = e('../../../util/PU'),
                    l = e('./GuidanceInfo'),
                    u = e('./NewGuidancePrefab'),
                    d = e('../../../util/SUtil'),
                    p = e('../../UI/GameEntraScene/PrefabMgr'),
                    o = (function () {
                        function c() {
                            this.mGuidanceInfos = null;
                        }
                        return (
                            (c.getInstance = function () {
                                return null == this._instance && (this._instance = new c()), this._instance;
                            }),
                            (c.prototype.showGuideFinger = function (t, i, n, a, r, s) {
                                this.getGuidanceItems(
                                    function (e) {
                                        e.forEach(function (e) {
                                            e.sceneName == t &&
                                                e.prefabItems.forEach(function (e) {
                                                    e.prefabName == i &&
                                                        e.items.forEach(function (o) {
                                                            o.itemName == n &&
                                                                p.default.load('prefab/newtarget/NewGuidancePrefab', function (e, t) {
                                                                    var i = t.getComponent(u.default);
                                                                    i.setClickNotHide(r), 'GuideToTarget' == o.itemName ? (t.tag = c.FINGER_NODE_TARGET_ICON_TAG) : (t.tag = c.FINGER_NODE_OTHER_TAG), a.addChild(t), i.setItem(o), s && s();
                                                                });
                                                        });
                                                });
                                        });
                                    },
                                    function (e) {
                                        console.log(e);
                                    },
                                );
                            }),
                            (c.prototype.getGuidanceItems = function (o, a) {
                                var r = this;
                                if (this.mGuidanceInfos) o(this.mGuidanceInfos);
                                else {
                                    var e = s.default.getResourcePath('resources/guidance/guidance_config.json');
                                    n.default.loadJson(e, function (e, n) {
                                        if (e) a(e);
                                        else if (n)
                                            try {
                                                r.mGuidanceInfos || (r.mGuidanceInfos = []);
                                                var t = function (e) {
                                                    var t = new l.default();
                                                    if (n.hasOwnProperty(e)) {
                                                        var i = n[e];
                                                        t.sceneName = e;
                                                        var o = [];
                                                        i.forEach(function (e) {
                                                            var n = [],
                                                                t = new l.PrefabItem();
                                                            (t.prefabName = e.prefabName),
                                                                e.items.forEach(function (e) {
                                                                    var t = new l.GuidanceItem();
                                                                    (t.itemName = e.name), (t.index = e.index);
                                                                    var i = new cc.Vec2(),
                                                                        o = null;
                                                                    d.SUtil.ins().isPuTong() ? ((i.x = e.position_1280.x), (i.y = e.position_1280.y), e.position2_1280 && !o && e.position2_1280 && (((o = new cc.Vec2()).x = e.position2_1280.x), (o.y = e.position2_1280.y))) : d.SUtil.ins().isQuanMian() ? ((i.x = e.position_1440.x), (i.y = e.position_1440.y), !o && e.position2_1440 && (((o = new cc.Vec2()).x = e.position2_1440.x), (o.y = e.position2_1440.y))) : d.SUtil.ins().isLiuHai() && ((i.x = e.position_1559.x), (i.y = e.position_1559.y), !o && e.position2_1559 && (((o = new cc.Vec2()).x = e.position2_1559.x), (o.y = e.position2_1559.y))), (t.isRich = e.isRichLabel), (t.tipsPos = e.tipsPos), (t.isDown = e.isDown), (t.isLeft = e.isLeft), (t.position = i), o && (t.position2 = o), (t.next = e.next), (t.autoHide = e.autoHide), (t.text = e.text), (t.duration = e.duration), n.push(t);
                                                                }),
                                                                (t.items = n),
                                                                o.push(t);
                                                        }),
                                                            (t.prefabItems = o);
                                                    }
                                                    r.mGuidanceInfos.push(t);
                                                };
                                                for (var i in n) t(i);
                                                o(r.mGuidanceInfos);
                                            } catch (e) {
                                                a(e);
                                            }
                                    });
                                }
                            }),
                            (c.FINGER_NODE_TARGET_ICON_TAG = 66),
                            (c.FINGER_NODE_OTHER_TAG = 67),
                            c
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../../../util/PU': 'PU',
                '../../../util/ResLoader': 'ResLoader',
                '../../../util/SUtil': 'SUtil',
                '../../UI/GameEntraScene/PrefabMgr': 'PrefabMgr',
                './GuidanceInfo': 'GuidanceInfo',
                './NewGuidancePrefab': 'NewGuidancePrefab',
            },
        ],
        NewGuidancePrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '8c1b2GMUm9JK57s0tu4eaGO', 'NewGuidancePrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var s,
                    o,
                    c,
                    n,
                    l = e('./GuidanceInfo'),
                    u = e('../../UI/GameEntraScene/ImgCache'),
                    a = e('../../Logic/EventBus'),
                    r = e('../../Logic/NotifyEvent'),
                    d = cc._decorator,
                    p = d.ccclass,
                    h = d.property;
                ((o = s = i.CircleColor || (i.CircleColor = {}))[(o.WHITE = 0)] = 'WHITE'), (o[(o.YELLOW = 1)] = 'YELLOW'), ((n = c = i.TipPos || (i.TipPos = {}))[(n.DOWN = 0)] = 'DOWN'), (n[(n.RIGHT = 1)] = 'RIGHT'), (n[(n.LEFT_DOWN = 2)] = 'LEFT_DOWN'), (n[(n.LEFT_TOP = 3)] = 'LEFT_TOP'), (n[(n.TOP = 4)] = 'TOP');
                var f = (function (t) {
                    function e() {
                        var e = (null !== t && t.apply(this, arguments)) || this;
                        return (e.mClickNotHide = !1), e;
                    }
                    return (
                        __extends(e, t),
                        (e.prototype.onLoad = function () {
                            var t = this;
                            this.node.on(
                                cc.Node.EventType.TOUCH_START,
                                function (e) {
                                    t.mClickNotHide || (t.node.removeFromParent(), t.node.destroy(), a.default.fire(r.default.REFRESH_HOMEPAGE_NEW_TARGET_RED_SPOT));
                                },
                                this,
                            ),
                                this.node._touchListener && this.node._touchListener.setSwallowTouches(!1);
                        }),
                        (e.prototype.start = function () {
                            this.mPanel.getComponent(cc.Animation).play('guide_circle_scale');
                        }),
                        (e.prototype.initViews = function () {
                            this.mItem;
                        }),
                        (e.prototype.setDataFroGameScene = function (e, t, i, o, n) {
                            var a = this;
                            (this.mItem = new l.GuidanceItem()), (this.mItem.isDown = t), (this.mItem.text = e), (this.mItem.position = n), (this.mItem.isRich = !1), o == c.DOWN ? (this.mItem.tipsPos = 'down') : o == c.LEFT_DOWN ? (this.mItem.tipsPos = 'left_down') : o == c.LEFT_TOP ? (this.mItem.tipsPos = 'left_top') : o == c.RIGHT ? (this.mItem.tipsPos = 'right') : o == c.TOP && (this.mItem.tipsPos = 'top');
                            var r = null;
                            i == s.YELLOW ? (r = 'static_res/guide_light_circle_yellow') : i == s.WHITE && (r = 'static_res/guide_light_circle_white'),
                                r &&
                                    u.default.get(r, function (e, t) {
                                        cc.isValid(a, !0) && a.node && a.node.isValid && ((a.mFingerSprite1.spriteFrame = t), (a.mFingerSprite2.spriteFrame = t), (a.mFingerSprite3.spriteFrame = t));
                                    }),
                                this.initViews();
                        }),
                        (e.prototype.setPosition = function (e) {
                            this.mPanel.position = e;
                        }),
                        (e.prototype.setItem = function (e) {
                            (this.mItem = e), this.initViews();
                        }),
                        (e.prototype.setClickNotHide = function (e) {
                            this.mClickNotHide = e;
                        }),
                        __decorate([h(cc.Node)], e.prototype, 'mPanel', void 0),
                        __decorate([h(cc.Node)], e.prototype, 'mDownFingerNode', void 0),
                        __decorate([h(cc.Node)], e.prototype, 'mUpFingerNode', void 0),
                        __decorate([h(cc.Node)], e.prototype, 'mLeftFingerNode', void 0),
                        __decorate([h(cc.Sprite)], e.prototype, 'mFingerDownFinger', void 0),
                        __decorate([h(cc.RichText)], e.prototype, 'mDownLabel', void 0),
                        __decorate([h(cc.Sprite)], e.prototype, 'mDownTipsBg', void 0),
                        __decorate([h(cc.Sprite)], e.prototype, 'mFingerUpFinger', void 0),
                        __decorate([h(cc.Label)], e.prototype, 'mUpLabel', void 0),
                        __decorate([h(cc.Sprite)], e.prototype, 'mUpTipsBg', void 0),
                        __decorate([h(cc.RichText)], e.prototype, 'mUpLabelRich', void 0),
                        __decorate([h(cc.Sprite)], e.prototype, 'mFingerSprite1', void 0),
                        __decorate([h(cc.Sprite)], e.prototype, 'mFingerSprite2', void 0),
                        __decorate([h(cc.Sprite)], e.prototype, 'mFingerSprite3', void 0),
                        (e = __decorate([p], e))
                    );
                })(cc.Component);
                (i.default = f), cc._RF.pop();
            },
            {
                '../../Logic/EventBus': 'EventBus',
                '../../Logic/NotifyEvent': 'NotifyEvent',
                '../../UI/GameEntraScene/ImgCache': 'ImgCache',
                './GuidanceInfo': 'GuidanceInfo',
            },
        ],
        NewPlayerTargerItemPrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '86e79oynrZOgokP9knH+5fo', 'NewPlayerTargerItemPrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('../TaskSystem'),
                    c = e('../TaskItem'),
                    l = e('../../UI/GameEntraScene/ImgCache'),
                    o = e('../../UI/GameEntraScene/BasicTouchEvent'),
                    n = e('../../awardcontroller/AwardController'),
                    r = e('./NewGuidanceLoader'),
                    s = e('../../Logic/GameItemsManager'),
                    u = e('../../Logic/EventBus'),
                    d = e('../../Logic/NotifyEvent'),
                    p = cc._decorator,
                    h = p.ccclass,
                    f = p.property,
                    m = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.onLoad = function () {
                                var e = this;
                                (this.mBtnClickCallback = new o.default(function () {
                                    e.setClickById();
                                })),
                                    this.mBtn.node.on(cc.Node.EventType.TOUCH_END, this.mBtnClickCallback.click, this.mBtnClickCallback);
                            }),
                            (t.prototype.start = function () {}),
                            (t.prototype.setClickById = function () {
                                if (this.mTask.status == c.TaskStatus.TASK_STATUS_SUCCESS) {
                                    if (this.mTask.rewardTaken) return;
                                    this.showRewardPage();
                                } else this.mToHomePageCallback && this.mToHomePageCallback(this.mTask.id);
                            }),
                            (t.prototype.setToHomePageCallback = function (e) {
                                this.mToHomePageCallback = e;
                            }),
                            (t.prototype.showRewardPage = function () {
                                var i = this,
                                    e = new n.AwardResultInfo();
                                e
                                    .setTitlePicPath('/static_res/newtarget/new_target_finish_title')
                                    .addAwardContent(s.GameItemType.TYPE_DIAMONDS, this.mTask.rewardValue)
                                    .setIsNeedGiveAwardInfo(!0)
                                    .setOkBtn('好的', function () {
                                        a.default.Ins().setRewardTaken(i.mTask.id, !0), u.default.fire(d.default.REFRESH_HOMEPAGE_NEW_TARGET_RED_SPOT);
                                        l.default.get2('/static_res/black_diamond_icon', i.mRewardIcon);
                                        l.default.get2('/mainpage/new_guide_done_bg', i.mBg),
                                            (i.mRewardCountLabel.getComponent(cc.LabelOutline).color = new cc.Color().fromHEX('#7F7F7F')),
                                            l.default.get('/static_res/newtarget/target_btn_getted', function (e, t) {
                                                cc.isValid(i, !0) && ((i.mBtn.normalSprite = t), (i.mBtn.pressedSprite = t));
                                            }),
                                            (i.mInActiveBg.node.active = !0),
                                            (i.mActiveBg.node.active = !1),
                                            (i.mTargetLabel.node.color = new cc.Color().fromHEX('#9D9D9D')),
                                            (i.mProcesslabel.node.color = new cc.Color().fromHEX('#9D9D9D')),
                                            (i.mProcesslabel.node.opacity = 178),
                                            (i.mProcessCountLabel.string = i.mTask.currentStep + '/' + i.mTask.totalStep),
                                            i.showNextFinger(),
                                            n.AwardController.getIns().dismissAwardResultPage(e);
                                    }),
                                    n.AwardController.getIns().showAwardResultPage(e);
                            }),
                            (t.prototype.setData = function (e, t) {
                                var i = this;
                                if (((this.mFingerParentNode = t), e)) {
                                    var o;
                                    (o = (this.mTask = e).rewardTaken ? '/static_res/black_diamond_icon' : '/static_res/diamond_popup_diamond_icon'), l.default.get2(o, this.mRewardIcon), (this.mRewardCountLabel.string = 'x ' + e.rewardValue), (this.mTargetLabel.string = e.name);
                                    var n = e.rewardTaken ? '/mainpage/new_guide_done_bg' : '/mainpage/trial_item_bk';
                                    if ((l.default.get2(n, this.mBg), e.rewardTaken)) {
                                        (this.mRewardCountLabel.getComponent(cc.LabelOutline).color = new cc.Color().fromHEX('#7F7F7F')),
                                            l.default.get('/mainpage/new_guide_done', function (e, t) {
                                                cc.isValid(i, !0) && ((i.mBtn.normalSprite = t), (i.mBtn.pressedSprite = t));
                                            }),
                                            (this.mInActiveBg.node.active = !0),
                                            (this.mActiveBg.node.active = !1),
                                            (this.mTargetLabel.node.color = new cc.Color().fromHEX('#9D9D9D')),
                                            (this.mProcesslabel.node.color = new cc.Color().fromHEX('#9D9D9D')),
                                            (this.mProcesslabel.node.opacity = 178),
                                            (this.mProcessCountLabel.string = e.currentStep + '/' + e.totalStep);
                                    } else {
                                        this.mRewardCountLabel.getComponent(cc.LabelOutline).color = new cc.Color().fromHEX('#458CDC');
                                        var a = void 0,
                                            r = void 0;
                                        if (e.status == c.TaskStatus.TASK_STATUS_DOING) {
                                            (this.mInActiveBg.node.active = !1), (this.mActiveBg.node.active = !0);
                                            var s = Math.round((240 * e.currentStep) / e.totalStep);
                                            (this.mActiveBg.node.width = s), (a = '/mainpage/new_guide_go'), (r = '/mainpage/new_guide_go_pressed');
                                        } else e.status == c.TaskStatus.TASK_STATUS_SUCCESS && ((a = '/mainpage/new_guide_taken'), (r = '/mainpage/new_guide_taken_pressed'), (this.mInActiveBg.node.active = !1), (this.mActiveBg.node.active = !0), (this.mActiveBg.node.width = 240));
                                        (this.mProcessCountLabel.string = e.currentStep + '/' + e.totalStep),
                                            l.default.get(a, function (e, t) {
                                                cc.isValid(i, !0) && (i.mBtn.normalSprite = t);
                                            }),
                                            l.default.get(r, function (e, t) {
                                                cc.isValid(i, !0) && (i.mBtn.pressedSprite = t);
                                            });
                                    }
                                }
                            }),
                            (t.prototype.showNextFinger = function () {
                                var t,
                                    e = a.default.Ins().getTaskList(),
                                    i = !1,
                                    o = !1;
                                e.forEach(function (e) {
                                    e.status != c.TaskStatus.TASK_STATUS_SUCCESS || e.rewardTaken ? e.status == c.TaskStatus.TASK_STATUS_DOING && (i || (o = !0)) : (o = !(i = !0));
                                });
                                var n = !1;
                                if (
                                    (e.forEach(function (e) {
                                        n || (i ? e.status != c.TaskStatus.TASK_STATUS_SUCCESS || e.rewardTaken || ((n = !0), (t = e)) : o && e.status == c.TaskStatus.TASK_STATUS_DOING && ((n = !0), (t = e)));
                                    }),
                                    t && (t.status == c.TaskStatus.TASK_STATUS_DOING || (t.status == c.TaskStatus.TASK_STATUS_SUCCESS && !t.rewardTaken)))
                                )
                                    switch (t.id) {
                                        case c.TaskID.TASK_ID_LITTLE_STAR:
                                            r.default.getInstance().showGuideFinger('NewPlayerTarget', 'NewPlayerTargetPrefab', 'GuideTargetBtnPlay', this.mFingerParentNode);
                                            break;
                                        case c.TaskID.TASK_ID_LEVEL_THREE:
                                            r.default.getInstance().showGuideFinger('NewPlayerTarget', 'NewPlayerTargetPrefab', 'GuideTargetBtnLevelThree', this.mFingerParentNode);
                                            break;
                                        case c.TaskID.TASK_ID_ATTEND_CHALLENGE:
                                            r.default.getInstance().showGuideFinger('NewPlayerTarget', 'NewPlayerTargetPrefab', 'GuideToBtnChallenge', this.mFingerParentNode);
                                            break;
                                        case c.TaskID.TASK_ID_GAME_SHARE:
                                            r.default.getInstance().showGuideFinger('NewPlayerTarget', 'NewPlayerTargetPrefab', 'GuideToBtnShare', this.mFingerParentNode);
                                            break;
                                        case c.TaskID.TASK_ID_UNLOCK_HOT_SONG:
                                            r.default.getInstance().showGuideFinger('NewPlayerTarget', 'NewPlayerTargetPrefab', 'GuideHotMusicBtn', this.mFingerParentNode);
                                    }
                            }),
                            __decorate([f(cc.Sprite)], t.prototype, 'mBg', void 0),
                            __decorate([f(cc.Label)], t.prototype, 'mRewardCountLabel', void 0),
                            __decorate([f(cc.Sprite)], t.prototype, 'mRewardIcon', void 0),
                            __decorate([f(cc.Label)], t.prototype, 'mTargetLabel', void 0),
                            __decorate([f(cc.Label)], t.prototype, 'mProcesslabel', void 0),
                            __decorate([f(cc.Sprite)], t.prototype, 'mActiveBg', void 0),
                            __decorate([f(cc.Sprite)], t.prototype, 'mInActiveBg', void 0),
                            __decorate([f(cc.Label)], t.prototype, 'mProcessCountLabel', void 0),
                            __decorate([f(cc.Button)], t.prototype, 'mBtn', void 0),
                            (t = __decorate([h], t))
                        );
                    })(cc.Component);
                (i.default = m), cc._RF.pop();
            },
            {
                '../../Logic/EventBus': 'EventBus',
                '../../Logic/GameItemsManager': 'GameItemsManager',
                '../../Logic/NotifyEvent': 'NotifyEvent',
                '../../UI/GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
                '../../UI/GameEntraScene/ImgCache': 'ImgCache',
                '../../awardcontroller/AwardController': 'AwardController',
                '../TaskItem': 'TaskItem',
                '../TaskSystem': 'TaskSystem',
                './NewGuidanceLoader': 'NewGuidanceLoader',
            },
        ],
        NewPlayerTargetParentPrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '22035czZuFMBIHBE0WKPkLD', 'NewPlayerTargetParentPrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../Logic/NotifyEvent'),
                    n = e('../../Logic/EventBus'),
                    a = e('../../UI/GameEntraScene/PrefabMgr'),
                    r = e('../../UI/GameEntraScene/mainpage/MainpageBaseComponent'),
                    s = e('./NewPlayerTargetPrefab'),
                    c = cc._decorator,
                    l = c.ccclass,
                    u =
                        (c.property,
                        (function (e) {
                            function t() {
                                return (null !== e && e.apply(this, arguments)) || this;
                            }
                            return (
                                __extends(t, e),
                                (t.prototype.onLoad = function () {
                                    var i = this;
                                    a.default.load('prefab/newtarget/NewPlayerTargetPrefab', function (e, t) {
                                        t &&
                                            (t.getComponent(s.default).setBtnClickCallback(function (e) {
                                                n.default.fire(o.default.NEW_GUIDE_GO_CLICK, e);
                                            }),
                                            i.node.addChild(t));
                                    });
                                }),
                                (t = __decorate([l], t))
                            );
                        })(r.default));
                (i.default = u), cc._RF.pop();
            },
            {
                '../../Logic/EventBus': 'EventBus',
                '../../Logic/NotifyEvent': 'NotifyEvent',
                '../../UI/GameEntraScene/PrefabMgr': 'PrefabMgr',
                '../../UI/GameEntraScene/mainpage/MainpageBaseComponent': 'MainpageBaseComponent',
                './NewPlayerTargetPrefab': 'NewPlayerTargetPrefab',
            },
        ],
        NewPlayerTargetPrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '1da35U0kVxM3pf3fYbv4LCk', 'NewPlayerTargetPrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../TaskSystem'),
                    l = e('../TaskItem'),
                    u = e('./NewPlayerTargerItemPrefab'),
                    d = e('./NewGuidanceLoader'),
                    n = e('../../Logic/NotifyEvent'),
                    a = e('../../Logic/EventBus'),
                    p = e('../../UI/GameEntraScene/PrefabMgr'),
                    r = cc._decorator,
                    s = r.ccclass,
                    c = r.property,
                    h = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.onLoad = function () {
                                this.addItem(),
                                    this.node.on(
                                        cc.Node.EventType.TOUCH_START,
                                        function (e) {
                                            e.stopPropagation();
                                        },
                                        this,
                                    );
                            }),
                            (t.prototype.setBtnClickCallback = function (e) {
                                this.mBtnClickCallback = e;
                            }),
                            (t.prototype.onDestroy = function () {
                                o.default.Ins().isNeedShowTaskSystemEntry() || a.default.fire(n.default.HIDE_GUIDE_FINGER);
                            }),
                            (t.prototype.addItem = function () {
                                var c = this;
                                o.default.Ins().loadData(function (e) {
                                    if (e) {
                                        if (!cc.isValid(c, !0)) return;
                                        var t = o.default.Ins().getTaskList();
                                        if (t) {
                                            var a,
                                                r = !1,
                                                s = !1;
                                            t.forEach(function (e) {
                                                e.status != l.TaskStatus.TASK_STATUS_SUCCESS || e.rewardTaken ? e.status == l.TaskStatus.TASK_STATUS_DOING && (r || (s = !0)) : (s = !(r = !0));
                                            }),
                                                p.default.load(
                                                    'prefab/newtarget/NewPlayerTargerItemPrefab',
                                                    function (e, o) {
                                                        if (cc.isValid(c, !0)) {
                                                            var n = !1;
                                                            if (
                                                                (t.forEach(function (e) {
                                                                    var t = cc.instantiate(o),
                                                                        i = t.getComponent(u.default);
                                                                    i.setData(e, c.node.parent), i.setToHomePageCallback(c.mBtnClickCallback), n || (r ? e.status != l.TaskStatus.TASK_STATUS_SUCCESS || e.rewardTaken || ((n = !0), (a = e)) : s && e.status == l.TaskStatus.TASK_STATUS_DOING && ((n = !0), (a = e))), c.mItemPanel.addChild(t);
                                                                }),
                                                                a && (a.status == l.TaskStatus.TASK_STATUS_DOING || (a.status == l.TaskStatus.TASK_STATUS_SUCCESS && !a.rewardTaken)))
                                                            )
                                                                switch (a.id) {
                                                                    case l.TaskID.TASK_ID_LITTLE_STAR:
                                                                        d.default.getInstance().showGuideFinger('NewPlayerTarget', 'NewPlayerTargetPrefab', 'GuideTargetBtnPlay', c.node.parent);
                                                                        break;
                                                                    case l.TaskID.TASK_ID_LEVEL_THREE:
                                                                        d.default.getInstance().showGuideFinger('NewPlayerTarget', 'NewPlayerTargetPrefab', 'GuideTargetBtnLevelThree', c.node.parent);
                                                                        break;
                                                                    case l.TaskID.TASK_ID_ATTEND_CHALLENGE:
                                                                        d.default.getInstance().showGuideFinger('NewPlayerTarget', 'NewPlayerTargetPrefab', 'GuideToBtnChallenge', c.node.parent);
                                                                        break;
                                                                    case l.TaskID.TASK_ID_GAME_SHARE:
                                                                        d.default.getInstance().showGuideFinger('NewPlayerTarget', 'NewPlayerTargetPrefab', 'GuideToBtnShare', c.node.parent);
                                                                        break;
                                                                    case l.TaskID.TASK_ID_UNLOCK_HOT_SONG:
                                                                        d.default.getInstance().showGuideFinger('NewPlayerTarget', 'NewPlayerTargetPrefab', 'GuideHotMusicBtn', c.node.parent);
                                                                }
                                                        }
                                                    },
                                                    !1,
                                                );
                                        }
                                    }
                                });
                            }),
                            __decorate([c(cc.Node)], t.prototype, 'mItemPanel', void 0),
                            (t = __decorate([s], t))
                        );
                    })(cc.Component);
                (i.default = h), cc._RF.pop();
            },
            {
                '../../Logic/EventBus': 'EventBus',
                '../../Logic/NotifyEvent': 'NotifyEvent',
                '../../UI/GameEntraScene/PrefabMgr': 'PrefabMgr',
                '../TaskItem': 'TaskItem',
                '../TaskSystem': 'TaskSystem',
                './NewGuidanceLoader': 'NewGuidanceLoader',
                './NewPlayerTargerItemPrefab': 'NewPlayerTargerItemPrefab',
            },
        ],
        NewRecordPrefb: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'c3eff2WNmBItIwDPiuZqAUu', 'NewRecordPrefb'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../MusicLevelDataLoader'),
                    r = e('../../../util/SUtil'),
                    u = e('../../../util/PU'),
                    d = e('../../../util/ParticleSystemVM'),
                    n = e('./BasicTouchEvent'),
                    s = e('./ToastPrefab'),
                    a = e('../../gameover/SaveSuccessPrefab'),
                    c = e('../../../../modules/MGAppShare/scripts/ShareImageUtils'),
                    l = e('../../../social/WXHelper'),
                    p = e('../../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    h = e('../../../base/Log'),
                    f = e('../../../../modules/MGAppShare/scripts/ShareImage'),
                    m = e('../../Network/Protocol/StorageUtil'),
                    g = e('../../../config/LSKey'),
                    _ = e('../../../../modules/MGAdv/scripts/Logic/MGAdvEntrance'),
                    y = e('../../../../modules/MGAdv/scripts/Logic/MGAdvDefine'),
                    S = e('../../../util/PU'),
                    v = e('../../../upgrade/BannerDelayShowToggle'),
                    I = e('../../../upgrade/ToggleBean'),
                    T = e('../../../../modules/MGUtils/MGPlatform'),
                    C = cc._decorator,
                    E = C.ccclass,
                    A = C.property,
                    P = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (
                                (e.mMusicNameLabel = null),
                                (e.mShareBtn = null),
                                (e.mCancelBtn = null),
                                (e.mTopTitleBg = null),
                                (e.mRankContainer = null),
                                (e.popupLayout = null),
                                (e.mSaveBtn = null),
                                (e.toastprefab = null),
                                (e.saveSuccessprefab = null),
                                (e.mFingerPanel = null),
                                (e.mAnimHideNode = null),
                                (e.mTipBgNode = null),
                                (e.mShareBtnPanel = null),
                                (e.closeBtn = null),
                                (e.mShareClickCallback = null),
                                (e.mCloseClickCallback = null),
                                (e.mSaveClickCallback = null),
                                (e.mQQBannerHidden = !1),
                                (e.mQQBannerHideInit = !1),
                                (e.QQ_BANNER_HIDDEN_WARNING = 'QQ banner is hidden by remote config'),
                                (e.QQ_BANNER_HIDDEN_WARNING_DEFAULT = 'QQ banner is hidden by DEFAULT'),
                                (e.mBannerStatus = {
                                    isShowed: !1,
                                    destroyed: !1,
                                    onLoadTime: Date.now(),
                                    isTimeout: function () {
                                        return 1e3 < Date.now() - this.onLoadTime;
                                    },
                                }),
                                e
                            );
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.onLoad = function () {
                                this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                }),
                                    this.adaptorUI(),
                                    this.initParticleSystem(),
                                    this.node.on(
                                        cc.Node.EventType.TOUCH_START,
                                        function (e) {
                                            e.stopPropagationImmediate();
                                        },
                                        this,
                                    ),
                                    this.showShareBtnAnim(),
                                    S.default.isQQ() && this.mQQBannerHidden ? h.default.w('AdvHelperQQ NewRecordPrefab.onLoad', this.mQQBannerHideInit ? this.QQ_BANNER_HIDDEN_WARNING : this.QQ_BANNER_HIDDEN_WARNING_DEFAULT) : (this.mBannerStatus.onLoadTime = Date.now());
                            }),
                            (e.prototype.preloadBannerAd = function () {
                                if (!S.default.isQQ() || !this.mQQBannerHidden) {
                                    var e = T.MGPlatform.getSystemInfoSync();
                                    _.MGAdv.loadBanner(300, 0, ((this.getCancelBtnTopShowBanner() + 40) * e.screenHeight) / r.SUtil.ins().mScreenHeight, null, y.ADScene.SCENE_SINGLESONG_FLAUNT_RESULT);
                                }
                            }),
                            (e.prototype.showShareBtnAnim = function () {
                                var t = this;
                                'true' != m.default.read(g.default.HAS_SHOW_SHARE_ANIM) &&
                                    (m.default.save(g.default.HAS_SHOW_SHARE_ANIM, 'true'),
                                    (this.mAnimHideNode.active = !0),
                                    (this.mTipBgNode.active = !0),
                                    (this.mFingerPanel.active = !0),
                                    this.mFingerPanel.getComponent(cc.Animation).play('guide_circle_scale'),
                                    this.mAnimHideNode.on(
                                        cc.Node.EventType.TOUCH_START,
                                        function (e) {
                                            t.mFingerPanel.getComponent(cc.Animation).stop('guide_circle_scale'), t.mTipBgNode.destroy(), t.mFingerPanel.destroy(), t.mAnimHideNode.destroy();
                                        },
                                        this,
                                    ),
                                    this.mAnimHideNode._touchListener && this.mAnimHideNode._touchListener.setSwallowTouches(!1));
                            }),
                            (e.prototype.initParticleSystem = function () {
                                if (u.default.particalSystemCompat) {
                                    var e = this.node.getChildByName('LP'),
                                        t = this.node.getChildByName('RP'),
                                        i = new d.ParticleSystemChild(!0, !0, 'LGreen', 'particle_levelupgreen_l.plist'),
                                        o = new d.ParticleSystemChild(!0, !0, 'LRed', 'particle_levelupred_l.plist'),
                                        n = new d.ParticleSystemChild(!0, !0, 'RBlue', 'particle_levelupblue_r.plist'),
                                        a = new d.ParticleSystemChild(!0, !0, 'RYellow', 'particle_yellow_r.plist'),
                                        r = [],
                                        s = [];
                                    r.push(i), r.push(o), s.push(n), s.push(a);
                                    var c = new d.ParticleSystemVM(e, r),
                                        l = new d.ParticleSystemVM(t, s);
                                    c.start(), l.start();
                                }
                            }),
                            (e.prototype.start = function () {
                                var e = this;
                                this.adaptorUI(), this.mShareBtn.getComponent(cc.Animation).play('fluent_btn_bigger');
                                var t = o.MusicLevelDataLoader.getIndex(this.mLevelId);
                                (this.mMusicNameLabel.string = t + '.' + this.mMusicName),
                                    (this.mShareClickCallback = new n.default(function () {
                                        e.onShareClick();
                                    })),
                                    this.mShareBtn.node.on(cc.Node.EventType.TOUCH_END, this.mShareClickCallback.click, this.mShareClickCallback),
                                    (this.mCloseClickCallback = new n.default(function () {
                                        e.onCloseClick();
                                    })),
                                    this.mCancelBtn.node.on(cc.Node.EventType.TOUCH_END, this.mCloseClickCallback.click, this.mCloseClickCallback),
                                    this.closeBtn.node.on(cc.Node.EventType.TOUCH_END, this.mCloseClickCallback.click, this.mCloseClickCallback),
                                    (this.mSaveClickCallback = new n.default(function () {
                                        e.onSaveClick();
                                    })),
                                    this.mSaveBtn.node.on(cc.Node.EventType.TOUCH_END, this.mSaveClickCallback.click, this.mSaveClickCallback);
                            }),
                            (e.prototype.onShareClick = function () {
                                this.mShareListener(this.mShareType);
                            }),
                            (e.prototype.onCloseClick = function () {
                                this.mCancelListener();
                            }),
                            (e.prototype.onSaveClick = function () {
                                var i = this,
                                    o = this.showLoadToast(),
                                    n = o.getComponent(s.default),
                                    a = new c.default();
                                cc.sys.platform == cc.sys.WECHAT_GAME &&
                                    p.MGUser.getUserBasicInfo({
                                        complete: function (e) {
                                            if (e) {
                                                e.nickName;
                                                var t = e.avatarUrl;
                                                a.setNewRecordShareFds(t, i.mMusicName, i.mCurrentScore),
                                                    a.getShareImage(f.ShareImage.TYPE_SHARE_NEW_RECORD_FDS, function (e, t) {
                                                        console.log('[zhangfu] result = ' + e + ' , path = ' + t),
                                                            e
                                                                ? (n.showLoading('正在保存图片...'),
                                                                  l.WXHelper.saveTmpImgToAlbum(
                                                                      t,
                                                                      function () {
                                                                          o.destroy(), i.showSaveSuccess();
                                                                      },
                                                                      function () {
                                                                          n.showLoadFail(function () {
                                                                              o.destroy();
                                                                          });
                                                                      },
                                                                      function () {},
                                                                  ))
                                                                : n.showLoadFail(function () {
                                                                      o.destroy();
                                                                  });
                                                    });
                                            }
                                        },
                                    });
                            }),
                            (e.prototype.showLoadToast = function () {
                                var e = cc.instantiate(this.toastprefab);
                                return e.getComponent(s.default).showLoading('正在生成图片...'), this.popupLayout.node.addChild(e), e;
                            }),
                            (e.prototype.showSaveSuccess = function () {
                                var e = cc.instantiate(this.saveSuccessprefab);
                                e.getComponent(a.default).setTips('快发送朋友圈炫耀战绩吧!'), this.popupLayout.node.addChild(e);
                            }),
                            (e.prototype.setData = function (e, t, i, o, n, a) {
                                (this.mMusicMid = e), (this.mLevelId = t), (this.mMusicName = i), (this.mCurrentScore = o), (this.mBestScore = n), (this.mMusicGrade = a);
                            }),
                            (e.prototype.setListener = function (e, t) {
                                (this.mShareListener = e), (this.mCancelListener = t);
                            }),
                            (e.prototype.setQQBannerHidden = function (e, t) {
                                (this.mQQBannerHideInit = e), (this.mQQBannerHidden = t);
                            }),
                            (e.prototype.adaptorUI = function () {
                                u.default.isQQ() ? (r.SUtil.ins().isLiuHai() ? (r.SUtil.ins().toTopByPx(this.mRankContainer, 35), r.SUtil.ins().toTopByPx(this.mTopTitleBg, 234), r.SUtil.ins().toTopByPx(this.closeBtn, 234), r.SUtil.ins().toTopByPx(this.mShareBtnPanel, 1252), r.SUtil.ins().toTopByPx(this.mCancelBtn, 1419)) : r.SUtil.ins().isQuanMian() && (r.SUtil.ins().toTopByPx(this.mRankContainer, 73), r.SUtil.ins().toTopByPx(this.mTopTitleBg, 175), r.SUtil.ins().toTopByPx(this.closeBtn, 175), r.SUtil.ins().toTopByPx(this.mShareBtnPanel, 1160), r.SUtil.ins().toTopByPx(this.mCancelBtn, 1327))) : (u.default.isWeiXin() || u.default.isWeb()) && (r.SUtil.ins().isLiuHai() ? (r.SUtil.ins().toTopByPx(this.mRankContainer, 35), r.SUtil.ins().toTopByPx(this.mTopTitleBg, 234), r.SUtil.ins().toTopByPx(this.closeBtn, 234), r.SUtil.ins().toTopByPx(this.mShareBtnPanel, 1252), r.SUtil.ins().toTopByPx(this.mCancelBtn, 1419)) : r.SUtil.ins().isQuanMian() && (r.SUtil.ins().toTopByPx(this.mRankContainer, 73), r.SUtil.ins().toTopByPx(this.mTopTitleBg, 175), r.SUtil.ins().toTopByPx(this.closeBtn, 175), r.SUtil.ins().toTopByPx(this.mShareBtnPanel, 1160), r.SUtil.ins().toTopByPx(this.mCancelBtn, 1327)));
                            }),
                            (e.prototype.adaptorADUI = function () {
                                u.default.isQQ() ? (r.SUtil.ins().isLiuHai() ? (r.SUtil.ins().toTopByPx(this.mRankContainer, 20), r.SUtil.ins().toTopByPx(this.mTopTitleBg, 234), r.SUtil.ins().toTopByPx(this.closeBtn, 234), r.SUtil.ins().toTopByPx(this.mShareBtnPanel, 1122)) : r.SUtil.ins().isQuanMian() ? (r.SUtil.ins().toTopByPx(this.mRankContainer, 63), r.SUtil.ins().toTopByPx(this.mTopTitleBg, 165), r.SUtil.ins().toTopByPx(this.closeBtn, 165), r.SUtil.ins().toTopByPx(this.mShareBtnPanel, 1040)) : (r.SUtil.ins().toTopByPx(this.mRankContainer, -100), r.SUtil.ins().toTopByPx(this.mTopTitleBg, 175), r.SUtil.ins().toTopByPx(this.closeBtn, 175), r.SUtil.ins().toTopByPx(this.mShareBtnPanel, 860))) : (u.default.isWeiXin() || u.default.isWeb()) && (r.SUtil.ins().isLiuHai() ? (r.SUtil.ins().toTopByPx(this.mRankContainer, 35), r.SUtil.ins().toTopByPx(this.mTopTitleBg, 234), r.SUtil.ins().toTopByPx(this.closeBtn, 234), r.SUtil.ins().toTopByPx(this.mShareBtnPanel, 1072)) : r.SUtil.ins().isQuanMian() ? (r.SUtil.ins().toTopByPx(this.mRankContainer, 73), r.SUtil.ins().toTopByPx(this.mTopTitleBg, 175), r.SUtil.ins().toTopByPx(this.closeBtn, 175), r.SUtil.ins().toTopByPx(this.mShareBtnPanel, 1060)) : (r.SUtil.ins().toTopByPx(this.mRankContainer, -100), r.SUtil.ins().toTopByPx(this.mTopTitleBg, 175), r.SUtil.ins().toTopByPx(this.closeBtn, 175), r.SUtil.ins().toTopByPx(this.mShareBtnPanel, 860))), r.SUtil.ins().toTopByPx(this.mCancelBtn, this.getCancelBtnTopShowBanner());
                            }),
                            (e.prototype.getCancelBtnTopShowBanner = function () {
                                return u.default.isQQ() ? (r.SUtil.ins().isLiuHai() ? 1277 : r.SUtil.ins().isQuanMian() ? 1185 : 1e3) : u.default.isWeiXin() || u.default.isWeb() ? (r.SUtil.ins().isLiuHai() ? 1217 : r.SUtil.ins().isQuanMian() ? 1205 : 1e3) : void 0;
                            }),
                            (e.prototype.update = function () {
                                _.MGAdv.isOverPageBannerShow() && S.default.isWeiXin() && _.MGAdv.hideBanner(y.ADScene.GAME_RESULT_BANNER), this.mBannerStatus.isShowed || (this.mBannerStatus.isTimeout() && ((this.mBannerStatus.isShowed = !0), this.showBannerAd()));
                            }),
                            (e.prototype.onDestroy = function () {
                                this.destoryBannerAd();
                            }),
                            (e.prototype.showBannerAd = function () {
                                var o = this;
                                if (!S.default.isWeb()) {
                                    var e = void 0,
                                        t = void 0,
                                        i = void 0;
                                    if (S.default.isQQ()) {
                                        if (this.mQQBannerHidden) return void h.default.w('AdvHelperQQ NewRecordPrefab.showBannerAd', this.mQQBannerHideInit ? this.QQ_BANNER_HIDDEN_WARNING : this.QQ_BANNER_HIDDEN_WARNING_DEFAULT);
                                        i = t = e = 0;
                                    } else if (S.default.isWeiXin()) {
                                        var n = wx.getSystemInfoSync();
                                        (e = n.screenWidth), (t = ((this.getCancelBtnTopShowBanner() + 40) * n.screenHeight) / r.SUtil.ins().mScreenHeight), (i = 0);
                                    }
                                    if (_.MGAdv.isBannerCached(y.ADScene.SCENE_SINGLESONG_FLAUNT_RESULT)) {
                                        var a = v.default.getBannerDelayTime(I.ToggleKey.BANNER_DELAY_NORMAL_RESULT_SHOW_OFF);
                                        this.scheduleOnce(function () {
                                            cc.isValid(o, !0) &&
                                                _.MGAdv.showBanner(y.ADScene.SCENE_SINGLESONG_FLAUNT_RESULT, function () {
                                                    o.adaptorADUI();
                                                });
                                        }, a.normalDelayTime / 1e3);
                                    } else
                                        _.MGAdv.loadBanner(
                                            e,
                                            i,
                                            t,
                                            function (e, t) {
                                                if (e == y.ADStat.LOAD_SUCCESS)
                                                    if (o.isValid && !o.mBannerStatus.destroyed) {
                                                        var i = v.default.getBannerDelayTime(I.ToggleKey.BANNER_DELAY_NORMAL_RESULT_SHOW_OFF);
                                                        o.scheduleOnce(function () {
                                                            cc.isValid(o, !0) &&
                                                                _.MGAdv.showBanner(y.ADScene.SCENE_SINGLESONG_FLAUNT_RESULT, function () {
                                                                    o.adaptorADUI();
                                                                });
                                                        }, i.normalDelayTime / 1e3);
                                                    } else _.MGAdv.hideBanner(y.ADScene.SCENE_SINGLESONG_FLAUNT_RESULT), _.MGAdv.destroyBanner(y.ADScene.SCENE_SINGLESONG_FLAUNT_RESULT);
                                            },
                                            y.ADScene.SCENE_SINGLESONG_FLAUNT_RESULT,
                                        );
                                }
                            }),
                            (e.prototype.destoryBannerAd = function () {
                                this.mBannerStatus.destroyed || (S.default.isQQ() && this.mQQBannerHidden) || ((this.mBannerStatus.destroyed = !0), _.MGAdv.hideBanner(y.ADScene.SCENE_SINGLESONG_FLAUNT_RESULT), _.MGAdv.destroyBanner(y.ADScene.SCENE_SINGLESONG_FLAUNT_RESULT));
                            }),
                            __decorate([A(cc.Label)], e.prototype, 'mMusicNameLabel', void 0),
                            __decorate([A(cc.Button)], e.prototype, 'mShareBtn', void 0),
                            __decorate([A(cc.Label)], e.prototype, 'mCancelBtn', void 0),
                            __decorate([A(cc.Sprite)], e.prototype, 'mTopTitleBg', void 0),
                            __decorate([A(cc.Node)], e.prototype, 'mRankContainer', void 0),
                            __decorate([A(cc.Layout)], e.prototype, 'popupLayout', void 0),
                            __decorate([A(cc.Label)], e.prototype, 'mSaveBtn', void 0),
                            __decorate([A(cc.Prefab)], e.prototype, 'toastprefab', void 0),
                            __decorate([A(cc.Prefab)], e.prototype, 'saveSuccessprefab', void 0),
                            __decorate([A(cc.Node)], e.prototype, 'mFingerPanel', void 0),
                            __decorate([A(cc.Node)], e.prototype, 'mAnimHideNode', void 0),
                            __decorate([A(cc.Node)], e.prototype, 'mTipBgNode', void 0),
                            __decorate([A(cc.Node)], e.prototype, 'mShareBtnPanel', void 0),
                            __decorate([A(cc.Button)], e.prototype, 'closeBtn', void 0),
                            (e = __decorate([E], e))
                        );
                    })(cc.Component);
                (i.default = P), cc._RF.pop();
            },
            {
                '../../../../modules/MGAdv/scripts/Logic/MGAdvDefine': 'MGAdvDefine',
                '../../../../modules/MGAdv/scripts/Logic/MGAdvEntrance': 'MGAdvEntrance',
                '../../../../modules/MGAppShare/scripts/ShareImage': 'ShareImage',
                '../../../../modules/MGAppShare/scripts/ShareImageUtils': 'ShareImageUtils',
                '../../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../../../modules/MGUtils/MGPlatform': 'MGPlatform',
                '../../../base/Log': 'Log',
                '../../../config/LSKey': 'LSKey',
                '../../../social/WXHelper': 'WXHelper',
                '../../../upgrade/BannerDelayShowToggle': 'BannerDelayShowToggle',
                '../../../upgrade/ToggleBean': 'ToggleBean',
                '../../../util/PU': 'PU',
                '../../../util/ParticleSystemVM': 'ParticleSystemVM',
                '../../../util/SUtil': 'SUtil',
                '../../Network/Protocol/StorageUtil': 'StorageUtil',
                '../../gameover/SaveSuccessPrefab': 'SaveSuccessPrefab',
                '../MusicLevelDataLoader': 'MusicLevelDataLoader',
                './BasicTouchEvent': 'BasicTouchEvent',
                './ToastPrefab': 'ToastPrefab',
            },
        ],
        NodeCreateHelper: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'c285fboDG1F+JYkwKWCG2FQ', 'NodeCreateHelper'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o,
                    n = e('./ReuseNode'),
                    s = e('../../MUI/MUISprite');
                ((o = i.NodeCreateHelper || (i.NodeCreateHelper = {})).createStartNode = function (e) {
                    var t = new n.default('label');
                    return t.setPosition(e.rect.width / 2, e.rect.height / 2), t.setContentSize(e.rect.width, e.rect.height), t;
                }),
                    (o.createScaleNode = function (e, t, i) {
                        void 0 === i && (i = !1);
                        var o = new cc.Size(t.rect.width, t.rect.height),
                            n = new s.default();
                        n.setContentSize(o.width, o.height);
                        var a = e.rect.width / o.width,
                            r = a;
                        return i && (r = e.rect.height / o.height), n.setScale(a, r), (n.imageItem = t), n;
                    }),
                    (o.createNodeForceScale = function (e, t, i) {
                        void 0 === i && (i = 0);
                        var o = new cc.Size(e.rect.width, e.rect.height),
                            n = new s.default();
                        return n.setContentSize(o.width, o.height), n.setScale(t, 0 == i ? t : i), (n.imageItem = e), n;
                    }),
                    cc._RF.pop();
            },
            {
                '../../MUI/MUISprite': 'MUISprite',
                './ReuseNode': 'ReuseNode',
            },
        ],
        NodeFacade: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'a3e15q7CTlB8pQVi+O1pubs', 'NodeFacade'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function t(e) {
                        this.node = e;
                    }
                    return (
                        (t.prototype.getNode = function () {
                            return this.node;
                        }),
                        (t.prototype.getChild = function (e) {
                            return new t(this.node ? this.node.getChildByName(e) : null);
                        }),
                        (t.prototype.setVisible = function (e) {
                            this.node && (this.node.active = e);
                        }),
                        (t.prototype.setOpacity = function (e) {
                            this.node && (this.node.opacity = e);
                        }),
                        (t.prototype.setChildVisible = function (e, t) {
                            if (this.node) {
                                var i = this.node.getChildByName(e);
                                i && (i.active = t);
                            }
                        }),
                        (t.prototype.isChildVisible = function (e) {
                            if (!this.node) return !1;
                            var t = this.node.getChildByName(e);
                            return !!t && t.active;
                        }),
                        (t.prototype.setChildText = function (e, t) {
                            if (this.node) {
                                var i = this.node.getChildByName(e);
                                if (i) {
                                    var o = i.getComponent(cc.Label);
                                    o && (o.string = t);
                                }
                            }
                        }),
                        (t.prototype.setChildSpriteFrame = function (e, t) {
                            if (this.node) {
                                var i = this.node.getChildByName(e);
                                if (i) {
                                    var o = i.getComponent(cc.Sprite);
                                    o && (o.spriteFrame = t);
                                }
                            }
                        }),
                        t
                    );
                })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        NodesPool: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '374f3HMFdhNLb8dTw3PiCYY', 'NodesPool'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {
                        (this.mNodes = new Map()), (this.mPrefabs = new Map());
                    }
                    return (
                        (e.Ins = function () {
                            return this._s || (this._s = new e()), this._s;
                        }),
                        (e.prototype.isPrefabSettled = function (e) {
                            var t = this.mPrefabs.get(e);
                            return null != t && null != t;
                        }),
                        (e.prototype.setPrefabs = function (e, t) {
                            this.mPrefabs.set(e, t);
                        }),
                        (e.prototype.pop = function (e) {
                            var t = this.mNodes.get(e);
                            t || ((t = []), this.mNodes.set(e, t));
                            var i = null;
                            if (0 < t.length) i = t.pop();
                            else {
                                var o = this.mPrefabs.get(e);
                                o && ((i = cc.instantiate(o)).active = !0);
                            }
                            return i;
                        }),
                        (e.prototype.returnBack = function (e, t) {
                            if (t) {
                                var i = this.mNodes.get(e);
                                i || ((i = []), this.mNodes.set(e, i)), i.push(t), t.removeFromParent(!1);
                            }
                        }),
                        e
                    );
                })();
                (i.NodesPool = o), cc._RF.pop();
            },
            {},
        ],
        NormalGainCrownTask: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '50b01Mgxx1CbZWk8QxhDFfb', 'NormalGainCrownTask'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return __extends(t, e), (t.prototype.initTask = function (e) {}), t;
                })(e('../SkinTaskItem').default);
                (i.default = o), cc._RF.pop();
            },
            {
                '../SkinTaskItem': 'SkinTaskItem',
            },
        ],
        NormalGameScene: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '4e2aduLIn9NBaeQVV05+phJ', 'NormalGameScene'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (i) {
                    function e(e, t) {
                        return i.call(this, e, t) || this;
                    }
                    return (
                        __extends(e, i),
                        (e.prototype.allowProperty = function () {
                            return !0;
                        }),
                        e
                    );
                })(e('./GameScene').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './GameScene': 'GameScene',
            },
        ],
        NormalMusicCardItemPrefb: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'befd7stITZDg5aRIaPRQ5gR', 'NormalMusicCardItemPrefb'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../BasicTouchEvent'),
                    n = e('../../../Logic/EventBus'),
                    a = e('../../../Logic/NotifyEvent'),
                    s = e('../../../../infoc/m_p2_Uaction'),
                    c = e('../../../Logic/Plugin/PluginMgr'),
                    l = e('../../../Logic/Plugin/IPlugin'),
                    u = e('../../../../base/G'),
                    d = e('../../../../base/State'),
                    p = e('../../UserInfoManager'),
                    h = e('../ImgCache'),
                    f = e('../../../skin/SkinUtils'),
                    m = e('../../../../gamescene/GameSceneSetting'),
                    g = e('../../../Network/Protocol/StorageUtil'),
                    _ = e('../../../../config/LSKey'),
                    y = e('../../../../util/PU'),
                    S = e('../../../Logic/I18nManager'),
                    v = e('../../../../util/StringUtil'),
                    I = e('../../../../../modules/MGAdv/scripts/Logic/MGAdvDefine'),
                    T = e('../../../../../modules/MGAdv/scripts/Logic/MGAdvEntrance'),
                    r = cc._decorator,
                    C = r.ccclass,
                    E = r.property,
                    A = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mLevellayout = null), (e.mLevelValueLabel = null), (e.mMusicIndexLabel = null), (e.mMusicName = null), (e.mMusicianLabel = null), (e.mStarIconGroup = null), (e.mStarIcon1 = null), (e.mStarIcon2 = null), (e.mStarIcon3 = null), (e.mRankBtn = null), (e.mStartBtn = null), (e.mOpenLevelLabel = null), (e.mBg = null), (e.mExceptMoreLabel = null), (e.mNormalBg = null), (e.mSpecialBg = null), (e.mSpecMusicNameLabe = null), (e.mSpecMusicianLabel = null), (e.mSpecMusicIndexLabel = null), (e.mSpecStarConditionLable = null), (e.itemID = 0), (e.mMusicNameStr = ''), (e.mMusicianStr = ''), (e.mLevelId = 0), (e.mMusicID = 0), (e.mMusicLevel = 0), (e.mUnlockType = null), (e.mIsLocked = !1), (e.mStarNumber = 0), (e.mIndex = 0), (e.mStartBtnClickEvent = null), (e.mRankBtnClickEvent = null), (e.mIsUpdateViewOnLoad = !1), (e.mIsSpecial = !1), (e.mSource = r.SOURCE_DEFAULT), e;
                        }
                        var r;
                        return (
                            __extends(e, t),
                            ((r = e).prototype.setSource = function (e) {
                                this.mSource = e;
                            }),
                            (e.prototype.onLoad = function () {
                                S.default.getInstance().isEnglish() ? null != this.mMusicianLabel && (this.mMusicianLabel.node.active = !1) : (null != this.mMusicName && ((this.mMusicName.node.x = this.mMusicName.node.x - 15), (this.mMusicName.node.y = this.mMusicName.node.y + 38)), null != this.mMusicianLabel && (this.mMusicianLabel.node.active = !0)), this.initCMView(), this.registerEvents();
                            }),
                            (e.prototype.initCMView = function () {
                                y.default.isCM() && ((this.mRankBtn.node.active = !1), (this.mSpecRankIcon.node.active = !1));
                            }),
                            (e.prototype.registerEvents = function () {
                                var t = this;
                                (this.mRankBtnClickEvent = new o.default(function () {
                                    t.rankBtnClickCallback();
                                })),
                                    this.mSpecRankIcon.node.on(cc.Node.EventType.TOUCH_END, this.mRankBtnClickEvent.click, this.mRankBtnClickEvent),
                                    this.mRankBtn.node.on(cc.Node.EventType.TOUCH_END, this.mRankBtnClickEvent.click, this.mRankBtnClickEvent),
                                    (this.mStartBtnClickEvent = new o.default(function () {
                                        var e = I.ADScene.PLAY_AGAIN;
                                        T.MGAdv.commercialBreak(e, I.QQ_ADV_TYPE.VIDEO_TYPE_PLAY_AGAIN, function (e) {
                                            t.startBtnClickCallback();
                                        });
                                    })),
                                    this.mSpecStartBtn.node.on(cc.Node.EventType.TOUCH_END, this.mStartBtnClickEvent.click, this.mStartBtnClickEvent),
                                    this.mSpecStartBtn.node.on(
                                        cc.Node.EventType.TOUCH_START,
                                        function () {
                                            n.default.fire(a.default.SHOW_HOMEPAGE_EVENT_TOP_MASK);
                                        },
                                        this,
                                    ),
                                    this.mSpecStartBtn.node.on(
                                        cc.Node.EventType.TOUCH_CANCEL,
                                        function () {
                                            n.default.fire(a.default.HIDE_HOMEPAGE_EVENT_TOP_MASK);
                                        },
                                        this,
                                    ),
                                    this.mStartBtn.node.on(cc.Node.EventType.TOUCH_END, this.mStartBtnClickEvent.click, this.mStartBtnClickEvent),
                                    this.mStartBtn.node.on(
                                        cc.Node.EventType.TOUCH_START,
                                        function () {
                                            n.default.fire(a.default.SHOW_HOMEPAGE_EVENT_TOP_MASK);
                                        },
                                        this,
                                    ),
                                    this.mStartBtn.node.on(
                                        cc.Node.EventType.TOUCH_CANCEL,
                                        function () {
                                            n.default.fire(a.default.HIDE_HOMEPAGE_EVENT_TOP_MASK);
                                        },
                                        this,
                                    );
                            }),
                            (e.prototype.unregisterEvents = function () {}),
                            (e.prototype.rankBtnClickCallback = function () {}),
                            (e.prototype.startBtnClickCallback = function () {
                                if ((this.mIsUpdateViewOnLoad || s.default.report(this.mMusicID, s.default.ACTION_CLICK_MUSICLIB_START), !c.default.Ins().getPlugin(l.default.Plugin_Energy).isCurEnergyEnough())) return n.default.fire(a.default.HP_NOT_ENOUGH_ITEM_CLICK), void n.default.fire(a.default.HIDE_HOMEPAGE_EVENT_TOP_MASK);
                                if (this.mIsUpdateViewOnLoad) this.startMusic();
                                else {
                                    var e = cc.director.getWinSize().height,
                                        t = this.node.parent.convertToWorldSpaceAR(this.node.getPosition());
                                    this.mIsSpecial ? (t.y = t.y - this.node.height + this.mStartBtn.node.height / 2 + 22 - 46 - (e - 1280) / 2) : (t.y = t.y - this.node.height + this.mStartBtn.node.height / 2 + 22 - (e - 1280) / 2), (t.x = t.x + this.node.width / 2 - this.mStartBtn.node.width / 2), this.startMusic();
                                }
                            }),
                            (e.prototype.startMusic = function () {
                                if (f.default.needTryInviteSkinSpecSong(this.mMusicID) && this.mSource == r.SOURCE_UPDATE_CONTENT) n.default.fire(a.default.SPEC_SONG_TRY_SKIN_RESULT);
                                else {
                                    var e = c.default.Ins().getPlugin(l.default.Plugin_Energy);
                                    u.G.Ap.state.reset(), (u.G.Ap.state.mission = new d.Mission(this.mLevelId, this.mMusicID, !1));
                                    var t = 0;
                                    this.mSource == r.SOURCE_UPDATE_CONTENT && ((t = 4), m.default.getInstance().setFromSource(m.FromSource.SOURCE_RESULT_UPGRADE)), g.default.save(_.default.OPEN_GAMEOVER_FROM, '1'), n.default.fire(a.default.LOAD_MUSIC, t, e);
                                }
                            }),
                            (e.prototype.start = function () {}),
                            (e.prototype.showExceptMore = function () {
                                (this.mBg.spriteFrame = null), (this.mNormalBg.active = !1), (this.mSpecialBg.node.active = !1), (this.mExceptMoreLabel.node.x = 0);
                            }),
                            (e.prototype.hideException = function () {
                                this.mExceptMoreLabel.node.x = 5e3;
                            }),
                            (e.prototype.setData = function (e, t, i) {
                                if (((this.mIsSpecial = e.isCrownLock), !0 === i)) (this.mIsUpdateViewOnLoad = !0), this.hideException(), (this.mLevellayout.node.active = !1);
                                else {
                                    if (e.id == r.exceptionMoreId) return this.showExceptMore(), void (this.itemID = t);
                                    this.hideException();
                                }
                                if (((this.mMusicNameStr = e.musicName), (this.mMusicianStr = e.musician), (this.mMusicID = e.musicId), (this.mMusicLevel = e.level), (this.mUnlockType = e.unlockType), (this.mIsLocked = e.isLocked), (this.mLevelId = e.id), (this.mStarNumber = e.bestStar), (this.mIndex = e.index), this.mIsSpecial)) {
                                    if (((this.mSpecialBg.node.active = !0), (this.mNormalBg.active = !1), (this.mStartBtn.node.active = !1), (this.mSpecMusicNameLabe.string = this.mMusicNameStr), (this.mSpecMusicIndexLabel.string = this.mIndex + ''), (this.mSpecMusicianLabel.string = this.mMusicianStr), p.User.UserInfoManager.getUserInfo().level < e.level)) {
                                        (this.mSpecCrownNode.active = !1), (this.mSpecStarNode.active = !1), (this.mSpecStartBtn.node.active = !1), (this.mSpecUnlockLevelLabel.node.active = !0), (this.mSpecStarConditionLable.node.active = !1), (this.mSpecUnlockStarNode.active = !1), (this.mSpecMusicNameLabe.node.color = cc.Color.BLACK.fromHEX('#92A7B8')), (this.mSpecMusicianLabel.node.color = cc.Color.BLACK.fromHEX('#ACC2CE'));
                                        var o = S.default.getInstance().getLanguageByKey('label_text.level'),
                                            n = S.default.getInstance().getLanguageByKey('label_text.unlock');
                                        this.mSpecUnlockLevelLabel.string = o + ' ' + e.level + ' ' + n;
                                    } else if (((this.mSpecMusicNameLabe.node.color = cc.Color.BLACK.fromHEX('#214962')), (this.mSpecMusicianLabel.node.color = cc.Color.BLACK.fromHEX('#ACC2CE')), (this.mSpecUnlockLevelLabel.node.active = !1), 0 < e.needStarNum))
                                        if (e.curTotalStarNum < e.needStarNum) {
                                            (this.mSpecStarNode.active = !1), (this.mSpecCrownNode.active = !1), (this.mSpecStarConditionLable.node.active = !0);
                                            var a = v.StringUtil.format(S.default.getInstance().getLanguageByKey('label_text.music_unlock_msg1'), e.level, e.needStarNum);
                                            (this.mSpecStarConditionLable.string = a),
                                                (this.mSpecUnlockStarNode.active = !0),
                                                (this.mSpecStarConditionWidthIconLable.string = e.curTotalStarNum + '/' + e.needStarNum),
                                                (this.mSpecStartBtn.node.active = !1),
                                                h.default.get(
                                                    '/musiclist/music_list_star_get',
                                                    function (e, t) {
                                                        cc.isValid(this.node) && ((this.mSpecUnlockMarkSprite.spriteFrame = t), (this.mSpecUnlockMarkSprite.node.width = 44), (this.mSpecUnlockMarkSprite.node.height = 54));
                                                    }.bind(this),
                                                );
                                        } else (this.mSpecStarConditionLable.node.active = !1), (this.mSpecUnlockStarNode.active = !1), (this.mSpecStartBtn.node.active = !0), (this.mSpecStartBtnLabel.string = S.default.getInstance().getLanguageByKey('label_text.music_start1')), this.setLevelIconForSpecial(this.mStarNumber);
                                    else if (0 < e.needCrownNum)
                                        if (e.curTotalCrownNum < e.needCrownNum) {
                                            (this.mSpecStarNode.active = !1), (this.mSpecCrownNode.active = !1), (this.mSpecStarConditionLable.node.active = !0);
                                            a = v.StringUtil.format(S.default.getInstance().getLanguageByKey('label_text.music_unlock_msg3'), e.level, e.needCrownNum);
                                            (this.mSpecStarConditionLable.string = a),
                                                (this.mSpecUnlockStarNode.active = !0),
                                                (this.mSpecStarConditionWidthIconLable.string = e.curTotalCrownNum + '/' + e.needCrownNum),
                                                (this.mSpecStartBtn.node.active = !1),
                                                h.default.get(
                                                    '/musiclist/music_list_crown_get',
                                                    function (e, t) {
                                                        cc.isValid(this.node) && ((this.mSpecUnlockMarkSprite.spriteFrame = t), (this.mSpecUnlockMarkSprite.node.width = 48), (this.mSpecUnlockMarkSprite.node.height = 46));
                                                    }.bind(this),
                                                );
                                        } else (this.mSpecStarConditionLable.node.active = !1), (this.mSpecUnlockStarNode.active = !1), (this.mSpecStartBtn.node.active = !0), (this.mSpecStartBtnLabel.string = S.default.getInstance().getLanguageByKey('label_text.music_start1')), this.setLevelIconForSpecial(this.mStarNumber);
                                } else (this.mMusicIndexLabel.string = e.index + ''), (this.mMusicName.string = e.musicName), (this.mMusicianLabel.string = e.musician), (this.mNormalBg.active = !0), (this.mStartBtn.node.active = !0), (this.mSpecialBg.node.active = !1), this.setStarOrCrownSpriteFrame(), this.changeBgIfLocked();
                                i || (this.itemID = t);
                            }),
                            (e.prototype.setStarOrCrownSpriteFrame = function () {
                                if (this.mIsLocked) {
                                    (this.mStarIconGroup.node.active = !1), (this.mStartBtn.node.active = !1), (this.mOpenLevelLabel.node.active = !0);
                                    var e = S.default.getInstance().getLanguageByKey('label_text.level'),
                                        t = S.default.getInstance().getLanguageByKey('label_text.unlock');
                                    this.mOpenLevelLabel.string = e + ' ' + this.mMusicLevel + ' ' + t;
                                } else (this.mOpenLevelLabel.node.active = !1), (this.mStartBtn.node.active = !0), (this.mStarIconGroup.node.active = !0), this.setLevelIcon(this.mStarNumber);
                            }),
                            (e.prototype.changeBgIfLocked = function () {
                                var e = this.mIsLocked,
                                    t = this.mStarNumber;
                                e
                                    ? (h.default.getMusicItemBgImage(
                                          '/musiclist/music_list_item_bg',
                                          'bg_music_list_item_lock',
                                          function (e, t) {
                                              cc.isValid(this.node) && (this.mBg.spriteFrame = t);
                                          }.bind(this),
                                      ),
                                      (this.mMusicName.node.color = cc.Color.BLACK.fromHEX('#92A7B8')),
                                      (this.mMusicianLabel.node.color = cc.Color.BLACK.fromHEX('#BCCED7')))
                                    : (t < 4
                                          ? h.default.getMusicItemBgImage(
                                                '/musiclist/music_list_item_bg',
                                                'bg_music_list_item_star',
                                                function (e, t) {
                                                    cc.isValid(this.node) && (this.mBg.spriteFrame = t);
                                                }.bind(this),
                                            )
                                          : h.default.getMusicItemBgImage(
                                                '/musiclist/music_list_item_bg',
                                                'bg_music_list_item_crown',
                                                function (e, t) {
                                                    cc.isValid(this.node) && (this.mBg.spriteFrame = t);
                                                }.bind(this),
                                            ),
                                      (this.mMusicName.node.color = cc.Color.BLACK.fromHEX('#214962')),
                                      (this.mMusicianLabel.node.color = cc.Color.BLACK.fromHEX('#ACC2CE')));
                            }),
                            (e.prototype.setLevelIconForSpecial = function (e) {
                                switch ((3 < e ? ((this.mSpecStarNode.active = !1), (this.mSpecCrownNode.active = !0)) : ((this.mSpecStarNode.active = !0), (this.mSpecCrownNode.active = !1)), e)) {
                                    case 0:
                                        h.default.get(
                                            '/musiclist/music_list_star_unget',
                                            function (e, t) {
                                                cc.isValid(this, !0) && ((this.mSpecStar1.spriteFrame = t), (this.mSpecStar2.spriteFrame = t), (this.mSpecStar3.spriteFrame = t));
                                            }.bind(this),
                                        );
                                        break;
                                    case 1:
                                        h.default.get(
                                            '/musiclist/music_list_star_get',
                                            function (e, t) {
                                                cc.isValid(this.node) && (this.mSpecStar1.spriteFrame = t);
                                            }.bind(this),
                                        ),
                                            h.default.get(
                                                '/musiclist/music_list_star_unget',
                                                function (e, t) {
                                                    cc.isValid(this.node) && ((this.mSpecStar2.spriteFrame = t), (this.mSpecStar3.spriteFrame = t));
                                                }.bind(this),
                                            );
                                        break;
                                    case 2:
                                        h.default.get(
                                            '/musiclist/music_list_star_get',
                                            function (e, t) {
                                                cc.isValid(this.node) && ((this.mSpecStar1.spriteFrame = t), (this.mSpecStar2.spriteFrame = t));
                                            }.bind(this),
                                        ),
                                            h.default.get(
                                                '/musiclist/music_list_star_unget',
                                                function (e, t) {
                                                    cc.isValid(this.node) && (this.mSpecStar3.spriteFrame = t);
                                                }.bind(this),
                                            );
                                        break;
                                    case 3:
                                        h.default.get(
                                            '/musiclist/music_list_star_get',
                                            function (e, t) {
                                                cc.isValid(this.node) && ((this.mSpecStar1.spriteFrame = t), (this.mSpecStar2.spriteFrame = t), (this.mSpecStar3.spriteFrame = t));
                                            }.bind(this),
                                        );
                                        break;
                                    case 4:
                                        h.default.get(
                                            '/musiclist/music_list_crown_get',
                                            function (e, t) {
                                                cc.isValid(this.node) && (this.mSpecCrown1.spriteFrame = t);
                                            }.bind(this),
                                        ),
                                            h.default.get(
                                                '/musiclist/music_list_crown_unget',
                                                function (e, t) {
                                                    cc.isValid(this.node) && ((this.mSpecCrown2.spriteFrame = t), (this.mSpecCrown3.spriteFrame = t));
                                                }.bind(this),
                                            );
                                        break;
                                    case 5:
                                        h.default.get(
                                            '/musiclist/music_list_crown_get',
                                            function (e, t) {
                                                cc.isValid(this.node) && ((this.mSpecCrown1.spriteFrame = t), (this.mSpecCrown2.spriteFrame = t));
                                            }.bind(this),
                                        ),
                                            h.default.get(
                                                '/musiclist/music_list_crown_unget',
                                                function (e, t) {
                                                    cc.isValid(this.node) && (this.mSpecCrown3.spriteFrame = t);
                                                }.bind(this),
                                            );
                                        break;
                                    case 6:
                                        h.default.get(
                                            '/musiclist/music_list_crown_get',
                                            function (e, t) {
                                                cc.isValid(this.node) && ((this.mSpecCrown1.spriteFrame = t), (this.mSpecCrown2.spriteFrame = t), (this.mSpecCrown3.spriteFrame = t));
                                            }.bind(this),
                                        );
                                }
                            }),
                            (e.prototype.setLevelIcon = function (e) {
                                switch ((e < 4 ? ((this.mStarIconGroup.node.width = 152), (this.mStarIconGroup.node.height = 54), (this.mStarIconGroup.node.x = -132), (this.mStarIconGroup.node.y = -39), (this.mStarIcon1.node.width = 44), (this.mStarIcon1.node.height = 54), (this.mStarIcon1.node.x = -54), (this.mStarIcon1.node.y = 0), (this.mStarIcon2.node.width = 44), (this.mStarIcon2.node.height = 54), (this.mStarIcon2.node.x = 0), (this.mStarIcon2.node.y = 0), (this.mStarIcon3.node.width = 44), (this.mStarIcon3.node.height = 54), (this.mStarIcon3.node.x = 54)) : ((this.mStarIconGroup.node.width = 160), (this.mStarIconGroup.node.height = 54), (this.mStarIconGroup.node.x = -130), (this.mStarIconGroup.node.y = -31), (this.mStarIcon1.node.width = 48), (this.mStarIcon1.node.height = 46), (this.mStarIcon1.node.x = -56), (this.mStarIcon1.node.y = 0), (this.mStarIcon2.node.width = 48), (this.mStarIcon2.node.height = 46), (this.mStarIcon2.node.x = 0), (this.mStarIcon2.node.y = 0), (this.mStarIcon3.node.width = 48), (this.mStarIcon3.node.height = 46), (this.mStarIcon3.node.x = 56)), (this.mStarIcon3.node.y = 0), e)) {
                                    case 0:
                                        h.default.get(
                                            '/musiclist/music_list_star_unget',
                                            function (e, t) {
                                                cc.isValid(this.node) && ((this.mStarIcon1.spriteFrame = t), (this.mStarIcon2.spriteFrame = t), (this.mStarIcon3.spriteFrame = t));
                                            }.bind(this),
                                        );
                                        break;
                                    case 1:
                                        h.default.get(
                                            '/musiclist/music_list_star_get',
                                            function (e, t) {
                                                cc.isValid(this.node) && (this.mStarIcon1.spriteFrame = t);
                                            }.bind(this),
                                        ),
                                            h.default.get(
                                                '/musiclist/music_list_star_unget',
                                                function (e, t) {
                                                    cc.isValid(this.node) && ((this.mStarIcon2.spriteFrame = t), (this.mStarIcon3.spriteFrame = t));
                                                }.bind(this),
                                            );
                                        break;
                                    case 2:
                                        h.default.get(
                                            '/musiclist/music_list_star_get',
                                            function (e, t) {
                                                cc.isValid(this.node) && ((this.mStarIcon1.spriteFrame = t), (this.mStarIcon2.spriteFrame = t));
                                            }.bind(this),
                                        ),
                                            h.default.get(
                                                '/musiclist/music_list_star_unget',
                                                function (e, t) {
                                                    cc.isValid(this.node) && (this.mStarIcon3.spriteFrame = t);
                                                }.bind(this),
                                            );
                                        break;
                                    case 3:
                                        h.default.get(
                                            '/musiclist/music_list_star_get',
                                            function (e, t) {
                                                cc.isValid(this.node) && ((this.mStarIcon1.spriteFrame = t), (this.mStarIcon2.spriteFrame = t), (this.mStarIcon3.spriteFrame = t));
                                            }.bind(this),
                                        );
                                        break;
                                    case 4:
                                        h.default.get(
                                            '/musiclist/music_list_crown_get',
                                            function (e, t) {
                                                cc.isValid(this.node) && (this.mStarIcon1.spriteFrame = t);
                                            }.bind(this),
                                        ),
                                            h.default.get(
                                                '/musiclist/music_list_crown_unget',
                                                function (e, t) {
                                                    cc.isValid(this.node) && ((this.mStarIcon3.spriteFrame = t), (this.mStarIcon2.spriteFrame = t));
                                                }.bind(this),
                                            );
                                        break;
                                    case 5:
                                        h.default.get(
                                            '/musiclist/music_list_crown_get',
                                            function (e, t) {
                                                cc.isValid(this.node) && ((this.mStarIcon1.spriteFrame = t), (this.mStarIcon2.spriteFrame = t));
                                            }.bind(this),
                                        ),
                                            h.default.get(
                                                '/musiclist/music_list_crown_unget',
                                                function (e, t) {
                                                    cc.isValid(this.node) && (this.mStarIcon3.spriteFrame = t);
                                                }.bind(this),
                                            );
                                        break;
                                    case 6:
                                        h.default.get(
                                            '/musiclist/music_list_crown_get',
                                            function (e, t) {
                                                cc.isValid(this.node) && ((this.mStarIcon1.spriteFrame = t), (this.mStarIcon2.spriteFrame = t), (this.mStarIcon3.spriteFrame = t));
                                            }.bind(this),
                                        );
                                }
                            }),
                            (e.prototype.setLevel = function (e) {
                                (this.mLevellayout.node.active = !0), (this.mLevelValueLabel.string = '' + e);
                            }),
                            (e.prototype.removeLevel = function () {
                                this.mLevellayout.node.active = !1;
                            }),
                            (e.prototype.onDestroy = function () {
                                console.log('[MusicPage] onDestory'), this.unregisterEvents();
                            }),
                            (e.exceptionMoreId = -999999),
                            (e.SOURCE_DEFAULT = 0),
                            (e.SOURCE_UPDATE_CONTENT = 1),
                            __decorate([E(cc.Sprite)], e.prototype, 'mLevellayout', void 0),
                            __decorate([E(cc.Label)], e.prototype, 'mLevelValueLabel', void 0),
                            __decorate([E(cc.Label)], e.prototype, 'mMusicIndexLabel', void 0),
                            __decorate([E(cc.Label)], e.prototype, 'mMusicName', void 0),
                            __decorate([E(cc.Label)], e.prototype, 'mMusicianLabel', void 0),
                            __decorate([E(cc.Layout)], e.prototype, 'mStarIconGroup', void 0),
                            __decorate([E(cc.Sprite)], e.prototype, 'mStarIcon1', void 0),
                            __decorate([E(cc.Sprite)], e.prototype, 'mStarIcon2', void 0),
                            __decorate([E(cc.Sprite)], e.prototype, 'mStarIcon3', void 0),
                            __decorate([E(cc.Button)], e.prototype, 'mRankBtn', void 0),
                            __decorate([E(cc.Button)], e.prototype, 'mStartBtn', void 0),
                            __decorate([E(cc.Label)], e.prototype, 'mOpenLevelLabel', void 0),
                            __decorate([E(cc.Sprite)], e.prototype, 'mBg', void 0),
                            __decorate([E(cc.Label)], e.prototype, 'mExceptMoreLabel', void 0),
                            __decorate([E(cc.Node)], e.prototype, 'mNormalBg', void 0),
                            __decorate([E(cc.Sprite)], e.prototype, 'mSpecialBg', void 0),
                            __decorate([E(cc.Label)], e.prototype, 'mSpecMusicNameLabe', void 0),
                            __decorate([E(cc.Label)], e.prototype, 'mSpecMusicianLabel', void 0),
                            __decorate([E(cc.Label)], e.prototype, 'mSpecMusicIndexLabel', void 0),
                            __decorate([E(cc.Label)], e.prototype, 'mSpecStarConditionLable', void 0),
                            __decorate([E(cc.Node)], e.prototype, 'mSpecStarNode', void 0),
                            __decorate([E(cc.Sprite)], e.prototype, 'mSpecStar1', void 0),
                            __decorate([E(cc.Sprite)], e.prototype, 'mSpecStar2', void 0),
                            __decorate([E(cc.Sprite)], e.prototype, 'mSpecStar3', void 0),
                            __decorate([E(cc.Node)], e.prototype, 'mSpecCrownNode', void 0),
                            __decorate([E(cc.Sprite)], e.prototype, 'mSpecCrown1', void 0),
                            __decorate([E(cc.Sprite)], e.prototype, 'mSpecCrown2', void 0),
                            __decorate([E(cc.Sprite)], e.prototype, 'mSpecCrown3', void 0),
                            __decorate([E(cc.Label)], e.prototype, 'mSpecStarConditionWidthIconLable', void 0),
                            __decorate([E(cc.Sprite)], e.prototype, 'mSpecRankIcon', void 0),
                            __decorate([E(cc.Button)], e.prototype, 'mSpecStartBtn', void 0),
                            __decorate([E(cc.Label)], e.prototype, 'mSpecUnlockLevelLabel', void 0),
                            __decorate([E(cc.Node)], e.prototype, 'mSpecUnlockStarNode', void 0),
                            __decorate([E(cc.Sprite)], e.prototype, 'mSpecUnlockMarkSprite', void 0),
                            __decorate([E(cc.Label)], e.prototype, 'mSpecStartBtnLabel', void 0),
                            (e = r = __decorate([C], e))
                        );
                    })(cc.Component);
                (i.default = A), cc._RF.pop();
            },
            {
                '../../../../../modules/MGAdv/scripts/Logic/MGAdvDefine': 'MGAdvDefine',
                '../../../../../modules/MGAdv/scripts/Logic/MGAdvEntrance': 'MGAdvEntrance',
                '../../../../base/G': 'G',
                '../../../../base/State': 'State',
                '../../../../config/LSKey': 'LSKey',
                '../../../../gamescene/GameSceneSetting': 'GameSceneSetting',
                '../../../../infoc/m_p2_Uaction': 'm_p2_Uaction',
                '../../../../util/PU': 'PU',
                '../../../../util/StringUtil': 'StringUtil',
                '../../../Logic/EventBus': 'EventBus',
                '../../../Logic/I18nManager': 'I18nManager',
                '../../../Logic/NotifyEvent': 'NotifyEvent',
                '../../../Logic/Plugin/IPlugin': 'IPlugin',
                '../../../Logic/Plugin/PluginMgr': 'PluginMgr',
                '../../../Network/Protocol/StorageUtil': 'StorageUtil',
                '../../../skin/SkinUtils': 'SkinUtils',
                '../../UserInfoManager': 'UserInfoManager',
                '../BasicTouchEvent': 'BasicTouchEvent',
                '../ImgCache': 'ImgCache',
            },
        ],
        NormalReliveTimesTask: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '0357bMrLQxBEruWgr5O/86V', 'NormalReliveTimesTask'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return __extends(t, e), (t.prototype.initTask = function (e) {}), t;
                })(e('../SkinTaskItem').default);
                (i.default = o), cc._RF.pop();
            },
            {
                '../SkinTaskItem': 'SkinTaskItem',
            },
        ],
        NotifyEvent: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'c162eD2rf5L0ZyzMixUIw8i', 'NotifyEvent'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {}
                    return (e.COIN_UPDATE = 'coin_update'), (e.HP_REVIVE = 'hp_revive'), (e.LOADING_DOWNLOAD = 'loading_download'), (e.LOADING_IMAGE = 'loading_image'), (e.LOADING_DB = 'loading_db'), (e.LOADING_UI_NOTIFY = 'loading_ui_change'), (e.LOADING_ONLOAD = 'loading_onload'), (e.HP_NOT_ENOUGH_ITEM_CLICK = 'hp_not_enough_item_click'), (e.HP_NOT_ENOUGH_IMMEDIATELY_CHALLENGE = 'hp_not_enough_immediately_challenge'), (e.SHOW_HOME_RANK_PAGE = 'show_home_rank_page'), (e.SHOW_RESULT_RANK_PAGE = 'show_result_rank_page'), (e.DO_ENERGY_USE_ANIMATION = 'do_energy_use_animation'), (e.SHOW_HOMEPAGE_EVENT_TOP_MASK = 'show_homepage_event_stop_mask'), (e.HIDE_HOMEPAGE_EVENT_TOP_MASK = 'hide_homepage_event_stop_mask'), (e.RANK_SHARE_GROUP_FIRST = 'rank_share_group_first'), (e.SHOW_SHARE_GROUP_DIALOG = 'show_share_group_succ_dialog'), (e.LIFE_CYCLE_ON_SHOW = 'life_cycle_on_show'), (e.LIFE_CYCLE_ON_HIDE = 'life_cycle_on_hide'), (e.LOADING_SKIN = 'loading_skin'), (e.DAILY_GET_AWARD = 'daily_get_award'), (e.UPDATE_SHARE_GIFT_TIPS = 'update_share_gift_tips'), (e.PLAY_LOCK_MUSIC_IN_RANK = 'play_lock_music_in_rank'), (e.UPDATE_SKIN_STORE_UI = 'update_skin_store_ui'), (e.SHOW_TEST_MONEY_NOT_ENOUGH_TOAST = 'show_test_money_not_enough_toast'), (e.SHOW_MUSIC_LIB_UNLOCK_DIALOG = 'show_music_lib_unlock_dialog'), (e.UPDATE_MUSIC_LIST_CURRENT_TIME = 'update_music_list_current_time'), (e.UPDATE_MUSIC_LIST_HEIGHT = 'update_music_list_height'), (e.INVITE_SONG_LOOPER_START = 'invite_song_looper_start'), (e.INVITE_SONG_LOOPER_STOP = 'invite_song_looper_stop'), (e.INVITE_CHECK_ACTIVITY_SONG = 'invite_check_activity_song'), (e.FIRST_PAY_UNLOCK_SKIN = 'first_pay_unlock_skin'), (e.HIDE_GUIDE_FINGER = 'hide_guide_finger'), (e.REFRESH_HOMEPAGE_NEW_TARGET_RED_SPOT = 'refresh_homepage_new_target_red_spot'), (e.REWARTDPANEL_SHOW_SKINSTORE = 'rewardPanel_show_skinstore'), (e.REWARTDPANEL_SHOW_PIECE = 'rewardPanel_show_piece'), (e.BUY_VIP_SUCCESS_NOTIFICATION = 'buy_vip_success_notification'), (e.VIP_TAKEN_DAILY_REWARD = 'vip_taken_daily_reward'), (e.NOTIFY_MUSIC_LIBRARY_UPDATE = 'notify_music_library_update'), (e.UPDATE_WX_VERSION_TOAST = 'update_wx_version_toast'), (e.SHARE_RESULT_SHOW_INVITE_TIPS = 'share_result_show_invite_tips'), (e.SHARE_HOME_SHOW_INVITE_TIPS = 'share_home_show_invite_tips'), (e.SHARE_CHALLENGE_RESULT_SHOW_INVITE_TIPS = 'share_challenge_result_show_invite_tips'), (e.CHALLENGE_RESULT_SHOW_MUSIC_LIB_UNLOCK_DIALOG = 'challenge_result_show_music_lib_unlock_dialog'), (e.CHALLENGE_RESULT_SHOW_TEST_MONEY_NOT_ENOUGH_TOAST = 'challenge_result_show_test_money_not_enough_toast'), (e.NOTIFY_CHALLENGE_RESULT_MUSIC_LIBRARY_UPDATE = 'notify_challenge_result_music_library_update'), (e.SPEC_SONG_TRY_SKIN_HOME = 'spec_song_try_skin_home'), (e.SPEC_SONG_TRY_SKIN_RESULT = 'spec_song_try_skin_result'), (e.LOAD_MUSIC = 'load_music'), (e.ON_RESULT_RANK_BACK_CLICK = 'on_result_rank_back_click'), (e.FIGHT_PROP_BUY_UPDATE = 'fight_prop_buy_update'), (e.FIGHT_PROP_GET_REWARD_UPDATE = 'fight_prop_get_reward_update'), (e.SHOW_BATTLE_GAME_QUIT = 'show_battle_game_quit'), (e.SKIN_TASK_ADD_FRAGS = 'skin_task_add_frags'), (e.SKIN_TASK_GOLY_BUY_NOT_ENOUGH = 'skin_task_gold_buy_not_enough'), (e.SKIN_TASK_UPDATE_PIECES_UI = 'skin_task_update_pieces_ui'), (e.SKIN_PIECES_UNLOCK = 'skin_pieces_unlock'), (e.SKIN_UPDATE_STEP_UPDATE_UI = 'skin_update_step_update_ui'), (e.SKIN_TASK_CACHE_UPDATE_UI = 'skin_task_cache_update_ui'), (e.SKIN_TRY_FINISH_SHOW_GAIN = 'skin_try_finish_show_gain'), (e.UPDATE_SKIN_PIECES_TIPS = 'update_skin_pieces_tips'), (e.FIRST_PAY_BTN_CLICK = 'first_pay_btn_click'), (e.FIRST_PAY_SHOW_SHOP = 'first_pay_show_shop'), (e.WELFARE_SHOW_FRESH = 'welfare_show_fresh'), (e.UNLOCK_NORMAL_SKIN_EVENT = 'unlock_normal_skin'), (e.GAIN_REWARD_FROM_DESCRIPTION = 'gain_reward_from_description'), (e.UNLOCK_SKIN_PERMANENT = 'unlcok_skin_permanent'), (e.DIAMOND_BUY_TRUMPET_NOT_ENOUGH = 'diamond_buy_trumpet_not_enough'), (e.CHAT_FIGHT_SEND_SUCCESS = 'chat_fight_send_success'), (e.CHAT_FIGHT_MESSAGE_ENABLE = 'chat_fight_message_enable'), (e.CHAT_ACCEPT_FIGHT_SUCCESS = 'chat_accept_fight_success'), (e.NEW_GUIDE_GO_CLICK = 'new_guide_go_click'), (e.PERSONAL_PANEL_TO_CHAT = 'personal_panel_to_chat'), (e.OWN_CHAT_PRIVATE_FIGHT_MESSAGE = 'own_chat_private_fight_message'), (e.UPDATE_FRIEND_INFO = 'update_friend_info'), (e.TASK_ITEM_FINISH = 'task_finish_item'), (e.TASK_ITEM_GO_FIGHT = 'task_item_go_fight'), (e.TASK_ITEM_UPDATE_WELF_STEP = 'task_item_update_welf_step'), (e.TASK_ITEM_SHARE_TO_CHECK = 'task_item_share-to_check'), (e.RCM_SHOW_MAIN_ENTRY_ICO = 'rcm_show_main_entry_ico'), (e.CM_SKIN_ADS_UNLOCK = 'cm_skin_ads_unlock'), (e.PLAY_TRIAL_FINISHED = 'play_trail_finished'), e;
                })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        NumberFrameLoader: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '2c317qq1h9L7r6QMgwWKSxo', 'NumberFrameLoader'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../atlas/SimpleAtlas'),
                    n = (function () {
                        function e() {
                            (this.mNumberSimpleAtlas = null), (this.mInit = !1), (this.mNumberSimpleAtlas = new o.default());
                        }
                        return (
                            (e.getInstance = function () {
                                return null == e.sInstance && (e.sInstance = new e()), e.sInstance;
                            }),
                            (e.prototype.init = function () {
                                return __awaiter(this, void 0, void 0, function () {
                                    return __generator(this, function (e) {
                                        switch (e.label) {
                                            case 0:
                                                return this.mInit ? [2] : ((this.mInit = !0), [4, this.mNumberSimpleAtlas.load('gameImage/numberAtlas')]);
                                            case 1:
                                                return e.sent(), [2];
                                        }
                                    });
                                });
                            }),
                            (e.prototype.getAtlas = function () {
                                return this.mNumberSimpleAtlas;
                            }),
                            (e.prototype.getItemRect = function () {
                                return this.mNumberSimpleAtlas.getItem('white_0').rect;
                            }),
                            (e.sInstance = null),
                            e
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../../atlas/SimpleAtlas': 'SimpleAtlas',
            },
        ],
        NumberUtil: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '118c1CweQhF058LJ3Fhp6k5', 'NumberUtil'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {}
                    return (
                        (e.parseNum = function (e, t) {
                            void 0 === t && (t = 0);
                            return isNaN(Number(e + '')) ? t : Number(e + '');
                        }),
                        (e.parseIntFromString = function (e) {
                            if (!e) return 0;
                            var t = parseInt(e);
                            return NaN === t ? 0 : t;
                        }),
                        e
                    );
                })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        ObjectPool: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '310acAGVe1MCrFv0uQZpPXJ', 'ObjectPool'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e(e, t) {
                        void 0 === t && (t = -1), (this.objects = null), (this.createFunc = null), (this.exist = 0), (this.capacity = -1), (this.createFunc = e), (this.capacity = t), 0 < this.capacity ? (this.objects = new Array(t)) : (this.objects = []);
                    }
                    return (
                        (e.prototype.get = function () {
                            if (this.exist <= 0) return this.createFunc();
                            var e = this.objects[this.exist - 1];
                            return (this.objects[this.exist - 1] = null), --this.exist, e;
                        }),
                        (e.prototype.put = function (e) {
                            return !(0 <= this.capacity && this.exist >= this.capacity) && (++this.exist, (this.objects[this.exist - 1] = e), !0);
                        }),
                        (e.prototype.clear = function () {
                            this.objects = [];
                        }),
                        e
                    );
                })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        OperatingCount: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'a85a9Jk8upC47hzjeJUvnki', 'OperatingCount'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('../../libs/base64.js'),
                    h = (function () {
                        function t() {
                            (this.valid = !1), (this.touchMoved = !1), (this.touchBlockPosX = 0), (this.touchBlockPosY = 0), (this.touchScreenPosX = 0), (this.touchScreenPosY = 0), (this.startTime = 0), (this.endTime = 0), (this.touchScore = 0), (this.blockType = 0), (this.slotIndex = 0);
                        }
                        return (
                            (t.prototype.clone = function () {
                                var e = new t();
                                return e.set(this), e;
                            }),
                            (t.prototype.set = function (e) {
                                (this.valid = e.valid), (this.touchMoved = e.touchMoved), (this.touchBlockPosX = e.touchBlockPosX), (this.touchBlockPosY = e.touchBlockPosY), (this.touchScreenPosX = e.touchScreenPosX), (this.touchScreenPosY = e.touchScreenPosY), (this.startTime = e.startTime), (this.endTime = e.endTime), (this.touchScore = e.touchScore), (this.blockType = e.blockType), (this.slotIndex = e.slotIndex);
                            }),
                            (t.prototype.serialize = function (e) {
                                e.setInt16(0, Math.min(Math.floor(this.touchBlockPosX), 32767)), e.setInt16(2, Math.min(Math.floor(this.touchBlockPosY), 32767)), e.setInt16(4, Math.min(Math.floor(this.touchScreenPosX), 32767)), e.setInt16(6, Math.min(Math.floor(this.touchScreenPosY), 32767)), e.setUint16(8, Math.min(this.endTime - this.startTime, 65535)), e.setUint8(10, Math.min(this.touchScore, 255)), e.setUint8(11, this.blockType), e.setUint8(12, this.touchMoved ? 1 : 0), e.setFloat64(13, Math.floor(this.startTime)), e.setUint8(21, this.slotIndex);
                            }),
                            (t.SIZE = function () {
                                return 22;
                            }),
                            t
                        );
                    })();
                i.OperatingCountItem = h;
                var o = (function () {
                    function e() {
                        (this.itemLimit = 1e3), (this.version = 6), (this.playTime = 0), (this.musicId = 0), (this.totalScore = 0), (this.fps = 0), (this.blockHeight = 0), (this.apm = 0), (this.items = []), (this.fpsArray = []), (this.userLevel = 0), (this.userDiamond = 0), (this.userHp = 0), (this.touchedCount = 0);
                    }
                    return (
                        (e.prototype.usefull = function () {
                            return this.items && 0 < this.items.length;
                        }),
                        (e.prototype.serialize = function () {
                            try {
                                var e = {};
                                (e.ver = this.version), (e.musicid = this.musicId), (e.playtime = Math.floor(1e3 * this.playTime)), (e.score = Math.floor(this.totalScore)), (e.fps = Math.floor(this.fps)), (e.apm = Math.floor(1e3 * this.apm));
                                var t = this.packageItems(),
                                    i = this.ArrayBufferToString(t),
                                    o = new n.default().encode(i);
                                return (e.data = o), e;
                            } catch (e) {
                                console.log('--- serialize error: ---', e);
                            }
                        }),
                        (e.prototype.reset = function () {
                            (this.items = []), (this.playTime = 0), (this.musicId = 0), (this.totalScore = 0), (this.fps = 0), (this.blockHeight = 0), (this.fpsArray = []), (this.userLevel = 0), (this.userDiamond = 0), (this.userHp = 0), (this.touchedCount = 0), console.log('--- reset ---');
                        }),
                        (e.prototype.addItem = function (e) {
                            this.touchedCount++, null === this.items && (this.items = new Array()), this.items.length >= this.itemLimit || this.items.push(e.clone());
                        }),
                        (e.prototype.setItemLimit = function (e) {
                            this.itemLimit = e;
                        }),
                        (e.prototype.setPlayTime = function (e) {
                            this.playTime = e;
                        }),
                        (e.prototype.addPlayTime = function (e) {
                            this.playTime += e;
                        }),
                        (e.prototype.setMusicId = function (e) {
                            this.musicId = e;
                        }),
                        (e.prototype.setTotalScore = function (e) {
                            this.totalScore = e;
                        }),
                        (e.prototype.setFPS = function (e) {
                            this.fps = Math.floor(e);
                        }),
                        (e.prototype.setBlockHeight = function (e) {
                            this.blockHeight = e;
                        }),
                        (e.prototype.setAPM = function (e) {
                            this.apm = e;
                        }),
                        (e.prototype.setFpsArray = function (e) {
                            this.fpsArray = e;
                        }),
                        (e.prototype.setUserLevel = function (e) {
                            this.userLevel = e;
                        }),
                        (e.prototype.setUserDiamond = function (e) {
                            this.userDiamond = e;
                        }),
                        (e.prototype.setUserHp = function (e) {
                            this.userHp = e;
                        }),
                        (e.prototype.packageItems = function () {
                            var e = this.items ? this.items.length : 0,
                                t = h.SIZE(),
                                i = this.fpsArray,
                                o = i.length,
                                n = new ArrayBuffer(64 + e * t + 1 * o),
                                a = new DataView(n),
                                r = Math.floor(this.userLevel || 0),
                                s = Math.floor(this.userDiamond || 0),
                                c = Math.floor(this.userHp || 0),
                                l = this.touchedCount;
                            console.log('packageItems itemCount', e), a.setUint8(0, this.version), a.setUint16(1, e), a.setUint8(3, o), a.setUint16(4, Math.floor(this.blockHeight)), a.setUint16(8, r), a.setUint16(12, s), a.setUint16(16, c), a.setUint16(20, l);
                            for (var u = 0; u < e; ++u) {
                                var d = new DataView(n, 64 + u * t, t);
                                this.items[u].serialize(d);
                            }
                            var p = 64 + e * t;
                            return this.setFPSArray(i, n, p, 1), n;
                        }),
                        (e.prototype.ArrayBufferToString = function (e) {
                            for (var t = '', i = new Uint8Array(e), o = 0, n = i.byteLength; o < n; o++) t += String.fromCharCode(i[o]);
                            return t;
                        }),
                        (e.prototype.setFPSArray = function (e, t, i, o) {
                            for (var n = new DataView(t, i, e.length * o), a = 0, r = 0, s = e; r < s.length; r++) {
                                var c = s[r];
                                n.setUint8(a++, c);
                            }
                        }),
                        e
                    );
                })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../../libs/base64.js': 'base64',
            },
        ],
        OvertakeFriendModule: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '3d62dxbrztNjIFTmA7w+7wy', 'OvertakeFriendModule'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../Social/OvertakeFriend'),
                    n = e('../MUI/MUIDrawNode'),
                    a = e('../../base/G'),
                    r = e('../animation/action/MSequence'),
                    s = e('../animation/action/MDelay'),
                    c = e('../animation/action/MCallFunc'),
                    l = e('../GameBus'),
                    u = e('../../util/SUtil'),
                    d = (function () {
                        function e() {
                            this.FRAME_TIME = 1 / 60;
                        }
                        return (
                            (e.prototype.load = function () {
                                (this.mOvertakeFriend = new o.default()), this.mOvertakeFriend && this.mOvertakeFriend.startup();
                            }),
                            (e.prototype.destroy = function () {
                                this.mOvertakeFriend && (this.mOvertakeFriend.shutdown(), (this.mOvertakeFriend = null));
                            }),
                            (e.prototype.prepare = function () {}),
                            (e.prototype.start = function () {
                                this.mOvertakeFriend && (this.mOvertakeFriend.refresh(), this.mOvertakeFriend.updateScore());
                            }),
                            (e.prototype.pause = function () {
                                this.mOvertakeFriend && this.mOvertakeFriend.pause();
                            }),
                            (e.prototype.resume = function () {
                                this.mOvertakeFriend && this.mOvertakeFriend.resume();
                            }),
                            (e.prototype.update = function () {
                                return this.showAnim(), !0;
                            }),
                            (e.prototype.showAnim = function () {
                                var e = this;
                                this.mOvertakeFriend &&
                                    (this.mAnim ||
                                        (this.mAnim = new r.default(
                                            new s.default(2 * this.FRAME_TIME),
                                            new c.default(function () {
                                                e.mOvertakeFriend && e.mOvertakeFriend.updateScore();
                                            }),
                                        )),
                                    this.mAnim.getTarget() || l.default.getInstance().animationMgr.runAction(this.mUINode, this.mAnim));
                            }),
                            (e.prototype.showNode = function () {
                                this.mUINode && this.mUINode.setVisible(!0);
                            }),
                            (e.prototype.hideNode = function () {
                                this.mUINode && this.mUINode.setVisible(!1);
                            }),
                            (e.prototype.getUINode = function () {
                                var s = this;
                                if (!this.mUINode) {
                                    var e = new n.default(function (e, t) {
                                        if (s.mOvertakeFriend) {
                                            var i = s.mOvertakeFriend.getImage();
                                            if (i) {
                                                var o = Math.floor(t.centerX),
                                                    n = Math.floor(e.canvas.height - t.centerY);
                                                e.translate(o, n);
                                                var a = -(t.width >>> 1),
                                                    r = -(t.height >>> 1);
                                                e.drawImage(i, 0, 0, i.width, i.height, a, r, t.width, t.height), e.translate(-o, -n);
                                            }
                                        }
                                    }, 'FriendHeader');
                                    e.move(14, a.G.Ap.config.presentHeight - 117, 260, 100), (this.mUINode = e), this.adaptUI();
                                }
                                return this.mUINode;
                            }),
                            (e.prototype.adaptUI = function () {
                                this.mUINode && (u.SUtil.ins().isLiuHai() ? this.mUINode.move(14, a.G.Ap.config.presentHeight - 171, 260, 100) : u.SUtil.ins().isQuanMian() && this.mUINode.move(14, a.G.Ap.config.presentHeight - 123, 260, 100));
                            }),
                            e
                        );
                    })();
                (i.default = d), cc._RF.pop();
            },
            {
                '../../base/G': 'G',
                '../../util/SUtil': 'SUtil',
                '../GameBus': 'GameBus',
                '../MUI/MUIDrawNode': 'MUIDrawNode',
                '../Social/OvertakeFriend': 'OvertakeFriend',
                '../animation/action/MCallFunc': 'MCallFunc',
                '../animation/action/MDelay': 'MDelay',
                '../animation/action/MSequence': 'MSequence',
            },
        ],
        OvertakeFriend: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '0955fXFrdhDJqks0d1N042Q', 'OvertakeFriend'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../social/SocialHelper'),
                    n = e('../../base/G'),
                    a = e('../../business/Logic/PlayerMgr'),
                    r = e('../../util/PU'),
                    s = (function () {
                        function e() {
                            (this.sharedCanvas = null),
                                (this.scoreParam = {
                                    src: 'src_game_playing',
                                    score: 0,
                                });
                        }
                        return (
                            (e.prototype.refresh = function () {
                                if (!n.G.Ap.config.debugNoOvertake && cc.sys.platform == cc.sys.WECHAT_GAME) {
                                    var e = wx.getOpenDataContext().canvas;
                                    (e.width = 260), (e.height = 100), (this.sharedCanvas = e);
                                }
                            }),
                            (e.prototype.pause = function () {
                                n.G.Ap.config.debugNoOvertake ||
                                    ((this.sharedCanvas = null),
                                    o.SocialHelper.exitDrawRanking({
                                        src: 'src_game_playing',
                                        pause: !0,
                                    }));
                            }),
                            (e.prototype.resume = function () {
                                n.G.Ap.config.debugNoOvertake || this.startup(!0);
                            }),
                            (e.prototype.startup = function (e) {
                                if ((void 0 === e && (e = !1), !n.G.Ap.config.debugNoOvertake)) {
                                    var t = n.G.Ap.state;
                                    this.refresh(),
                                        o.SocialHelper.drawRanking({
                                            src: 'src_game_playing',
                                            songId: t.mission.musicId,
                                            grade: a.default.Ins().getUserLevel(),
                                            levelId: t.mission.levelId,
                                            isResume: e,
                                            benchmarkLevel: r.default.benchmarkLevel,
                                            score: 0,
                                        });
                                }
                            }),
                            (e.prototype.shutdown = function () {
                                n.G.Ap.config.debugNoOvertake ||
                                    ((this.sharedCanvas = null),
                                    o.SocialHelper.exitDrawRanking({
                                        src: 'src_game_playing',
                                        pause: !1,
                                    }));
                            }),
                            (e.prototype.updateScore = function () {
                                n.G.Ap.config.debugNoOvertake || ((this.scoreParam.score = n.G.Ap.state.attainScore), o.SocialHelper.syncDrawRanking(this.scoreParam));
                            }),
                            (e.prototype.getImage = function () {
                                return n.G.Ap.config.debugNoOvertake ? null : this.sharedCanvas;
                            }),
                            e
                        );
                    })();
                (i.default = s), cc._RF.pop();
            },
            {
                '../../base/G': 'G',
                '../../business/Logic/PlayerMgr': 'PlayerMgr',
                '../../social/SocialHelper': 'SocialHelper',
                '../../util/PU': 'PU',
            },
        ],
        PU: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'e17ecS04DxM8J3iAgWKyloa', 'PU'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('../base/G'),
                    a = e('../business/Network/Protocol/StorageUtil'),
                    r = e('../config/LSKey'),
                    s = e('../LogicPlatform/PlatformProxy'),
                    c = e('../../modules/MGUtils/TypeDefinition'),
                    l = e('../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    u = e('../../modules/MGBasic/scripts/Logic/MGBasicEntrance'),
                    d = e('../../modules/MGCloudStorage/scripts/Logic/MGCloudStorageEntrance'),
                    p = e('../../modules/MGAdv/scripts/Logic/MGAdvEntrance'),
                    h = e('../../modules/MGUtils/MGPlatform'),
                    f = e('../base/Log'),
                    o = (function () {
                        function o() {}
                        return (
                            (o.init = function () {
                                if (o.isWeiXin()) {
                                    var e = h.MGPlatform.getSystemInfoSync();
                                    (o.SDKVersion = e.SDKVersion), (o.windowWidth = e.windowWidth), (o.windowHeight = e.windowHeight), (o.pixelRatio = e.pixelRatio), (o.benchmarkLevel = e.benchmarkLevel), (o.wxVersion = e.version), null == o.benchmarkLevel && cc.sys.os === cc.sys.OS_IOS && (o.benchmarkLevel = 15), console.warn('BenchmarkLevel: ' + o.benchmarkLevel), console.warn(e);
                                    var t = e.platform.toLowerCase(),
                                        i = e.system.toLowerCase();
                                    o.particalSystemCompat = 'ios' !== t || -1 == i.search('ios 8');
                                } else (o.particalSystemCompat = !0), (o.mSupportCMOnshare = !!(o.isCM() && window.GameJs && window.GameJs.onShare)), f.default.i('PU msupportCMONSHare', o.mSupportCMOnshare);
                            }),
                            (o.getPlatformType = function (e) {
                                return (o.sPlatformType = c.PlatformType.PLATFORM_CMPLAY);
                            }),
                            (o.guessPlatformType = function (e) {
                                var t = c.PlatformType.PLATFORM_WEB;
                                return cc.sys.platform == cc.sys.WECHAT_GAME ? ('wechat' == e ? (t = c.PlatformType.PLATFORM_WECHAT) : 'h5sdk' == e ? (t = c.PlatformType.PLATFORM_H5SDK) : 'qqhall' == e && (t = c.PlatformType.PLATFORM_GAMEHALL)) : (t = 'undefined' != typeof FBInstant ? c.PlatformType.PLATFORM_FACEBOOK : cc.sys.platform == cc.sys.QQ_PLAY ? c.PlatformType.PLATFORM_QQPLAY : cc.sys.isBrowser && 'cmplay' == e ? c.PlatformType.PLATFORM_CMPLAY : c.PlatformType.PLATFORM_WEB), t;
                            }),
                            (o.initGameModel = function (e, t) {
                                var i = this.getPlatformType(e.platform);
                                l.MGUser.init(i, e.gameid, e.appid, e.version, t), u.MGBasic.init(i), s.default.init(i);
                            }),
                            (o.initGameUserModel = function (o, n, a) {
                                var r = this,
                                    s = this.getPlatformType(o.platform);
                                l.MGUser.getUserLoginInfo({
                                    success: function (e) {
                                        var t = e.playerId,
                                            i = e.token;
                                        cmg.platform.init(o.appid, o.version, o.gameid, s, t, i, n), r.initUseLocalTimeSetting(), d.MGCloudStorage.init(s, o.gameid, i, t, n), p.MGAdv.init(s), a(!0);
                                    },
                                    fail: function () {
                                        console.error('注意，注意：初始化模块失败了，请检查GameId、AppId是否正确！'), a(!1);
                                    },
                                });
                            }),
                            (o.initUseLocalTimeSetting = function () {
                                var e = a.default.read(r.default.CMG_DEBUG_USE_LOCAL_TIME);
                                l.MGUser.switchUseLocalTime('1' == e);
                            }),
                            (o.isWeiXin = function () {
                                return cc.sys.platform == cc.sys.WECHAT_GAME;
                            }),
                            (o.isWeb = function () {
                                return cc.sys.platform == cc.sys.DESKTOP_BROWSER;
                            }),
                            (o.isQQ = function () {
                                return cc.sys.platform == cc.sys.QQ_PLAY;
                            }),
                            (o.isIOS = function () {
                                return cc.sys.os == cc.sys.OS_IOS;
                            }),
                            (o.isAndroid = function () {
                                return cc.sys.os === cc.sys.OS_ANDROID;
                            }),
                            (o.isCM = function () {
                                return !0;
                            }),
                            (o.supportCMOnshare = function () {
                                return f.default.i('PU supportCMOnshare ', o.mSupportCMOnshare), o.mSupportCMOnshare;
                            }),
                            (o.calculationBenchmarkLevel = function (e) {
                                if (!(this.sBenchmarkLevelCount > o.BENCHMARK_LEVEL_MAX_COUNT || n.G.Ap.state.isPaused())) {
                                    if (0 == o.sBenchmarkLevelCount) {
                                        var t = a.default.read(r.default.BENCHMARK_LEVEL);
                                        if (t && 0 < t.length) return void (this.sBenchmarkLevelCount = o.BENCHMARK_LEVEL_MAX_COUNT + 1);
                                    }
                                    if ((this.sBenchmarkLevelCount < o.BENCHMARK_LEVEL_MAX_COUNT && ((this.sBenchmarkLevelTotal += e), this.sBenchmarkLevelCount++), this.sBenchmarkLevelCount == o.BENCHMARK_LEVEL_MAX_COUNT)) {
                                        var i = this.sBenchmarkLevelTotal / this.sBenchmarkLevelCount;
                                        a.default.save(r.default.BENCHMARK_LEVEL, i.toString()), (this.sBenchmarkLevelTotal += e), this.sBenchmarkLevelCount++;
                                    }
                                }
                            }),
                            (o.getResourcePath = function (e) {
                                if (e) {
                                    var t = cc.url.raw(e);
                                    return (o.isWeiXin() || o.isQQ()) && (cc.loader.md5Pipe && (t = cc.loader.md5Pipe.transformURL(t)), (t = s.default.Ins().getUserDataPath() + '/' + t)), t;
                                }
                            }),
                            (o.is3DTouchCompat = function () {
                                return cc.sys.os === cc.sys.OS_IOS;
                            }),
                            (o.sPlatformType = c.PlatformType.PLATFORM_UNKNOWN),
                            (o.SDKVersion = ''),
                            (o.windowWidth = 0),
                            (o.windowHeight = 0),
                            (o.pixelRatio = 0),
                            (o.benchmarkLevel = 0),
                            (o.wxVersion = ''),
                            (o.sBenchmarkLevelTotal = 0),
                            (o.sBenchmarkLevelCount = 0),
                            (o.BENCHMARK_LEVEL_MAX_COUNT = 400),
                            (o.particalSystemCompat = void 0),
                            (o.mSupportCMOnshare = !1),
                            o
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../../modules/MGAdv/scripts/Logic/MGAdvEntrance': 'MGAdvEntrance',
                '../../modules/MGBasic/scripts/Logic/MGBasicEntrance': 'MGBasicEntrance',
                '../../modules/MGCloudStorage/scripts/Logic/MGCloudStorageEntrance': 'MGCloudStorageEntrance',
                '../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../modules/MGUtils/MGPlatform': 'MGPlatform',
                '../../modules/MGUtils/TypeDefinition': 'TypeDefinition',
                '../LogicPlatform/PlatformProxy': 'PlatformProxy',
                '../base/G': 'G',
                '../base/Log': 'Log',
                '../business/Network/Protocol/StorageUtil': 'StorageUtil',
                '../config/LSKey': 'LSKey',
            },
        ],
        PageHeap: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'd3472Y0MthAhKnxwuyH4m5y', 'PageHeap'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../base/Log'),
                    n = (function () {
                        function t() {
                            this.Pages = [];
                        }
                        return (
                            (t.Ins = function () {
                                return this._Ins || (this._Ins = new t()), this._Ins;
                            }),
                            (t.prototype.pushScene = function (e) {
                                this.clear(), this.push(e);
                            }),
                            (t.prototype.ignore = function (e) {
                                return 0 <= t.IGNORE_LIST.indexOf(e);
                            }),
                            (t.prototype.push = function (e) {
                                this.ignore(e) || (this.Pages.push(e), o.default.l('[PageHeap.push] pages=' + this.toString()));
                            }),
                            (t.prototype.pop = function (e) {
                                this.ignore(e) || (0 != this.Pages.length ? (this.Pages[this.Pages.length - 1] == e ? (this.Pages.pop(), o.default.l('[PageHeap.pop] pages=' + this.toString())) : o.default.e('[PageHeap.pop] page error! ')) : o.default.e('[PageHeap.pop] Pages is empty!'));
                            }),
                            (t.prototype.clear = function () {
                                o.default.l('[PageHeap.clear] count=' + this.Pages.length), 0 < this.Pages.length && this.Pages.splice(0, this.Pages.length);
                            }),
                            (t.prototype.toString = function () {
                                return 0 == this.Pages.length ? '' : this.Pages.join('_');
                            }),
                            (t.IGNORE_LIST = ['PlayerInfoPopupProfab']),
                            t
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../base/Log': 'Log',
            },
        ],
        ParticleSystemVM: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '3ce5fMRXEFDi7el5NeISaCe', 'ParticleSystemVM'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var s = e('./PU'),
                    o = (function () {
                        function r(e, t) {
                            this.setParentNode(e), this.setChildren(t);
                        }
                        return (
                            (r.prototype.setParentNode = function (e) {
                                this.parentNode = e;
                            }),
                            (r.prototype.getParentNode = function () {
                                return this.parentNode;
                            }),
                            (r.prototype.setChildren = function (e) {
                                this.children = e;
                            }),
                            (r.prototype.getChildren = function () {
                                return this.children;
                            }),
                            (r.prototype.start = function () {
                                for (var e = 0, t = this.children; e < t.length; e++) {
                                    var i = t[e],
                                        o = i.getName(),
                                        n = this.parentNode.getChildByName(o),
                                        a = n ? n.addComponent(cc.ParticleSystem) : void 0;
                                    a && ((a.autoRemoveOnFinish = i.getAutoRemove()), (a.playOnLoad = i.getPlayOnLoad()), (a.file = s.default.getResourcePath(r.ROOT_PATH + '/' + i.getPlistPath())));
                                }
                            }),
                            (r.ROOT_PATH = 'resources/particle'),
                            r
                        );
                    })();
                i.ParticleSystemVM = o;
                var n = (function () {
                    function e(e, t, i, o) {
                        this.setPlayOnLoad(e), this.setAutoRemove(t), this.setName(i), this.setPlistPath(o);
                    }
                    return (
                        (e.prototype.setPlayOnLoad = function (e) {
                            this.playOnLoad = e;
                        }),
                        (e.prototype.getPlayOnLoad = function () {
                            return this.playOnLoad;
                        }),
                        (e.prototype.setAutoRemove = function (e) {
                            this.autoRemove = e;
                        }),
                        (e.prototype.getAutoRemove = function () {
                            return this.autoRemove;
                        }),
                        (e.prototype.setName = function (e) {
                            this.name = e;
                        }),
                        (e.prototype.getName = function () {
                            return this.name;
                        }),
                        (e.prototype.setPlistPath = function (e) {
                            this.plistPath = e;
                        }),
                        (e.prototype.getPlistPath = function () {
                            return this.plistPath;
                        }),
                        e
                    );
                })();
                (i.ParticleSystemChild = n), cc._RF.pop();
            },
            {
                './PU': 'PU',
            },
        ],
        Performance: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '9765db/sZJNFYALKX/R1p1h', 'Performance'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n,
                    o,
                    a = e('../base/G');
                ((o = n = i.PERFORMANCE_STATUS || (i.PERFORMANCE_STATUS = {}))[(o.Begin = 0)] = 'Begin'),
                    (o[(o.End = 1)] = 'End'),
                    (o[(o.Resume = 2)] = 'Resume'),
                    (o[(o.Pause = 3)] = 'Pause'),
                    (function (e) {
                        var i = function () {
                            (this.preTime = 0), (this.id = 0), (this.runTimes = 0), (this.totolTime = 0), (this.lastRunDuration = 0);
                        };
                        e.Item = i;
                        var t = (function () {
                            function e(e) {
                                void 0 === e && (e = 0.022), (this.slowValue = 1), (this.performance = null), (this.runInfos = []), (this.runDuration = 0), (this.runTimes = 0), (this.jumpTimes = 0), (this.jumpDuration = 0), (this.totalJumpTimes = 0), (this.totalJumpDuration = 0), (this.status = null), (this.fpsArray = []), (this.slowValue = e), window.performance && (this.performance = window.performance);
                            }
                            return (
                                (e.prototype.update = function (e) {
                                    var t = this.getStatus();
                                    if (t === n.Begin || t === n.Resume) {
                                        (this.runDuration += e), this.runTimes++;
                                        var i = Math.floor(a.G.Ap.state.attainScore),
                                            o = this.getFPS();
                                        this.addFPS(o, i);
                                    }
                                }),
                                (e.prototype.updateAndAutoLog = function (e) {
                                    (this.runDuration += e), this.runTimes++, e >= this.slowValue && (this.jumpTimes++, (this.jumpDuration += e), this.totalJumpTimes++, (this.totalJumpDuration += e)), this.runTimes % 600 == 0 && (console.log('Jump:' + this.runDuration + ' times:' + this.jumpTimes + ' avg = ' + (0 < this.jumpTimes ? this.jumpDuration / this.jumpTimes : 0)), console.log('All times:' + this.totalJumpTimes + ' avg = ' + (0 < this.totalJumpTimes ? this.totalJumpDuration / this.totalJumpTimes : 0)), (this.jumpTimes = 0), (this.jumpDuration = 0));
                                }),
                                (e.prototype.getFPS = function () {
                                    return this.runTimes / Math.max(this.runDuration, 0.016667);
                                }),
                                (e.prototype.getRunTimes = function () {
                                    return this.runTimes;
                                }),
                                (e.prototype.getFpsArray = function () {
                                    return this.fpsArray;
                                }),
                                (e.prototype.addFPS = function (e, t) {
                                    !e || t <= 0 || (100 * (this.fpsArray.length + 1) <= t && this.fpsArray.push(e));
                                }),
                                (e.prototype.getDuration = function () {
                                    return this.runDuration;
                                }),
                                (e.prototype.begin = function (e) {
                                    if (this.performance) {
                                        var t = this.runInfos[e];
                                        t || (t = this.runInfos[e] = new i()), t.runTimes++, (t.preTime = this.performance.now());
                                    }
                                }),
                                (e.prototype.end = function (e) {
                                    if (this.performance) {
                                        var t = this.runInfos[e],
                                            i = this.performance.now();
                                        (t.lastRunDuration = i - t.preTime), (t.totolTime += t.lastRunDuration);
                                    }
                                }),
                                (e.prototype.getTime = function () {
                                    return this.performance ? this.performance.now() : new Date().getTime();
                                }),
                                (e.prototype.report = function () {
                                    console.log('--------------------'), console.log('游戏统计：'), console.log('FPS：' + this.runTimes / this.runDuration), console.log('AVG：' + this.runDuration / this.runTimes), console.log('Total time：' + this.runDuration + '    Times: ' + this.runTimes), this.printRunInfos(), console.log('统计结束'), console.log('--------------------'), console.log('');
                                }),
                                (e.prototype.reportAndReset = function () {
                                    this.report(), this.reset();
                                }),
                                (e.prototype.reset = function () {
                                    (this.runDuration = 0), (this.runTimes = 0);
                                }),
                                (e.prototype.printJumpInfos = function () {
                                    console.log('Jump:' + this.runDuration + ' times:' + this.jumpTimes + ' avg = ' + (0 < this.jumpTimes ? this.jumpDuration / this.jumpTimes : 0)), (this.jumpTimes = 0), (this.jumpDuration = 0);
                                }),
                                (e.prototype.printRunInfos = function () {
                                    for (var e = this.runInfos.length, t = 0; t < e; ++t) {
                                        var i = this.runInfos[t];
                                        null != i && (console.warn('method:' + t + ' last:' + i.lastRunDuration + ' avg:' + i.totolTime / i.runTimes), console.warn('times:' + i.runTimes + '  total:' + i.totolTime));
                                    }
                                }),
                                (e.prototype.setStatus = function (e) {
                                    this.status = e;
                                }),
                                (e.prototype.getStatus = function () {
                                    return this.status;
                                }),
                                e
                            );
                        })();
                        (function (t) {
                            function e() {
                                var e = t.call(this) || this;
                                return (e.mPerformance = wx.getPerformance()), e;
                            }
                            __extends(e, t),
                                (e.prototype.getTime = function () {
                                    return this.mPerformance.now();
                                });
                        })((e.CounterImpl = t));

                        function o() {
                            return new t();
                        }
                        (e.newCounterInstance = o), (e.Counter = o());
                    })(i.Performance || (i.Performance = {})),
                    cc._RF.pop();
            },
            {
                '../base/G': 'G',
            },
        ],
        PianoToneMgr: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '26804sCInBNY6RakrvGv8H0', 'PianoToneMgr'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('../../Network/Protocol/StorageUtil'),
                    a = e('../../../config/LSKey'),
                    r = e('../../../util/StringUtil'),
                    s = e('../../../util/PU'),
                    c = e('../../../LogicPlatform/PlatformProxy'),
                    l = e('../../../base/Log'),
                    u = e('../../Logic/GameItemsManager'),
                    o = (function () {
                        function o() {
                            this.ownToneList = [];
                            var e = u.GameItemsManager.getIns()
                                .getAllItems()
                                .filter(function (e) {
                                    return e && u.GameItemsManager.getIns().isToneType(e.getItemId());
                                });
                            this.mAllToneList = Object.seal(e);
                        }
                        return (
                            (o.Ins = function () {
                                return o._s || (o._s = new o()).init(), o._s;
                            }),
                            (o.prototype.getPianoToneList = function () {
                                return this.mAllToneList;
                            }),
                            (o.prototype.onlyDefaultTone = function () {
                                return 1 == this.ownToneList.length;
                            }),
                            (o.prototype.isUseDefaultTone = function () {
                                return this.curTone === o.PIANO_TONE_DEFAULT;
                            }),
                            (o.prototype.getCurTone = function () {
                                return this.curTone;
                            }),
                            (o.prototype.getCurToneName = function () {
                                var t = this,
                                    e = this.mAllToneList.find(function (e) {
                                        return e && e.getKey() == t.curTone;
                                    });
                                return e ? e.getName() : '';
                            }),
                            (o.prototype.init = function () {
                                this.initUseTone(), this.initOwnTone();
                            }),
                            (o.prototype.initUseTone = function () {
                                var t = this;
                                this.curTone = o.PIANO_TONE_DEFAULT;
                                var i = n.default.read(a.default.PIANO_TONE_USE);
                                r.StringUtil.isEmpty(i) ||
                                    this.isToneExist(i, function (e) {
                                        t.curTone = e ? i : o.PIANO_TONE_DEFAULT;
                                    });
                            }),
                            (o.prototype.initOwnTone = function () {
                                var e = this,
                                    t = n.default.read(a.default.PIANO_TONE_OWN);
                                (this.ownToneList.push(o.PIANO_TONE_DEFAULT), r.StringUtil.isEmpty(t)) ||
                                    JSON.parse(t).forEach(function (t) {
                                        -1 == e.ownToneList.indexOf(t) &&
                                            e.mAllToneList.find(function (e) {
                                                return e && e.getKey() == t;
                                            }) &&
                                            e.ownToneList.push(t);
                                    });
                            }),
                            (o.prototype.isOwnTone = function (e) {
                                return -1 < this.ownToneList.indexOf(e);
                            }),
                            (o.prototype.getOwnToneList = function () {
                                return this.ownToneList;
                            }),
                            (o.prototype.unlockTone = function (t) {
                                this.ownToneList.find(function (e) {
                                    return e == t;
                                }) || (this.ownToneList.push(t), this.saveOwnTone());
                            }),
                            (o.prototype.deletOwnTone = function (e) {
                                var t = this.ownToneList.indexOf(e);
                                -1 < t && this.ownToneList.splice(t, 1), this.curTone == e && (this.curTone = o.PIANO_TONE_DEFAULT), this.saveOwnTone();
                            }),
                            (o.prototype.saveOwnTone = function () {
                                n.default.save(a.default.PIANO_TONE_OWN, JSON.stringify(this.ownToneList));
                            }),
                            (o.prototype.saveUseTone = function () {
                                n.default.save(a.default.PIANO_TONE_USE, this.curTone);
                            }),
                            (o.prototype.isToneExist = function (e, t) {
                                if ((void 0 === e && (e = o.PIANO_TONE_DEFAULT), e)) {
                                    var i = s.default.getResourcePath('resources/music/' + e + '/a.mp3');
                                    try {
                                        c.default
                                            .Ins()
                                            .getFileSystemManager()
                                            .access({
                                                path: i,
                                                success: function (e) {
                                                    l.default.w('--- isMusicPianoExist success result ---' + e), t && t(e);
                                                },
                                                fail: function (e) {
                                                    l.default.w('--- isMusicPianoExist false ---'), t && t(!1);
                                                },
                                            });
                                    } catch (e) {
                                        t && t(!1);
                                    }
                                } else t && t(!1);
                            }),
                            (o.prototype.onTrialEnd = function () {
                                (this.curTone = o.PIANO_TONE_DEFAULT), this.saveUseTone();
                            }),
                            (o.prototype.switchTone = function (e) {
                                (this.curTone = e), this.saveUseTone();
                            }),
                            (o.PIANO_TONE_DEFAULT = 'piano'),
                            o
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../../../LogicPlatform/PlatformProxy': 'PlatformProxy',
                '../../../base/Log': 'Log',
                '../../../config/LSKey': 'LSKey',
                '../../../util/PU': 'PU',
                '../../../util/StringUtil': 'StringUtil',
                '../../Logic/GameItemsManager': 'GameItemsManager',
                '../../Network/Protocol/StorageUtil': 'StorageUtil',
            },
        ],
        PlatformProxy: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'afe8bkBYVlKyYIFtpwaHKau', 'PlatformProxy'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./adapter/WechatGameAdapter'),
                    n = e('./adapter/DefaultAdapter'),
                    a = e('../../modules/MGUtils/TypeDefinition'),
                    r = e('./adapter/CMPlayAdapter'),
                    s = (function () {
                        function t() {
                            this.mAdapter = null;
                        }
                        return (
                            (t.Ins = function () {
                                return null == t.gs_Inst && (t.gs_Inst = new t()), t.gs_Inst.getAdapter();
                            }),
                            (t.init = function (e) {
                                switch ((t.Ins(), e)) {
                                    case a.PlatformType.PLATFORM_WECHAT:
                                    case a.PlatformType.PLATFORM_H5SDK:
                                        t.gs_Inst.mAdapter = new o.default();
                                        break;
                                    case a.PlatformType.PLATFORM_QQPLAY:
                                        break;
                                    case a.PlatformType.PLATFORM_CMPLAY:
                                        t.gs_Inst.mAdapter = new r.default();
                                        break;
                                    default:
                                        t.gs_Inst.mAdapter = new n.default();
                                }
                            }),
                            (t.prototype.getAdapter = function () {
                                return this.mAdapter;
                            }),
                            (t.gs_Inst = null),
                            t
                        );
                    })();
                (i.default = s), cc._RF.pop();
            },
            {
                '../../modules/MGUtils/TypeDefinition': 'TypeDefinition',
                './adapter/CMPlayAdapter': 'CMPlayAdapter',
                './adapter/DefaultAdapter': 'DefaultAdapter',
                './adapter/WechatGameAdapter': 'WechatGameAdapter',
            },
        ],
        PlayerInfoPopupProfab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'e1361vVcZdPz5k2KVZ3PkPE', 'PlayerInfoPopupProfab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('./EnergyPopupProfab'),
                    a = e('./GoldPopupProfab'),
                    r = e('./DiamondPopupProfab'),
                    s = e('../../../infoc/m_p2_pop_coin'),
                    c = e('../../../util/PageHeap'),
                    o = cc._decorator,
                    l = o.ccclass,
                    u = o.property,
                    d = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.player_info_popup_layout = null), (e.energy_popup_prefab = null), (e.gold_popup_prefab = null), (e.diamond_popup_prefab = null), (e.share_gift_prefab = null), (e.shop_prefab = null), (e.childCount = 0), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.setCloseSelfCallback = function (e) {
                                console.log('setCloseSelfCallback'), (this.closeSelfCallback = e);
                            }),
                            (e.prototype.onLoad = function () {
                                this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                });
                            }),
                            (e.prototype.start = function () {}),
                            (e.prototype.playerEnergyBtnClick = function (e) {
                                this.toEnergyPopupPrefab(e), console.log('playerEnergyBtnClick');
                            }),
                            (e.prototype.toEnergyPopupPrefab = function (e) {
                                var t = this;
                                s.default.report(s.default.SCENE_GET_ENERGY_DIALOG, e, s.default.ACTION_DIALOG_SHOW);
                                var i = cc.instantiate(this.energy_popup_prefab),
                                    o = i.getComponent(n.default);
                                o.setCloseCallback(function () {
                                    c.default.Ins().pop('EnergyDialog'), i.destroy(), t.childCount--, t.removeSelf();
                                }),
                                    o.setToGoldPopupPrefab(function () {
                                        t.toGoldPopupPrefab(s.default.SOURCE_GOLD_NOT_CLICK_GOLD);
                                    }),
                                    o.setSource(e),
                                    this.player_info_popup_layout.node.addChild(i),
                                    this.childCount++,
                                    console.log('toEnergyPopupPrefab'),
                                    c.default.Ins().push('EnergyDialog');
                            }),
                            (e.prototype.playerGoldBtnClick = function (e) {
                                this.toGoldPopupPrefab(e), console.log('playerGoldBtnClick');
                            }),
                            (e.prototype.toGoldPopupPrefab = function (e) {
                                var t = this;
                                s.default.report(s.default.SCENE_GET_GOLD_DIALOG, e, s.default.ACTION_DIALOG_SHOW);
                                var i = cc.instantiate(this.gold_popup_prefab),
                                    o = i.getComponent(a.default);
                                o.setCloseCallback(function () {
                                    c.default.Ins().pop('GoldDialog'), i.destroy(), t.childCount--, t.removeSelf();
                                }),
                                    o.setToDiamondPopupPrefab(function () {
                                        t.toDiamondPopupPrefab(s.default.SOURCE_DIAMOND_NOT_CLICK_DIAMOND);
                                    }),
                                    o.setSource(e),
                                    this.player_info_popup_layout.node.addChild(i),
                                    this.childCount++,
                                    console.log('toGoldPopupPrefab'),
                                    c.default.Ins().push('GoldDialog');
                            }),
                            (e.prototype.playerDiamondBtnClick = function (e) {
                                this.toDiamondPopupPrefab(e), console.log('playerDiamondBtnClick');
                            }),
                            (e.prototype.toDiamondPopupPrefab = function (e) {
                                var t = this;
                                s.default.report(s.default.SCENE_GET_DIAMOND_DIALOG, e, s.default.ACTION_DIALOG_SHOW);
                                var i = cc.instantiate(this.diamond_popup_prefab),
                                    o = i.getComponent(r.default);
                                o.setCloseCallback(function () {
                                    c.default.Ins().pop('DiamondDialog'), i.destroy(), t.childCount--, t.removeSelf();
                                }),
                                    o.setSource(e),
                                    this.player_info_popup_layout.node.addChild(i),
                                    this.childCount++,
                                    console.log('toDiamondPopupPrefab'),
                                    c.default.Ins().push('DiamondDialog');
                            }),
                            (e.prototype.removeSelf = function () {
                                0 == this.childCount && this.closeSelfCallback && this.closeSelfCallback();
                            }),
                            __decorate([u(cc.Layout)], e.prototype, 'player_info_popup_layout', void 0),
                            __decorate([u(cc.Prefab)], e.prototype, 'energy_popup_prefab', void 0),
                            __decorate([u(cc.Prefab)], e.prototype, 'gold_popup_prefab', void 0),
                            __decorate([u(cc.Prefab)], e.prototype, 'diamond_popup_prefab', void 0),
                            __decorate([u(cc.Prefab)], e.prototype, 'share_gift_prefab', void 0),
                            __decorate([u(cc.Prefab)], e.prototype, 'shop_prefab', void 0),
                            (e = __decorate([l], e))
                        );
                    })(cc.Component);
                (i.default = d), cc._RF.pop();
            },
            {
                '../../../infoc/m_p2_pop_coin': 'm_p2_pop_coin',
                '../../../util/PageHeap': 'PageHeap',
                './DiamondPopupProfab': 'DiamondPopupProfab',
                './EnergyPopupProfab': 'EnergyPopupProfab',
                './GoldPopupProfab': 'GoldPopupProfab',
            },
        ],
        PlayerMgr: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'e81e3RJ3/lETrbPL+DSninL', 'PlayerMgr'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var u = e('../../config/LSKey'),
                    d = e('../Network/Protocol/User'),
                    p = e('../Core/GameDefine'),
                    o = e('../../util/Dictionary'),
                    h = e('./LevelMgr'),
                    f = e('../Network/Protocol/StorageUtil'),
                    m = e('../Network/Protocol/UserUtil'),
                    g = e('./Level'),
                    n = e('../../base/Log'),
                    _ = e('./Plugin/PluginMgr'),
                    y = e('../UI/MusicLevelDataLoader'),
                    S = e('../../util/StringUtil'),
                    v = e('../../base/PullDataStatus'),
                    I = e('../Network/Protocol/MemCache'),
                    a = (function () {
                        function e() {
                            (this.mUserInfoObservers = []), (this.mLevelRecords = new o.Dictionary()), (this.isPulling = !1), (this.mUser = new d.default());
                        }
                        return (
                            (e.prototype.addUserListener = function (e) {
                                this.mUserInfoObservers.push(e), this.notifyUserListener(), console.log('[PlayerManager] add listener, number=' + this.mUserInfoObservers.length);
                            }),
                            (e.prototype.removeUserListener = function (e) {
                                var t = this.mUserInfoObservers.indexOf(e);
                                this.mUserInfoObservers.splice(t, 1), console.log('[PlayerManager] remove listener, number=' + this.mUserInfoObservers.length);
                            }),
                            (e.prototype.notifyUserListener = function () {
                                var t = this;
                                this.mUser &&
                                    this.mUserInfoObservers.forEach(function (e) {
                                        e.onChange(t.mUser.hp, t.mUser.coin, t.mUser.diamond, t.mUser.level, t.mUser.curUserExp);
                                    });
                            }),
                            (e.prototype.init = function () {
                                var e = f.default.read(u.default.UserInfo);
                                m.default.parseToUser(e, this.mUser), this.initDefaultUnlockMusic(), this.mergeRecords(f.default.read(u.default.UserLevelRecord));
                            }),
                            (e.prototype.compareServerData = function (e, t) {
                                return e.level < t.level || (e.level == t.level && e.curUserExp < t.curUserExp);
                            }),
                            (e.prototype.mergeUser = function (e, t) {
                                var i = !1;
                                e.level != t.level && ((e.level = t.level), (i = !0)), e.curUserExp != t.curUserExp && ((e.curUserExp = t.curUserExp), (i = !0)), e.hp != t.hp && ((e.hp = t.hp), (i = !0)), e.coin != t.coin && ((e.coin = t.coin), (i = !0)), e.diamond != t.diamond && ((e.diamond = t.diamond), (i = !0)), e.lastRecovery != t.lastRecovery && ((e.lastRecovery = t.lastRecovery), (i = !0)), e.lastLevelMid != t.lastLevelMid && (e.lastLevelMid = t.lastLevelMid), i && (this.saveUserInfo(), this.notifyUserListener());
                            }),
                            (e.prototype.pullCloudInfo = function () {
                                var l = this;
                                return (
                                    n.default.i('start pullPlayerInfo, isPulling=' + this.isPulling + '  pullStatus=' + v.PullDataStatus.isPullDataSuccess),
                                    this.isPulling || v.PullDataStatus.isPullDataSuccess
                                        ? new Promise(function (e) {
                                              e();
                                          })
                                        : ((this.isPulling = !0),
                                          new Promise(function (c, e) {
                                              f.default.readFromNet(
                                                  u.default.KEYS_NEED_SYNC,
                                                  function (e) {
                                                      if (((v.PullDataStatus.isPullDataSuccess = !0), e)) {
                                                          var t = e[u.default.UserLevelRecord];
                                                          t && l.mergeRecords(t);
                                                          var i = e[u.default.UserInfo],
                                                              o = new d.default();
                                                          m.default.parseToUser(i, o);
                                                          var n = l.compareServerData(l.mUser, o);
                                                          if ((n || (n = l.compareStorageVersionKey(e[u.default.STORAGE_VERSION])), n)) {
                                                              l.mergeUser(l.mUser, o), I.MemCache.Ins().batchSaveStart();
                                                              for (var a = 0; a < u.default.KEYS_NEED_SYNC.length; a++) {
                                                                  var r = u.default.KEYS_NEED_SYNC[a];
                                                                  if (r != u.default.UserInfo && r != u.default.UserLevelRecord) {
                                                                      var s = e[r];
                                                                      S.StringUtil.isNullOrUndefined(s) || f.default.save(r, s);
                                                                  }
                                                              }
                                                              I.MemCache.Ins().batchSaveEnd(), _.default.Ins().reset();
                                                          }
                                                      }
                                                      (l.isPulling = !1), c && c();
                                                  },
                                                  function () {
                                                      (l.isPulling = !1), n.default.e('PlayerManager read net failed:'), c();
                                                  },
                                              );
                                          }))
                                );
                            }),
                            (e.prototype.compareStorageVersionKey = function (e) {
                                var t = 0;
                                S.StringUtil.isEmpty(e) || (t = parseInt(e));
                                var i = f.default.read(u.default.STORAGE_VERSION),
                                    o = 0;
                                return S.StringUtil.isEmpty(i) || (o = parseInt(i)), o < t;
                            }),
                            (e.Ins = function () {
                                return null == this._ins && (this._ins = new e()), this._ins;
                            }),
                            (e.prototype.getHP = function () {
                                return this.mUser.hp;
                            }),
                            (e.prototype.addHP = function () {
                                this.setHP(this.mUser.hp + 1);
                            }),
                            (e.prototype.setHP = function (e) {
                                this.mUser.hp != e && ((this.mUser.hp = e), this.saveUserInfo(), this.notifyUserListener());
                            }),
                            (e.prototype.getUserLastLevelMid = function () {
                                return this.mUser.lastLevelMid;
                            }),
                            (e.prototype.setUserLastLevelMid = function (e) {
                                this.mUser.lastLevelMid != e && ((this.mUser.lastLevelMid = e), this.saveUserInfo());
                            }),
                            (e.prototype.getLastRecovery = function () {
                                return this.mUser.lastRecovery;
                            }),
                            (e.prototype.setLastRecovery = function (e) {
                                this.mUser.lastRecovery != e && ((this.mUser.lastRecovery = e), this.saveUserInfo());
                            }),
                            (e.prototype.getUserLevel = function () {
                                return this.mUser.level;
                            }),
                            (e.prototype.setUserLevel = function (e) {
                                this.mUser.level != e && ((this.mUser.level = e), this.saveUserInfo(), this.notifyUserListener());
                            }),
                            (e.prototype.getUserCurrentExp = function () {
                                return this.mUser.curUserExp;
                            }),
                            (e.prototype.setUserCurrentExp = function (e) {
                                this.mUser.curUserExp != e && ((this.mUser.curUserExp = e), this.saveUserInfo());
                            }),
                            (e.prototype.getUserDiamond = function () {
                                return this.mUser.diamond;
                            }),
                            (e.prototype.setUserDiamond = function (e) {
                                this.mUser.diamond != e && ((this.mUser.diamond = e), this.saveUserInfo(), this.notifyUserListener());
                            }),
                            (e.prototype.getUserCoin = function () {
                                return this.mUser.coin;
                            }),
                            (e.prototype.addUserCoin = function () {
                                this.setUserCoin(this.mUser.coin + 1);
                            }),
                            (e.prototype.setUserCoin = function (e) {
                                this.mUser.coin != e && ((this.mUser.coin = e), this.saveUserInfo(), this.notifyUserListener());
                            }),
                            (e.prototype.saveUserInfo = function () {
                                var e = m.default.parseUserToString(this.mUser);
                                f.default.save(u.default.UserInfo, e);
                            }),
                            (e.prototype.increaseHp = function (e) {
                                (this.mUser.hp += e), this.saveUserInfo(), this.notifyUserListener();
                            }),
                            (e.prototype.increaseDiamond = function (e) {
                                (this.mUser.diamond += e), this.saveUserInfo(), this.notifyUserListener();
                            }),
                            (e.prototype.unlockTypeToFlag = function (e) {
                                var t = p.eUnlockFlag.FLAG_NONE;
                                switch (e) {
                                    case g.eUnlockType.UNLOCK_TYPE_LV:
                                        t = p.eUnlockFlag.FLAG_LOCKED_LV;
                                        break;
                                    case g.eUnlockType.UNLOCK_TYPE_GOLD:
                                        t = p.eUnlockFlag.FLAG_LOCKED_GOLD;
                                        break;
                                    case g.eUnlockType.UNLOCK_TYPE_DIAMOND:
                                        t = p.eUnlockFlag.FLAG_LOCKED_DIAMOND;
                                        break;
                                    case g.eUnlockType.UNLOCK_TYPE_STAR:
                                        t = p.eUnlockFlag.FLAG_LOCKED_STAR;
                                        break;
                                    case g.eUnlockType.UNLOCK_TYPE_ACTIVITY:
                                        t = p.eUnlockFlag.FLAG_LOCKED_ACTIVITY;
                                        break;
                                    case g.eUnlockType.UNLOCK_TYPE_LV_TRY:
                                        t = p.eUnlockFlag.FLAG_LOCKED_LV_TRY;
                                        break;
                                    case g.eUnlockType.UNLOCK_TYPE_VIP:
                                        t = p.eUnlockFlag.FLAG_UNLOCK_BY_VIP;
                                        break;
                                    case g.eUnlockType.UNLOCK_TYPE_VIDEO:
                                        t = p.eUnlockFlag.FLAG_LOCKED_VIDEO;
                                }
                                return t;
                            }),
                            (e.prototype.updateLvUnlockRecord = function () {
                                var i = this;
                                y.MusicLevelDataLoader.getMusicLevel().forEach(function (e) {
                                    if (null == i.mLevelRecords.get(e.music.mid)) {
                                        var t = new p.LevelRecord();
                                        (t.mId = e.id), (t.mMid = e.music.mid), (t.mUnlockFlag = i.unlockTypeToFlag(e.levelUnlock.unlockType)), i.mLevelRecords.put(t.mMid, t);
                                    }
                                });
                            }),
                            (e.prototype.addNewRecord = function (e, t, i) {
                                var o = this.mLevelRecords.get(t);
                                return null != o || (((o = new p.LevelRecord()).mId = e), (o.mMid = t), (o.mUnlockFlag = this.unlockTypeToFlag(i)), this.mLevelRecords.put(t, o)), o;
                            }),
                            (e.prototype.initDefaultUnlockMusic = function () {
                                this.addNewRecord(1, 100001, g.eUnlockType.UNLOCK_TYPE_LV);
                                var e = new p.LevelRecord();
                                (e.mId = 1), (e.mMid = 100001), (e.mUnlockFlag = p.eUnlockFlag.FLAG_UNLOCK_LV), this.mLevelRecords.put(e.mMid, e);
                            }),
                            (e.prototype.mergeRecords = function (e) {
                                var l = this;
                                if (e && 0 < e.length) {
                                    var t = e.split('*');
                                    if (t && 0 < t.length) {
                                        var u = !1;
                                        t.forEach(function (e) {
                                            var t = e.split('@');
                                            if (t && 0 < t.length) {
                                                var i = void 0,
                                                    o = void 0,
                                                    n = 0,
                                                    a = 0,
                                                    r = 0,
                                                    s = p.eUnlockFlag.FLAG_NONE;
                                                if ((t && 6 <= t.length && ((i = parseInt(t[0])), (o = parseInt(t[1])), (n = parseInt(t[2])), (a = parseInt(t[3])), (r = parseFloat(t[4])), (s = parseInt(t[5])) == p.eUnlockFlag.FLAG_UNLOCK_GOLD && (s = p.eUnlockFlag.FLAG_LOCKED_GOLD)), isNaN(o) || isNaN(i) || 0 == o || 0 == i)) return;
                                                var c = l.getLevelRecordByMid(o);
                                                null == c && (((c = new p.LevelRecord()).mMid = o), (c.mId = i), (u = !0)), l.addLevelRecord(c, n) && (u = !0), l.addLevelStar(c, o, a) && (u = !0), l.addLevelSpeed(c, r) && (u = !0), l.addLevelUnlock(c, s) && (u = !0), c.isEmpty() || l.mLevelRecords.put(o, c);
                                            }
                                        }),
                                            u && this.saveRecord(),
                                            n.default.i('after merge records, size=' + this.mLevelRecords.size());
                                    }
                                }
                            }),
                            (e.prototype.addLevelSpeed = function (e, t) {
                                var i = !1;
                                return null != e && e.mBestSpeed < t && ((e.mBestSpeed = t), (i = !0)), i;
                            }),
                            (e.prototype.addLevelUnlock = function (e, t) {
                                var i = !1;
                                if (null != e) {
                                    var o = !p.LevelRecord.isLocked(t),
                                        n = !p.LevelRecord.isLocked(e.mUnlockFlag);
                                    e.mUnlockFlag == p.eUnlockFlag.FLAG_NONE && ((e.mUnlockFlag = t), (i = !0)), !n && o && ((e.mUnlockFlag = t), (i = !0));
                                }
                                return i;
                            }),
                            (e.prototype.addLevelStar = function (e, t, i) {
                                var o = !1;
                                return null != e && e.mBestStar < i && ((e.mBestStar = i), (o = !0)), o;
                            }),
                            (e.prototype.addLevelRecord = function (e, t) {
                                var i = !1;
                                return null != e && e.mBestScore < t && ((e.mBestScore = t), (i = !0)), i;
                            }),
                            (e.prototype.getLevelRecordByMid = function (e) {
                                return this.mLevelRecords.get(e);
                            }),
                            (e.prototype.getLevelRecords = function () {
                                return this.mLevelRecords;
                            }),
                            (e.prototype.setLevelRecord = function (e) {
                                if (e && !isNaN(e.mId)) {
                                    var t = !1,
                                        i = this.getLevelRecord(e.mId);
                                    return null == i ? (((i = new p.LevelRecord()).mId = e.mId), (i.mMid = e.mMid), (i.mBestScore = e.mScore), (i.mBestStar = e.mStar), (i.mBestSpeed = e.mSpeed), (i.mUnlockFlag = e.mUnlockFlag), this.mLevelRecords.put(e.mMid, i)) : (e.mScore > i.mBestScore && ((i.mBestScore = e.mScore), (t = !0)), e.mStar > i.mBestStar && ((i.mBestStar = e.mStar), (t = !0)), e.mSpeed > i.mBestSpeed && ((i.mBestSpeed = e.mSpeed), (t = !0)), (i.mUnlockFlag = e.mUnlockFlag)), (t = !0), (i.mBadBlockType = e.mBadBlockType), (i.mBadBlcokCount = e.mBadBlcokCount), (i.mbadEndBlock = e.mbadEndBlock), (i.mIsUpLevel = e.mIsUpLevel), (i.mCoin = e.mCoin), (i.mExp = e.mExp), t && this.saveRecord(), null;
                                }
                            }),
                            (e.prototype.saveRecord = function () {
                                var t = [];
                                this.mLevelRecords.getPairs().forEach(function (e) {
                                    t.push(e.value);
                                });
                                var e = m.default.parseLevelRecordToStr(t);
                                f.default.save(u.default.UserLevelRecord, e);
                            }),
                            (e.prototype.getLevelRecord = function (e) {
                                for (var t = this.mLevelRecords.getPairs(), i = t.length, o = 0; o < i; o++) {
                                    var n = t[o].value;
                                    if (n.mId == e) return n;
                                }
                                return null;
                            }),
                            (e.prototype.getTotalStar = function () {
                                var i = 0;
                                return (
                                    this.mLevelRecords.getPairs().forEach(function (e) {
                                        var t = e.value;
                                        t.mBestStar <= 3 && (i += t.mBestStar);
                                    }),
                                    i
                                );
                            }),
                            (e.prototype.getTotalCrown = function () {
                                var i = 0;
                                return (
                                    this.mLevelRecords.getPairs().forEach(function (e) {
                                        var t = e.value;
                                        3 < t.mBestStar && (i += t.mBestStar - 3);
                                    }),
                                    i
                                );
                            }),
                            (e.prototype.getTotalScore = function () {
                                var i = 0;
                                return (
                                    this.mLevelRecords.getPairs().forEach(function (e) {
                                        var t = e.value;
                                        0 < t.mBestScore && (i += t.mBestScore);
                                    }),
                                    i
                                );
                            }),
                            (e.prototype.refreshUnlockState = function (e) {
                                var i = this,
                                    t = h.LevelMgr.Ins().getLevel(e),
                                    o = y.MusicLevelDataLoader.getMusicLevelsByLv(t.needLv),
                                    n = o[o.length - 1];
                                if (n.levelUnlock.unlockType == g.eUnlockType.UNLOCK_TYPE_LV_TRY) {
                                    var a = this.getLevelRecord(n.id);
                                    null == a && (a = this.addNewRecord(n.id, n.music.mid, n.levelUnlock.unlockType));
                                    var r = h.LevelMgr.Ins().getLevelInfo(n.id),
                                        s = r.m_needCrown,
                                        c = r.m_needCrown2,
                                        l = 0,
                                        u = 0;
                                    o.forEach(function (e) {
                                        if (e.levelUnlock.unlockType == g.eUnlockType.UNLOCK_TYPE_LV) {
                                            var t = i.getLevelRecord(e.id);
                                            t && !t.isRecordLocked() && (3 < t.mBestStar ? ((l += 3), (u += t.mBestStar - 3)) : (l += t.mBestStar));
                                        }
                                    }),
                                        ((0 < s && s <= l) || (0 < c && c <= u)) && ((a.mUnlockFlag = p.eUnlockFlag.FLAG_UNLOCK_LV), this.saveRecord());
                                }
                            }),
                            e
                        );
                    })();
                (i.default = a), cc._RF.pop();
            },
            {
                '../../base/Log': 'Log',
                '../../base/PullDataStatus': 'PullDataStatus',
                '../../config/LSKey': 'LSKey',
                '../../util/Dictionary': 'Dictionary',
                '../../util/StringUtil': 'StringUtil',
                '../Core/GameDefine': 'GameDefine',
                '../Network/Protocol/MemCache': 'MemCache',
                '../Network/Protocol/StorageUtil': 'StorageUtil',
                '../Network/Protocol/User': 'User',
                '../Network/Protocol/UserUtil': 'UserUtil',
                '../UI/MusicLevelDataLoader': 'MusicLevelDataLoader',
                './Level': 'Level',
                './LevelMgr': 'LevelMgr',
                './Plugin/PluginMgr': 'PluginMgr',
            },
        ],
        PlayerTaskData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '70424qOWT1IVLJLCtY95ujr', 'PlayerTaskData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.getRow = function () {
                                return new a();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.PlayerTaskData = n;
                var a = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getID = function () {
                            return this.getInt('Id');
                        }),
                        (t.prototype.getName = function () {
                            return this.getString('Name');
                        }),
                        (t.prototype.getStep = function () {
                            return this.getInt('Step');
                        }),
                        (t.prototype.getRewardType = function () {
                            return this.getInt('RewardType');
                        }),
                        (t.prototype.getRewardEnergy = function () {
                            return this.getInt('RewardEnergy');
                        }),
                        (t.prototype.getRewardGold = function () {
                            return this.getInt('RewardGold');
                        }),
                        (t.prototype.getRewardDiamond = function () {
                            return this.getInt('RewardDiamond');
                        }),
                        t
                    );
                })(o.default);
                (i.PlayerTaskRow = a), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        PluginMgr: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'a56b7gJADNCFoj14o1TuhMo', 'PluginMgr'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./IPlugin'),
                    n = e('./EnergyPlugin'),
                    a = e('./ExpPlugin'),
                    r = e('../PluginScheduler'),
                    s = e('./EconomyPlugin'),
                    c = e('./UnlockPlugin'),
                    l = e('../../Network/Protocol/StorageUtil'),
                    u = (function () {
                        function e() {
                            (this.mPlugins = []), (this.m_bInit = !1), (this.mPluginScheduler = null);
                        }
                        return (
                            (e.Ins = function () {
                                return null == this._instance && ((this._instance = new e()), (this._instance.mPluginScheduler = new r.default())), this._instance;
                            }),
                            (e.prototype.init = function () {
                                this.m_bInit || (this.registerPlugin(new n.default()), this.registerPlugin(new c.default()), this.registerPlugin(new s.default()), this.registerPlugin(new a.default()), this.mPluginScheduler.start(), (this.m_bInit = !0));
                            }),
                            (e.prototype.clear = function () {
                                (this.m_bInit = !1), this.mPluginScheduler.stop(), this.mPlugins.splice(0, this.mPlugins.length);
                            }),
                            (e.prototype.reset = function () {
                                this.clear(), this.init();
                            }),
                            (e.prototype.registerPlugin = function (t) {
                                if (null != t) {
                                    var e = this.mPlugins.filter(function (e) {
                                        return e.getKind() == t.getKind();
                                    });
                                    (null != e && 0 != e.length) || this.mPlugins.push(t);
                                }
                            }),
                            (e.prototype.notifyLevelChanged = function (t) {
                                this.mPlugins.forEach(function (e) {
                                    return e.onLevelChanged(t);
                                }),
                                    l.default.pushAsync();
                            }),
                            (e.prototype.getPlugin = function (t) {
                                var e = this.mPlugins.filter(function (e) {
                                    return e.getKind() == t;
                                });
                                return e && 0 < e.length ? e[0] : null;
                            }),
                            (e.prototype.getPluginEx = function (t) {
                                var e = this.mPlugins.filter(function (e) {
                                    return e.getKind() == t;
                                });
                                return e && 0 < e.length ? e[0] : null;
                            }),
                            (e.prototype.updataPlugin = function (t) {
                                this.mPlugins.forEach(function (e) {
                                    return e.update(t);
                                });
                            }),
                            (e.prototype.onAwake = function () {
                                if (this.m_bInit) {
                                    var e = this.getPlugin(o.default.Plugin_Singin);
                                    e && e.onAwake(), (e = this.getPlugin(o.default.Plugin_Economy)) && e.onAwake(), (e = this.getPlugin(o.default.Plugin_Recharge)) && e.onAwake(), (e = this.getPlugin(o.default.Plugin_Skin_Chip)) && e.onAwake();
                                }
                            }),
                            e
                        );
                    })();
                (i.default = u), cc._RF.pop();
            },
            {
                '../../Network/Protocol/StorageUtil': 'StorageUtil',
                '../PluginScheduler': 'PluginScheduler',
                './EconomyPlugin': 'EconomyPlugin',
                './EnergyPlugin': 'EnergyPlugin',
                './ExpPlugin': 'ExpPlugin',
                './IPlugin': 'IPlugin',
                './UnlockPlugin': 'UnlockPlugin',
            },
        ],
        PluginScheduler: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '020395DqkpBs7krr/6+Z7Z8', 'PluginScheduler'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../Network/Protocol/UserUtil'),
                    n = e('./Plugin/PluginMgr'),
                    a = (function (t) {
                        function e() {
                            var e = t.call(this) || this;
                            return (e.scheduler = cc.director.getScheduler()), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.start = function () {
                                var i = o.default.getCurSysTime();
                                this.scheduler.scheduleUpdate(this, cc.Scheduler.PRIORITY_NON_SYSTEM, !1, function () {
                                    var e = o.default.getCurSysTime(),
                                        t = e - i;
                                    0.1 < t && ((i = e - (t % 0.1)), n.default.Ins().updataPlugin(e));
                                });
                            }),
                            (e.prototype.stop = function () {
                                this.scheduler.unscheduleUpdate(this);
                            }),
                            e
                        );
                    })(cc.Node);
                (i.default = a), cc._RF.pop();
            },
            {
                '../Network/Protocol/UserUtil': 'UserUtil',
                './Plugin/PluginMgr': 'PluginMgr',
            },
        ],
        PopupDlg: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '1a6ccjPig9K/aA+KSJtfFrQ', 'PopupDlg'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('../../../base/Log'),
                    n = e('../../../util/PageHeap'),
                    o = (function () {
                        function e() {
                            (this.mParentLayout = null), (this.mShowCount = 0), (this.mShowDialogCallback = null), (this.mDismissDialogCallback = null);
                        }
                        return (
                            (e.prototype.setParentLayout = function (e) {
                                e && (this.mParentLayout = e);
                            }),
                            (e.prototype.showPopupDlg = function (e, t, i) {
                                this.mParentLayout || console.error('PopupDlg showPopupDlg error: parentLayout is null');
                                var o = cc.instantiate(e);
                                t && t(o), this.mParentLayout.addChild(o), i && i(o), this.addShowCount(), n.default.Ins().push(o.name);
                            }),
                            (e.prototype.showDialog = function (e, t, i) {
                                this.mParentLayout ? (t && t(e), this.mParentLayout.addChild(e), i && i(e), this.addShowCount(), n.default.Ins().push(e.name)) : console.error('PopupDlg showPopupDlg error: parentLayout is null');
                            }),
                            (e.prototype.dismissDialog = function (e, t) {
                                e.destroy(), t && t(), this.removeShowCount(), n.default.Ins().pop(e.name);
                            }),
                            (e.prototype.showPopupDlgDynamic = function (e, i, o) {
                                this.mParentLayout || console.error('PopupDlg showPopupDlg error: parentLayout is null'), a.default.l('showPopupDlgDynamic:  ' + e);
                                var n = this;
                                cc.loader.loadRes(e, cc.Prefab, function (e, t) {
                                    n.showPopupDlg(t, i, o);
                                });
                            }),
                            (e.prototype.destroy = function () {
                                this.mParentLayout = null;
                            }),
                            (e.prototype.addShowCount = function () {
                                this.mShowCount++, this.mShowDialogCallback && this.mShowDialogCallback(this.mShowCount);
                            }),
                            (e.prototype.removeShowCount = function () {
                                this.mShowCount--, this.mDismissDialogCallback && this.mDismissDialogCallback(this.mShowCount);
                            }),
                            (e.prototype.setShowDialogCallback = function (e) {
                                this.mShowDialogCallback = e;
                            }),
                            (e.prototype.setDismissDialogCallback = function (e) {
                                this.mDismissDialogCallback = e;
                            }),
                            (e.prototype.isShowingDialog = function () {
                                return !(this.mShowCount <= 0);
                            }),
                            e
                        );
                    })();
                (i.PopupDlg = o), cc._RF.pop();
            },
            {
                '../../../base/Log': 'Log',
                '../../../util/PageHeap': 'PageHeap',
            },
        ],
        PreLoadAssets: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'bb87bi2aH1I0qxZcl4S9SqA', 'PreLoadAssets'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../Logic/NotifyEvent'),
                    n = e('../../Logic/EventBus');
                ((i.PreLoadAssets || (i.PreLoadAssets = {})).preload = function (i) {
                    if (window.delayPreloadResArr) {
                        var e = window.delayPreloadResArr,
                            t = e.length;
                        n.default.fire(o.default.LOADING_UI_NOTIFY, 'download', t),
                            cc.loader.load(
                                e,
                                function (e, t, i) {
                                    i && cc.loader.releaseAsset(i), console.info('progress ===>  loading ' + e + '/' + t + '  url=' + i.url), n.default.fire(o.default.LOADING_DOWNLOAD, i.url, 1);
                                },
                                function (e, t) {
                                    i && i();
                                },
                            );
                    } else i && i();
                }),
                    cc._RF.pop();
            },
            {
                '../../Logic/EventBus': 'EventBus',
                '../../Logic/NotifyEvent': 'NotifyEvent',
            },
        ],
        PrefabMgr: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'f72e3lIiCdO7qKzlwWbK/Ne', 'PrefabMgr'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var l = e('../../../base/Log'),
                    o = (function () {
                        function e() {}
                        return (
                            (e.prototype.loadPrefab = function (e, i, o) {
                                cc.loader.loadRes(e, cc.Prefab, function (e, t) {
                                    e && console.error(e), o && o(e, i ? cc.instantiate(t) : t);
                                });
                            }),
                            (e.prototype.load = function (n, a, r, i, s) {
                                void 0 === r && (r = !0), void 0 === i && (i = !1);
                                var c = this;
                                return new Promise(function (o, e) {
                                    var t = cc.find('loadingNode');
                                    t && 1 == i
                                        ? c.showProgress(function (e, i) {
                                              i && (t.addChild(i), l.default.l('[PrefabManager] show progress ' + n)),
                                                  s
                                                      ? s().then(
                                                            function (e) {
                                                                e
                                                                    ? c.loadPrefab(n, r, function (e, t) {
                                                                          a && a(e, t), o(), i && cc.isValid(i) && i.destroy();
                                                                      })
                                                                    : (o(), i && cc.isValid(i) && i.destroy());
                                                            },
                                                            function () {
                                                                o(), i && cc.isValid(i) && i.destroy();
                                                            },
                                                        )
                                                      : c.loadPrefab(n, r, function (e, t) {
                                                            a && a(e, t), o(), i && cc.isValid(i) && i.destroy();
                                                        });
                                          })
                                        : c.loadPrefab(n, r, function (e, t) {
                                              a && a(e, t), o();
                                          });
                                });
                            }),
                            (e.prototype.showProgress = function (e) {
                                this.loadPrefab('prefab/SkinLoadingprefab', !0, e);
                            }),
                            e
                        );
                    })(),
                    n = (function () {
                        function e() {}
                        return (
                            (e.load = function (e, t, i, o, n) {
                                return void 0 === i && (i = !0), void 0 === o && (o = !1), this.ins.load(e, t, i, o, n);
                            }),
                            (e.showProgress = function (e) {
                                this.ins.showProgress(e);
                            }),
                            (e.ins = new o()),
                            e
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../../../base/Log': 'Log',
            },
        ],
        Presenter: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'c2578eE8k1I46CpcA0iskWm', 'Presenter'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../social/SocialHelper'),
                    n = e('./G'),
                    a = e('../gamescene/GameSceneEntry'),
                    r = e('../util/PageHeap'),
                    s = e('./Log'),
                    c = e('../business/UI/GameEntraScene/PrefabMgr'),
                    l = e('../../modules/MGAdv/scripts/Logic/MGAdvEntrance'),
                    u = (function () {
                        function e() {
                            this.attachSysEvent();
                        }
                        return (
                            (e.prototype.enterScene = function (i, o, n, e, a) {
                                var r = this;
                                void 0 === e && (e = !1);
                                var s = cc.find('loadingNode');
                                s && 1 == e
                                    ? c.default.showProgress(function (e, t) {
                                          t && s.addChild(t),
                                              r.doEnterScene(i, o, n, function () {
                                                  t && cc.isValid(t) && t.destroy(), a && a();
                                              });
                                      })
                                    : this.doEnterScene(i, o, n);
                            }),
                            (e.prototype.doEnterScene = function (e, t, i, o) {
                                cc.sys.platform == cc.sys.WECHAT_GAME && wx.triggerGC(),
                                    cc.director.preloadScene(e, function () {
                                        s.default.l('[Presenter] enterScene, preloadScene; ' + e),
                                            t && (e == n.G.GAME_SCENE_NAME ? l.MGAdv.roundStart(t) : e == n.G.GAME_OVER_SCENE_NAME && l.MGAdv.roundEnd(t)),
                                            setTimeout(function () {
                                                i && i(), r.default.Ins().pushScene(e), cc.director.loadScene(e), o && o(), s.default.l('[Presenter] enterScene finish:' + e);
                                            }, 50);
                                    });
                            }),
                            (e.prototype.attachSysEvent = function () {
                                o.SocialHelper.offHideListen(this.onGameHide), o.SocialHelper.onHideListen(this.onGameHide), o.SocialHelper.offShowListen(this.onGameShow), o.SocialHelper.onShowListen(this.onGameShow);
                            }),
                            (e.prototype.onGameHide = function () {
                                var e = cc.director.getScene();
                                if (e.name === n.G.GAME_SCENE_NAME) {
                                    var t = e.getChildByName('Canvas').getComponent(a.default);
                                    t && (t.getGameInterface().pauseGame(), t.gameBackground());
                                }
                            }),
                            (e.prototype.onGameShow = function () {
                                var e = cc.director.getScene();
                                if (e.name === n.G.GAME_SCENE_NAME) {
                                    var t = e.getChildByName('Canvas').getComponent(a.default);
                                    t && t.gameForeground();
                                }
                            }),
                            e
                        );
                    })();
                (i.default = u), cc._RF.pop();
            },
            {
                '../../modules/MGAdv/scripts/Logic/MGAdvEntrance': 'MGAdvEntrance',
                '../business/UI/GameEntraScene/PrefabMgr': 'PrefabMgr',
                '../gamescene/GameSceneEntry': 'GameSceneEntry',
                '../social/SocialHelper': 'SocialHelper',
                '../util/PageHeap': 'PageHeap',
                './G': 'G',
                './Log': 'Log',
            },
        ],
        PropertiesPanel: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '45d03wnb1VBsbwu5c1bYVMa', 'PropertiesPanel'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var s,
                    o,
                    u = e('../../business/UI/GameEntraScene/BasicTouchEvent'),
                    p = e('../../base/G'),
                    h = e('../../property/PropertyDefines'),
                    f = e('../../util/nodeFacade'),
                    n = cc._decorator.ccclass,
                    a = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.setShowPropPopupCb = function (e) {
                                this.mShowPropPopupCb = e;
                            }),
                            (t.prototype.onLoad = function () {
                                this.initEvent(), this.updatePropertiesPanel();
                            }),
                            (t.prototype.initEvent = function () {
                                var r = this,
                                    s = this.node;
                                if (s)
                                    for (
                                        var c = [h.PROPERTYTYPE.GAME_DASH, h.PROPERTYTYPE.GAME_SLOW, h.PROPERTYTYPE.GAME_SHIELD],
                                            e = function (e, t) {
                                                var i = c[e],
                                                    o = l.getPropertyNodeName(i),
                                                    n = s.getChildByName(o);
                                                if (!n) return 'continue';
                                                var a = new u.default(function () {
                                                    r.onPropertyItemClick(i);
                                                });
                                                n.on(cc.Node.EventType.TOUCH_END, a.click, a);
                                            },
                                            l = this,
                                            t = 0,
                                            i = c.length;
                                        t < i;
                                        ++t
                                    )
                                        e(t);
                            }),
                            (t.prototype.updatePropertiesPanel = function () {
                                var e = this.node;
                                if (e)
                                    for (var t = p.G.Ap.propertyPack.getPlayProperty(), i = [h.PROPERTYTYPE.GAME_DASH, h.PROPERTYTYPE.GAME_SLOW, h.PROPERTYTYPE.GAME_SHIELD], o = 0, n = i.length; o < n; ++o) {
                                        var a = i[o],
                                            r = this.getPropertyNodeName(a),
                                            s = e.getChildByName(r);
                                        if (s) {
                                            var c = new h.Property(a),
                                                l = t.getPropertyCount(c),
                                                u = p.G.Ap.state.getCarryPropertyCount(c),
                                                d = new f.default(s).getChild('rect');
                                            0 < u ? (d.setChildVisible('add', !1), d.setChildVisible('mark', !1), d.setChildVisible('select', !0), d.setChildText('mark', '' + Math.min(l, 99))) : (0 < l ? (d.setChildVisible('mark', !0), d.setChildText('mark', '' + Math.min(l, 99)), d.setChildVisible('add', !1)) : (d.setChildVisible('add', !0), d.setChildVisible('mark', !1)), d.setChildVisible('select', !1));
                                        }
                                    }
                            }),
                            (t.prototype.playGetPropertyAnim = function (e) {
                                var t;
                                switch (e.type) {
                                    case h.PROPERTYTYPE.GAME_SLOW:
                                        t = this.node.getChildByName('propertyiconslow').getChildByName('rect').getChildByName('addOne');
                                        break;
                                    case h.PROPERTYTYPE.GAME_DASH:
                                        t = this.node.getChildByName('propertyicondash').getChildByName('rect').getChildByName('addOne');
                                        break;
                                    case h.PROPERTYTYPE.GAME_SHIELD:
                                        t = this.node.getChildByName('propertyiconshield').getChildByName('rect').getChildByName('addOne');
                                }
                                t.active = !0;
                                var i = t.getComponent(cc.Animation);
                                i && i.play('prop_add_one');
                            }),
                            (t.prototype.onPropertyItemClick = function (e) {
                                var t = this.node;
                                if (t) {
                                    var i = this.getPropertyNodeName(e),
                                        o = t.getChildByName(i);
                                    if (o) {
                                        var n = new h.Property(e),
                                            a = p.G.Ap.propertyPack.getPlayProperty().getPropertyCount(n),
                                            r = new f.default(o).getChild('rect');
                                        0 === a ? (r.setChildVisible('add', !0), r.setChildVisible('mark', !1), r.setChildVisible('select', !1), this.mShowPropPopupCb && this.mShowPropPopupCb(s.Store, n)) : r.isChildVisible('mark') ? (r.setChildVisible('add', !1), r.setChildVisible('mark', !1), r.setChildVisible('select', !0), p.G.Ap.state.addCarryProperty(n, 1), this.mShowPropPopupCb && this.mShowPropPopupCb(s.Desc, n)) : r.isChildVisible('select') && (r.setChildVisible('add', !1), r.setChildVisible('mark', !0), r.setChildVisible('select', !1), p.G.Ap.state.removeCarryProperty(n));
                                    }
                                }
                            }),
                            (t.prototype.getPropertyNodeName = function (e) {
                                var t = '';
                                switch (e) {
                                    case h.PROPERTYTYPE.GAME_DASH:
                                        t = 'propertyicondash';
                                        break;
                                    case h.PROPERTYTYPE.GAME_SLOW:
                                        t = 'propertyiconslow';
                                        break;
                                    case h.PROPERTYTYPE.GAME_SHIELD:
                                        t = 'propertyiconshield';
                                }
                                return t;
                            }),
                            (t = __decorate([n], t))
                        );
                    })(cc.Component);
                (i.default = a), ((o = s = i.PropShowType || (i.PropShowType = {}))[(o.Desc = 0)] = 'Desc'), (o[(o.Store = 1)] = 'Store'), cc._RF.pop();
            },
            {
                '../../base/G': 'G',
                '../../business/UI/GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
                '../../property/PropertyDefines': 'PropertyDefines',
                '../../util/nodeFacade': 'NodeFacade',
            },
        ],
        PropertyBarrel: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '943f1OqQuhGc4jHeb/am1b5', 'PropertyBarrel'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var p = e('./PropertyDefines'),
                    o = e('../util/Dictionary'),
                    h = e('../util/BinaryData'),
                    f = e('../../libs/base64'),
                    n = (function () {
                        function d(e) {
                            (this.properties = new o.Dictionary2(p.Property.compare)), (this.config = e);
                        }
                        return (
                            (d.prototype.parse = function (e) {
                                var t = new f.default().decode(e),
                                    i = h.default.StringToArrayBufferComplex(t, d.CODE),
                                    o = new DataView(i);
                                if (o.getUint8(0) === d.VERSION)
                                    for (var n = o.getUint32(4), a = 0; a < n; ++a) {
                                        var r = new DataView(i, d.HEADERSIZE + a * d.ITEMSIZE, d.ITEMSIZE),
                                            s = r.getUint32(0),
                                            c = r.getUint32(4),
                                            l = r.getInt32(8);
                                        l = Math.max(l, 0);
                                        var u = new p.Property(s, c);
                                        this.addProperty(u, l);
                                    }
                            }),
                            (d.prototype.stringfy = function () {
                                var e = this.properties.size(),
                                    t = new ArrayBuffer(d.HEADERSIZE + e * d.ITEMSIZE),
                                    i = new DataView(t);
                                i.setUint8(0, d.VERSION), i.setUint32(4, e);
                                for (var o = this.properties.getPairs(), n = 0; n < e; ++n) {
                                    var a = new DataView(t, d.HEADERSIZE + n * d.ITEMSIZE, d.ITEMSIZE),
                                        r = o[n].key,
                                        s = o[n].value;
                                    a.setUint32(0, r.type), a.setUint32(4, r.quality), a.setInt32(8, Math.max(0, s.count));
                                }
                                var c = h.default.ArrayBufferToStringComplex(t, d.CODE);
                                return new f.default().encode(c);
                            }),
                            (d.prototype.getPropertyCount = function (e) {
                                var t = this.getPropertyData(e);
                                return t ? t.count : 0;
                            }),
                            (d.prototype.useProperty = function (e) {
                                var t = this.getPropertyData(e);
                                return !(!t || 0 === t.count) && (t.count--, (t.count = Math.max(t.count, 0)), !0);
                            }),
                            (d.prototype.addProperty = function (e, t) {
                                void 0 === t && (t = 1);
                                var i = this.getPropertyData(e);
                                return i || ((i = new p.PropertyData()), this.addPropertyData(e, i)), (i.count += t), (i.count = Math.max(i.count, 0)), !0;
                            }),
                            (d.prototype.decreaseProperty = function (e, t) {
                                var i = this.getPropertyData(e);
                                i && ((i.count -= t), (i.count = Math.max(i.count, 0)));
                            }),
                            (d.prototype.getPropertyData = function (e) {
                                return this.properties.get(e);
                            }),
                            (d.prototype.addPropertyData = function (e, t) {
                                this.properties.put(e.clone(), t);
                            }),
                            (d.HEADERSIZE = 128),
                            (d.ITEMSIZE = 16),
                            (d.VERSION = 1),
                            (d.CODE = 45),
                            d
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../../libs/base64': 'base64',
                '../util/BinaryData': 'BinaryData',
                '../util/Dictionary': 'Dictionary',
                './PropertyDefines': 'PropertyDefines',
            },
        ],
        PropertyBlockNode: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '706f5x3ZsZNF4TtCALC6Iyz', 'PropertyBlockNode'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var c = e('../loader/GameSceneFrameLoader'),
                    o = e('./BlockNode'),
                    l = e('../../MUI/MUISprite'),
                    n = (function (n) {
                        function s() {
                            return (null !== n && n.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(s, n),
                            (s.prototype.createLayers = function () {
                                this.setPosition(this.mBlock.rect.x, this.mBlock.rect.y), this.setContentSize(this.mBlock.rect.width, this.mBlock.rect.height);
                                var e = this.mBlock,
                                    t = c.default.getInstance().getAtlas(),
                                    i = null;
                                if ((e && (i = t.getItem('propertyicon' + e.property.type)), i)) {
                                    var o = this.mBlock.rect.width / i.rect.width,
                                        n = this.mBlock.rect.width,
                                        a = i.rect.height * o,
                                        r = new l.default('Icon');
                                    (r.imageData = t), (r.imageItem = i), r.move(0, (this.mBlock.rect.height - a) / 2, n, a), r.setScale(120 / 180), this.addChild(r, s.ICON);
                                }
                            }),
                            (s.prototype.reuse = function (e) {
                                if ((n.prototype.reuse.call(this, e), e)) {
                                    var t = e,
                                        i = c.default
                                            .getInstance()
                                            .getAtlas()
                                            .getItem('propertyicon' + t.property.type),
                                        o = this.getChildByTag(s.ICON);
                                    if (o) o.imageItem = i;
                                }
                            }),
                            (s.prototype.updateTouchState = function (e) {
                                this.opacity = e ? 0.2 : 1;
                            }),
                            (s.ICON = 1),
                            s
                        );
                    })(o.default);
                (i.default = n), cc._RF.pop();
            },
            {
                '../../MUI/MUISprite': 'MUISprite',
                '../loader/GameSceneFrameLoader': 'GameSceneFrameLoader',
                './BlockNode': 'BlockNode',
            },
        ],
        PropertyConfig: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '90c60UkITFM76TzIAoiRLAP', 'PropertyConfig'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var c = e('./PropertyDefines'),
                    o = e('../util/Dictionary'),
                    n = e('./PropertyFactory'),
                    a = e('../business/Logic/GameItemsManager'),
                    l = e('../util/NumberUtil'),
                    r = (function () {
                        function e() {
                            this.items = new o.Dictionary2(c.Property.compare);
                        }
                        return (
                            (e.prototype.load = function (e) {
                                for (var t = 0, i = e.length; t < i; ++t) {
                                    var o = this.parseItem(e[t]);
                                    o && this.items.put(o.key.clone(), o);
                                }
                                return !0;
                            }),
                            (e.prototype.getParam = function (e) {
                                return this.items.get(e);
                            }),
                            (e.prototype.getParamByItemId = function (e) {
                                for (var t = this.items.getPairs(), i = 0, o = t.length; i < o; ++i) {
                                    var n = t[i].value;
                                    if (n.itemId === e) return n;
                                }
                                return null;
                            }),
                            (e.prototype.parseItem = function (t) {
                                var e = l.default.parseIntFromString(t.getId()),
                                    i = Math.max(1, l.default.parseIntFromString(t.getBuyPrice())),
                                    o = this.buyTypeToCostTypeEnum(t.getBuyType()),
                                    n = new c.Property(e, 0),
                                    a = new c.PropertyParam(n);
                                (a.price = i), (a.costType = o), (a.name = t.getName() || ''), (a.itemId = t.getItemId() || ''), (a.describe = t.getDescribe() || ''), (a.pic = t.getPic() || ''), (a.small_pic = t.getSmallPic() || '');
                                try {
                                    var r = t.getEffect() || '';
                                    if ('' != r) {
                                        var s = JSON.parse(r);
                                        a.effect = this.parseEffect(n, s);
                                    }
                                } catch (e) {
                                    (a.effect = null), console.warn('靓具effect异常 itemid = ' + a.itemId + '   effect = ' + t.getEffect());
                                }
                                return a;
                            }),
                            (e.prototype.parseEffect = function (e, t) {
                                return n.PropertyEffectFactory.create(e, t);
                            }),
                            (e.prototype.buyTypeToCostTypeEnum = function (e) {
                                if (e) {
                                    if (e === a.GameItemsDefine.ID_GOLD) return c.COSTTYPE.GOLD;
                                    if (e === a.GameItemsDefine.ID_DIAMOND) return c.COSTTYPE.DIAMON;
                                }
                                return c.COSTTYPE.GOLD;
                            }),
                            e
                        );
                    })();
                (i.default = r), cc._RF.pop();
            },
            {
                '../business/Logic/GameItemsManager': 'GameItemsManager',
                '../util/Dictionary': 'Dictionary',
                '../util/NumberUtil': 'NumberUtil',
                './PropertyDefines': 'PropertyDefines',
                './PropertyFactory': 'PropertyFactory',
            },
        ],
        PropertyDefines: [
            function (e, t, i) {
                'use strict';
                var o;
                cc._RF.push(t, 'f93cbPxsVFKSbPYRbKrOwIs', 'PropertyDefines'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    ((o = i.PROPERTYTYPE || (i.PROPERTYTYPE = {}))[(o.NULL = 0)] = 'NULL'),
                    (o[(o.DIAMOND = 1)] = 'DIAMOND'),
                    (o[(o.GOLD = 2)] = 'GOLD'),
                    (o[(o.ENERGY = 3)] = 'ENERGY'),
                    (o[(o.STAMPS = 4)] = 'STAMPS'),
                    (o[(o.SKIN_DEFAULT = 5)] = 'SKIN_DEFAULT'),
                    (o[(o.SKIN_ICE = 6)] = 'SKIN_ICE'),
                    (o[(o.SKIN_SAKURA = 7)] = 'SKIN_SAKURA'),
                    (o[(o.SKIN_WORLDCUP = 8)] = 'SKIN_WORLDCUP'),
                    (o[(o.SKIN_WORLDCUP_TRY1 = 9)] = 'SKIN_WORLDCUP_TRY1'),
                    (o[(o.SKIN_WORLDCUP_TRY2 = 10)] = 'SKIN_WORLDCUP_TRY2'),
                    (o[(o.SKIN_WORLDCUP_TRY3 = 11)] = 'SKIN_WORLDCUP_TRY3'),
                    (o[(o.SKIN_GREENWILD = 12)] = 'SKIN_GREENWILD'),
                    (o[(o.SKIN_GIRL = 13)] = 'SKIN_GIRL'),
                    (o[(o.SKIN_GIRL_TRY1 = 14)] = 'SKIN_GIRL_TRY1'),
                    (o[(o.SKIN_GIRL_TRY2 = 15)] = 'SKIN_GIRL_TRY2'),
                    (o[(o.SKIN_GIRL_TRY3 = 16)] = 'SKIN_GIRL_TRY3'),
                    (o[(o.SKIN_STARS = 17)] = 'SKIN_STARS'),
                    (o[(o.SKIN_STARS_TRY1 = 18)] = 'SKIN_STARS_TRY1'),
                    (o[(o.SKIN_STARS_TRY2 = 19)] = 'SKIN_STARS_TRY2'),
                    (o[(o.SKIN_STARS_TRY3 = 20)] = 'SKIN_STARS_TRY3'),
                    (o[(o.GAME_DASH = 21)] = 'GAME_DASH'),
                    (o[(o.GAME_SLOW = 22)] = 'GAME_SLOW'),
                    (o[(o.GAME_SHIELD = 23)] = 'GAME_SHIELD'),
                    (o[(o.GAME_AVOID = 29)] = 'GAME_AVOID'),
                    (o[(o.GAME_CONVERSION = 30)] = 'GAME_CONVERSION'),
                    (o[(o.GAME_FANATICAL = 31)] = 'GAME_FANATICAL'),
                    (o[(o.GAME_FOG = 32)] = 'GAME_FOG'),
                    (o[(o.GAME_CONTROLL = 33)] = 'GAME_CONTROLL'),
                    (o[(o.GAME_OBSTACLE = 34)] = 'GAME_OBSTACLE'),
                    (o[(o.END = 35)] = 'END');
                var n,
                    a,
                    r = (function () {
                        function e() {}
                        return (e.ID_DIAMOND = '1-1-0'), (e.ID_COINS = '2-1-0'), (e.ID_POWER = '3-1-0'), (e.ID_TICKET = '7-1-0'), (e.ID_SKIN_DEFAULT = '5-1-0'), (e.ID_SKIN_ICE = '5-2-0'), (e.ID_SKIN_SAKURA = '5-3-0'), (e.ID_SKIN_WORLDCUP0 = '5-4-0'), (e.ID_SKIN_WORLDCUP1 = '5-4-1'), (e.ID_SKIN_WORLDCUP2 = '5-4-2'), (e.ID_SKIN_WORLDCUP3 = '5-4-3'), (e.ID_SKIN_GREENWILD = '5-5-0'), (e.ID_SKIN_GIRL0 = '5-6-0'), (e.ID_SKIN_GIRL1 = '5-6-1'), (e.ID_SKIN_GIRL2 = '5-6-2'), (e.ID_SKIN_GIRL3 = '5-6-3'), (e.ID_SKIN_STARS0 = '5-7-0'), (e.ID_SKIN_STARS1 = '5-7-1'), (e.ID_SKIN_STARS2 = '5-7-2'), (e.ID_SKIN_STARS3 = '5-7-3'), e;
                    })();
                (i.PROPERTYITEMID = r), ((a = n = i.COSTTYPE || (i.COSTTYPE = {}))[(a.GOLD = 0)] = 'GOLD'), (a[(a.DIAMON = 1)] = 'DIAMON');
                var s = (function () {
                    function e(e, t) {
                        void 0 === t && (t = 0), (this.type = e), (this.quality = t);
                    }
                    return (
                        (e.prototype.isSame = function (e) {
                            return e.type === this.type && e.quality === this.quality;
                        }),
                        (e.prototype.clone = function () {
                            return new e(this.type, this.quality);
                        }),
                        (e.compare = function (e, t) {
                            return e.type != t.type ? (e.type > t.type ? 1 : -1) : e.quality != t.quality ? (e.type > t.type ? 1 : -1) : 0;
                        }),
                        e
                    );
                })();
                i.Property = s;
                var c = function () {};
                i.PropertyEffect = c;
                var l = function (e) {
                    (this.costType = n.GOLD), (this.key = e), (this.price = 0), (this.itemId = ''), (this.name = ''), (this.describe = ''), (this.effect = null);
                };
                i.PropertyParam = l;
                var u = function () {
                    this.count = 0;
                };
                i.PropertyData = u;
                var d = (function (t) {
                    function e() {
                        var e = (null !== t && t.apply(this, arguments)) || this;
                        return (e.speed = 8), (e.permanentTime = 15), (e.temporyTime = 5), e;
                    }
                    return __extends(e, t), e;
                })(c);
                i.PropertyEffectDash = d;
                var p = (function (t) {
                    function e() {
                        var e = (null !== t && t.apply(this, arguments)) || this;
                        return (e.speed = 2), (e.permanentTime = 15), (e.temporyTime = 5), e;
                    }
                    return __extends(e, t), e;
                })(c);
                i.PropertyEffectSlow = p;
                var h = (function (t) {
                    function e() {
                        var e = (null !== t && t.apply(this, arguments)) || this;
                        return (e.permanentTime = 15), (e.temporyTime = 5), e;
                    }
                    return __extends(e, t), e;
                })(c);
                i.PropertyEffectShiled = h;
                var f = (function (t) {
                    function e() {
                        var e = (null !== t && t.apply(this, arguments)) || this;
                        return (e.numberOfEffects = 1), e;
                    }
                    return __extends(e, t), e;
                })(c);
                i.PropertyEffectAvoid = f;
                var m = (function (t) {
                    function e() {
                        var e = (null !== t && t.apply(this, arguments)) || this;
                        return (e.numberOfEffects = 1), e;
                    }
                    return __extends(e, t), e;
                })(c);
                i.PropertyEffectConversion = m;
                var g = (function (t) {
                    function e() {
                        var e = (null !== t && t.apply(this, arguments)) || this;
                        return (e.duration = 3), (e.numberOfEffects = 1), e;
                    }
                    return __extends(e, t), e;
                })(c);
                i.PropertyEffectFanatical = g;
                var _ = (function (t) {
                    function e() {
                        var e = (null !== t && t.apply(this, arguments)) || this;
                        return (e.duration = 5), e;
                    }
                    return __extends(e, t), e;
                })(c);
                i.PropertyEffectFog = _;
                var y = (function (t) {
                    function e() {
                        var e = (null !== t && t.apply(this, arguments)) || this;
                        return (e.duration = 5), e;
                    }
                    return __extends(e, t), e;
                })(c);
                i.PropertyEffectControl = y;
                var S = (function (t) {
                    function e() {
                        var e = (null !== t && t.apply(this, arguments)) || this;
                        return (e.numberOfObstacles = 10), (e.duration = 5), e;
                    }
                    return __extends(e, t), e;
                })(c);
                (i.PropertyEffectObstacle = S), cc._RF.pop();
            },
            {},
        ],
        PropertyFactory: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'd64f6R9KzZK0IeX3WCiByg1', 'PropertyFactory'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var r = e('./PropertyDefines'),
                    o = (function () {
                        function e() {}
                        return (
                            (e.prototype.createProperty = function (e) {
                                return null;
                            }),
                            e
                        );
                    })();
                i.default = o;
                var n = (function () {
                    function a() {}
                    return (
                        (a.getObjectMember = function (e, t, i) {
                            var o = e ? e[t] : null;
                            return o || i;
                        }),
                        (a.create = function (e, t) {
                            var i = null;
                            switch (e.type) {
                                case r.PROPERTYTYPE.GAME_DASH:
                                    var o = new r.PropertyEffectDash(),
                                        n = a.getObjectMember(t, 'speed', o.speed);
                                    (o.speed = Math.max(n, 1)), (o.permanentTime = a.getObjectMember(t, 'permanentTime', o.permanentTime)), (o.temporyTime = a.getObjectMember(t, 'temporyTime', o.temporyTime)), (i = o);
                                    break;
                                case r.PROPERTYTYPE.GAME_SLOW:
                                    (o = new r.PropertyEffectSlow()), (n = a.getObjectMember(t, 'speed', o.speed));
                                    (o.speed = Math.max(n, 1)), (o.permanentTime = a.getObjectMember(t, 'permanentTime', o.permanentTime)), (o.temporyTime = a.getObjectMember(t, 'temporyTime', o.temporyTime)), (i = o);
                                    break;
                                case r.PROPERTYTYPE.GAME_SHIELD:
                                    ((o = new r.PropertyEffectShiled()).permanentTime = a.getObjectMember(t, 'permanentTime', o.permanentTime)), (o.temporyTime = a.getObjectMember(t, 'temporyTime', o.temporyTime)), (i = o);
                                    break;
                                case r.PROPERTYTYPE.GAME_AVOID:
                                    ((o = new r.PropertyEffectAvoid()).numberOfEffects = a.getObjectMember(t, 'numberOfEffects', o.numberOfEffects)), (i = o);
                                    break;
                                case r.PROPERTYTYPE.GAME_CONVERSION:
                                    ((o = new r.PropertyEffectConversion()).numberOfEffects = a.getObjectMember(t, 'numberOfEffects', o.numberOfEffects)), (i = o);
                                    break;
                                case r.PROPERTYTYPE.GAME_FANATICAL:
                                    ((o = new r.PropertyEffectFanatical()).duration = a.getObjectMember(t, 'duration', o.duration)), (o.numberOfEffects = a.getObjectMember(t, 'numberOfEffects', o.numberOfEffects)), (i = o);
                                    break;
                                case r.PROPERTYTYPE.GAME_FOG:
                                    ((o = new r.PropertyEffectFog()).duration = a.getObjectMember(t, 'duration', o.duration)), (i = o);
                                    break;
                                case r.PROPERTYTYPE.GAME_CONTROLL:
                                    ((o = new r.PropertyEffectControl()).duration = a.getObjectMember(t, 'duration', o.duration)), (i = o);
                                    break;
                                case r.PROPERTYTYPE.GAME_OBSTACLE:
                                    ((o = new r.PropertyEffectObstacle()).numberOfObstacles = a.getObjectMember(t, 'numberOfObstacles', o.numberOfObstacles)), (o.duration = a.getObjectMember(t, 'duration', o.duration)), (i = o);
                            }
                            return i;
                        }),
                        a
                    );
                })();
                (i.PropertyEffectFactory = n), cc._RF.pop();
            },
            {
                './PropertyDefines': 'PropertyDefines',
            },
        ],
        PropertyHandler: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '64bd8cuxfJBUbPZ337ZFICO', 'PropertyHandler'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var s = e('./propertywork/SprintWorker'),
                    a = e('./propertywork/ShieldWorker'),
                    o = e('./propertywork/DecelerateWorker'),
                    n = e('../../base/G'),
                    c = e('../../property/PropertyDefines'),
                    r = e('../services/ServiceProvider'),
                    l = e('../workers/WorkerState'),
                    u = e('./propertywork/FogWorker'),
                    d = e('./property2/CtrlPropertyManager'),
                    p = (function () {
                        function e(e, t) {
                            (this.gameScene = null), (this.propertyProcess = null), (this.propertyProvider = new r.ServiceProvider()), (this.sprintWorker = null), (this.decelerateWorker = null), (this.ShieldWorker = null), (this.stopBlockEffect = !1), (this.deceleratePreStart = !1), (this.fogWorker = null), (this.PropertyManager = new d.CtrlPropertyManager()), (this.propertyProcess = t), (this.gameScene = e);
                        }
                        return (
                            (e.prototype.initialize = function () {}),
                            (e.prototype.uninitialize = function () {}),
                            (e.prototype.execute = function (e) {
                                (this.PropertyManager.propertyProcess = this.propertyProcess), this.PropertyManager.exe(e);
                            }),
                            (e.prototype.startSprint = function () {
                                var e = this;
                                try {
                                    var t = c.PROPERTYTYPE.GAME_DASH,
                                        i = this.getPropertyEffect(t),
                                        o = this.getPropertyResume(t),
                                        n = this.sprintWorker ? this.sprintWorker.state : l.WorkerState.stopped,
                                        a = this.gameScene.getCurrentStage(),
                                        r = a.type;
                                    if (
                                        this.cantPropertyWork({
                                            effect: i,
                                            state: n,
                                            stageType: r,
                                            resume: o,
                                        })
                                    )
                                        return;
                                    this.propertyProvider.register('SprintWorker', new s.default()),
                                        (this.sprintWorker = this.propertyProvider.resolve('SprintWorker')),
                                        (this.sprintWorker.canPauseAndContinue = !0),
                                        this.sprintWorker.start(a, i, function () {
                                            e.stopSprint();
                                        }),
                                        this.setStopBlockEffect(!0),
                                        this.propertyProcess && this.propertyProcess.onStartProperty(t);
                                } catch (e) {
                                    this.sprintWorker.reset(), (this.sprintWorker = null), console.log('--- game scene startSprint err:---', e);
                                }
                            }),
                            (e.prototype.stopSprint = function () {
                                try {
                                    if (!this.sprintWorker || this.sprintWorker.state === l.WorkerState.stopped) return;
                                    this.sprintWorker.stop(), this.setStopBlockEffect(!1), (this.sprintWorker = null), this.propertyProcess && this.propertyProcess.onEndProperty(c.PROPERTYTYPE.GAME_DASH);
                                } catch (e) {
                                    console.log('--- game scene stopSprint err:---', e);
                                }
                            }),
                            (e.prototype.preStartDecelerate = function () {
                                try {
                                    var e = this.getPropertyResume(c.PROPERTYTYPE.GAME_SLOW);
                                    console.log('--- game scene preStartDecelerate resume:---', e);
                                    var t = this.decelerateWorker ? this.decelerateWorker.state : l.WorkerState.stopped,
                                        i = this.gameScene.getCurrentStage().type;
                                    if (
                                        this.cantPropertyWork({
                                            state: t,
                                            stageType: i,
                                            resume: e,
                                        })
                                    )
                                        return;
                                    this.propertyProvider.register('DecelerateWorker', new o.default()), (this.decelerateWorker = this.propertyProvider.resolve('DecelerateWorker')), (this.decelerateWorker.canPauseAndContinue = !0), this.setDeceleratePreStart(!0), this.propertyProcess && this.propertyProcess.onPreStartProperty(c.PROPERTYTYPE.GAME_SLOW);
                                } catch (e) {
                                    this.decelerateWorker.reset(), (this.decelerateWorker = null), console.log('--- game scene preStartDecelerate err:---', e);
                                }
                            }),
                            (e.prototype.startDecelerate = function () {
                                var e = this;
                                try {
                                    var t = this.getPropertyEffect(c.PROPERTYTYPE.GAME_SLOW),
                                        i = this.gameScene.getCurrentStage();
                                    if (!t || !this.decelerateWorker || !this.deceleratePreStart) return;
                                    var o = this.decelerateWorker;
                                    o.start(i, t, function () {
                                        e.stopDecelerate();
                                    }),
                                        this.propertyProcess && this.propertyProcess.onStartProperty(c.PROPERTYTYPE.GAME_SLOW);
                                } catch (e) {
                                    this.decelerateWorker.reset(), (this.decelerateWorker = null), console.log('--- game scene startDecelerate err:---', e);
                                }
                            }),
                            (e.prototype.stopDecelerate = function () {
                                try {
                                    if (!this.decelerateWorker || this.decelerateWorker.state === l.WorkerState.stopped) return;
                                    this.decelerateWorker.stop(), (this.decelerateWorker = null), this.propertyProcess && this.propertyProcess.onEndProperty(c.PROPERTYTYPE.GAME_SLOW);
                                } catch (e) {
                                    console.log('--- game scene stopDecelerate err:---', e);
                                }
                            }),
                            (e.prototype.ShieldCant = function () {
                                var e = this.getPropertyEffect(c.PROPERTYTYPE.GAME_SHIELD),
                                    t = this.getPropertyResume(c.PROPERTYTYPE.GAME_SHIELD),
                                    i = this.ShieldWorker ? this.ShieldWorker.state : l.WorkerState.stopped,
                                    o = this.gameScene.getCurrentStage().type;
                                return this.cantPropertyWork({
                                    effect: e,
                                    state: i,
                                    stageType: o,
                                    resume: t,
                                });
                            }),
                            (e.prototype.startShield = function () {
                                var t = this;
                                try {
                                    var i = c.PROPERTYTYPE.GAME_SHIELD,
                                        e = this.getPropertyEffect(i),
                                        o = this.getPropertyResume(i),
                                        n = (this.ShieldWorker ? this.ShieldWorker.state : l.WorkerState.stopped, this.gameScene.getCurrentStage());
                                    n.type;
                                    if (!1 === o) return;
                                    this.propertyProvider.register('ShieldWorker', new a.default()), (this.ShieldWorker = this.propertyProvider.resolve('ShieldWorker'));
                                    (this.ShieldWorker.canPauseAndContinue = !0),
                                        this.ShieldWorker.start(
                                            n,
                                            e,
                                            function (e) {
                                                console.log('--- startShield callback ret---', e), 1 === e && t.stopShield();
                                            },
                                            function (e) {
                                                0 < e && t.propertyProcess.onWillEndProperty(i);
                                            },
                                        ),
                                        this.propertyProcess && this.propertyProcess.onStartProperty(c.PROPERTYTYPE.GAME_SHIELD);
                                } catch (e) {
                                    (this.ShieldWorker = null), console.log('--- game scene startShield err:---', e);
                                }
                            }),
                            (e.prototype.stopShield = function () {
                                try {
                                    if (!this.ShieldWorker || this.ShieldWorker.state === l.WorkerState.stopped) return;
                                    this.ShieldWorker.stop(), this.propertyProcess && this.propertyProcess.onEndProperty(c.PROPERTYTYPE.GAME_SHIELD), (this.ShieldWorker = null), console.log('--- game scene stopShield ---', this.ShieldWorker);
                                } catch (e) {
                                    console.log('--- game scene stopShield err:---', e);
                                }
                            }),
                            (e.prototype.cantPropertyWork = function (e) {
                                var t = e.effect,
                                    i = void 0 === t ? {} : t,
                                    o = e.state,
                                    n = void 0 === o ? 0 : o,
                                    a = e.stageType,
                                    r = void 0 === a ? 0 : a,
                                    s = e.resume;
                                return !i || 0 !== n || 0 === r || 1 === r || 3 === r || !(void 0 === s || s);
                            }),
                            (e.prototype.pauseProperty = function () {
                                this.sprintWorker && this.sprintWorker.pause(), this.decelerateWorker && this.decelerateWorker.pause(), this.ShieldWorker && this.ShieldWorker.pause();
                            }),
                            (e.prototype.resumeProperty = function () {
                                this.sprintWorker && this.sprintWorker.resume(), this.decelerateWorker && this.decelerateWorker.resume(), this.ShieldWorker && this.ShieldWorker.resume();
                            }),
                            (e.prototype.getShieldWorker = function () {
                                return this.ShieldWorker;
                            }),
                            (e.prototype.getSprintWorker = function () {
                                return this.sprintWorker;
                            }),
                            (e.prototype.getDecelerateWorker = function () {
                                return this.decelerateWorker;
                            }),
                            (e.prototype.getPropertyEffect = function (e) {
                                if (e) {
                                    var t = n.G.Ap.propertyPack,
                                        i = new c.Property(e),
                                        o = t && t.getConfig().getParam(i);
                                    return o ? o.effect : void 0;
                                }
                            }),
                            (e.prototype.getPropertyResume = function (e) {
                                if (e) {
                                    var t = n.G.Ap.state,
                                        i = new c.Property(e);
                                    return t && t.resumeCarryProperty(i);
                                }
                            }),
                            (e.prototype.getResumeCount = function (e) {
                                if (e) {
                                    var t = n.G.Ap.state,
                                        i = new c.Property(e);
                                    return t && t.getCarryPropertyCount(i);
                                }
                            }),
                            (e.prototype.getStopBlockEffect = function () {
                                return this.stopBlockEffect;
                            }),
                            (e.prototype.setStopBlockEffect = function (e) {
                                this.stopBlockEffect = e;
                            }),
                            (e.prototype.setDeceleratePreStart = function (e) {
                                this.deceleratePreStart = e;
                            }),
                            (e.prototype.startFog = function () {
                                var e = this;
                                try {
                                    var t = c.PROPERTYTYPE.GAME_FOG,
                                        i = this.getPropertyEffect(t),
                                        o = (this.getPropertyResume(t), this.sprintWorker ? this.sprintWorker.state : l.WorkerState.stopped, this.gameScene.getCurrentStage());
                                    o.type;
                                    this.propertyProvider.register('FogWorker', new u.default()),
                                        (this.fogWorker = this.propertyProvider.resolve('FogWorker')),
                                        (this.fogWorker.canPauseAndContinue = !0),
                                        (this.fogWorker.OnCompleted = function () {
                                            e.stopFog();
                                        }),
                                        this.fogWorker.start(o, i, function () {
                                            e.stopFog();
                                        }),
                                        this.setStopBlockEffect(!0),
                                        this.propertyProcess && this.propertyProcess.onStartProperty(t);
                                } catch (e) {
                                    this.fogWorker.reset(), (this.fogWorker = null), console.log('--- game scene startSprint err:---', e);
                                }
                            }),
                            (e.prototype.stopFog = function () {
                                try {
                                    if (!this.fogWorker || this.fogWorker.state === l.WorkerState.stopped) return;
                                    this.fogWorker.stop(), this.setStopBlockEffect(!1), (this.fogWorker = null), this.propertyProcess && this.propertyProcess.onEndProperty(c.PROPERTYTYPE.GAME_DASH);
                                } catch (e) {
                                    console.log('--- game scene stopSprint err:---', e);
                                }
                            }),
                            e
                        );
                    })();
                (i.PropertyHandler = p), cc._RF.pop();
            },
            {
                '../../base/G': 'G',
                '../../property/PropertyDefines': 'PropertyDefines',
                '../services/ServiceProvider': 'ServiceProvider',
                '../workers/WorkerState': 'WorkerState',
                './property2/CtrlPropertyManager': 'CtrlPropertyManager',
                './propertywork/DecelerateWorker': 'DecelerateWorker',
                './propertywork/FogWorker': 'FogWorker',
                './propertywork/ShieldWorker': 'ShieldWorker',
                './propertywork/SprintWorker': 'SprintWorker',
            },
        ],
        PropertyInterfaces: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'b98851wxt9IXJWfTvFWPGvp', 'PropertyInterfaces'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    cc._RF.pop();
            },
            {},
        ],
        PropertyIntroduction: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '84adeDGFEVJLZvHfappQy44', 'PropertyIntroduction'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../util/nodeFacade'),
                    n = e('../../business/UI/GameEntraScene/ImgCache'),
                    a = e('../../business/Logic/I18nManager'),
                    r = e('../../business/keypad/KeypadNavigator'),
                    s = cc._decorator,
                    c = s.ccclass,
                    l = s.property,
                    u = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.confirmCallback = null), (e.mTitleSprite = null), (e.confirmButton = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.enResLoad = function () {
                                var i = this;
                                this.enSpriteSetNull(),
                                    n.default.loadAtlasSpriteFrames('static_res/gamestore_en', 'intro_header', function (e, t) {
                                        cc.isValid(i, !0) && (i.mTitleSprite.spriteFrame = t);
                                    }),
                                    n.default.loadAtlasSpriteFrames('static_res/gamestore_en', 'know_button', function (e, t) {
                                        cc.isValid(i, !0) && (i.confirmButton.normalSprite = t);
                                    }),
                                    n.default.loadAtlasSpriteFrames('static_res/gamestore_en', 'know_button_press', function (e, t) {
                                        cc.isValid(i, !0) && (i.confirmButton.pressedSprite = t);
                                    });
                            }),
                            (e.prototype.enSpriteSetNull = function () {
                                (this.mTitleSprite.getComponent(cc.Sprite).spriteFrame = null), (this.confirmButton.getComponent(cc.Sprite).spriteFrame = null);
                            }),
                            (e.prototype.onLoad = function () {
                                a.default.getInstance().isEnglish() && this.enResLoad();
                                var e = new o.default(this.node).getChild('content');
                                e && (this.buildBkg(), this.buildConfirmBtn(e), r.default.getInstance().pushDialog(this.node, 'PropertyIntroduction'));
                            }),
                            (e.prototype.buildBkg = function () {
                                var e = this.node.getChildByName('bkg');
                                e &&
                                    (e.on(cc.Node.EventType.TOUCH_START, function (e) {
                                        e.stopPropagation();
                                    }),
                                    e.on(cc.Node.EventType.TOUCH_END, function (e) {
                                        e.stopPropagation();
                                    }));
                            }),
                            (e.prototype.buildConfirmBtn = function (e) {
                                var t = this,
                                    i = e.getChild('confirm_button').getNode();
                                if (i) {
                                    i.on(cc.Node.EventType.TOUCH_END, function (e) {
                                        t.onConfirmBtnClick(), t.confirmCallback(), e.stopPropagation(), r.default.getInstance().popDialog(t.node, 'PropertyIntroduction');
                                    });
                                }
                            }),
                            (e.prototype.onConfirmBtnClick = function () {
                                this.node.active = !1;
                            }),
                            (e.prototype.setConfirmCallback = function (e) {
                                e && (this.confirmCallback = e);
                            }),
                            __decorate([l(cc.Sprite)], e.prototype, 'mTitleSprite', void 0),
                            __decorate([l(cc.Button)], e.prototype, 'confirmButton', void 0),
                            (e = __decorate([c], e))
                        );
                    })(cc.Component);
                (i.default = u), cc._RF.pop();
            },
            {
                '../../business/Logic/I18nManager': 'I18nManager',
                '../../business/UI/GameEntraScene/ImgCache': 'ImgCache',
                '../../business/keypad/KeypadNavigator': 'KeypadNavigator',
                '../../util/nodeFacade': 'NodeFacade',
            },
        ],
        PropertyPack: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'e4cab+LrEdI0KKh04aJwMRk', 'PropertyPack'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./PropertyBarrel'),
                    n = e('./PropertyConfig'),
                    a = e('../business/Network/Protocol/StorageUtil'),
                    r = e('../config/LSKey'),
                    s = e('../business/Logic/GameItemsManager'),
                    c = (function () {
                        function e() {
                            (this.config = new n.default()), (this.playPropertyBarrel = new o.default(this.config));
                        }
                        return (
                            (e.prototype.initilize = function () {
                                var e = s.GameItemsManager.getIns().getAllItems();
                                this.config.load(e);
                                var t = a.default.read(r.default.PROPERTY_DATA, '{}');
                                '' != t && this.loadProperties(t);
                            }),
                            (e.prototype.save = function () {
                                var e = new Object();
                                e.play = this.playPropertyBarrel.stringfy();
                                var t = JSON.stringify(e);
                                a.default.save(r.default.PROPERTY_DATA, t);
                            }),
                            (e.prototype.getConfig = function () {
                                return this.config;
                            }),
                            (e.prototype.getPlayProperty = function () {
                                return this.playPropertyBarrel;
                            }),
                            (e.prototype.loadProperties = function (e) {
                                try {
                                    var t = JSON.parse(e);
                                    if (null === t) return;
                                    var i = t.play;
                                    null != i && this.playPropertyBarrel.parse(i);
                                } catch (e) {
                                    console.warn('道具数据异常');
                                }
                            }),
                            e
                        );
                    })();
                (i.default = c), cc._RF.pop();
            },
            {
                '../business/Logic/GameItemsManager': 'GameItemsManager',
                '../business/Network/Protocol/StorageUtil': 'StorageUtil',
                '../config/LSKey': 'LSKey',
                './PropertyBarrel': 'PropertyBarrel',
                './PropertyConfig': 'PropertyConfig',
            },
        ],
        PropertyProcess: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'ad2a1PHfgJK6qmVoEpTu3iy', 'PropertyProcess'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./PropertySeeing'),
                    n = e('./PropertyReport'),
                    a = e('./PropertyHandler'),
                    r = e('../../property/PropertyDefines'),
                    s = e('../../util/Utility'),
                    c = e('../GameBus'),
                    l = e('../workers/WorkerState'),
                    u = e('./PropertyIntroduction'),
                    d = e('../../business/Logic/PlayerMgr'),
                    p = e('../../config/LSKey'),
                    h = e('../../business/Network/Protocol/StorageUtil'),
                    f = e('../../business/UI/GameEntraScene/PrefabMgr'),
                    m = e('../../base/G'),
                    g = function () {
                        (this.iconNode = null), (this.effectNode = null);
                    };
                i.PropertyHandlerParam = g;
                var _ = (function () {
                    function e(e) {
                        (this.rootNode = null), (this.propertyIntroductionPrefabName = null), (this.propertyIntroClickCallback = null), (this.gameScene = null), (this.decelerateLoad = !1), (this.gameScene = e), (this.propertySeeing = new o.default()), (this.propertyReport = new n.default()), (this.propertyHandler = new a.PropertyHandler(this.gameScene, this));
                    }
                    return (
                        (e.prototype.initialize = function (e, t) {
                            this.propertySeeing.initialize(e.iconNode, e.effectNode), this.propertyReport.initialize(), (this.rootNode = t), this.initPropertyIntroduction();
                        }),
                        (e.prototype.uninitialize = function () {
                            this.propertySeeing.uninitialize(), this.propertyReport.uninitialize();
                        }),
                        (e.prototype.initPropertyIntroduction = function () {
                            var o = this;
                            try {
                                var e = this.gameScene.allowProperty();
                                if (!this.propertyIntroductionPrefabName || !e) return;
                                var t = d.default.Ins().getUserLevel(),
                                    i = '1' === h.default.read(p.default.PROPERTY_INTRODUCTION_SHOW, '0');
                                console.log('--- initPropertyIntroduction level---', t),
                                    console.log('--- initPropertyIntroduction showed---', i),
                                    t && 3 <= t && !i
                                        ? f.default.load(this.propertyIntroductionPrefabName, function (e, t) {
                                              if (t) {
                                                  var i = t.getComponent(u.default);
                                                  o.rootNode.addChild(t, 101);
                                                  o.propertyIntroClickCallback(!1),
                                                      i.setConfirmCallback(function () {
                                                          t.destroy(), o.propertyIntroClickCallback(!0);
                                                      }),
                                                      h.default.save(p.default.PROPERTY_INTRODUCTION_SHOW, '1');
                                              }
                                          })
                                        : this.propertyIntroClickCallback(!0);
                            } catch (e) {
                                this.propertyIntroClickCallback(!0), console.log('--- initPropertyIntroduction err ---', e);
                            }
                        }),
                        (e.prototype.onGameStart = function () {
                            this.propertySeeing.onGameStart(), this.propertyReport.onGameStart(), this.propertyHandler.startSprint();
                        }),
                        (e.prototype.beforeGameOver = function (e, t) {
                            this.propertyHandler.getResumeCount(r.PROPERTYTYPE.GAME_SHIELD) ? this.propertyHandler.startShield() : null != e && e.call(t);
                        }),
                        (e.prototype.onGameOver = function () {
                            this.stopRunningProperty();
                        }),
                        (e.prototype.onGameCancel = function () {
                            this.propertySeeing.onGameCancel(), this.propertyReport.onGameCancel();
                        }),
                        (e.prototype.onGameRelive = function () {
                            this.decelerateLoad && this.propertyHandler.preStartDecelerate();
                        }),
                        (e.prototype.onGamePause = function () {
                            this.stopRunningProperty();
                        }),
                        (e.prototype.onGameResume = function () {
                            this.propertyHandler.resumeProperty(), this.decelerateLoad ? this.propertyHandler.startDecelerate() : this.relivePropType && (this.relivePropType == r.PROPERTYTYPE.GAME_DASH ? this.propertyHandler.startSprint() : (this.relivePropType, r.PROPERTYTYPE.GAME_SHIELD));
                        }),
                        (e.prototype.onGameStageStart = function (e) {}),
                        (e.prototype.onGameStageFinish = function (e) {
                            e === s.Utility.GAMESTAGE.MUSIC && this.existRunningProperty() && (this.propertyHandler.stopSprint(), this.propertyHandler.stopDecelerate(), this.propertyHandler.stopShield(), this.propertyHandler.stopFog());
                        }),
                        (e.prototype.onAttainHonor = function (e, t) {}),
                        (e.prototype.onConsumeProperty = function (e) {
                            return m.G.Ap.state.resumeCarryProperty(new r.Property(e));
                        }),
                        (e.prototype.onPreStartProperty = function (e) {
                            e === r.PROPERTYTYPE.GAME_SLOW && (this.propertySeeing.createProperties(r.PROPERTYTYPE.GAME_SLOW), this.propertySeeing.onResumeProperty(new r.Property(r.PROPERTYTYPE.GAME_SLOW)));
                        }),
                        (e.prototype.onStartProperty = function (e) {
                            e === r.PROPERTYTYPE.GAME_DASH ? this.propertySeeing.createProperties(e).sprintNodeAnim() : e === r.PROPERTYTYPE.GAME_SLOW ? this.propertySeeing.decelerateNodeAnim() : e === r.PROPERTYTYPE.GAME_SHIELD ? (this.propertySeeing.createProperties(e), this.propertySeeing.shieldNodeAnim()) : r.PROPERTYTYPE.GAME_FOG, this.propertySeeing.onResumeProperty(new r.Property(e));
                        }),
                        (e.prototype.onEndProperty = function (e) {
                            var t = this;
                            if (e === r.PROPERTYTYPE.GAME_DASH) {
                                var i = function () {
                                    t.propertySeeing.destroyProperties(r.PROPERTYTYPE.GAME_DASH);
                                };
                                c.default.getInstance().scheduler.scheduleOnce(function () {
                                    t.propertySeeing.setSprintAnimEndCb(i).stopSprintNodeAnim();
                                }, 1);
                            } else this.propertySeeing.destroyProperties(e);
                        }),
                        (e.prototype.onWillEndProperty = function (e) {
                            try {
                                e === r.PROPERTYTYPE.GAME_SHIELD && this.propertySeeing.shieldNodeWillAnim();
                            } catch (e) {
                                console.log('--- onWillEndProperty err---', e);
                            }
                        }),
                        (e.prototype.getStopBlockEffect = function () {
                            return this.propertyHandler.getStopBlockEffect();
                        }),
                        (e.prototype.existRunningProperty = function () {
                            var e = this.getSprintWorker(),
                                t = this.getDecelerateWorker(),
                                i = this.getShieldWorker();
                            return (e && e.state === l.WorkerState.running) || (t && t.state === l.WorkerState.running) || (i && i.state === l.WorkerState.running);
                        }),
                        (e.prototype.getRunningProperty = function () {
                            var e = this.getSprintWorker(),
                                t = this.getDecelerateWorker(),
                                i = this.getShieldWorker(),
                                o = null;
                            return e && e.state === l.WorkerState.running ? (o = e) : t && t.state === l.WorkerState.running ? (o = t) : i && i.state === l.WorkerState.running && (o = i), o;
                        }),
                        (e.prototype.destroyPropertyIcon = function (e) {
                            e && this.propertySeeing.onResumeProperty(new r.Property(r.PROPERTYTYPE.GAME_SLOW));
                        }),
                        (e.prototype.stopRunningProperty = function () {
                            var e = this.getRunningProperty();
                            e && (this.propertySeeing.destroyPropertyByName(e.name), e.stop()), this.propertyHandler.setDeceleratePreStart(!1);
                        }),
                        (e.prototype.getSprintWorker = function () {
                            return this.propertyHandler.getSprintWorker();
                        }),
                        (e.prototype.getDecelerateWorker = function () {
                            return this.propertyHandler.getDecelerateWorker();
                        }),
                        (e.prototype.getShieldWorker = function () {
                            return this.propertyHandler.getShieldWorker();
                        }),
                        (e.prototype.getPropertyResume = function (e) {
                            return this.propertyHandler.getPropertyResume(e);
                        }),
                        (e.prototype.getResumeCount = function (e) {
                            return this.propertyHandler.getResumeCount(e);
                        }),
                        (e.prototype.setDecelerateLoad = function (e) {
                            this.decelerateLoad = e;
                        }),
                        (e.prototype.setRelivePropType = function (e) {
                            this.relivePropType = e;
                        }),
                        (e.prototype.setPropertyIntroductionPrefab = function (e) {
                            this.propertyIntroductionPrefabName = e;
                        }),
                        (e.prototype.setPropertyIntroductionClickCb = function (e) {
                            e && (this.propertyIntroClickCallback = e);
                        }),
                        (e.prototype.getView = function () {
                            return this.propertySeeing;
                        }),
                        e
                    );
                })();
                (i.default = _), cc._RF.pop();
            },
            {
                '../../base/G': 'G',
                '../../business/Logic/PlayerMgr': 'PlayerMgr',
                '../../business/Network/Protocol/StorageUtil': 'StorageUtil',
                '../../business/UI/GameEntraScene/PrefabMgr': 'PrefabMgr',
                '../../config/LSKey': 'LSKey',
                '../../property/PropertyDefines': 'PropertyDefines',
                '../../util/Utility': 'Utility',
                '../GameBus': 'GameBus',
                '../workers/WorkerState': 'WorkerState',
                './PropertyHandler': 'PropertyHandler',
                './PropertyIntroduction': 'PropertyIntroduction',
                './PropertyReport': 'PropertyReport',
                './PropertySeeing': 'PropertySeeing',
            },
        ],
        PropertyReport: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '41c264AjiBEipq63YHGZuD2', 'PropertyReport'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var s = e('../../base/G'),
                    c = e('../../property/PropertyDefines'),
                    l = e('../../infoc/easyReport'),
                    o = (function () {
                        function e() {}
                        return (
                            (e.prototype.initialize = function () {}),
                            (e.prototype.uninitialize = function () {}),
                            (e.prototype.onGameStart = function () {}),
                            (e.prototype.onGameCancel = function () {
                                this.reportUsage();
                            }),
                            (e.prototype.reportUsage = function () {
                                for (var e = s.G.Ap.state, t = new l.default(173), i = [c.PROPERTYTYPE.GAME_DASH, c.PROPERTYTYPE.GAME_SLOW, c.PROPERTYTYPE.GAME_SHIELD], o = 0, n = i.length; o < n; ++o) {
                                    var a = 'item' + i[o],
                                        r = e.carryProperties.get(new c.Property(i[o]));
                                    r ? (t.add(a + '_carry', r.originCount), t.add(a + '_use', Math.max(r.originCount - r.count, 0))) : (t.add(a + '_carry', 0), t.add(a + '_use', 0));
                                }
                                t.report();
                            }),
                            e
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../../base/G': 'G',
                '../../infoc/easyReport': 'EasyReport',
                '../../property/PropertyDefines': 'PropertyDefines',
            },
        ],
        PropertySeeing: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'c71e8qQFRlBUaZBK96ebPQw', 'PropertySeeing'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var l = e('../MUI/MUINode'),
                    u = e('../element/loader/GameSceneFrameLoader'),
                    s = e('../../property/PropertyDefines'),
                    d = e('../MUI/MUISprite'),
                    c = e('../../base/G'),
                    a = e('../animation/action/MFadeTo'),
                    r = e('../animation/action/MFrameSequence'),
                    p = e('../GameBus'),
                    h = e('../animation/action/MSequence'),
                    o = e('../animation/action/MActionFactory'),
                    f = e('../animation/action/MMoveTo'),
                    m = e('../animation/action/MCallFunc'),
                    g = e('../MUI/MUINineScaleSprite'),
                    _ = e('../MUI/MUIDefines'),
                    n = (function () {
                        function e() {
                            (this.actionFactory = new o.default()), (this.sprintAnimEndCb = null), (this.sprintCallback = null), (this.iconNode = null), (this.effectNode = null), (this.iconPanelNode = null), (this.shieldAnimNode = null);
                        }
                        return (
                            (e.prototype.initialize = function (e, t) {
                                (this.iconNode = e), (this.effectNode = t);
                            }),
                            (e.prototype.uninitialize = function () {}),
                            (e.prototype.onGameStart = function () {
                                this.createIcons();
                            }),
                            (e.prototype.onGameCancel = function () {}),
                            (e.prototype.createIcons = function () {
                                if (this.iconNode) {
                                    var e = this.iconNode.getRect(),
                                        t = new cc.Size(48, 48);
                                    (this.iconPanelNode = new l.default('PanelNode')), this.iconPanelNode.move(e.width - t.width - 4, e.height - 280, 0, 0), this.iconNode.addChild(this.iconPanelNode);
                                    for (var i = u.default.getInstance().getAtlas(), o = [s.PROPERTYTYPE.GAME_DASH, s.PROPERTYTYPE.GAME_SLOW, s.PROPERTYTYPE.GAME_SHIELD], n = 0, a = 0; a < 3; ++a) {
                                        if (0 !== c.G.Ap.state.getCarryPropertyCount(new s.Property(o[a]))) {
                                            var r = new d.default('propertyicon' + o[a]);
                                            r.setContentSize(t.width, t.height), r.setPosition(0, 162 - (t.height + 6) * n), (r.imageData = u.default.getInstance().getAtlas()), (r.imageItem = i.getItem('propertyicon' + o[a])), this.iconPanelNode.addChild(r, o[a]), ++n;
                                        }
                                    }
                                }
                            }),
                            (e.prototype.onResumeProperty = function (e) {
                                if (this.iconPanelNode) {
                                    var t = this.iconPanelNode.getChildByTag(e.type);
                                    if (0 === c.G.Ap.state.getCarryPropertyCount(e)) {
                                        var i = new a.default(0, 0.5);
                                        p.default.getInstance().getAnimationMgr().runAction(t, i);
                                    } else {
                                        i = new a.default(0, 0.5);
                                        var o = new a.default(1, 0.5),
                                            n = new h.default(i, o);
                                        p.default.getInstance().getAnimationMgr().runAction(t, n);
                                    }
                                }
                            }),
                            (e.prototype.createProperties = function (e) {
                                try {
                                    if (!e || !this.effectNode) return;
                                    var t = null;
                                    switch (e) {
                                        case s.PROPERTYTYPE.GAME_DASH:
                                            t = this.getSprintNode();
                                            break;
                                        case s.PROPERTYTYPE.GAME_SLOW:
                                            t = this.getDecelerateNode();
                                            break;
                                        case s.PROPERTYTYPE.GAME_SHIELD:
                                            t = this.getShieldNode();
                                            break;
                                        case s.PROPERTYTYPE.GAME_FOG:
                                            t = this.getFogNode();
                                    }
                                    return t && this.effectNode.addChild(t), this;
                                } catch (e) {
                                    console.log('--- createProperties err:---', e);
                                }
                            }),
                            (e.prototype.getFogNode = function () {
                                var e = this.effectNode.getRect(),
                                    t = u.default.getInstance().getAtlas2(),
                                    i = e.width,
                                    o = e.height,
                                    n = new l.default('Fog'),
                                    a = new d.default('SprintBkg'),
                                    r = new d.default('SprintLine');
                                if (((a.imageItem = t.getItem('spr_bkg')), (r.imageItem = t.getItem('spr_line')), a.imageItem && r.imageItem)) return a.setContentSize(2 * a.imageItem.rect.width, 2 * a.imageItem.rect.height), a.setPosition(0, 0), (r.imageData = a.imageData = t), r.setContentSize(i, o), r.setPosition(0, 0), n.addChild(a), n.addChild(r), n;
                            }),
                            (e.prototype.getSprintNode = function () {
                                var e = this.effectNode.getRect(),
                                    t = u.default.getInstance().getAtlas2(),
                                    i = e.width,
                                    o = e.height,
                                    n = -o,
                                    a = new l.default('Sprint'),
                                    r = new d.default('SprintBkg'),
                                    s = new d.default('SprintLine');
                                if (((r.imageItem = t.getItem('spr_bkg')), (s.imageItem = t.getItem('spr_line')), r.imageItem && s.imageItem)) return r.setContentSize(2 * r.imageItem.rect.width, 2 * r.imageItem.rect.height), r.setPosition(0, n), (s.imageData = r.imageData = t), s.setContentSize(i, o), s.setPosition(0, n), a.addChild(r), a.addChild(s), a;
                            }),
                            (e.prototype.sprintNodeAnim = function () {
                                var e = this.effectNode.getChildByName('Sprint');
                                if (e) {
                                    var t = e.getChildByName('SprintBkg'),
                                        i = e.getChildByName('SprintLine');
                                    this.sprintBkgPlay(t), this.sprintLinePlay(i);
                                }
                            }),
                            (e.prototype.sprintBkgPlay = function (e) {
                                var t = this.effectNode.getRect().height / 2 - 122,
                                    i = new f.default(0, t, 0.4),
                                    o = new f.default(0, t - 45, 0.4),
                                    n = new h.default(o, i),
                                    a = function () {
                                        p.default.getInstance().animationMgr.runAction(e, n);
                                    };
                                this.sprintCallback = a;
                                var r = new f.default(0, t, 0.6),
                                    s = new h.default(
                                        r,
                                        new m.default(function (e) {
                                            p.default.getInstance().scheduler.scheduleLoop(a, 0.8, 99, 0);
                                        }),
                                    );
                                p.default.getInstance().animationMgr.runAction(e, s);
                            }),
                            (e.prototype.sprintLinePlay = function (e) {
                                var t = this.effectNode.getRect().height,
                                    i = new f.default(0, -t / 2, 0.01),
                                    o = new f.default(0, -t, 0.5),
                                    n = new h.default(o, i),
                                    a = function () {
                                        p.default.getInstance().animationMgr.runAction(e, n);
                                    },
                                    r = new h.default(
                                        i,
                                        new m.default(function (e) {
                                            p.default.getInstance().scheduler.scheduleLoop(a, 0.6, 99, 0);
                                        }),
                                    );
                                p.default.getInstance().animationMgr.runAction(e, r);
                            }),
                            (e.prototype.stopSprintNodeAnim = function () {
                                var t = this,
                                    e = this.effectNode.getChildByName('Sprint');
                                if (e) {
                                    var i = p.default.getInstance().animationMgr,
                                        o = this.effectNode.getRect().height,
                                        n = e.getChildByName('SprintBkg'),
                                        a = e.getChildByName('SprintLine');
                                    i.stopTargetActions(n), this.sprintCallback && p.default.getInstance().scheduler.unSchedule(this.sprintCallback), e.removeChild(a);
                                    var r = new f.default(0, o, 0.3),
                                        s = new f.default(0, 0, 0.2),
                                        c = new h.default(
                                            s,
                                            r,
                                            new m.default(function (e) {
                                                t.sprintAnimEndCb && t.sprintAnimEndCb();
                                            }),
                                        );
                                    i.runAction(n, c);
                                }
                            }),
                            (e.prototype.getDecelerateNode = function () {
                                var e = this.effectNode.getRect(),
                                    t = u.default.getInstance().getAtlas2(),
                                    i = e.width,
                                    o = e.height,
                                    n = i / 4,
                                    a = o / 4,
                                    r = new l.default('Decelerate'),
                                    s = new g.default();
                                if ((s.setContentSize(i / 2, o / 2), s.setPosition(n, a), s.setScale(2, 2), (s.imageData = t), (s.imageItem = t.getItem('dec_bkg')), s.imageItem)) return s.setInset(179, 235, 180, 236.5), r.setOpacity(1), r.addChild(s), r;
                            }),
                            (e.prototype.decelerateNodeAnim = function () {}),
                            (e.prototype.shieldNodeAnim = function () {
                                var e = this.effectNode.getChildByName('shield'),
                                    t = e.getChildByName('shieldMiss'),
                                    i = e.getChildByName('shieldBkg'),
                                    o = this.actionFactory.createMScaleTo(1.1, 1.1, 0.3),
                                    n = this.actionFactory.createMScaleTo(0.9, 0.9, 0.3),
                                    a = new h.default(o, n),
                                    r = function () {
                                        p.default.getInstance().animationMgr.runAction(e, a);
                                    };
                                p.default.getInstance().scheduler.scheduleOnce(function () {
                                    e.removeChild(t), i.setOpacity(1), p.default.getInstance().scheduler.scheduleLoop(r, 1, 60, 0);
                                }, 1);
                            }),
                            (e.prototype.shieldNodeWillAnim = function () {
                                if (null != this.shieldAnimNode) {
                                    console.log('shieldNodeWillAnim shieldNodeWillAnim');
                                    var e = this.effectNode.getRect(),
                                        t = e.width,
                                        i = e.height,
                                        o = this.effectNode.getChildByName('shield');
                                    if (o && _.MUI.global.renderType != _.MUI.RenderType.WEBGL) {
                                        var n = this.shieldAnimNode;
                                        o.removeAllChildren(), o.addChild(n), o.setPosition(0.5 * t, i - 320);
                                        var a = new r.default(81, 3);
                                        p.default.getInstance().animationMgr.runAction(n, a);
                                    }
                                }
                            }),
                            (e.prototype.getShieldWillAnim = function () {
                                this.effectNode.getRect();
                                for (var e = u.default.getInstance().getShieldAnimation(), t = new d.default('shieldAnim'), i = [], o = 1; o <= 81; o++) {
                                    var n = o.toString();
                                    n.length < 2 ? (n = '00' + n) : 2 == n.length && (n = '0' + n), (n = 'shield_' + n), i.push(n);
                                }
                                if (((t.imageData = e), (t.imageItem = e.getItem('shield_001')), t.imageItem)) return (t.frameSequence = e.createFrameSequence(i)), t.setContentSize(720, 690), t.setPosition(-360, -345), t;
                            }),
                            (e.prototype.getShieldNode = function () {
                                var e = this.effectNode.getRect(),
                                    t = u.default.getInstance().getAtlas2(),
                                    i = e.width,
                                    o = e.height,
                                    n = new l.default('shield'),
                                    a = new d.default('shieldBkg'),
                                    r = new d.default('shieldMiss'),
                                    s = t.getItem('shield'),
                                    c = t.getItem('miss');
                                s.rect.center();
                                return (a.imageData = t), (a.imageItem = s), (r.imageData = t), (r.imageItem = c), a.setContentSize(2 * s.rect.width, 2 * s.rect.height), a.setPosition(-s.rect.width, -s.rect.height), a.setOpacity(0), r.setContentSize(217, 68), r.setPosition(-c.rect.width, -c.rect.height), n.addChild(a, 0), n.addChild(r, 1), n.setPosition(0.5 * i, o - 320), (this.shieldAnimNode = this.getShieldWillAnim()), n;
                            }),
                            (e.prototype.destroyProperties = function (e) {
                                try {
                                    if (!e || !this.effectNode) return;
                                    var t,
                                        i = '';
                                    switch (e) {
                                        case s.PROPERTYTYPE.GAME_DASH:
                                            i = 'Sprint';
                                            break;
                                        case s.PROPERTYTYPE.GAME_SLOW:
                                            i = 'Decelerate';
                                            break;
                                        case s.PROPERTYTYPE.GAME_SHIELD:
                                            i = 'shield';
                                    }
                                    (t = this.effectNode.getChildByName(i)) && this.effectNode.removeChild(t);
                                } catch (e) {
                                    console.log('--- destroyProperties err:---', e);
                                }
                            }),
                            (e.prototype.destroyPropertyByName = function (e) {
                                try {
                                    var t = null;
                                    switch (e) {
                                        case 'SprintWorker':
                                            t = s.PROPERTYTYPE.GAME_DASH;
                                            break;
                                        case 'DecelerateWorker':
                                            t = s.PROPERTYTYPE.GAME_SLOW;
                                            break;
                                        case 'ShieldWorker':
                                            t = s.PROPERTYTYPE.GAME_SHIELD;
                                    }
                                    t && this.destroyProperties(t);
                                } catch (e) {
                                    console.log('--- destroyRunningProperties err:---', e);
                                }
                            }),
                            (e.prototype.setSprintAnimEndCb = function (e) {
                                return (this.sprintAnimEndCb = e), this;
                            }),
                            (e.prototype.onAttainProperty = function () {}),
                            (e.prototype.getEffectNode = function () {
                                return this.effectNode;
                            }),
                            e
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../../base/G': 'G',
                '../../property/PropertyDefines': 'PropertyDefines',
                '../GameBus': 'GameBus',
                '../MUI/MUIDefines': 'MUIDefines',
                '../MUI/MUINineScaleSprite': 'MUINineScaleSprite',
                '../MUI/MUINode': 'MUINode',
                '../MUI/MUISprite': 'MUISprite',
                '../animation/action/MActionFactory': 'MActionFactory',
                '../animation/action/MCallFunc': 'MCallFunc',
                '../animation/action/MFadeTo': 'MFadeTo',
                '../animation/action/MFrameSequence': 'MFrameSequence',
                '../animation/action/MMoveTo': 'MMoveTo',
                '../animation/action/MSequence': 'MSequence',
                '../element/loader/GameSceneFrameLoader': 'GameSceneFrameLoader',
            },
        ],
        PropertyStorePrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'be7ae6ufmBB+b5249GZdYa/', 'PropertyStorePrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var r = e('../../property/PropertyDefines'),
                    s = e('../../base/G'),
                    a = e('../../util/nodeFacade'),
                    c = e('../Logic/MoneySystem'),
                    l = e('../UI/GameEntraScene/BasicTouchEvent'),
                    o = e('../../infoc/easyReport'),
                    n = e('../UI/GameEntraScene/ImgCache'),
                    u = e('../Logic/GameItemsManager'),
                    d = e('../../../modules/MGAdv/scripts/Logic/MGAdvDefine'),
                    p = e('../Network/Protocol/StorageUtil'),
                    h = e('../../config/LSKey'),
                    f = e('../../../modules/MGAdv/scripts/Logic/MGAdvEntrance'),
                    m = e('../../util/PU'),
                    g = e('../UI/GameEntraScene/PrefabMgr'),
                    _ = e('../UI/playerInfoPopup/PlayerInfoPopupProfab'),
                    y = e('../../infoc/m_p2_pop_coin'),
                    S = e('../Logic/I18nManager'),
                    v = e('../keypad/KeypadNavigator'),
                    I = cc._decorator,
                    T = I.ccclass,
                    C = I.property,
                    E = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (
                                (e.freePrizeButton = null),
                                (e.freeTimeLabel = null),
                                (e.mBuyBtn = null),
                                (e.mBuyBtnGoldIcon = null),
                                (e.mBuyBtnDiamondIcon = null),
                                (e.mBuyBtnLabel = null),
                                (e.mDescLabel = null),
                                (e.mPropertyIcon = null),
                                (e.mAddBtn = null),
                                (e.mJianBtn = null),
                                (e.mPropertyCountLabel = null),
                                (e.mProgressFront = null),
                                (e.mProgressBack = null),
                                (e.mSlider = null),
                                (e.mTitleSprite = null),
                                (e.mProgress = 1),
                                (e.lastUpdateTime = 0),
                                (e.coolingCountdownTime = 0),
                                (e.coolingCheckTime = {
                                    lastCheckTime: 0,
                                    timeout: function () {
                                        return 1e3 < Date.now() - e.coolingCheckTime.lastCheckTime && ((e.coolingCheckTime.lastCheckTime = Date.now()), !0);
                                    },
                                }),
                                (e.AD_INTERVAL_COOLING_TIME = 18e4),
                                (e.AD_DAILY_SHOW_TIME = 3),
                                (e.callback = null),
                                (e.priortyProperty = null),
                                (e.freeButtonTouchCallback = null),
                                (e.buyButtonTouchCallback = null),
                                (e.closeButtonTouchCallback = null),
                                (e.mAddBtnTouchCallback = null),
                                (e.mJianBtnTouchCallback = null),
                                e
                            );
                        }
                        var i;
                        return (
                            __extends(e, t),
                            ((i = e).prototype.enResLoad = function () {
                                var i = this;
                                n.default.loadAtlasSpriteFrames('static_res/gamestore_en', 'title', function (e, t) {
                                    cc.isValid(i, !0) && (i.mTitleSprite.spriteFrame = t);
                                }),
                                    n.default.loadAtlasSpriteFrames('static_res/gamestore_en', 'video_ad_button_normal', function (e, t) {
                                        cc.isValid(i, !0) && (i.freePrizeButton.normalSprite = t);
                                    }),
                                    n.default.loadAtlasSpriteFrames('static_res/gamestore_en', 'video_ad_button_press', function (e, t) {
                                        cc.isValid(i, !0) && (i.freePrizeButton.pressedSprite = t);
                                    }),
                                    n.default.loadAtlasSpriteFrames('static_res/gamestore_en', 'video_ad_button_disable', function (e, t) {
                                        cc.isValid(i, !0) && (i.freePrizeButton.disabledSprite = t);
                                    });
                            }),
                            (e.prototype.onLoad = function () {
                                var o = this;
                                S.default.getInstance().isEnglish() && this.enResLoad(), this.node.on(cc.Node.EventType.TOUCH_END, function () {}, this), m.default.isWeiXin() || f.MGAdv.load(d.ADScene.SCENE_VIDEO_PRIZE_PROPERTY, d.QQ_ADV_TYPE.VIDEO_TYPE_GAME_OVER);
                                var e = new a.default(this.node).getChild('dlg'),
                                    t = e.getChild('closebutton').getNode();
                                t &&
                                    ((this.closeButtonTouchCallback = new l.default(function () {
                                        o.onClickCloseButton();
                                    })),
                                    t.on(cc.Node.EventType.TOUCH_END, this.closeButtonTouchCallback.click, this.closeButtonTouchCallback)),
                                    (this.buyButtonTouchCallback = new l.default(function () {
                                        if (0 == o.mProgress) {
                                            var e = '道具数量需大于0';
                                            return S.default.getInstance().isEnglish() && (e = 'More props required'), void o.showToast(e);
                                        }
                                        o.onClickBuyButton(o.priortyProperty, o.mProgress);
                                    })),
                                    this.mBuyBtn.node.on(cc.Node.EventType.TOUCH_END, this.buyButtonTouchCallback.click, this.buyButtonTouchCallback),
                                    (this.freeButtonTouchCallback = new l.default(function () {
                                        if (0 == o.mProgress) {
                                            var e = '道具数量需大于0';
                                            return S.default.getInstance().isEnglish() && (e = 'More props required'), void o.showToast(e);
                                        }
                                        o.onClickFreeButton(o.priortyProperty, 1);
                                    })),
                                    this.freePrizeButton.node.on(cc.Node.EventType.TOUCH_END, this.freeButtonTouchCallback.click, this.freeButtonTouchCallback),
                                    this.enableFreePrizeButton(!0, !1);
                                var i = e.getChild('light');
                                if (i.getNode()) {
                                    var n = cc.rotateBy(5, 360);
                                    i.getNode().runAction(n.repeatForever());
                                }
                                this.mSlider.node.on(
                                    'slide',
                                    function (e) {
                                        var t = e.detail;
                                        (o.mProgress = Math.floor(10 * t.progress)), (o.mPropertyCountLabel.string = o.mProgress.toString()), (o.mProgressFront.node.width = (o.mProgressBack.node.width * o.mProgress) / 10);
                                        var i = s.G.Ap.propertyPack.getConfig().getParam(o.priortyProperty);
                                        o.mBuyBtnLabel.string = '' + o.mProgress * i.price;
                                    },
                                    this,
                                ),
                                    (this.mAddBtnTouchCallback = new l.default(function () {
                                        if (!(10 <= o.mProgress)) {
                                            (o.mSlider.progress = o.mProgress / 10 + 0.1), o.mProgress++, (o.mProgressFront.node.width = (o.mProgressBack.node.width * o.mProgress) / 10), (o.mPropertyCountLabel.string = o.mProgress.toString());
                                            var e = s.G.Ap.propertyPack.getConfig().getParam(o.priortyProperty);
                                            o.mBuyBtnLabel.string = '' + o.mProgress * e.price;
                                        }
                                    })),
                                    this.mAddBtn.node.on(cc.Node.EventType.TOUCH_END, this.mAddBtnTouchCallback.click, this.mAddBtnTouchCallback),
                                    (this.mJianBtnTouchCallback = new l.default(function () {
                                        if (!(o.mProgress <= 0)) {
                                            (o.mSlider.progress = o.mProgress / 10 - 0.1), o.mProgress--, (o.mProgressFront.node.width = (o.mProgressBack.node.width * o.mProgress) / 10), (o.mPropertyCountLabel.string = o.mProgress.toString());
                                            var e = s.G.Ap.propertyPack.getConfig().getParam(o.priortyProperty);
                                            o.mBuyBtnLabel.string = '' + o.mProgress * e.price;
                                        }
                                    })),
                                    this.mJianBtn.node.on(cc.Node.EventType.TOUCH_END, this.mJianBtnTouchCallback.click, this.mJianBtnTouchCallback);
                            }),
                            (e.prototype.start = function () {}),
                            (e.prototype.update = function (e) {
                                this.coolingCheckTime.timeout() && this.updateFreePrizeButton();
                            }),
                            (e.prototype.enableFreePrizeButton = function (e, t) {
                                void 0 === t && (t = !1), (this.freePrizeButton.enabled = e), (this.freePrizeButton.interactable = e), (this.freeTimeLabel.node.active = t);
                            }),
                            (e.prototype.updateFreePrizeButton = function () {
                                if (this.freePrizeButton && this.freePrizeButton.isValid) {
                                    var e,
                                        t,
                                        i = this.isAdCooling();
                                    switch (i.type) {
                                        case 0:
                                            this.freePrizeButton.enabled || this.enableFreePrizeButton(!0, !1);
                                            break;
                                        case 1:
                                            this.freePrizeButton.enabled && this.enableFreePrizeButton(!1, !1);
                                            break;
                                        case 2:
                                            this.freePrizeButton.enabled && this.enableFreePrizeButton(!1, !0);
                                            this.coolingCountdownTime = this.AD_INTERVAL_COOLING_TIME - (Date.now() - i.ts);
                                            var o = ((e = this.coolingCountdownTime), (t = new Date(e)).getMinutes() + ':' + t.getSeconds());
                                            this.coolingCountdownTime <= 0 && (this.coolingCountdownTime = 0), (this.freeTimeLabel.string = o);
                                    }
                                }
                            }),
                            (e.prototype.isAdCooling = function () {
                                var e = p.default.read(h.default.AD_VIDEO_PROPERTY_SHOW_INFO, null);
                                if (!e)
                                    return {
                                        type: 0,
                                        ts: 0,
                                    };
                                var t = JSON.parse(e),
                                    i = new Date(t.ts),
                                    o = t.count,
                                    n = function (e) {
                                        return e.getFullYear() + '-' + (e.getMonth() + 1) + '-' + e.getDate();
                                    };
                                return n(new Date()) == n(i) && o >= this.AD_DAILY_SHOW_TIME
                                    ? {
                                          type: 1,
                                          ts: t.ts,
                                      }
                                    : Date.now() - t.ts < this.AD_INTERVAL_COOLING_TIME
                                    ? {
                                          type: 2,
                                          ts: t.ts,
                                      }
                                    : {
                                          type: 0,
                                          ts: 0,
                                      };
                            }),
                            (e.prototype.updateAdShowInfo = function () {
                                var e,
                                    t = p.default.read(h.default.AD_VIDEO_PROPERTY_SHOW_INFO, null);
                                t
                                    ? (e = {
                                          count: JSON.parse(t).count + 1,
                                          ts: Date.now(),
                                      })
                                    : (e = {
                                          count: 1,
                                          ts: Date.now(),
                                      });
                                p.default.save(h.default.AD_VIDEO_PROPERTY_SHOW_INFO, JSON.stringify(e));
                            }),
                            (e.prototype.log = function (e) {
                                i.DEBUG && (m.default.isQQ() ? BK.Script.log(1, 0, e) : console.log(e));
                            }),
                            (e.prototype.showPrizeVideoAd = function (t, i) {
                                var o = this;
                                this.log('[qzs] showPrizeVideoAd() called');
                                var e = d.ADScene.SCENE_VIDEO_PRIZE_PROPERTY;
                                f.MGAdv.show(e, d.QQ_ADV_TYPE.VIDEO_TYPE_GAME_OVER, function (e) {
                                    switch (e) {
                                        case d.ADStat.NOT_NETWORK:
                                            o.showToast('No network available');
                                            break;
                                        case d.ADStat.SHOW_SUCCESS_CLOSE:
                                            o.onPrizeAdShowedSuccessful(t, i);
                                            break;
                                        case d.ADStat.SHOW_NOT_ENED_CLOSE:
                                            break;
                                        case d.ADStat.LOAD_FAILED:
                                        case d.ADStat.NOT_SUPPORT:
                                        case d.ADStat.SHOW_GET_AD_FAILED:
                                            o.showToast('No video ads available'), m.default.isWeiXin() || f.MGAdv.load(d.ADScene.SCENE_VIDEO_PRIZE_PROPERTY, d.QQ_ADV_TYPE.VIDEO_TYPE_GAME_OVER);
                                    }
                                });
                            }),
                            (e.prototype.onPrizeAdShowedSuccessful = function (e, t) {
                                var i = this,
                                    o = s.G.Ap.propertyPack.getConfig().getParam(e),
                                    n = '恭喜获得' + o.name + 'x' + t;
                                S.default.getInstance().isEnglish() && (n = 'Congratulations ' + o.name + ' x ' + t),
                                    this.showToast(n),
                                    this.updateAdShowInfo(),
                                    s.G.Ap.propertyPack.getPlayProperty().addProperty(e, t),
                                    s.G.Ap.propertyPack.save(),
                                    this.callback && this.callback.onBuyProperty(e, t),
                                    setTimeout(function () {
                                        i.onClickCloseButton();
                                    }, 1e3);
                            }),
                            (e.prototype.setCallBack = function (e) {
                                this.callback = e;
                            }),
                            (e.prototype.setPriortyProperty = function (e) {
                                this.priortyProperty = e.clone();
                            }),
                            (e.prototype.show = function () {
                                this.refreshUI(), this.reportOpen(), v.default.getInstance().pushDialog(this.node, 'PropertyStorePrefab');
                            }),
                            (e.prototype.refreshUI = function () {
                                var i = this;
                                if (this.priortyProperty) {
                                    var e = s.G.Ap.propertyPack.getConfig().getParam(this.priortyProperty);
                                    if (e) {
                                        e.costType === r.COSTTYPE.DIAMON ? ((this.mBuyBtnDiamondIcon.node.active = !0), (this.mBuyBtnGoldIcon.node.active = !1)) : ((this.mBuyBtnDiamondIcon.node.active = !1), (this.mBuyBtnGoldIcon.node.active = !0)), (this.mBuyBtnLabel.string = '' + this.mProgress * e.price);
                                        var t = this.parseDesc(e.describe);
                                        (this.mDescLabel.string = t),
                                            n.default.loadAtlasSpriteFrames(u.GameItemsManager.getPropPlistPath(), e.pic, function (e, t) {
                                                cc.isValid(i, !0) && (i.mPropertyIcon.spriteFrame = t);
                                            });
                                    }
                                }
                            }),
                            (e.prototype.onClickCloseButton = function () {
                                (this.node.active = !1), new a.default(this.node.getChildByName('costpop')).setVisible(!1), this.callback && this.callback.onPropertyStoreClose(this.priortyProperty), v.default.getInstance().popDialog(this.node, 'PropertyStorePrefab');
                            }),
                            (e.prototype.onClickBuyButton = function (e, t) {
                                var i = s.G.Ap.propertyPack.getConfig().getParam(e);
                                if (i) {
                                    if (i.costType === r.COSTTYPE.DIAMON) {
                                        var o = i.price * t;
                                        if (!c.MoneySystem.consumeDiamond(Math.max(o, 1))) {
                                            var n = S.default.getInstance().getLanguageByKey('label_text.prop_tip2');
                                            return this.showToast(n), void this.showBuyDiamondDialog();
                                        }
                                    } else {
                                        var a = i.price * t;
                                        if (!c.MoneySystem.consumeGold(Math.max(a, 1))) {
                                            n = S.default.getInstance().getLanguageByKey('label_text.prop_tip1');
                                            return this.showToast(n), void this.showBuyGoldDialog();
                                        }
                                    }
                                    s.G.Ap.propertyPack.getPlayProperty().addProperty(e, t), s.G.Ap.propertyPack.save(), this.callback && this.callback.onBuyProperty(e, t), this.reportBuy(), this.onClickCloseButton();
                                }
                            }),
                            (e.prototype.showBuyGoldDialog = function () {
                                var o = this;
                                g.default.load('prefab/PlayerInfoPopupProfab', function (e, t) {
                                    var i = t.getComponent(_.default);
                                    i.setCloseSelfCallback(function () {
                                        o.node.removeChild(t);
                                    }),
                                        i.playerGoldBtnClick(y.default.SOURCE_FIGHT_BUY_PROPERTY),
                                        o.node.addChild(t),
                                        console.log('goldBtnClick');
                                });
                            }),
                            (e.prototype.showBuyDiamondDialog = function () {
                                var o = this;
                                g.default.load('prefab/PlayerInfoPopupProfab', function (e, t) {
                                    var i = t.getComponent('PlayerInfoPopupProfab');
                                    i.setCloseSelfCallback(function () {
                                        o.node.removeChild(t);
                                    }),
                                        i.playerDiamondBtnClick(y.default.SOURCE_FIGHT_BUY_PROPERTY),
                                        o.node.addChild(t);
                                });
                            }),
                            (e.prototype.onClickFreeButton = function (e, t) {
                                this.freePrizeButton.enabled ? this.showPrizeVideoAd(e, t) : this.log('[qzs] free Prize Button Not enable');
                            }),
                            (e.prototype.showToast = function (e) {
                                this.log('[qzs] show Toast: ' + e);
                                var t = new a.default(this.node.getChildByName('costpop'));
                                if ((t.setChildText('caption', e), t.setOpacity(255), t.setVisible(!0), t.getNode())) {
                                    t.getNode().stopAllActions();
                                    var i = cc.delayTime(1),
                                        o = cc.fadeTo(0.2, 0);
                                    t.getNode().runAction(cc.sequence(i, o));
                                }
                            }),
                            (e.prototype.reportOpen = function () {
                                var e = new o.default(171);
                                e.add('action', 1), e.add('item_id', this.priortyProperty ? this.priortyProperty.type : 0), e.report();
                            }),
                            (e.prototype.reportBuy = function () {
                                var e = new o.default(171);
                                e.add('action', 2), e.add('item_id', this.priortyProperty ? this.priortyProperty.type : 0), e.report();
                            }),
                            (e.prototype.parseDesc = function (e) {
                                var t = '';
                                if (~e.indexOf(';'))
                                    for (var i = e.split(';'), o = 0, n = 0, a = i; n < a.length; n++) {
                                        var r = a[n];
                                        (t = t.concat(r)), ++o !== i.length && (t = t.concat('\n'));
                                    }
                                else t = e;
                                return t;
                            }),
                            (e.DEBUG = !1),
                            __decorate([C(cc.Button)], e.prototype, 'freePrizeButton', void 0),
                            __decorate([C(cc.Label)], e.prototype, 'freeTimeLabel', void 0),
                            __decorate([C(cc.Button)], e.prototype, 'mBuyBtn', void 0),
                            __decorate([C(cc.Sprite)], e.prototype, 'mBuyBtnGoldIcon', void 0),
                            __decorate([C(cc.Sprite)], e.prototype, 'mBuyBtnDiamondIcon', void 0),
                            __decorate([C(cc.Label)], e.prototype, 'mBuyBtnLabel', void 0),
                            __decorate([C(cc.Label)], e.prototype, 'mDescLabel', void 0),
                            __decorate([C(cc.Sprite)], e.prototype, 'mPropertyIcon', void 0),
                            __decorate([C(cc.Button)], e.prototype, 'mAddBtn', void 0),
                            __decorate([C(cc.Button)], e.prototype, 'mJianBtn', void 0),
                            __decorate([C(cc.Label)], e.prototype, 'mPropertyCountLabel', void 0),
                            __decorate([C(cc.Sprite)], e.prototype, 'mProgressFront', void 0),
                            __decorate([C(cc.Sprite)], e.prototype, 'mProgressBack', void 0),
                            __decorate([C(cc.Slider)], e.prototype, 'mSlider', void 0),
                            __decorate([C(cc.Sprite)], e.prototype, 'mTitleSprite', void 0),
                            (e = i = __decorate([T], e))
                        );
                    })(cc.Component);
                (i.default = E), cc._RF.pop();
            },
            {
                '../../../modules/MGAdv/scripts/Logic/MGAdvDefine': 'MGAdvDefine',
                '../../../modules/MGAdv/scripts/Logic/MGAdvEntrance': 'MGAdvEntrance',
                '../../base/G': 'G',
                '../../config/LSKey': 'LSKey',
                '../../infoc/easyReport': 'EasyReport',
                '../../infoc/m_p2_pop_coin': 'm_p2_pop_coin',
                '../../property/PropertyDefines': 'PropertyDefines',
                '../../util/PU': 'PU',
                '../../util/nodeFacade': 'NodeFacade',
                '../Logic/GameItemsManager': 'GameItemsManager',
                '../Logic/I18nManager': 'I18nManager',
                '../Logic/MoneySystem': 'MoneySystem',
                '../Network/Protocol/StorageUtil': 'StorageUtil',
                '../UI/GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
                '../UI/GameEntraScene/ImgCache': 'ImgCache',
                '../UI/GameEntraScene/PrefabMgr': 'PrefabMgr',
                '../UI/playerInfoPopup/PlayerInfoPopupProfab': 'PlayerInfoPopupProfab',
                '../keypad/KeypadNavigator': 'KeypadNavigator',
            },
        ],
        PullDataStatus: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '6bbd13+As9IgJsTa/1ZkuDn', 'PullDataStatus'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    ((i.PullDataStatus || (i.PullDataStatus = {})).isPullDataSuccess = !1),
                    cc._RF.pop();
            },
            {},
        ],
        QQBKAudioManager: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '5bae9z1QwRP358Qc9oSFxZN', 'QQBKAudioManager'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var r = e('../../base/Log'),
                    o = (function () {
                        function a() {}
                        return (
                            (a.getBKIns = function (e, t, i) {
                                if ((r.default.isDebug() && r.default.e('QQBKAudioManager => play,[' + e + ']   ' + t), 0 == e)) {
                                    var o = new BK.Audio(0, t, i);
                                    return (o.audioType = 0), o;
                                }
                                var n = null;
                                return (
                                    0 == BK.Misc.qqVerLessthan(GameStatusInfo.QQVer, '7.8.0')
                                        ? (this.audioContext ||
                                              (this.audioContext = BK.createAudioContext({
                                                  type: 'effect',
                                              })),
                                          (n = new ((function (n) {
                                              function e(e, t, i) {
                                                  var o = n.call(this, e, t, i) || this;
                                                  return (o.effectObject = a.audioContext), o;
                                              }
                                              return (
                                                  __extends(e, n),
                                                  (e.prototype.stopMusic = function () {
                                                      this.audioObject && !this.audioObject.destroyed && this.audioObject.destroy();
                                                  }),
                                                  e
                                              );
                                          })(BK.Audio))(e, t, i)))
                                        : (n = new BK.Audio(1, t, i)),
                                    (n.audioType = 1),
                                    (n.musicPath = t),
                                    (n.loopCount = i),
                                    n
                                );
                            }),
                            a
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../../base/Log': 'Log',
            },
        ],
        QQGameConvertCode: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '13586NmmERGr54wpWCfm5Z/', 'QQGameConvertCode'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../base/Log'),
                    n = (function () {
                        function t() {}
                        return (
                            (t.isConverCodeScene = function (e) {
                                o.default.i(this.TAG + ' isConverCodeScene launchOption = ', e), (this.isQRCode(e) || this.isConverCode(e)) && (t.needShowCodePage = !0);
                            }),
                            (t.isQRCode = function (e) {
                                return e && e.query && e.query.source && e.query.source == t.LAUNCH_DATA;
                            }),
                            (t.isConverCode = function (e) {
                                return e && e.referrerInfo && e.referrerInfo.extraData && e.referrerInfo.extraData.data && e.referrerInfo.extraData.data == t.LAUNCH_DATA;
                            }),
                            (t.getConvertCode = function (t) {
                                var i = this;
                                wx.getClipboardData({
                                    success: function (e) {
                                        o.default.i(i.TAG + 'getConvertCode.wx.getClipboardData success result = ', e), t(e.data);
                                    },
                                    fail: function (e) {
                                        o.default.e(i.TAG + 'getConvertCode.wx.getClipboardData fail err = ', e), t(null);
                                    },
                                    complete: function () {
                                        o.default.i(i.TAG + 'getConvertCode.wx.getClipboardData complete ');
                                    },
                                });
                            }),
                            (t.TAG = '[QQGameConvertCode]====> '),
                            (t.LAUNCH_DATA = 'gqk'),
                            (t.needShowCodePage = !1),
                            t
                        );
                    })();
                (i.QQGameConvertCode = n), cc._RF.pop();
            },
            {
                '../base/Log': 'Log',
            },
        ],
        QQHelper: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'fb786tht8NBs69+ngPFcxFC', 'QQHelper'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('./NetworkUtils'),
                    r = e('./MGLog'),
                    o = (function () {
                        function o() {}
                        return (
                            (o.networkRequest = function (n) {
                                r.default.l('QQHelper networkRequest:' + n.url, n);
                                var e = new BK.HttpUtil(n.url);
                                if ((n.method && 0 < n.method.length ? e.setHttpMethod(n.method) : e.setHttpMethod(a.default.METHOD_POST), n.header)) for (var t in n.header) e.setHttpHeader(t, n.header[t]);
                                if (n.data) {
                                    var i = new BK.Buffer(0, !1);
                                    i.writeAsString(JSON.stringify(n.data), !1), e.setHttpRawBody(i);
                                }
                                e.requestAsync(function (e, t) {
                                    var i = e ? e.readAsString(!0) : '';
                                    if ((r.default.l('QQHelper networkRequest, complete, code:' + t + ' rsp:' + i), 200 == t && i)) {
                                        if (n.success) {
                                            var o = i;
                                            if ('json' == n.dataType)
                                                try {
                                                    o = JSON.parse(i);
                                                } catch (e) {}
                                            n.success(t, o, null);
                                        }
                                    } else n.fail && n.fail(t, i);
                                });
                            }),
                            (o.fetchOpenKey = function (o) {
                                BK.QQ.fetchOpenKey(function (e, t, i) {
                                    console.info('fetch open key=' + (i ? i.openKey : '')), 0 == e && i && i.openKey ? o.success && o.success(i.openKey) : o.fail && o.fail();
                                });
                            }),
                            (o.getNick = function (i) {
                                BK.MQQ.Account.getNick(GameStatusInfo.openId, function (e, t) {
                                    i && i(t);
                                });
                            }),
                            (o.getHeadEx = function (i) {
                                BK.MQQ.Account.getHeadEx(GameStatusInfo.openId, function (e, t) {
                                    i && i(t);
                                });
                            }),
                            (o.getCachePath = function () {
                                1 != BK.FileUtil.isFileExist(o.CACHE_DIR) && BK.FileUtil.makeDir(o.CACHE_DIR);
                                var e = o.CACHE_DIR + GameStatusInfo.openId + '//';
                                return 1 != BK.FileUtil.isFileExist(e) && BK.FileUtil.makeDir(e), e;
                            }),
                            (o.setStorage = function (e, t) {
                                var i = o.getCachePath() + e;
                                BK.FileUtil.writeFile(i, t);
                            }),
                            (o.getStorage = function (e) {
                                var t = o.getCachePath() + e;
                                return 1 != BK.FileUtil.isFileExist(t) ? '' : BK.FileUtil.readFile(t).readAsString();
                            }),
                            (o.delStorage = function (e) {
                                var t = o.getCachePath() + e;
                                1 == BK.FileUtil.isFileExist(t) && BK.FileUtil.deleteFile(t);
                            }),
                            (o.skipGame = function (e, t) {
                                BK.QQ.skipGame(e, t);
                            }),
                            (o.CACHE_DIR = 'GameSandBox://cache//'),
                            o
                        );
                    })();
                (i.QQHelper = o), cc._RF.pop();
            },
            {
                './MGLog': 'MGLog',
                './NetworkUtils': 'NetworkUtils',
            },
        ],
        QQMusicContext: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '6247e50MxtNtK909051ZpPC', 'QQMusicContext'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./QQBKAudioManager'),
                    n = (function () {
                        function e(e, t) {
                            (this.index = 0), (this.handle = null), (this.volume = 1), (this.ended = !0), (this.timestamp = 0), (this.path = ''), (this.index = e), (this.path = t), (this.handle = o.default.getBKIns(1, t, 0));
                        }
                        return (
                            (e.prototype.getIndex = function () {
                                return this.index;
                            }),
                            (e.prototype.getPath = function () {
                                return this.path;
                            }),
                            (e.prototype.play = function () {
                                (this.ended = !1), this.handle && this.handle.startMusic(this._onEnd), (this.timestamp = Date.now());
                            }),
                            (e.prototype.playA = function (e, t) {
                                (this.ended = !1), (this.handle = o.default.getBKIns(1, e, 0)), this.handle.startMusic(this._onEnd), (this.volume = t), (this.timestamp = Date.now());
                            }),
                            (e.prototype.playB = function (e, t) {
                                (this.ended = !1), null != this.handle && this.handle.pauseMusic(), (this.handle = o.default.getBKIns(1, e, 0)), this.handle.startMusic(this._onEnd), (this.volume = t), (this.timestamp = Date.now());
                            }),
                            (e.prototype.stop = function () {
                                null != this.handle && this.handle.stopMusic();
                            }),
                            (e.prototype.pause = function () {
                                null != this.handle && this.handle.pauseMusic();
                            }),
                            (e.prototype.seek = function (e) {}),
                            (e.prototype.getTimeStamp = function () {
                                return this.timestamp;
                            }),
                            (e.prototype.isEnded = function () {
                                return this.ended;
                            }),
                            (e.prototype._onEnd = function () {
                                (this.ended = !0), (this.timestamp = 0);
                            }),
                            e
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                './QQBKAudioManager': 'QQBKAudioManager',
            },
        ],
        QQRedPacketModule: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '4b423+oHFBNwJg3c84zp1RI', 'QQRedPacketModule'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../MUI/MUINode'),
                    r = e('../MUI/MUISprite'),
                    s = e('../../util/PU'),
                    n = e('../../base/G'),
                    c = e('../MUI/MUILabel'),
                    l = e('../../util/SUtil'),
                    a = (function () {
                        function a() {}
                        return (
                            (a.prototype.load = function () {
                                (this.mScoreReached = !1), (this.mFinished = !1), this.createTargetSprite(), this.createFinishSprite();
                            }),
                            (a.prototype.destroy = function () {}),
                            (a.prototype.prepare = function () {
                                var e = this;
                                this.createToastNode(function () {
                                    e.mUINode && e.mToast && (e.mUINode.addChild(e.mToast), e.setToastShowTime());
                                });
                            }),
                            (a.prototype.start = function () {
                                this.mUINode && this.mTargetSprite && this.mUINode.addChild(this.mTargetSprite);
                            }),
                            (a.prototype.pause = function () {
                                this.mUINode && this.mUINode.setVisible(!1);
                            }),
                            (a.prototype.resume = function () {
                                this.mUINode && this.mUINode.setVisible(!0);
                            }),
                            (a.prototype.update = function () {
                                var e = n.G.Ap.state.attainScore;
                                return a.TARGET_SCORE <= e && !this.mScoreReached && ((this.mScoreReached = !0), this.mTargetSprite && (this.mTargetSprite.removeFromParent(), (this.mTargetSprite = null)), this.mFinishSprite && this.mUINode.addChild(this.mFinishSprite)), !this.mFinished;
                            }),
                            (a.prototype.setFinishShowTime = function () {
                                var e = this;
                                setTimeout(function () {
                                    e.mFinishSprite && (e.mFinishSprite.removeFromParent(), (e.mFinishSprite = null)), (e.mFinished = !0);
                                }, a.FINISH_LENGTH);
                            }),
                            (a.prototype.createTargetSprite = function () {
                                var i = this,
                                    o = new r.default(),
                                    e = s.default.getResourcePath('resources/gameImage/qq_red_packet_target.png');
                                o.loadLocalImage(e, !1, function () {
                                    var e = (i.mTargetSprite = o).imageData.image.width,
                                        t = o.imageData.image.height;
                                    i.updateSpriteRect(o, e, t);
                                });
                            }),
                            (a.prototype.createFinishSprite = function () {
                                var i = this,
                                    o = new r.default(),
                                    e = s.default.getResourcePath('resources/gameImage/qq_red_packet_finish.png');
                                o.loadLocalImage(e, !1, function () {
                                    var e = (i.mFinishSprite = o).imageData.image.width,
                                        t = o.imageData.image.height;
                                    i.updateSpriteRect(o, e, t);
                                });
                            }),
                            (a.prototype.updateSpriteRect = function (e, t, i) {
                                l.SUtil.ins().isLiuHai() ? e.move(16, n.G.Ap.config.presentHeight - i - 78, t, i) : e.move(16, n.G.Ap.config.presentHeight - i - 17, t, i);
                            }),
                            (a.prototype.getUINode = function () {
                                return this.mUINode || ((this.mUINode = new o.default()), this.mUINode.move(0, 0, n.G.Ap.config.presentWidth, n.G.Ap.config.presentHeight)), this.mUINode;
                            }),
                            (a.prototype.createToastNode = function (i) {
                                var o = this,
                                    n = new r.default(),
                                    e = s.default.getResourcePath('resources/static_res/toast.png');
                                n.loadLocalImage(e, !1, function () {
                                    var e = (o.mToast = n).imageData.image.width,
                                        t = n.imageData.image.height;
                                    o.updateToastRect(n, e, t), i && i();
                                });
                            }),
                            (a.prototype.updateToastRect = function (e, t, i) {
                                this.addToastText(e, 500, i), e.move((n.G.Ap.config.presentWidth - 500) / 2, (n.G.Ap.config.presentHeight - i) / 2, 500, i);
                            }),
                            (a.prototype.addToastText = function (e, t, i) {
                                var o = new c.default();
                                (o.size = 28), (o.color = 'white'), (o.text = '欢迎参加现金红包赛'), o.setPosition(t / 2, i / 2 + 12);
                                var n = new c.default();
                                (n.size = o.size), (n.color = o.color), (n.text = cc.js.formatStr('达到%s分，即可瓜分万元红包', a.TARGET_SCORE)), n.setPosition(t / 2, i / 2 - 32), e.addChild(o), e.addChild(n);
                            }),
                            (a.prototype.setToastShowTime = function () {
                                var e = this;
                                setTimeout(function () {
                                    e.mToast && e.mToast.setVisible(!1);
                                }, a.TOAST_LENGTH);
                            }),
                            (a.prototype.showNode = function () {
                                this.mUINode && this.mUINode.setVisible(!0);
                            }),
                            (a.prototype.hideNode = function () {
                                this.mUINode && this.mUINode.setVisible(!1);
                            }),
                            (a.TARGET_SCORE = 750),
                            (a.TOAST_LENGTH = 3e3),
                            (a.FINISH_LENGTH = 2e3),
                            a
                        );
                    })();
                (i.default = a), cc._RF.pop();
            },
            {
                '../../base/G': 'G',
                '../../util/PU': 'PU',
                '../../util/SUtil': 'SUtil',
                '../MUI/MUILabel': 'MUILabel',
                '../MUI/MUINode': 'MUINode',
                '../MUI/MUISprite': 'MUISprite',
            },
        ],
        QQRedPacketRelive: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'fd882M+5UFHm5SlK6wj1tIg', 'QQRedPacketRelive'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../base/G'),
                    n = e('../../gamescene/module/QQRedPacketModule'),
                    a = cc._decorator,
                    r = a.ccclass,
                    s = a.property,
                    c = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.relive_score_label = null), (e.relive_stage_label = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.attatchToRootLayout = function (e) {
                                e.addChild(this.node);
                            }),
                            (e.prototype.onLoad = function () {
                                this.updateReliveLayout();
                            }),
                            (e.prototype.updateReliveLayout = function () {
                                var e = o.G.Ap.state.attainScore,
                                    t = n.default.TARGET_SCORE - e;
                                (this.relive_score_label.string = '还差 <color=#FF5252><size=90>' + t + '</s></c> 分即可瓜分'), (this.relive_stage_label.string = '万元现金红包');
                            }),
                            __decorate([s(cc.RichText)], e.prototype, 'relive_score_label', void 0),
                            __decorate([s(cc.RichText)], e.prototype, 'relive_stage_label', void 0),
                            (e = __decorate([r], e))
                        );
                    })(cc.Component);
                (i.default = c), cc._RF.pop();
            },
            {
                '../../base/G': 'G',
                '../../gamescene/module/QQRedPacketModule': 'QQRedPacketModule',
            },
        ],
        QQReport: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '505bfC35OlGHYJoSgjGi7pk', 'QQReport'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./PU'),
                    n = e('../base/Log'),
                    a = e('../business/Network/Protocol/StorageUtil'),
                    r = e('./StringUtil'),
                    s = e('./TimeUtil'),
                    c = e('../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    l = e('../config/LSKey'),
                    u = e('./PU'),
                    d = (function () {
                        function e() {}
                        return (
                            (e.reportFightWin = function () {
                                if (u.default.isQQ()) {
                                    console.info('[QQReport]=>reportFightWin');
                                    BK.QQ.reportGameResult(
                                        {
                                            infoList: [
                                                {
                                                    type: 13,
                                                    op: 1,
                                                    num: 1,
                                                },
                                            ],
                                        },
                                        function (e, t, i) {
                                            0 !== e ? console.info('[QQReport]=>reportFightWin reportGameResult fail errCode = ', e, ',cmd = ', t, ',data = ', i) : console.info('[QQReport]=>reportFightWin reportGameResult success errCode = ', e, ',cmd = ', t, ',data = ', i);
                                        },
                                    );
                                }
                            }),
                            (e.reportGradeUpdate = function () {
                                if (u.default.isQQ()) {
                                    console.info('[QQReport]=>reportGradeUpdate');
                                    BK.QQ.reportGameResult(
                                        {
                                            infoList: [
                                                {
                                                    type: 22,
                                                    op: 1,
                                                    num: 1,
                                                },
                                            ],
                                        },
                                        function (e, t, i) {
                                            0 !== e ? console.info('[QQReport]=>reportGradeUpdate reportGameResult fail errCode = ', e, ',cmd = ', t, ',data = ', i) : console.info('[QQReport]=>reportGradeUpdate reportGameResult success errCode = ', e, ',cmd = ', t, ',data = ', i);
                                        },
                                    );
                                }
                            }),
                            (e.reportSongScore = function (e) {
                                if ((n.default.i('[QQReport]=>reportSongScore score = ' + e), o.default.isQQ() && 0 < e)) {
                                    var t = {
                                        infoList: [
                                            {
                                                type: 8,
                                                op: 2,
                                                num: e,
                                            },
                                        ],
                                    };
                                    BK.QQ.reportGameResult(t, function (e, t, i) {
                                        0 !== e ? n.default.i('[QQReport]=>reportSongScore reportGameResult fail errCode = ', e, ',cmd = ', t, ',data = ', i) : n.default.i('[QQReport]=>reportSongScore reportGameResult success errCode = ', e, ',cmd = ', t, ',data = ', i);
                                    });
                                }
                            }),
                            (e.reportUnLockSong = function (e) {
                                if ((n.default.i('[QQReport]=>reportUnLockSong unLock = ' + e), o.default.isQQ())) {
                                    var t = {
                                        infoList: [
                                            {
                                                type: 15,
                                                op: 2,
                                                num: this.getTodayUnlockNum(e),
                                            },
                                        ],
                                    };
                                    BK.QQ.reportGameResult(t, function (e, t, i) {
                                        0 !== e ? n.default.i('[QQReport]=>reportUnLockSong reportGameResult fail errCode = ', e, ',cmd = ', t, ',data = ', i) : n.default.i('[QQReport]=>reportUnLockSong reportGameResult success errCode = ', e, ',cmd = ', t, ',data = ', i);
                                    });
                                }
                            }),
                            (e.getTodayUnlockNum = function (e) {
                                var t = a.default.read(l.default.QQ_REPORT_UNLOCK_SONG_NUM);
                                if (r.StringUtil.isEmpty(t)) return a.default.save(l.default.QQ_REPORT_UNLOCK_SONG_NUM, s.default.formatDate(c.MGUser.getCurrentServerTime()) + ':' + e), n.default.i('[QQReport]=>getTodayUnlockNum1 unLock = ' + e), e;
                                var i = t.split(':');
                                if (i[0] == s.default.formatDate(c.MGUser.getCurrentServerTime())) {
                                    var o = parseInt(i[1]);
                                    return a.default.save(l.default.QQ_REPORT_UNLOCK_SONG_NUM, s.default.formatDate(c.MGUser.getCurrentServerTime()) + ':' + (e + o)), n.default.i('[QQReport]=>getTodayUnlockNum2 unLock = ' + (e + o)), o + e;
                                }
                                return a.default.save(l.default.QQ_REPORT_UNLOCK_SONG_NUM, s.default.formatDate(c.MGUser.getCurrentServerTime()) + ':' + e), n.default.i('[QQReport]=>getTodayUnlockNum3 unLock = ' + e), e;
                            }),
                            (e.GRADE_UPDATE_START_TIME = 20180921),
                            (e.GRADE_UPDATE_END_TIME = 20181031),
                            e
                        );
                    })();
                (i.QQReport = d), cc._RF.pop();
            },
            {
                '../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../base/Log': 'Log',
                '../business/Network/Protocol/StorageUtil': 'StorageUtil',
                '../config/LSKey': 'LSKey',
                './PU': 'PU',
                './StringUtil': 'StringUtil',
                './TimeUtil': 'TimeUtil',
            },
        ],
        RankAdapter: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '44223xUfadCqbclXcUWU9jR', 'RankAdapter'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var u = e('../business/Logic/PlayerMgr'),
                    d = e('../base/Log'),
                    a = e('../util/PU'),
                    p = e('../business/UI/MusicLevelDataLoader'),
                    o = (function () {
                        function t() {}
                        return (
                            (t.getKeyIndex = function (e) {
                                return !e || isNaN(e) ? -1 : Math.floor((e - 1) / t.SONG_SCORES_SINGLE_KEY_SONGS_NUMBER);
                            }),
                            (t.getReviveData = function (e, t, i, o, n) {
                                a.default.isCM() && this.getReviveCMData(e, t, i, o, n);
                            }),
                            (t.getReviveCMData = function (e, t, i, o, n) {
                                var a = u.default.Ins().getLevelRecordByMid(p.MusicLevelDataLoader.getItemInfoByMid(e).musicId),
                                    r = a.mBestScore;
                                d.default.i('getReviveCMData musicId = ' + e + ',score=' + t + ',levelRecord = ', a);
                                var s,
                                    c = 5,
                                    l = 0;
                                (s = !(500 < (l = r - t + 1) || l <= 0)) && (c = 4), s || null == i || 0 == i || null == o || 0 == o || (c = 500 < (l = o) ? 5 : 1), n && n(c, l, 3 < i ? i - 3 : 0, i <= 3 ? i : 0, 1, '', '');
                            }),
                            (t.SONG_SCORES_SINGLE_KEY_SONGS_NUMBER = 40),
                            t
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../base/Log': 'Log',
                '../business/Logic/PlayerMgr': 'PlayerMgr',
                '../business/UI/MusicLevelDataLoader': 'MusicLevelDataLoader',
                '../util/PU': 'PU',
            },
        ],
        RankRevivePageContainer: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'c9bb20vqtFAOKca5XF0ozu0', 'RankRevivePageContainer'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../base/Log'),
                    n = e('../../../util/PU'),
                    a = e('./RankRevivePageQQ'),
                    r = e('../GameEntraScene/PrefabMgr'),
                    s = cc._decorator,
                    c = s.ccclass,
                    l =
                        (s.property,
                        (function (t) {
                            function e() {
                                var e = (null !== t && t.apply(this, arguments)) || this;
                                return (e.mReviveController = null), e;
                            }
                            return (
                                __extends(e, t),
                                (e.prototype.initData = function (e, t) {
                                    (this.mReviveController = e), (this.mReliveScoreDataCallback = t), o.default.l('[RankRevivePageContainer] initData mReviveController: ' + this.mReviveController + ' mReliveScoreDataCallback: ' + this.mReliveScoreDataCallback);
                                }),
                                (e.prototype.onLoad = function () {
                                    var i = this;
                                    o.default.l('[RankRevivePageContainer] onLoad'),
                                        n.default.isCM()
                                            ? r.default.load('prefab/rank/RankRevivePageQQ', function (e, t) {
                                                  t.getComponent(a.default).initData(i.mReviveController, i.mReliveScoreDataCallback), t && i.node.addChild(t);
                                              })
                                            : n.default.isQQ() &&
                                              r.default.load('prefab/rank/RankRevivePageQQ', function (e, t) {
                                                  t.getComponent(a.default).initData(i.mReviveController, i.mReliveScoreDataCallback), t && i.node.addChild(t);
                                              });
                                }),
                                (e.prototype.start = function () {}),
                                (e = __decorate([c], e))
                            );
                        })(cc.Component));
                (i.default = l), cc._RF.pop();
            },
            {
                '../../../base/Log': 'Log',
                '../../../util/PU': 'PU',
                '../GameEntraScene/PrefabMgr': 'PrefabMgr',
                './RankRevivePageQQ': 'RankRevivePageQQ',
            },
        ],
        RankRevivePageQQ: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '2b55fPqBLJGqLWGlOIXPI7j', 'RankRevivePageQQ'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var s = e('../../../LogicPlatform/SpriteCacheLoader'),
                    c = e('../../gameover/ReviveController'),
                    a = e('../../../base/G'),
                    r = e('../../Logic/LevelMgr'),
                    l = e('../MusicLevelDataLoader'),
                    u = e('../../../base/Log'),
                    d = e('../../Logic/I18nManager'),
                    p = e('../../RankAdapter'),
                    o = cc._decorator,
                    n = o.ccclass,
                    h = o.property,
                    f = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.needScore = null), (e.crown_layout = null), (e.star_layout = null), (e.title_layout = null), (e.revive_immediate_layout = null), (e.beyond_friend_layout = null), (e.rank123OrNewRecord = null), (e.avatarSprite = null), (e.nickName = null), (e.rightLabel = null), (e.rankNum123Str = ['第一名', '第二名', '第三名']), (e.newRecordStr = '新纪录'), (e.endStringArray = ['即可获得', '即可赢得', '就能超越', '即可创下']), (e.mReviveController = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.initData = function (e, t) {
                                (this.mReviveController = e), (this.mReliveScoreDataCallback = t), u.default.l('[RankRevivePageQQ] initData mReviveController: ' + this.mReviveController + ' mReliveScoreDataCallback: ' + this.mReliveScoreDataCallback);
                            }),
                            (e.prototype.onLoad = function () {
                                var s = this;
                                d.default.getInstance().isEnglish() && ((this.rankNum123Str = ['champion', 'runner-up', 'second-runner-up']), (this.newRecordStr = 'New Best'), (this.endStringArray = ['more for', 'to win', 'to beat', 'to creat'])), u.default.l('[RankRevivePageQQ] onLoad');
                                var e = a.G.Ap.state.attainScore,
                                    t = a.G.Ap.state.mission.levelId,
                                    i = r.LevelMgr.Ins().getLevel(t).music.mid,
                                    o = l.MusicLevelDataLoader.getItemInfoByMid(i),
                                    n = (o && o.level, this.mReviveController.getBestScore(), this.mReliveScoreDataCallback());
                                u.default.l('[RankRevivePageQQ] reliveScoreData type = ' + n.crownType + ',score = ' + n.score),
                                    p.default.getReviveData(i, e, n.crownType, n.score, function (e, t, i, o, n, a, r) {
                                        u.default.l('[RankRevivePageQQ] getReviveData reviveType: ' + e + ' diffScore: ' + t + ' crownNum: ' + i + ' startNum: ' + o + ' nickName: ' + r + ' avatarUrl: ' + a), s.initReviveData(e, t, i, o, n, a, r);
                                    });
                            }),
                            (e.prototype.start = function () {}),
                            (e.prototype.initReviveData = function (e, t, i, o, n, a, r) {
                                switch (((this.title_layout.node.active = e < c.default.TYPE_IMMEDIATE_REVIVE), (this.crown_layout.node.active = e == c.default.TYPE_CROWN_OR_STAR), (this.star_layout.node.active = e == c.default.TYPE_CROWN_OR_STAR), (this.rank123OrNewRecord.node.active = e == c.default.TYPE_RANK || e == c.default.TYPE_NEWRECORD), (this.beyond_friend_layout.node.active = e == c.default.TYPE_BEYOND_FRD), (this.revive_immediate_layout.node.active = e == c.default.TYPE_IMMEDIATE_REVIVE), (this.needScore.string = t.toString()), e - 1 < this.endStringArray.length && (this.rightLabel.string = this.endStringArray[e - 1]), e)) {
                                    case c.default.TYPE_CROWN_OR_STAR:
                                        this.initCrownOrStarLayout(i, o);
                                        break;
                                    case c.default.TYPE_RANK:
                                        this.rank123OrNewRecord.string = this.rankNum123Str[n - 1];
                                        break;
                                    case c.default.TYPE_BEYOND_FRD:
                                        (this.nickName.string = r), s.default.load(a, this.avatarSprite);
                                        break;
                                    case c.default.TYPE_NEWRECORD:
                                        this.rank123OrNewRecord.string = this.newRecordStr;
                                        break;
                                    case c.default.TYPE_IMMEDIATE_REVIVE:
                                }
                            }),
                            (e.prototype.initCrownOrStarLayout = function (e, t) {
                                if (e && 0 < e)
                                    for (
                                        var i = function (e) {
                                                var t = new cc.Node('crownSprite');
                                                (t.width = 82), (t.height = 75), t.addComponent(cc.Sprite);
                                                var i = t.getComponent(cc.Sprite);
                                                cc.loader.loadRes('/gameImage/home_crown_get', cc.SpriteFrame, function (e, t) {
                                                    t && (i.spriteFrame = t);
                                                }),
                                                    o.crown_layout.node.addChild(t);
                                            },
                                            o = this,
                                            n = 0;
                                        n < e;
                                        n++
                                    )
                                        i();
                                else if (t && 0 < t) {
                                    var a = function (e) {
                                            var t = new cc.Node('starSprite');
                                            (t.width = 88), (t.height = 108), t.addComponent(cc.Sprite);
                                            var i = t.getComponent(cc.Sprite);
                                            cc.loader.loadRes('/gameImage/home_star_get', cc.SpriteFrame, function (e, t) {
                                                t && (i.spriteFrame = t);
                                            }),
                                                r.star_layout.node.addChild(t);
                                        },
                                        r = this;
                                    for (n = 0; n < t; n++) a();
                                }
                            }),
                            __decorate([h(cc.Label)], e.prototype, 'needScore', void 0),
                            __decorate([h(cc.Layout)], e.prototype, 'crown_layout', void 0),
                            __decorate([h(cc.Layout)], e.prototype, 'star_layout', void 0),
                            __decorate([h(cc.Layout)], e.prototype, 'title_layout', void 0),
                            __decorate([h(cc.Layout)], e.prototype, 'revive_immediate_layout', void 0),
                            __decorate([h(cc.Layout)], e.prototype, 'beyond_friend_layout', void 0),
                            __decorate([h(cc.Label)], e.prototype, 'rank123OrNewRecord', void 0),
                            __decorate([h(cc.Sprite)], e.prototype, 'avatarSprite', void 0),
                            __decorate([h(cc.Label)], e.prototype, 'nickName', void 0),
                            __decorate([h(cc.Label)], e.prototype, 'rightLabel', void 0),
                            (e = __decorate([n], e))
                        );
                    })(cc.Component);
                (i.default = f), cc._RF.pop();
            },
            {
                '../../../LogicPlatform/SpriteCacheLoader': 'SpriteCacheLoader',
                '../../../base/G': 'G',
                '../../../base/Log': 'Log',
                '../../Logic/I18nManager': 'I18nManager',
                '../../Logic/LevelMgr': 'LevelMgr',
                '../../RankAdapter': 'RankAdapter',
                '../../gameover/ReviveController': 'ReviveController',
                '../MusicLevelDataLoader': 'MusicLevelDataLoader',
            },
        ],
        RankSetData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '388a2bQyN5MC6XM4oo1b81h', 'RankSetData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.findId = function (e) {
                                return this.find('id', e);
                            }),
                            (t.prototype.getRow = function () {
                                return new a();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.RankSetData = n;
                var a = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getId = function () {
                            return this.getInt('id');
                        }),
                        (t.prototype.getRankName = function () {
                            return this.getString('rankName');
                        }),
                        (t.prototype.getNextNeedStar = function () {
                            return this.getInt('nextNeedStar');
                        }),
                        (t.prototype.getLoseStar = function () {
                            return this.getInt('loseStar');
                        }),
                        (t.prototype.getDailyReward = function () {
                            return this.getString('dailyReward');
                        }),
                        (t.prototype.getSeasonReward = function () {
                            return this.getString('seasonReward');
                        }),
                        (t.prototype.getFinishRank = function () {
                            return this.getInt('finishRank');
                        }),
                        (t.prototype.getRoundWinReward = function () {
                            return this.getString('win');
                        }),
                        (t.prototype.getRoundDogfallReward = function () {
                            return this.getString('draw');
                        }),
                        t
                    );
                })(o.default);
                (i.RankSetDataRow = a), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        RcmdGameDataAdapter: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'd2dbaq0HhFI85im8AS88l2Z', 'RcmdGameDataAdapter'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../MGBSdkInit'),
                    n = e('../../../Logic/MoneySystem'),
                    a = e('./RcmdGameData'),
                    r = (function () {
                        function e() {
                            (this.mRcmdDest = null), o.default.initMGBSdk(null);
                        }
                        return (
                            (e.prototype.getRcmdGameData = function (e, t) {
                                this.fetchData(e, !0, t);
                            }),
                            (e.prototype.fetchData = function (e, t, i) {
                                var o = this;
                                new MGB.MGBRcmd4ScoreWall(e, {
                                    onReady: function (e) {
                                        (o.mRcmdDest = e), i && i(o.getAllGameInfo());
                                    },
                                    onFailed: function () {
                                        t && (MGB.MGBRcmd4ScoreWall.fillCache(o.prepareScoreWallData()), o.fetchData(e, !1, i));
                                    },
                                });
                            }),
                            (e.prototype.getAllGameInfo = function () {
                                if (!this.mRcmdDest) return null;
                                var e = this.mRcmdDest.getSize();
                                if (e <= 0) return null;
                                for (var t = new Array(), i = 0; i < e; ++i) {
                                    var o = this.mRcmdDest.getGameInfo(i);
                                    if (o) {
                                        var n = new a.default(o);
                                        t.push(n);
                                    }
                                }
                                return t;
                            }),
                            (e.prototype.jumpTo = function (e, t) {
                                if (e && this.mRcmdDest) {
                                    var i = this.mRcmdDest.getSize();
                                    if (!(i <= 0))
                                        for (var o = 0; o < i; ++o) {
                                            var n = this.mRcmdDest.getGameInfo(o);
                                            if (n) {
                                                var a = n.getGameId();
                                                if (a && a == e.getGameId()) {
                                                    if (t) for (var r in n.mapRewards) this.addReward(r, n.mapRewards[r]), e.recordTrialInfo();
                                                    this.mRcmdDest.jump(o);
                                                }
                                            }
                                        }
                                }
                            }),
                            (e.prototype.addReward = function (e, t) {
                                switch (e) {
                                    case 'gold':
                                        n.MoneySystem.increaseGold(t);
                                        break;
                                    case 'diamond':
                                        n.MoneySystem.increaseDiamond(t);
                                }
                            }),
                            (e.prototype.prepareScoreWallData = function () {
                                return '{            "games": [                {                    "name": "zkxxx",                    "gameid_wx": "wx3ab3658aab34d7db",                    "gameid_qq": "3511",                    "icon": "https://piano-weixin-game.cmcm.com/pianotiles2/cfg/game_rcmd/1001/brickes.png",                    "big_img": "",                    "title": "砖块消消消",                    "describe": "超魔性弹球打砖块游戏",                    "describe2": "奖励5钻石",                    "rewards": {                        "diamond":5                    }                },                {                    "name": "twdx",                    "gameid_wx": "wxf976a9e8c25dedf2",                    "gameid_qq": "3091",                    "icon": "https://piano-weixin-game.cmcm.com/pianotiles2/cfg/game_rcmd/1001/dancinglineA.png",                    "big_img": "https://piano-weixin-game.cmcm.com/pianotiles2/cfg/game_rcmd/1001/twdx_big_img.png",                    "title": "跳舞的线",                    "describe": "魔性又虐手的音乐游戏",                    "describe2": "奖励5钻石",                    "rewards": {                        "diamond":5                    }                }            ],            "posconfig": [                {                    "posid": 1001131,                    "start_pos": 0                }            ]        }';
                            }),
                            e
                        );
                    })();
                (i.default = r), cc._RF.pop();
            },
            {
                '../../../Logic/MoneySystem': 'MoneySystem',
                '../../MGBSdkInit': 'MGBSdkInit',
                './RcmdGameData': 'RcmdGameData',
            },
        ],
        RcmdGameData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'ae322h8fsVGc52l1sr1N508', 'RcmdGameData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../Network/Protocol/StorageUtil'),
                    n = e('../../../../util/TimeUtil'),
                    a = (function () {
                        function e(e) {
                            (this.mRawData = null), (this.mKeyBase = 'trial_key_'), (this.mRawData = e);
                        }
                        return (
                            (e.prototype.getGameId = function () {
                                return this.mRawData ? this.mRawData.getGameId() : null;
                            }),
                            (e.prototype.getRewardText = function () {
                                if (!this.mRawData || !this.mRawData.mapRewards) return null;
                                var e = null,
                                    t = null;
                                for (var i in this.mRawData.mapRewards) {
                                    (e = i), (t = this.mRawData.mapRewards[i]);
                                    break;
                                }
                                return 'gold' == e ? '恭喜获得金币*' + t : 'diamond' == e ? '恭喜获得钻石*' + t : null;
                            }),
                            (e.prototype.getKey = function () {
                                var e = this.getGameId();
                                return e ? this.mKeyBase + e : null;
                            }),
                            (e.prototype.isToadyFristTrial = function () {
                                var e = this.getKey();
                                if (!e) return !0;
                                var t = parseInt(o.default.read(e));
                                return n.default.formatDate(t) != n.default.getTodayFormatDate();
                            }),
                            (e.prototype.recordTrialInfo = function () {
                                var e = this.getKey();
                                if (e) {
                                    var t = new Date().getTime();
                                    o.default.save(e, t + '');
                                }
                            }),
                            e
                        );
                    })();
                (i.default = a), cc._RF.pop();
            },
            {
                '../../../../util/TimeUtil': 'TimeUtil',
                '../../../Network/Protocol/StorageUtil': 'StorageUtil',
            },
        ],
        Recod: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '816e97a1EVPFJaK+rEuz33/', 'Recod'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = function () {};
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        ReliveFreeDialogTipDialog: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '25747oHLAdBEJXe4/WbnX8u', 'ReliveFreeDialogTipDialog'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o,
                    n,
                    a = e('../UI/GameEntraScene/BasicTouchEvent'),
                    r = e('../Logic/I18nManager'),
                    s = e('../keypad/KeypadNavigator'),
                    c = cc._decorator,
                    l = c.ccclass,
                    u = c.property;
                ((n = o = i.DIALOG_TYPE || (i.DIALOG_TYPE = {}))[(n.RELIVE = 0)] = 'RELIVE'), (n[(n.CONTRA = 1)] = 'CONTRA');
                var d = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.onLoad = function () {
                            var e = this;
                            (this.mBtnClickCallback = new a.default(function () {
                                e.mBtnCallback && e.mBtnCallback(), s.default.getInstance().popDialog(e.node, 'FirstFailTipDialog');
                            })),
                                this.mBtn.node.on(cc.Node.EventType.TOUCH_END, this.mBtnClickCallback.click, this.mBtnClickCallback),
                                this.node.on(
                                    cc.Node.EventType.TOUCH_START,
                                    function (e) {
                                        e.stopPropagation();
                                    },
                                    this,
                                ),
                                s.default.getInstance().pushDialog(this.node, 'FirstFailTipDialog');
                        }),
                        (t.prototype.start = function () {
                            this.mContentPanel.getComponent(cc.Animation).play('avator_pop_out');
                        }),
                        (t.prototype.setType = function (e) {
                            (this.type = e) == o.RELIVE ? ((this.mContraContentLabel.node.active = !1), (this.mReliveContentLabel.node.active = !0), (this.mTopPeopleIcon.node.active = !1), r.default.getInstance().isEnglish() ? (this.mBtnLabel.string = 'Revive') : (this.mBtnLabel.string = '复活')) : e == o.CONTRA && ((this.mContraContentLabel.node.active = !0), (this.mReliveContentLabel.node.active = !1), (this.mTopPeopleIcon.node.active = !0), r.default.getInstance().isEnglish() ? (this.mBtnLabel.string = 'Ok') : (this.mBtnLabel.string = '我知道了'));
                        }),
                        (t.prototype.setBtnClickCallback = function (e) {
                            this.mBtnCallback = e;
                        }),
                        __decorate([u(cc.Node)], t.prototype, 'mContentPanel', void 0),
                        __decorate([u(cc.Sprite)], t.prototype, 'mTopPeopleIcon', void 0),
                        __decorate([u(cc.Label)], t.prototype, 'mReliveContentLabel', void 0),
                        __decorate([u(cc.Label)], t.prototype, 'mContraContentLabel', void 0),
                        __decorate([u(cc.Button)], t.prototype, 'mBtn', void 0),
                        __decorate([u(cc.Label)], t.prototype, 'mBtnLabel', void 0),
                        (t = __decorate([l], t))
                    );
                })(cc.Component);
                (i.default = d), cc._RF.pop();
            },
            {
                '../Logic/I18nManager': 'I18nManager',
                '../UI/GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
                '../keypad/KeypadNavigator': 'KeypadNavigator',
            },
        ],
        ReliveInterface: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '7e499vgFGlGhofp8biiYpsK', 'ReliveInterface'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    cc._RF.pop();
            },
            {},
        ],
        ReliveNoShare: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'b59baKn2YFLOoSOI6rxPuh4', 'ReliveNoShare'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../base/G'),
                    n = e('./ReviveController'),
                    a = e('../UI/GameEntraScene/BasicTouchEvent'),
                    r = e('../reward/RewardManager'),
                    s = e('../../base/Log'),
                    c = e('../Logic/MoneySystem'),
                    l = e('../../infoc/m_p2_PData_Dia'),
                    u = e('./QQRedPacketRelive'),
                    d = e('../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    p = e('../../../modules/MGAppShare/scripts/MGShareUtil'),
                    h = e('../../util/PU'),
                    f = e('../../../modules/MGAdv/scripts/Logic/MGAdvEntrance'),
                    m = e('../../../modules/MGAdv/scripts/Logic/MGAdvDefine'),
                    g = e('../UI/GameEntraScene/ToastPrefab'),
                    _ = cc.isValid,
                    y = e('../../upgrade/BannerDelayShowToggle'),
                    S = e('../../upgrade/ToggleBean'),
                    v = e('../../util/SUtil'),
                    I = cc._decorator,
                    T = I.ccclass,
                    C = I.property,
                    E = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mLayout = null), (e.noShareLayout = null), (e.bgNode = null), (e.relive_share_count_label = null), (e.share_dianmod_num_icon = null), (e.challengeRelivePrefab = null), (e.qqRedPacketRelivePrefab = null), (e.relive_content_layout = null), (e.toast_layout = null), (e.toastPrefab = null), (e.wait_fd_label = null), (e.fd_tips_layout = null), (e.skip_layout = null), (e.share_relive_btn = null), (e.continueLabel = null), (e.mShareTime = -1), (e.firstShareTime = 0), (e.mCloseBtnClickCallback = null), (e.mDiamondReliveBtnClickCallback = null), (e.mCanGainDiamondNumIcon = ['/gameImage/dianmond_triangle_icon6', '/gameImage/dianmond_triangle_icon12', '/gameImage/dianmond_triangle_icon18', '/gameImage/dianmond_triangle_icon24', '/gameImage/dianmond_triangle_icon30']), (e.mReviveController = null), (e.mShareLooper = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.setReviveController = function (e) {
                                this.mReviveController = e;
                            }),
                            (e.prototype.setReliveMode = function (e) {
                                switch (e) {
                                    case n.ReliveMode.NORMAL:
                                        this.updateNormalMode();
                                        break;
                                    case n.ReliveMode.QQ_RED_PACK:
                                        this.updateQQRedPacketMode();
                                }
                            }),
                            (e.prototype.updateNormalMode = function () {
                                this.mQQRelive = null;
                            }),
                            (e.prototype.updateQQRedPacketMode = function () {
                                var e = cc.instantiate(this.qqRedPacketRelivePrefab);
                                e && ((this.mQQRelive = e.getComponent(u.default)), this.mQQRelive.attatchToRootLayout(this.relive_content_layout));
                            }),
                            (e.prototype.setReliveCallback = function (e) {
                                this.mReliveCallBack = e;
                            }),
                            (e.prototype.setCancelGameCallback = function (e) {
                                this.mCancelGameCallBack = e;
                            }),
                            (e.prototype.setReliveScoreDataCallback = function (e) {
                                this.mReliveScoreDataCallback = e;
                            }),
                            (e.prototype.onLoad = function () {
                                this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                }),
                                    this.initEvent(),
                                    this.mReviveController.saveTodayRecordInfo(),
                                    this.setInviteBtnLabelQQ(),
                                    this.showBannerAd();
                            }),
                            (e.prototype.showBannerAd = function () {
                                var o = this;
                                if (_(this, !0) && !h.default.isWeb()) {
                                    var e = void 0,
                                        t = void 0,
                                        i = void 0;
                                    if (h.default.isQQ()) i = t = e = 0;
                                    else if (h.default.isWeiXin()) {
                                        var n = wx.getSystemInfoSync();
                                        (e = n.screenWidth), (t = n.screenHeight / 2 + ((20 - v.SUtil.ins().getChlidViewPositionInScreen(this.skip_layout.node, this.node).y - this.getPopupUpByShowbanner()) * n.screenHeight) / v.SUtil.ins().mScreenHeight), (i = 0);
                                    }
                                    f.MGAdv.loadBanner(
                                        e,
                                        i,
                                        t,
                                        function (e, t) {
                                            if (_(o, !0)) {
                                                if (e == m.ADStat.LOAD_SUCCESS) {
                                                    var i = y.default.getBannerDelayTime(S.ToggleKey.BANNER_DELAY_RELIVE_PAGE);
                                                    o.scheduleOnce(function () {
                                                        cc.isValid(o, !0) &&
                                                            f.MGAdv.showBanner(m.ADScene.RELIVE_POPUP, function (e, t, i) {
                                                                o.adapterUIShowBanner();
                                                            });
                                                    }, i.normalDelayTime / 1e3);
                                                }
                                            } else f.MGAdv.hideBanner(m.ADScene.RELIVE_POPUP), f.MGAdv.destroyBanner(m.ADScene.RELIVE_POPUP);
                                        },
                                        m.ADScene.RELIVE_POPUP,
                                    );
                                }
                            }),
                            (e.prototype.destoryBannerAd = function () {
                                f.MGAdv.hideBanner(m.ADScene.RELIVE_POPUP), f.MGAdv.destroyBanner(m.ADScene.RELIVE_POPUP);
                            }),
                            (e.prototype.setInviteBtnLabelQQ = function () {
                                h.default.isQQ() ? ((this.mInviteBtnLabel.string = '分享到群，立即复活'), (this.relive_share_count_label.node.active = !1)) : (this.mInviteBtnLabel.string = this.mReviveController.getReliveBtnText());
                            }),
                            (e.prototype.initEvent = function () {
                                var e = this;
                                (this.mCloseBtnClickCallback = new a.default(function () {
                                    e.closeBtnClick();
                                })),
                                    this.skip_layout.node.on(cc.Node.EventType.TOUCH_END, this.mCloseBtnClickCallback.click, this.mCloseBtnClickCallback),
                                    (this.mDiamondReliveBtnClickCallback = new a.default(function () {
                                        e.shareReliveClick();
                                    })),
                                    this.share_relive_btn.node.on(cc.Node.EventType.TOUCH_END, this.mDiamondReliveBtnClickCallback.click, this.mDiamondReliveBtnClickCallback),
                                    this.continueLabel.node.on(cc.Node.EventType.TOUCH_END, this.mDiamondReliveBtnClickCallback.click, this.mDiamondReliveBtnClickCallback);
                            }),
                            (e.prototype.start = function () {
                                this.mLayout.getComponent(cc.Animation).play('relive_no_share_pop_up'), this.initView();
                            }),
                            (e.prototype.shareLooperCallback = function (e) {
                                if (e) {
                                    for (var t = [], i = 0, o = 0; o < e.length; o++) {
                                        var n = e[o];
                                        n.isConsume || ((i += n.diamondNum), t.push(n));
                                    }
                                    0 < i && (this.consumeInviteList(t, i), this.onFdInviteSuccess(i));
                                }
                            }),
                            (e.prototype.consumeInviteList = function (e, t) {
                                if (e && 0 < e.length) {
                                    for (var i = 0; i < e.length; i++) {
                                        var o = e[i];
                                        o && r.RewardMgr.Ins().cosumeInviteRewardInfo(o);
                                    }
                                    c.MoneySystem.increaseDiamond(t), l.default.report(t, l.default.SOURCE_INVITER_GET_REWARD, l.default.ACTION_GET_DIAMOND);
                                }
                            }),
                            (e.prototype.update = function (e) {}),
                            (e.prototype.onDestroy = function () {
                                this.destoryBannerAd(), this.mShareLooper && this.mShareLooper.release(), this.pauseSchedule();
                            }),
                            (e.prototype.initView = function () {
                                this.wait_fd_label.node.active = !1;
                                var e = r.RewardMgr.Ins().getCanAlsoInviteNumToday();
                                (this.relive_share_count_label.string = cc.js.formatStr(this.mReviveController.getReliveTipsText(), e)), (this.fd_tips_layout.node.active = !1), (this.share_dianmod_num_icon.node.active = !1);
                            }),
                            (e.prototype.onFdInviteSuccess = function (e) {
                                s.default.e('[ShareInvite]1 onFdInviteSuccess diaCount= ' + e), s.default.e('[ShareInvite]2 onFdInviteSuccess diaCount= ' + e), this.pauseSchedule(), this.reliveByShare(e);
                            }),
                            (e.prototype.reliveByShare = function (e) {
                                var t = this;
                                this.hideReliveLayout();
                                var i = this.mReviveController.getReviveDiamondCost();
                                this.showToastTips(cc.js.formatStr('好友已点入，奖励%s钻石\n\r本次复活消耗%s钻石', e, i), function () {
                                    t.reliveGame(), t.mReviveController.reviveByDiamond(i);
                                });
                            }),
                            (e.prototype.hideReliveLayout = function () {
                                (this.noShareLayout.active = !1), (this.skip_layout.node.active = !1), (this.bgNode.active = !1);
                            }),
                            (e.prototype.showToastTips = function (e, t) {
                                var i = cc.instantiate(this.toastPrefab);
                                i.getComponent(g.default).showTips(e, function () {
                                    i.destroy(), t && t();
                                }),
                                    this.toast_layout.node.addChild(i);
                            }),
                            (e.prototype.initCallback = function () {
                                var t = this;
                                this.callback = function () {
                                    var e = t.wait_fd_label.string;
                                    t.wait_fd_label.string = '已发送，好友点入即可助力...' == e ? '已发送，好友点入即可助力.' : e + '.';
                                };
                            }),
                            (e.prototype.pauseSchedule = function () {
                                this.callback && this.unschedule(this.callback);
                            }),
                            (e.prototype.startSchedule = function () {
                                this.callback || this.initCallback(), this.schedule(this.callback, 1);
                            }),
                            (e.prototype.closeBtnClick = function () {
                                this.pauseSchedule(), this.toGameOverScene(), console.log('closeBtnClick');
                            }),
                            (e.prototype.shareReliveClick = function () {
                                var t = this;
                                -1 == this.mShareTime && (this.mShareTime = new Date().getTime()),
                                    d.MGUser.getUserLoginInfo({
                                        complete: function (e) {
                                            console.log('[ReliveNoShare] shareForReliveFdHelp getPlayerInfo (playerInfo == null) = ' + (null == e)), e && (p.MGShareUtils.shareForReliveFdHelp(e.playerId, function (e) {}), (t.wait_fd_label.node.active = !0), t.startSchedule());
                                        },
                                    });
                            }),
                            (e.prototype.toGameOverScene = function () {
                                console.log('toGameOverScene'), this.mCancelGameCallBack && this.mCancelGameCallBack(), o.G.Ap.state.gameOver(), o.G.Ap.presenter.enterScene(o.G.GAME_OVER_SCENE_NAME, o.G.Ap.state.mission.musicId);
                            }),
                            (e.prototype.reliveGame = function () {
                                this.mReliveCallBack && (this.destoryBannerAd(), this.mReliveCallBack());
                            }),
                            (e.prototype.getPopupUpByShowbanner = function () {
                                return 100;
                            }),
                            (e.prototype.adapterUIShowBanner = function () {
                                h.default.isWeiXin() && ((this.noShareLayout.y = this.noShareLayout.y + this.getPopupUpByShowbanner()), (this.skip_layout.node.y = this.skip_layout.node.y + this.getPopupUpByShowbanner()));
                            }),
                            __decorate([C(cc.Node)], e.prototype, 'mLayout', void 0),
                            __decorate([C(cc.Node)], e.prototype, 'noShareLayout', void 0),
                            __decorate([C(cc.Node)], e.prototype, 'bgNode', void 0),
                            __decorate([C(cc.Label)], e.prototype, 'mInviteBtnLabel', void 0),
                            __decorate([C(cc.Label)], e.prototype, 'relive_share_count_label', void 0),
                            __decorate([C(cc.Sprite)], e.prototype, 'share_dianmod_num_icon', void 0),
                            __decorate([C(cc.Prefab)], e.prototype, 'challengeRelivePrefab', void 0),
                            __decorate([C(cc.Prefab)], e.prototype, 'qqRedPacketRelivePrefab', void 0),
                            __decorate([C(cc.Node)], e.prototype, 'relive_content_layout', void 0),
                            __decorate([C(cc.Layout)], e.prototype, 'toast_layout', void 0),
                            __decorate([C(cc.Prefab)], e.prototype, 'toastPrefab', void 0),
                            __decorate([C(cc.Label)], e.prototype, 'wait_fd_label', void 0),
                            __decorate([C(cc.Layout)], e.prototype, 'fd_tips_layout', void 0),
                            __decorate([C(cc.Layout)], e.prototype, 'skip_layout', void 0),
                            __decorate([C(cc.Button)], e.prototype, 'share_relive_btn', void 0),
                            __decorate([C(cc.Label)], e.prototype, 'continueLabel', void 0),
                            (e = __decorate([T], e))
                        );
                    })(cc.Component);
                (i.default = E), cc._RF.pop();
            },
            {
                '../../../modules/MGAdv/scripts/Logic/MGAdvDefine': 'MGAdvDefine',
                '../../../modules/MGAdv/scripts/Logic/MGAdvEntrance': 'MGAdvEntrance',
                '../../../modules/MGAppShare/scripts/MGShareUtil': 'MGShareUtil',
                '../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../base/G': 'G',
                '../../base/Log': 'Log',
                '../../infoc/m_p2_PData_Dia': 'm_p2_PData_Dia',
                '../../upgrade/BannerDelayShowToggle': 'BannerDelayShowToggle',
                '../../upgrade/ToggleBean': 'ToggleBean',
                '../../util/PU': 'PU',
                '../../util/SUtil': 'SUtil',
                '../Logic/MoneySystem': 'MoneySystem',
                '../UI/GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
                '../UI/GameEntraScene/ToastPrefab': 'ToastPrefab',
                '../reward/RewardManager': 'RewardManager',
                './QQRedPacketRelive': 'QQRedPacketRelive',
                './ReviveController': 'ReviveController',
            },
        ],
        ReliveScoreData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'c1d40agNMxCSZeNAvv4yzgf', 'ReliveScoreData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o,
                    n,
                    a = function () {
                        this.crownType = o.CrownType_NONE;
                    };
                (i.default = a), ((n = o = i.CrownType || (i.CrownType = {}))[(n.CrownType_NONE = 0)] = 'CrownType_NONE'), (n[(n.CrownType_ONE_STAR = 1)] = 'CrownType_ONE_STAR'), (n[(n.CrownType_TWO_STAR = 2)] = 'CrownType_TWO_STAR'), (n[(n.CrownType_THREE_STAR = 3)] = 'CrownType_THREE_STAR'), (n[(n.CrownType_ONE_CROWN = 4)] = 'CrownType_ONE_CROWN'), (n[(n.CrownType_TWO_CROWN = 5)] = 'CrownType_TWO_CROWN'), (n[(n.CrownType_THREE_CROWN = 6)] = 'CrownType_THREE_CROWN'), cc._RF.pop();
            },
            {},
        ],
        ReliveTotal: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'a7aceJslH5C0KAHPD1stTvM', 'ReliveTotal'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../base/G'),
                    r = e('./ReviveController'),
                    n = e('../UI/GameEntraScene/BasicTouchEvent'),
                    a = e('../reward/RewardManager'),
                    s = e('../UI/GameEntraScene/ToastPrefab'),
                    c = e('../Logic/MoneySystem'),
                    l = e('../../infoc/m_p2_PData_Dia'),
                    u = e('./QQRedPacketRelive'),
                    d = e('../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    p = e('../../../modules/MGAppShare/scripts/MGShareUtil'),
                    h = e('../UI/rank/RankRevivePageContainer'),
                    f = e('../../base/Log'),
                    m = e('../../util/PU'),
                    g = e('../../../modules/MGAdv/scripts/Logic/MGAdvEntrance'),
                    _ = e('../../../modules/MGAdv/scripts/Logic/MGAdvDefine'),
                    y = e('../Network/Protocol/StorageUtil'),
                    S = e('../../config/LSKey'),
                    v = e('../../util/StringUtil'),
                    I = e('../../util/SUtil'),
                    T = e('../UI/GameEntraScene/PrefabMgr'),
                    C = e('../../property/PropertyDefines'),
                    E = e('../UI/GameEntraScene/ImgCache'),
                    A = e('../../upgrade/BannerDelayShowToggle'),
                    P = e('../../upgrade/ToggleBean'),
                    k = e('../Logic/I18nManager'),
                    M = e('../keypad/KeypadNavigator'),
                    L = cc._decorator,
                    b = L.ccclass,
                    N = L.property,
                    R = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mLayout = null), (e.bgNode = null), (e.relive_layout = null), (e.relive_content_layout = null), (e.challengeRelivePrefab = null), (e.qqRedPacketRelivePrefab = null), (e.relive_diamond_count_label = null), (e.relive_share_count_label = null), (e.mHelpReliveBtnLabel = null), (e.share_dianmod_num_icon = null), (e.toast_layout = null), (e.toastPrefab = null), (e.wait_fd_label = null), (e.fd_tips_layout = null), (e.skip_layout = null), (e.relive_diamond_btn = null), (e.relive_share_btn = null), (e.relive_video_btn = null), (e.relive_video_props_btn = null), (e.relive_video_props_tip = null), (e.mCanGainDiamondNumIcon = ['/gameImage/dianmond_triangle_icon6', '/gameImage/dianmond_triangle_icon12', '/gameImage/dianmond_triangle_icon18', '/gameImage/dianmond_triangle_icon24', '/gameImage/dianmond_triangle_icon30']), (e.mCloseBtnClickCallback = null), (e.mDiamondReliveBtnClickCallback = null), (e.mShareReliveBtnClickCallback = null), (e.mVideoReliveBtnClickCallback = null), (e.mVideoPropsReliveBtnClickCallback = null), (e.mReviveController = null), (e.mReliveType = r.default.RESULT_REVIVE_SHARE_AND_DIAMOND), (e.mReliveWithPropType = C.PROPERTYTYPE.GAME_DASH), (e.firstShareTime = 0), (e.destoryBanner = !1), (e.showByFdInvite = !1), (e.mShareTime = -1), (e.mFirstFDIntoTime = -1), (e.mShareLooper = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.setReliveWithPropType = function (e) {
                                this.mReliveWithPropType = e;
                            }),
                            (e.prototype.setReliveType = function (e) {
                                this.mReliveType = e;
                            }),
                            (e.prototype.setReliveMode = function (e) {
                                switch (e) {
                                    case r.ReliveMode.NORMAL:
                                        this.updateNormalMode();
                                        break;
                                    case r.ReliveMode.QQ_RED_PACK:
                                        this.updateQQRedPacketMode();
                                }
                            }),
                            (e.prototype.updateNormalMode = function () {
                                this.mQQRelive = void 0;
                            }),
                            (e.prototype.updateQQRedPacketMode = function () {
                                var e = cc.instantiate(this.qqRedPacketRelivePrefab);
                                e && ((this.mQQRelive = e.getComponent(u.default)), this.mQQRelive.attatchToRootLayout(this.relive_content_layout));
                            }),
                            (e.prototype.setReviveController = function (e) {
                                this.mReviveController = e;
                            }),
                            (e.prototype.setReliveCallback = function (e) {
                                this.mReliveCallBack = e;
                            }),
                            (e.prototype.setCancelGameCallback = function (e) {
                                this.mCancelGameCallBack = e;
                            }),
                            (e.prototype.setReliveScoreDataCallback = function (e) {
                                this.mReliveScoreDataCallback = e;
                            }),
                            (e.prototype.setShowByFdInvite = function (e, t) {
                                (this.showByFdInvite = e), (this.showByFdInviteDiaCount = t);
                            }),
                            (e.prototype.onLoad = function () {
                                (console.error('[ShareInvite] shareTotal  onLoad  '),
                                this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                }),
                                this.mQQRelive) || (f.default.l('[ReliveTotal] onLoad'), this.relive_content_layout.addComponent(h.default).initData(this.mReviveController, this.mReliveScoreDataCallback));
                                this.initWidgt(), this.initEvent(), this.mReviveController.saveTodayRecordInfo(this.mReliveType), this.setHelpReliveBtnLabelForQQ(), this.reportVideoBtn(), M.default.getInstance().pushDialog(this.node), g.MGAdv.gameplayStop(), g.MGAdv.displayAD(!0);
                            }),
                            (e.prototype.showBannerAd = function () {
                                var a = this;
                                this.scheduleOnce(function () {
                                    if (g.MGAdv.isBannerCached(_.ADScene.RELIVE_POPUP))
                                        if (a.destoryBanner) a.destoryBannerAd();
                                        else {
                                            var e = A.default.getBannerDelayTime(P.ToggleKey.BANNER_DELAY_RELIVE_PAGE);
                                            a.scheduleOnce(function () {
                                                cc.isValid(a, !0) &&
                                                    g.MGAdv.showBanner(_.ADScene.RELIVE_POPUP, function () {
                                                        a.adapterUIShowBanner();
                                                    });
                                            }, e.normalDelayTime / 1e3);
                                        }
                                    else if (!m.default.isWeb()) {
                                        var t = void 0,
                                            i = void 0,
                                            o = void 0;
                                        if (m.default.isQQ()) o = i = t = 0;
                                        else if (m.default.isWeiXin()) {
                                            var n = wx.getSystemInfoSync();
                                            (t = n.screenWidth), (i = 0), (o = n.screenHeight / 2 + ((20 - I.SUtil.ins().getChlidViewPositionInScreen(a.skip_layout.node, a.node).y - a.getPopupUpByShowbanner()) * n.screenHeight) / I.SUtil.ins().mScreenHeight);
                                        }
                                        g.MGAdv.loadBanner(
                                            t,
                                            i,
                                            o,
                                            function (e, t) {
                                                if (e == _.ADStat.LOAD_SUCCESS)
                                                    if (a.destoryBanner) a.destoryBannerAd();
                                                    else {
                                                        var i = A.default.getBannerDelayTime(P.ToggleKey.BANNER_DELAY_RELIVE_PAGE);
                                                        a.scheduleOnce(function () {
                                                            cc.isValid(a, !0) &&
                                                                g.MGAdv.showBanner(_.ADScene.RELIVE_POPUP, function (e, t, i) {
                                                                    a.adapterUIShowBanner();
                                                                });
                                                        }, i.normalDelayTime / 1e3);
                                                    }
                                            },
                                            _.ADScene.RELIVE_POPUP,
                                        );
                                    }
                                }, 0.2);
                            }),
                            (e.prototype.destoryBannerAd = function () {
                                (this.destoryBanner = !0), g.MGAdv.hideBanner(_.ADScene.RELIVE_POPUP), g.MGAdv.destroyBanner(_.ADScene.RELIVE_POPUP), g.MGAdv.displayAD(!1);
                            }),
                            (e.prototype.setHelpReliveBtnLabelForQQ = function () {
                                m.default.isQQ() ? ((this.mHelpReliveBtnLabel.string = '分享到群，立即复活'), (this.relive_share_count_label.node.active = !1)) : (this.mHelpReliveBtnLabel.string = this.mReviveController.getReliveBtnText());
                            }),
                            (e.prototype.initWidgt = function () {
                                var e = this.relive_diamond_btn.getComponent(cc.Widget);
                                e.isAlignBottom = !0;
                                var t = this.relive_share_btn.getComponent(cc.Widget);
                                t.isAlignBottom = !0;
                                var i = this.relive_video_btn.getComponent(cc.Widget);
                                i.isAlignBottom = !0;
                                var o = this.relive_video_props_btn.getComponent(cc.Widget);
                                o.isAlignBottom = !0;
                                var n = this.relive_video_props_tip.getComponent(cc.Widget);
                                switch (((n.isAlignBottom = !0), this.mReliveType)) {
                                    case r.default.RESULT_REVIVE_ONLY_SHARE:
                                        break;
                                    case r.default.RESULT_REVIVE_SHARE_AND_DIAMOND:
                                        (this.relive_diamond_btn.node.active = !0), (this.relive_share_btn.node.active = !0), (this.relive_video_btn.node.active = !1), (this.relive_video_props_btn.node.active = !1), (this.relive_video_props_tip.node.active = !1), (t.bottom = 176), (e.bottom = 56);
                                        break;
                                    case r.default.RESULI_RELIVE_CM:
                                    case r.default.RESULT_REVIVE_VIDEO_AND_DIAMOND:
                                        (this.relive_diamond_btn.node.active = !0), (this.relive_share_btn.node.active = !1), (this.relive_video_btn.node.active = !0), (this.relive_video_props_btn.node.active = !1), (this.relive_video_props_tip.node.active = !1), (i.bottom = 176), (e.bottom = 56);
                                        break;
                                    case r.default.RESULT_REVIVE_VIDEO_AND_PROPS_AND_DIAMOND:
                                        (this.relive_diamond_btn.node.active = !0), (this.relive_share_btn.node.active = !1), (this.relive_video_btn.node.active = !1), (this.relive_video_props_btn.node.active = !0), (this.relive_video_props_tip.node.active = !0), (n.bottom = 250), (o.bottom = 176), (e.bottom = 56);
                                        var a = this.relive_video_props_btn.node.getChildByName('relive_props_label').getComponent(cc.Label);
                                        this.mReliveWithPropType == C.PROPERTYTYPE.GAME_DASH ? (k.default.getInstance().isEnglish() ? ((a.string = 'Auto tap props'), E.default.get2('static_res/gameover/relive_by_video_with_dash_en', this.relive_video_props_tip)) : ((a.string = '送冲刺道具'), E.default.get2('static_res/gameover/relive_by_video_with_dash', this.relive_video_props_tip))) : this.mReliveWithPropType == C.PROPERTYTYPE.GAME_SHIELD ? (k.default.getInstance().isEnglish() ? ((a.string = 'Shield props'), E.default.get2('static_res/gameover/relive_by_video_with_sheild_en', this.relive_video_props_tip)) : ((a.string = '送护盾道具'), E.default.get2('static_res/gameover/relive_by_video_with_sheild', this.relive_video_props_tip))) : (a.string = '');
                                        break;
                                    case r.default.RESULT_REVIVE_SHARE_AND_VIDEO:
                                        (this.relive_diamond_btn.node.active = !1), (this.relive_share_btn.node.active = !0), (this.relive_video_btn.node.active = !0), (this.relive_video_props_btn.node.active = !1), (this.relive_video_props_tip.node.active = !1), (t.bottom = 176), (i.bottom = 56);
                                }
                            }),
                            (e.prototype.getVideoScene = function () {
                                var e = this.mReviveController.getReliveMode(),
                                    t = _.ADScene.RELIVE_POPUP;
                                return this.mReliveType == r.default.RESULT_REVIVE_VIDEO_AND_PROPS_AND_DIAMOND && (e == r.ReliveMode.NORMAL ? (this.mReliveWithPropType == C.PROPERTYTYPE.GAME_DASH ? (t = _.ADScene.SOURCE_RELIVE_WITH_DASH_NORMAL) : this.mReliveWithPropType == C.PROPERTYTYPE.GAME_SHIELD && (t = _.ADScene.SOURCE_RELIVE_WITH_SHEILD_NORMAL)) : e == r.ReliveMode.CHALLENGE && (this.mReliveWithPropType == C.PROPERTYTYPE.GAME_DASH ? (t = _.ADScene.SOURCE_RELIVE_WITH_DASH_CHALLENG) : this.mReliveWithPropType == C.PROPERTYTYPE.GAME_SHIELD && (t = _.ADScene.SOURCE_RELIVE_WITH_SHEILD_CHALLENG))), t;
                            }),
                            (e.prototype.reportVideoBtn = function () {
                                var e = this.mReviveController.getReliveMode(),
                                    t = this.getVideoScene();
                                f.default.i('YSY_DEBUG', 'action; mode = ' + e, 'action; type = ' + this.mReliveType, 'action; scene = ' + t);
                            }),
                            (e.prototype.initEvent = function () {
                                var e = this;
                                (this.mCloseBtnClickCallback = new n.default(function () {
                                    e.closeBtnClick();
                                })),
                                    this.skip_layout.node.on(cc.Node.EventType.TOUCH_END, this.mCloseBtnClickCallback.click, this.mCloseBtnClickCallback),
                                    (this.mDiamondReliveBtnClickCallback = new n.default(function () {
                                        e.diamondReliveClick();
                                    })),
                                    this.relive_diamond_btn.node.on(cc.Node.EventType.TOUCH_END, this.mDiamondReliveBtnClickCallback.click, this.mDiamondReliveBtnClickCallback),
                                    (this.mShareReliveBtnClickCallback = new n.default(function () {
                                        e.shareReliveClick();
                                    })),
                                    this.relive_share_btn.node.on(cc.Node.EventType.TOUCH_END, this.mShareReliveBtnClickCallback.click, this.mShareReliveBtnClickCallback),
                                    (this.mVideoReliveBtnClickCallback = new n.default(function () {
                                        e.videoReliveClick();
                                    })),
                                    this.relive_video_btn.node.on(cc.Node.EventType.TOUCH_END, this.mVideoReliveBtnClickCallback.click, this.mVideoReliveBtnClickCallback),
                                    (this.mVideoPropsReliveBtnClickCallback = new n.default(function () {
                                        e.videoReliveClick(!0);
                                    })),
                                    this.relive_video_props_btn.node.on(cc.Node.EventType.TOUCH_END, this.mVideoPropsReliveBtnClickCallback.click, this.mVideoPropsReliveBtnClickCallback);
                            }),
                            (e.prototype.start = function () {
                                var e = this;
                                if ((console.error('[ShareInvite] shareTotal  start  '), this.showByFdInvite)) (this.relive_layout.node.x = 0), (this.relive_layout.node.y = 0), (this.skip_layout.node.x = 0), (this.skip_layout.node.y = -415), this.showToastAward(this.showByFdInviteDiaCount);
                                else {
                                    var t = this.mLayout.getComponent(cc.Animation);
                                    t.once('finished', function () {
                                        e.showBannerAd();
                                    }),
                                        I.SUtil.ins().isPuTong() ? t.play('relive_total_popup_with_ad') : t.play('relive_total_popup');
                                }
                                this.initView();
                            }),
                            (e.prototype.shareLooperCallback = function (e) {
                                if (e) {
                                    for (var t = [], i = 0, o = 0; o < e.length; o++) {
                                        var n = e[o];
                                        n.isConsume || ((i += n.diamondNum), t.push(n));
                                    }
                                    0 < i && (this.consumeInviteList(t, i), -1 == this.mFirstFDIntoTime && (this.mFirstFDIntoTime = (new Date().getTime() - this.mShareTime) / 1e3), this.onFdInviteSuccess(i));
                                }
                            }),
                            (e.prototype.consumeInviteList = function (e, t) {
                                if (e && 0 < e.length) {
                                    for (var i = 0; i < e.length; i++) {
                                        var o = e[i];
                                        o && a.RewardMgr.Ins().cosumeInviteRewardInfo(o);
                                    }
                                    c.MoneySystem.increaseDiamond(t), l.default.report(t, l.default.SOURCE_INVITER_GET_REWARD, l.default.ACTION_GET_DIAMOND);
                                }
                            }),
                            (e.prototype.update = function (e) {}),
                            (e.prototype.onFdInviteSuccess = function (e) {
                                f.default.e('[ShareInvite]1 onFdInviteSuccess diaCount= ' + e), f.default.e('[ShareInvite]2 onFdInviteSuccess diaCount= ' + e), this.pauseSchedule(), this.reliveByShare(e);
                            }),
                            (e.prototype.reliveByShare = function (e) {
                                var t = this;
                                this.hideReliveLayout();
                                var i = this.mReviveController.getReviveDiamondCost();
                                this.showToastTips(cc.js.formatStr('好友已点入，奖励%s钻石\n\r本次复活消耗%s钻石', e, i), function () {
                                    t.reliveGame(), t.mReviveController.reviveByDiamond(i);
                                });
                            }),
                            (e.prototype.hideReliveLayout = function () {
                                (this.relive_layout.node.active = !1), (this.skip_layout.node.active = !1), (this.bgNode.active = !1);
                            }),
                            (e.prototype.onDestroy = function () {
                                m.default.isWeiXin() || g.MGAdv.load(this.getVideoScene(), _.QQ_ADV_TYPE.VIDEO_TYPE_GAME_RELIVE), this.destoryBannerAd(), null != this.mShareLooper && this.mShareLooper.release(), this.pauseSchedule(), M.default.getInstance().popDialog(this.node);
                            }),
                            (e.prototype.initView = function () {
                                this.updateReliveDiaCount(), this.updateShareCount();
                            }),
                            (e.prototype.updateReliveDiaCount = function () {
                                this.relive_diamond_count_label.string = 'x ' + this.mReviveController.getReviveDiamondCost();
                            }),
                            (e.prototype.updateShareCount = function () {
                                (this.wait_fd_label.node.active = !1), this.pauseSchedule();
                                var e = a.RewardMgr.Ins().getCanAlsoInviteNumToday();
                                (this.relive_share_count_label.string = cc.js.formatStr(this.mReviveController.getReliveTipsText(), e)), (this.fd_tips_layout.node.active = !1), (this.share_dianmod_num_icon.node.active = !1);
                            }),
                            (e.prototype.closeBtnClick = function () {
                                this.destoryBannerAd(), this.pauseSchedule(), this.toGameOverScene(), console.log('closeBtnClick');
                            }),
                            (e.prototype.initCallback = function () {
                                var t = this;
                                this.callback = function () {
                                    var e = t.wait_fd_label.string;
                                    t.wait_fd_label.string = '已发送，好友点入即可助力...' == e ? '已发送，好友点入即可助力.' : e + '.';
                                };
                            }),
                            (e.prototype.pauseSchedule = function () {
                                this.callback && this.unschedule(this.callback);
                            }),
                            (e.prototype.startSchedule = function () {
                                this.callback || this.initCallback(), this.schedule(this.callback, 1);
                            }),
                            (e.prototype.shareReliveClick = function () {
                                var n = this;
                                console.log('shareReliveClick'),
                                    m.default.isWeiXin()
                                        ? 0 < a.RewardMgr.Ins().getCanAlsoInviteNumToday()
                                            ? (-1 == this.mShareTime && (this.mShareTime = new Date().getTime()),
                                              d.MGUser.getUserLoginInfo({
                                                  complete: function (e) {
                                                      console.log('[ReliveTotal] shareForReliveFdHelp getPlayerInfo (playerInfo == null) = ' + (null == e)), e && (p.MGShareUtils.shareForReliveFdHelp(e.playerId, function (e) {}), (n.wait_fd_label.node.active = !0), n.startSchedule());
                                                  },
                                              }))
                                            : this.showToastTips('今天邀请机会已用完,明天再来吧')
                                        : m.default.isQQ() &&
                                          d.MGUser.getUserLoginInfo({
                                              complete: function (e) {
                                                  console.log('[ReliveTotal] shareForReliveFdHelp getPlayerInfo (playerInfo == null) = ' + (null == e)),
                                                      e &&
                                                          p.MGShareUtils.shareForReliveFdHelp(e.playerId, function (e, t) {
                                                              if (e && t) {
                                                                  n.showToastTips('复活成功！\n祝你拿第一！'),
                                                                      (n.relive_layout.node.active = !1),
                                                                      (n.skip_layout.node.active = !1),
                                                                      setTimeout(function () {
                                                                          n.pauseSchedule(), n.reliveGame(), n.mReviveController.reviveByShare();
                                                                      }, 2e3);
                                                                  var i = y.default.read(S.default.QQ_SHARE_RELIVE_SUCC_TIMES);
                                                                  if (v.StringUtil.isEmpty(i)) y.default.save(S.default.QQ_SHARE_RELIVE_SUCC_TIMES, '1');
                                                                  else {
                                                                      var o = parseInt(i) + 1;
                                                                      y.default.save(S.default.QQ_SHARE_RELIVE_SUCC_TIMES, o + '');
                                                                  }
                                                              } else e ? n.showToastTips('需要分享到群才能复活') : m.default.isQQ() && n.showToastTips('分享失败!');
                                                          });
                                              },
                                          });
                            }),
                            (e.prototype.diamondReliveClick = function () {
                                if (this.mReviveController.isDiamondEnough()) {
                                    if ((this.pauseSchedule(), this.reliveGame(), !o.G.Ap.config.debugFreeRelive)) {
                                        var e = this.mReviveController.getReviveDiamondCost();
                                        this.mReviveController.reviveByDiamond(e);
                                    }
                                } else m.default.isCM() ? this.reliveByDiamondWhenNotEnoughIOS() : m.default.isIOS() ? this.reliveByDiamondWhenNotEnoughIOS() : this.reliveByDiamondWhenNotEnoughAndroid();
                            }),
                            (e.prototype.reliveByDiamondWhenNotEnoughIOS = function () {
                                var e = k.default.getInstance().getLanguageByKey('label_text.no_diamond_tips');
                                this.showToastTips(e);
                            }),
                            (e.prototype.reliveByDiamondWhenNotEnoughAndroid = function () {
                                var i = this;
                                T.default.load('prefab/ReliveBuyDiamondDialog', function (e, t) {
                                    i.node.addChild(t);
                                });
                            }),
                            (e.prototype.showVideoAd = function (i) {
                                var o = this;
                                void 0 === i && (i = !1);
                                var n = this;
                                g.MGAdv.show(n.getVideoScene(), _.QQ_ADV_TYPE.VIDEO_TYPE_GAME_RELIVE, function (e) {
                                    switch (e) {
                                        case _.ADStat.NOT_NETWORK:
                                            var t = k.default.getInstance().getLanguageByKey('label_text.wwn');
                                            n.showToastTips(t);
                                            break;
                                        case _.ADStat.SHOW_SUCCESS_CLOSE:
                                            i && n.addDashProps(1), n.reliveGame(), n.mReviveController.reviveByVideo(i);
                                            break;
                                        case _.ADStat.SHOW_NOT_ENED_CLOSE:
                                            break;
                                        case _.ADStat.SHOW_GET_AD_FAILED:
                                            (n.relive_layout.node.active = !1),
                                                (n.skip_layout.node.active = !1),
                                                n.showToastTips('No video ads available', function () {
                                                    cc.isValid(o, !0) && (n.reliveGame(), n.mReviveController.reviveByVideo(), (n.relive_layout.node.active = !0), (n.skip_layout.node.active = !0));
                                                });
                                    }
                                });
                            }),
                            (e.prototype.videoReliveClick = function (e) {
                                var t = this;
                                void 0 === e && (e = !1),
                                    this.destoryBannerAd(),
                                    m.default.isWeiXin()
                                        ? (MGB.Log.i('MGB_DEBUG', 'videoReliveClick'), this.showVideoAd(e))
                                        : this.scheduleOnce(function () {
                                              t.showVideoAd(e);
                                          }, 0.3);
                            }),
                            (e.prototype.addDashProps = function (e) {
                                if (this.mReliveWithPropType) {
                                    var t = new C.Property(this.mReliveWithPropType);
                                    o.G.Ap.state.addCarryProperty(t, 1);
                                }
                            }),
                            (e.prototype.showToastTips = function (e, t) {
                                var i = cc.instantiate(this.toastPrefab);
                                i.getComponent(s.default).showTips(e, function () {
                                    i.destroy(), t && t();
                                }),
                                    this.toast_layout.node.addChild(i);
                            }),
                            (e.prototype.showToastAward = function (e, t) {
                                var i = cc.instantiate(this.toastPrefab);
                                i.getComponent(s.default).showReliveAward(e, function () {
                                    i.destroy(), t && t();
                                }),
                                    this.toast_layout.node.addChild(i);
                            }),
                            (e.prototype.toGameOverScene = function () {
                                console.log('toGameOverScene'), this.mCancelGameCallBack && this.mCancelGameCallBack(), o.G.Ap.state.gameOver(), o.G.Ap.presenter.enterScene(o.G.GAME_OVER_SCENE_NAME, o.G.Ap.state.mission.musicId);
                            }),
                            (e.prototype.reliveGame = function () {
                                console.log('reliveGame'), this.destoryBannerAd(), this.mReliveCallBack && this.mReliveCallBack(this.mReliveWithPropType), g.MGAdv.gameplayStart();
                            }),
                            (e.prototype.getPopupUpByShowbanner = function () {
                                return 100;
                            }),
                            (e.prototype.adapterUIShowBanner = function () {
                                m.default.isWeiXin() && ((this.relive_layout.node.y = this.relive_layout.node.y + this.getPopupUpByShowbanner()), (this.skip_layout.node.y = this.skip_layout.node.y + this.getPopupUpByShowbanner()));
                            }),
                            __decorate([N(cc.Node)], e.prototype, 'mLayout', void 0),
                            __decorate([N(cc.Node)], e.prototype, 'bgNode', void 0),
                            __decorate([N(cc.Layout)], e.prototype, 'relive_layout', void 0),
                            __decorate([N(cc.Node)], e.prototype, 'relive_content_layout', void 0),
                            __decorate([N(cc.Prefab)], e.prototype, 'challengeRelivePrefab', void 0),
                            __decorate([N(cc.Prefab)], e.prototype, 'qqRedPacketRelivePrefab', void 0),
                            __decorate([N(cc.Label)], e.prototype, 'relive_diamond_count_label', void 0),
                            __decorate([N(cc.Label)], e.prototype, 'relive_share_count_label', void 0),
                            __decorate([N(cc.Label)], e.prototype, 'mHelpReliveBtnLabel', void 0),
                            __decorate([N(cc.Sprite)], e.prototype, 'share_dianmod_num_icon', void 0),
                            __decorate([N(cc.Layout)], e.prototype, 'toast_layout', void 0),
                            __decorate([N(cc.Prefab)], e.prototype, 'toastPrefab', void 0),
                            __decorate([N(cc.Label)], e.prototype, 'wait_fd_label', void 0),
                            __decorate([N(cc.Layout)], e.prototype, 'fd_tips_layout', void 0),
                            __decorate([N(cc.Layout)], e.prototype, 'skip_layout', void 0),
                            __decorate([N(cc.Button)], e.prototype, 'relive_diamond_btn', void 0),
                            __decorate([N(cc.Button)], e.prototype, 'relive_share_btn', void 0),
                            __decorate([N(cc.Button)], e.prototype, 'relive_video_btn', void 0),
                            __decorate([N(cc.Button)], e.prototype, 'relive_video_props_btn', void 0),
                            __decorate([N(cc.Sprite)], e.prototype, 'relive_video_props_tip', void 0),
                            (e = __decorate([b], e))
                        );
                    })(cc.Component);
                (i.default = R), cc._RF.pop();
            },
            {
                '../../../modules/MGAdv/scripts/Logic/MGAdvDefine': 'MGAdvDefine',
                '../../../modules/MGAdv/scripts/Logic/MGAdvEntrance': 'MGAdvEntrance',
                '../../../modules/MGAppShare/scripts/MGShareUtil': 'MGShareUtil',
                '../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../base/G': 'G',
                '../../base/Log': 'Log',
                '../../config/LSKey': 'LSKey',
                '../../infoc/m_p2_PData_Dia': 'm_p2_PData_Dia',
                '../../property/PropertyDefines': 'PropertyDefines',
                '../../upgrade/BannerDelayShowToggle': 'BannerDelayShowToggle',
                '../../upgrade/ToggleBean': 'ToggleBean',
                '../../util/PU': 'PU',
                '../../util/SUtil': 'SUtil',
                '../../util/StringUtil': 'StringUtil',
                '../Logic/I18nManager': 'I18nManager',
                '../Logic/MoneySystem': 'MoneySystem',
                '../Network/Protocol/StorageUtil': 'StorageUtil',
                '../UI/GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
                '../UI/GameEntraScene/ImgCache': 'ImgCache',
                '../UI/GameEntraScene/PrefabMgr': 'PrefabMgr',
                '../UI/GameEntraScene/ToastPrefab': 'ToastPrefab',
                '../UI/rank/RankRevivePageContainer': 'RankRevivePageContainer',
                '../keypad/KeypadNavigator': 'KeypadNavigator',
                '../reward/RewardManager': 'RewardManager',
                './QQRedPacketRelive': 'QQRedPacketRelive',
                './ReviveController': 'ReviveController',
            },
        ],
        Relive: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '55abffZB9lL5bK9fH4t109T', 'Relive'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a,
                    o,
                    r = e('../../base/G'),
                    s = e('./ReviveController'),
                    c = e('./ReliveTotal'),
                    l = e('./ReliveNoShare'),
                    n = e('./ReliveFreeDialogTipDialog'),
                    u = e('../Network/Protocol/StorageUtil'),
                    d = e('../../config/LSKey'),
                    p = e('../UI/GameEntraScene/PrefabMgr'),
                    h = cc._decorator,
                    f = h.ccclass,
                    m = h.property;
                ((o = a = i.GAMESCENEZORDER || (i.GAMESCENEZORDER = {}))[(o.RELIVE = 100)] = 'RELIVE'), (o[(o.RELIVE_NO_SHARE = 101)] = 'RELIVE_NO_SHARE');
                var g = (function (t) {
                    function e() {
                        var e = (null !== t && t.apply(this, arguments)) || this;
                        return (e.reliveDialogPrefabTotal = null), (e.reliveDialogPrefabNodeTotal = null), (e.reliveDialogPrefabNoShare = null), (e.reliveDialogPrefabNodeNoShare = null), (e.mReviveController = null), e;
                    }
                    return (
                        __extends(e, t),
                        (e.prototype.setReliveCallback = function (e) {
                            this.mReliveCallBack = e;
                        }),
                        (e.prototype.setCancelGameCallback = function (e) {
                            this.mCancelGameCallBack = e;
                        }),
                        (e.prototype.setReliveScoreDataCallback = function (e) {
                            this.mReliveScoreDataCallback = e;
                        }),
                        (e.prototype.setReviveController = function (e) {
                            (this.mReviveController = e), console.log('relive setReviveController : mReviveController = ' + this.mReviveController);
                        }),
                        (e.prototype.onLoad = function () {}),
                        (e.prototype.start = function () {
                            console.log('relive : start = ' + this.mReviveController), this.toReliveLayout();
                        }),
                        (e.prototype.toReliveLayout = function () {
                            var e = this.mReviveController.getReliveMode(),
                                t = this.mReviveController.getReliveType(r.G.Ap.state.attainScore, e);
                            if (t != s.default.RESULT_CAN_NOT_REVIVE)
                                switch (t) {
                                    case s.default.RESULI_RELIVE_CM:
                                        if (((this.reliveDialogPrefabNodeTotal = cc.instantiate(this.reliveDialogPrefabTotal)), this.reliveDialogPrefabNodeTotal)) if ((o = this.reliveDialogPrefabNodeTotal.getComponent(c.default))) o.setReviveController(this.mReviveController), o.setReliveScoreDataCallback(this.mReliveScoreDataCallback), o.setReliveType(t), o.setReliveCallback(this.mReliveCallBack), o.setCancelGameCallback(this.mCancelGameCallBack), this.node.getChildByName('UILayer').addChild(this.reliveDialogPrefabNodeTotal, a.RELIVE);
                                        break;
                                    case s.default.RESULT_REVIVE_FREE:
                                        this.showFirstFreeReliveDialog();
                                        break;
                                    case s.default.RESULT_REVIVE_VIDEO_AND_PROPS_AND_DIAMOND:
                                        var i = this.mReviveController.whichPropForRevive();
                                    case s.default.RESULT_REVIVE_SHARE_AND_DIAMOND:
                                    case s.default.RESULT_REVIVE_VIDEO_AND_DIAMOND:
                                    case s.default.RESULT_REVIVE_SHARE_AND_VIDEO:
                                        var o;
                                        if (((this.reliveDialogPrefabNodeTotal = cc.instantiate(this.reliveDialogPrefabTotal)), this.reliveDialogPrefabNodeTotal)) if ((o = this.reliveDialogPrefabNodeTotal.getComponent(c.default))) o.setReviveController(this.mReviveController), o.setReliveScoreDataCallback(this.mReliveScoreDataCallback), o.setReliveWithPropType(i), o.setReliveType(t), o.setReliveMode(e), o.setReliveCallback(this.mReliveCallBack), o.setCancelGameCallback(this.mCancelGameCallBack), this.node.getChildByName('UILayer').addChild(this.reliveDialogPrefabNodeTotal, a.RELIVE);
                                        break;
                                    case s.default.RESULT_REVIVE_ONLY_SHARE:
                                        if (((this.reliveDialogPrefabNodeNoShare = cc.instantiate(this.reliveDialogPrefabNoShare)), this.reliveDialogPrefabNodeNoShare)) {
                                            var n = this.reliveDialogPrefabNodeNoShare.getComponent(l.default);
                                            n && (n.setReviveController(this.mReviveController), n.setReliveScoreDataCallback(this.mReliveScoreDataCallback), n.setReliveMode(e), n.setReliveCallback(this.mReliveCallBack), n.setCancelGameCallback(this.mCancelGameCallBack)), this.node.getChildByName('UILayer').addChild(this.reliveDialogPrefabNodeNoShare, a.RELIVE_NO_SHARE);
                                        }
                                }
                            else this.mCancelGameCallBack && this.mCancelGameCallBack(), r.G.Ap.state.gameOver(), e == s.ReliveMode.CHALLENGE ? r.G.Ap.presenter.enterScene('ChallengeCompetitionResult') : r.G.Ap.presenter.enterScene(r.G.GAME_OVER_SCENE_NAME, r.G.Ap.state.mission.musicId);
                        }),
                        (e.prototype.showFirstFreeReliveDialog = function () {
                            var o = this;
                            p.default.load('prefab/newtarget/FirstFailTipDialog', function (e, t) {
                                if (t) {
                                    u.default.save(d.default.HAS_RELIVE_FREE, 'true');
                                    var i = t.getComponent(n.default);
                                    i.setType(n.DIALOG_TYPE.RELIVE), i.setBtnClickCallback(o.mReliveCallBack), o.node.getChildByName('UILayer').addChild(t);
                                }
                            });
                        }),
                        (e.prototype.toTotalReliveLayout = function (e) {
                            try {
                                this.reliveDialogPrefabNodeTotal = cc.instantiate(this.reliveDialogPrefabTotal);
                            } catch (e) {
                                console.error('[ShareInvite]4  toTotalReliveLayout e= ' + e);
                            }
                            if ((console.error('[ShareInvite]2  toTotalReliveLayout diaCount= ' + e + ', this.reliveDialogPrefabNodeTotal =' + this.reliveDialogPrefabNodeTotal), this.reliveDialogPrefabNodeTotal)) {
                                console.error('[ShareInvite]3  toTotalReliveLayout diaCount= ' + e);
                                var t = this.reliveDialogPrefabNodeTotal.getComponent(c.default);
                                if (t) {
                                    t.setReliveScoreDataCallback(this.mReliveScoreDataCallback), t.setReliveCallback(this.mReliveCallBack), t.setCancelGameCallback(this.mCancelGameCallBack), t.setReviveController(this.mReviveController), t.setShowByFdInvite(!0, e);
                                    var i = this.node.getChildByName('UILayer');
                                    this.reliveDialogPrefabNodeNoShare && this.reliveDialogPrefabNodeNoShare.destroy(), i.addChild(this.reliveDialogPrefabNodeTotal, a.RELIVE);
                                }
                            }
                        }),
                        __decorate([m(cc.Prefab)], e.prototype, 'reliveDialogPrefabTotal', void 0),
                        __decorate([m(cc.Prefab)], e.prototype, 'reliveDialogPrefabNoShare', void 0),
                        (e = __decorate([f], e))
                    );
                })(cc.Component);
                (i.default = g), cc._RF.pop();
            },
            {
                '../../base/G': 'G',
                '../../config/LSKey': 'LSKey',
                '../Network/Protocol/StorageUtil': 'StorageUtil',
                '../UI/GameEntraScene/PrefabMgr': 'PrefabMgr',
                './ReliveFreeDialogTipDialog': 'ReliveFreeDialogTipDialog',
                './ReliveNoShare': 'ReliveNoShare',
                './ReliveTotal': 'ReliveTotal',
                './ReviveController': 'ReviveController',
            },
        ],
        RemoteCfgMgr: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '60d29zo5cRBQbAIUr7/EtbW', 'RemoteCfgMgr'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../upgrade/ToggleChecker'),
                    n = e('../upgrade/ToggleBean'),
                    a = e('../base/Log'),
                    r = (function () {
                        function e() {
                            (this.TAG = 'RemoteCfgMgr'), (this.hasQQBannerHiddenInit = !1), (this.mSSShowOffQQBannerHidden = !1), (this.hasResultQQBannerDynamicInit = !1), (this.mSSResultQQBannerDynamic = !1), (this.preloadWXRewardedVideo = !1), (this.resultBannerDelay = 500), (this.resultBannerDelayPopup = 200);
                        }
                        return (
                            (e.getIns = function () {
                                return this.singleIns || (this.singleIns = new e()), this.singleIns;
                            }),
                            (e.prototype.init = function () {
                                var e = o.default.ins().getToggleStatus(n.ToggleKey.SINGLE_SONG_SHOWOFF_QQ_BANNER, 0, 1);
                                (this.mSSShowOffQQBannerHidden = 1 != e), (this.hasQQBannerHiddenInit = !0), a.default.i(this.TAG, 'init hidden qq banner status: ' + this.mSSShowOffQQBannerHidden);
                                var t = o.default.ins().getToggleStatus(n.ToggleKey.SINGLE_SONG_RESULT_DYNAMIC_BANNER, 0, 0);
                                (this.mSSResultQQBannerDynamic = 1 == t), (this.hasResultQQBannerDynamicInit = !0), a.default.i(this.TAG, 'init dynamic qq banner status: ' + this.mSSResultQQBannerDynamic);
                                var i = o.default.ins().getToggleStatus(n.ToggleKey.WX_REWARDED_VIDEO_PRELOAD, 0, 0);
                                (this.preloadWXRewardedVideo = 1 == i), a.default.i(this.TAG, 'init wechat awarded video preload status: ' + this.preloadWXRewardedVideo), this.initBannerDelay();
                            }),
                            (e.prototype.initBannerDelay = function () {
                                if (1 == o.default.ins().getToggleStatus(n.ToggleKey.SINGLE_SONG_RESULT_BANNER_DELAY, 0, 0)) {
                                    var e = o.default.ins().getToggle(n.ToggleKey.SINGLE_SONG_RESULT_BANNER_DELAY);
                                    if (e && e.extra)
                                        try {
                                            var t = JSON.parse(JSON.stringify(e.extra));
                                            t && (t.hasOwnProperty('normal') && (this.resultBannerDelay = t.normal), t.hasOwnProperty('popup') && (this.resultBannerDelayPopup = t.popup));
                                        } catch (e) {
                                            a.default.e(this.TAG, 'single song result banner delay data parse failed');
                                        }
                                    else a.default.e(this.TAG, 'single song result banner delay data invalid');
                                }
                            }),
                            (e.prototype.isQQBannerHiddenInit = function () {
                                return this.hasQQBannerHiddenInit;
                            }),
                            (e.prototype.isQQBannerHidden = function () {
                                return a.default.i(this.TAG, 'isQQBannerHidden:' + this.mSSShowOffQQBannerHidden), this.mSSShowOffQQBannerHidden;
                            }),
                            (e.prototype.isQQDynamicBannerInit = function () {
                                return this.hasResultQQBannerDynamicInit;
                            }),
                            (e.prototype.isQQDynamicBanner = function () {
                                return a.default.i(this.TAG, 'isQQDynamicBanner:' + this.mSSResultQQBannerDynamic), this.mSSResultQQBannerDynamic;
                            }),
                            (e.prototype.preloadWechatRewardedVideo = function () {
                                return a.default.i(this.TAG, 'preloadWXRewardedVideo:' + this.preloadWXRewardedVideo), this.preloadWXRewardedVideo;
                            }),
                            (e.prototype.getBannerDelay = function () {
                                return a.default.i(this.TAG, 'single song result banner delay: ' + this.resultBannerDelay + '(ms)'), Number((this.resultBannerDelay / 1e3).toFixed(2));
                            }),
                            (e.prototype.getBannerDelayPopup = function () {
                                return a.default.i(this.TAG, 'single song result banner delay popup: ' + this.resultBannerDelayPopup + '(ms)'), Number((this.resultBannerDelayPopup / 1e3).toFixed(2));
                            }),
                            (e.singleIns = null),
                            e
                        );
                    })();
                (i.default = r), cc._RF.pop();
            },
            {
                '../base/Log': 'Log',
                '../upgrade/ToggleBean': 'ToggleBean',
                '../upgrade/ToggleChecker': 'ToggleChecker',
            },
        ],
        RenderSwitch: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'a1901dDyNJGja/jDTh51gaB', 'RenderSwitch'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    cc._RF.pop();
            },
            {},
        ],
        ResBean: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '504a42/dN9EZZeY9JvJLRq2', 'ResBean'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (t) {
                    function e() {
                        var e = t.call(this) || this;
                        return (e.skinItem = null), e;
                    }
                    return __extends(e, t), (e.TYPE_SKIN = 'skin'), (e.TYPE_REPLOAD = 'preload'), (e.TYPE_MODULE = 'module'), e;
                })(e('./VersionBean').default);
                i.ResBean = o;
                var n = (function () {
                    function e() {
                        (this.skinType = e.SKIN_TYPE_CERTIFICATION), (this.piecesTotal = 0), (this.goldCount = 0), (this.watchAdsTimes = 0);
                    }
                    return (e.SKIN_TYPE_DEFAULT = '1'), (e.SKIN_TYPE_DAILYATTENDANCE = '2'), (e.SKIN_TYPE_CERTIFICATION = '3'), (e.SKIN_TYPE_INVITE = '4'), (e.SKIN_TYPE_FIRST_PAY = '5'), (e.DIS_ENABLE = '1'), (e.DIS_DISABLE = '0'), e;
                })();
                (i.SkinBean = n), cc._RF.pop();
            },
            {
                './VersionBean': 'VersionBean',
            },
        ],
        ResLoader: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'ee5aeU7m2pC6JUikmhWdMGO', 'ResLoader'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../modules/MGUtils/WeappHelper'),
                    n = (function () {
                        function t() {}
                        return (
                            (t.loadJson = function (e, i) {
                                t.loadString(e, function (e, t) {
                                    i(e, e ? null : JSON.parse(t));
                                });
                            }),
                            (t.loadString = function (e, i) {
                                cc.sys.platform === cc.sys.WECHAT_GAME
                                    ? t.wxLoadRes(e, function (e, t) {
                                          i(e, t);
                                      })
                                    : t.xmlLoadRes(e, function (e, t) {
                                          i(e, t);
                                      });
                            }),
                            (t.wxLoadRes = function (e, t) {
                                o.WXAPI.wxFileSystemManager.readFile({
                                    filePath: e,
                                    encoding: 'utf-8',
                                    success: function (e) {
                                        t(null, e.data);
                                    },
                                    fail: function (e) {
                                        t('wx loader::send error ' + e, null);
                                    },
                                    complete: function () {},
                                });
                            }),
                            (t.fetchLoadRes = function (e, t) {
                                fetch(e)
                                    .then(function (e) {
                                        return e;
                                    })
                                    .then(function (e) {
                                        t(null, e);
                                    })
                                    .catch(function (e) {
                                        t('skin fetch::send error ' + e, null);
                                    });
                            }),
                            (t.xmlLoadRes = function (e, t) {
                                var i = new XMLHttpRequest();
                                i.open('GET', e, !0),
                                    (i.responseType = 'text'),
                                    (i.onload = function () {
                                        var e = (i.status + '')[0];
                                        '0' !== e && '2' !== e && '3' !== e ? t('error code ' + e, null) : t(null, i.response);
                                    });
                                try {
                                    i.send();
                                } catch (e) {
                                    t('XMLHttpRequest::send error ' + e, null);
                                }
                            }),
                            t
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../../modules/MGUtils/WeappHelper': 'WeappHelper',
            },
        ],
        ResMgr: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '43ccfrkjf1HcZBhYRJUmGoM', 'ResMgr'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var h = e('../base/Log'),
                    a = e('./ResBean'),
                    r = e('../config/LSKey'),
                    s = e('../base/GameInfoMgr'),
                    f = e('./Downloader'),
                    c = e('../infoc/m_p2_load_f'),
                    o = e('../business/Logic/EventBus'),
                    l = e('../business/Logic/NotifyEvent'),
                    n = e('../util/NumberUtil'),
                    u = e('./IChecker'),
                    d = e('../util/StringUtil'),
                    p = e('../business/Network/Protocol/StorageUtil'),
                    m = e('../infoc/m_p2_DL'),
                    g = e('../util/PU'),
                    _ = (function () {
                        function n() {
                            (this.mResChecker = null), (this.mSkinChecker = null), (this.initSuccess = !1), (this.mIniting = !1), (this.mPatchStatus = new Object());
                        }
                        return (
                            (n.Ins = function () {
                                return null == n._instance && (n._instance = new n()), n._instance;
                            }),
                            (n.prototype.init = function (e) {
                                var i = this;
                                if (this.initSuccess) e(!0);
                                else if (this.mIniting) e(!1);
                                else {
                                    this.mIniting = !0;
                                    var o = s.GameInfoMgr.Ins().getInfo();
                                    o
                                        ? (null == this.mResChecker && (this.mResChecker = new y(a.ResBean.TYPE_REPLOAD, r.default.RES_PRELOAD_INFO, o.resCDN + o.resPath, 'resources/res.json')),
                                          null == this.mSkinChecker && (this.mSkinChecker = new y(a.ResBean.TYPE_SKIN, r.default.RES_SKIN_INFO, o.skinPath, 'resources/skin.json')),
                                          this.mResChecker.check(
                                              function () {
                                                  if (i.mResChecker.getData()) {
                                                      var t = !1;
                                                      i.mResChecker.getData().forEach(function (e) {
                                                          d.StringUtil.isEmpty(e.url) || e.url.startsWith(o.resCDN) || ((e.url = o.resCDN + e.url), (t = !0));
                                                      }),
                                                          t && i.mResChecker.saveLocalData();
                                                  }
                                                  i.mSkinChecker.check(
                                                      function () {
                                                          if (i.mSkinChecker.getData()) {
                                                              var t = !1;
                                                              i.mSkinChecker.getData().forEach(function (e) {
                                                                  d.StringUtil.isEmpty(e.url) || e.url.startsWith(o.skinCDN) || ((e.url = o.skinCDN + e.url), (t = !0));
                                                              }),
                                                                  t && i.mResChecker.saveLocalData();
                                                          }
                                                          (i.initSuccess = !0), (i.mIniting = !1), e(!0);
                                                      },
                                                      function () {
                                                          c.default.report('Res_Skin', '[3]net error.'), h.default.e(n.TAG + 'SkinChecker check [Skin] failed.'), (i.initSuccess = !1), (i.mIniting = !1), e(!1);
                                                      },
                                                  );
                                              },
                                              function () {
                                                  c.default.report('Res_preload', '[3]net error.'), h.default.e(n.TAG + 'ResChecker check [Res] failed.'), (i.initSuccess = !1), (i.mIniting = !1), e(!1);
                                              },
                                          ))
                                        : (c.default.report('Res_GameInfo', 'GameInfo is null.'), console.error(n.TAG + '加载配置文件失败【game_info】'), (this.initSuccess = !1), (this.mIniting = !1), e(!1));
                                }
                            }),
                            (n.prototype.notifyUINeedUpdate = function (e) {
                                o.default.fire(l.default.LOADING_UI_NOTIFY, 'download', e);
                            }),
                            (n.prototype.notifyUINotNeedUpdate = function () {
                                o.default.fire(l.default.LOADING_UI_NOTIFY, 'no-download', 0);
                            }),
                            (n.prototype.getBasicInfoBeans = function () {
                                var t = p.default.read(r.default.BASIC_DATA_VER);
                                h.default.i('LocalStorageKey.BASIC_DATA_VER=' + t), m.default.setLocalVersion(t), m.default.setResType(a.ResBean.TYPE_REPLOAD);
                                var e = this.filterResBean(function (e) {
                                    return e && e.type == 'patch-' + t;
                                });
                                if (e && 0 < e.length) return m.default.setDownloadType(!1), e;
                                m.default.setDownloadType(!0);
                                return this.filterResBean(function (e) {
                                    return e && e.type == a.ResBean.TYPE_REPLOAD;
                                });
                            }),
                            (n.prototype.filterResBean = function (t) {
                                return this.mResChecker && this.mResChecker.getData()
                                    ? this.mResChecker.getData().filter(function (e) {
                                          return t(e);
                                      })
                                    : null;
                            }),
                            (n.prototype.clearLocalResInfo = function () {
                                this.mResChecker &&
                                    this.mResChecker.getData() &&
                                    (h.default.l('clear local baisc data version.'),
                                    p.default.save(r.default.BASIC_DATA_VER, ''),
                                    this.mResChecker.getData().forEach(function (e) {
                                        e && e.clearLocalInfo();
                                    }),
                                    this.mResChecker.saveLocalData());
                            }),
                            (n.prototype.downloadBasicRes = function (i) {
                                var o = this;
                                return new Promise(function (t, e) {
                                    o.download(i).then(
                                        function (e) {
                                            o.upgradeAllInfo(), e && p.default.save(r.default.IS_NEED_REDOWNLOAD, 'true'), t(e);
                                        },
                                        function () {
                                            e();
                                        },
                                    );
                                });
                            }),
                            (n.prototype.download = function (i) {
                                var o = this;
                                return (
                                    h.default.w('下载资源包', i),
                                    new Promise(function (t, e) {
                                        null == i || 0 == i.length
                                            ? e()
                                            : o.downloadVol(
                                                  i,
                                                  function (e) {
                                                      t(e);
                                                  },
                                                  function () {
                                                      e();
                                                  },
                                              );
                                    })
                                );
                            }),
                            (n.prototype.upgradeAllInfo = function () {
                                if (this.mResChecker && this.mResChecker.getData()) {
                                    var t = null;
                                    this.mResChecker.getData().forEach(function (e) {
                                        e.isNeedUpdate() && ((e.localMd5 = e.md5), (e.localVer = e.serverVer)), 'preload' != e.type || (null != t && null != t) || (t = e.serverVer);
                                    }),
                                        h.default.l('save local baisc data version(LocalStorageKey.BASIC_DATA_VER).' + t),
                                        p.default.save(r.default.BASIC_DATA_VER, t),
                                        this.mResChecker.saveLocalData();
                                }
                            }),
                            (n.prototype.downloadSliceVol = function (t, e, i, n, a) {
                                for (var r = this, o = Object.keys(this.mPatchStatus), s = 0; s < o.length; s++) {
                                    var c = o[s];
                                    c && delete this.mPatchStatus[c];
                                }
                                for (
                                    var l = !1,
                                        u = function (e) {
                                            var o = t[e];
                                            o &&
                                                o.isNeedUpdate() &&
                                                ((l = !0),
                                                (d.mPatchStatus[o.getUniqueKey()] = 'downloading'),
                                                h.default.w('=====> start downloading: ' + o.getUniqueKey(), o),
                                                f.default
                                                    .Ins()
                                                    .download(o)
                                                    .then(
                                                        function () {
                                                            delete r.mPatchStatus[o.getUniqueKey()], h.default.w('=====> downloadSliceVol（成功）: ' + o.getUniqueKey(), o), (o.localMd5 = o.md5), (o.localVer = o.serverVer);
                                                            var e = Object.keys(r.mPatchStatus);
                                                            if (0 == e.length) r.mResChecker.saveLocalData(), n();
                                                            else {
                                                                for (var t = !0, i = 0; i < e.length; i++) 'downloading' == r.mPatchStatus[e[i]] && (t = !1);
                                                                t && (h.default.w('=====> all finished: ', r.mPatchStatus), r.mResChecker.saveLocalData(), a());
                                                            }
                                                        },
                                                        function () {
                                                            r.mPatchStatus[o.getUniqueKey()] = 'failed';
                                                            var e = Object.keys(r.mPatchStatus),
                                                                t = !0;
                                                            if (1 < e.length) for (var i = 0; i < e.length; i++) 'downloading' == r.mPatchStatus[e[i]] && (t = !1);
                                                            t && a();
                                                        },
                                                    ));
                                        },
                                        d = this,
                                        p = e;
                                    p < i;
                                    p++
                                )
                                    u(p);
                                l || n();
                            }),
                            (n.prototype.downloadVol = function (e, t, i) {
                                var o = 0,
                                    n = 0,
                                    a = 0;
                                if (
                                    (e.forEach(function (e) {
                                        e && e.isNeedUpdate() && (o++, (a += e.size)), (n += e.size);
                                    }),
                                    m.default.setDownloadTotalSize(n),
                                    m.default.setDownloadSize(a),
                                    0 == o)
                                )
                                    return this.notifyUINotNeedUpdate(), void t(!1);
                                this.notifyUINeedUpdate(o),
                                    this.loopDownload(
                                        e,
                                        0,
                                        function () {
                                            m.default.setDownloadStatus(!0), m.default.report(), t(!0);
                                        },
                                        function () {
                                            m.default.setDownloadStatus(!1), m.default.report(), c.default.report('Res_PreLoad_DownloadVol', 'volume download.'), i();
                                        },
                                    );
                            }),
                            (n.prototype.loopDownload = function (e, t, i, o) {
                                var n = this;
                                if (t != e.length) {
                                    var a = t + 5;
                                    a >= e.length && (a = e.length),
                                        this.downloadSliceVol(
                                            e,
                                            t,
                                            a,
                                            function () {
                                                n.loopDownload(e, a, i, o);
                                            },
                                            function () {
                                                h.default.w('downloadSliceVol 失败' + t + '/' + a), o();
                                            },
                                        );
                                } else i();
                            }),
                            (n.prototype.getSkinBean = function (t) {
                                if (this.mSkinChecker && this.mSkinChecker.getData() && 0 < this.mSkinChecker.getData().length) {
                                    var e = void 0,
                                        i = this.mSkinChecker.getData().filter(function (e) {
                                            return e.key == t;
                                        });
                                    return (null == i || 0 < i.length) && (e = i[0]), e;
                                }
                                return null;
                            }),
                            (n.prototype.downloadSkin = function (e, t, i) {
                                var o = this;
                                e
                                    ? e.isNeedUpdate()
                                        ? f.default
                                              .Ins()
                                              .download(e)
                                              .then(
                                                  function () {
                                                      (e.localMd5 = e.md5), (e.localVer = e.serverVer), o.mSkinChecker.saveLocalData(), t();
                                                  },
                                                  function () {
                                                      i();
                                                  },
                                              )
                                        : t()
                                    : i();
                            }),
                            (n.prototype.cancelDownloadSkin = function (e) {
                                var t = this.getSkinBean(e);
                                t && f.default.Ins().cancelDownload(t);
                            }),
                            (n.prototype.getSkins = function () {
                                return this.mSkinChecker ? this.mSkinChecker.getData() : [];
                            }),
                            (n.TAG = 'ResMgr => '),
                            n
                        );
                    })();
                i.default = _;
                var y = (function (i) {
                    function e() {
                        return (null !== i && i.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(e, i),
                        (e.prototype.onMergeServerToLocal = function (e, t) {}),
                        (e.prototype.validateData = function (e) {
                            return !0;
                        }),
                        (e.prototype.parseData = function (e, t) {
                            this.getType() == a.ResBean.TYPE_REPLOAD ? e(configuration.Value.ResList) : this.getType() == a.ResBean.TYPE_SKIN ? e(configuration.Value.SkinList) : i.prototype.parseData.call(this, e, t);
                        }),
                        (e.prototype.mergeToLocalData = function (e) {
                            if (e && 0 < e.length) {
                                for (var t = [], i = 0; i < e.length; i++) {
                                    var o = this.populateServerObj(e[i]);
                                    if (o) {
                                        t.push(o);
                                        for (var n = null, a = 0; a < this.mLocalBeans.length; a++) {
                                            var r = this.mLocalBeans[a];
                                            if (r.key == o.key) {
                                                n = r;
                                                break;
                                            }
                                        }
                                        n && ((o.localMd5 = n.md5), (o.localVer = n.localVer), (o.downloadTime = n.downloadTime));
                                    }
                                }
                                0 < t.length && (this.mLocalBeans = t);
                            }
                            return !0;
                        }),
                        (e.prototype.populateServerObj = function (e) {
                            if (!e) return null;
                            var t = new a.ResBean();
                            if (((t.serverVer = u.default.populateStr(e.ver)), (t.key = u.default.populateStr(e.key)), (t.url = u.default.populateStr(e.url)), (t.md5 = u.default.populateStr(e.md5)), (t.type = u.default.populateStr(e.type)), (t.size = n.default.parseNum(e.size)), t.type == a.ResBean.TYPE_SKIN)) {
                                var i = e.skin;
                                if (i) {
                                    var o = new a.SkinBean();
                                    (o.name = u.default.populateStr(i.name)), (o.displayName = u.default.populateStr(i.displayName)), (o.previewImage = u.default.populateStr(i.image)), (o.url = u.default.populateStr(i.url)), (o.skinType = u.default.populateStr(i.skinType)), (o.certificationCount = n.default.parseNum(i.cost)), (o.goodId = u.default.populateStr(i.goodId)), (o.disCountEnable = u.default.populateStr(i.disCountEnable)), (o.dis = u.default.populateStr(i.dis)), (o.ticket = u.default.populateStr(i.ticket)), (o.disTicket = u.default.populateStr(i.disTicket)), (o.rmb = u.default.populateStr(i.rmb)), (o.disRmb = u.default.populateStr(i.disRmb)), g.default.isCM() ? ((o.goldCount = n.default.parseNum(i.goldCount)), (o.watchAdsTimes = n.default.parseNum(i.watchAdsTimes))) : ((o.piecesId = u.default.populateStr(i.pieceId)), (o.piecesTotal = n.default.parseNum(i.pieceCount))), o.skinType == a.SkinBean.SKIN_TYPE_CERTIFICATION && o.certificationCount <= 0 && (o.certificationCount = 1), (t.skinItem = o);
                                }
                            }
                            return t;
                        }),
                        (e.prototype.populateLocalObj = function (e) {
                            if (!e) return null;
                            var t = new a.ResBean();
                            if (((t.localVer = u.default.populateStr(e.localVer)), (t.serverVer = u.default.populateStr(e.serverVer)), (t.downloadTime = n.default.parseNum(e.downloadTime)), (t.localMd5 = u.default.populateStr(e.localMd5)), (t.key = u.default.populateStr(e.key)), (t.url = u.default.populateStr(e.url)), (t.md5 = u.default.populateStr(e.md5)), (t.type = u.default.populateStr(e.type)), e.skinItem)) {
                                var i = new a.SkinBean();
                                (i.certificationCount = n.default.parseNum(e.skinItem.certificationCount)), (i.displayName = u.default.populateStr(e.skinItem.displayName)), (i.name = u.default.populateStr(e.skinItem.name)), (i.previewImage = u.default.populateStr(e.skinItem.previewImage)), (i.skinType = u.default.populateStr(e.skinItem.skinType)), (i.url = u.default.populateStr(e.skinItem.url)), (i.goodId = u.default.populateStr(e.skinItem.goodId)), (i.disCountEnable = u.default.populateStr(e.skinItem.disCountEnable)), (i.dis = u.default.populateStr(e.skinItem.dis)), (i.ticket = u.default.populateStr(e.skinItem.ticket)), (i.disTicket = u.default.populateStr(e.skinItem.disTicket)), (i.rmb = u.default.populateStr(e.skinItem.rmb)), (i.disRmb = u.default.populateStr(e.skinItem.disRmb)), (i.piecesId = u.default.populateStr(e.skinItem.pieceId)), (i.piecesTotal = n.default.parseNum(e.skinItem.pieceCount)), (t.skinItem = i);
                            }
                            return t;
                        }),
                        e
                    );
                })(u.default);
                cc._RF.pop();
            },
            {
                '../base/GameInfoMgr': 'GameInfoMgr',
                '../base/Log': 'Log',
                '../business/Logic/EventBus': 'EventBus',
                '../business/Logic/NotifyEvent': 'NotifyEvent',
                '../business/Network/Protocol/StorageUtil': 'StorageUtil',
                '../config/LSKey': 'LSKey',
                '../infoc/m_p2_DL': 'm_p2_DL',
                '../infoc/m_p2_load_f': 'm_p2_load_f',
                '../util/NumberUtil': 'NumberUtil',
                '../util/PU': 'PU',
                '../util/StringUtil': 'StringUtil',
                './Downloader': 'Downloader',
                './IChecker': 'IChecker',
                './ResBean': 'ResBean',
            },
        ],
        ReuseNodePool: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '52aaavZqw1AsaAdxYcJW4nc', 'ReuseNodePool'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {
                        (this.mReuseNodeCache = null), this.resetCache();
                    }
                    return (
                        (e.prototype.resetCache = function () {
                            this.mReuseNodeCache = [];
                        }),
                        (e.prototype.get = function (e) {
                            var t = this.mReuseNodeCache.pop();
                            return null != t && null != t ? (t.reuse(e), t) : null;
                        }),
                        (e.prototype.put = function (e) {
                            return null != e && null != e && (e.unuse(), this.mReuseNodeCache.push(e), !0);
                        }),
                        (e.prototype.clear = function () {
                            for (var e = 0, t = this.mReuseNodeCache; e < t.length; e++) t[e];
                            this.resetCache();
                        }),
                        (e.prototype.size = function () {
                            return this.mReuseNodeCache.length;
                        }),
                        e
                    );
                })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        ReuseNode: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '48721fMEvNLlJCO9csutGdE', 'ReuseNode'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.unuse = function () {
                            this.visible = !1;
                        }),
                        (t.prototype.reuse = function (e) {
                            (this.opacity = 1), (this.visible = !0), this.setFrame(0);
                        }),
                        t
                    );
                })(e('../../MUI/MUISprite').default);
                (i.default = o), cc._RF.pop();
            },
            {
                '../../MUI/MUISprite': 'MUISprite',
            },
        ],
        ReviveController: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '40c0f8U/r5M3LbdvUueH6fu', 'ReviveController'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var f,
                    o,
                    m = e('../../base/G'),
                    g = e('../Network/Protocol/StorageUtil'),
                    _ = e('../../config/LSKey'),
                    a = e('../../util/TimeUtil'),
                    n = e('../Logic/PlayerMgr'),
                    r = e('../Logic/Plugin/PluginMgr'),
                    s = e('../Logic/Plugin/IPlugin'),
                    c = e('../../infoc/m_p2_PData_Dia'),
                    y = e('../reward/RewardManager'),
                    S = e('../../base/Log'),
                    v = e('../../gamescene/GameSceneSetting'),
                    I = e('../../../modules/MGAdv/scripts/Logic/MGAdvEntrance'),
                    T = e('../../../modules/MGAdv/scripts/Logic/MGAdvDefine'),
                    C = e('../../util/PU'),
                    l = e('../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    u = e('../../../scripts/util/Utility'),
                    d = e('../../property/PropertyDefines'),
                    p = e('../Logic/I18nManager'),
                    h = cc._decorator,
                    E = h.ccclass;
                h.property;
                ((o = f = i.ReliveMode || (i.ReliveMode = {}))[(o.NORMAL = 0)] = 'NORMAL'), (o[(o.CHALLENGE = 1)] = 'CHALLENGE'), (o[(o.QQ_RED_PACK = 2)] = 'QQ_RED_PACK');
                var A = (function () {
                    function e() {
                        (this.mCurReviveCount = 0), (this.mLevelId = -1), (this.mBestScore = 0), (this.mReliveMode = f.NORMAL), (this.mScore = 0), (this.mStarCount = 0);
                    }
                    var h;
                    return (
                        ((h = e).prototype.getBestScore = function () {
                            return this.mBestScore;
                        }),
                        (e.prototype.initLevelInfo = function (e) {
                            this.mLevelId = e;
                            var t = n.default.Ins().getLevelRecord(e);
                            this.mBestScore = t ? t.mBestScore : 0;
                        }),
                        (e.prototype.initReliveData = function (e, t, i) {
                            void 0 === i && (i = 0), (this.mReliveMode = e), (this.mScore = t), (this.mStarCount = i);
                        }),
                        (e.prototype.getReliveMode = function () {
                            return this.mReliveMode;
                        }),
                        (e.prototype.getMaxReviveCount = function () {
                            var e = m.G.propAddition.getAdditionReviveTimes(m.G.Ap.state.mission.getType().toString());
                            return h.MAX_REVIVE_COUNT + e;
                        }),
                        (e.prototype.getReliveType = function (e, t) {
                            var i = this.getCurReviveCount(),
                                o = y.RewardMgr.Ins().getCanAlsoInviteNumToday();
                            cc.sys.isBrowser && (o = 0);
                            var n = this.isDiamondEnough(),
                                a = this.isToadyFristRelive(),
                                r = this.hasToadyFristClickedVideoWithProp(),
                                s = I.MGAdv.isADFeatureEnable(),
                                c = I.MGAdv.isADCached(T.QQ_ADV_TYPE.VIDEO_TYPE_GAME_RELIVE);
                            C.default.isWeiXin() || I.MGAdv.load(T.ADScene.RELIVE_POPUP, T.QQ_ADV_TYPE.VIDEO_TYPE_GAME_RELIVE);
                            var l = I.MGAdv.lastFailIs30Minutes(),
                                u = m.G.Ap.state.attainStars,
                                d = this.getMaxReviveCount(),
                                p = v.default.getInstance().isUserGuideFinish();
                            if ((console.log('==========================复活弹窗'), console.log('当局复活过的次数：' + i), console.log('今天可邀请人数：' + o), console.log('本次钻石是否足够：' + n), console.log('当天是否首次弹复活：' + a), console.log('微信是否支持视频广告：' + s), console.log('是否有广告缓存：' + c), console.log('上次视频失败已过30分钟：' + l), console.log('当前获取的星星数：' + u), console.log('当前最大复活次数：' + d), console.log('当天是否已点击过看视频送道具复活：' + r), console.log('当前最大复活次数：' + d), console.log('isUserGuideFinish: ', p), u < 3 && !v.default.getInstance().isUserGuideFinish()) && !g.default.read(_.default.HAS_RELIVE_FREE)) return S.default.i('return 第一次免费复活，不计入复活次数，直接复活'), h.RESULT_REVIVE_FREE;
                            return (t != f.QQ_RED_PACK && e < 20) || d <= i ? (console.log('return 不弹'), h.RESULT_CAN_NOT_REVIVE) : C.default.isCM() ? h.RESULI_RELIVE_CM : s ? (0 < o ? (n ? (a || (C.default.isQQ() && !c) ? (a && C.default.isQQ() ? (S.default.l('return qq 首次 “助力”'), h.RESULT_REVIVE_ONLY_SHARE) : (S.default.l('return 2 “助力 + 钻石”'), h.RESULT_REVIVE_SHARE_AND_DIAMOND)) : (S.default.l('return 3 “视频 + 钻石”'), h.RESULT_REVIVE_VIDEO_AND_DIAMOND)) : a ? (S.default.l('return 4 “单分享助力”'), h.RESULT_REVIVE_ONLY_SHARE) : c || C.default.isWeiXin() ? (S.default.l('return 5 “助力 + 视频”'), h.RESULT_REVIVE_SHARE_AND_VIDEO) : (S.default.l('return 6 “助力 + 钻石”'), h.RESULT_REVIVE_SHARE_AND_DIAMOND)) : (S.default.l('return 7 “视频 + 钻石”'), h.RESULT_REVIVE_VIDEO_AND_DIAMOND)) : 0 < o && !n ? (console.log('return 0 “单分享助力”'), h.RESULT_REVIVE_ONLY_SHARE) : (console.log('return 1 “助力 + 钻石”'), h.RESULT_REVIVE_SHARE_AND_DIAMOND);
                        }),
                        (e.prototype.isToadyFristRelive = function () {
                            var e = parseInt(g.default.read(_.default.LAST_SHARE_RELIVE_TIME));
                            return a.default.formatDate(e) != a.default.getTodayFormatDate();
                        }),
                        (e.prototype.hasToadyFristClickedVideoWithProp = function () {
                            var e = parseInt(g.default.read(_.default.LAST_WATCH_VIDEO_WITH_PROP_RELIVE_TIME));
                            return a.default.formatDate(e) == a.default.getTodayFormatDate();
                        }),
                        (e.prototype.whichPropForRevive = function () {
                            var e = u.Utility.getRandom(1, 100);
                            return e <= 50 ? (S.default.i('random value:' + e + ', dash prop'), d.PROPERTYTYPE.GAME_DASH) : (S.default.i('random value:' + e + ', shield prop'), d.PROPERTYTYPE.GAME_SHIELD);
                        }),
                        (e.prototype.getCurReviveCount = function () {
                            return this.mCurReviveCount;
                        }),
                        (e.prototype.updateCurReviveCount = function () {
                            this.mCurReviveCount++;
                        }),
                        (e.prototype.isDiamondEnough = function () {
                            if (m.G.Ap.config.debugFreeRelive) return !0;
                            var e = this.getReviveDiamondCost();
                            return n.default.Ins().getUserDiamond() >= e;
                        }),
                        (e.prototype.getReviveDiamondCost = function () {
                            var e = 0;
                            switch (this.getCurReviveCount() + 1) {
                                case 1:
                                    e = 2;
                                    break;
                                case 2:
                                    e = 4;
                                    break;
                                case 3:
                                case 4:
                                    e = 6;
                                    break;
                                default:
                                    e = 2;
                            }
                            return S.default.w('revive count=' + this.getCurReviveCount() + '  diamond cost=' + e), e;
                        }),
                        (e.prototype.reviveByDiamond = function (e) {
                            this.updateCurReviveCount(), r.default.Ins().getPluginEx(s.default.Plugin_Economy).costDiamond(e), c.default.report(e, c.default.SOURCE_RELIVE_USE, c.default.ACTION_CONSUME_DIAMOND);
                        }),
                        (e.prototype.reviveByShare = function () {
                            this.mCurReviveCount++;
                        }),
                        (e.prototype.reviveByVideo = function (e) {
                            this.updateCurReviveCount(), e && this.saveTodayReviveWithPropInfo();
                        }),
                        (e.prototype.saveTodayReviveWithPropInfo = function () {
                            var e = new Date().getTime();
                            g.default.save(_.default.LAST_WATCH_VIDEO_WITH_PROP_RELIVE_TIME, e + '');
                        }),
                        (e.prototype.saveTodayRecordInfo = function (e) {
                            void 0 === e && (e = h.RESULT_CAN_NOT_REVIVE);
                            var t = parseInt(g.default.read(_.default.LAST_SHARE_RELIVE_TIME)),
                                i = a.default.formatDate(t),
                                o = new Date().getTime();
                            if (i != a.default.formatDate(o)) g.default.save(_.default.TODAY_SHARE_RELIVE_COUNT, '1');
                            else {
                                var n = parseInt(g.default.read(_.default.TODAY_SHARE_RELIVE_COUNT)) + 1;
                                g.default.save(_.default.TODAY_SHARE_RELIVE_COUNT, n + '');
                            }
                            g.default.save(_.default.LAST_SHARE_RELIVE_TIME, o + '');
                        }),
                        (e.prototype.isFirstShareRelive = function () {
                            var e = !1;
                            return g.default.read(_.default.RELIVE_SHARE_FIRST_TIME) || (e = !0), e;
                        }),
                        (e.prototype.reliveFirstShare = function () {
                            g.default.save(_.default.RELIVE_SHARE_FIRST_TIME, 'true');
                        }),
                        (e.prototype.getReliveBtnText = function () {
                            var e = l.MGUser.getCurrentServerTime();
                            a.default.formatDate(e);
                            return p.default.getInstance().isEnglish() ? 'invite friends ' : '发起助力';
                        }),
                        (e.prototype.getReliveTipsText = function () {
                            var e = l.MGUser.getCurrentServerTime();
                            a.default.formatDate(e);
                            return p.default.getInstance().isEnglish() ? 'can invite %s friends ' : '今天还可助力%s次';
                        }),
                        (e.MAX_SHARE_COUNT = 3),
                        (e.MAX_REVIVE_COUNT = 3),
                        (e.MAX_SHARE_GAIN_GOLD_COUNT = 3),
                        (e.RESULT_CAN_NOT_REVIVE = 0),
                        (e.RESULT_REVIVE_ONLY_SHARE = 1),
                        (e.RESULT_REVIVE_SHARE_AND_DIAMOND = 2),
                        (e.RESULT_REVIVE_VIDEO_AND_DIAMOND = 3),
                        (e.RESULT_REVIVE_SHARE_AND_VIDEO = 4),
                        (e.RESULT_REVIVE_FREE = 5),
                        (e.RESULT_REVIVE_VIDEO_AND_PROPS_AND_DIAMOND = 6),
                        (e.RESULI_RELIVE_CM = 7),
                        (e.CHALLENGE_DEFAULT = 0),
                        (e.CHALLENGE_NO_FULL_CORWN = 1),
                        (e.CHALLENGE_GOT_FULL_CORWN = 2),
                        (e.CHALLENGE_FIRST_PLACE = 3),
                        (e.CHALLENGE_NO_FULL_STAR = 4),
                        (e.CHALLENGE_FULL_STAR_NO_FULL_CORWN = 5),
                        (e.TYPE_CROWN_OR_STAR = 1),
                        (e.TYPE_RANK = 2),
                        (e.TYPE_BEYOND_FRD = 3),
                        (e.TYPE_NEWRECORD = 4),
                        (e.TYPE_IMMEDIATE_REVIVE = 5),
                        (e = h = __decorate([E], e))
                    );
                })();
                (i.default = A), cc._RF.pop();
            },
            {
                '../../../modules/MGAdv/scripts/Logic/MGAdvDefine': 'MGAdvDefine',
                '../../../modules/MGAdv/scripts/Logic/MGAdvEntrance': 'MGAdvEntrance',
                '../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../../scripts/util/Utility': 'Utility',
                '../../base/G': 'G',
                '../../base/Log': 'Log',
                '../../config/LSKey': 'LSKey',
                '../../gamescene/GameSceneSetting': 'GameSceneSetting',
                '../../infoc/m_p2_PData_Dia': 'm_p2_PData_Dia',
                '../../property/PropertyDefines': 'PropertyDefines',
                '../../util/PU': 'PU',
                '../../util/TimeUtil': 'TimeUtil',
                '../Logic/I18nManager': 'I18nManager',
                '../Logic/PlayerMgr': 'PlayerMgr',
                '../Logic/Plugin/IPlugin': 'IPlugin',
                '../Logic/Plugin/PluginMgr': 'PluginMgr',
                '../Network/Protocol/StorageUtil': 'StorageUtil',
                '../reward/RewardManager': 'RewardManager',
            },
        ],
        RewardBeans: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '6fb42m9t2ZC0ItCSbNZP+uL', 'RewardBeans'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {}
                    return (e.HELP_REWARD_DIAMOND = 2), (e.SURPRISE_GIFT_STAMINA = 8), (e.SURPRISE_GIFT_DIAMOND = 8), (e.SURPRISE_GIFT_GOLD = 188), (e.INVITE_PEOPLE_MAX_NUM = 5), (e.INVITE_PEOPLE_MAX_NUM_QQ = 2), (e.BE_INVITE_PEOPLE_MAX_NUM = 5), (e.STATE_INVITE_SUCCESS = 1), (e.STATE_NOT_INVITE = 0), (e.inviteInfoInviterMax = 'inviter max'), (e.inviteInfoInviteeMax = 'invitee max'), (e.inviteInfoRepeat = 'repeat'), e;
                })();
                i.ConstantConfig = o;
                var n = (function () {
                    function e() {
                        (this.staminaNum = o.SURPRISE_GIFT_STAMINA), (this.diamondNum = o.SURPRISE_GIFT_DIAMOND), (this.goldNum = o.SURPRISE_GIFT_GOLD), (this.isEnable = !0), (this.hasConsume = !1), (this.skinID = null);
                    }
                    return (
                        (e.prototype.toString = function () {
                            return this.isEnable ? 'true' : 'false';
                        }),
                        (e.prototype.parseFrom = function (e) {
                            this.isEnable = 'true' === e;
                        }),
                        e
                    );
                })();
                i.SurpriseGiftBox = n;
                var a = (function () {
                    function e() {
                        (this.beInvitedOpenId = ''), (this.isConsume = !1), (this.state = o.STATE_INVITE_SUCCESS), (this.isNewUser = !1), (this.userAvatarUrl = ''), (this.userNickName = '');
                    }
                    return (
                        (e.prototype.toString = function () {
                            return this.beInvitedOpenId + '+' + this.isConsume + '+' + this.state + '+' + this.isNewUser + '+' + this.diamondNum + '+' + this.userAvatarUrl + '+' + this.userNickName;
                        }),
                        (e.prototype.parseFrom = function (e) {
                            if (null != e) {
                                var t = e.split('+');
                                if (null != t && null != t && 0 != t.length)
                                    if (t.length < 7) console.error('InviteRewardInfo parseFrom 解析错误 => values`s lenght is incorrect, length should be 7 current length = ' + t.length);
                                    else
                                        try {
                                            (this.beInvitedOpenId = t[0]), (this.isConsume = 'true' === t[1]), (this.state = parseInt(t[2])), (this.isNewUser = 'true' === t[3]), (this.diamondNum = parseInt(t[4])), (this.userAvatarUrl = t[5]), (this.userNickName = t[6]);
                                        } catch (e) {
                                            console.error('InviteRewardInfo parseFrom 解析错误!'), console.error(e);
                                        }
                                else console.error('InviteRewardInfo parseFrom 解析错误 => values is null or lenght is 0');
                            }
                        }),
                        e
                    );
                })();
                i.InviteRewardInfo = a;
                var r = function () {
                    (this.userNickName = ''), (this.diamondNum = o.HELP_REWARD_DIAMOND), (this.remainingHelpNum = 0), (this.alsoHelpNum = 0);
                };
                (i.HelpRewardInfo = r), cc._RF.pop();
            },
            {},
        ],
        RewardManager: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'deaaaCUaoRBT6mwnl+ca1rd', 'RewardManager'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var s = e('./RewardBeans'),
                    c = e('../Network/Protocol/StorageUtil'),
                    l = e('../../config/LSKey'),
                    a = e('./RewardRequester'),
                    u = e('../Logic/InviteAwardManager'),
                    d = e('../../util/StringUtil'),
                    n = e('../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    p = e('../../base/Log'),
                    o = (function () {
                        function r() {
                            (this.mInviteDate = ''), (this.mInviteRewardInfoList = []), (this.mSurpriseGiftBoxArray = new Array()), (this.mHelpRewardInfo = new s.HelpRewardInfo()), this.initFromCache();
                        }
                        return (
                            (r.Ins = function () {
                                return null == this.sInstance && (this.sInstance = new r()), this.sInstance;
                            }),
                            (r.prototype.initFromCache = function () {
                                var i = this;
                                this.mInviteDate = c.default.read(l.default.INVITE_DATE);
                                var e = c.default.read(l.default.SURPRISE_GIFT_BOX);
                                if (d.StringUtil.isEmpty(e)) for (o = 0; o < 5; o++) this.mSurpriseGiftBoxArray.push(new s.SurpriseGiftBox());
                                else {
                                    var t = this.parseToObject(e);
                                    if (null != t && null != t) this.mSurpriseGiftBoxArray = t;
                                    else for (var o = 0; o < 5; o++) this.mSurpriseGiftBoxArray.push(new s.SurpriseGiftBox());
                                }
                                var n = c.default.read(l.default.INVITE_REWARD_INFO_LIST);
                                if (n) {
                                    var a = n.split(r.SEPERATE_STR);
                                    a &&
                                        (a.forEach(function (e) {
                                            var t = new s.InviteRewardInfo();
                                            t.parseFrom(e), i.mInviteRewardInfoList.push(t);
                                        }),
                                        p.default.l('[RewardManager] 缓存读取出来邀请过的数据 => ', this.mInviteRewardInfoList));
                                }
                            }),
                            (r.prototype.updateInviteListFileCache = function () {
                                for (var e = '', t = 0; t < this.mInviteRewardInfoList.length; t++) {
                                    (e += this.mInviteRewardInfoList[t].toString()), t != this.mInviteRewardInfoList.length - 1 && (e += r.SEPERATE_STR);
                                }
                                c.default.save(l.default.INVITE_REWARD_INFO_LIST, e), p.default.l('[RewardManager] 更新邀请列表数据到本地缓存 => ' + e);
                            }),
                            (r.prototype.updateInviteDateFileCache = function () {
                                c.default.save(l.default.INVITE_DATE, this.mInviteDate), p.default.l('[RewardManager] 更新邀请日期到本地缓存 => ' + this.mInviteDate);
                            }),
                            (r.prototype.updateGiftBoxFileCache = function () {
                                var e = this.parseToString(this.mSurpriseGiftBoxArray);
                                c.default.save(l.default.SURPRISE_GIFT_BOX, e), p.default.l('[RewardManager] 更新礼盒信息到本地缓存 => ' + e);
                            }),
                            (r.prototype.clearAllData = function () {
                                (this.mInviteDate = ''),
                                    (this.mInviteRewardInfoList = []),
                                    this.mSurpriseGiftBoxArray.forEach(function (e) {
                                        e.isEnable = !0;
                                    });
                            }),
                            (r.prototype.getCacheInviteRewardList = function () {
                                return this.mInviteRewardInfoList;
                            }),
                            (r.prototype.getInviteRewardList = function (n) {
                                var a = this;
                                n &&
                                    this.getInviteSuccessListComplete(function (e) {
                                        if (!e) return console.error('[RewardManager] getInviteRewardList 服务器返回列表为空'), void n(a.mInviteRewardInfoList);
                                        var t = a.mInviteRewardInfoList.slice(0);
                                        a.mInviteRewardInfoList.splice(0, a.mInviteRewardInfoList.length), p.default.l('[RewardManager] getInviteRewardList 邀请人 => ', e);
                                        for (var i = 0; i < e.length; i++) {
                                            var o = e[i];
                                            (o.isConsume = a.isComsume(t, o)), a.mInviteRewardInfoList.push(o);
                                        }
                                        n(a.mInviteRewardInfoList);
                                    });
                            }),
                            (r.prototype.isComsume = function (e, t) {
                                for (var i = !1, o = 0; o < e.length; o++)
                                    if (t.beInvitedOpenId == e[o].beInvitedOpenId) {
                                        1 == e[o].isConsume && (i = !0);
                                        break;
                                    }
                                return i;
                            }),
                            (r.prototype.cosumeInviteRewardInfo = function (e) {
                                if (this.mInviteRewardInfoList) {
                                    for (var t = 0; t < this.mInviteRewardInfoList.length; t++) {
                                        var i = this.mInviteRewardInfoList[t];
                                        i.beInvitedOpenId === e.beInvitedOpenId && ((i.isConsume = !0), p.default.l('[RewardManager] cosumeInviteRewardInfo 消费掉奖励 => ', i));
                                    }
                                    this.updateInviteListFileCache();
                                } else console.error('[RewardManager] 当前邀请列表数据为空，理论上不应该出现，除非有地方置空');
                            }),
                            (r.prototype.getSurpriseGiftInfo = function (e) {
                                return this.getReward(e, this.mSurpriseGiftBoxArray[e]), this.mSurpriseGiftBoxArray[e];
                            }),
                            (r.prototype.getReward = function (e, t) {
                                var i,
                                    o = u.InviteAwardManager.getInstance().getInviteAwardVM();
                                switch (e) {
                                    case 0:
                                        i = 4;
                                        break;
                                    case 1:
                                        i = 8;
                                        break;
                                    case 2:
                                        i = 16;
                                        break;
                                    case 3:
                                        i = 32;
                                }
                                for (var n = 0; n < o.length; n++)
                                    if (o[n].type == i) {
                                        (t.diamondNum = o[n].diamonds), (t.staminaNum = o[n].power), (t.goldNum = o[n].coins);
                                        break;
                                    }
                            }),
                            (r.prototype.cosumeSurpriseGiftInfo = function (e, t) {
                                (this.mSurpriseGiftBoxArray[e].isEnable = !1), (this.mSurpriseGiftBoxArray[e].hasConsume = !0), p.default.l('[RewardManager] cosumeSurpriseGiftInfo 消费掉礼盒奖励，礼盒将变为不可用'), this.updateGiftBoxFileCache();
                            }),
                            (r.prototype.getCanAlsoInviteNumToday = function () {
                                return s.ConstantConfig.INVITE_PEOPLE_MAX_NUM - this.getInviteSuccessNumToday();
                            }),
                            (r.prototype.getCalAlsoInviteNumTodayForQQRelive = function () {
                                return s.ConstantConfig.INVITE_PEOPLE_MAX_NUM_QQ - this.getInviteSuccessNumToday();
                            }),
                            (r.prototype.getInviteSuccessNumToday = function () {
                                return this.getInviteSuccessNumTodayWX();
                            }),
                            (r.prototype.getInviteSuccessNumTodayQQ = function () {
                                var e = c.default.read(l.default.QQ_SHARE_RELIVE_CHECK_TIME);
                                if ((p.default.l('[reliveManger] inviteCheckTime :' + e), d.StringUtil.isEmpty(e))) return c.default.save(l.default.QQ_SHARE_RELIVE_CHECK_TIME, n.MGUser.getCurrentServerTime().toString()), c.default.save(l.default.QQ_SHARE_RELIVE_SUCC_TIMES, '0'), p.default.l('[reliveManger] getInviteSuccessNumTodayQQ return : 0'), 0;
                                var t = new Date(e),
                                    i = new Date(n.MGUser.getCurrentServerTime());
                                if (i.getFullYear() > t.getFullYear() || (i.getFullYear() >= t.getFullYear() && i.getMonth() > t.getMonth()) || (i.getFullYear() >= t.getFullYear() && i.getMonth() >= t.getMonth() && i.getDay() > t.getDay())) return c.default.save(l.default.QQ_SHARE_RELIVE_CHECK_TIME, n.MGUser.getCurrentServerTime().toString()), c.default.save(l.default.QQ_SHARE_RELIVE_SUCC_TIMES, '0'), p.default.l('[reliveManger] getInviteSuccessNumTodayQQ return : 0'), 0;
                                var o = c.default.read(l.default.QQ_SHARE_RELIVE_SUCC_TIMES);
                                return d.StringUtil.isEmpty(o) ? (c.default.save(l.default.QQ_SHARE_RELIVE_SUCC_TIMES, '0'), p.default.l('[reliveManger] getInviteSuccessNumTodayQQ return : 0'), 0) : (p.default.l('[reliveManger] getInviteSuccessNumTodayQQ return : ' + parseInt(o)), parseInt(o));
                            }),
                            (r.prototype.getInviteSuccessNumTodayWX = function () {
                                return this.mInviteRewardInfoList.length;
                            }),
                            (r.prototype.getCanAlsoHelpNumToday = function () {
                                return this.mHelpRewardInfo.remainingHelpNum;
                            }),
                            (r.prototype.getHelpSuccessNumToday = function () {
                                return this.mHelpRewardInfo.alsoHelpNum;
                            }),
                            (r.prototype.acceptInvite = function (e, i) {
                                var o = this;
                                i &&
                                    (console.log('[RewardManager] acceptInvite 被邀请者点击分享的卡片接受邀请'),
                                    e || console.error('[RewardManager] acceptInvite 传入邀请者的openid为空'),
                                    a.RewardRequester.reportShare(
                                        e,
                                        function (e, t) {
                                            e ? ((t.remainingHelpNum = s.ConstantConfig.BE_INVITE_PEOPLE_MAX_NUM - t.alsoHelpNum), (o.mHelpRewardInfo = t), p.default.l('[RewardManager] acceptInvite 帮助信息 => ', o.mHelpRewardInfo), i(t.isValid, o.mHelpRewardInfo)) : (console.error('[RewardManager] acceptInvite 网络请求错误了'), i(!1, null));
                                        },
                                        s.ConstantConfig.INVITE_PEOPLE_MAX_NUM,
                                        s.ConstantConfig.BE_INVITE_PEOPLE_MAX_NUM,
                                    ));
                            }),
                            (r.prototype.getInviteSuccessListComplete = function (o) {
                                var n = this;
                                o &&
                                    (p.default.l('[RewardManager] 从服务器获取全量邀请成功列表'),
                                    a.RewardRequester.queryShare(function (e, t, i) {
                                        e ? (n.mInviteDate != t && (p.default.l('[RewardManager] 本地日期与服务器日期不相等，清空本地缓存数据 => 本地日期: ' + n.mInviteDate + ' 服务端返回日期: ' + t), n.clearAllData(), (n.mInviteDate = t), n.updateInviteDateFileCache(), n.updateGiftBoxFileCache(), n.updateInviteListFileCache()), o(i)) : (console.error('[RewardManager] acceptInvite 网络请求错误了'), o(null));
                                    }));
                            }),
                            (r.prototype.showRedSpot = function () {
                                var e = 0 < s.ConstantConfig.INVITE_PEOPLE_MAX_NUM - this.getInviteSuccessNumToday(),
                                    t = !1;
                                return (
                                    this.mSurpriseGiftBoxArray.forEach(function (e) {
                                        e.isEnable && 0 == e.hasConsume && (t = !0);
                                    }),
                                    e || t
                                );
                            }),
                            (r.prototype.getInviteeCount = function (t) {
                                var i = this;
                                this.getInviteSuccessListComplete(function (e) {
                                    e ? (20 <= e.length ? t(0) : t(s.ConstantConfig.INVITE_PEOPLE_MAX_NUM - e.length)) : t(s.ConstantConfig.INVITE_PEOPLE_MAX_NUM - i.getInviteSuccessNumToday());
                                });
                            }),
                            (r.prototype.parseToObject = function (e) {
                                var t = JSON.parse(e);
                                if (t instanceof Array) return t;
                            }),
                            (r.prototype.parseToString = function (e) {
                                if (e) return JSON.stringify(e);
                            }),
                            (r.SEPERATE_STR = '&#&'),
                            (r.sInstance = null),
                            r
                        );
                    })();
                (i.RewardMgr = o), cc._RF.pop();
            },
            {
                '../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../base/Log': 'Log',
                '../../config/LSKey': 'LSKey',
                '../../util/StringUtil': 'StringUtil',
                '../Logic/InviteAwardManager': 'InviteAwardManager',
                '../Network/Protocol/StorageUtil': 'StorageUtil',
                './RewardBeans': 'RewardBeans',
                './RewardRequester': 'RewardRequester',
            },
        ],
        RewardRequester: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'edad8YK/91PrJBvn3E2xOHH', 'RewardRequester'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var c = e('./RewardBeans'),
                    n = e('../Logic/InviteAwardManager'),
                    o = (function () {
                        function e() {}
                        return (
                            (e.reportShare = function (e, s, t, i) {
                                cmg.platform.reportShare(
                                    e,
                                    function (e, t, i, o, n, a) {
                                        if ((console.log('[cmg] reportShare isValid: ' + t + ',msg: ' + i + ',count: ' + o + ', inviter_nickname：' + n), e)) {
                                            var r = new c.HelpRewardInfo();
                                            (r.alsoHelpNum = o), (r.userNickName = n), (r.isValid = t), (r.msg = i), s(e, r);
                                        } else s(e, null);
                                    },
                                    t,
                                    i,
                                );
                            }),
                            (e.queryShare = function (r) {
                                var s = this;
                                cmg.platform.queryShare(function (e, t, i) {
                                    var o = new Array();
                                    if ((console.log('[cmg] result: ' + e + ', invitee_date: ' + t), console.log(i), e)) {
                                        for (var n = 0; n < i.length; n++) {
                                            var a = new c.InviteRewardInfo();
                                            (a.userNickName = i[n].nickname), (a.userAvatarUrl = i[n].avatar_url), (a.beInvitedOpenId = i[n].invitee_playerid), (a.isNewUser = i[n].is_new_player), (a.diamondNum = s.getConfigReward(a.isNewUser)), o.push(a);
                                        }
                                        r(e, t, o);
                                    } else r(e, t, null);
                                });
                            }),
                            (e.getConfigReward = function (e) {
                                for (var t = n.InviteAwardManager.getInstance().getInviteAwardVM(), i = e ? 2 : 1, o = 0; o < t.length; o++) if (t[o].type == i) return console.log('奖励钻石数量：' + t[o].diamonds), t[o].diamonds;
                            }),
                            e
                        );
                    })();
                (i.RewardRequester = o), cc._RF.pop();
            },
            {
                '../Logic/InviteAwardManager': 'InviteAwardManager',
                './RewardBeans': 'RewardBeans',
            },
        ],
        RobotBattleGameSceneViewImpl: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'e5d2bHuXrFFrJyY3MGD+b6r', 'RobotBattleGameSceneViewImpl'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {}
                    return (e.prototype.showOpponentSkinTips = function (e) {}), (e.prototype.showEnemyOfflineTips = function (e) {}), (e.prototype.create = function (e) {}), (e.prototype.destroy = function () {}), (e.prototype.updatePropertyIconPanel = function (e, t) {}), (e.prototype.updatePropertyIconPanelSingle = function (e, t, i) {}), (e.prototype.propertyStart = function (e, t) {}), (e.prototype.propertyEnd = function (e, t) {}), (e.prototype.showFog = function (e) {}), (e.prototype.showWaittingLabel = function (e) {}), (e.prototype.updateWaitingLabel = function (e) {}), (e.prototype.updateHeadNodeEnergy = function (e, t) {}), (e.prototype.updateHeadNodeFever = function (e, t, i, o) {}), (e.prototype.showBeginningCountDownLabel = function (e) {}), (e.prototype.updateBeginningCountDownLabel = function (e) {}), (e.prototype.showBeginningReady = function (e, t) {}), (e.prototype.showBeginningGo = function (e, t) {}), (e.prototype.showPlayingCountDownLabel = function (e) {}), (e.prototype.updatePlayingCountDownLabel = function (e) {}), (e.prototype.showPlayingTimeup = function (e, t) {}), (e.prototype.updateHeadNodeScoreText = function (e, t) {}), (e.prototype.updateHeadNodeStateText = function (e, t, i) {}), (e.prototype.showMissBackground = function (e, t) {}), (e.prototype.updateHeadNodeComboText = function (e, t) {}), (e.prototype.displayReleasePropertyAction = function (e, t, i, o) {}), (e.prototype.displaySufferPropertyAction = function (e, t, i) {}), (e.prototype.displayProtectPropertyAction = function (e, t, i) {}), (e.prototype.displayMissingEffect = function (e, t) {}), e;
                })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        RobotFightData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'ff391xiBUNPB4TlSUlLeGu7', 'RobotFightData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = e('./BaseCsvFile'),
                    a = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.findId = function (e) {
                                return this.find('id', e);
                            }),
                            (t.prototype.getRow = function () {
                                return new s();
                            }),
                            t
                        );
                    })(n.default);
                i.RobotFightData = a;
                var r = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.findId = function (e) {
                            return this.find('id', e);
                        }),
                        (t.prototype.getRow = function () {
                            return new c();
                        }),
                        t
                    );
                })(n.default);
                i.HardRobotData = r;
                var s = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getID = function () {
                            return this.getInt('id');
                        }),
                        (t.prototype.getState = function () {
                            return this.getInt('rank_lv');
                        }),
                        (t.prototype.getRandRate = function () {
                            return this.getFloat('percent');
                        }),
                        (t.prototype.getSpeedRange = function () {
                            return this.getString('song_speed');
                        }),
                        (t.prototype.getSongSpeed = function () {
                            return this.getString('miss');
                        }),
                        (t.prototype.getMissCount = function () {
                            return this.getInt('miss_num');
                        }),
                        (t.prototype.getItemMissRate = function () {
                            return this.getString('tools_miss');
                        }),
                        (t.prototype.getLongUnfinishRate = function () {
                            return this.getString('long_finish');
                        }),
                        t
                    );
                })(o.default);
                i.RobotFightRow = s;
                var c = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getID = function () {
                            return this.getInt('id');
                        }),
                        (t.prototype.getStateArea = function () {
                            return this.getString('rankArea');
                        }),
                        (t.prototype.getWinNum = function () {
                            return this.getFloat('winNum');
                        }),
                        (t.prototype.getMissRate = function () {
                            return this.getFloat('missNro');
                        }),
                        (t.prototype.getMissLimitRate = function () {
                            return this.getFloat('missLim');
                        }),
                        (t.prototype.getMissLongfinishRate = function () {
                            return this.getFloat('missLong');
                        }),
                        (t.prototype.getMissItemRate = function () {
                            return this.getFloat('missItem');
                        }),
                        t
                    );
                })(o.default);
                (i.HardRobotRow = c), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        RowNode: [
            function (e, t, i) {
                'use strict';
                var o;
                cc._RF.push(t, '7c77e7BCBpNJ4Ln0ViAX4Th', 'RowNode'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    ((o = i.RowType || (i.RowType = {}))[(o.UNKNOW = 0)] = 'UNKNOW'),
                    (o[(o.INSTRUTION = 1)] = 'INSTRUTION'),
                    (o[(o.NORMAL = 2)] = 'NORMAL'),
                    (o[(o.BOMB = 3)] = 'BOMB'),
                    (o[(o.MIST = 4)] = 'MIST'),
                    (o[(o.LONGROW = 5)] = 'LONGROW'),
                    (o[(o.BIGBLOCK = 6)] = 'BIGBLOCK'),
                    (o[(o.DOUBLEBLACK = 7)] = 'DOUBLEBLACK'),
                    (o[(o.HEAVYTUNE = 8)] = 'HEAVYTUNE'),
                    (o[(o.ACCOMPNY = 9)] = 'ACCOMPNY'),
                    (o[(o.TILTACCOMPNY = 10)] = 'TILTACCOMPNY'),
                    (o[(o.FIXEDTILTACCOMPNY = 11)] = 'FIXEDTILTACCOMPNY'),
                    (o[(o.BOUNUS_ROW_GOLD = 12)] = 'BOUNUS_ROW_GOLD'),
                    (o[(o.BOUNUS_ROW_HEART = 13)] = 'BOUNUS_ROW_HEART'),
                    (o[(o.BOUNUS_ROW_DIAMOND = 14)] = 'BOUNUS_ROW_DIAMOND'),
                    (o[(o.BOUNUS_ROW_EGGS = 15)] = 'BOUNUS_ROW_EGGS'),
                    (o[(o.BOUNUS_ROW_NORMAL_CHEST = 16)] = 'BOUNUS_ROW_NORMAL_CHEST'),
                    (o[(o.BOUNUS_ROW_MUSIC_CHEST = 17)] = 'BOUNUS_ROW_MUSIC_CHEST'),
                    cc._RF.pop();
            },
            {},
        ],
        SUtil: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '78f48N+VT9J+oNFVqUezlna', 'SUtil'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {
                        var e = cc.director.getWinSize();
                        (this.mScreenHeight = e.height), (this.mScreenWidth = e.width), (this.mScreenRatio = e.height / e.width);
                    }
                    return (
                        (e.ins = function () {
                            return this.mInstance || (this.mInstance = new e()), this.mInstance;
                        }),
                        (e.prototype.isQuanMian = function () {
                            return 1.789 < this.mScreenRatio && this.mScreenRatio < 19 / 9;
                        }),
                        (e.prototype.isEqual19_9 = function () {
                            return this.mScreenRatio == 19 / 9;
                        }),
                        (e.prototype.isLiuHai = function () {
                            return this.mScreenRatio >= 19 / 9;
                        }),
                        (e.prototype.isLiuHai4QQ = function () {
                            return console.log('[MGB_DEBUG] mScreenRatio:' + e.ins().mScreenRatio), this.mScreenRatio >= 39 / 19;
                        }),
                        (e.prototype.isPuTong = function () {
                            return this.mScreenRatio <= 1.789;
                        }),
                        (e.prototype.isShortScreen = function () {
                            return this.mScreenRatio <= 1.55;
                        }),
                        (e.prototype.toRightByPx = function (e, t) {
                            var i = e.getComponent(cc.Widget);
                            (i.isAlignRight = !0), (i.right = t);
                        }),
                        (e.prototype.toLeft = function (e, t) {
                            var i = e.getComponent(cc.Widget);
                            (i.isAlignLeft = !0), (i.left = (t * this.mScreenWidth) / 100);
                        }),
                        (e.prototype.toLeftByPx = function (e, t) {
                            var i = e.getComponent(cc.Widget);
                            (i.isAlignLeft = !0), (i.left = t);
                        }),
                        (e.prototype.toTop = function (e, t) {
                            var i = e.getComponent(cc.Widget);
                            (i.isAlignTop = !0), (i.top = (t * this.mScreenHeight) / 100);
                        }),
                        (e.prototype.setNodeWidgetToTop = function (e, t) {
                            var i = e.getComponent(cc.Widget);
                            (i.isAlignTop = !0), (i.top = (t * this.mScreenHeight) / 100);
                        }),
                        (e.prototype.updateWidget = function (e) {
                            e.getComponent(cc.Widget).updateAlignment();
                        }),
                        (e.prototype.toTopByPx = function (e, t) {
                            var i = e.getComponent(cc.Widget);
                            (i.isAlignTop = !0), (i.top = t);
                        }),
                        (e.prototype.toBottomByPx = function (e, t) {
                            var i = e.getComponent(cc.Widget);
                            (i.isAlignBottom = !0), (i.bottom = t);
                        }),
                        (e.prototype.toBottomByPercent = function (e, t) {
                            var i = e.getComponent(cc.Widget);
                            (i.isAlignBottom = !0), (i.bottom = (t * this.mScreenHeight) / 100);
                        }),
                        (e.prototype.toTopByPixel = function (e, t) {
                            void 0 === t && (t = 0);
                            var i = e.getComponent(cc.Widget);
                            (i.isAlignTop = !0), (i.top = t);
                        }),
                        (e.prototype.toTopWithOffset = function (e, t, i) {
                            void 0 === i && (i = 0);
                            var o = cc.director.getWinSize().height,
                                n = e.getComponent(cc.Widget);
                            (n.isAlignTop = !0), (n.top = (t * o) / 100 + i);
                        }),
                        (e.prototype.getChlidViewPositionInScreen = function (e, t) {
                            if (!e.parent) return new cc.Vec2(0, 0);
                            var i = e.parent.convertToWorldSpaceAR(e.position);
                            return t.convertToNodeSpaceAR(i);
                        }),
                        (e.mInstance = null),
                        e
                    );
                })();
                (i.SUtil = o), cc._RF.pop();
            },
            {},
        ],
        SaveSuccessPrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'ac6e00OHPFMYJUoxAAXhxo7', 'SaveSuccessPrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../UI/GameEntraScene/BasicTouchEvent'),
                    n = cc._decorator,
                    a = n.ccclass,
                    r = n.property,
                    s = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.close_btn = null), (e.saveTips = null), (e.mCloseBtnClickCallback = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.setCloseCallback = function (e) {
                                this.mCloseCallback = e;
                            }),
                            (e.prototype.onLoad = function () {
                                this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                }),
                                    this.initEvent();
                            }),
                            (e.prototype.initEvent = function () {
                                var e = this;
                                (this.mCloseBtnClickCallback = new o.default(function () {
                                    e.closeBtnClick();
                                })),
                                    this.close_btn.node.on(cc.Node.EventType.TOUCH_END, this.mCloseBtnClickCallback.click, this.mCloseBtnClickCallback);
                            }),
                            (e.prototype.start = function () {
                                this.node.getComponent(cc.Animation).play('save_success'), this.tips && '' != this.tips && (this.saveTips.string = this.tips);
                            }),
                            (e.prototype.closeBtnClick = function () {
                                this.node.destroy(), this.mCloseCallback && this.mCloseCallback();
                            }),
                            (e.prototype.setTips = function (e) {
                                this.saveTips && (this.saveTips.string = e), (this.tips = e);
                            }),
                            __decorate([r(cc.Button)], e.prototype, 'close_btn', void 0),
                            __decorate([r(cc.Label)], e.prototype, 'saveTips', void 0),
                            (e = __decorate([a], e))
                        );
                    })(cc.Component);
                (i.default = s), cc._RF.pop();
            },
            {
                '../UI/GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
            },
        ],
        SceneMusicMgr: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'dc3c1ZIo/pAWomTo9/q9pKz', 'SceneMusicMgr'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('./SceneMusicUtil'),
                    o = (function () {
                        function e() {}
                        return (
                            (e.playStarOrCrownMusic = function (e, t) {
                                var i = this,
                                    o = '',
                                    n = '';
                                if (0 == t)
                                    switch (e) {
                                        case 0:
                                            (o = i.NAME_FAIL_PAGE), (n = i.PATH_FAIL_PAGE);
                                            break;
                                        case 1:
                                            (o = i.NAME_PASSPAGE_ONE), (n = i.PATH_PASSPAGE_ONE);
                                            break;
                                        case 2:
                                            (o = i.NAME_PASSPAGE_TWO), (n = i.PATH_PASSPAGE_TWO);
                                            break;
                                        case 3:
                                            (o = i.NAME_PASSPAGE_THREE), (n = i.PATH_PASSPAGE_THREE);
                                    }
                                else
                                    switch (t) {
                                        case 1:
                                            (o = i.NAME_ONE_CROWN), (n = i.PATH_ONE_CROWN);
                                            break;
                                        case 2:
                                            (o = i.NAME_TWO_CROWN), (n = i.PATH_TWO_CROWN);
                                            break;
                                        case 3:
                                            (o = i.NAME_THREE_CROWN), (n = i.PATH_THREE_CROWN);
                                    }
                                '' != o && a.default.play(o, n, 1, !1, !0);
                            }),
                            (e.stopStarOrCrownMusic = function (e, t) {
                                var i = '';
                                if (0 == t)
                                    switch (e) {
                                        case 0:
                                            i = this.NAME_FAIL_PAGE;
                                            break;
                                        case 1:
                                            i = this.NAME_PASSPAGE_ONE;
                                            break;
                                        case 2:
                                            i = this.NAME_PASSPAGE_TWO;
                                            break;
                                        case 3:
                                            i = this.NAME_PASSPAGE_THREE;
                                    }
                                else
                                    switch (t) {
                                        case 1:
                                            i = this.NAME_ONE_CROWN;
                                            break;
                                        case 2:
                                            i = this.NAME_TWO_CROWN;
                                            break;
                                        case 3:
                                            i = this.NAME_THREE_CROWN;
                                    }
                                '' != i && this.stop(i);
                            }),
                            (e.play = function (e, t, i) {
                                a.default.play(e, t, 1, i, !0);
                            }),
                            (e.stop = function (e) {
                                a.default.stop(e);
                            }),
                            (e.NAME_MOVIE_CYCLE = 'Movie_cycle'),
                            (e.PATH_MOVIE_CYCLE = 'resources/music/sceneMusic/Movie_cycle.mp3'),
                            (e.NAME_FAIL_PAGE = 'FailPage'),
                            (e.PATH_FAIL_PAGE = 'resources/music/sceneMusic/FailPage.mp3'),
                            (e.NAME_PASS_BACKGRIUND = 'PassBackground'),
                            (e.PATH_PASS_BACKGRIUND = 'resources/music/sceneMusic/Pass1.mp3'),
                            (e.NAME_PASSPAGE_ONE = 'PassPageOne'),
                            (e.PATH_PASSPAGE_ONE = 'resources/music/sceneMusic/PassPageOne.mp3'),
                            (e.NAME_PASSPAGE_TWO = 'PassPageTwo'),
                            (e.PATH_PASSPAGE_TWO = 'resources/music/sceneMusic/PassPageTwo.mp3'),
                            (e.NAME_PASSPAGE_THREE = 'PassPageThree'),
                            (e.PATH_PASSPAGE_THREE = 'resources/music/sceneMusic/PassPageThree.mp3'),
                            (e.NAME_ONE_CROWN = 'OneCrown'),
                            (e.PATH_ONE_CROWN = 'resources/music/sceneMusic/OneCrown.mp3'),
                            (e.NAME_TWO_CROWN = 'TwoCrown'),
                            (e.PATH_TWO_CROWN = 'resources/music/sceneMusic/TwoCrown.mp3'),
                            (e.NAME_THREE_CROWN = 'ThreeCrown'),
                            (e.PATH_THREE_CROWN = 'resources/music/sceneMusic/ThreeCrown.mp3'),
                            (e.NAME_NEW_BEST = 'NewBest'),
                            (e.PATH_NEW_BEST = 'resources/music/sceneMusic/NewBest.mp3'),
                            (e.NAME_SHORT = 'short'),
                            (e.PATH_SHORT = 'resources/music/sceneMusic/short.mp3'),
                            (e.NAME_UPGRADE_PAGE = 'UpgradePage'),
                            (e.PATH_UPGRADE_PAGE = 'resources/music/sceneMusic/UpgradePage.mp3'),
                            (e.NAME_BUY_DIAMOND = 'buyDiamond'),
                            (e.PATH_BUY_DIAMOND = 'resources/music/sceneMusic/buyDiamond.mp3'),
                            (e.NAME_BUY_LIFE = 'buyLife'),
                            (e.PATH_BUY_LIFE = 'resources/music/sceneMusic/buyLife.mp3'),
                            (e.NAME_BUY_GOLD = 'buyMoney'),
                            (e.PATH_BUY_GOLD = 'resources/music/sceneMusic/buyMoney.mp3'),
                            (e.NAME_CONSUME_LIFE = 'Life'),
                            (e.PATH_CONSUME_LIFE = 'resources/music/sceneMusic/Life.mp3'),
                            (e.NAME_MUSIC_LIST = 'Musiclist'),
                            (e.PATH_MUSIC_LIST = 'resources/music/sceneMusic/Musiclist.mp3'),
                            (e.NAME_LOTTERY_ROLLING_MOVE = 'RollingMove'),
                            (e.PATH_LOTTERY_ROLLING_MOVE = 'resources/music/sceneMusic/lottery/rolling_move.mp3'),
                            (e.NAME_MATCHING = 'MATCHING'),
                            (e.PATH_MATCHING = 'resources/music/sceneMusic/matching.mp3'),
                            (e.NAME_CUR_MUSIC = 'CUR_MUSIC'),
                            (e.PATH_CUR_MUSIC = 'resources/music/sceneMusic/cur_music.mp3'),
                            (e.NAME_ADD_STAR = 'ADD_STAR'),
                            (e.PATH_ADD_STAR = 'resources/music/sceneMusic/add_star.mp3'),
                            (e.NAME_MINS_STAR = 'MINS_STAR'),
                            (e.PATH_MINS_STAR = 'resources/music/sceneMusic/mins_star.mp3'),
                            (e.NAME_FIGHT_WIN = 'FIGHT_WIN'),
                            (e.PATH_FIGHT_WIN = 'resources/music/sceneMusic/fight_win.mp3'),
                            (e.NAME_FIGHT_LOSE = 'FIGHT_LOSE'),
                            (e.PATH_FIGHT_LOSE = 'resources/music/sceneMusic/fight_lose.mp3'),
                            (e.NAME_START_GO_NUMBER = 'start_go_1'),
                            (e.PATH_START_GO_NUMBER = 'resources/music/sceneMusic/start_go_1.mp3'),
                            (e.NAME_START_GO = 'start_go'),
                            (e.PATH_START_GO = 'resources/music/sceneMusic/start_go.mp3'),
                            (e.NAME_END_GO_NUMBER = 'end_go'),
                            (e.PATH_END_GO_NUMBER = 'resources/music/sceneMusic/end_go.mp3'),
                            (e.NAME_PROP_DROP = 'prop_drop'),
                            (e.PATH_PROP_DROP = 'resources/music/sceneMusic/prop_drop.mp3'),
                            (e.NAME_PROP_IN = 'prop_in'),
                            (e.PATH_PROP_IN = 'resources/music/sceneMusic/prop_in.mp3'),
                            (e.NAME_TIME_UP = 'TimeUp'),
                            (e.PATH_TIME_UP = 'resources/music/sceneMusic/TimeUp.mp3'),
                            (e.NAME_COUNT_DOWN = 'CountDown'),
                            (e.PATH_COUNT_DOWN = 'resources/music/sceneMusic/CountDown.mp3'),
                            (e.NAME_FANASTICAL = 'Fanastical'),
                            (e.PATH_FANASTICAL = 'resources/music/sceneMusic/Fanastical.mp3'),
                            (e.NAME_READY = 'Ready'),
                            (e.PATH_READY = 'resources/music/sceneMusic/Ready.mp3'),
                            e
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                './SceneMusicUtil': 'SceneMusicUtil',
            },
        ],
        SceneMusicUtil: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '8a603uwR/ZJMKtr8+68rKb2', 'SceneMusicUtil'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./Dictionary'),
                    n = e('../base/G'),
                    a = e('../music/MusicPlayer'),
                    l = e('./PU'),
                    u = e('../music/Adapter/QQBKAudioManager'),
                    r = (function () {
                        function e() {
                            (this.mBbtnBeats = ['c2', 'c2', 'g2', 'g2', 'a2', 'a2', 'g2', 'f2', 'f2', 'e2', 'e2', 'd2', 'd2', 'c2']), (this.mBtnBeatsIndex = 0), (this.mContextMap = new o.Dictionary());
                        }
                        return (
                            (e.prototype.playBtnBeats = function () {
                                var e = n.G.Ap.sound.getInstrumentFactory().get('piano').getBeat(this.mBbtnBeats[this.mBtnBeatsIndex]);
                                e && (a.default.playMusicBeat(e, 1, 1, 0), this.mBtnBeatsIndex++, this.mBtnBeatsIndex >= this.mBbtnBeats.length && (this.mBtnBeatsIndex = 0));
                            }),
                            (e.prototype.play = function (e, t, i, o, n) {
                                if ((void 0 === n && (n = !1), l.default.isQQ())) {
                                    var a = l.default.getResourcePath(t),
                                        r = u.default.getBKIns(n ? 0 : 1, a, !0 === o ? -1 : 0);
                                    this.mContextMap.put(e, r), r.startMusic();
                                } else {
                                    var s = cc.url.raw(t),
                                        c = cc.audioEngine.play(s, o, i);
                                    o && cc.audioEngine.setFinishCallback(c, function () {}), this.mContextMap.put(e, c);
                                }
                            }),
                            (e.prototype.stop = function (e) {
                                if (cc.sys.platform === cc.sys.QQ_PLAY) {
                                    var t = this.mContextMap.get(e);
                                    t && (t.stopMusic(), this.mContextMap.remove(e));
                                } else {
                                    var i = this.mContextMap.get(e);
                                    try {
                                        if (null != i) {
                                            cc.audioEngine.stop(i);
                                            this.mContextMap.remove(e);
                                        }
                                    } catch (e) {
                                        console.log('--- SceneMusicUtil stop error:---', e);
                                    }
                                }
                            }),
                            e
                        );
                    })(),
                    s = (function () {
                        function e() {}
                        return (
                            (e.playBtnBeats = function () {
                                this.ins.playBtnBeats();
                            }),
                            (e.play = function (e, t, i, o, n) {
                                void 0 === n && (n = !1), this.ins.play(e, t, i, o, n);
                            }),
                            (e.stop = function (e) {
                                this.ins.stop(e);
                            }),
                            (e.ins = new r()),
                            e
                        );
                    })();
                (i.default = s), cc._RF.pop();
            },
            {
                '../base/G': 'G',
                '../music/Adapter/QQBKAudioManager': 'QQBKAudioManager',
                '../music/MusicPlayer': 'MusicPlayer',
                './Dictionary': 'Dictionary',
                './PU': 'PU',
            },
        ],
        ScoreAnimation: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '7782fd5JipFb63iCUNe+AWf', 'ScoreAnimation'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../component/MUINumber'),
                    n = e('../../animation/action/MScaleTo'),
                    a = e('../../animation/action/MSequence'),
                    r = e('../../GameBus'),
                    s = e('../loader/NumberFrameLoader'),
                    c = (function () {
                        function e(e, t) {
                            (this.mScoreNormalScale = -1), (this.mScoreMaxScale = -1), (this.mNotShowScore = !1), (this.mLabelAnim = null), (this.mScoreDataNode = new o.default(s.default.getInstance().getAtlas(), 4)), this.mScoreDataNode.setCenterNumber(!0), this.mScoreDataNode.setNumberColor(o.NumberColor.RED), this.mScoreDataNode.setPositionX(e.width / 2), this.mScoreDataNode.setContentSize(0, 109), this.setPositionY(e.height - 81), this.setScale(0.78), t.addChild(this.mScoreDataNode), this.updateScale();
                        }
                        return (
                            (e.prototype.setPositionY = function (e) {
                                this.mScoreDataNode.setPositionY(e - 109);
                            }),
                            (e.prototype.setScale = function (e) {
                                this.mScoreDataNode.setScale(e), this.updateScale();
                            }),
                            (e.prototype.updateScale = function () {
                                (this.mScoreNormalScale = this.mScoreDataNode.getScale()), (this.mScoreMaxScale = 1.08 * this.mScoreNormalScale);
                            }),
                            (e.prototype.setScoreAnimationShow = function (e) {
                                this.mScoreDataNode.setVisible(e), (this.mNotShowScore = !e);
                            }),
                            (e.prototype.showAttainScoreAnimation = function (e) {
                                if (!this.mNotShowScore) {
                                    if ((this.mScoreDataNode.setVisible(!0), this.mScoreDataNode.setNumberValue(e), !this.mLabelAnim)) {
                                        var t = new n.default(this.mScoreMaxScale, this.mScoreMaxScale, 0.1),
                                            i = new n.default(this.mScoreNormalScale, this.mScoreNormalScale, 0.1),
                                            o = new a.default(t, i);
                                        this.mLabelAnim = o;
                                    }
                                    this.mLabelAnim.getTarget() == this.mScoreDataNode || r.default.getInstance().animationMgr.runAction(this.mScoreDataNode, this.mLabelAnim);
                                }
                            }),
                            e
                        );
                    })();
                (i.default = c), cc._RF.pop();
            },
            {
                '../../GameBus': 'GameBus',
                '../../animation/action/MScaleTo': 'MScaleTo',
                '../../animation/action/MSequence': 'MSequence',
                '../component/MUINumber': 'MUINumber',
                '../loader/NumberFrameLoader': 'NumberFrameLoader',
            },
        ],
        ScoreManagerProxy: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '190cbfhvxNPkJK2ZOMreAtr', 'ScoreManagerProxy'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../PlatformProxy'),
                    r = e('../../base/Log'),
                    n = e('../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    s = e('../../../modules/MGUtils/TypeDefinition'),
                    c = e('../../../modules/MGUtils/NetworkUtils'),
                    l = e('../../../modules/MGCloudStorage/scripts/Logic/MGCloudStorageEntrance'),
                    u = e('../../business/keypad/KeypadUtil'),
                    a = (function () {
                        function a(e, t, i, o) {
                            (this.mPlayerId = e), (this.mToken = t), (this.mGameId = i), (this.mIsDebug = o);
                        }
                        return (
                            (a.prototype.getLaunchOption = function () {
                                return o.default.Ins().getLaunchParameter();
                            }),
                            (a.prototype.getPlayInfo = function (t) {
                                r.default.l('[ScoreManagerProxy]::getPlayInfo start'),
                                    n.MGUser.getUserLoginInfo({
                                        success: function (e) {
                                            r.default.l('[ScoreManagerProxy].getPlayerInfo: ' + e.toString()), t && t(e.playerId, e.token, e.sid);
                                        },
                                        fail: function () {
                                            console.error('[ScoreManagerProxy] getPlayInfo error'), t && t(null, null, 0);
                                        },
                                    });
                            }),
                            (a.prototype.getUserInfo = function (t) {
                                r.default.l('[ScoreManagerProxy]::getUserInfo start'),
                                    n.MGUser.getUserBasicInfo({
                                        success: function (e) {
                                            r.default.l('[ScoreManagerProxy].getUserInfo success:' + e.toString()),
                                                t &&
                                                    t(!0, {
                                                        language: e.language,
                                                        nickName: e.nickName,
                                                        avatarUrl: e.avatarUrl,
                                                        gender: e.gender,
                                                        country: e.country,
                                                        province: e.province,
                                                        city: e.city,
                                                    });
                                        },
                                        fail: function () {
                                            console.error('[ScoreManagerProxy] getUserInfo error'), t && t(!1, null);
                                        },
                                    });
                            }),
                            (a.prototype.getPlayerId = function (t) {
                                r.default.l('[ScoreManagerProxy]::getPlayerId start'),
                                    n.MGUser.getUserLoginInfo({
                                        success: function (e) {
                                            r.default.l('[ScoreManagerProxy].getPlayerInfo:' + e.toString() + ' GameStatusInfo.openId: ' + GameStatusInfo.openId), t && t(e.sid.toString(), GameStatusInfo.openId);
                                        },
                                        fail: function () {
                                            console.error('[ScoreManagerProxy] getPlayerId error'), t && t(null, null);
                                        },
                                    });
                            }),
                            (a.prototype.getCloudData = function (e, t, i) {
                                r.default.l('[ScoreManagerProxy]::getCloudData start'), this.getFriendCloudStorage(e, t, i);
                            }),
                            (a.prototype.reportToCM = function (e, t) {
                                l.MGCloudStorage.setStorage({
                                    kvDatas: e,
                                    complete: t,
                                });
                            }),
                            (a.prototype.getFriendCloudStorage = function (e, t, i) {
                                var o = {
                                        playerid: this.mPlayerId,
                                        timestamp: new Date().getTime(),
                                        gameid: this.mGameId,
                                        id_type: 'qqid',
                                        qqids: e,
                                        data: t,
                                    },
                                    n = c.default.createAuthorization(o, this.mToken);
                                r.default.isDebug() && r.default.l('[ScoreManagerProxy] getFriendCloudStorage body: ', o),
                                    r.default.l('[ScoreManagerProxy] getFriendCloudStorage token: ' + this.mToken),
                                    c.default.request({
                                        platform: s.PlatformType.PLATFORM_QQPLAY,
                                        url: this.getCloudApi(a.GET_STORAGE_BATCH_QQ),
                                        data: o,
                                        header: {
                                            Authorization: n,
                                        },
                                        method: c.default.METHOD_POST,
                                        dataType: 'json',
                                        success: function (e) {
                                            if (e) {
                                                r.default.isDebug() && r.default.l('[ScoreManagerProxy] getFriendCloudStorage data: ' + r.default.toJsonString(e));
                                                var t = 0 == e.status && e.result;
                                                i && i(!!t, t ? e.result.result_items : null);
                                            } else i && i(!1, null);
                                        },
                                        fail: function (e, t) {
                                            r.default.e('[ScoreManagerProxy] getFriendCloudStorage error'), i && i(!1, null);
                                        },
                                    });
                            }),
                            (a.prototype.getCloudApi = function (e) {
                                return u.default.isOversea() ? a.SERVER_ADDRESS_URL_OVERSEA + e : this.mIsDebug ? a.TEST_SERVER_ADDRESS_QQ + e : a.SERVER_ADDRESS_QQ + e;
                            }),
                            (a.SERVER_ADDRESS_QQ = 'https://minigame.cmcm.com/'),
                            (a.SERVER_ADDRESS_URL_OVERSEA = 'https://h5game_oversea.cmcm.com/'),
                            (a.TEST_SERVER_ADDRESS_QQ = 'https://pianotiles-minigame.cmcm.com/'),
                            (a.GET_STORAGE_BATCH_QQ = 'warty/storage/batch_get'),
                            a
                        );
                    })();
                (i.default = a), cc._RF.pop();
            },
            {
                '../../../modules/MGCloudStorage/scripts/Logic/MGCloudStorageEntrance': 'MGCloudStorageEntrance',
                '../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../../modules/MGUtils/NetworkUtils': 'NetworkUtils',
                '../../../modules/MGUtils/TypeDefinition': 'TypeDefinition',
                '../../base/Log': 'Log',
                '../../business/keypad/KeypadUtil': 'KeypadUtil',
                '../PlatformProxy': 'PlatformProxy',
            },
        ],
        ServiceEntry: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '99c2bAYJiNPaJ6naYUA2ygZ', 'ServiceEntry'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../util/runtime/ClassType'),
                    n = e('../../util/reflection/Activator'),
                    a = (function () {
                        function e() {
                            (this._name = null), (this._service = null), (this._serviceType = null), (this._contractTypes = null), (this._serviceBuilder = null);
                            var e = arguments;
                            switch (e.length) {
                                case 1:
                                case 2:
                                    o.Type.isFunction(e[0]) ? (this._serviceType = e[0]) : ((this._service = e[0]), (this._serviceType = o.Type.getClassType(e[0]))), (this._contractTypes = e[1] || null);
                                    break;
                                case 3:
                                    (this._name = e[0]), o.Type.isFunction(e[1]) ? (this._serviceType = e[1]) : ((this._service = e[1]), (this._serviceType = o.Type.getClassType(e[1]))), (this._contractTypes = e[2] || null);
                            }
                        }
                        return (
                            Object.defineProperty(e.prototype, 'name', {
                                get: function () {
                                    return this._name;
                                },
                                enumerable: !0,
                                configurable: !0,
                            }),
                            Object.defineProperty(e.prototype, 'serviceType', {
                                get: function () {
                                    if (!this._serviceType) {
                                        var e = this._service;
                                        e && (this._serviceType = o.Type.getClassType(e));
                                    }
                                    return this._serviceType;
                                },
                                enumerable: !0,
                                configurable: !0,
                            }),
                            Object.defineProperty(e.prototype, 'service', {
                                get: function () {
                                    return this._service || (this._service = this.createService()), this._service;
                                },
                                enumerable: !0,
                                configurable: !0,
                            }),
                            Object.defineProperty(e.prototype, 'hasService', {
                                get: function () {
                                    return !!this._service;
                                },
                                enumerable: !0,
                                configurable: !0,
                            }),
                            Object.defineProperty(e.prototype, 'hasContracts', {
                                get: function () {
                                    return this._contractTypes && 0 < this._contractTypes.length;
                                },
                                enumerable: !0,
                                configurable: !0,
                            }),
                            Object.defineProperty(e.prototype, 'contractTypes', {
                                get: function () {
                                    return this._contractTypes;
                                },
                                enumerable: !0,
                                configurable: !0,
                            }),
                            Object.defineProperty(e.prototype, 'serviceBuilder', {
                                get: function () {
                                    return this._serviceBuilder;
                                },
                                set: function (e) {
                                    this._serviceBuilder = e;
                                },
                                enumerable: !0,
                                configurable: !0,
                            }),
                            (e.prototype.toString = function () {
                                var e = o.Type.getQualifiedClassName(this.serviceType);
                                return o.Type.isEmptyString(this.name) ? e : this.name + ' (' + e + ')';
                            }),
                            (e.prototype.createService = function () {
                                var e = this._serviceBuilder;
                                if (e) {
                                    var t = e.build(this);
                                    return t && (this._serviceType = o.Type.getClassType(t)), t;
                                }
                                var i = this._serviceType;
                                return i ? n.Activator.createInstance(i) : null;
                            }),
                            e
                        );
                    })();
                (i.ServiceEntry = a), cc._RF.pop();
            },
            {
                '../../util/reflection/Activator': 'Activator',
                '../../util/runtime/ClassType': 'ClassType',
            },
        ],
        ServiceProviderFactory: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '0a336CFxC9GAIhcriOHUO9U', 'ServiceProviderFactory'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./ServiceProvider'),
                    n = e('../../util/runtime/ClassType'),
                    a = e('../../util/collections/EMap'),
                    r = (function () {
                        function e(e) {
                            void 0 === e && (e = ''), (this._defaultName = e), (this._providers = new a.Map());
                        }
                        return (
                            Object.defineProperty(e, 'instance', {
                                get: function () {
                                    return this._instance || (this._instance = new e()), this._instance;
                                },
                                enumerable: !0,
                                configurable: !0,
                            }),
                            Object.defineProperty(e.prototype, 'default', {
                                get: function () {
                                    var e = this.getProvider(this._defaultName);
                                    return e || ((e = new o.ServiceProvider()), this.register(this._defaultName, e)), e;
                                },
                                set: function (e) {
                                    e || console.log('Please check the arguments.'), this.register(this._defaultName, e);
                                },
                                enumerable: !0,
                                configurable: !0,
                            }),
                            (e.prototype.register = function (e, t) {
                                n.Type.isEmptyObject(e) && console.log('Please check the arguments.'), this._providers.set(e.trim(), t);
                            }),
                            (e.prototype.unregister = function (e) {
                                n.Type.isEmptyObject(e) && console.log('Please check the arguments.'), this._providers.delete(e.trim());
                            }),
                            (e.prototype.getProvider = function (e) {
                                return n.Type.isEmptyObject(e) && console.log('Please check the arguments.'), (e = e.trim()), this._providers.has(e) ? this._providers.get(e) : null;
                            }),
                            (e.prototype.getEnumerator = function () {
                                return this._providers.getEnumerator();
                            }),
                            (e.prototype.forEach = function (e, t) {
                                this._providers.forEach(e, t);
                            }),
                            e
                        );
                    })();
                (i.ServiceProviderFactory = r), cc._RF.pop();
            },
            {
                '../../util/collections/EMap': 'EMap',
                '../../util/runtime/ClassType': 'ClassType',
                './ServiceProvider': 'ServiceProvider',
            },
        ],
        ServiceProvider: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'e64d0+/p09H16waHCx6Mvgq', 'ServiceProvider'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./ServiceStorage'),
                    n = e('./ServiceEntry'),
                    a = e('../../util/runtime/ClassType'),
                    r = e('../../util/reflection/Activator'),
                    s = e('../../util/collections/Set'),
                    c = (function () {
                        function e(e, t) {
                            (e = e || new o.ServiceStorage(this)), (this._storage = e), (this._builder = t);
                        }
                        return (
                            Object.defineProperty(e.prototype, 'storage', {
                                get: function () {
                                    return this._storage;
                                },
                                enumerable: !0,
                                configurable: !0,
                            }),
                            Object.defineProperty(e.prototype, 'builder', {
                                get: function () {
                                    return this._builder;
                                },
                                enumerable: !0,
                                configurable: !0,
                            }),
                            (e.prototype.register = function () {
                                var e,
                                    t = arguments;
                                switch (t.length) {
                                    case 1:
                                    case 2:
                                        e = a.Type.isString(t[0]) ? new n.ServiceEntry(t[0], t[1], null) : new n.ServiceEntry(t[0], t[1]);
                                        break;
                                    case 3:
                                        e = new n.ServiceEntry(t[0], t[1], t[2]);
                                }
                                e || console.log('Can not register service, please check the arguments.'), this._storage.add(e);
                            }),
                            (e.prototype.unregister = function (e) {
                                this._storage.remove(e);
                            }),
                            (e.prototype.resolve = function () {
                                var e = this._storage.get(arguments[0]);
                                return a.Type.isEmptyObject(e) ? null : this.getService(e);
                            }),
                            (e.prototype.resolveAll = function (e) {
                                var t = this,
                                    i = new s.Set();
                                return (
                                    this._storage.getAll(e).forEach(function (e) {
                                        i.add(t.getService(e));
                                    }),
                                    i
                                );
                            }),
                            (e.prototype.getService = function (e) {
                                if (!e) return null;
                                var t = e.service;
                                if (a.Type.isEmptyObject(t)) {
                                    var i = this._builder;
                                    i && (t = i.build(e));
                                }
                                return t || r.Activator.createInstance(e.serviceType);
                            }),
                            e
                        );
                    })();
                (i.ServiceProvider = c), cc._RF.pop();
            },
            {
                '../../util/collections/Set': 'Set',
                '../../util/reflection/Activator': 'Activator',
                '../../util/runtime/ClassType': 'ClassType',
                './ServiceEntry': 'ServiceEntry',
                './ServiceStorage': 'ServiceStorage',
            },
        ],
        ServiceStorageBase: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '8f379I+v81DjbWy+iLj+0zj', 'ServiceStorageBase'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./ServiceEntry'),
                    a = e('./ServiceProviderFactory'),
                    p = e('../../util/runtime/ClassType'),
                    h = e('./ServiceProvider'),
                    f = e('../../util/collections/Set'),
                    n = (function () {
                        function e(e) {
                            e || console.log('--- Service Storage Base no arguments---'), (this._provider = e);
                        }
                        return (
                            Object.defineProperty(e.prototype, 'provider', {
                                get: function () {
                                    return this._provider;
                                },
                                enumerable: !0,
                                configurable: !0,
                            }),
                            (e.prototype.add = function () {
                                var e,
                                    t = arguments;
                                switch (t.length) {
                                    case 1:
                                        e = t[0] instanceof o.ServiceEntry ? t[0] : new o.ServiceEntry(t[0], null);
                                        break;
                                    case 2:
                                        e = p.Type.isString(t[0]) ? new o.ServiceEntry(t[0], t[1], null) : new o.ServiceEntry(t[0], t[1]);
                                        break;
                                    case 3:
                                        e = new o.ServiceEntry(t[0], t[1], t[2]);
                                }
                                return e || console.log('Can not add service, please check the arguments.'), this.insert(e), e;
                            }),
                            (e.prototype.get = function () {
                                var e = arguments,
                                    t = null;
                                if (p.Type.isString(e[0])) {
                                    t = this.findByName(e[0], new f.Set(this));
                                    var i = a.ServiceProviderFactory.instance.default;
                                    !t && i && i.storage !== this && (t = this.findByName(e[0], new f.Set(i.storage))), t || (t = this.findByType(e[0], !1));
                                } else t = this.findByType(e[0], !1);
                                return t;
                            }),
                            (e.prototype.getAll = function (e) {
                                return this.findByType(e, !0);
                            }),
                            (e.prototype.findByName = function (e, t) {
                                if (!e || !t) return null;
                                for (var i = 0; i < t.size; i++)
                                    for (var o = t.get(i).getEnumerator(); o.next(); ) {
                                        var n = o.current;
                                        if (n) {
                                            if (n.name === e) return n;
                                            if (n.serviceType && p.Type.isAssignableFrom(h.ServiceProvider, n.serviceType)) {
                                                var a = n.service;
                                                a && !t.has(a.storage) && t.add(a.storage);
                                            }
                                        }
                                    }
                                return null;
                            }),
                            (e.prototype.findByType = function (e, t) {
                                var i = this.searchService(e, t, new f.Set(this)),
                                    o = !p.Type.isEmptyObject(i);
                                o && i instanceof f.Set && 0 === i.size && (o = !1);
                                var n = a.ServiceProviderFactory.instance.default;
                                return !o && n && n.storage !== this && (i = this.searchService(e, t, new f.Set(n.storage))), i;
                            }),
                            (e.prototype.searchService = function (e, t, i) {
                                if (!e || !i) return null;
                                for (var o = new f.Set(), n = new f.Set(), a = 0; a < i.size; a++) {
                                    for (var r = i.get(a).getEnumerator(); r.next(); ) {
                                        var s = r.current;
                                        if (s && s.serviceType) {
                                            if (s.hasContracts)
                                                if (p.Type.isFunction(e) && -1 !== s.contractTypes.indexOf(e)) {
                                                    if (!t) return s;
                                                    n.add(s);
                                                } else
                                                    for (var c = 0, l = s.contractTypes; c < l.length; c++) {
                                                        var u = l[c];
                                                        p.Type.isAssignableFrom(e, u) && o.add(s);
                                                    }
                                            else if (p.Type.isFunction(e) && s.serviceType === e) {
                                                if (!t) return s;
                                                n.add(s);
                                            } else p.Type.isAssignableFrom(e, s.serviceType) && o.add(s);
                                            if (!t) {
                                                if (0 < o.size) break;
                                                if (s.serviceType && p.Type.isAssignableFrom(h.ServiceProvider, s.serviceType)) {
                                                    var d = s.service;
                                                    d && !i.has(d.storage) && i.add(d.storage);
                                                }
                                            }
                                        }
                                    }
                                    if (t) return n.union(o);
                                    if (0 < o.size) return o.get(0);
                                }
                                return null;
                            }),
                            e
                        );
                    })();
                (i.ServiceStorageBase = n), cc._RF.pop();
            },
            {
                '../../util/collections/Set': 'Set',
                '../../util/runtime/ClassType': 'ClassType',
                './ServiceEntry': 'ServiceEntry',
                './ServiceProvider': 'ServiceProvider',
                './ServiceProviderFactory': 'ServiceProviderFactory',
            },
        ],
        ServiceStorage: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '2691aB5UC5Hwb2d3CaOl+Da', 'ServiceStorage'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./ServiceStorageBase'),
                    n = e('../../util/runtime/ClassType'),
                    a = e('../../util/collections/Set'),
                    r = e('../../util/collections/EMap'),
                    s = (function (i) {
                        function e(e) {
                            var t = i.call(this, e) || this;
                            return (t._entries = new a.Set()), (t._namedEntries = new r.Map()), t;
                        }
                        return (
                            __extends(e, i),
                            Object.defineProperty(e.prototype, 'size', {
                                get: function () {
                                    return this._entries.size;
                                },
                                enumerable: !0,
                                configurable: !0,
                            }),
                            (e.prototype.clear = function () {
                                this._entries.clear(), this._namedEntries.clear();
                            }),
                            (e.prototype.remove = function (e) {
                                if (!e) return null;
                                var t = null;
                                return this._namedEntries.has(e) && ((t = this._namedEntries.get(e)), this._entries.delete(t), this._namedEntries.delete(e)), t;
                            }),
                            (e.prototype.get = function () {
                                var e = arguments;
                                return n.Type.isString(e[0]) && this._namedEntries.has(e[0]) ? this._namedEntries.get(e[0]) : i.prototype.get.call(this, e[0]);
                            }),
                            (e.prototype.getEnumerator = function () {
                                return this._entries.getEnumerator();
                            }),
                            (e.prototype.forEach = function (e, t) {
                                this._entries.forEach(e, t);
                            }),
                            (e.prototype.insert = function (e) {
                                e || console.log('Please check the arguments.'), e.name && this._namedEntries.set(e.name, e), this._entries.add(e);
                            }),
                            e
                        );
                    })(o.ServiceStorageBase);
                (i.ServiceStorage = s), cc._RF.pop();
            },
            {
                '../../util/collections/EMap': 'EMap',
                '../../util/collections/Set': 'Set',
                '../../util/runtime/ClassType': 'ClassType',
                './ServiceStorageBase': 'ServiceStorageBase',
            },
        ],
        Set: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'de6c5ydsf1IkKi8c12aLtkk', 'Set'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./Enumerator'),
                    n = (function () {
                        function e() {
                            for (var e, t = [], i = 0; i < arguments.length; i++) t[i] = arguments[i];
                            (this._values = []), (e = this._values).push.apply(e, t);
                        }
                        return (
                            Object.defineProperty(e.prototype, 'size', {
                                get: function () {
                                    return this._values.length;
                                },
                                enumerable: !0,
                                configurable: !0,
                            }),
                            (e.prototype.add = function () {
                                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                                for (var i = 0, o = e; i < o.length; i++) {
                                    var n = o[i];
                                    this.has(n) || this._values.push(n);
                                }
                                return this;
                            }),
                            (e.prototype.get = function (e) {
                                return this._values[e];
                            }),
                            (e.prototype.set = function (e, t) {
                                var i = this._values;
                                0 <= e && e < i.length && (this.has(t) || (i[e] = t));
                            }),
                            (e.prototype.delete = function (e) {
                                var t = this._values,
                                    i = t.indexOf(e);
                                return -1 !== i && (t.splice(i, 1), !0);
                            }),
                            (e.prototype.deleteAt = function (e) {
                                var t = this._values;
                                0 <= e && e < t.length && t.splice(e, 1);
                            }),
                            (e.prototype.clear = function () {
                                this._values.length = 0;
                            }),
                            (e.prototype.indexOf = function (e, t) {
                                return this._values.indexOf(e, t);
                            }),
                            (e.prototype.has = function (e) {
                                return -1 !== this._values.indexOf(e);
                            }),
                            (e.prototype.getEnumerator = function () {
                                return new o.Enumerator(this._values);
                            }),
                            (e.prototype.forEach = function () {
                                for (var e = this._values, t = arguments[0], i = arguments[1], o = 2 === t.length, n = 0, a = e.length; n < a; n++) o ? t.call(i, e[n], this) : t.call(i, e[n], n, this);
                            }),
                            (e.prototype.find = function (e, t) {
                                for (var i = this._values, o = 0, n = i.length; o < n; o++) if (e.call(t, i[o], o, this)) return i[o];
                            }),
                            (e.prototype.sort = function (e) {
                                var t = this._values;
                                this._values = t.sort(e);
                            }),
                            (e.prototype.union = function (e) {
                                var t = e.values();
                                return 0 < t.length && this.add.apply(this, t), this;
                            }),
                            (e.prototype.values = function () {
                                return this._values.concat();
                            }),
                            (e.prototype.toString = function () {
                                return Array.prototype.toString.call(this._values);
                            }),
                            e
                        );
                    })();
                (i.Set = n), cc._RF.pop();
            },
            {
                './Enumerator': 'Enumerator',
            },
        ],
        ShareHelper: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'd1348t6v4JO9YBF7whfSVX6', 'ShareHelper'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var r = e('./ShareImageUtils'),
                    s = e('../../../scripts/util/StringUtil'),
                    c = e('../../MGUser/scripts/Logic/MGUserEntrance'),
                    o = (function () {
                        function a() {}
                        return (
                            (a.getDefaultShareType = function () {
                                var e = Math.ceil(3 * Math.random());
                                return 0 == e ? 1 : e;
                            }),
                            (a.getDefaultShareData = function (o) {
                                var n = a.getDefaultShareType();
                                new r.default().getShareImage(n, function (e, t) {
                                    var i;
                                    e &&
                                        (1 == n
                                            ? c.MGUser.getUserBasicInfo({
                                                  complete: function (e) {
                                                      (i = e && !s.StringUtil.isNullOrUndefined(e.nickName) ? s.StringUtil.getFixedlengthStr(e.nickName, 12) + ':' + a.SHARE_TITLE_WX_DEFAULT_ONE : a.SHARE_TITLE_WX_DEFAULT_ONE), o(n, i, t);
                                                  },
                                              })
                                            : 2 == n
                                            ? c.MGUser.getUserBasicInfo({
                                                  complete: function (e) {
                                                      (i = e && !s.StringUtil.isNullOrUndefined(e.nickName) ? '【' + s.StringUtil.getFixedlengthStr(e.nickName, 12) + a.SHARE_TITLE_WX_DEFAULT_TWO : '【有人' + a.SHARE_TITLE_WX_DEFAULT_TWO), o(n, i, t);
                                                  },
                                              })
                                            : 3 == n &&
                                              c.MGUser.getUserBasicInfo({
                                                  complete: function (e) {
                                                      (i = e && !s.StringUtil.isNullOrUndefined(e.nickName) ? s.StringUtil.getFixedlengthStr(e.nickName, 12) + '：' + a.SHARE_TITLE_WX_DEFAULT_THREE : a.SHARE_TITLE_WX_DEFAULT_THREE), o(n, i, t);
                                                  },
                                              }));
                                });
                            }),
                            (a.SHARE_TITLE_HOT_SONG = '《%s》钢琴曲竟这么好听，求大家帮我解锁！'),
                            (a.SHARE_TITLE_CHALLENGE_TIMES = ' 和我一起参加《musicName》擂台赛，比比谁更厉害！'),
                            (a.SHARE_TITLE_CHALLENGE_TIMES_B = ' 送3张擂台赛门票，先点先得，抢完为止！'),
                            (a.SHARE_TITLE_SKIN = '这款皮肤我真的好想要，求大家帮忙点一下'),
                            (a.SHARE_TITLE_SINGLE_SEE_ALL = '玩到身体被掏空，看看《%s》你能得第几？'),
                            (a.SHARE_TITLE_TOTAL_SEE_ALL = '本群成就榜在此，看看你能排第几'),
                            (a.SHARE_TITLE_FIGHT_INVITE_FRIEND = '房间开好了，快来和我实时对战吧！'),
                            (a.SHARE_TITLE_FRIEND_FIGHT_SHOW_OFF = '轻松战胜 %s，你不服？你上啊'),
                            (a.SHATR_TITLE_SKIN_PIECE = '新皮肤好好看，帮我点下我就能获得它啦'),
                            (a.SHARE_TITLE_ADD_FRIEND = '%s请求添加您为好友，一起来弹琴吧'),
                            (a.SHARE_TITLE_FOR_TONE = '限时领取全新钢琴音色，逾时不候哦'),
                            (a.SHARE_TITLE_WX_DEFAULT_ONE = '只要1分钟，你就会跟我一样，爱上介款游戏！'),
                            (a.SHARE_TITLE_WX_DEFAULT_TWO = '@你】全球9亿人都在玩的钢琴游戏，点开即玩！'),
                            (a.SHARE_TITLE_WX_DEFAULT_THREE = '有本事就来《钢琴块2》跟我一决高下'),
                            (a.SHARE_TITLE_WX_RANK_TOTAL_SHOW_OFF = '渣渣退下，让你们见识一下逆天手速，不服来战'),
                            (a.SHARE_TITLE_WX_RESULT_SPEC_POPUP = '想超过我是不可能的，这辈子都不可能的'),
                            (a.SHARE_TITLE_WX_RELIVE = '紧急求助！再不帮我点卡片我就没机会复活啦！'),
                            (a.SHARE_TITLEB_WX_SHARE_FOR_GIFT = '红包！红包！送你钻石大红包，先点先得，抢完为止！'),
                            (a.SHARE_TITLE_WX_FIGHT_WIN1 = '终日沉迷排位赛，如今手速快过李小龙'),
                            (a.SHARE_TITLE_WX_FIGHT_WIN2 = '不吹不黑，这游戏的绝世强者,就是我'),
                            (a.SHARE_TITLE_WX_FIGHT_WIN0 = '终结对手%s连胜!排位赛遇到我你输定了'),
                            (a.SHARE_TITLE_QQ_RELIVE = '这游戏太难了！你行你上啊！'),
                            (a.SHARE_TITLE_QQ_SHARE_FOR_GIFT = '红包！红包！送你钻石大红包！数量有限，手慢无~'),
                            (a.SHARE_TITLE_QQ_RESULT_SHOW_OFF = '轻松超过你，不服来挑战我呀！'),
                            (a.SHARE_TITLE_QQ_RESULT_SINGLE_CHAMP_AND_NEW_RECORD = '给你个超过我的机会，有种进来单挑！'),
                            (a.SHARE_TITLE_QQ_RANK_SINGLE_SHOW_OFF = '我就问一句，还有谁？？？'),
                            (a.SHARE_TITLE_QQ_RANK_TOTAL_SHOW_OFF = '想超过我是不可能的，这辈子都不可能的'),
                            (a.SHARE_TITLE_QQ_BATTLE_FRIEND = '无敌是多么寂寞！求挑战求超越！'),
                            (a.SHARE_SOURCE_SHOW_OFF = 1),
                            (a.SHARE_SOURCE_BATTLE_FRIEND = 2),
                            (a.SHARE_SOURCE_ACHIEVEMENT_SHOW_SELF = 3),
                            (a.SHARE_SOURCE_ACHIEVEMENT_SHOW_GROUP = 4),
                            (a.SHARE_SOURCE_SINGLE_SHOW_GROUP = 5),
                            (a.SHARE_SOURCE_RELIVE = 6),
                            (a.SHARE_SOURCE_INVITE_FRIEND = 7),
                            (a.SHARE_SOURCE_GAIN_ENERGY = 8),
                            (a.SHARE_SOURCE_GAIN_DIAMOND = 9),
                            (a.SHARE_SOURCE_INIT = 10),
                            (a.SHARE_SOURCE_INVITE_SKIN = 15),
                            (a.SHARE_SOURCE_INVITE_SONG = 16),
                            (a.SHARE_SOURCE_SING_SHOW_OFF = 17),
                            (a.SHARE_SOURCE_INVITE_CHALLENGE_TIMES = 18),
                            (a.SHARE_SOURCE_CHALLENGE_SHOW_OFF = 19),
                            (a.SHARE_SOURCE_FIGHT_WIN = 20),
                            (a.SHARE_SOURCE_FIGHT_INVITE_FRIEND = 21),
                            (a.SHARE_SOURCE_FRIEND_FIGHT_SHOW_OFF = 22),
                            (a.SHARE_SOURCE_SKIN_PIECE = 23),
                            (a.SHARE_SOURCE_ADD_FRIEND = 24),
                            (a.SHARE_SOURCE_TONE = 25),
                            a
                        );
                    })();
                (i.ShareHelper = o), cc._RF.pop();
            },
            {
                '../../../scripts/util/StringUtil': 'StringUtil',
                '../../MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                './ShareImageUtils': 'ShareImageUtils',
            },
        ],
        ShareImageUtils: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '92500ub2BxB0b5FCqbRbHuM', 'ShareImageUtils'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var _ = e('../../../scripts/util/PU'),
                    y = e('../../../scripts/LogicPlatform/PlatformProxy'),
                    r = e('../../MGUser/scripts/Logic/MGUserEntrance'),
                    n = e('./ShareImage'),
                    s = e('../../../scripts/base/Log'),
                    u = e('../../../scripts/business/keypad/KeypadUtil'),
                    o = (function () {
                        function e() {}
                        return (
                            (e.prototype.getDefaultShare = function () {
                                return {
                                    image1: {
                                        src: _.default.getResourcePath('resources/share/share_default1.jpg'),
                                    },
                                    image2: {
                                        src: _.default.getResourcePath('resources/share/share_default2.jpg'),
                                    },
                                    image3: {
                                        src: _.default.getResourcePath('resources/share/share_default3.jpg'),
                                    },
                                };
                            }),
                            (e.prototype.getToGroupSeeAllAchievement = function () {
                                return {
                                    image: {
                                        src: _.default.getResourcePath('resources/share/share_banner1.png'),
                                    },
                                };
                            }),
                            (e.prototype.getQiuChaoYue = function () {
                                return {
                                    image: {
                                        src: _.default.getResourcePath('resources/share/qiu_chao_yue.png'),
                                        srcB: _.default.getResourcePath('resources/share/qiu_chao_yue_B.png'),
                                        width: 404,
                                        height: 322,
                                    },
                                    title: {
                                        font: '24px Arial',
                                        fillStyle: 'rgb(255,255,255)',
                                        top: 142,
                                        str: '',
                                        textAlign: 'center',
                                        textBaseline: 'top',
                                    },
                                    scoreNum: {
                                        font: '46px Arial',
                                        fillStyle: 'rgb(255,255,255)',
                                        top: 195,
                                        str: '',
                                        spaceH: 4,
                                        textAlign: 'left',
                                        textBaseline: 'top',
                                    },
                                    scoreStr: {
                                        font: '26px Arial',
                                        fillStyle: 'rgb(255,255,255)',
                                        top: 210,
                                        str: '分',
                                        textAlign: 'left',
                                        textBaseline: 'top',
                                    },
                                };
                            }),
                            (e.prototype.getJimo = function () {
                                return {
                                    image: {
                                        src: _.default.getResourcePath('resources/share/jimo.png'),
                                        width: 404,
                                        height: 322,
                                    },
                                    title: {
                                        font: '18px Arial',
                                        fillStyle: 'rgb(255,255,255)',
                                        top: 190,
                                        str: '',
                                        textAlign: 'center',
                                        textBaseline: 'top',
                                    },
                                    crownCount: {
                                        font: '36px Arial',
                                        fillStyle: 'rgb(255,255,255)',
                                        top: 251,
                                        left: 140,
                                        str: '',
                                        textAlign: 'center',
                                        textBaseline: 'top',
                                    },
                                    starCount: {
                                        font: '36px Arial',
                                        fillStyle: 'rgb(255,255,255)',
                                        top: 251,
                                        left: 299,
                                        str: '',
                                        textAlign: 'center',
                                        textBaseline: 'top',
                                    },
                                    circleAvatar: {
                                        src: '',
                                        width: 70,
                                        height: 70,
                                        top: 110,
                                    },
                                    circleAvatarMask: {
                                        src: _.default.getResourcePath('resources/share/head.png'),
                                        width: 78,
                                        height: 78,
                                        top: 106,
                                    },
                                };
                            }),
                            (e.prototype.getQunPaiHang = function () {
                                return {
                                    image: {
                                        src: _.default.getResourcePath('resources/share/share_banner2.png'),
                                    },
                                };
                            }),
                            (e.prototype.getReliveFdHelp = function () {
                                return {
                                    image: {
                                        srcB: _.default.getResourcePath('resources/share/share_fd_help_B.png'),
                                    },
                                };
                            }),
                            (e.prototype.getShareForReward = function () {
                                return {
                                    image: {
                                        srcB: _.default.getResourcePath('resources/share/share_for_reward_B.png'),
                                    },
                                };
                            }),
                            (e.prototype.getShareForNewRecordFds = function () {
                                return {
                                    image: {
                                        src: _.default.getResourcePath('resources/share/new_record_share.png'),
                                        width: 720,
                                        height: 1280,
                                    },
                                    musicName: {
                                        font: '32px Arial',
                                        fillStyle: 'rgb(255,255,255)',
                                        top: 350,
                                        str: '',
                                        textAlign: 'center',
                                        textBaseline: 'top',
                                    },
                                    scoreNum: {
                                        src: 'resources/share/score_',
                                        score: 100,
                                        width: 50,
                                        height: 118,
                                        top: 462,
                                        spaceH: 10,
                                    },
                                    scoreImage: {
                                        src: _.default.getResourcePath('resources/share/score.png'),
                                        width: 58,
                                        height: 58,
                                        top: 522,
                                    },
                                    circleAvatar: {
                                        src: '',
                                        width: 176,
                                        height: 176,
                                        top: 132,
                                        left: 273,
                                    },
                                    circleAvatarMask: {
                                        src: _.default.getResourcePath('resources/share/head_gold.png'),
                                        width: 270,
                                        height: 270,
                                        top: 70,
                                        left: 210,
                                    },
                                };
                            }),
                            (e.prototype.getShareGiftFds = function () {
                                return {
                                    image: {
                                        src: _.default.getResourcePath('resources/share/share_gift_fds.png'),
                                        width: 720,
                                        height: 1280,
                                    },
                                    codeImage: {
                                        src: '',
                                        width: 210,
                                        height: 210,
                                        top: 735,
                                        left: 255,
                                    },
                                };
                            }),
                            (e.prototype.getShareForHotSong = function () {
                                return {
                                    image: {
                                        src: _.default.getResourcePath('resources/share/share_for_hot_song.png'),
                                    },
                                };
                            }),
                            (e.prototype.getShareForSkin = function () {
                                return {
                                    image: {
                                        src: _.default.getResourcePath('resources/share/share_for_skin.png'),
                                    },
                                };
                            }),
                            (e.prototype.getShareForChallenge = function () {
                                return {
                                    image: {
                                        src: _.default.getResourcePath('resources/share/share_for_challenge_invite.png'),
                                        srcB: _.default.getResourcePath('resources/share/share_for_challenge_invite_B.png'),
                                    },
                                };
                            }),
                            (e.prototype.getChallengeShowOff = function () {
                                return {
                                    image: {
                                        src: _.default.getResourcePath('resources/share/share_challenge_show_off.png'),
                                        width: 404,
                                        height: 322,
                                    },
                                    title: {
                                        font: '18px Arial',
                                        fillStyle: 'rgb(255,255,255)',
                                        top: 118,
                                        str: '',
                                        textAlign: 'center',
                                        textBaseline: 'top',
                                    },
                                    scoreNum: {
                                        font: '46px Arial',
                                        fillStyle: 'rgb(255,255,255)',
                                        top: 154,
                                        str: '',
                                        spaceH: 4,
                                        textAlign: 'left',
                                        textBaseline: 'top',
                                    },
                                    scoreStr: {
                                        font: '26px Arial',
                                        fillStyle: 'rgb(255,255,255)',
                                        top: 171,
                                        str: '分',
                                        textAlign: 'left',
                                        textBaseline: 'top',
                                    },
                                    rank: {
                                        font: '20px Arial',
                                        fillStyle: 'rgb(255,255,48)',
                                        top: 49,
                                        startX: 52,
                                        str: '',
                                        textAlign: 'center',
                                        textBaseline: 'top',
                                    },
                                };
                            }),
                            (e.prototype.getFightWin = function () {
                                return {
                                    image: {
                                        src1: _.default.getResourcePath('resources/share/fight_win_1.png'),
                                        src2: _.default.getResourcePath('resources/share/fight_win_2.png'),
                                        width: 404,
                                        height: 322,
                                    },
                                    winStr1: {
                                        src: _.default.getResourcePath('resources/share/fight_win_str_1.png'),
                                        width: 99,
                                        height: 36,
                                        top: 20,
                                    },
                                    winStr2: {
                                        src: _.default.getResourcePath('resources/share/fight_win_str_2.png'),
                                        width: 78,
                                        height: 36,
                                        top: 20,
                                    },
                                    winNum: {
                                        src: 'resources/share/num_',
                                        win: 6,
                                        width: 33,
                                        height: 44,
                                        top: 14,
                                        spaceH: 2,
                                    },
                                    badgeBig: {
                                        top: 65,
                                    },
                                    badge: {
                                        width: 143,
                                        height: 37,
                                        top: 204,
                                        left: 130,
                                    },
                                };
                            }),
                            (e.prototype.getShareForFriendFightInvite = function () {
                                return {
                                    image: {
                                        src: _.default.getResourcePath('resources/share/friend_fight_invite.png'),
                                    },
                                };
                            }),
                            (e.prototype.getShareForFriendFightShowOff = function () {
                                return {
                                    image: {
                                        src: _.default.getResourcePath('resources/share/friend_fight_show_off.png'),
                                        width: 404,
                                        height: 322,
                                    },
                                    selfAvator: {
                                        src: '',
                                        top: 89,
                                        left: 60,
                                        width: 117,
                                        height: 117,
                                    },
                                    fighterAvator: {
                                        src: '',
                                        top: 106,
                                        left: 282,
                                        width: 90,
                                        height: 90,
                                    },
                                    selfScore: {
                                        font: '40px Adobe Heiti Std R',
                                        fillStyle: 'rgb(255,252,1)',
                                        top: 230,
                                        startX: 119,
                                        str: '',
                                        textAlign: 'center',
                                        textBaseline: 'top',
                                    },
                                    fighterScore: {
                                        font: '30px Adobe Heiti Std R',
                                        fillStyle: 'rgb(220,207,243)',
                                        top: 216,
                                        startX: 327,
                                        str: '',
                                        textAlign: 'center',
                                        textBaseline: 'top',
                                    },
                                };
                            }),
                            (e.prototype.getShareForQQGame = function () {
                                return {
                                    image: {
                                        src: 'https://piano-weixin-game.cmcm.com/pianotiles2/res/qq_game_image.jpg',
                                    },
                                };
                            }),
                            (e.prototype.getShareForQQRedPacket = function () {
                                return {
                                    image: {
                                        src: 'https://gamecdn.cmcm.com/cn/piano_tiles2/wx/imgs/redpacket_qqgame.png',
                                    },
                                };
                            }),
                            (e.prototype.getShareForFightInvite = function () {
                                return {
                                    image: {
                                        src: _.default.getResourcePath('resources/share/share_for_challenge_invite.png'),
                                    },
                                };
                            }),
                            (e.prototype.getShareForSKinPiece = function () {
                                return {
                                    image: {
                                        src: _.default.getResourcePath('resources/share/share_piece_unlock_skin_%s.png'),
                                    },
                                };
                            }),
                            (e.prototype.getShareForAddFriend = function () {
                                return {
                                    image: {
                                        src: _.default.getResourcePath('resources/share/share_for_add_friend.png'),
                                    },
                                };
                            }),
                            (e.prototype.getShareForTone = function () {
                                return {
                                    image: {
                                        src: _.default.getResourcePath('resources/share/share_for_charistmas.png'),
                                    },
                                };
                            }),
                            (e.prototype.setQiuChaoYueData = function (e, t) {
                                (this.qiuChaoYue = this.getQiuChaoYue()), (this.qiuChaoYue.title.str = t), (this.qiuChaoYue.scoreNum.str = e + '');
                            }),
                            (e.prototype.setJiMoData = function (e, t, i, o) {
                                (this.jiMo = this.getJimo()), (this.jiMo.circleAvatar.src = e), (this.jiMo.title.str = t), (this.jiMo.crownCount.str = i + ''), (this.jiMo.starCount.str = o + '');
                            }),
                            (e.prototype.setNewRecordShareFds = function (e, t, i) {
                                (this.shareForNewRecordFds = this.getShareForNewRecordFds()), (this.shareForNewRecordFds.circleAvatar.src = e), (this.shareForNewRecordFds.musicName.str = t), (this.shareForNewRecordFds.scoreNum.score = i);
                            }),
                            (e.prototype.setChallengeShowOff = function (e, t, i) {
                                (this.challengeShowOff = this.getChallengeShowOff()), (this.challengeShowOff.title.str = e), (this.challengeShowOff.scoreNum.str = t + '');
                                var o = '';
                                i <= 99999 ? (o = i + '') : (o = 10 * Math.floor(i / 1e5) + '万+');
                                this.challengeShowOff.rank.str = o;
                            }),
                            (e.prototype.setShareImageFds = function (e) {
                                (this.shareGiftFds = this.getShareGiftFds()), (this.shareGiftFds.codeImage.src = e);
                            }),
                            (e.prototype.getShareImage = function (e, t, i) {
                                var o = y.default.Ins().createCanvas();
                                switch ((console.log('getSahreImage info type = ' + e), e)) {
                                    case n.ShareImage.TYPE_WX_DEFAULT_ONE:
                                        this.defaultShare || (this.defaultShare = this.getDefaultShare()), t(!0, this.defaultShare.image1.src);
                                        break;
                                    case n.ShareImage.TYPE_WX_DEFAULT_TWO:
                                        this.defaultShare || (this.defaultShare = this.getDefaultShare()), t(!0, this.defaultShare.image2.src);
                                        break;
                                    case n.ShareImage.TYPE_WX_DEFAULT_THREE:
                                        this.defaultShare || (this.defaultShare = this.getDefaultShare()), t(!0, this.defaultShare.image3.src);
                                        break;
                                    case n.ShareImage.TYPE_QIU_CHAO_YUE:
                                    case n.ShareImage.TYPE_QIU_CHAO_YUE_B:
                                        this.qiuChaoYue || (this.qiuChaoYue = this.getQiuChaoYue()), this.getQiuChaoYueImage(e, o, t);
                                        break;
                                    case n.ShareImage.TYPE_JI_MO:
                                        this.jiMo || (this.jiMo = this.getJimo()), this.getJiMoImage(o, t);
                                        break;
                                    case n.ShareImage.TYPE_QUN_PAI_HANG:
                                        this.qunPaiHang || (this.qunPaiHang = this.getQunPaiHang()), t(!0, this.qunPaiHang.image.src);
                                        break;
                                    case n.ShareImage.TYPE_TO_GROUP_ACHIEVEMENT:
                                        this.toGroupSeeAllAchievement || (this.toGroupSeeAllAchievement = this.getToGroupSeeAllAchievement()), t(!0, this.toGroupSeeAllAchievement.image.src);
                                        break;
                                    case n.ShareImage.TYPE_RELIVE_FD_HELP_B:
                                        this.reliveFdHelp || (this.reliveFdHelp = this.getReliveFdHelp()), t(!0, this.reliveFdHelp.image.srcB);
                                        break;
                                    case n.ShareImage.TYPE_SHARE_FOR_REWARD_B:
                                        this.shareForReward || (this.shareForReward = this.getShareForReward()), t(!0, this.shareForReward.image.srcB);
                                        break;
                                    case n.ShareImage.TYPE_SHARE_NEW_RECORD_FDS:
                                        this.shareForNewRecordFds || (this.shareForNewRecordFds = this.getShareForNewRecordFds()), this.getNewRecordShareFdsImage(o, t);
                                        break;
                                    case n.ShareImage.TYPE_SHARE_GIFT_FDS:
                                        this.shareGiftFds || (this.shareGiftFds = this.getShareGiftFds()), this.getShareGiftImage(o, t);
                                        break;
                                    case n.ShareImage.TYPE_SHARE_INVITE_SKIN:
                                        this.shareForSkin || (this.shareForSkin = this.getShareForSkin()), t(!0, this.shareForSkin.image.src);
                                        break;
                                    case n.ShareImage.TYPE_SHARE_INVITE_SONG:
                                        this.shareForHotSong || (this.shareForHotSong = this.getShareForHotSong()), t(!0, this.shareForHotSong.image.src);
                                        break;
                                    case n.ShareImage.TYPE_SHARE_INVITE_CHALLENGE_TIMES:
                                        this.shareForChallenge || (this.shareForChallenge = this.getShareForChallenge()), t(!0, this.shareForChallenge.image.src);
                                        break;
                                    case n.ShareImage.TYPE_SHARE_INVITE_CHALLENGE_TIMES_B:
                                        this.shareForChallenge || (this.shareForChallenge = this.getShareForChallenge()), t(!0, this.shareForChallenge.image.srcB);
                                        break;
                                    case n.ShareImage.TYPE_SHARE_CHALLENGE_SHOW_OFF:
                                        this.challengeShowOff || (this.challengeShowOff = this.getChallengeShowOff()), this.getChallengeShowOffImage(o, t);
                                        break;
                                    case n.ShareImage.TYPE_SHARE_QQ_GAME:
                                        this.shareForQQGame || (this.shareForQQGame = this.getShareForQQGame()), t(!0, this.shareForQQGame.image.src);
                                        break;
                                    case n.ShareImage.TYPE_SHARE_QQ_RED_PACKET_ACTIVITY:
                                        this.shareForQQRedPacket || (this.shareForQQRedPacket = this.getShareForQQRedPacket()), t(!0, this.shareForQQRedPacket.image.src);
                                        break;
                                    case n.ShareImage.TYPE_SHARE_FIGHT_INVITE_FRIEND:
                                        this.shareForFriendFightInvite || (this.shareForFriendFightInvite = this.getShareForFriendFightInvite()), t(!0, this.shareForFriendFightInvite.image.src);
                                        break;
                                    case n.ShareImage.TYPE_SHARE_SKIN_PIECE:
                                        this.shareForSkinPiece || (this.shareForSkinPiece = this.getShareForSKinPiece()), this.getSKinPieceImage(o, i, t);
                                        break;
                                    case n.ShareImage.TYPE_SHARE_ADD_FRIEND:
                                        this.shareForAddFriend || (this.shareForAddFriend = this.getShareForAddFriend()), t(!0, this.shareForAddFriend.image.src);
                                        break;
                                    case n.ShareImage.TYPE_SHARE_TONE:
                                        this.shareForTone || (this.shareForTone = this.getShareForTone()), t(!0, this.shareForTone.image.src);
                                }
                            }),
                            (e.prototype.getSKinPieceImage = function (e, t, i) {
                                if (t) {
                                    var o = t ? t.skinName : '';
                                    i(!0, cc.js.formatStr(this.shareForSkinPiece.image.src, o));
                                } else i(!1, '');
                            }),
                            (e.prototype.getQiuChaoYueImage = function (e, r, s) {
                                var c = this;
                                (r.width = this.qiuChaoYue.image.width), (r.height = this.qiuChaoYue.image.height);
                                var l = r.getContext('2d', null);
                                l.clearRect(0, 0, r.width, r.height), (l.imageSmoothingEnabled = !0), (l.mozImageSmoothingEnabled = !0);
                                var u = y.default.Ins().createImage();
                                e == n.ShareImage.TYPE_QIU_CHAO_YUE ? (u.src = this.qiuChaoYue.image.src) : (u.src = this.qiuChaoYue.image.srcB),
                                    (u.onload = function () {
                                        l.drawImage(y.default.Ins().getImageSrc(u), 0, 0, c.qiuChaoYue.image.width, c.qiuChaoYue.image.height), (l.font = c.qiuChaoYue.title.font), (l.fillStyle = c.qiuChaoYue.title.fillStyle);
                                        var e = r.width / 2;
                                        (l.textAlign = c.qiuChaoYue.title.textAlign), (l.textBaseline = c.qiuChaoYue.title.textBaseline), l.fillText(c.qiuChaoYue.title.str, e, c.qiuChaoYue.title.top), (l.font = c.qiuChaoYue.scoreNum.font), (l.fillStyle = c.qiuChaoYue.scoreNum.fillStyle), (l.textAlign = c.qiuChaoYue.scoreNum.textAlign), (l.textBaseline = c.qiuChaoYue.scoreNum.textBaseline);
                                        var t = l.measureText(c.qiuChaoYue.scoreNum.str).width;
                                        (l.font = c.qiuChaoYue.scoreStr.font), (l.fillStyle = c.qiuChaoYue.scoreStr.fillStyle), (l.textAlign = c.qiuChaoYue.scoreStr.textAlign), (l.textBaseline = c.qiuChaoYue.scoreStr.textBaseline);
                                        var i = l.measureText(c.qiuChaoYue.scoreStr.str).width,
                                            o = (r.width - t - i - c.qiuChaoYue.scoreNum.spaceH) / 2;
                                        (l.font = c.qiuChaoYue.scoreNum.font), (l.fillStyle = c.qiuChaoYue.scoreNum.fillStyle), (l.textAlign = c.qiuChaoYue.scoreNum.textAlign), (l.textBaseline = c.qiuChaoYue.scoreNum.textBaseline), l.fillText(c.qiuChaoYue.scoreNum.str, o, c.qiuChaoYue.scoreNum.top);
                                        var n = o + t + c.qiuChaoYue.scoreNum.spaceH;
                                        (l.font = c.qiuChaoYue.scoreStr.font), (l.fillStyle = c.qiuChaoYue.scoreStr.fillStyle), (l.textAlign = c.qiuChaoYue.scoreStr.textAlign), (l.textBaseline = c.qiuChaoYue.scoreStr.textBaseline), l.fillText(c.qiuChaoYue.scoreStr.str, n, c.qiuChaoYue.scoreStr.top);
                                        var a = c.saveImageFileSync(r);
                                        s(!0, a);
                                    }),
                                    y.default.Ins().loadImage(u);
                            }),
                            (e.prototype.getJiMoImage = function (n, a) {
                                var r = this;
                                (n.width = this.jiMo.image.width), (n.height = this.jiMo.image.height);
                                var s = n.getContext('2d', null);
                                s.clearRect(0, 0, n.width, n.height), (s.imageSmoothingEnabled = !0), (s.mozImageSmoothingEnabled = !0);
                                var t = y.default.Ins().createImage();
                                (t.src = this.jiMo.image.src),
                                    (t.onload = function () {
                                        s.drawImage(y.default.Ins().getImageSrc(t), 0, 0, r.jiMo.image.width, r.jiMo.image.height), (s.font = r.jiMo.title.font), (s.fillStyle = r.jiMo.title.fillStyle);
                                        var e = n.width / 2;
                                        (s.textAlign = r.jiMo.title.textAlign), (s.textBaseline = r.jiMo.title.textBaseline), s.fillText(r.jiMo.title.str, e, r.jiMo.title.top), (s.font = r.jiMo.crownCount.font), (s.fillStyle = r.jiMo.crownCount.fillStyle), (s.textAlign = r.jiMo.crownCount.textAlign), (s.textBaseline = r.jiMo.crownCount.textBaseline), s.fillText(r.jiMo.crownCount.str, r.jiMo.crownCount.left, r.jiMo.crownCount.top), (s.font = r.jiMo.starCount.font), (s.fillStyle = r.jiMo.starCount.fillStyle), (s.textAlign = r.jiMo.starCount.textAlign), (s.textBaseline = r.jiMo.starCount.textBaseline), s.fillText(r.jiMo.starCount.str, r.jiMo.starCount.left, r.jiMo.starCount.top);
                                        var o = y.default.Ins().createImage();
                                        (o.src = r.jiMo.circleAvatar.src),
                                            (o.onload = function () {
                                                var t = n.width / 2,
                                                    e = r.jiMo.circleAvatar.top + r.jiMo.circleAvatar.width / 2;
                                                s.beginPath(), s.arc(t, e, r.jiMo.circleAvatar.width / 2, 0, 2 * Math.PI), s.closePath(), s.save(), s.clip(), s.drawImage(y.default.Ins().getImageSrc(o), t - r.jiMo.circleAvatar.width / 2, r.jiMo.circleAvatar.top, r.jiMo.circleAvatar.width, r.jiMo.circleAvatar.width), s.restore();
                                                var i = y.default.Ins().createImage();
                                                (i.src = r.jiMo.circleAvatarMask.src),
                                                    (i.onload = function () {
                                                        s.drawImage(y.default.Ins().getImageSrc(i), t - r.jiMo.circleAvatarMask.width / 2, r.jiMo.circleAvatarMask.top, r.jiMo.circleAvatarMask.width, r.jiMo.circleAvatarMask.height);
                                                        var e = r.saveImageFileSync(n);
                                                        a(!0, e);
                                                    }),
                                                    y.default.Ins().loadImage(i);
                                            }),
                                            y.default.Ins().loadImage(o);
                                    }),
                                    y.default.Ins().loadImage(t);
                            }),
                            (e.prototype.getNewRecordShareFdsImage = function (p, h) {
                                var f = this;
                                (p.width = this.shareForNewRecordFds.image.width), (p.height = this.shareForNewRecordFds.image.height);
                                var m = p.getContext('2d', null);
                                m.clearRect(0, 0, p.width, p.height), (m.imageSmoothingEnabled = !0), (m.mozImageSmoothingEnabled = !0);
                                var g = y.default.Ins().createImage();
                                (g.src = this.shareForNewRecordFds.image.src),
                                    (g.onload = function () {
                                        m.drawImage(y.default.Ins().getImageSrc(g), 0, 0, f.shareForNewRecordFds.image.width, f.shareForNewRecordFds.image.height), (m.font = f.shareForNewRecordFds.musicName.font), (m.fillStyle = f.shareForNewRecordFds.musicName.fillStyle);
                                        var e = p.width / 2;
                                        (m.textAlign = f.shareForNewRecordFds.musicName.textAlign), (m.textBaseline = f.shareForNewRecordFds.musicName.textBaseline), m.fillText(f.shareForNewRecordFds.musicName.str, e, f.shareForNewRecordFds.musicName.top);
                                        for (
                                            var t = f.shareForNewRecordFds.scoreImage.width,
                                                o = f.shareForNewRecordFds.scoreNum.score + '',
                                                n = o.length,
                                                i = t + (f.shareForNewRecordFds.scoreNum.width + f.shareForNewRecordFds.scoreNum.spaceH) * n,
                                                a = (p.width - i) / 2,
                                                r = 0,
                                                s = function (e) {
                                                    var t = y.default.Ins().createImage();
                                                    t.src = _.default.getResourcePath(f.shareForNewRecordFds.scoreNum.src + parseInt(o.charAt(e)) + '.png');
                                                    var i = a + (f.shareForNewRecordFds.scoreNum.width + f.shareForNewRecordFds.scoreNum.spaceH) * e;
                                                    t.onload = function () {
                                                        if ((m.drawImage(y.default.Ins().getImageSrc(t), i, f.shareForNewRecordFds.scoreNum.top, f.shareForNewRecordFds.scoreNum.width, f.shareForNewRecordFds.scoreNum.height), ++r == n + 2)) {
                                                            var e = f.saveImageFileSync(p, f.shareForNewRecordFds.image.width, f.shareForNewRecordFds.image.height);
                                                            h(!0, e);
                                                        }
                                                    };
                                                },
                                                c = 0;
                                            c < n;
                                            c++
                                        )
                                            s(c);
                                        var l = y.default.Ins().createImage();
                                        l.src = f.shareForNewRecordFds.scoreImage.src;
                                        var u = a + (f.shareForNewRecordFds.scoreNum.width + f.shareForNewRecordFds.scoreNum.spaceH) * n;
                                        l.onload = function () {
                                            if ((m.drawImage(y.default.Ins().getImageSrc(l), u, f.shareForNewRecordFds.scoreImage.top, f.shareForNewRecordFds.scoreImage.width, f.shareForNewRecordFds.scoreImage.height), ++r == n + 2)) {
                                                var e = f.saveImageFileSync(p, f.shareForNewRecordFds.image.width, f.shareForNewRecordFds.image.height);
                                                h(!0, e);
                                            }
                                        };
                                        var d = y.default.Ins().createImage();
                                        (d.src = f.getAvatar(f.shareForNewRecordFds.circleAvatar.src, 0)),
                                            (d.onload = function () {
                                                var e = p.width / 2,
                                                    t = f.shareForNewRecordFds.circleAvatar.top + f.shareForNewRecordFds.circleAvatar.width / 2;
                                                m.beginPath(), m.arc(e, t, f.shareForNewRecordFds.circleAvatar.width / 2, 0, 2 * Math.PI), m.closePath(), m.save(), m.clip(), m.drawImage(y.default.Ins().getImageSrc(d), f.shareForNewRecordFds.circleAvatar.left, f.shareForNewRecordFds.circleAvatar.top, f.shareForNewRecordFds.circleAvatar.width, f.shareForNewRecordFds.circleAvatar.width), m.restore();
                                                var i = y.default.Ins().createImage();
                                                (i.src = f.shareForNewRecordFds.circleAvatarMask.src),
                                                    (i.onload = function () {
                                                        if ((m.drawImage(y.default.Ins().getImageSrc(i), f.shareForNewRecordFds.circleAvatarMask.left, f.shareForNewRecordFds.circleAvatarMask.top, f.shareForNewRecordFds.circleAvatarMask.width, f.shareForNewRecordFds.circleAvatarMask.height), ++r == n + 2)) {
                                                            var e = f.saveImageFileSync(p, f.shareForNewRecordFds.image.width, f.shareForNewRecordFds.image.height);
                                                            h(!0, e);
                                                        }
                                                    }),
                                                    y.default.Ins().loadImage(i);
                                            }),
                                            y.default.Ins().loadImage(d);
                                    }),
                                    y.default.Ins().loadImage(g);
                            }),
                            (e.prototype.getShareGiftImage = function (t, i) {
                                var o = this;
                                (t.width = this.shareGiftFds.image.width), (t.height = this.shareGiftFds.image.height);
                                var n = t.getContext('2d', null);
                                n.clearRect(0, 0, t.width, t.height), (n.imageSmoothingEnabled = !0), (n.mozImageSmoothingEnabled = !0);
                                var a = y.default.Ins().createImage();
                                (a.src = this.shareGiftFds.image.src),
                                    (a.onload = function () {
                                        n.drawImage(y.default.Ins().getImageSrc(a), 0, 0, o.shareGiftFds.image.width, o.shareGiftFds.image.height), o.shareGiftFds.codeImage.src && n.drawImage(o.shareGiftFds.codeImage.src, o.shareGiftFds.codeImage.left, o.shareGiftFds.codeImage.top, o.shareGiftFds.codeImage.width, o.shareGiftFds.codeImage.height);
                                        var e = o.saveImageFileSync(t, o.shareGiftFds.image.width, o.shareGiftFds.image.height);
                                        i(!0, e);
                                    }),
                                    y.default.Ins().loadImage(a);
                            }),
                            (e.prototype.getChallengeShowOffImage = function (r, s) {
                                var c = this;
                                (r.width = this.challengeShowOff.image.width), (r.height = this.challengeShowOff.image.height);
                                var l = r.getContext('2d', null);
                                l.clearRect(0, 0, r.width, r.height), (l.imageSmoothingEnabled = !0), (l.mozImageSmoothingEnabled = !0);
                                var u = y.default.Ins().createImage();
                                (u.src = this.challengeShowOff.image.src),
                                    (u.onload = function () {
                                        l.drawImage(y.default.Ins().getImageSrc(u), 0, 0, c.challengeShowOff.image.width, c.challengeShowOff.image.height), (l.font = c.challengeShowOff.title.font), (l.fillStyle = c.challengeShowOff.title.fillStyle);
                                        var e = r.width / 2;
                                        (l.textAlign = c.challengeShowOff.title.textAlign), (l.textBaseline = c.challengeShowOff.title.textBaseline), l.fillText(c.challengeShowOff.title.str, e, c.challengeShowOff.title.top), (l.font = c.challengeShowOff.scoreNum.font), (l.fillStyle = c.challengeShowOff.scoreNum.fillStyle), (l.textAlign = c.challengeShowOff.scoreNum.textAlign), (l.textBaseline = c.challengeShowOff.scoreNum.textBaseline);
                                        var t = l.measureText(c.challengeShowOff.scoreNum.str).width;
                                        (l.font = c.challengeShowOff.scoreStr.font), (l.fillStyle = c.challengeShowOff.scoreStr.fillStyle), (l.textAlign = c.challengeShowOff.scoreStr.textAlign), (l.textBaseline = c.challengeShowOff.scoreStr.textBaseline);
                                        var i = l.measureText(c.challengeShowOff.scoreStr.str).width,
                                            o = (r.width - t - i - c.challengeShowOff.scoreNum.spaceH) / 2;
                                        (l.font = c.challengeShowOff.scoreNum.font), (l.fillStyle = c.challengeShowOff.scoreNum.fillStyle), (l.textAlign = c.challengeShowOff.scoreNum.textAlign), (l.textBaseline = c.challengeShowOff.scoreNum.textBaseline), l.fillText(c.challengeShowOff.scoreNum.str, o, c.challengeShowOff.scoreNum.top);
                                        var n = o + t + c.challengeShowOff.scoreNum.spaceH;
                                        (l.font = c.challengeShowOff.scoreStr.font), (l.fillStyle = c.challengeShowOff.scoreStr.fillStyle), (l.textAlign = c.challengeShowOff.scoreStr.textAlign), (l.textBaseline = c.challengeShowOff.scoreStr.textBaseline), l.fillText(c.challengeShowOff.scoreStr.str, n, c.challengeShowOff.scoreStr.top), (l.font = c.challengeShowOff.rank.font), (l.fillStyle = c.challengeShowOff.rank.fillStyle), (l.textAlign = c.challengeShowOff.rank.textAlign), (l.textBaseline = c.challengeShowOff.rank.textBaseline), l.fillText(c.challengeShowOff.rank.str, c.challengeShowOff.rank.startX, c.challengeShowOff.rank.top);
                                        var a = c.saveImageFileSync(r);
                                        s(!0, a);
                                    }),
                                    y.default.Ins().loadImage(u);
                            }),
                            (e.prototype.drawCircleAvator = function (e, t, i) {
                                var o = t.left + t.width / 2,
                                    n = t.top + t.height / 2;
                                e.beginPath(), e.arc(o, n, t.width / 2, 0, 2 * Math.PI), e.closePath(), e.save(), e.clip(), e.drawImage(y.default.Ins().getImageSrc(i), t.left, t.top, t.width, t.height), e.restore();
                            }),
                            (e.prototype.getAvatar = function (t, e) {
                                if (null == t) return t;
                                try {
                                    return t.substr(0, t.lastIndexOf('/')) + '/' + e;
                                } catch (e) {
                                    return t;
                                }
                            }),
                            (e.prototype.saveImageFileSync = function (e, t, i) {
                                var o = 404,
                                    n = 322;
                                return (
                                    t && 0 < t && (o = t),
                                    i && 0 < i && (n = i),
                                    y.default.Ins().saveShareTmpFile(e, {
                                        x: 0,
                                        y: 0,
                                        width: o,
                                        height: n,
                                        destWidth: o,
                                        destHeight: n,
                                    })
                                );
                            }),
                            (e.prototype.getShraeQRCode = function (t, i, o, n) {
                                var a = this;
                                void 0 === n && (n = ''),
                                    r.MGUser.getUserLoginInfo({
                                        complete: function (e) {
                                            e ? a.createShareQRCode(e.playerId, n, i, o, t) : a.createShareQRCode('0', n, i, o, t);
                                        },
                                    });
                            }),
                            (e.prototype.createShareQRCode = function (e, t, i, o, n) {
                                var a = document.createElement('canvas');
                                (a.width = i), (a.height = o);
                                var r = a.getContext('2d'),
                                    s = 'https://minigame.cmcm.com/pt2?id=' + e;
                                u.default.isOversea() && (s = 'https://h5game_oversea.cmcm.com/pt2?id=' + e), '' !== t && (s += '&act=' + t);
                                var c = new WeAppQRCode.QRCodeOption();
                                (c.ctx = r), (c.width = i), (c.height = o), (c.text = s), WeAppQRCode.drawQRCode(c);
                                var l = y.default.Ins().createImage();
                                (l.onload = function () {
                                    var e = Math.round(0.285 * i),
                                        t = Math.round(0.285 * o);
                                    r.drawImage(y.default.Ins().getImageSrc(l), Math.round((i - e) / 2), Math.round((o - t) / 2), e, t), n && n(a);
                                }),
                                    (l.src = _.default.getResourcePath('resources/share/qrcode_center.png'));
                            }),
                            (e.prototype.getImagePositionInPlist = function (e, a, r) {
                                cc.loader.loadRes(e, cc.SpriteAtlas, function (e, t) {
                                    if (e) s.default.l('[ShareImageUtils]-----------------err = ', e), r(null);
                                    else {
                                        s.default.l('[ShareImageUtils]-----------------atlas = ', t);
                                        var i = t.getSpriteFrame(a),
                                            o = i.getOriginalSize(),
                                            n = i.getRect();
                                        s.default.l('[ShareImageUtils]-----------------rect/size = ', n, o), r([n.x, n.y, n.width, n.height]);
                                    }
                                });
                            }),
                            e
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../../../scripts/LogicPlatform/PlatformProxy': 'PlatformProxy',
                '../../../scripts/base/Log': 'Log',
                '../../../scripts/business/keypad/KeypadUtil': 'KeypadUtil',
                '../../../scripts/util/PU': 'PU',
                '../../MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                './ShareImage': 'ShareImage',
            },
        ],
        ShareImageUtil: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '91e7bYLhjVJcbga41QK0CeQ', 'ShareImageUtil'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = function () {},
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.createCanvas = function () {
                                return document.createElement('canvas');
                            }),
                            (t.prototype.getShareImage = function (e, t) {
                                var i = this.createCanvas();
                                (i.width = e.width), (i.height = e.height);
                                var o = i.getContext('2d', null);
                                o.clearRect(0, 0, i.width, i.height), (o.imageSmoothingEnabled = !0), (o.mozImageSmoothingEnabled = !0), i.drawImage(e.background, 0, 0), this.drawImages(i, e.imgs, function () {}), this.drawText(i, e.text), t(!0, this.saveToFile(i));
                            }),
                            (t.prototype.save = function (e, t) {
                                var i = 'GameSandBox://share_tmp.png';
                                t.path && (i = t.path);
                                var o = new cc.Texture2D();
                                return o.releaseTexture(), o.initWithElement(e), o.handleLoadedTexture(), e.saveTo(i), i;
                            }),
                            (t.prototype.saveToFile = function (e, t, i, o) {
                                return this.save(e, {
                                    path: t || '',
                                });
                            }),
                            (t.prototype.drawImages = function (e, t, i) {
                                for (var o = t.length, n = 0; n < o; n++) {
                                    var a = t[n];
                                    e.drawImage(a.background, a.left, a.top);
                                }
                            }),
                            (t.prototype.drawText = function (e, t) {
                                for (var i = t.length, o = 0; o < i; o++) {
                                    var n = t[o];
                                    (e.font = n.font), (e.fillStyle = n.fillStyle), (e.textAlign = n.textAlign), (e.textBaseline = n.textBaseline), e.fillText(n.text, n.left, n.top);
                                }
                            }),
                            t
                        );
                    })((i.IShareImage = o));
                i.QQPlayShareImgAdapter = n;
                var a = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.createCanvas = function () {
                            return wx.createCanvas();
                        }),
                        (t.prototype.getShareImage = function (t, i) {
                            var o = this,
                                n = this.createCanvas();
                            (n.width = t.width), (n.height = t.height);
                            var a = n.getContext('2d', null);
                            if ((a.clearRect(0, 0, n.width, n.height), (a.imageSmoothingEnabled = !0), (a.mozImageSmoothingEnabled = !0), cc.sys.platform == cc.sys.WECHAT_GAME)) {
                                var r = wx.createImage();
                                (r.src = t.background),
                                    (r.onload = function () {
                                        a.drawImage(r.src, 0, 0, t.width, t.height),
                                            o.drawImages(n, t.imgs, function () {
                                                o.drawText(a, t.text);
                                            });
                                        var e = o.saveToFile(n, '', t.width, t.height);
                                        i(!0, e);
                                    });
                            }
                        }),
                        (t.prototype.saveToFile = function (e, t, i, o) {
                            var n = 404,
                                a = 322;
                            return (
                                i && 0 < i && (n = i),
                                o && 0 < o && (a = o),
                                e.toTempFilePathSync(e, {
                                    x: 0,
                                    y: 0,
                                    width: n,
                                    height: a,
                                    destWidth: n,
                                    destHeight: a,
                                })
                            );
                        }),
                        (t.prototype.drawImages = function (o, n, a) {
                            for (
                                var r = n.length,
                                    s = 0,
                                    e = function (e) {
                                        var t = wx.createImage(),
                                            i = n[e];
                                        (t.src = i.background),
                                            (t.onload = function () {
                                                o.drawImage(t, i.left, i.top, i.width, i.height), ++s == r && a();
                                            });
                                    },
                                    t = 0;
                                t < r;
                                t++
                            )
                                e(t);
                        }),
                        (t.prototype.drawText = function (e, t) {
                            for (var i = t.length, o = 0; o < i; o++) {
                                var n = t[o];
                                (e.font = n.font), (e.fillStyle = n.fillStyle), (e.textAlign = n.textAlign), (e.textBaseline = n.textBaseline), e.fillText(n.text, n.left, n.top);
                            }
                        }),
                        t
                    );
                })(o);
                i.WXShareImgAdapter = a;
                var r = (function () {
                    function e() {}
                    return (
                        (e.getShareImage = function (e, t) {
                            if (!this.mAdapter)
                                if (cc.sys.platform == cc.sys.WECHAT_GAME) this.mAdapter = new a();
                                else {
                                    if (cc.sys.platform != cc.sys.QQ_PLAY) return void t(!1, '');
                                    this.mAdapter = new n();
                                }
                            this.mAdapter.getShareImage(e, t);
                        }),
                        e
                    );
                })();
                (i.ShareImageUtil = r), cc._RF.pop();
            },
            {},
        ],
        ShareImage: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '39906GCiwdMmrgR+zKswK/0', 'ShareImage'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {}
                    return (e.TYPE_QIU_CHAO_YUE = 4), (e.TYPE_QIU_CHAO_YUE_B = 41), (e.TYPE_JI_MO = 5), (e.TYPE_QUN_PAI_HANG = 7), (e.TYPE_TO_GROUP_ACHIEVEMENT = 8), (e.TYPE_RELIVE_FD_HELP_B = 91), (e.TYPE_SHARE_FOR_REWARD_B = 101), (e.TYPE_SHARE_NEW_RECORD_FDS = 14), (e.TYPE_SHARE_GIFT_FDS = 15), (e.TYPE_SHARE_INVITE_SKIN = 16), (e.TYPE_SHARE_INVITE_SONG = 17), (e.TYPE_SHARE_INVITE_CHALLENGE_TIMES = 18), (e.TYPE_SHARE_INVITE_CHALLENGE_TIMES_B = 181), (e.TYPE_SHARE_CHALLENGE_SHOW_OFF = 19), (e.TYPE_SHARE_QQ_GAME = 20), (e.TYPE_SHARE_QQ_RED_PACKET_ACTIVITY = 21), (e.TYPE_SHARE_FIGHT_WIN = 22), (e.TYPE_SHARE_FIGHT_INVITE_FRIEND = 23), (e.TYPE_SHARE_FRIEND_FIGHT_SHOW_OFF = 24), (e.TYPE_SHARE_SKIN_PIECE = 25), (e.TYPE_SHARE_ADD_FRIEND = 26), (e.TYPE_SHARE_TONE = 27), (e.QRCODE_IMAGE_WIDHT = 210), (e.QRCODE_IMAGE_HEIGHT = 210), (e.TYPE_WX_DEFAULT_ONE = 1), (e.TYPE_WX_DEFAULT_TWO = 2), (e.TYPE_WX_DEFAULT_THREE = 3), (e.TYPE_QQ_SING_RANK_SHOW_OFF = 1001), (e.TYPE_QQ_RESULT_SING_CHAMP = 1002), (e.TYPE_QQ_RESULT_SHOW_OFF = 1003), (e.TYPE_QQ_RESULT_NEW_RECORD = 1004), e;
                })();
                (i.ShareImage = o), cc._RF.pop();
            },
            {},
        ],
        ShareLooper: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'b43a6wj/B5E+Yo3Fx4TIIqd', 'ShareLooper'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./Looper'),
                    n = e('../reward/RewardManager'),
                    a = (function () {
                        function e() {
                            var t = this;
                            (this.mLooper = null),
                                (this.mLooper = new o.default()),
                                (this.func = function () {
                                    n.RewardMgr.Ins().getInviteRewardList(function (e) {
                                        t.recieveCallback(e);
                                    });
                                }),
                                this.mLooper.setWork(this.func);
                        }
                        return (
                            (e.prototype.recieveCallback = function (e) {
                                this.mCallback && this.mCallback(e);
                            }),
                            (e.prototype.start = function (e) {
                                (this.mCallback = e), this.mLooper && this.mLooper.start();
                            }),
                            (e.prototype.stop = function () {
                                this.mLooper && this.mLooper.stop();
                            }),
                            (e.prototype.release = function () {
                                this.mLooper && (this.mLooper.stop(), this.mLooper.destroy(), (this.mLooper = null));
                            }),
                            e
                        );
                    })();
                (i.default = a), cc._RF.pop();
            },
            {
                '../reward/RewardManager': 'RewardManager',
                './Looper': 'Looper',
            },
        ],
        ShareRewardController: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'fb588LK2jlMw5zRV2IYgB0c', 'ShareRewardController'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var p = e('../reward/RewardManager'),
                    h = e('../UI/GameEntraScene/InviteTipsPrefab'),
                    f = e('../../base/Log'),
                    a = e('../UI/GameEntraScene/ToastPrefab'),
                    m = e('../../util/StringUtil'),
                    g = e('../UI/GameEntraScene/PrefabMgr'),
                    o = (function () {
                        function e() {}
                        return (
                            (e.checkInviterReward = function (l, u, d) {
                                p.RewardMgr.Ins().getInviteRewardList(function (e) {
                                    if (e) {
                                        for (var a = 0, r = 0, s = '', t = e.length, c = [], i = 0; i < t; i++) {
                                            var o = e[i];
                                            o.isConsume || ((a += o.diamondNum), r++, (s && 0 != s.length) || (s = o.userNickName), c.push(o));
                                        }
                                        0 < a
                                            ? g.default.load('prefab/InviteTipsPrefab', function (e, t) {
                                                  f.default.e('[ShareRewardController.checkInviterReward.loadRes] result:', t);
                                                  var i = t.getComponent(h.default);
                                                  i.setConfirmBtnContent('继续邀请');
                                                  var o = '你已成功邀请';
                                                  (s && 0 != s.length) || (s = '好友- -'), (o += 1 < r ? '"' + m.StringUtil.getFixedlengthStr(s, 12) + '"等' + r + '人进入游戏，奖励你' + a + '个钻石' : '"' + m.StringUtil.getFixedlengthStr(s, 12) + '"进入游戏，奖励你' + a + '个钻石'), i.setContent(o);
                                                  var n = '今日还可邀请人数: ' + p.RewardMgr.Ins().getCanAlsoInviteNumToday() + '人';
                                                  i.setBottomTips(n),
                                                      i.setConfirmCallback(function () {
                                                          u && u(t, a);
                                                      }),
                                                      i.setCloseCallback(function () {
                                                          d && d(t);
                                                      }),
                                                      l && l(t, a, c);
                                              })
                                            : l(null, 0, null);
                                    } else l(null, 0, null);
                                });
                            }),
                            (e.checkInviteeReward = function (e, r, s, c) {
                                p.RewardMgr.Ins().acceptInvite(e, function (e, a) {
                                    a
                                        ? e &&
                                          g.default.load('prefab/InviteTipsPrefab', function (e, t) {
                                              var i = t.getComponent(h.default);
                                              i.setConfirmBtnContent('获取更多钻石');
                                              var o = '你已成功帮助';
                                              a.userNickName && 0 < a.userNickName.length ? (o += '"' + m.StringUtil.getFixedlengthStr(a.userNickName, 12) + '"获得钻石奖励，奖励你' + a.diamondNum + '个钻石') : (o += '"好友- -"获得钻石奖励，奖励你' + a.diamondNum + '个钻石'), i.setContent(o);
                                              var n = '今日剩余帮助次数: ' + a.remainingHelpNum + '次';
                                              i.setBottomTips(n),
                                                  i.setConfirmCallback(function () {
                                                      s && s(t, a);
                                                  }),
                                                  i.setCloseCallback(function () {
                                                      c && c(t);
                                                  }),
                                                  r && r(t, a);
                                          })
                                        : r && r(null, null);
                                });
                            }),
                            (e.checkLittleStarInviteeReward = function (e, o, n) {
                                p.RewardMgr.Ins().acceptInvite(e, function (e, i) {
                                    e && i
                                        ? g.default.load('prefab/ToastPrefab', function (e, t) {
                                              t.getComponent(a.default).showLittleStarAward(i.diamondNum, function () {
                                                  t.destroy();
                                              }),
                                                  o && o(t),
                                                  n && n(i.diamondNum);
                                          })
                                        : o && o(null);
                                });
                            }),
                            e
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../../base/Log': 'Log',
                '../../util/StringUtil': 'StringUtil',
                '../UI/GameEntraScene/InviteTipsPrefab': 'InviteTipsPrefab',
                '../UI/GameEntraScene/PrefabMgr': 'PrefabMgr',
                '../UI/GameEntraScene/ToastPrefab': 'ToastPrefab',
                '../reward/RewardManager': 'RewardManager',
            },
        ],
        ShareSkinController: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '35834/5HBhMyoQIxsGWToVa', 'ShareSkinController'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var r = e('../PrefabMgr'),
                    s = e('../../../skin/CMInviteSkinPrefab'),
                    c = e('../../../Logic/SkinDataManager'),
                    o = (function () {
                        function e() {}
                        return (
                            (e.Ins = function () {
                                return e.s || (e.s = new e()), e.s;
                            }),
                            (e.prototype.getBgUrlAndReportPage = function (e) {
                                var t = {
                                    layoutBgUrl: '/mainpage/cm_ice_skin_bg.png',
                                    page: window.Infoc_Page_Skin_Ice,
                                };
                                switch (e) {
                                    case c.SkinDataMgr.ICE_SKIN_NAME:
                                        (t.layoutBgUrl = '/mainpage/cm_ice_skin_bg.png'), (t.page = window.Infoc_Page_Skin_Ice);
                                        break;
                                    case c.SkinDataMgr.GIRL_SKIN_NAME:
                                        (t.layoutBgUrl = '/mainpage/cm_girl_skin_bg.png'), (t.page = window.Infoc_Page_Skin_Girl);
                                        break;
                                    case c.SkinDataMgr.AFTERRAIN_SKIN_NAME:
                                        (t.layoutBgUrl = '/mainpage/cm_afterrain_skin_bg.png'), (t.page = window.Infoc_Page_Skin_AfterRain);
                                        break;
                                    case c.SkinDataMgr.CANDY_SKIN_NAME:
                                        (t.layoutBgUrl = '/mainpage/cm_candy_skin_bg.png'), (t.page = window.Infoc_Page_Skin_Candy);
                                }
                                return t;
                            }),
                            (e.prototype.show = function (o, n, e) {
                                var a = this;
                                r.default.load(
                                    'prefab/mainpage/CMInviteSkinPrefab',
                                    function (e, t) {
                                        var i = t.getComponent(s.default);
                                        i.setSkinName(o), i.setInviteCountLimit(c.SkinDataMgr.Ins().getSkinInviteLimitBySkiniId(o.name)), i.setLayoutBgUrl(a.getBgUrlAndReportPage(o.name).layoutBgUrl), i.setReportPage(a.getBgUrlAndReportPage(o.name).page), n && n(t);
                                    },
                                    !0,
                                    !0,
                                );
                            }),
                            e
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../../../Logic/SkinDataManager': 'SkinDataManager',
                '../../../skin/CMInviteSkinPrefab': 'CMInviteSkinPrefab',
                '../PrefabMgr': 'PrefabMgr',
            },
        ],
        ShieldWorker: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '024f1E7jXxJ2rkOdl64kGpV', 'ShieldWorker'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../workers/WorkerBase'),
                    u = e('../../workers/WorkerState'),
                    s = e('../../../property/PropertyDefines'),
                    c = e('../../../base/G'),
                    l = e('../../../util/runtime/Tween'),
                    n = e('../../../util/runtime/ClassType'),
                    a = e('./../../../base/Log'),
                    r = (function (t) {
                        function e() {
                            var e = t.call(this, 'ShieldWorker') || this;
                            return (e.duration = 0), (e.recoveryTime = 0), (e.obtained = !1), (e.ShieldProperty = null), (e.endCallback = null), (e.willendCallback = null), (e.preSpeed = 0), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.init = function (e, t, i, o) {
                                var n = e.getSpeed(),
                                    a = t.permanentTime || 0,
                                    r = t.temporyTime || 0;
                                c.G.Ap.config.mBaseBlockHeight;
                                (this.duration = t.permanentTime || t.temporyTime || 0), this.updateAdditionTime(), (this.recoveryTime = 2), (this.stage = e), this.setPreSpeed(n), this.setEndCallback(i), this.setWillCallback(o), (this.stage.propertyWorked = !0), (this.ShieldProperty = new s.Property(s.PROPERTYTYPE.GAME_SHIELD)), console.log('--- ShieldWorker onStart life:---', a, '     tempLife:' + r, '   duration:', this.duration);
                            }),
                            (e.prototype.updateAdditionTime = function () {
                                var e = this.duration;
                                (this.duration = c.G.propAddition.getAdditionDashTime(this.duration, c.G.Ap.state.mission.getType().toString())), a.default.e('护盾 时间加成：' + e + '  => ' + this.duration);
                            }),
                            (e.prototype.onStart = function () {
                                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                                try {
                                    if (e && e.length <= 0) return;
                                    var i = e[0],
                                        o = e[1],
                                        n = e[2],
                                        a = e[3];
                                    this.init(i, o, n, a), c.G.Ap.state.startPropertyWork(this.ShieldProperty), console.log('--- ShieldWorker onStart args:---', e);
                                } catch (e) {
                                    console.log('--- ShieldWorker onStart err:---', e);
                                }
                            }),
                            (e.prototype.onStop = function () {
                                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                                try {
                                    return console.log('--- ShieldWorker onStop args:---', e), (this.stage.propertyWorked = !1), c.G.Ap.state.stopPropertyWork(this.ShieldProperty), void this.slowDownAndRecovery();
                                } catch (e) {
                                    console.log('--- ShieldWorker onStop err:---', e);
                                }
                            }),
                            (e.prototype.onStateChanged = function (e) {
                                if ((console.log('--- ShieldWorker onStateChanged args:---', e), e.state === u.WorkerState.running)) {
                                    var t = this.getEndCallback(),
                                        i = this.getWillCallback();
                                    this.recovery(t, i);
                                }
                            }),
                            (e.prototype.reset = function () {
                                (this.duration = 0), (this.recoveryTime = 0), (this.obtained = !1), (this.ShieldProperty = null);
                            }),
                            (e.prototype.recovery = function (e, t) {
                                try {
                                    cc.sys.platform == cc.sys.QQ_PLAY ? this.workForQQ(e, t) : this.workForWechat(e, t, requestAnimationFrame, cancelAnimationFrame);
                                } catch (e) {
                                    this.stage.setSpeed(this.preSpeed);
                                }
                            }),
                            (e.prototype.slowDownAndRecovery = function () {
                                try {
                                    cc.sys.platform == cc.sys.QQ_PLAY ? this.slowDownWorkForQQ() : this.slowDownWorkForWechat(requestAnimationFrame, cancelAnimationFrame);
                                } catch (e) {
                                    this.stage.setSpeed(this.preSpeed);
                                }
                            }),
                            (e.prototype.workForWechat = function (t, i, o, n) {
                                var a = this,
                                    r = 59 * this.duration,
                                    s = 0,
                                    c = 0,
                                    l = function () {
                                        var e = a.state;
                                        e !== u.WorkerState.pausing && e !== u.WorkerState.paused && (++s == r - 177 && i(177), s <= r ? (c = o(l)) : (n(c), t(1), a.reset()));
                                    };
                                l();
                            }),
                            (e.prototype.workForQQ = function (e, t) {
                                this.workForWechat(e, t, n.Type.getRaf(), n.Type.getCaf());
                            }),
                            (e.prototype.slowDownWorkForWechat = function (t, i) {
                                var o = this,
                                    n = 59 * this.recoveryTime,
                                    a = this.stage.getSpeed(),
                                    r = 0,
                                    s = 0;
                                this.stage.setSpeed(10);
                                var c = function () {
                                    var e = l.mTween.quadEaseIn(s++, 10, a, n);
                                    (e = Math.min(e, a)), s <= n ? (o.stage.setSpeed(e), r && i(r), (r = t(c))) : (o.stage.setSpeed(a), r && i(r));
                                };
                                c();
                            }),
                            (e.prototype.slowDownWorkForQQ = function () {
                                this.slowDownWorkForWechat(n.Type.getRaf(), n.Type.getCaf());
                            }),
                            (e.prototype.getDuration = function () {
                                return this.duration;
                            }),
                            (e.prototype.setEndCallback = function (e) {
                                e && (this.endCallback = e);
                            }),
                            (e.prototype.getEndCallback = function () {
                                return this.endCallback;
                            }),
                            (e.prototype.setWillCallback = function (e) {
                                e && (this.willendCallback = e);
                            }),
                            (e.prototype.getWillCallback = function () {
                                return this.willendCallback;
                            }),
                            (e.prototype.setPreSpeed = function (e) {
                                void 0 === e && (e = 0), (this.preSpeed = e);
                            }),
                            e
                        );
                    })(o.WorkerBase);
                (i.default = r), cc._RF.pop();
            },
            {
                '../../../base/G': 'G',
                '../../../property/PropertyDefines': 'PropertyDefines',
                '../../../util/runtime/ClassType': 'ClassType',
                '../../../util/runtime/Tween': 'Tween',
                '../../workers/WorkerBase': 'WorkerBase',
                '../../workers/WorkerState': 'WorkerState',
                './../../../base/Log': 'Log',
            },
        ],
        ShopData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '2932a/ajWxE8a1qAlMwDjwL', 'ShopData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o,
                    n = e('./CsvRowData'),
                    a = e('./BaseCsvFile');
                ((o = i.SHOP_ITEM_PLATFORM || (i.SHOP_ITEM_PLATFORM = {}))[(o.COMMON = 0)] = 'COMMON'), (o[(o.WEIXIN = 1)] = 'WEIXIN'), (o[(o.QQ = 2)] = 'QQ');
                var r = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.findId = function (e) {
                            return this.find('id', e);
                        }),
                        (t.prototype.getRow = function () {
                            return new s();
                        }),
                        t
                    );
                })(a.default);
                i.ShopData = r;
                var s = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getID = function () {
                            return this.getInt('id');
                        }),
                        (t.prototype.getGoodsID = function () {
                            return this.getInt('goods_id');
                        }),
                        (t.prototype.getTab = function () {
                            return this.getInt('tab');
                        }),
                        (t.prototype.getIconPath = function () {
                            return this.getString('icon_pic');
                        }),
                        (t.prototype.getScriptPicPath = function () {
                            return this.getString('script_pic');
                        }),
                        (t.prototype.getGoodsListStr = function () {
                            return this.getString('goods');
                        }),
                        (t.prototype.getGoodsName = function () {
                            return this.getString('goods_name');
                        }),
                        (t.prototype.getPrice = function () {
                            return this.getFloat('price');
                        }),
                        (t.prototype.getDiscount = function () {
                            return this.getFloat('discount');
                        }),
                        (t.prototype.getDiscountedPrice = function () {
                            return this.getFloat('discounted_price');
                        }),
                        (t.prototype.getBuyTimes = function () {
                            return this.getInt('buy_times');
                        }),
                        (t.prototype.getPayId = function () {
                            return this.getString('payid');
                        }),
                        (t.prototype.getShowScene = function () {
                            return this.getInt('show_scene');
                        }),
                        (t.prototype.getFreeGiveCnt = function () {
                            return this.getInt('free_give_cnt');
                        }),
                        (t.prototype.getPlatform = function () {
                            return this.getInt('platform');
                        }),
                        t
                    );
                })(n.default);
                (i.ShopRow = s), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        ShortBlockNode: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '34d8dLaH+5Jn4N96wC/KFAo', 'ShortBlockNode'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var c = e('../loader/BlockSkinFrameLoader'),
                    o = e('./BlockNode'),
                    l = e('../../MUI/MUISprite'),
                    n = e('../../animation/action/MFrameSequence'),
                    a = e('../../GameBus'),
                    r = e('../../../base/G'),
                    s = (function (i) {
                        function s() {
                            var e = (null !== i && i.apply(this, arguments)) || this;
                            return (e.frameAnimation = null), e;
                        }
                        return (
                            __extends(s, i),
                            (s.prototype.unuse = function () {
                                i.prototype.unuse.call(this), this.frameAnimation.stopForce();
                            }),
                            (s.prototype.reuse = function (e) {
                                i.prototype.reuse.call(this, e), this.updatePauseState(!1);
                            }),
                            (s.prototype.createLayers = function () {
                                i.prototype.createLayers.call(this);
                                var e = c.default.getInstance().getShortBlockBackground();
                                (this.imageItem = e), (this.imageData = c.default.getInstance().getAtlas()), (this.frameSequence = c.default.getInstance().getShortBlockTouchedAnimFrames());
                                var t = 8 * r.G.Ap.config.gameFrameInterval;
                                this.frameAnimation = new n.default(this.frameSequence.frames.length, t);
                            }),
                            (s.prototype.updateTouchState = function (e) {
                                0 < this.mBlock.touchCount && e && this.showBackgroundAnimation();
                            }),
                            (s.prototype.modifyOpacity = function (e) {}),
                            (s.prototype.updatePauseState = function (e) {
                                var t = this.getChildByTag(s.TAG_NODE_LABEL);
                                if (e && !t) {
                                    var i = c.default.getInstance().getStartLabel(),
                                        o = this.mBlock.rect.width / i.rect.width,
                                        n = this.mBlock.rect.width,
                                        a = i.rect.height * o,
                                        r = new l.default();
                                    (r.imageData = c.default.getInstance().getAtlas()), (r.imageItem = i), r.move(0, (this.mBlock.rect.height - a) / 2, n, a), this.addChild(r, s.TAG_NODE_LABEL);
                                }
                                t && t.setVisible(e);
                            }),
                            (s.prototype.showBackgroundAnimation = function () {
                                a.default.getInstance().animationMgr.runAction(this, this.frameAnimation);
                            }),
                            (s.TAG_NODE_BG = 256),
                            (s.TAG_NODE_LABEL = 128),
                            (s.BKG_ANIM_NAME = 'frame_anim'),
                            s
                        );
                    })(o.default);
                (i.default = s), cc._RF.pop();
            },
            {
                '../../../base/G': 'G',
                '../../GameBus': 'GameBus',
                '../../MUI/MUISprite': 'MUISprite',
                '../../animation/action/MFrameSequence': 'MFrameSequence',
                '../loader/BlockSkinFrameLoader': 'BlockSkinFrameLoader',
                './BlockNode': 'BlockNode',
            },
        ],
        SimpleAtlas: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '0ab27sfUtZK8I6InQ8Vx819', 'SimpleAtlas'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('../../util/Utility'),
                    r = e('./SimpleImage'),
                    s = e('../../util/ResLoader'),
                    o = e('../MUI/MUIDefines'),
                    c = e('../../util/PU'),
                    n = (function (i) {
                        function e(e) {
                            void 0 === e && (e = null);
                            var t = i.call(this, e) || this;
                            return (t.items = new Object()), t;
                        }
                        return (
                            __extends(e, i),
                            (e.prototype.loadCanvas = function (e) {
                                this.onDestroy(), (this.image = e), this.onLoad();
                            }),
                            (e.prototype.load = function (r, s) {
                                return (
                                    void 0 === s && (s = 'png'),
                                    __awaiter(this, void 0, void 0, function () {
                                        var t,
                                            i,
                                            o,
                                            n,
                                            a = this;
                                        return __generator(this, function (e) {
                                            switch (e.label) {
                                                case 0:
                                                    return (
                                                        this.onDestroy(),
                                                        (t = 'resources/'),
                                                        (i = c.default.getResourcePath(t + r + '.' + s)),
                                                        this.loadImage(i),
                                                        (o = r + '_plist'),
                                                        (n = c.default.getResourcePath(t + o + '.json')),
                                                        [
                                                            4,
                                                            new Promise(function (e, t) {
                                                                a.loadAtlasAsync(o, n, e, t);
                                                            }),
                                                        ]
                                                    );
                                                case 1:
                                                    return e.sent(), [2];
                                            }
                                        });
                                    })
                                );
                            }),
                            (e.prototype.loadAtlasAsync = function (i, e, o, n) {
                                var a = this;
                                s.default.loadJson(e, function (e, t) {
                                    null === e
                                        ? (a.parseAtlas(t), o(t))
                                        : cc.loader.loadRes(i, function (e, t) {
                                              null !== e ? (console.error('load atlas error [' + e.name + ']' + e.message), n(e)) : (a.parseAtlas(t), o(t));
                                          });
                                });
                            }),
                            (e.prototype.parseAtlas = function (e) {
                                for (var t = 0, i = e; t < i.length; t++) {
                                    var o = i[t];
                                    if (o.rect) {
                                        var n = o.name;
                                        this.addItem(n, new a.Utility.Rect(o.rect.x, o.rect.y, o.rect.width, o.rect.height), o.rotated);
                                    }
                                }
                            }),
                            (e.prototype.getItem = function (e) {
                                return this.items[e];
                            }),
                            (e.prototype.addItem = function (e, t, i, o) {
                                var n = new r.SimpleImageItem();
                                return n.rect.copy(t), (n.rotated = i), null != o && (n.scale9Grid.copy(o), (n.isScale9Grid = !0)), (this.items[e] = n), !0;
                            }),
                            (e.prototype.createFrameSequence = function (e) {
                                for (var t = new r.SimpleImageFrameSequence(), i = 0, o = e.length; i < o; ++i) {
                                    var n = this.getItem(e[i]);
                                    n && t.frames.push(n);
                                }
                                return t;
                            }),
                            (e.prototype.onLoad = function () {
                                if ((i.prototype.onLoad.call(this), o.MUI.global.renderType === o.MUI.RenderType.WEBGL && !this.texture)) {
                                    var e = o.MUI.global.ctx;
                                    (this.texture = e.createTexture()), e.activeTexture(e.TEXTURE0), e.bindTexture(e.TEXTURE_2D, this.texture), e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL, !1), e.texImage2D(e.TEXTURE_2D, 0, e.RGBA, e.RGBA, e.UNSIGNED_BYTE, this.image), e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MIN_FILTER, e.LINEAR), e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_S, e.CLAMP_TO_EDGE), e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_T, e.CLAMP_TO_EDGE), e.bindTexture(e.TEXTURE_2D, null), console.log('this.image width = ' + this.image.width + ' height = ' + this.image.height), console.warn('纹理：' + this.image.currentSrc);
                                }
                            }),
                            (e.prototype.onDestroy = function () {
                                this.texture && (o.MUI.global.ctx.deleteTexture(this.texture), (this.texture = null));
                            }),
                            e
                        );
                    })(r.default);
                (i.default = n), cc._RF.pop();
            },
            {
                '../../util/PU': 'PU',
                '../../util/ResLoader': 'ResLoader',
                '../../util/Utility': 'Utility',
                '../MUI/MUIDefines': 'MUIDefines',
                './SimpleImage': 'SimpleImage',
            },
        ],
        SimpleImage: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '73cc2gm0SxIOKmUPfyo+LvT', 'SimpleImage'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../util/Utility'),
                    n = function () {
                        (this.rect = new o.Utility.Rect(0, 0, 0, 0)), (this.rotated = !1), (this.scale9Grid = new o.Utility.Rect(0, 0, 0, 0)), (this.isScale9Grid = !1);
                    };
                i.SimpleImageItem = n;
                var a = function () {
                    for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                    this.frames = [];
                    for (var i = 0, o = e.length; i < o; ++i) this.frames.push(e[i]);
                };
                i.SimpleImageFrameSequence = a;
                var r = (function () {
                    function e(e) {
                        void 0 === e && (e = null), (this.image = null), (this.texture = null), (this.finish = !1), (this.image = e || new Image());
                    }
                    return (
                        (e.prototype.onLoad = function () {
                            this.finish = !0;
                        }),
                        (e.prototype.isLoadFinish = function () {
                            return this.finish;
                        }),
                        (e.prototype.loadImage = function (e) {
                            var t = this;
                            (this.image.src = e),
                                cc.sys.platform === cc.sys.QQ_PLAY ||
                                    (this.image.onload = function () {
                                        t.onLoad();
                                    });
                        }),
                        (e.prototype.stepLoad = function () {
                            return !!this.isLoadFinish() || (cc.sys.platform === cc.sys.QQ_PLAY && 0 < this.image.width && this.onLoad(), this.finish);
                        }),
                        e
                    );
                })();
                (i.default = r), cc._RF.pop();
            },
            {
                '../../util/Utility': 'Utility',
            },
        ],
        SingleWorker: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '0e728ST4tNFSJzefviulfuS', 'SingleWorker'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {}
                    return (
                        (e.doWork = function (t, e, i) {
                            var o = this;
                            (null != t && null != t) || (t = Date.now() + '');
                            var n = this.mListeners.get(t);
                            n || ((n = []), this.mListeners.set(t, n)),
                                i && n.push(i),
                                this.mObj[t] ||
                                    ((this.mObj[t] = 'working'),
                                    e()
                                        .then(
                                            function (e) {
                                                o.invokeListeners(t, !0, e);
                                            },
                                            function () {
                                                o.invokeListeners(t, !1, null);
                                            },
                                        )
                                        .catch(function () {
                                            o.invokeListeners(t, !1, null);
                                        }));
                        }),
                        (e.invokeListeners = function (e, t, i) {
                            delete this.mObj[e];
                            for (var o = this.mListeners.get(e); o && 0 < o.length; ) {
                                var n = o.pop();
                                n && n(t, i);
                            }
                        }),
                        (e.mListeners = new Map()),
                        (e.mObj = new Object()),
                        e
                    );
                })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        SkinAdditionData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'd8803EvOihGlZBqpaPNFlZV', 'SkinAdditionData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.findId = function (e) {
                                return this.find('id', e);
                            }),
                            (t.prototype.getRow = function () {
                                return new a();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.SkinAdditionData = n;
                var a = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getId = function () {
                            return this.getInt('Id');
                        }),
                        (t.prototype.getSkinId = function () {
                            return this.getString('skinId');
                        }),
                        (t.prototype.getSceneId = function () {
                            return this.getString('sceneId');
                        }),
                        (t.prototype.getEffectId = function () {
                            return this.getString('effectId');
                        }),
                        t
                    );
                })(o.default);
                (i.SkinAdditionRow = a), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        SkinDataManager: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'f0cf0efUdtFvp8DiAd9cRJn', 'SkinDataManager'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var l = e('../../upgrade/ResBean'),
                    a = e('../Network/Protocol/StorageUtil'),
                    r = e('../../config/LSKey'),
                    o = e('./MoneySystem'),
                    s = e('../../base/G'),
                    u = e('../../upgrade/ResMgr'),
                    n = e('./EventBus'),
                    d = e('./NotifyEvent'),
                    p = e('../../util/PU'),
                    h = e('../../util/StringUtil'),
                    f = e('../../base/Log'),
                    m = e('../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    g = e('../../LogicPlatform/PlatformProxy'),
                    _ = e('../propAddition/Define'),
                    y = e('../../util/NumberUtil'),
                    S = e('../../../modules/MGAdv/scripts/Logic/MGAdvEntrance'),
                    c = (function () {
                        function c() {
                            (this.mInit = !1), (this.mSkinList = null), (this.mOwnedSkinList = null), (this.mInviteSkinInfo = null), this.reset();
                        }
                        return (
                            (c.Ins = function () {
                                return c._instance || (c._instance = new c()), c._instance;
                            }),
                            (c.prototype.reset = function () {
                                var e = this;
                                if ((e.initCurSkin(), (e.mOwnedSkinList = e.readOwnedSkinList()), (e.mSkinList = e.getAllSkinItems()), (e.mInviteSkinInfo = e.getAllInviteSkinInfo()), e.refreshOwnedSkin(!1), e.mCurSkin != c.SKIN_DEFAULT)) {
                                    for (var t = null, i = 0; i < e.mSkinList.length; i++) {
                                        var o = e.mSkinList[i];
                                        if (o.name == e.mCurSkin) {
                                            t = o;
                                            break;
                                        }
                                    }
                                    t && !t.isDownload && (e.saveCurSkin(c.SKIN_DEFAULT, c.SKIN_DEFAULT_DISPLAYNAME), (e.mSkinList = e.getAllSkinItems()), e.refreshOwnedSkin(!1));
                                }
                            }),
                            (c.prototype.refreshOwnedSkin = function (e) {
                                if ((void 0 === e && (e = !0), e && (this.mOwnedSkinList = this.readOwnedSkinList()), this.mSkinList))
                                    for (var t = 0; t < this.mSkinList.length; t++) {
                                        var i = this.mSkinList[t];
                                        this.refreshOwnedSkinAttributes(i);
                                    }
                            }),
                            (c.prototype.refreshOwnedSkinAttributes = function (e) {
                                var t = this.getOwnedSkin(e.name);
                                (e.isLock = null == t), null != t && (e.expireTime = t.expireTime);
                            }),
                            (c.prototype.isDefaultSkin = function () {
                                return this.getCurSkin() == c.SKIN_DEFAULT;
                            }),
                            (c.prototype.getCurSkinItemInfo = function () {
                                for (var e = 0; e < this.mSkinList.length; e++) {
                                    var t = this.mSkinList[e];
                                    if (t && t.name == this.mCurSkin) return t;
                                }
                                return null;
                            }),
                            (c.prototype.getCurSkin = function () {
                                return this.mCurSkin;
                            }),
                            (c.prototype.getCurSkinDisplayName = function () {
                                return this.mCurSkinDisplayName;
                            }),
                            (c.prototype.getOwnedSkinList = function () {
                                return this.mOwnedSkinList;
                            }),
                            (c.prototype.getSkinList = function () {
                                return this.mSkinList;
                            }),
                            (c.prototype.getSkinListExceptDefault = function () {
                                return this.mSkinList.filter(function (e) {
                                    return e.name != c.SKIN_DEFAULT;
                                });
                            }),
                            (c.prototype.getSkinByPieceId = function (e) {
                                if (h.StringUtil.isEmpty(e)) return null;
                                for (var t = 0; t < this.mSkinList.length; t++) {
                                    var i = this.mSkinList[t];
                                    if (i && i.piecesId == e) return i;
                                }
                                return null;
                            }),
                            (c.prototype.getOwnedSkin = function (e) {
                                for (var t = 0; t < this.mOwnedSkinList.length; t++) if (this.mOwnedSkinList[t].id == e) return this.mOwnedSkinList[t];
                                return null;
                            }),
                            (c.prototype.alterDefaultSkin = function () {
                                this.saveCurSkin(c.SKIN_DEFAULT, c.SKIN_DEFAULT_DISPLAYNAME), this.refreshListStatus();
                            }),
                            (c.prototype.getCurrentUseSkinInfo = function () {
                                return this.getOwnedSkin(this.mCurSkin);
                            }),
                            (c.prototype.isSkinLocked = function (e) {
                                return null == this.getOwnedSkin(e);
                            }),
                            (c.prototype.updateOwnedSkin = function (e, t) {
                                if (this.isOwnedPermanent(e)) return !1;
                                var i = this.getOwnedSkin(e),
                                    o = !0;
                                return null == i ? ((i = new I(e, t)), this.mOwnedSkinList.push(i)) : i.expireTime != t ? (i.expireTime = t) : (o = !1), o && 0 == t && n.default.fire(d.default.UNLOCK_SKIN_PERMANENT, e), o;
                            }),
                            (c.prototype.addSkinExpireTime = function (e, t) {
                                var i = this.getOwnedSkin(e);
                                if (null != i && i.isOwnedPermanent()) return !1;
                                if (null != i && 0 == i.isOwnedPermanent()) i.expireTime = i.expireTime + t;
                                else {
                                    var o = m.MGUser.getCurrentServerTime() + t;
                                    this.updateOwnedSkin(e, o);
                                }
                                return this.flushOwnedSkin(), this.refreshOwnedSkin(), !0;
                            }),
                            (c.prototype.removeSkinList = function (e) {
                                for (var t = !1, i = 0; i < e.length; i++) {
                                    var o = e[i],
                                        n = this.mOwnedSkinList.indexOf(o);
                                    -1 < n && (this.mOwnedSkinList.splice(n, 1), (t = !0));
                                }
                                t && (this.flushOwnedSkin(), this.refreshOwnedSkin());
                            }),
                            (c.prototype.getSkinItemInfo = function (e) {
                                for (var t = 0; t < this.mSkinList.length; t++) {
                                    var i = this.mSkinList[t];
                                    if (i.name == e) return i;
                                }
                                return null;
                            }),
                            (c.prototype.getSkinItemInfoBySkinId = function (e) {
                                for (var t = 0; t < this.mSkinList.length; t++) {
                                    var i = this.mSkinList[t];
                                    if (i.skinId == e) return i;
                                }
                                return null;
                            }),
                            (c.prototype.getSkinInviteLimitBySkiniId = function (e) {
                                for (var t = 0; t < this.mInviteSkinInfo.length; t++) {
                                    var i = this.mInviteSkinInfo[t];
                                    if (i.skinName == e) return i.getInviteCountLimit();
                                }
                                return 3;
                            }),
                            (c.prototype.changeSkin = function (t, i, o) {
                                var n = this;
                                if (this.mSkinList && null != t && null != t) {
                                    var e = this.mSkinList.filter(function (e) {
                                        return e.name == t.name;
                                    });
                                    if (e && 0 < e.length) {
                                        var a = '{"displayName":"' + t.displayName + '"}';
                                        s.G.Ap.skinMgr.switchSkin(t.name, a, function (e) {
                                            f.default.i('call skinMgr.switchSkin result(0-success):' + e, t), 0 == e ? (n.saveCurSkin(t.name, t.displayName), s.G.propAddition.setSkinAdditions(_.default.getAdditions(t.skinId)), n.refreshListStatus(), i(e)) : o();
                                        });
                                    } else f.default.i('目标皮肤不存在，换肤失败。', t), o();
                                } else o();
                            }),
                            (c.prototype.refreshListStatus = function () {
                                if (this.mSkinList && 0 < this.mSkinList.length)
                                    for (var e = 0; e < this.mSkinList.length; e++) {
                                        var t = this.mSkinList[e];
                                        t.isUsing = this.mCurSkin == t.name;
                                    }
                            }),
                            (c.prototype.switchTrialSkin = function (t, i, o) {
                                if (this.mSkinList && null != t && null != t) {
                                    var e = this.mSkinList.filter(function (e) {
                                        return e.name == t.name;
                                    });
                                    if (e && 0 < e.length) {
                                        var n = '{"displayName":"' + t.displayName + '"}';
                                        s.G.Ap.skinMgr.switchTrialSkin(t.name, n, function (e) {
                                            0 == e ? i() : o();
                                        });
                                    } else o();
                                } else o();
                            }),
                            (c.prototype.getDefaultSkinItem = function () {
                                if (this.mSkinList && 0 < this.mSkinList.length) {
                                    var e = this.mSkinList.filter(function (e) {
                                        return e.name == c.SKIN_DEFAULT;
                                    });
                                    if (e && 0 < e.length) return e[0];
                                }
                                var t = new C();
                                return (t.name = c.SKIN_DEFAULT), (t.displayName = c.SKIN_DEFAULT_DISPLAYNAME), (t.type = C.SKIN_TYPE_DEFAULT), (t.isDownload = !0), (t.isNeedUpdate = !1), (t.isUsing = this.mCurSkin == c.SKIN_DEFAULT), (t.isLock = !1), (t.skinId = '5-1-0'), t;
                            }),
                            (c.prototype.getAllSkinItems = function () {
                                var a = this,
                                    r = [],
                                    e = u.default.Ins().getSkins(),
                                    s = this.readCMSkinAdsInfo();
                                if (e) {
                                    var t = e.filter(function (e) {
                                        return e.type == l.ResBean.TYPE_SKIN && e.key == c.SKIN_DEFAULT;
                                    });
                                    (null != t && 0 != t.length) || r.push(this.getDefaultSkinItem());
                                    p.default.isQQ();
                                    e.forEach(function (e) {
                                        if (e.skinItem) {
                                            var t = new C();
                                            if (((t.name = e.skinItem.name), (t.skinId = e.skinItem.goodId), (t.isNeedUpdate = e.isNeedUpdate()), (t.isDownload = e.isDownload()), (t.type = e.skinItem.skinType), (t.isUsing = a.mCurSkin == e.skinItem.name), t.isUsing ? (t.isLock = !1) : (t.isLock = a.isSkinLocked(t.name)), (t.displayName = e.skinItem.displayName), (t.resId = e.skinItem.previewImage), (null != t.resId && null != t.resId && 0 != t.resId.length) || (t.resId = 'skin/preview/' + t.name), (t.ticketCount = e.skinItem.certificationCount), (t.disCountEnable = e.skinItem.disCountEnable === l.SkinBean.DIS_ENABLE), t.disCountEnable && ((t.dis = parseInt(e.skinItem.dis)), (t.ticket = parseInt(e.skinItem.ticket)), (t.disTicket = parseInt(e.skinItem.disTicket)), (t.rmb = parseInt(e.skinItem.rmb)), (t.disRmb = parseInt(e.skinItem.disRmb))), p.default.isCM())) {
                                                (t.goldCount = e.skinItem.goldCount), (t.totalWatchAdsTimes = e.skinItem.watchAdsTimes);
                                                for (var i = 0, o = s; i < o.length; i++) {
                                                    var n = o[i];
                                                    if (n.name == t.name) {
                                                        (t.watchAdsTimes = n.adsTimes), (t.lastWatchAdsTime = n.lastTime);
                                                        break;
                                                    }
                                                }
                                            } else (t.piecesId = e.skinItem.piecesId), (t.piecesTotal = e.skinItem.piecesTotal);
                                            r.push(t);
                                        }
                                    });
                                } else r.push(this.getDefaultSkinItem());
                                return r;
                            }),
                            (c.prototype.getAllInviteSkinInfo = function () {
                                var i = [],
                                    e = this.getCubeConfig();
                                e &&
                                    e.inviteCountLimit &&
                                    e.inviteCountLimit.forEach(function (e) {
                                        var t = new T(e.scene, e.countLimit);
                                        i.push(t);
                                    });
                                return i;
                            }),
                            (c.prototype.getCubeConfig = function () {
                                return JSON.parse('{"switch":0,"inviteCountLimit":[{"scene":"ice","countLimit":3},{"scene":"girl","countLimit":2},{"scene":"afterrain","countLimit":2},{"scene":"candy","countLimit":2}]}');
                            }),
                            (c.isSkinExist = function (e, t) {
                                if (h.StringUtil.isNullOrUndefined(e)) t && t(!1);
                                else if (e != c.SKIN_DEFAULT)
                                    if (g.default.Ins().needDownloadRes()) {
                                        var i = p.default.getResourcePath('resources/skin/' + e + '/' + e + '.json'),
                                            o = u.default.Ins().getSkinBean(e);
                                        o
                                            ? g.default
                                                  .Ins()
                                                  .getFileSystemManager()
                                                  .access({
                                                      path: i,
                                                      success: function (e) {
                                                          t && t(!!e);
                                                      },
                                                      fail: function (e) {
                                                          f.default.i('SkinDataManager. isSkinExist : false'), o.clearLocalInfo(), t && t(!1);
                                                      },
                                                  })
                                            : t && t(!1);
                                    } else t && t(!0);
                                else t && t(!0);
                            }),
                            (c.downloadSkin = function (i, o, n) {
                                return __awaiter(this, void 0, void 0, function () {
                                    var t;
                                    return __generator(this, function (e) {
                                        return h.StringUtil.isNullOrUndefined(i) ? n() : null == (t = u.default.Ins().getSkinBean(i)) ? n() : u.default.Ins().downloadSkin(t, o, n), [2];
                                    });
                                });
                            }),
                            (c.cancelDownloadSkin = function (e) {
                                null != e && null != e && null != e.name && null != e.name && 0 != e.name.length && u.default.Ins().cancelDownloadSkin(e.name);
                            }),
                            (c.prototype.unLockByFirstPay = function () {
                                return this.unlockSkinByType(l.SkinBean.SKIN_TYPE_FIRST_PAY);
                            }),
                            (c.prototype.unlockDailyAttendanceSkin = function () {
                                return this.unlockSkinByType(l.SkinBean.SKIN_TYPE_DAILYATTENDANCE);
                            }),
                            (c.prototype.unlockFirstPaySkin = function () {
                                return this.unlockSkinByType(l.SkinBean.SKIN_TYPE_FIRST_PAY);
                            }),
                            (c.prototype.unlockSkinByType = function (t) {
                                var e = u.default
                                    .Ins()
                                    .getSkins()
                                    .filter(function (e) {
                                        return e.skinItem && e.skinItem.skinType == t;
                                    });
                                if (e && 0 < e.length) {
                                    for (var i = c.Ins(), o = !1, n = 0; n < e.length; n++) {
                                        var a = e[n];
                                        a && a.skinItem && a.skinItem.name && (o = i.updateOwnedSkin(a.skinItem.name, 0));
                                    }
                                    return o && (i.flushOwnedSkin(), i.refreshOwnedSkin()), !0;
                                }
                                return !1;
                            }),
                            (c.prototype.unlockSkin = function (e) {
                                return !!this.updateOwnedSkin(e, 0) && (this.flushOwnedSkin(), this.refreshOwnedSkin(), n.default.fire(d.default.UNLOCK_NORMAL_SKIN_EVENT, e), a.default.pushAsync(), S.MGAdv.customEvent('Unlock', 'forever', "{name:'" + e + "'}"), !0);
                            }),
                            (c.prototype.isOwnedPermanent = function (e) {
                                var t = this.getOwnedSkin(e);
                                return null != t && t.isOwnedPermanent();
                            }),
                            (c.prototype.unlockInviteSkin = function () {
                                var e = u.default
                                    .Ins()
                                    .getSkins()
                                    .filter(function (e) {
                                        return !!e.skinItem && e.skinItem.skinType == l.SkinBean.SKIN_TYPE_INVITE;
                                    });
                                if (e && 0 < e.length) {
                                    for (var t = !1, i = 0; i < e.length; i++) {
                                        var o = e[i];
                                        o && o.skinItem && o.skinItem.name && this.updateOwnedSkin(o.skinItem.name, 0) && ((t = !0), n.default.fire(d.default.UPDATE_SKIN_STORE_UI));
                                    }
                                    return t && (this.flushOwnedSkin(), this.refreshOwnedSkin()), !0;
                                }
                                return !1;
                            }),
                            (c.prototype.unlockInviteSkinByName = function (e) {
                                var t = u.default.Ins().getSkinBean(e),
                                    i = !1;
                                return this.updateOwnedSkin(t.skinItem.name, 0) && ((i = !0), n.default.fire(d.default.UPDATE_SKIN_STORE_UI)), i && (this.flushOwnedSkin(), this.refreshOwnedSkin()), !0;
                            }),
                            (c.prototype.getInviteSkin = function () {
                                for (var e = c.Ins().getSkinList(), t = 0; t < e.length; t++) {
                                    var i = e[t];
                                    if (i.type == C.SKIN_TYPE_INVITE) return i;
                                }
                                return null;
                            }),
                            (c.prototype.unlockByDiamond = function (e) {
                                var t = !1;
                                return this.isCanUnlockByCertification(e) && (t = o.MoneySystem.consumeDiamond(e.ticketCount)) && this.updateOwnedSkin(e.name, 0) && (this.flushOwnedSkin(), this.refreshOwnedSkin()), t;
                            }),
                            (c.prototype.isCanUnlockByCertification = function (e) {
                                return e && !this.isOwnedPermanent(e.name) && 0 < e.ticketCount;
                            }),
                            (c.prototype.updateInviteSkinCount = function (e) {
                                if ((f.default.l('call updateInviteSkinCount. count = ' + e), this.mSkinList)) {
                                    for (var t = !1, i = 0; i < this.mSkinList.length; i++) {
                                        var o = this.mSkinList[i];
                                        o.type == C.SKIN_TYPE_INVITE && o.inviteCount != e && ((t = !0), (o.inviteCount = e));
                                    }
                                    t && n.default.fire(d.default.UPDATE_SKIN_STORE_UI);
                                }
                            }),
                            (c.prototype.isUnLockAllInviteSkin = function () {
                                var e = u.default
                                        .Ins()
                                        .getSkins()
                                        .filter(function (e) {
                                            return !!e.skinItem && e.skinItem.skinType == l.SkinBean.SKIN_TYPE_INVITE;
                                        }),
                                    t = e.length,
                                    i = 0;
                                if (e && 0 < t) {
                                    for (var o = 0; o < t; o++) {
                                        var n = e[o];
                                        n && n.skinItem && n.skinItem.name && c.Ins().isOwnedPermanent(n.skinItem.name) && i++;
                                    }
                                    return i == t;
                                }
                                return !1;
                            }),
                            (c.prototype.readOwnedSkinList = function () {
                                var e = [],
                                    t = a.default.read(r.default.SKIN_OWNED);
                                f.default.l('readOwnedSkinList:', t), (null != t && null != t) || (t = ''), t.indexOf(c.SKIN_DEFAULT) < 0 && e.push(c.SKIN_DEFAULT);
                                var i = t.split('@');
                                if (null != i)
                                    for (var o = 0; o < i.length; o++) {
                                        var n = i[o];
                                        null != n && null != n && 0 < n.length && e.indexOf(n) < 0 && e.push(n);
                                    }
                                return this.parseSkinList(e);
                            }),
                            (c.prototype.readCMSkinAdsInfo = function () {
                                var n = [],
                                    e = a.default.read(r.default.Cm_SKIN_ADS_INFO);
                                (f.default.l('readCMSkinAdsInfo:' + e), e) &&
                                    e.split('@').forEach(function (e) {
                                        if (e) {
                                            var t = e.split(':'),
                                                i = y.default.parseIntFromString(t[1]);
                                            if (0 < i) {
                                                var o = new v();
                                                (o.name = t[0]), (o.adsTimes = i), (o.lastTime = y.default.parseIntFromString(t[2])), n.push(o);
                                            }
                                        }
                                    });
                                return f.default.l('readCMSkinAdsInfo:', n), n;
                            }),
                            (c.prototype.doFlushAdsSkin = function () {
                                for (var e = '', t = 0; t < this.mSkinList.length; t++) {
                                    var i = this.mSkinList[t],
                                        o = this.getOwnedSkin(i.name);
                                    if ((null == o || !o.isOwnedPermanent()) && 0 < i.watchAdsTimes) e += i.name + ':' + i.watchAdsTimes + ':' + i.lastWatchAdsTime + '@';
                                }
                                0 < e.length && (e = e.substr(0, e.length - 1)), f.default.l('doFlushAdsSkin:' + e), a.default.save(r.default.Cm_SKIN_ADS_INFO, e);
                            }),
                            (c.prototype.parseSkinList = function (e) {
                                for (var t = [], i = 0; i < e.length; i++) t.push(I.parse(e[i]));
                                return t;
                            }),
                            (c.prototype.flushOwnedSkin = function () {
                                for (var e = [], t = 0; t < this.mOwnedSkinList.length; t++) e.push(this.mOwnedSkinList[t].toString());
                                this.doFlushOwnedSkin(e), this.doFlushAdsSkin();
                            }),
                            (c.prototype.doFlushOwnedSkin = function (e) {
                                if (null != e && null != e && 0 != e.length) {
                                    var t = e.join('@');
                                    f.default.l('saveOwnedSkin:', t), a.default.save(r.default.SKIN_OWNED, t);
                                }
                            }),
                            (c.prototype.initCurSkin = function () {
                                var e = a.default.read(r.default.SKIN_USING);
                                if (null == e || null == e || 0 == e.length) (this.mCurSkin = c.SKIN_DEFAULT), (this.mCurSkinDisplayName = c.SKIN_DEFAULT_DISPLAYNAME);
                                else {
                                    var t = e.split('@');
                                    1 < t.length ? ((this.mCurSkin = t[0]), (this.mCurSkinDisplayName = t[1])) : ((this.mCurSkin = c.SKIN_DEFAULT), (this.mCurSkinDisplayName = c.SKIN_DEFAULT_DISPLAYNAME));
                                }
                            }),
                            (c.prototype.saveCurSkin = function (e, t) {
                                (this.mCurSkin = e), (this.mCurSkinDisplayName = t), a.default.save(r.default.SKIN_USING, e + '@' + t);
                            }),
                            (c.prototype.getUnLockSkinNum = function () {
                                return this.mOwnedSkinList.length;
                            }),
                            (c.prototype.getUnLockPieceSkin = function () {
                                var i = this,
                                    o = [];
                                return (
                                    this.mSkinList.forEach(function (e) {
                                        if (e.isPiecesSkin()) {
                                            var t = i.getOwnedSkin(e.name);
                                            (null != t && t.isOwnedPermanent()) || o.push(e);
                                        }
                                    }),
                                    o
                                );
                            }),
                            (c.ICE_SKIN_NAME = 'ice'),
                            (c.GIRL_SKIN_NAME = 'girl'),
                            (c.AFTERRAIN_SKIN_NAME = 'afterrain'),
                            (c.CANDY_SKIN_NAME = 'candy'),
                            (c._instance = null),
                            (c.SKIN_DEFAULT = 'default'),
                            (c.SKIN_DEFAULT_DISPLAYNAME = '系统默认'),
                            c
                        );
                    })();
                i.SkinDataMgr = c;
                var v = function () {
                    (this.name = ''), (this.adsTimes = 0), (this.lastTime = 0);
                };
                i.CMSkinAdsInfo = v;
                var I = (function () {
                    function o(e, t) {
                        (this.id = ''), (this.expireTime = -1), (this.id = e), (this.expireTime = t);
                    }
                    return (
                        (o.prototype.isOwnedPermanent = function () {
                            return 0 == this.expireTime;
                        }),
                        (o.prototype.toString = function () {
                            return this.id + o.splitMark + this.expireTime;
                        }),
                        (o.parse = function (e) {
                            var t = e.split(o.splitMark),
                                i = new o(t[0]);
                            return t && 2 == t.length ? (i.expireTime = parseInt(t[1])) : (i.expireTime = 0), i;
                        }),
                        (o.splitMark = ':'),
                        o
                    );
                })();
                i.SkinOwnedInfo = I;
                var T = (function () {
                    function e(e, t) {
                        (this.skinName = e), (this.inviteCountLimit = t);
                    }
                    return (
                        (e.prototype.getInviteCountLimit = function () {
                            return this.inviteCountLimit;
                        }),
                        e
                    );
                })();
                i.InviteSkinInfo = T;
                var C = (function () {
                    function e() {
                        (this.name = ''), (this.displayName = '默认皮肤'), (this.resId = ''), (this.type = e.SKIN_TYPE_CERTIFICATION), (this.isUsing = !1), (this.isLock = !0), (this.isDownload = !1), (this.isNeedUpdate = !1), (this.ticketCount = 0), (this.goldCount = 0), (this.totalWatchAdsTimes = 0), (this.watchAdsTimes = 0), (this.lastWatchAdsTime = 0), (this.inviteCount = 0), (this.expireTime = -1), (this.disCountEnable = !1), (this.dis = 0), (this.ticket = 0), (this.disTicket = 0), (this.rmb = 0), (this.disRmb = 0), (this.skinId = ''), (this.piecesTotal = 0);
                    }
                    return (
                        (e.prototype.isPiecesSkin = function () {
                            return 0 < this.piecesTotal && !h.StringUtil.isEmpty(this.piecesId);
                        }),
                        (e.SKIN_TYPE_DEFAULT = '1'),
                        (e.SKIN_TYPE_DAILYATTENDANCE = '2'),
                        (e.SKIN_TYPE_CERTIFICATION = '3'),
                        (e.SKIN_TYPE_INVITE = '4'),
                        (e.SKIN_TYPE_FIRST_PAY_ATTENTION = '5'),
                        (e.SKIN_TYPE_JOIN_FIGHT = '6'),
                        (e.SKIN_TYPE_LOTTERY = '7'),
                        (e.SKIN_TYPE_SHRAE = '8'),
                        e
                    );
                })();
                (i.SkinItemInfo = C), cc._RF.pop();
            },
            {
                '../../../modules/MGAdv/scripts/Logic/MGAdvEntrance': 'MGAdvEntrance',
                '../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../LogicPlatform/PlatformProxy': 'PlatformProxy',
                '../../base/G': 'G',
                '../../base/Log': 'Log',
                '../../config/LSKey': 'LSKey',
                '../../upgrade/ResBean': 'ResBean',
                '../../upgrade/ResMgr': 'ResMgr',
                '../../util/NumberUtil': 'NumberUtil',
                '../../util/PU': 'PU',
                '../../util/StringUtil': 'StringUtil',
                '../Network/Protocol/StorageUtil': 'StorageUtil',
                '../propAddition/Define': 'Define',
                './EventBus': 'EventBus',
                './MoneySystem': 'MoneySystem',
                './NotifyEvent': 'NotifyEvent',
            },
        ],
        SkinElementPainter: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '94e37qVMDRPhbuFwz3nGvIf', 'SkinElementPainter'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./Background'),
                    n = e('./AnimationBackground'),
                    a = e('../gamescene/MUI/MUIFactory'),
                    r = e('../gamescene/animation/action/MActionFactory'),
                    s = (function () {
                        function e(e) {
                            (this.skinObject = e), (this.backgroundMap = new Object()), (this.spriteFrameCache = new Object()), (this.uiElementTextureMap = new Object()), this.createBackground();
                        }
                        return (
                            (e.prototype.update = function (e, t) {
                                var i = this.backgroundMap[t];
                                i ? i.update(e) : this.homePageBackground && this.homePageBackground.update(e);
                            }),
                            (e.prototype.captureBackground = function (e, t, i) {
                                var o = this.backgroundMap[e];
                                void 0 === o && ((o = this.createBackgroundByName(e)), (this.backgroundMap[e] = o)), null != o ? o.attachSprite(t, i) : this.homePageBackground.attachSprite(t, i);
                            }),
                            (e.prototype.captureElement = function (e, t, i) {
                                if (i && e && t) {
                                    var o = this.skinObject.skinRaw.getUIElementEffectItem(e, t);
                                    o && this.captureNode(o, i);
                                }
                            }),
                            (e.prototype.captureNode = function (e, t) {
                                if (!(t instanceof cc.Scene)) {
                                    if ((this.captureButton(e, t), this.captureLabel(e, t), this.captureSprite(e, t), e.color)) {
                                        var i = new cc.Color();
                                        i.fromHEX(e.color), (t.color = i);
                                    }
                                    null != e.visible && (t.active = e.visible), null != e.rect && e.rect.length;
                                }
                                if (e.children)
                                    for (var o = 0, n = e.children.length; o < n; ++o) {
                                        var a = e.children[o],
                                            r = t.getChildByName(a.name);
                                        r && this.captureNode(a, r);
                                    }
                            }),
                            (e.prototype.captureLabel = function (e, t) {
                                var i = t.getComponent(cc.Label);
                                return !!i && (e.string && (i.string = e.string), e.fontSize && (i.fontSize = e.fontSize), !0);
                            }),
                            (e.prototype.captureSprite = function (e, t) {
                                var i = t.getComponent(cc.Sprite);
                                return !!i && (null != e.imageData && null != e.imageItem && 0 < e.imageItem.length && ((i.spriteFrame = this.createUIElementsSpriteFrame(e.imageData, e.imageItem[0])), t.setContentSize(i.spriteFrame.getRect().size)), !0);
                            }),
                            (e.prototype.captureButton = function (e, t) {
                                var i = t.getComponent(cc.Button);
                                return !!i && (null != e.imageData && null != e.imageItem && ((i.normalSprite = this.createUIElementsSpriteFrame(e.imageData, e.imageItem[0])), (i.hoverSprite = this.createUIElementsSpriteFrame(e.imageData, e.imageItem[1])), (i.pressedSprite = this.createUIElementsSpriteFrame(e.imageData, e.imageItem[2])), (i.disabledSprite = this.createUIElementsSpriteFrame(e.imageData, e.imageItem[3]))), !0);
                            }),
                            (e.prototype.createBackground = function () {
                                var e = this.skinObject.skinRaw.createBackgroundEffects('home', this.skinObject, a.default.instance, r.default.instance);
                                e && e[0] && e[0].node ? ((this.homePageBackground = new n.default()), this.homePageBackground.load(e[0])) : (this.homePageBackground = new o.default());
                            }),
                            (e.prototype.createBackgroundByName = function (e) {
                                var t = null,
                                    i = this.skinObject.skinRaw.createBackgroundEffects(e, this.skinObject, a.default.instance, r.default.instance);
                                return i && i[0] && i[0].node ? (t = new n.default()).load(i[0]) : (t = null), t;
                            }),
                            (e.prototype.createUIElementsSpriteFrame = function (e, t) {
                                var i = this.skinObject.atlasMap[e];
                                if (null == i) return null;
                                var o = i.getItem(t),
                                    n = new cc.Rect(0, 0, 0, 0);
                                if (o) {
                                    var a = o.rect;
                                    (n.x = a.x), (n.y = a.y), (n.width = a.width), (n.height = a.height);
                                }
                                var r = this.uiElementTextureMap[e];
                                return r || ((r = this.createUIElementTexture(i)), (this.uiElementTextureMap[e] = r)), new cc.SpriteFrame(r, n);
                            }),
                            (e.prototype.createUIElementTexture = function (e) {
                                var t = new cc.Texture2D();
                                return t.initWithElement(e.image), t.handleLoadedTexture(), t;
                            }),
                            (e.prototype.destroy = function () {
                                this.homePageBackground && this.homePageBackground.destroy();
                            }),
                            e
                        );
                    })();
                (i.default = s), cc._RF.pop();
            },
            {
                '../gamescene/MUI/MUIFactory': 'MUIFactory',
                '../gamescene/animation/action/MActionFactory': 'MActionFactory',
                './AnimationBackground': 'AnimationBackground',
                './Background': 'Background',
            },
        ],
        SkinGainPrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'ef5f2/hGDxCY7bZjLETP1Da', 'SkinGainPrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var r = e('../UI/GameEntraScene/BasicTouchEvent'),
                    s = e('../../util/SUtil'),
                    n = e('../Logic/SkinDataManager'),
                    c = e('../Logic/EventBus'),
                    l = e('../Logic/NotifyEvent'),
                    o = e('../../util/PU'),
                    u = e('../UI/GameEntraScene/ImgCache'),
                    d = e('../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    p = e('../../util/TimeUtil'),
                    h = e('../../../modules/MGAdv/scripts/Logic/MGAdvDefine'),
                    f = e('../../../modules/MGAdv/scripts/Logic/MGAdvEntrance'),
                    m = e('../UI/GameEntraScene/PrefabMgr'),
                    g = e('../UI/GameEntraScene/ToastPrefab'),
                    _ = e('../../base/Log'),
                    y = e('../Network/Protocol/StorageUtil'),
                    S = e('../Logic/I18nManager'),
                    v = e('../keypad/KeypadNavigator'),
                    a = cc._decorator,
                    I = a.ccclass,
                    T = a.property,
                    C = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mRootNode = null), (e.closeBtn = null), (e.gainBtn1 = null), (e.gainBtn1Label1 = null), (e.gainBtn1Label2 = null), (e.gainBtn2 = null), (e.gainBtn2Label1 = null), (e.gainBtn2Label2 = null), (e.gainBtn3 = null), (e.gainBtn3Label1 = null), (e.gainBtn3Label2 = null), (e.rootSprite = null), (e.rootSpriteText = null), (e.mCloseClickCallback = null), (e.mAdsLeftTime = -1), (e.mSkinItenInfo = null), (e.mBtn1Interactable = !0), (e.mTimer = null), (e.btn1ClickCb = null), e;
                        }
                        var a;
                        return (
                            __extends(e, t),
                            ((a = e).prototype.enResLoad = function () {
                                var i = this;
                                u.default.get('ui/skin_gain_bg_en', function (e, t) {
                                    cc.isValid(i, !0);
                                });
                            }),
                            (e.prototype.onLoad = function () {
                                S.default.getInstance().isEnglish() && this.enResLoad(),
                                    this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                        e.stopPropagation();
                                    }),
                                    this.initEvent(),
                                    this.initData(),
                                    v.default.getInstance().pushDialog(this.node);
                            }),
                            (e.prototype.onDestroy = function () {
                                c.default.remove(l.default.UNLOCK_SKIN_PERMANENT, this.unlockSkin, this), this.clearTimer(), v.default.getInstance().popDialog(this.node);
                            }),
                            (e.prototype.initEvent = function () {
                                var e = this;
                                (this.mCloseClickCallback = new r.default(function () {
                                    e.onClose();
                                })),
                                    this.closeBtn.node.on(cc.Node.EventType.TOUCH_END, this.mCloseClickCallback.click, this.mCloseClickCallback),
                                    c.default.register(l.default.UNLOCK_SKIN_PERMANENT, this.unlockSkin, this);
                            }),
                            (e.prototype.onClose = function () {
                                this.node.destroy();
                            }),
                            (e.prototype.unlockSkin = function (e, t) {
                                cc.isValid(this.node, !0) && e == l.default.UNLOCK_SKIN_PERMANENT && t[0] == this.mSkinItenInfo.name && this.onClose();
                            }),
                            (e.prototype.start = function () {}),
                            (e.prototype.setData = function (e) {
                                this.mGainItems = e;
                            }),
                            (e.prototype.setSkinItemInfo = function (e) {
                                this.mSkinItenInfo = e;
                            }),
                            (e.prototype.initData = function () {
                                o.default.isCM() ? (this.mGainItems[0] && this.updateBtn1Ui(this.mGainItems[0]), this.mGainItems[1] && this.updateBtn2Ui(this.mGainItems[1])) : this.mGainItems && 2 <= this.mGainItems.length ? (this.updateBtn1Ui(this.mGainItems[0]), this.updateBtn2Ui(this.mGainItems[1]), 3 == this.mGainItems.length && this.updateBtn3Ui(this.mGainItems[2])) : this.mGainItems && 1 == this.mGainItems.length && (this.mGainItems[0].type == E.Other ? ((this.gainBtn2.node.active = !1), (this.gainBtn3.node.active = !1), (this.mRootNode.height = 465), this.updateBtn1Ui(this.mGainItems[0])) : ((this.gainBtn1.node.active = !1), (this.gainBtn2.node.active = !1), (this.mRootNode.height = 465), this.updateBtn3Ui(this.mGainItems[0])));
                            }),
                            (e.prototype.updateBtn3Ui = function (e) {
                                var i = this;
                                e.type == E.Diamond
                                    ? u.default.get('ui/skin_diamond_icon', function (e, t) {
                                          cc.isValid(i.node, !0) && ((i.gainBtn3.getComponentInChildren(cc.Sprite).spriteFrame = t), S.default.getInstance().isEnglish() ? (i.gainBtn3Label1.string = 'Unlock by diamonds') : (i.gainBtn3Label1.string = '钻石解锁'));
                                      })
                                    : e.type == E.GOLD &&
                                      u.default.get('musiclist/gold_icon', function (e, t) {
                                          cc.isValid(i.node, !0) && ((i.gainBtn3.getComponentInChildren(cc.Sprite).spriteFrame = t), S.default.getInstance().isEnglish() ? (i.gainBtn3Label1.string = 'Unlock by gold coins') : (i.gainBtn3Label1.string = '金币解锁'));
                                      }),
                                    (this.gainBtn3Label2.string = e.desc),
                                    s.SUtil.ins().toLeftByPx(this.gainBtn3Label1, 71),
                                    s.SUtil.ins().toLeftByPx(this.gainBtn3Label2, 476);
                                var t = new r.default(function () {
                                    e.clickCb && e.clickCb();
                                });
                                this.gainBtn3.node.on(cc.Node.EventType.TOUCH_END, t.click, t);
                            }),
                            (e.prototype.updateBtn2Ui = function (e) {
                                if (o.default.isCM()) (this.gainBtn2.node.active = !1), (this.mRootNode.height = 588), this.updateBtn3Ui(e);
                                else if (e.type == E.Diamond) (this.gainBtn2.node.active = !1), (this.mRootNode.height = 588), this.updateBtn3Ui(e);
                                else {
                                    (this.gainBtn2Label1.string = e.title), (this.gainBtn2Label2.string = e.desc), s.SUtil.ins().toLeftByPx(this.gainBtn2Label1, 71), s.SUtil.ins().toRightByPx(this.gainBtn2Label2, 70);
                                    var t = new r.default(function () {
                                        e.clickCb && e.clickCb();
                                    });
                                    this.gainBtn2.node.on(cc.Node.EventType.TOUCH_END, t.click, t);
                                }
                            }),
                            (e.prototype.updateBtn1Ui = function (i) {
                                var o = this;
                                if (i.type == E.ADS) {
                                    var e = '免费获得(%s/%s)',
                                        n = '看%s次视频广告';
                                    S.default.getInstance().isEnglish() && ((e = 'Free(%s/%s)'), (n = 'Watch %s Video Ad')),
                                        (this.gainBtn1Label1.string = cc.js.formatStr(e, this.mSkinItenInfo.watchAdsTimes, this.mSkinItenInfo.totalWatchAdsTimes)),
                                        s.SUtil.ins().toLeftByPx(this.gainBtn1Label1, 71),
                                        d.MGUser.getCurrentServerRealTime({
                                            complete: function (e, t) {
                                                cc.isValid(o, !0) && (e && t - o.mSkinItenInfo.lastWatchAdsTime < a.WATCH_ADS_TIME ? o.updateBtn1InAdsInterval(i, a.WATCH_ADS_TIME - (t - o.mSkinItenInfo.lastWatchAdsTime)) : (o.updateBtn1BgEnable(!0), (o.gainBtn1Label2.string = cc.js.formatStr(n, o.mSkinItenInfo.totalWatchAdsTimes - o.mSkinItenInfo.watchAdsTimes)), s.SUtil.ins().toRightByPx(o.gainBtn1Label2, 70)));
                                            },
                                        });
                                } else this.updateBtn1BgEnable(!0), (this.gainBtn1Label1.string = i.title), (this.gainBtn1Label2.string = i.desc), s.SUtil.ins().toLeftByPx(this.gainBtn1Label1, 71), s.SUtil.ins().toRightByPx(this.gainBtn1Label2, 70);
                                null == this.btn1ClickCb &&
                                    ((this.btn1ClickCb = new r.default(function () {
                                        o.mBtn1Interactable && i.clickCb && (i.clickCb(), i.type == E.ADS && o.watchAds(i));
                                    })),
                                    this.gainBtn1.node.on(cc.Node.EventType.TOUCH_END, this.btn1ClickCb.click, this.btn1ClickCb));
                            }),
                            (e.prototype.updateBtn1BgEnable = function (e) {
                                var i = this;
                                e
                                    ? ((this.mBtn1Interactable = !0),
                                      (this.gainBtn1.interactable = !0),
                                      u.default.get('ui/skin_gain_blue', function (e, t) {
                                          cc.isValid(i.node, !0) && t && ((i.gainBtn1.normalSprite = t), (i.gainBtn1.getComponent(cc.Sprite).spriteFrame = t));
                                      }),
                                      u.default.get('ui/skin_gain_blue_press', function (e, t) {
                                          cc.isValid(i.node, !0) && t && (i.gainBtn1.pressedSprite = t);
                                      }))
                                    : ((this.mBtn1Interactable = !1),
                                      (this.gainBtn1.interactable = !1),
                                      u.default.get('ui/sin_gain_enable', function (e, t) {
                                          cc.isValid(i.node, !0) && t && ((i.gainBtn1.normalSprite = t), (i.gainBtn1.getComponent(cc.Sprite).spriteFrame = t));
                                      }));
                            }),
                            (e.prototype.updateBtn1InAdsInterval = function (e, t) {
                                this.updateBtn1BgEnable(!1);
                                var i = '免费获得(%s/%s)';
                                S.default.getInstance().isEnglish() && (i = 'Free(%s/%s)'), (this.gainBtn1Label1.string = cc.js.formatStr(i, this.mSkinItenInfo.watchAdsTimes, this.mSkinItenInfo.totalWatchAdsTimes)), s.SUtil.ins().toLeftByPx(this.gainBtn1Label1, 71), (this.mAdsLeftTime = t), this.updateAdsLeftTime(), this.startTimer(e);
                            }),
                            (e.prototype.updateAdsLeftTime = function () {
                                var e = '后可点';
                                S.default.getInstance().isEnglish() && (e = ' Can Click'), (this.gainBtn1Label2.string = p.default.convertSecondToMinutesSecond(Math.round(this.mAdsLeftTime / 1e3)) + e), s.SUtil.ins().toRightByPx(this.gainBtn1Label2, 70);
                            }),
                            (e.prototype.startTimer = function (e) {
                                var t = this;
                                null == this.mTimer &&
                                    (this.mTimer = setInterval(function () {
                                        cc.isValid(t, !0) && ((t.mAdsLeftTime -= 1e3), t.mAdsLeftTime <= 0 ? (t.updateBtn1Ui(e), t.clearTimer()) : t.updateAdsLeftTime());
                                    }, 1e3));
                            }),
                            (e.prototype.clearTimer = function () {
                                this.mTimer && (clearInterval(this.mTimer), (this.mTimer = null));
                            }),
                            (e.prototype.watchAds = function (t) {
                                var i = this,
                                    e = h.ADScene.SCENE_CM_PLAY_SKIN_WATCH_ADS;
                                f.MGAdv.show(e, h.QQ_ADV_TYPE.VIDEO_TYPE_SKIN_UNLOCK, function (e) {
                                    if (cc.isValid(i, !0))
                                        switch (e) {
                                            case h.ADStat.NOT_NETWORK:
                                                i.showToastTips('No network available');
                                                break;
                                            case h.ADStat.SHOW_SUCCESS_CLOSE:
                                                _.default.i(a.TAG + ' watchAds success '), i.onWatchAdsSuccess(t);
                                                break;
                                            case h.ADStat.SHOW_NOT_ENED_CLOSE:
                                                break;
                                            case h.ADStat.SHOW_GET_AD_FAILED:
                                                i.showToastTips('No video ads available');
                                        }
                                });
                            }),
                            (e.prototype.onWatchAdsSuccess = function (i) {
                                var o = this;
                                if ((this.mSkinItenInfo.watchAdsTimes++, this.mSkinItenInfo.watchAdsTimes >= this.mSkinItenInfo.totalWatchAdsTimes)) return this.onClose(), void c.default.fire(l.default.CM_SKIN_ADS_UNLOCK, this.mSkinItenInfo);
                                d.MGUser.getCurrentServerRealTime({
                                    complete: function (e, t) {
                                        cc.isValid(o, !0) && (_.default.i(a.TAG + ' onWatchAdsSuccess result = ' + e + ',serverTime = ' + t), e ? ((o.mSkinItenInfo.lastWatchAdsTime = t), o.updateBtn1Ui(i), n.SkinDataMgr.Ins().doFlushAdsSkin()) : o.onClose(), y.default.pushAsync());
                                    },
                                });
                            }),
                            (e.prototype.showToastTips = function (o) {
                                var n = this;
                                m.default.load('prefab/ToastPrefab', function (e, t) {
                                    if (cc.isValid(n, !0) && t) {
                                        var i = t.getComponent(g.default);
                                        i.showTips(o, function () {
                                            t.destroy();
                                        }),
                                            i.setLong(!1),
                                            n.node.addChild(t);
                                    }
                                });
                            }),
                            (e.TAG = 'SkinGainPrefab'),
                            (e.WATCH_ADS_TIME = 18e4),
                            __decorate([T(cc.Node)], e.prototype, 'mRootNode', void 0),
                            __decorate([T(cc.Button)], e.prototype, 'closeBtn', void 0),
                            __decorate([T(cc.Button)], e.prototype, 'gainBtn1', void 0),
                            __decorate([T(cc.Label)], e.prototype, 'gainBtn1Label1', void 0),
                            __decorate([T(cc.Label)], e.prototype, 'gainBtn1Label2', void 0),
                            __decorate([T(cc.Button)], e.prototype, 'gainBtn2', void 0),
                            __decorate([T(cc.Label)], e.prototype, 'gainBtn2Label1', void 0),
                            __decorate([T(cc.Label)], e.prototype, 'gainBtn2Label2', void 0),
                            __decorate([T(cc.Button)], e.prototype, 'gainBtn3', void 0),
                            __decorate([T(cc.Label)], e.prototype, 'gainBtn3Label1', void 0),
                            __decorate([T(cc.Label)], e.prototype, 'gainBtn3Label2', void 0),
                            __decorate([T(cc.Sprite)], e.prototype, 'rootSprite', void 0),
                            __decorate([T(cc.Sprite)], e.prototype, 'rootSpriteText', void 0),
                            (e = a = __decorate([I], e))
                        );
                    })(cc.Component);
                i.default = C;
                var E,
                    A,
                    P = function () {
                        this.type = E.Other;
                    };
                (i.GainItem = P), ((A = E = i.GainType || (i.GainType = {}))[(A.Other = 0)] = 'Other'), (A[(A.Diamond = 1)] = 'Diamond'), (A[(A.GOLD = 2)] = 'GOLD'), (A[(A.ADS = 3)] = 'ADS'), cc._RF.pop();
            },
            {
                '../../../modules/MGAdv/scripts/Logic/MGAdvDefine': 'MGAdvDefine',
                '../../../modules/MGAdv/scripts/Logic/MGAdvEntrance': 'MGAdvEntrance',
                '../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../base/Log': 'Log',
                '../../util/PU': 'PU',
                '../../util/SUtil': 'SUtil',
                '../../util/TimeUtil': 'TimeUtil',
                '../Logic/EventBus': 'EventBus',
                '../Logic/I18nManager': 'I18nManager',
                '../Logic/NotifyEvent': 'NotifyEvent',
                '../Logic/SkinDataManager': 'SkinDataManager',
                '../Network/Protocol/StorageUtil': 'StorageUtil',
                '../UI/GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
                '../UI/GameEntraScene/ImgCache': 'ImgCache',
                '../UI/GameEntraScene/PrefabMgr': 'PrefabMgr',
                '../UI/GameEntraScene/ToastPrefab': 'ToastPrefab',
                '../keypad/KeypadNavigator': 'KeypadNavigator',
            },
        ],
        SkinLoading: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '9bf24Y3JCBJEr+E4x/LpU6I', 'SkinLoading'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = cc._decorator,
                    n = o.ccclass,
                    a =
                        (o.property,
                        (function (e) {
                            function t() {
                                return (null !== e && e.apply(this, arguments)) || this;
                            }
                            return (
                                __extends(t, e),
                                (t.prototype.onLoad = function () {
                                    this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                        e.stopPropagation();
                                    });
                                }),
                                (t.prototype.start = function () {
                                    this.getComponent(cc.Animation).play('skin_loading');
                                }),
                                (t = __decorate([n], t))
                            );
                        })(cc.Component));
                (i.default = a), cc._RF.pop();
            },
            {},
        ],
        SkinManager: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '4497cH4ePJADqrq8OJDZB6a', 'SkinManager'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var r = e('../Logic/SkinDataManager'),
                    s = e('../../base/Log'),
                    c = e('../Logic/GameItemsManager'),
                    o = e('./SkinUtils'),
                    l = e('../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    n = (function () {
                        function a() {}
                        return (
                            (a.Ins = function () {
                                return this._ins || (this._ins = new a()), this._ins;
                            }),
                            (a.prototype.receiveSkin = function (e) {
                                var t = c.GameItemsManager.getIns().getItemById(e);
                                return 0 == c.GameItemsManager.getIns().getItemTimeLimitDay(t.getItemId()) ? a.unlockSkin(e) : this.receiveSkinReward(e);
                            }),
                            (a.prototype.receiveSkinReward = function (e) {
                                var t = c.GameItemsManager.getIns().getItemById(e),
                                    i = c.GameItemsManager.getIns().getItemTimeLimitDay(t.getItemId()),
                                    o = t.getKey(),
                                    n = this.addSkinExpireTime(o, i * a.ONE_DAY_MS);
                                return s.default.l(a.TAG, 'receiveSkinReward skinKey= ' + o + ', limitsDay = ' + i + ',result=' + n), n;
                            }),
                            (a.isOwnedPermanent = function (e) {
                                var t = c.GameItemsManager.getIns().getItemById(e);
                                return r.SkinDataMgr.Ins().isOwnedPermanent(t.getKey());
                            }),
                            (a.unlockSkin = function (e) {
                                var t = c.GameItemsManager.getIns().getItemById(e);
                                return c.GameItemsManager.getIns().getItemTypeByItemId(e) == c.GameItemType.TYPE_SKIN && (r.SkinDataMgr.Ins().unlockSkin(t.getKey()), !0);
                            }),
                            (a.prototype.checkCurrentSkinTimeLimit = function () {
                                if (!r.SkinDataMgr.Ins().isDefaultSkin()) {
                                    var e = r.SkinDataMgr.Ins().getCurrentUseSkinInfo();
                                    if (!e.isOwnedPermanent()) {
                                        var t = l.MGUser.getCurrentServerTime();
                                        e.expireTime <= t && r.SkinDataMgr.Ins().alterDefaultSkin();
                                    }
                                }
                            }),
                            (a.prototype.checkSkinTimeLimit = function (e, t) {
                                s.default.l(a.TAG, 'checkSkinTimeLimit called');
                                var i = this.getExpireTimeSkinList();
                                s.default.l('checkSkinTimeLimit', i);
                                for (var o = r.SkinDataMgr.Ins().getCurrentUseSkinInfo(), n = 0; n < i.length; n++) o.id == i[n].id && this.switchDefaultSkin(e, t);
                                r.SkinDataMgr.Ins().removeSkinList(i);
                            }),
                            (a.prototype.switchDefaultSkin = function (e, t) {
                                var i = r.SkinDataMgr.Ins().getDefaultSkinItem();
                                o.default.useSkin(
                                    i,
                                    e,
                                    null,
                                    null,
                                    function () {
                                        console.log('switchDefaultSkin success!'), t();
                                    },
                                    function () {
                                        console.log('switchDefaultSkin failed');
                                    },
                                );
                            }),
                            (a.prototype.getExpireTimeSkinList = function () {
                                for (var e = l.MGUser.getCurrentServerTime(), t = r.SkinDataMgr.Ins().getOwnedSkinList(), i = [], o = 0; o < t.length; o++) {
                                    var n = t[o];
                                    0 != n.expireTime && n.expireTime <= e && i.push(n);
                                }
                                return i;
                            }),
                            (a.prototype.addSkinExpireTime = function (e, t) {
                                return r.SkinDataMgr.Ins().addSkinExpireTime(e, t);
                            }),
                            (a.TAG = 'SkinManager'),
                            (a.ONE_DAY_MS = 864e5),
                            (a._ins = null),
                            a
                        );
                    })();
                (i.SkinMgr = n), cc._RF.pop();
            },
            {
                '../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../base/Log': 'Log',
                '../Logic/GameItemsManager': 'GameItemsManager',
                '../Logic/SkinDataManager': 'SkinDataManager',
                './SkinUtils': 'SkinUtils',
            },
        ],
        SkinMgr: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '933cfRp4lxCypfV5NJMW3FP', 'SkinMgr'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var g = e('./SkinObject'),
                    l = e('../gamescene/atlas/SimpleAtlas'),
                    _ = e('../util/Utility'),
                    n = e('../base/G'),
                    s = e('./SkinRaw'),
                    y = e('./Skin'),
                    c = e('../util/ResLoader'),
                    a = e('../util/PU'),
                    S = e('../base/Log'),
                    r = function () {
                        (this.name = ''), (this.cancel = !1);
                    },
                    o = (function () {
                        function e() {
                            (this.screenType = 'default'), (this.currentSkin = null), (this.currentSkinTask = null), (this.trialSkin = null), (this.trialSkinTask = null);
                        }
                        return (
                            (e.prototype.setScreenType = function (e) {
                                this.screenType = e;
                            }),
                            (e.prototype.switchSkin = function (e, t, o) {
                                var n = this;
                                if ((void 0 === o && (o = null), this.currentSkinTask)) return S.default.i('SkinMgr => switchSkin => currentSkinTask exist', this.currentSkinTask), void (o && o(_.Utility.SKINSWITCHESULT.EXISTINSTANCE));
                                var a = new y.SkinProperty();
                                a.fromJson(JSON.parse(t));
                                var i = new r();
                                (i.name = e),
                                    (this.currentSkinTask = i),
                                    this.loadSkin(i, 'default' === e, function (e, t) {
                                        if ((S.default.i('SkinMgr => switchSkin => loadskin result:', e, t), (n.currentSkinTask = null), e)) {
                                            var i = n.currentSkin;
                                            (n.currentSkin = e), n.currentSkin.setProperty(a), n.destroyOldSkinAtlas(i);
                                        }
                                        o && o(t);
                                    });
                            }),
                            (e.prototype.destroyOldSkinAtlas = function (e) {
                                if (e) {
                                    var t = e.getSkinObject().atlasMap;
                                    for (var i in t) {
                                        t[i].onDestroy();
                                    }
                                    e.getSkinElementPainter().destroy();
                                }
                            }),
                            (e.prototype.cancelSwitchSkin = function () {
                                this.currentSkinTask && (this.currentSkinTask.cancel = !0);
                            }),
                            (e.prototype.getCurrentSkinItem = function () {
                                return this.currentSkin;
                            }),
                            (e.prototype.switchTrialSkin = function (e, t, i) {
                                var o = this;
                                if ((void 0 === i && (i = null), this.trialSkinTask)) i && i(_.Utility.SKINSWITCHESULT.EXISTINSTANCE);
                                else {
                                    var n = new y.SkinProperty();
                                    n.fromJson(JSON.parse(t));
                                    var a = new r();
                                    (a.name = e),
                                        (this.trialSkinTask = a),
                                        this.loadSkin(a, 'default' === e, function (e, t) {
                                            (o.trialSkinTask = null), e && ((o.trialSkin = e), o.trialSkin.setProperty(n)), i && i(t);
                                        });
                                }
                            }),
                            (e.prototype.cancelSwitchTrialSkin = function () {
                                this.trialSkinTask && (this.trialSkinTask.cancel = !0);
                            }),
                            (e.prototype.getTrialSkinItem = function () {
                                return this.trialSkin;
                            }),
                            (e.prototype.destroyTrialSkin = function () {
                                this.trialSkin = null;
                            }),
                            (e.prototype.loadSkin = function (n, a, r) {
                                return __awaiter(this, void 0, void 0, function () {
                                    var t,
                                        i,
                                        o = this;
                                    return __generator(this, function (e) {
                                        return (
                                            (t = n.name),
                                            (i = this.getSkinUrl(t, t + '.json', !1)),
                                            c.default.loadJson(i, function (e, t) {
                                                S.default.i('SKinMgr => loadSkin => loadJson', e, t), e ? r(null, _.Utility.SKINSWITCHESULT.ERROR) : n.cancel ? r(null, _.Utility.SKINSWITCHESULT.CANCELED) : o.parseSkin(n, new s.default(t), a, r);
                                            }),
                                            [2]
                                        );
                                    });
                                });
                            }),
                            (e.prototype.parseSkin = function (p, h, f, m) {
                                return (
                                    void 0 === m && (m = null),
                                    __awaiter(this, void 0, void 0, function () {
                                        var t,
                                            a,
                                            i,
                                            o,
                                            n,
                                            r,
                                            s,
                                            c,
                                            l,
                                            u,
                                            d = this;
                                        return __generator(this, function (e) {
                                            switch (e.label) {
                                                case 0:
                                                    for (t = p.name, (a = new g.default()).name = t, a.skinRaw = h, this.calcInnerSize(a), i = h.getAtlasInfos(), r = 0, s = i.length; r < s; ++r) (o = i[r]), (a.atlasMap[o.name] = this.createAtlas(t, o, f));
                                                    if ((n = h.getAnimationWorks())) for (r = 0, s = n.length; r < s; ++r) (c = n[r]), (a.animationWorks[c._name] = c);
                                                    return (
                                                        (l = 0),
                                                        [
                                                            4,
                                                            (u = function () {
                                                                return __awaiter(d, void 0, void 0, function () {
                                                                    var t, i, o, n;
                                                                    return __generator(this, function (e) {
                                                                        if (p.cancel) return S.default.i('SKinMgr => loadSkin => loadJson => parseSkin => checkFunction cancel.', p), m(null, _.Utility.SKINSWITCHESULT.CANCELED), [2];
                                                                        if (1e3 <= l) return console.warn('Load skin failed.'), S.default.i('SKinMgr => loadSkin => loadJson => parseSkin => checkFunction failed try time >=200.', p, l), m(null, _.Utility.SKINSWITCHESULT.TIMEOUT), [2];
                                                                        for (o in ((t = !0), (i = a.atlasMap)))
                                                                            if (!i[o].stepLoad()) {
                                                                                t = !1;
                                                                                break;
                                                                            }
                                                                        return t ? (S.default.i('SKinMgr => loadSkin => loadJson => parseSkin => checkFunction finish success.', p), (n = new y.default(a)), m(n, _.Utility.SKINSWITCHESULT.SUCCESS)) : (++l, setTimeout(u, 10)), [2];
                                                                    });
                                                                });
                                                            })(),
                                                        ]
                                                    );
                                                case 1:
                                                    return e.sent(), [2];
                                            }
                                        });
                                    })
                                );
                            }),
                            (e.prototype.sleep = function (t) {
                                return __awaiter(this, void 0, void 0, function () {
                                    return __generator(this, function (e) {
                                        return [
                                            2,
                                            new Promise(function (e) {
                                                return setTimeout(e, t);
                                            }),
                                        ];
                                    });
                                });
                            }),
                            (e.prototype.calcInnerSize = function (e) {
                                if (((e.blockSize.width = n.G.Ap.config.mBaseBlockWidth), (e.blockSize.height = n.G.Ap.config.mBaseBlockHeight), (e.sceneSize.width = n.G.Ap.config.presentWidth), (e.sceneSize.height = n.G.Ap.config.presentHeight), (e.adapterSize.width = Math.max(e.skinRaw.getDesign().width, e.sceneSize.width)), (e.adapterSize.height = Math.max(e.skinRaw.getDesign().height, e.sceneSize.height + 2)), (e.adapterPos.x = 0), void (e.adapterPos.y = 0) !== e.skinRaw.getDesign().horizontal)) {
                                    var t = e.skinRaw.getDesign().horizontal;
                                    (i = t[this.screenType]) || (i = t.default), 'center' === i ? (e.adapterPos.x = (e.sceneSize.width - e.adapterSize.width) / 2) : 'right' === i ? (e.adapterPos.x = e.sceneSize.width - e.adapterSize.width) : 'number' == typeof i && (e.adapterPos.x = i);
                                }
                                if (void 0 !== e.skinRaw.getDesign().vertical) {
                                    var i,
                                        o = e.skinRaw.getDesign().vertical;
                                    (i = o[this.screenType]) || (i = o.default), 'center' === i ? (e.adapterPos.y = (e.sceneSize.height - e.adapterSize.height) / 2) : 'top' === i ? ((e.adapterPos.y = Math.floor(e.sceneSize.height - e.adapterSize.height)), (e.adapterPos.y += 1)) : 'number' == typeof i && (i <= 1 && (i = 1), (e.adapterPos.y = Math.min(e.sceneSize.height + i - e.adapterSize.height, 0)));
                                }
                            }),
                            (e.prototype.createAtlas = function (e, t, i) {
                                var o = new l.default();
                                o.loadImage(this.getSkinUrl(e, t.path, i));
                                for (var n = 0, a = t.items.length; n < a; ++n) {
                                    var r = t.items[n],
                                        s = r.scale9Grid || null,
                                        c = r.rect;
                                    o.addItem(r.name, new _.Utility.Rect(c.x, c.y, c.width, c.height), !1, s);
                                }
                                return o;
                            }),
                            (e.prototype.getSkinUrl = function (e, t, i) {
                                var o = null;
                                return (o = 0 <= t.search('default/') ? 'resources/skin/' + t : 'resources/skin/' + e + '/' + t), a.default.getResourcePath(o);
                            }),
                            e
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../base/G': 'G',
                '../base/Log': 'Log',
                '../gamescene/atlas/SimpleAtlas': 'SimpleAtlas',
                '../util/PU': 'PU',
                '../util/ResLoader': 'ResLoader',
                '../util/Utility': 'Utility',
                './Skin': 'Skin',
                './SkinObject': 'SkinObject',
                './SkinRaw': 'SkinRaw',
            },
        ],
        SkinObject: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'a03a0qazsdKN6yZI6yb3oWZ', 'SkinObject'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = function () {
                    (this.name = 'default'), (this.blockSize = new cc.Size(0, 0)), (this.sceneSize = new cc.Size(0, 0)), (this.adapterSize = new cc.Size(0, 0)), (this.adapterPos = new cc.Vec2(0, 0)), (this.skinRaw = null), (this.atlasMap = new Object()), (this.animationWorks = new Object());
                };
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        SkinPieceDataMgr: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '92cac6o/xpATYiTNxWkxRTH', 'SkinPieceDataMgr'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../DB/DBMgr'),
                    n = (function () {
                        function e() {
                            (this.mPieceDataMap = new Map()), this.loadConfigData(function () {});
                        }
                        return (
                            (e.Ins = function () {
                                return e._instance || (e._instance = new e()), e._instance;
                            }),
                            (e.prototype.getPieceConfig = function (e) {
                                return this.mPieceDataMap.get(e) || (console.error('the piece id is error '), null);
                            }),
                            (e.prototype.getAllPieceConfig = function () {
                                return this.mPieceDataMap ? this.mPieceDataMap : (console.error('the pieceDataMap is null'), null);
                            }),
                            (e.prototype.loadConfigData = function (e) {
                                var t = o.default.Ins().getDBRows(o.eDataBase.eDB_SkinPiece);
                                t || (console.error('!!!!the robot data is error'), e(!1)), this.parseConfig(t);
                            }),
                            (e.prototype.parseConfig = function (e) {
                                for (var t = 0, i = e; t < i.length; t++) {
                                    var o = i[t],
                                        n = new r();
                                    (n.ID = o.getID()), (n.ItemID = o.getItemID()), (n.GiftRate = o.getGiftRate()), (n.VideoRate = o.getVideoRate());
                                    var a = this.mPieceDataMap.get(n.ItemID);
                                    null != a && null != a ? (a = n) : this.mPieceDataMap.set(n.ItemID, n);
                                }
                            }),
                            (e._instance = null),
                            e
                        );
                    })();
                i.default = n;
                var r = function () {};
                (i.SkinPieceConfig = r), cc._RF.pop();
            },
            {
                '../DB/DBMgr': 'DBMgr',
            },
        ],
        SkinPieceData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '353efXxV/ZH2b4vk4E6fG7u', 'SkinPieceData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.findId = function (e) {
                                return this.find('id', e);
                            }),
                            (t.prototype.getRow = function () {
                                return new a();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.SkinPieceData = n;
                var a = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getID = function () {
                            return this.getInt('id');
                        }),
                        (t.prototype.getItemID = function () {
                            return this.getString('item_id');
                        }),
                        (t.prototype.getGiftRate = function () {
                            return this.getInt('gift_rate');
                        }),
                        (t.prototype.getVideoRate = function () {
                            return this.getInt('video_rate');
                        }),
                        t
                    );
                })(o.default);
                (i.SkinPieceRow = a), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        SkinPieceMgr: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'a3721en+btNxbCsob59gX+C', 'SkinPieceMgr'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a,
                    o,
                    r = e('./../Logic/SkinDataManager'),
                    n = e('../Network/Protocol/StorageUtil'),
                    s = e('../../config/LSKey'),
                    c = e('../Logic/SkinPieceDataMgr'),
                    l = e('../../util/StringUtil'),
                    u = e('../../util/Utility'),
                    d = e('../Logic/EventBus'),
                    p = e('../Logic/NotifyEvent'),
                    h = e('../../base/Log'),
                    f = e('./../../util/NumberUtil'),
                    m = e('../Logic/GameItemsManager'),
                    g = e('../../util/PU');
                ((o = a = i.SkinType || (i.SkinType = {}))[(o.SongBox = 0)] = 'SongBox'), (o[(o.VideoGift = 1)] = 'VideoGift');
                var _ = (function () {
                    function e() {
                        (this.mPieceDic = new Map()), this.readChipDataFromLocal();
                    }
                    return (
                        (e.Ins = function () {
                            return e._instance || (e._instance = new e()), e._instance;
                        }),
                        (e.prototype.readChipDataFromLocal = function () {
                            var e = n.default.read(s.default.SKIN_PIECE_DATA, 'error');
                            'error' != e && this.parseToDic(e);
                        }),
                        (e.prototype.generateSkinPieceRandomly = function (e, t, i) {
                            if ((void 0 === i && (i = !0), g.default.isCM())) return null;
                            var o;
                            switch ((this.mPieceConfigDic || (this.mPieceConfigDic = c.default.Ins().getAllPieceConfig()), t)) {
                                case a.SongBox:
                                    o = this.generatePieceSongBox();
                                    break;
                                case a.VideoGift:
                                    o = this.generatePieceVideo();
                            }
                            var n = new y(o, e);
                            return i && '' != o && this.addPiece([n]), l.StringUtil.isEmpty(o) || e <= 0 ? null : n;
                        }),
                        (e.prototype.generatePieceSongBox = function () {
                            var o = 0,
                                n = u.Utility.getRandom(1, 100),
                                a = '';
                            return (
                                this.mPieceConfigDic.forEach(function (e, t) {
                                    var i = e;
                                    o < n && n <= o + i.GiftRate ? (a = i.ItemID) : (o += i.GiftRate);
                                }),
                                a
                            );
                        }),
                        (e.prototype.generatePieceVideo = function () {
                            var o = 0,
                                n = u.Utility.getRandom(1, 100),
                                a = '';
                            return (
                                this.mPieceConfigDic.forEach(function (e, t) {
                                    var i = e;
                                    o < n && n <= o + i.VideoRate ? (a = i.ItemID) : (o += i.VideoRate);
                                }),
                                a
                            );
                        }),
                        (e.prototype.addPiece = function (e) {
                            var i = this;
                            e.forEach(function (e) {
                                var t = i.mPieceDic.get(e.pieceID);
                                t ? (t.count += f.default.parseNum(e.count)) : ((t = new y(e.pieceID, e.count)), i.mPieceDic.set(t.pieceID, t)), d.default.fire(p.default.SKIN_TASK_UPDATE_PIECES_UI, e);
                            }),
                                this.saveChipDataToLocalStorage();
                        }),
                        (e.prototype.usePiece = function (e, t) {
                            var i = this.mPieceDic.get(e);
                            i ? ((i.count -= t), i.count < 0 && (h.default.e('piece use error'), (i.count = 0))) : console.error('碎片使用异常，不存在'), this.saveChipDataToLocalStorage();
                        }),
                        (e.prototype.getPieceCount = function (e) {
                            if (!l.StringUtil.isEmpty(e)) {
                                var t = this.mPieceDic.get(e);
                                return t ? t.count : 0;
                            }
                            return 0;
                        }),
                        (e.prototype.saveChipDataToLocalStorage = function () {
                            var e = this.parseToString(this.mPieceDic);
                            if (!e) throw new Error('碎片数据出错，Json转换异常');
                            n.default.save(s.default.SKIN_PIECE_DATA, e);
                        }),
                        (e.prototype.parseToString = function (e) {
                            var i = Object.create(null);
                            return (
                                e.forEach(function (e, t) {
                                    i[t] = e;
                                }),
                                i ? JSON.stringify(i) : null
                            );
                        }),
                        (e.prototype.parseToDic = function (e) {
                            var n = this;
                            if (l.StringUtil.isEmpty(e)) h.default.e('读取map错误 为空');
                            else {
                                var a = JSON.parse(e);
                                this.mPieceDic.clear(),
                                    Object.keys(a).forEach(function (e) {
                                        var t = a[e];
                                        if (t) {
                                            var i = f.default.parseNum(t.count),
                                                o = new y(t.pieceID, i);
                                            n.mPieceDic.set(e, o);
                                        }
                                    });
                            }
                        }),
                        (e.prototype.isPieceFulled = function (e, t) {
                            if (null == e || null == e) return 0;
                            var i = r.SkinDataMgr.Ins().getSkinByPieceId(e),
                                o = Number.MAX_VALUE;
                            if (i) {
                                if (!i.isPiecesSkin()) return 0;
                                var n = r.SkinDataMgr.Ins().getOwnedSkin(i.name);
                                if (null != n && n.isOwnedPermanent()) return t;
                                o = i.piecesTotal;
                            }
                            var a = this.getPieceCount(e) + t;
                            return o < a ? a - o : -1;
                        }),
                        (e.prototype.isNeedShowPieceTipsDialog = function (e) {
                            var t = n.default.read(s.default.HAS_SHOW_SKIN_PIECE_TIPS_DIALOG);
                            if (l.StringUtil.isEmpty(t)) {
                                for (var i = 0; i < e.length; i++) if (e[i].awardType == m.GameItemType.TYPE_PIECE) return !0;
                                return !1;
                            }
                            return !1;
                        }),
                        (e.PIECE_TO_GOLD = 50),
                        (e._instance = null),
                        e
                    );
                })();
                i.default = _;
                var y = function (e, t) {
                    (this.pieceID = e), (this.count = t);
                };
                (i.Piece = y), cc._RF.pop();
            },
            {
                '../../base/Log': 'Log',
                '../../config/LSKey': 'LSKey',
                '../../util/PU': 'PU',
                '../../util/StringUtil': 'StringUtil',
                '../../util/Utility': 'Utility',
                '../Logic/EventBus': 'EventBus',
                '../Logic/GameItemsManager': 'GameItemsManager',
                '../Logic/NotifyEvent': 'NotifyEvent',
                '../Logic/SkinPieceDataMgr': 'SkinPieceDataMgr',
                '../Network/Protocol/StorageUtil': 'StorageUtil',
                './../../util/NumberUtil': 'NumberUtil',
                './../Logic/SkinDataManager': 'SkinDataManager',
            },
        ],
        SkinRaw: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '0c6a4+N105Lmpid1ysOn2Gz', 'SkinRaw'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var G = e('../util/Utility'),
                    o = e('../base/G'),
                    O = e('../gamescene/MUI/MUIDefines'),
                    f = (function () {
                        function e(e, t) {
                            void 0 === t && (t = null), (this.node = e), (this.actions = []), this.addAction(t);
                        }
                        return (
                            (e.prototype.addAction = function (e) {
                                e && this.actions.push(e);
                            }),
                            e
                        );
                    })();
                i.SkinEffectItem = f;
                var n = (function () {
                    function e(e) {
                        (this.rawData = e), this.complementRawData(), this.createInnerSize();
                    }
                    return (
                        (e.prototype.getDesign = function () {
                            return this.rawData.design;
                        }),
                        (e.prototype.getBlockEffectCount = function () {
                            var e = this.rawData.blockEffect;
                            return e ? e.length : 0;
                        }),
                        (e.prototype.getBlockLongEffectCount = function () {
                            var e = this.rawData.blockLongEffect || this.rawData.blockEffect;
                            return e ? e.length : 0;
                        }),
                        (e.prototype.getAtlasInfos = function () {
                            return this.rawData.atlas;
                        }),
                        (e.prototype.getAnimationWorks = function () {
                            return this.rawData.animationWorks;
                        }),
                        (e.prototype.getBlockAtlasName = function () {
                            if (this.rawData.blockImage) return this.rawData.blockImage.imageData;
                        }),
                        (e.prototype.getUIElementEffects = function () {
                            return this.rawData.uiElementEffects;
                        }),
                        (e.prototype.getUIElementEffectItem = function (e, t) {
                            var i = this.getUIElementEffects();
                            if (!i) return null;
                            var o = i[e];
                            if (!o) return null;
                            for (var n = null, a = 0, r = o.length; a < r; ++a) {
                                var s = o[a];
                                if (s.name === t) {
                                    n = s;
                                    break;
                                }
                            }
                            return n;
                        }),
                        (e.prototype.createBlockEffectNode = function (e, t, i) {
                            var o = this.rawData.blockEffect;
                            return !o || i >= o.length ? null : this.createNode(e, o[i].node, t);
                        }),
                        (e.prototype.createBlockEffectAction = function (e, t, i) {
                            var o = this.rawData.blockEffect;
                            return !o || i >= o.length ? null : this.createMAction(e, o[i].action, t);
                        }),
                        (e.prototype.createBlockLongEffectNode = function (e, t, i) {
                            var o = this.rawData.blockLongEffect || this.rawData.blockEffect;
                            return !o || i >= o.length ? null : this.createNode(e, o[i].node, t);
                        }),
                        (e.prototype.createBlockLongEffectAction = function (e, t, i) {
                            var o = this.rawData.blockLongEffect || this.rawData.blockEffect;
                            return !o || i >= o.length ? null : this.createMAction(e, o[i].action, t);
                        }),
                        (e.prototype.createBackgroundNode = function (e, t) {
                            var i = this.rawData.backgroundImage;
                            return this.createNode(e, i.node, t);
                        }),
                        (e.prototype.createBackgroundChangeActions = function (e, t) {
                            var i = this.rawData.backgroundImage;
                            return i && i.switch ? this.createMActionGroup(e, i.switch.actions, t) : null;
                        }),
                        (e.prototype.createBackgroundLoopActions = function (e, t) {
                            var i = this.rawData.backgroundImage;
                            return i && i.loop ? this.createMActionGroup(e, i.loop.actions, t) : null;
                        }),
                        (e.prototype.createBackgroundEffects = function (e, t, i, o) {
                            if (!this.rawData.backgroundEffects) return null;
                            var n = this.rawData.backgroundEffects[e];
                            if (!n) return null;
                            for (var a = [], r = 0, s = n.length; r < s; ++r) {
                                var c = n[r],
                                    l = this.createNode(t, c.node, i);
                                if (c.action) {
                                    var u = this.createMAction(t, c.action, o);
                                    a.push(new f(l, u));
                                } else if (c.actions) {
                                    for (var d = new f(l), p = 0, h = c.actions.length; p < h; ++p) {
                                        u = this.createMAction(t, c.actions[p], o);
                                        d.addAction(u);
                                    }
                                    a.push(d);
                                }
                            }
                            return a;
                        }),
                        (e.prototype.createNode = function (e, t, i) {
                            if (null == t.type) return null;
                            var o = null;
                            if ('MUISprite' === t.type) {
                                var n = i.createSpriteNode(t.name);
                                if (t.imageData) {
                                    var a = e.atlasMap[t.imageData];
                                    (n.imageData = a), t.imageItem && (n.imageItem = a.getItem(t.imageItem)), t.frameSequence && (n.frameSequence = a.createFrameSequence(t.frameSequence));
                                }
                                o = n;
                            } else o = i.createNode(t.name);
                            if ((void 0 !== t.opacity && o.setOpacity(t.opacity), t.rect))
                                if (t.rect_max) {
                                    var r = new G.Utility.Rect(0, 0, 0, 0),
                                        s = new G.Utility.Rect(0, 0, 0, 0),
                                        c = new G.Utility.Rect(0, 0, 0, 0);
                                    this.convertRect(e, t.rect, r), this.convertRect(e, t.rect_max, s), this.randromRect(r, s, c);
                                    var l = c.width / r.width;
                                    o.getRect().set(c.x, c.y, r.width, r.height), o.setScale(l, l);
                                } else this.convertRect(e, t.rect, o.getRect());
                            if (t.children)
                                for (var u = 0, d = t.children.length; u < d; ++u) {
                                    var p = this.createNode(e, t.children[u], i);
                                    o.addChild(p);
                                }
                            return o;
                        }),
                        (e.prototype.createMActionGroup = function (e, t, i) {
                            if (!t || !t.length || t.length <= 0) return null;
                            for (var o = [], n = 0, a = t; n < a.length; n++) {
                                var r = a[n];
                                o.push(this.createMAction(e, r, i));
                            }
                            return o;
                        }),
                        (e.prototype.createMAction = function (e, t, i) {
                            if (null == t.type) return null;
                            var o = t.type;
                            switch (i.getIdByName(o)) {
                                case O.MUI.ActionId.ChildAction:
                                    if (void 0 !== (w = t.params).child && void 0 !== w.action) {
                                        var n = this.createMAction(e, w.action, i);
                                        return i.createMChildAction(w.child, n);
                                    }
                                    break;
                                case O.MUI.ActionId.Sequence:
                                    if ((w = t.params) && w.length) {
                                        for (var a = [], r = 0, s = w; r < s.length; r++) {
                                            var c = s[r];
                                            (n = this.createMAction(e, c, i)) && a.push(n);
                                        }
                                        return (d = i.createMSequence()).addActions(a), d;
                                    }
                                    break;
                                case O.MUI.ActionId.Spawn:
                                    if ((w = t.params) && w.length) {
                                        a = [];
                                        for (var l = 0, u = w; l < u.length; l++) {
                                            c = u[l];
                                            (n = this.createMAction(e, c, i)) && a.push(n);
                                        }
                                        var d;
                                        return (d = i.createMSpawn()).addActions(a), d;
                                    }
                                    break;
                                case O.MUI.ActionId.PropValue:
                                    if (void 0 !== (w = t.params).prop && void 0 !== w.value) {
                                        var p = w.value;
                                        return 'null' === p ? (p = null) : 'imageData' === w.prop ? (p = e.atlasMap[w.value]) : 'imageItem' === w.prop && w.imageData && (p = e.atlasMap[w.imageData].getItem(w.value)), i.createMPropValue(w.prop, p);
                                    }
                                    break;
                                case O.MUI.ActionId.ScaleTo:
                                    if (void 0 !== (w = t.params).x && void 0 !== w.y && void 0 !== w.duration) return i.createMScaleTo(w.x, w.y, w.duration);
                                    break;
                                case O.MUI.ActionId.FadeTo:
                                    if (void 0 !== (w = t.params).opacity && void 0 !== w.duration) return i.createMFadeTo(w.opacity, w.duration);
                                    break;
                                case O.MUI.ActionId.MoveTo:
                                    if (void 0 !== (w = t.params).x && void 0 !== w.y && void 0 !== w.duration) return i.createMMoveTo(w.x, w.y, w.duration);
                                    break;
                                case O.MUI.ActionId.MoveBy:
                                    if (void 0 !== (w = t.params).x && void 0 !== w.y && void 0 !== w.duration) return i.createMMoveBy(w.x, w.y, w.duration);
                                    break;
                                case O.MUI.ActionId.CircleMoveTo:
                                    if (void 0 !== (w = t.params).centerX && void 0 !== w.centerY && void 0 !== w.angle && void 0 !== w.duration) return i.createMCircleMoveTo(w.centerX, w.centerY, w.angle, w.duration);
                                    break;
                                case O.MUI.ActionId.CircleMoveBy:
                                    if (void 0 !== (w = t.params).centerX && void 0 !== w.centerY && void 0 !== w.angle && void 0 !== w.duration) return i.createMCircleMoveBy(w.centerX, w.centerY, w.angle, w.duration);
                                    break;
                                case O.MUI.ActionId.FrameSequence:
                                    if (void 0 !== (w = t.params).frameCount && void 0 !== w.duration) return i.createMFrameSequence(w.frameCount, w.duration);
                                    break;
                                case O.MUI.ActionId.AdvanceAnimation:
                                    if (void 0 !== (w = t.params).animation) {
                                        var h = e.animationWorks[w.animation];
                                        if (h) return i.createMAdvanceAnimation(h);
                                    }
                                    break;
                                case O.MUI.ActionId.Delay:
                                    if (void 0 !== (w = t.params).duration) return i.createMDelayAction(w.duration);
                                    break;
                                case O.MUI.ActionId.RandomMove:
                                    if (void 0 !== (w = t.params).duration) {
                                        var f = void 0 !== w.cycle ? w.cycle : 0,
                                            m = void 0 !== w.moveStep ? w.moveStep : 0,
                                            g = new G.Utility.Rect(0, 0, 0, 0);
                                        return void 0 !== w.moveRegion && this.convertRect(e, w.moveRegion, g), i.createMRandomMove(f, m, g, w.duration);
                                    }
                                    break;
                                case O.MUI.ActionId.RandomFade:
                                    if (void 0 !== (w = t.params).duration && void 0 !== w.cycle) return i.createMRandomFade(w.cycle, w.duration);
                                    break;
                                case O.MUI.ActionId.RandomChange:
                                    if (void 0 !== (w = t.params).duration) {
                                        (f = void 0 !== w.cycle ? w.cycle : 0), (m = void 0 !== w.moveStep ? w.moveStep : 0);
                                        var _ = void 0 !== w.moveStepX ? w.moveStepX : m,
                                            y = void 0 !== w.moveStepY ? w.moveStepY : m;
                                        g = new G.Utility.Rect(0, 0, 0, 0);
                                        void 0 !== w.moveRegion && this.convertRect(e, w.moveRegion, g);
                                        var S = void 0 !== w.directX ? w.directX : 0,
                                            v = void 0 !== w.directY ? w.directY : 0,
                                            I = void 0 !== w.scaleMin ? w.scaleMin : 1,
                                            T = void 0 !== w.scaleMax ? w.scaleMax : 1,
                                            C = void 0 === w.scaleOncePreCycle || w.scaleOncePreCycle,
                                            E = void 0 !== w.randomMoveOnHitEdge && w.randomMoveOnHitEdge,
                                            A = void 0 !== w.randomMoveOnFade && w.randomMoveOnFade,
                                            P = void 0 !== w.randomMoveOnHitEdgeMask ? w.randomMoveOnHitEdgeMask : E ? 15 : 0,
                                            k = void 0 !== w.opacityMin ? w.opacityMin : 0,
                                            M = void 0 !== w.opacityMax ? w.opacityMax : 1,
                                            L = void 0 !== w.opacityFollowScale ? w.opacityFollowScale : 0,
                                            b = void 0 !== w.frameCount ? w.frameCount : 0,
                                            N = void 0 !== w.frameSpeedMin ? w.frameSpeedMin : 0,
                                            R = void 0 !== w.frameSpeedMax ? w.frameSpeedMax : 0,
                                            D = g.clone();
                                        return void 0 !== w.bornRegion && this.convertRect(e, w.bornRegion, D), i.createMRandomChange(f, _, y, g, S, v, I, T, C, k, M, L, b, N, R, P, A, D, w.duration);
                                    }
                                    break;
                                case O.MUI.ActionId.SetProperty:
                                    var w;
                                    if ((w = JSON.parse(JSON.stringify(t.params)))) {
                                        if ((void 0 !== w.imageData && (w.imageData = e.atlasMap[w.imageData]), void 0 !== w.imageItem)) {
                                            var B = w.imageData;
                                            B && 'null' != w.imageItem ? (w.imageItem = B.getItem(w.imageItem)) : (w.imageItem = null);
                                        }
                                        return i.createMSetProperty(w);
                                    }
                            }
                            return null;
                        }),
                        (e.prototype.randromRect = function (e, t, i) {
                            (i.x = Math.floor(e.x + (t.x - e.x) * Math.random())), (i.y = Math.floor(e.y + (t.y - e.y) * Math.random())), (i.width = Math.floor(e.width + (t.width - e.width) * Math.random())), (i.height = Math.floor(e.height + (t.height - e.height) * Math.random()));
                        }),
                        (e.prototype.convertRect = function (e, t, i) {
                            var o = void 0 !== t.heightAddtion ? this.getInnerValue(e, t.heightAddtion) : 0,
                                n = void 0 !== t.widthAddtion ? this.getInnerValue(e, t.widthAddtion) : 0,
                                a = void 0 !== t.xAddtion ? this.getInnerValue(e, t.xAddtion) : 0,
                                r = void 0 !== t.yAddtion ? this.getInnerValue(e, t.yAddtion) : 0;
                            (i.width = this.getInnerValue(e, t.width) + n), (i.height = this.getInnerValue(e, t.height) + o), (i.x = this.getInnerValue(e, t.x) + a), (i.y = this.getInnerValue(e, t.y) + r);
                        }),
                        (e.prototype.getInnerValue = function (e, t) {
                            var i = 0,
                                o = this.innerSize[t];
                            if (o)
                                switch (o) {
                                    case -1:
                                        i = e.sceneSize.width;
                                        break;
                                    case -2:
                                        i = e.sceneSize.height;
                                        break;
                                    case -3:
                                        i = e.adapterPos.x;
                                        break;
                                    case -4:
                                        i = e.adapterPos.y;
                                        break;
                                    case -5:
                                        i = e.adapterSize.width;
                                        break;
                                    case -6:
                                        i = e.adapterSize.height;
                                }
                            else i = t;
                            return i;
                        }),
                        (e.prototype.createInnerSize = function () {
                            (this.innerSize = new Object()), (this.innerSize['scene.width'] = -1), (this.innerSize['scene.height'] = -2), (this.innerSize['adapter.x'] = -3), (this.innerSize['adapter.y'] = -4), (this.innerSize['adapter.width'] = -5), (this.innerSize['adapter.height'] = -6);
                        }),
                        (e.prototype.complementRawData = function () {
                            o.G.Ap.config;
                            this.rawData.design || (this.rawData.design = new Object());
                            var e = this.rawData.design;
                            e.width || (e.width = 720),
                                e.height || (e.height = 1559),
                                e.horizontal ||
                                    (e.horizontal = {
                                        default: 'center',
                                    }),
                                e.horizontal.default || (e.horizontal.default = 'center'),
                                e.vertical ||
                                    (e.vertical = {
                                        s1: 87,
                                        s2: 35,
                                        s3: 0,
                                        default: 'center',
                                    }),
                                e.vertical.default || (e.vertical.default = 'center'),
                                null == e.longBlockDotAnimaion && (e.longBlockDotAnimaion = !1);
                        }),
                        e
                    );
                })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../base/G': 'G',
                '../gamescene/MUI/MUIDefines': 'MUIDefines',
                '../util/Utility': 'Utility',
            },
        ],
        SkinStoreItem: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '4dea4MFoNhNiZrJzNStmfwN', 'SkinStoreItem'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../Logic/SkinDataManager'),
                    n = e('../UI/GameEntraScene/BasicTouchEvent'),
                    r = e('../../base/Log'),
                    s = e('../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    c = e('../../util/PU'),
                    l = e('./SkinPieceMgr'),
                    u = e('../../util/StringUtil'),
                    d = e('../Logic/EventBus'),
                    p = e('../Logic/NotifyEvent'),
                    h = e('../UI/GameEntraScene/ImgCache'),
                    f = e('../propAddition/Define'),
                    m = e('../Logic/I18nManager'),
                    a = cc._decorator,
                    g = a.ccclass,
                    _ = a.property,
                    y = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.root_layout = null), (e.skin_sprite = null), (e.invite_tag_sprite = null), (e.lock_sprite = null), (e.skin_name_label = null), (e.use_btn = null), (e.gain_layout = null), (e.try_btn = null), (e.gain_btn = null), (e.tips_label = null), (e.time_txt = null), (e.time_info = null), (e.additionNode = null), (e.additionRichText = null), (e.pieceNode = null), (e.pieceSprite = null), (e.pieceCountLabel = null), (e.mType = 0), (e.mToUseClickCallback = null), (e.mTryUseClickCallback = null), (e.mTryClickCallback = null), (e.mGainClickCallback = null), (e.hasInit = !1), e;
                        }
                        var a;
                        return (
                            __extends(e, t),
                            ((a = e).prototype.setTryCallback = function (e) {
                                this.tryCallback = e;
                            }),
                            (e.prototype.setUseCallback = function (e) {
                                this.useCallback = e;
                            }),
                            (e.prototype.setToSkinChipCallback = function (e) {
                                this.toSkinChipCallback = e;
                            }),
                            (e.prototype.setConsumeCertificationCallback = function (e) {
                                this.consumeCertificationCallback = e;
                            }),
                            (e.prototype.setSignGainCallback = function (e) {
                                this.signGainCallback = e;
                            }),
                            (e.prototype.setPieceGainCallback = function (e) {
                                this.pieceGainCallback = e;
                            }),
                            (e.prototype.onLoad = function () {
                                this.initEvent();
                            }),
                            (e.prototype.start = function () {}),
                            (e.prototype.onDestroy = function () {
                                this.unRegistEvent();
                            }),
                            (e.prototype.initEvent = function () {
                                d.default.register(p.default.SKIN_TASK_UPDATE_PIECES_UI, this.updatePieces, this), d.default.register(p.default.UNLOCK_NORMAL_SKIN_EVENT, this.unlockSkinRefresh, this);
                            }),
                            (e.prototype.unRegistEvent = function () {
                                d.default.remove(p.default.SKIN_TASK_UPDATE_PIECES_UI, this.updatePieces, this), d.default.remove(p.default.UNLOCK_NORMAL_SKIN_EVENT, this.unlockSkinRefresh, this);
                            }),
                            (e.prototype.unlockSkinRefresh = function (e, t) {
                                e == p.default.UNLOCK_NORMAL_SKIN_EVENT && this.mSkinItemInfo && this.mSkinItemInfo.name == t[0] && this.setData(o.SkinDataMgr.Ins().getSkinItemInfoBySkinId(this.mSkinItemInfo.skinId), this.itemID);
                            }),
                            (e.prototype.updatePieces = function (e, t) {
                                r.default.i('[SkinStoreItem]====>>> updatePieces 更新 界面 碎片数量 params = ', t);
                                var i = t[0];
                                this.mSkinItemInfo.piecesId == i.pieceID && !o.SkinDataMgr.Ins().isOwnedPermanent(this.mSkinItemInfo.name) && this.mSkinItemInfo.isPiecesSkin() && 1 == this.pieceNode.active && (this.pieceCountLabel.string = l.default.Ins().getPieceCount(this.mSkinItemInfo.piecesId) + '/' + this.mSkinItemInfo.piecesTotal);
                            }),
                            (e.prototype.setTouchCb = function (e, t) {
                                if (e && t) {
                                    var i = e instanceof cc.Component ? e.node : e;
                                    i && i.on(cc.Node.EventType.TOUCH_END, t.click, t);
                                }
                            }),
                            (e.prototype.signGainClick = function () {
                                this.signGainCallback && this.mSkinItemInfo && this.signGainCallback(this.mSkinItemInfo);
                            }),
                            (e.prototype.toUseClick = function () {
                                this.useCallback && this.mSkinItemInfo && this.useCallback(this.mSkinItemInfo);
                            }),
                            (e.prototype.tryClick = function () {
                                this.tryCallback && this.mSkinItemInfo && this.tryCallback(this.mSkinItemInfo);
                            }),
                            (e.prototype.ticketCountClick = function () {
                                this.consumeCertificationCallback && this.mSkinItemInfo && this.consumeCertificationCallback(this.mSkinItemInfo);
                            }),
                            (e.prototype.setData = function (e, t) {
                                if (((this.itemID = t), null != (this.mSkinItemInfo = e))) {
                                    if (((this.root_layout.node.active = !0), (this.mType = this.getShowType(e)), (this.skin_name_label.string = e.displayName), e.resId && h.default.get2(e.resId, this.skin_sprite), !c.default.isCM())) {
                                        var i = f.default.getAdditionDesc(e.skinId);
                                        u.StringUtil.isEmpty(i) && (this.additionNode.active = !1);
                                    }
                                    this.updateUIByType(e), this.updateTimeInfo(e);
                                } else this.root_layout.node.active = !1;
                            }),
                            (e.prototype.updateTimeInfo = function (e) {
                                e.isLock || (0 == e.expireTime ? (this.time_info.active = !1) : ((this.time_info.active = !0), this.updateTimeStr(e.expireTime)));
                            }),
                            (e.prototype.updateTimeStr = function (e) {
                                var t = e - s.MGUser.getCurrentServerTime(),
                                    i = 0;
                                (t = 0 < t ? t : 0) >= a.ONE_DAY_MS && (i = Math.round(t / a.ONE_DAY_MS));
                                var o = t % a.ONE_DAY_MS,
                                    n = Math.round(o / a.ONE_HOURS_MS + 0.5);
                                1 <= i ? (this.time_txt.string = i + m.default.getInstance().getLanguageByKey('label_text.day')) : 0 < n && (this.time_txt.string = n + m.default.getInstance().getLanguageByKey('label_text.hours'));
                            }),
                            (e.prototype.updateUIByType = function (e) {
                                (this.tips_label.node.active = !1), (this.pieceNode.active = !1), e.isLock ? ((this.lock_sprite.node.active = !0), (this.use_btn.node.active = !1), (this.gain_layout.node.active = !0), this.updateTryBtnStatus(this.try_btn), this.updateGainBtnUi(this.gain_btn), this.mType == a.TYPE_SIGN && ((this.tips_label.node.active = !0), (this.tips_label.string = m.default.getInstance().getLanguageByKey('label_text.skin_first_charge_get')))) : ((this.lock_sprite.node.active = !1), (this.tips_label.string = m.default.getInstance().getLanguageByKey('label_text.skin_owned')), this.isSkinUnlockPermanent(e) ? ((this.use_btn.node.active = !0), (this.gain_layout.node.active = !1), this.updateUseBtnStatus(this.use_btn, e.isUsing)) : ((this.use_btn.node.active = !1), (this.gain_layout.node.active = !0), this.updateUseBtnStatus(this.try_btn, e.isUsing, !1), this.updateGainBtnUi(this.gain_btn))), e.type == o.SkinItemInfo.SKIN_TYPE_INVITE && c.default.supportCMOnshare() && (this.invite_tag_sprite.node.active = !0);
                            }),
                            (e.prototype.updateGainBtnUi = function (i) {
                                var e = this;
                                if (null != i) {
                                    var t = m.default.getInstance().getLanguageByKey('label_text.skin_get');
                                    (i.getComponentInChildren(cc.RichText).string = '<size=28>' + t + '</s>'),
                                        h.default.get('/ui/skin_store_btn_use_normal', function (e, t) {
                                            t && i.isValid && ((i.getComponent(cc.Sprite).spriteFrame = t), (i.normalSprite = t));
                                        }),
                                        h.default.get('/ui/skin_store_btn_use_pressed', function (e, t) {
                                            t && i.isValid && (i.pressedSprite = t);
                                        }),
                                        null == this.mGainClickCallback &&
                                            ((this.mGainClickCallback = new n.default(function () {
                                                r.default.i('SkinStoreItem mGainClickCallback this.mSkinItemInfo = ', e.mSkinItemInfo), e.signGainClick();
                                            })),
                                            this.setTouchCb(i, this.mGainClickCallback));
                                }
                            }),
                            (e.prototype.updateTryBtnStatus = function (i) {
                                var e = this;
                                null != i &&
                                    ((i.getComponentInChildren(cc.Label).string = m.default.getInstance().getLanguageByKey('label_text.skin_trial')),
                                    h.default.get('/ui/skin_store_btn_try_normal', function (e, t) {
                                        t && i.isValid && ((i.getComponent(cc.Sprite).spriteFrame = t), (i.normalSprite = t));
                                    }),
                                    h.default.get('/ui/skin_store_btn_try_pressed', function (e, t) {
                                        t && i.isValid && (i.pressedSprite = t);
                                    }),
                                    this.mTryUseClickCallback && (i.node.off(cc.Node.EventType.TOUCH_END, this.mTryUseClickCallback.click, this.mTryUseClickCallback), (this.mTryUseClickCallback = null)),
                                    null == this.mTryClickCallback &&
                                        ((this.mTryClickCallback = new n.default(function () {
                                            r.default.i('SkinStoreItem mTryClickCallback this.mSkinItemInfo = ', e.mSkinItemInfo), e.tryClick();
                                        })),
                                        this.setTouchCb(i, this.mTryClickCallback)));
                            }),
                            (e.prototype.updateUseBtnStatus = function (i, e, t) {
                                var o = this;
                                void 0 === t && (t = !0),
                                    null != i &&
                                        ((i.interactable = !e),
                                        e
                                            ? ((i.getComponentInChildren(cc.Label).string = t ? m.default.getInstance().getLanguageByKey('label_text.use_now') : m.default.getInstance().getLanguageByKey('label_text.litu')),
                                              h.default.get('/ui/skin_store_btn_use_disabled', function (e, t) {
                                                  t && i.isValid && ((i.getComponent(cc.Sprite).spriteFrame = t), (i.normalSprite = t));
                                              }),
                                              i == this.use_btn ? this.mToUseClickCallback && (i.node.off(cc.Node.EventType.TOUCH_END, this.mToUseClickCallback.click, this.mToUseClickCallback), (this.mToUseClickCallback = null)) : i == this.try_btn && (this.mTryClickCallback && (i.node.off(cc.Node.EventType.TOUCH_END, this.mTryClickCallback.click, this.mTryClickCallback), (this.mTryClickCallback = null)), this.mTryUseClickCallback && (i.node.off(cc.Node.EventType.TOUCH_END, this.mTryUseClickCallback.click, this.mTryUseClickCallback), (this.mTryUseClickCallback = null))))
                                            : ((i.getComponentInChildren(cc.Label).string = m.default.getInstance().getLanguageByKey('label_text.use_now')),
                                              h.default.get('/ui/skin_store_btn_use_normal', function (e, t) {
                                                  t && i.isValid && ((i.getComponent(cc.Sprite).spriteFrame = t), (i.normalSprite = t));
                                              }),
                                              h.default.get('/ui/skin_store_btn_use_pressed', function (e, t) {
                                                  t && i.isValid && (i.pressedSprite = t);
                                              }),
                                              i == this.use_btn
                                                  ? null == this.mToUseClickCallback &&
                                                    ((this.mToUseClickCallback = new n.default(function () {
                                                        r.default.l('SkinStoreItem mToUseClickCallback'), o.toUseClick();
                                                    })),
                                                    this.setTouchCb(i, this.mToUseClickCallback))
                                                  : i == this.try_btn &&
                                                    (this.mTryClickCallback && (i.node.off(cc.Node.EventType.TOUCH_END, this.mTryClickCallback.click, this.mTryClickCallback), (this.mTryClickCallback = null)),
                                                    null == this.mTryUseClickCallback &&
                                                        ((this.mTryUseClickCallback = new n.default(function () {
                                                            r.default.l('SkinStoreItem mToUseClickCallback'), o.toUseClick();
                                                        })),
                                                        this.setTouchCb(i, this.mTryUseClickCallback)))));
                            }),
                            (e.prototype.setTryBtnEnable = function (i, e) {
                                var o = this;
                                null != i &&
                                    ((i.interactable = e)
                                        ? (h.default.get('/ui/skin_store_btn_try_normal', function (e, t) {
                                              t && cc.isValid(o, !0) && ((i.getComponent(cc.Sprite).spriteFrame = t), (i.normalSprite = t));
                                          }),
                                          h.default.get('/ui/skin_store_btn_try_pressed', function (e, t) {
                                              t && cc.isValid(o, !0) && ((i.getComponent(cc.Sprite).spriteFrame = t), (i.normalSprite = t));
                                          }))
                                        : (h.default.get('/ui/skin_store_btn_use_disabled', function (e, t) {
                                              t && cc.isValid(o, !0) && ((i.getComponent(cc.Sprite).spriteFrame = t), (i.normalSprite = t));
                                          }),
                                          h.default.get('/ui/skin_store_btn_use_disabled', function (e, t) {
                                              t && cc.isValid(o, !0) && ((i.getComponent(cc.Sprite).spriteFrame = t), (i.normalSprite = t));
                                          })));
                            }),
                            (e.prototype.getShowType = function (e) {
                                var t = a.TYPE_TICKET;
                                return e.type == o.SkinItemInfo.SKIN_TYPE_DAILYATTENDANCE && (t = a.TYPE_SIGN), e.type == o.SkinItemInfo.SKIN_TYPE_CERTIFICATION && (t = a.TYPE_TICKET), e.type == o.SkinItemInfo.SKIN_TYPE_INVITE && (t = a.TYPE_INVITE), e.type == o.SkinItemInfo.SKIN_TYPE_FIRST_PAY_ATTENTION && (t = c.default.isIOS() ? a.TYPE_TICKET : a.TYPE_FIRST_PAY), e.type == o.SkinItemInfo.SKIN_TYPE_JOIN_FIGHT && (t = a.TYPE_FIGHT), t;
                            }),
                            (e.prototype.isSkinUnlockPermanent = function (e) {
                                var t = o.SkinDataMgr.Ins().getOwnedSkin(e.name);
                                return !(null == t || !t.isOwnedPermanent());
                            }),
                            (e.TYPE_SIGN = 3),
                            (e.TYPE_TICKET = 4),
                            (e.TYPE_INVITE = 5),
                            (e.TYPE_FIRST_PAY = 6),
                            (e.TYPE_FIGHT = 7),
                            (e.ONE_DAY_MS = 864e5),
                            (e.ONE_HOURS_MS = 36e5),
                            __decorate([_(cc.Layout)], e.prototype, 'root_layout', void 0),
                            __decorate([_(cc.Sprite)], e.prototype, 'skin_sprite', void 0),
                            __decorate([_(cc.Sprite)], e.prototype, 'invite_tag_sprite', void 0),
                            __decorate([_(cc.Sprite)], e.prototype, 'lock_sprite', void 0),
                            __decorate([_(cc.Label)], e.prototype, 'skin_name_label', void 0),
                            __decorate([_(cc.Button)], e.prototype, 'use_btn', void 0),
                            __decorate([_(cc.Layout)], e.prototype, 'gain_layout', void 0),
                            __decorate([_(cc.Button)], e.prototype, 'try_btn', void 0),
                            __decorate([_(cc.Button)], e.prototype, 'gain_btn', void 0),
                            __decorate([_(cc.Label)], e.prototype, 'tips_label', void 0),
                            __decorate([_(cc.Label)], e.prototype, 'time_txt', void 0),
                            __decorate([_(cc.Node)], e.prototype, 'time_info', void 0),
                            __decorate([_(cc.Node)], e.prototype, 'additionNode', void 0),
                            __decorate([_(cc.RichText)], e.prototype, 'additionRichText', void 0),
                            __decorate([_(cc.Node)], e.prototype, 'pieceNode', void 0),
                            __decorate([_(cc.Sprite)], e.prototype, 'pieceSprite', void 0),
                            __decorate([_(cc.Label)], e.prototype, 'pieceCountLabel', void 0),
                            (e = a = __decorate([g], e))
                        );
                    })(cc.Component);
                (i.default = y), cc._RF.pop();
            },
            {
                '../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../base/Log': 'Log',
                '../../util/PU': 'PU',
                '../../util/StringUtil': 'StringUtil',
                '../Logic/EventBus': 'EventBus',
                '../Logic/I18nManager': 'I18nManager',
                '../Logic/NotifyEvent': 'NotifyEvent',
                '../Logic/SkinDataManager': 'SkinDataManager',
                '../UI/GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
                '../UI/GameEntraScene/ImgCache': 'ImgCache',
                '../propAddition/Define': 'Define',
                './SkinPieceMgr': 'SkinPieceMgr',
            },
        ],
        SkinStore: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '86990MHeLRNTrGlrOdOI26A', 'SkinStore'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var _ = e('../Logic/SkinDataManager'),
                    y = e('./SkinStoreItem'),
                    o = e('../UI/GameEntraScene/BasicTouchEvent'),
                    n = e('../UI/GameEntraScene/ToastPrefab'),
                    a = e('../Logic/EventBus'),
                    r = e('../Logic/NotifyEvent'),
                    s = e('../Network/Protocol/StorageUtil'),
                    c = e('../../base/G'),
                    l = e('./SkinTryData'),
                    u = e('../../infoc/m_p2_PData_Dia'),
                    d = e('../../util/SUtil'),
                    p = e('./SkinUtils'),
                    h = e('../../util/PU'),
                    f = e('../UI/GameEntraScene/PrefabMgr'),
                    m = e('../../util/StringUtil'),
                    g = e('./frag/SkinTaskItem'),
                    S = e('../../base/Log'),
                    v = e('../awardcontroller/AwardController'),
                    I = e('../Logic/GameItemsManager'),
                    T = e('./SkinPieceMgr'),
                    C = e('./BuySkinDiamondNotEnough'),
                    E = e('./SkinTaskPageViewPrefab'),
                    A = e('../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    P = e('../../infoc/m_p2_skin_piece'),
                    k = e('../UI/GameEntraScene/ImgCache'),
                    M = e('./SkinGainPrefab'),
                    L = e('../../../modules/MGAppShare/scripts/MGShareUtil'),
                    b = e('../reward/ActivityBean'),
                    N = e('../Logic/MoneySystem'),
                    R = e('../shop/DialogOneButtonPrefab'),
                    D = e('../UI/GameEntraScene/MusicLib/HotMusicCMShareController'),
                    w = e('../Logic/I18nManager'),
                    B = e('../keypad/KeypadNavigator'),
                    G = cc._decorator,
                    O = G.ccclass,
                    U = G.property,
                    F = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.root_layout = null), (e.defaultBtn = null), (e.back_btn = null), (e.scrollView = null), (e.spawnCount = 0), (e.totalCount = 0), (e.hSpacing = 0), (e.wSpacing = 0), (e.bufferZone = 0), (e.mItemPrefab = null), (e.mToastPrefab = null), (e.popup_layout = null), (e.mSkinStoreSprite = null), (e.mBuySkinDiamondNotEnoughPrefab = null), (e.mCloseClickCallback = null), (e.mShareGiftClickCallback = null), (e.mSkinPuzzleClickCallback = null), (e.mDefaultClickCb = null), (e.mContent = null), (e.itemTemplate = null), (e.items = []), (e.mRealIndex = []), (e.itemHeight = 466), (e.itemWidth = 316), (e.lastContentPosY = 0), (e.mIntialPosition = -1), (e.skinChangeCallback = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.setCloseCallback = function (e) {
                                this.closeCallback = e;
                            }),
                            (e.prototype.setSkinChangeCallback = function (e) {
                                this.skinChangeCallback = e;
                            }),
                            (e.prototype.setShareGiftCallback = function (e) {
                                this.shareGiftCallback = e;
                            }),
                            (e.prototype.setInviteSkinCallback = function (e) {
                                this.inviteSkinCallback = e;
                            }),
                            (e.prototype.setCMInviteSkinCallback = function (e) {
                                this.cmInviteSkinCallback = e;
                            }),
                            (e.prototype.setJoinFightSkinCB = function (e) {
                                this.joinFightSkinCallBack = e;
                            }),
                            (e.prototype.setNormalMusicPageCb = function (e) {
                                this.normalMusicPageCb = e;
                            }),
                            (e.prototype.setLotteryPageCb = function (e) {
                                this.lotteryPageCb = e;
                            }),
                            (e.prototype.setFightFriendInviteCb = function (e) {
                                this.fightFriendInviteCb = e;
                            }),
                            (e.prototype.setGoldNotEnoughCb = function (e) {
                                this.goldNotEnoughCb = e;
                            }),
                            (e.prototype.enResLoad = function () {
                                var i = this;
                                this.enSpriteSetNull(),
                                    k.default.get('ui/skin_store_use_default_en', function (e, t) {
                                        cc.isValid(i, !0) && (i.defaultBtn.normalSprite = t);
                                    }),
                                    k.default.get('ui/skin_store_use_default_press_en', function (e, t) {
                                        cc.isValid(i, !0) && (i.defaultBtn.pressedSprite = t);
                                    });
                            }),
                            (e.prototype.enSpriteSetNull = function () {
                                this.defaultBtn.getComponent(cc.Sprite).spriteFrame = null;
                            }),
                            (e.prototype.onLoad = function () {
                                w.default.getInstance().isEnglish() && this.enResLoad(),
                                    this.onSkinChange(),
                                    this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                        e.stopPropagation();
                                    }),
                                    (this.mContent = this.scrollView.content),
                                    this.adapterUI(),
                                    this.initEvent(),
                                    this.updateDefaultSkinUi(),
                                    this.initializeScrollView(),
                                    this.initData(),
                                    this.initInviteSkinData(),
                                    B.default.getInstance().pushDialog(this.node, 'SkinStorePrefab');
                            }),
                            (e.prototype.firstPayUnLock = function () {
                                this.dataSetChanged();
                            }),
                            (e.prototype.start = function () {
                                c.G.skinTryData && c.G.skinTryData.trySkinFinish && c.G.skinTryData.source != l.default.SOURCE_NONE && ((c.G.skinTryData.source = l.default.SOURCE_NONE), (c.G.skinTryData.trySkinFinish = !1));
                            }),
                            (e.prototype.onDestroy = function () {
                                a.default.remove(r.default.UPDATE_SKIN_STORE_UI, this.unlockInviteSkin, this), a.default.remove(r.default.FIRST_PAY_UNLOCK_SKIN, this.firstPayUnLock, this), a.default.remove(r.default.SKIN_TASK_GOLY_BUY_NOT_ENOUGH, this.goldNotEnough, this), a.default.remove(r.default.CM_SKIN_ADS_UNLOCK, this.cmAdsUnlockSkin, this), a.default.remove(r.default.PLAY_TRIAL_FINISHED, this.onPlayTrailFinished, this), B.default.getInstance().popDialog(this.node, 'SkinStorePrefab');
                            }),
                            (e.prototype.onSkinChange = function () {
                                this.applySkin();
                            }),
                            (e.prototype.applySkin = function () {
                                var e = c.G.Ap.skinMgr.getCurrentSkinItem();
                                if (e) {
                                    var t = this.node.getChildByName('bg'),
                                        i = this.node.getChildByName('animation_bkg');
                                    e.getSkinElementPainter().captureBackground('SkinStore', t, i);
                                }
                            }),
                            (e.prototype.initData = function () {}),
                            (e.prototype.initEvent = function () {
                                var e = this;
                                (this.mCloseClickCallback = new o.default(function () {
                                    e.backClick();
                                })),
                                    this.back_btn.node.on(cc.Node.EventType.TOUCH_END, this.mCloseClickCallback.click, this.mCloseClickCallback),
                                    a.default.register(r.default.UPDATE_SKIN_STORE_UI, this.unlockInviteSkin, this),
                                    a.default.register(r.default.FIRST_PAY_UNLOCK_SKIN, this.firstPayUnLock, this),
                                    a.default.register(r.default.SKIN_TASK_GOLY_BUY_NOT_ENOUGH, this.goldNotEnough, this),
                                    a.default.register(r.default.CM_SKIN_ADS_UNLOCK, this.cmAdsUnlockSkin, this),
                                    a.default.register(r.default.PLAY_TRIAL_FINISHED, this.onPlayTrailFinished, this);
                            }),
                            (e.prototype.onPlayTrailFinished = function () {
                                var e = this;
                                console.warn('===== onPlayTrailFinished ====='),
                                    setTimeout(function () {
                                        B.default.getInstance().gotoPage(cc.director.getScene(), 'MainPagePrefab', 'onPlayTrailFinished'), B.default.getInstance().pushDialog(e.node, 'SkinStorePrefab');
                                    }, 500);
                            }),
                            (e.prototype.tryFinishShowGain = function (e, t) {
                                var i = t[0];
                                if (i && c.G.skinTryData.source == l.default.SOURCE_SKIN_STORE)
                                    if ((S.default.i('SkinStore===> onstart tryfinish itemInfo = ', i), i && !_.SkinDataMgr.Ins().isOwnedPermanent(_.SkinItemInfo.name) && i.type == _.SkinItemInfo.SKIN_TYPE_INVITE)) this.itemSignGainSkinCallback(i);
                                    else {
                                        var o = _.SkinDataMgr.Ins().getOwnedSkin(i.name);
                                        (null != o && o.isOwnedPermanent()) || !i.isPiecesSkin() || this.itemPieceGainSkinCallback(i);
                                    }
                            }),
                            (e.prototype.piecesUnlockSkin = function (e, t) {
                                S.default.i('[SkinStore]===>>> piecesUnlockSkin eventName = ' + e + ' params = ', t);
                                var i = t[0];
                                this.showAwardPage(i), this.dataSetChanged(), this.usePieces(i);
                            }),
                            (e.prototype.usePieces = function (e) {
                                T.default.Ins().usePiece(e.piecesId, T.default.Ins().getPieceCount(e.piecesId));
                            }),
                            (e.prototype.showAwardPage = function (e) {
                                var t = '/static_res/share_gift_congratulation_title',
                                    i = '好的';
                                w.default.getInstance().isEnglish() && ((t = '/static_res/share_gift_congratulation_title_en'), (i = 'ok'));
                                var o = new v.AwardResultInfo();
                                if (
                                    (o
                                        .setTitlePicPath(t)
                                        .setIsNeedGiveAwardInfo(!0)
                                        .setBottomSecondTip('')
                                        .setOkBtn(i, function () {
                                            v.AwardController.getIns().dismissAwardResultPage(o);
                                        }),
                                    T.default.Ins().getPieceCount(e.piecesId) > e.piecesTotal)
                                ) {
                                    var n = (T.default.Ins().getPieceCount(e.piecesId) - e.piecesTotal) * T.default.PIECE_TO_GOLD;
                                    w.default.getInstance().isEnglish() ? o.setBottomSecondTip('Unlocking the remaining skin puzzle has been converted into ' + n + ' diamonds') : o.setBottomSecondTip('解锁剩余的皮肤碎片已转化为' + n + '钻石'), o.addAwardContent(I.GameItemType.TYPE_GOLD, n, e.skinId);
                                }
                                o.addAwardContent(I.GameItemType.TYPE_SKIN, 1, e.skinId), v.AwardController.getIns().showAwardResultPage(o);
                            }),
                            (e.prototype.goldNotEnough = function () {
                                this.goldNotEnoughCb && this.goldNotEnoughCb();
                            }),
                            (e.prototype.unlockInviteSkin = function () {
                                this.dataSetChanged();
                            }),
                            (e.prototype.initInviteSkinData = function () {}),
                            (e.prototype.backClick = function () {
                                this.closeCallback && this.closeCallback();
                            }),
                            (e.prototype.itemUseSkinCallback = function (e) {
                                var t = this;
                                p.default.useSkin(
                                    e,
                                    this.popup_layout.node,
                                    function () {
                                        t.dataSetChanged();
                                    },
                                    function () {},
                                    function () {
                                        t.dataSetChanged(), t.skinChangeCallback && t.skinChangeCallback();
                                    },
                                    function () {},
                                );
                            }),
                            (e.prototype.itemTrySkinCallback = function (e) {
                                var t = this;
                                p.default.trySkin(
                                    e,
                                    this.popup_layout.node,
                                    function () {
                                        t.dataSetChanged();
                                    },
                                    function () {},
                                    function () {
                                        c.G.skinTryData || (c.G.skinTryData = new l.default()), (c.G.skinTryData.source = l.default.SOURCE_SKIN_STORE), (c.G.skinTryData.itemInfo = e);
                                    },
                                );
                            }),
                            (e.prototype.itemConsumeGoldCallback = function (e) {
                                _.SkinDataMgr.Ins().isOwnedPermanent(e.name) || (N.MoneySystem.getGoldCount() >= e.goldCount ? (N.MoneySystem.consumeGold(e.goldCount), this.showCMUnlockSkinDialog(e)) : this.goldNotEnough());
                            }),
                            (e.prototype.itemConsumeCertificationCallback = function (e) {
                                _.SkinDataMgr.Ins().isOwnedPermanent(e.name) || ((!1 === e.disCountEnable || h.default.isIOS()) && this.buySkinForIOS(e));
                            }),
                            (e.prototype.buySkinForIOS = function (e) {
                                _.SkinDataMgr.Ins().unlockByDiamond(e) ? ((e.isLock = !1), this.dataSetChanged(), this.itemUseSkinCallback(e), u.default.report(e.ticketCount, u.default.SOURCE_BUY_SKIN, u.default.ACTION_CONSUME_DIAMOND), s.default.pushAsync()) : this.showDiamondNotEnoughPopup();
                            }),
                            (e.prototype.taskGoingListener = function (i) {
                                switch ((S.default.i('[SkinStore]===>>> taskGoingListener  task = ', i), i.taskId)) {
                                    case g.SKinTaskID.TASK_FIGHT_FRIEND_TIMES:
                                        this.fightFriendInviteCb && this.fightFriendInviteCb();
                                        break;
                                    case g.SKinTaskID.TASK_FIGHT_PLAY_COUNT:
                                    case g.SKinTaskID.TASK_FIGHT_USE_PROP_TIMES:
                                    case g.SKinTaskID.TASK_FIGHT_WIN_COUNT:
                                        this.joinFightSkinCallBack && this.joinFightSkinCallBack();
                                        break;
                                    case g.SKinTaskID.TASK_NORMAL_GAIN_CROWN:
                                    case g.SKinTaskID.TASK_NORMAL_RELIVE_TIMES:
                                        this.normalMusicPageCb && (this.closeCallback && this.closeCallback(), this.normalMusicPageCb());
                                        break;
                                    case g.SKinTaskID.TASK_LOTTERY:
                                        this.lotteryPageCb && this.lotteryPageCb();
                                        break;
                                    case g.SKinTaskID.TASK_SHARE_FOR_NEW_PLAYER:
                                        A.MGUser.getUserLoginInfo({
                                            complete: function (t) {
                                                t &&
                                                    A.MGUser.getUserBasicInfo({
                                                        complete: function (e) {
                                                            L.MGShareUtils.shareForSKinPiece(e ? e.nickName : '--', t.playerId, b.ActivityConstantConfig.ACTIVITY_ID_SHARE_FOR_SKIN_PIECE + i.skinId, i.skinId);
                                                        },
                                                    });
                                            },
                                        });
                                }
                            }),
                            (e.prototype.itemPieceGainSkinCallback = function (e) {
                                this.showSkinTaskPageView(e, P.default.SOURCE_SKIN_STORE);
                            }),
                            (e.prototype.showSkinTaskPageView = function (o, n, a) {
                                var r = this;
                                S.default.i('[SkinStore]===>>> showSkinTaskPageView  skin = ', o),
                                    o &&
                                        0 < o.piecesTotal &&
                                        !m.StringUtil.isEmpty(o.piecesId) &&
                                        f.default.load('prefab/SkinTaskPageViewPrefab', function (e, t) {
                                            var i = t.getComponent(E.default);
                                            i.showSkinTask(o),
                                                i.setSource(n),
                                                i.setTaskGoingListerer(r.taskGoingListener.bind(r)),
                                                i.setCloseCb(function () {
                                                    a && a();
                                                }),
                                                r.node.addChild(t);
                                        });
                            }),
                            (e.prototype.itemSignGainSkinCallback = function (e) {
                                if (h.default.isCM())
                                    if (e && !_.SkinDataMgr.Ins().isOwnedPermanent(e.name) && e.type == _.SkinItemInfo.SKIN_TYPE_DAILYATTENDANCE) {
                                        var t = w.default.getInstance().getLanguageByKey('label_text.skin_sign_get');
                                        this.showToast(t);
                                    } else h.default.supportCMOnshare() && e && !_.SkinDataMgr.Ins().isOwnedPermanent(e.name) && e.type == _.SkinItemInfo.SKIN_TYPE_INVITE ? (console.log('CMPlayShare: SkinStroe ===> gainSkin'), this.cmInviteSkinCallback && this.cmInviteSkinCallback(e)) : this.showGainPopup(e);
                                else if (e && !_.SkinDataMgr.Ins().isOwnedPermanent(e.name) && e.type == _.SkinItemInfo.SKIN_TYPE_DAILYATTENDANCE) {
                                    t = w.default.getInstance().getLanguageByKey('label_text.skin_sign_get');
                                    this.showToast(t);
                                } else
                                    e && !_.SkinDataMgr.Ins().isOwnedPermanent(e.name) && e.type == _.SkinItemInfo.SKIN_TYPE_INVITE
                                        ? this.inviteSkinCallback && this.inviteSkinCallback(!1, 0, !1)
                                        : e && !_.SkinDataMgr.Ins().isOwnedPermanent(e.name) && e.type == _.SkinItemInfo.SKIN_TYPE_JOIN_FIGHT
                                        ? this.joinFightSkinCallBack &&
                                          this.joinFightSkinCallBack({
                                              showSeasonReward: !0,
                                          })
                                        : e && !_.SkinDataMgr.Ins().isOwnedPermanent(e.name) && e.type == _.SkinItemInfo.SKIN_TYPE_FIRST_PAY_ATTENTION
                                        ? this.showGainPopup(e)
                                        : e && !_.SkinDataMgr.Ins().isOwnedPermanent(e.name) && e.type == _.SkinItemInfo.SKIN_TYPE_LOTTERY
                                        ? this.showGainPopup(e)
                                        : e && !_.SkinDataMgr.Ins().isOwnedPermanent(e.name) && e.type == _.SkinItemInfo.SKIN_TYPE_SHRAE && this.showGainPopup(e);
                            }),
                            (e.prototype.showCMUnlockSkinRewards = function (e) {
                                var t = this,
                                    i = new v.AwardResultInfo();
                                w.default.getInstance().isEnglish()
                                    ? i
                                          .setTitlePicPath('/static_res/share_gift_congratulation_title_en')
                                          .setIsNeedGiveAwardInfo(!0)
                                          .setBottomSecondTip('')
                                          .setOkBtn('Ok', function () {
                                              v.AwardController.getIns().dismissAwardResultPage(i),
                                                  setTimeout(function () {
                                                      B.default.getInstance().refreshPage(t.node, 'SkinStorePrefab');
                                                  }, 200);
                                          })
                                    : i
                                          .setTitlePicPath('/static_res/share_gift_congratulation_title')
                                          .setIsNeedGiveAwardInfo(!0)
                                          .setBottomSecondTip('')
                                          .setOkBtn('好的', function () {
                                              v.AwardController.getIns().dismissAwardResultPage(i),
                                                  setTimeout(function () {
                                                      B.default.getInstance().refreshPage(t.node, 'SkinStorePrefab');
                                                  }, 200);
                                          }),
                                    i.addAwardContent(I.GameItemType.TYPE_SKIN, 1, e.skinId),
                                    v.AwardController.getIns().showAwardResultPage(i);
                            }),
                            (e.prototype.showCMUnlockSkinDialog = function (o) {
                                var n = this;
                                f.default.load('prefab/shop/DialogOneButtonPrefab', function (e, t) {
                                    var i = t.getComponent(R.default);
                                    w.default.getInstance().isEnglish() ? (i.setContent('<color=3B5D72><size=30>Congratulations,' + o.displayName + ' unlock!</size></color>'), i.setBtnTxt('Get')) : (i.setContent('<color=3B5D72><size=30>恭喜您,' + o.displayName + '皮肤已永久解锁!</size></color>'), i.setBtnTxt('领取')),
                                        i.setBottonCallback(function (e) {
                                            e.destroy(), n.showCMUnlockSkinRewards(o), n.dataSetChanged();
                                        }),
                                        n.node.addChild(t);
                                });
                            }),
                            (e.prototype.cmAdsUnlockSkin = function (e, t) {
                                var i = t[0];
                                this.showCMUnlockSkinDialog(i), D.default.Ins().removeSkinItemInfo(i);
                            }),
                            (e.prototype.getGainItems = function (t) {
                                var i = this,
                                    o = [];
                                return (
                                    (function () {
                                        var e = new M.GainItem();
                                        w.default.getInstance().isEnglish() ? ((e.title = cc.js.formatStr('Receive for free(%s/%s)', t.watchAdsTimes, t.totalWatchAdsTimes)), (e.desc = cc.js.formatStr('Watch %s video ads', t.totalWatchAdsTimes - t.watchAdsTimes))) : ((e.title = cc.js.formatStr('免费获得(%s/%s)', t.watchAdsTimes, t.totalWatchAdsTimes)), (e.desc = cc.js.formatStr('看%s次视频广告', t.totalWatchAdsTimes - t.watchAdsTimes))), (e.type = M.GainType.ADS);
                                        (e.clickCb = function () {}.bind(i)), o.push(e);
                                    })(),
                                    (function () {
                                        var e = new M.GainItem();
                                        w.default.getInstance().isEnglish() ? (e.title = 'Purchase') : (e.title = '购买获得'), (e.desc = 'x' + t.goldCount), (e.type = M.GainType.GOLD);
                                        (e.clickCb = function () {
                                            i.itemConsumeGoldCallback(t);
                                        }.bind(i)),
                                            o.push(e);
                                    })(),
                                    o
                                );
                            }),
                            (e.prototype.showGainPopup = function (o) {
                                var n = this,
                                    a = this.getGainItems(o);
                                a &&
                                    0 < a.length &&
                                    f.default.load('/prefab/SkinGainPrefab', function (e, t) {
                                        if (t) {
                                            var i = t.getComponent(M.default);
                                            i.setData(a), i.setSkinItemInfo(o), n.popup_layout.node.addChild(t);
                                        }
                                    });
                            }),
                            (e.prototype.dataSetChanged = function () {
                                this.updateDefaultSkinUi();
                                for (var e, t, i = this.mRealIndex.length, o = 0; o < i; o++) (e = this.mRealIndex[o]), (t = this.items[e].getComponent(y.default)).setData(_.SkinDataMgr.Ins().getSkinListExceptDefault()[t.itemID], t.itemID);
                            }),
                            (e.prototype.showToast = function (e) {
                                var t = cc.instantiate(this.mToastPrefab);
                                t.getComponent(n.default).showTips(e, function () {
                                    t.destroy();
                                }),
                                    cc.director.getScene().addChild(t);
                            }),
                            (e.prototype.showDiamondNotEnoughPopup = function () {
                                var e = this,
                                    t = cc.instantiate(this.mBuySkinDiamondNotEnoughPrefab),
                                    i = t.getComponent(C.default);
                                i.setCloseCallback(function () {
                                    t.destroy();
                                }),
                                    i.setShareCallback(function () {
                                        t.destroy(), e.showSharePopup();
                                    }),
                                    this.popup_layout.node.addChild(t);
                            }),
                            (e.prototype.showSharePopup = function () {
                                this.shareGiftCallback && this.shareGiftCallback();
                            }),
                            (e.prototype.updateDefaultSkinUi = function () {
                                var i = this,
                                    e = '/ui/skin_store_use_default_press',
                                    t = '/ui/skin_store_use_default';
                                w.default.getInstance().isEnglish() && ((e = '/ui/skin_store_use_default_press_en'), (t = '/ui/skin_store_use_default_en')),
                                    _.SkinDataMgr.Ins().isDefaultSkin()
                                        ? ((this.defaultBtn.interactable = !1),
                                          k.default.get(e, function (e, t) {
                                              t && ((i.defaultBtn.getComponent(cc.Sprite).spriteFrame = t), (i.defaultBtn.normalSprite = t), i.mDefaultClickCb && (i.defaultBtn.node.off(cc.Node.EventType.TOUCH_END, i.mDefaultClickCb.click, i.mDefaultClickCb), (i.mDefaultClickCb = null)));
                                          }))
                                        : ((this.defaultBtn.interactable = !0),
                                          k.default.get(t, function (e, t) {
                                              t && ((i.defaultBtn.getComponent(cc.Sprite).spriteFrame = t), (i.defaultBtn.normalSprite = t));
                                          }),
                                          k.default.get(e, function (e, t) {
                                              t && (i.defaultBtn.pressedSprite = t);
                                          }),
                                          null == this.mDefaultClickCb &&
                                              ((this.mDefaultClickCb = new o.default(function () {
                                                  i.switchDefaultSkin();
                                              })),
                                              this.defaultBtn.node.on(cc.Node.EventType.TOUCH_END, this.mDefaultClickCb.click, this.mDefaultClickCb)));
                            }),
                            (e.prototype.switchDefaultSkin = function () {
                                this.itemUseSkinCallback(_.SkinDataMgr.Ins().getDefaultSkinItem());
                            }),
                            (e.prototype.initializeScrollView = function () {
                                (this.itemXLeft = (this.mContent.width - 2 * this.itemWidth - this.wSpacing) / 2), (this.itemXRight = (this.mContent.width - 2 * this.itemWidth - this.wSpacing) / 2 + this.itemWidth + this.wSpacing), (this.itemTemplate = cc.instantiate(this.mItemPrefab));
                                var e = Math.ceil(_.SkinDataMgr.Ins().getSkinListExceptDefault().length / 2) * (this.itemHeight + this.hSpacing);
                                this.mContent.height = e;
                                for (var t = Math.min(_.SkinDataMgr.Ins().getSkinListExceptDefault().length, this.spawnCount), i = 0; i < t; i++) {
                                    var o = cc.instantiate(this.itemTemplate),
                                        n = o.getComponent(y.default);
                                    n.setData(_.SkinDataMgr.Ins().getSkinListExceptDefault()[i], i), n.setUseCallback(this.itemUseSkinCallback.bind(this)), n.setTryCallback(this.itemTrySkinCallback.bind(this)), n.setSignGainCallback(this.itemSignGainSkinCallback.bind(this)), n.setPieceGainCallback(this.itemPieceGainSkinCallback.bind(this)), n.setConsumeCertificationCallback(this.itemConsumeCertificationCallback.bind(this)), i % 2 == 0 ? o.setPosition(this.itemXLeft, -(Math.floor(i / 2) * (this.itemHeight + this.hSpacing) + this.hSpacing)) : o.setPosition(this.itemXRight, -(Math.floor(i / 2) * (this.itemHeight + this.hSpacing) + this.hSpacing)), this.mContent.addChild(o), this.mRealIndex.push(i), this.items.push(o);
                                }
                            }),
                            (e.prototype.scrollEvent = function (e, t) {
                                switch (t) {
                                    case 4:
                                        _.SkinDataMgr.Ins().getSkinListExceptDefault().length > this.spawnCount && this.updateByScroll();
                                }
                            }),
                            (e.prototype.updateByScroll = function () {
                                var e,
                                    t,
                                    i,
                                    o,
                                    n,
                                    a,
                                    r,
                                    s,
                                    c,
                                    l,
                                    u,
                                    d,
                                    p,
                                    h,
                                    f = this.items,
                                    m = this.bufferZone;
                                if (this.mContent.y < this.lastContentPosY) for (var g = this.mRealIndex.length - 1; 0 <= g && ((p = f[this.mRealIndex[g]]), (e = f[this.mRealIndex[0]]), (t = this.getPositionInView(p)), (h = f[this.mRealIndex[g - 1]]), t.y < -m && e.y + this.hSpacing + p.height < 0); g -= 2) (i = (u = p.getComponent(y.default)).itemID - this.spawnCount), u.setData(_.SkinDataMgr.Ins().getSkinListExceptDefault()[i], i), (o = (d = h.getComponent(y.default)).itemID - this.spawnCount), d.setData(_.SkinDataMgr.Ins().getSkinListExceptDefault()[o], o), (n = this.mRealIndex.pop()), this.mRealIndex.unshift(n), (a = this.mRealIndex.pop()), this.mRealIndex.unshift(a), h.setPosition(this.itemXLeft, e.y + this.hSpacing + this.itemHeight), p.setPosition(this.itemXRight, e.y + this.hSpacing + this.itemHeight), (g += 2);
                                else for (g = 0; g < this.mRealIndex.length && ((h = f[this.mRealIndex[g]]), (r = f[this.mRealIndex[this.mRealIndex.length - 1]]), (t = this.getPositionInView(h)), (p = f[this.mRealIndex[g + 1]]), (s = this.itemHeight), t.y > m && r.y - s - this.hSpacing > -this.mContent.height); g += 2) (o = (d = h.getComponent(y.default)).itemID + this.spawnCount), d.setData(_.SkinDataMgr.Ins().getSkinListExceptDefault()[o], o), (i = (u = p.getComponent(y.default)).itemID + this.spawnCount), u.setData(_.SkinDataMgr.Ins().getSkinListExceptDefault()[i], i), (c = this.mRealIndex.shift()), this.mRealIndex.push(c), (l = this.mRealIndex.shift()), this.mRealIndex.push(l), h.setPosition(this.itemXLeft, r.y - s - this.hSpacing), p.setPosition(this.itemXRight, r.y - s - this.hSpacing), (g -= 2);
                                this.lastContentPosY = this.mContent.y;
                            }),
                            (e.prototype.getPositionInView = function (e) {
                                var t = e.parent.convertToWorldSpaceAR(e.position);
                                return this.scrollView.node.convertToNodeSpaceAR(t);
                            }),
                            (e.prototype.adapterUI = function () {
                                d.SUtil.ins().isLiuHai() ? (d.SUtil.ins().toTopByPixel(this.root_layout, 170), d.SUtil.ins().toBottomByPx(this.root_layout, 50), d.SUtil.ins().toTopByPixel(this.back_btn, 88)) : d.SUtil.ins().isQuanMian() ? (d.SUtil.ins().toTopByPixel(this.root_layout, 120), d.SUtil.ins().toBottomByPx(this.root_layout, 30), d.SUtil.ins().toTopByPixel(this.back_btn, 32)) : d.SUtil.ins().isPuTong() && (d.SUtil.ins().toTopByPixel(this.root_layout, 100), d.SUtil.ins().toBottomByPx(this.root_layout, 15), d.SUtil.ins().toTopByPixel(this.back_btn, 20));
                            }),
                            __decorate([U(cc.Layout)], e.prototype, 'root_layout', void 0),
                            __decorate([U(cc.Button)], e.prototype, 'defaultBtn', void 0),
                            __decorate([U(cc.Button)], e.prototype, 'back_btn', void 0),
                            __decorate([U(cc.ScrollView)], e.prototype, 'scrollView', void 0),
                            __decorate([U], e.prototype, 'spawnCount', void 0),
                            __decorate([U], e.prototype, 'totalCount', void 0),
                            __decorate([U], e.prototype, 'hSpacing', void 0),
                            __decorate([U], e.prototype, 'wSpacing', void 0),
                            __decorate([U], e.prototype, 'bufferZone', void 0),
                            __decorate([U(cc.Prefab)], e.prototype, 'mItemPrefab', void 0),
                            __decorate([U(cc.Prefab)], e.prototype, 'mToastPrefab', void 0),
                            __decorate([U(cc.Layout)], e.prototype, 'popup_layout', void 0),
                            __decorate([U(cc.Sprite)], e.prototype, 'mSkinStoreSprite', void 0),
                            __decorate([U(cc.Prefab)], e.prototype, 'mBuySkinDiamondNotEnoughPrefab', void 0),
                            (e = __decorate([O], e))
                        );
                    })(cc.Component);
                (i.default = F), cc._RF.pop();
            },
            {
                '../../../modules/MGAppShare/scripts/MGShareUtil': 'MGShareUtil',
                '../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../base/G': 'G',
                '../../base/Log': 'Log',
                '../../infoc/m_p2_PData_Dia': 'm_p2_PData_Dia',
                '../../infoc/m_p2_skin_piece': 'm_p2_skin_piece',
                '../../util/PU': 'PU',
                '../../util/SUtil': 'SUtil',
                '../../util/StringUtil': 'StringUtil',
                '../Logic/EventBus': 'EventBus',
                '../Logic/GameItemsManager': 'GameItemsManager',
                '../Logic/I18nManager': 'I18nManager',
                '../Logic/MoneySystem': 'MoneySystem',
                '../Logic/NotifyEvent': 'NotifyEvent',
                '../Logic/SkinDataManager': 'SkinDataManager',
                '../Network/Protocol/StorageUtil': 'StorageUtil',
                '../UI/GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
                '../UI/GameEntraScene/ImgCache': 'ImgCache',
                '../UI/GameEntraScene/MusicLib/HotMusicCMShareController': 'HotMusicCMShareController',
                '../UI/GameEntraScene/PrefabMgr': 'PrefabMgr',
                '../UI/GameEntraScene/ToastPrefab': 'ToastPrefab',
                '../awardcontroller/AwardController': 'AwardController',
                '../keypad/KeypadNavigator': 'KeypadNavigator',
                '../reward/ActivityBean': 'ActivityBean',
                '../shop/DialogOneButtonPrefab': 'DialogOneButtonPrefab',
                './BuySkinDiamondNotEnough': 'BuySkinDiamondNotEnough',
                './SkinGainPrefab': 'SkinGainPrefab',
                './SkinPieceMgr': 'SkinPieceMgr',
                './SkinStoreItem': 'SkinStoreItem',
                './SkinTaskPageViewPrefab': 'SkinTaskPageViewPrefab',
                './SkinTryData': 'SkinTryData',
                './SkinUtils': 'SkinUtils',
                './frag/SkinTaskItem': 'SkinTaskItem',
            },
        ],
        SkinTaskFactory: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'fa3121QwMlF3rB7lrfPiCKN', 'SkinTaskFactory'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../SkinTaskItem'),
                    n = e('./FightFriendTimesTask'),
                    a = e('./FightUsePropTimesTask'),
                    r = e('./FightWinCountTask'),
                    s = e('./GoldBuyTask'),
                    c = e('./LotteryTask'),
                    l = e('./NormalGainCrownTask'),
                    u = e('./NormalReliveTimestask'),
                    d = e('./WatchAdsTask'),
                    p = (function () {
                        function e() {}
                        return (
                            (e.createTask = function (e, t) {
                                switch (e) {
                                    case o.SKinTaskID.TASK_FIGHT_FRIEND_TIMES:
                                        return new n.default(e, t);
                                    case o.SKinTaskID.TASK_FIGHT_USE_PROP_TIMES:
                                        return new a.default(e, t);
                                    case o.SKinTaskID.TASK_FIGHT_WIN_COUNT:
                                        return new r.default(e, t);
                                    case o.SKinTaskID.TASK_GOLD_BUY:
                                        return new s.default(e, t);
                                    case o.SKinTaskID.TASK_LOTTERY:
                                        return new c.default(e, t);
                                    case o.SKinTaskID.TASK_NORMAL_GAIN_CROWN:
                                        return new l.default(e, t);
                                    case o.SKinTaskID.TASK_NORMAL_RELIVE_TIMES:
                                        return new u.default(e, t);
                                    case o.SKinTaskID.TASK_WATCH_ADS:
                                        return new d.default(e, t);
                                }
                                return null;
                            }),
                            e
                        );
                    })();
                (i.default = p), cc._RF.pop();
            },
            {
                '../SkinTaskItem': 'SkinTaskItem',
                './FightFriendTimesTask': 'FightFriendTimesTask',
                './FightUsePropTimesTask': 'FightUsePropTimesTask',
                './FightWinCountTask': 'FightWinCountTask',
                './GoldBuyTask': 'GoldBuyTask',
                './LotteryTask': 'LotteryTask',
                './NormalGainCrownTask': 'NormalGainCrownTask',
                './NormalReliveTimestask': 'NormalReliveTimesTask',
                './WatchAdsTask': 'WatchAdsTask',
            },
        ],
        SkinTaskItemPrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '1b4b6TvZ85CgKB1zMewYbf1', 'SkinTaskItemPrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('./frag/SkinTaskItem'),
                    r = e('../UI/GameEntraScene/ImgCache'),
                    s = e('../Logic/GameItemsManager'),
                    c = e('../../util/SUtil'),
                    l = e('../UI/GameEntraScene/BasicTouchEvent'),
                    o = e('./SkinPieceMgr'),
                    u = e('./frag/SkinTaskMgr'),
                    d = e('../../base/Log'),
                    p = e('../Logic/MoneySystem'),
                    h = e('../Logic/EventBus'),
                    f = e('../Logic/NotifyEvent'),
                    m = e('../../../modules/MGAdv/scripts/Logic/MGAdvEntrance'),
                    g = e('../../../modules/MGAdv/scripts/Logic/MGAdvDefine'),
                    _ = e('../../infoc/m_p2_skin_piece'),
                    y = e('../Logic/SkinDataManager'),
                    S = e('../../util/PU'),
                    n = cc._decorator,
                    v = n.ccclass,
                    I = n.property,
                    T = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.pieceIconSprite = null), (e.countLabel = null), (e.taskNode = null), (e.descText = null), (e.proNode = null), (e.proDescLabel = null), (e.proBarNode = null), (e.proLabel = null), (e.proBg = null), (e.pro = null), (e.goldNode = null), (e.goldLabel = null), (e.btn = null), (e.mSkinTaskItem = null), (e.mDoTaskCb = null), (e.mWatchAdsCb = null), (e.mConvertGoldCb = null), (e.mIndex = 0), (e.mSource = _.default.SOURCE_SKIN_STORE), (e.mInitReportAction = 0), (e.mHasOnStart = !1), (e.mHasReportInitType = !1), (e.updatingBtnStatus = !1), e;
                        }
                        var n;
                        return (
                            __extends(e, t),
                            ((n = e).prototype.setTaskGoingListerer = function (e) {
                                this.mTaskGoingListener = e;
                            }),
                            (e.prototype.setToastCb = function (e) {
                                this.mToastCb = e;
                            }),
                            (e.prototype.setDoPieceFlyAnimationCb = function (e) {
                                this.doPieceFlyAnimationCb = e;
                            }),
                            (e.prototype.setSource = function (e) {
                                this.mSource = e;
                            }),
                            (e.prototype.onLoad = function () {
                                this.initView(), S.default.isWeiXin() || m.MGAdv.load(g.ADScene.SCENE_SKIN_TASK, g.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK), h.default.register(f.default.SKIN_UPDATE_STEP_UPDATE_UI, this.updateUiByStep, this), h.default.register(f.default.SKIN_TASK_UPDATE_PIECES_UI, this.updatePieces, this);
                            }),
                            (e.prototype.onDestroy = function () {
                                h.default.remove(f.default.SKIN_UPDATE_STEP_UPDATE_UI, this.updateUiByStep, this), h.default.remove(f.default.SKIN_TASK_UPDATE_PIECES_UI, this.updatePieces, this);
                            }),
                            (e.prototype.updatePieces = function (e, t) {
                                d.default.i(n.TAG + 'updatePieces 更新 界面 碎片数量 params = ', t);
                                var i = t[0];
                                this.mPieceId == i.pieceID && this.mSkinTaskItem.taskId == a.SKinTaskID.TASK_GOLD_BUY && this.updateGoldPieceCount();
                            }),
                            (e.prototype.updateUiByStep = function (e, t) {
                                d.default.i(n.TAG + ' updateUiByStep params= ', t);
                                var i = t[0];
                                i.taskId == this.mSkinTaskItem.taskId && i.skinId == this.mSkinTaskItem.skinId && this.initView();
                            }),
                            (e.prototype.initView = function () {
                                d.default.i(n.TAG + ' initView this.mSkinTaskItem = ', this.mSkinTaskItem), this.mSkinTaskItem ? ((this.node.active = !0), this.mSkinTaskItem.taskId == a.SKinTaskID.TASK_WATCH_ADS ? this.initWatchAds() : this.mSkinTaskItem.taskId == a.SKinTaskID.TASK_GOLD_BUY ? this.initGoldBuy() : this.initOthertask()) : (this.node.active = !1);
                            }),
                            (e.prototype.onStart = function () {
                                (this.mHasOnStart = !0), this.mHasReportInitType || 0 == this.mInitReportAction || ((this.mHasReportInitType = !0), this.reportSkinPiece(this.mInitReportAction));
                            }),
                            (e.prototype.initOthertask = function () {
                                var i = this;
                                if (((this.goldNode.active = !1), (this.taskNode.active = !0), (this.proBarNode.active = !0), (this.proBarNode.active = !0), this.mSkinTaskItem.status[this.mSkinTaskItem.status.length - 1] == a.TaskStatus.STATUS_FINISH)) {
                                    (this.descText.string = cc.js.formatStr(cc.js.formatStr(this.mSkinTaskItem.desc, '<color=#FF732F>%s</c>'), this.mSkinTaskItem.step[this.mSkinTaskItem.step.length - 1])),
                                        (this.btn.interactable = !1),
                                        r.default.get(n.IMG_FINISH, function (e, t) {
                                            t && cc.isValid(i, !0) && ((i.btn.getComponent(cc.Sprite).spriteFrame = t), (i.btn.normalSprite = t));
                                        }),
                                        (this.countLabel.string = 'x' + this.mSkinTaskItem.reward[this.mSkinTaskItem.reward.length - 1]),
                                        (o = new cc.Color()).fromHEX('#7D7D7D'),
                                        (this.countLabel.node.color = o),
                                        r.default.get(s.GameItemsManager.getIns().getSmallPicByItemId(this.mPieceId) + n.DISABLE_SUFFIX, function (e, t) {
                                            t && cc.isValid(i, !0) && (i.pieceIconSprite.spriteFrame = t);
                                        }),
                                        r.default.get(n.IMG_PROGRESS_GRAY, function (e, t) {
                                            t && cc.isValid(i, !0) && (i.pro.spriteFrame = t);
                                        }),
                                        r.default.get(n.IMG_PROGRESS_GRAY_BG, function (e, t) {
                                            t && cc.isValid(i, !0) && (i.proBg.spriteFrame = t);
                                        }),
                                        (this.pro.node.width = this.proBg.node.width),
                                        c.SUtil.ins().toLeftByPx(this.pro, 0),
                                        (this.proLabel.string = this.mSkinTaskItem.curStep + '/' + this.mSkinTaskItem.step[this.mSkinTaskItem.step.length - 1]),
                                        this.mDoTaskCb && this.btn.node.off(cc.Node.EventType.TOUCH_END, this.mDoTaskCb.click, this.mDoTaskCb);
                                } else {
                                    (this.btn.interactable = !0),
                                        r.default.get(s.GameItemsManager.getIns().getSmallPicByItemId(this.mPieceId), function (e, t) {
                                            t && cc.isValid(i, !0) && (i.pieceIconSprite.spriteFrame = t);
                                        }),
                                        r.default.get(n.IMG_PROGRESS_LIGHT, function (e, t) {
                                            t && cc.isValid(i, !0) && (i.pro.spriteFrame = t);
                                        }),
                                        r.default.get(n.IMG_PROGRESS_LIGHT_BG, function (e, t) {
                                            t && cc.isValid(i, !0) && (i.proBg.spriteFrame = t);
                                        });
                                    for (var e = 0, t = 0; t < this.mSkinTaskItem.status.length; t++)
                                        if (this.mSkinTaskItem.status[t] != a.TaskStatus.STATUS_FINISH) {
                                            e = t;
                                            break;
                                        }
                                    var o;
                                    (this.countLabel.string = 'x' + this.mSkinTaskItem.reward[e]),
                                        (o = new cc.Color()).fromHEX('#FF711B'),
                                        (this.countLabel.node.color = o),
                                        (this.descText.string = cc.js.formatStr(cc.js.formatStr(this.mSkinTaskItem.desc, '<color=#FF732F>%s</c>'), this.mSkinTaskItem.step[e])),
                                        (this.proLabel.string = this.mSkinTaskItem.curStep + '/' + this.mSkinTaskItem.step[e]),
                                        this.mSkinTaskItem.status[e] == a.TaskStatus.STATUS_SUCCESS
                                            ? (r.default.get(n.IMG_GET, function (e, t) {
                                                  t && cc.isValid(i, !0) && ((i.btn.getComponent(cc.Sprite).spriteFrame = t), (i.btn.normalSprite = t));
                                              }),
                                              r.default.get(n.IMG_GET_PRESS, function (e, t) {
                                                  t && cc.isValid(i, !0) && (i.btn.pressedSprite = t);
                                              }),
                                              (this.pro.node.width = this.proBg.node.width),
                                              c.SUtil.ins().toLeftByPx(this.pro, 0),
                                              this.mHasOnStart ? ((this.mHasReportInitType = !0), this.reportSkinPiece(_.default.ACTION_SHOW_GET)) : (this.mInitReportAction = _.default.ACTION_SHOW_GET))
                                            : (r.default.get(n.IMG_GO, function (e, t) {
                                                  t && cc.isValid(i, !0) && ((i.btn.getComponent(cc.Sprite).spriteFrame = t), (i.btn.normalSprite = t));
                                              }),
                                              r.default.get(n.IMG_GO_PRESS, function (e, t) {
                                                  t && cc.isValid(i, !0) && (i.btn.pressedSprite = t);
                                              }),
                                              (this.pro.node.width = this.proBg.node.width * (this.mSkinTaskItem.curStep / this.mSkinTaskItem.step[e])),
                                              c.SUtil.ins().toLeftByPx(this.pro, 0),
                                              this.mHasOnStart ? ((this.mHasReportInitType = !0), this.reportSkinPiece(_.default.ACTION_SHOW_GO)) : (this.mInitReportAction = _.default.ACTION_SHOW_GO)),
                                        null == this.mDoTaskCb &&
                                            ((this.mDoTaskCb = new l.default(function () {
                                                i.updatingBtnStatus || i.doTask();
                                            })),
                                            this.btn.node.on(cc.Node.EventType.TOUCH_END, this.mDoTaskCb.click, this.mDoTaskCb));
                                }
                            }),
                            (e.prototype.doTask = function () {
                                for (var i = this, e = 0, t = 0; t < this.mSkinTaskItem.status.length; t++)
                                    if (this.mSkinTaskItem.status[t] != a.TaskStatus.STATUS_FINISH) {
                                        e = t;
                                        break;
                                    }
                                this.mSkinTaskItem.status[e] == a.TaskStatus.STATUS_SUCCESS
                                    ? ((this.updatingBtnStatus = !0),
                                      u.default.Ins().getTaskReward(
                                          this.mSkinTaskItem.taskId,
                                          function (e, t) {
                                              cc.isValid(i, !0) &&
                                                  (e
                                                      ? i.doPieceFlyAnimationCb &&
                                                        i.doPieceFlyAnimationCb(i.pieceIconSprite, t, function () {
                                                            i.initView(), (i.updatingBtnStatus = !1);
                                                        })
                                                      : (i.showToastTips('No network available', !1), (i.updatingBtnStatus = !1)));
                                          },
                                          this.mSkinTaskItem.skinId,
                                      ),
                                      this.reportSkinPiece(_.default.ACTION_CLICK_GET))
                                    : (this.mTaskGoingListener && this.mTaskGoingListener(this.mSkinTaskItem), this.reportSkinPiece(_.default.ACTION_CLICK_GO));
                            }),
                            (e.prototype.initWatchAds = function () {
                                var i = this;
                                (this.goldNode.active = !1), (this.taskNode.active = !0), (this.proBarNode.active = !0), (this.proBarNode.active = !1), (this.descText.string = this.mSkinTaskItem.desc);
                                var e = this.mSkinTaskItem.step[this.mSkinTaskItem.step.length - 1] - this.mSkinTaskItem.curStep;
                                if ((e < 0 && (e = 0), (this.proDescLabel.string = cc.js.formatStr('今日还可观看%s次', e)), c.SUtil.ins().toLeftByPx(this.proDescLabel, 0), this.mSkinTaskItem.status[this.mSkinTaskItem.status.length - 1] == a.TaskStatus.STATUS_FINISH)) {
                                    (this.btn.interactable = !1),
                                        r.default.get(n.IMG_FINISH, function (e, t) {
                                            t && cc.isValid(i, !0) && ((i.btn.getComponent(cc.Sprite).spriteFrame = t), (i.btn.normalSprite = t));
                                        }),
                                        (this.countLabel.string = 'x' + this.mSkinTaskItem.reward[this.mSkinTaskItem.reward.length - 1]),
                                        (o = new cc.Color()).fromHEX('#7D7D7D'),
                                        (this.countLabel.node.color = o),
                                        r.default.get(s.GameItemsManager.getIns().getSmallPicByItemId(this.mPieceId) + n.DISABLE_SUFFIX, function (e, t) {
                                            t && cc.isValid(i, !0) && (i.pieceIconSprite.spriteFrame = t);
                                        }),
                                        this.mWatchAdsCb && this.btn.node.off(cc.Node.EventType.TOUCH_END, this.mWatchAdsCb.click, this.mWatchAdsCb);
                                } else {
                                    (this.btn.interactable = !0),
                                        r.default.get(n.IMG_GET, function (e, t) {
                                            t && cc.isValid(i, !0) && ((i.btn.getComponent(cc.Sprite).spriteFrame = t), (i.btn.normalSprite = t));
                                        }),
                                        r.default.get(n.IMG_GET_PRESS, function (e, t) {
                                            t && cc.isValid(i, !0) && (i.btn.pressedSprite = t);
                                        });
                                    for (var t = 0; t < this.mSkinTaskItem.status.length; t++)
                                        if (this.mSkinTaskItem.status[t] != a.TaskStatus.STATUS_FINISH) {
                                            var o;
                                            (this.countLabel.string = 'x' + this.mSkinTaskItem.reward[t]), (o = new cc.Color()).fromHEX('#FF711B'), (this.countLabel.node.color = o);
                                            break;
                                        }
                                    r.default.get(s.GameItemsManager.getIns().getSmallPicByItemId(this.mPieceId), function (e, t) {
                                        t && cc.isValid(i, !0) && (i.pieceIconSprite.spriteFrame = t);
                                    }),
                                        null == this.mWatchAdsCb &&
                                            ((this.mWatchAdsCb = new l.default(function () {
                                                i.updatingBtnStatus || (i.watchAds(), i.reportSkinPiece(_.default.ACTION_CLICK_GO));
                                            })),
                                            this.btn.node.on(cc.Node.EventType.TOUCH_END, this.mWatchAdsCb.click, this.mWatchAdsCb)),
                                        this.mHasOnStart ? ((this.mHasReportInitType = !0), this.reportSkinPiece(_.default.ACTION_SHOW_GO)) : (this.mInitReportAction = _.default.ACTION_SHOW_GO);
                                }
                            }),
                            (e.prototype.watchAds = function () {
                                var t = this,
                                    e = g.ADScene.SCENE_SKIN_TASK;
                                m.MGAdv.show(e, g.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK, function (e) {
                                    switch (e) {
                                        case g.ADStat.NOT_NETWORK:
                                            t.showToastTips('No network available', !1);
                                            break;
                                        case g.ADStat.SHOW_SUCCESS_CLOSE:
                                            t.onWatchAdsSuccess(), d.default.i(n.TAG + ' watchAds success ');
                                            break;
                                        case g.ADStat.SHOW_NOT_ENED_CLOSE:
                                            break;
                                        case g.ADStat.SHOW_GET_AD_FAILED:
                                            t.showToastTips('No video ads available', !1);
                                    }
                                });
                            }),
                            (e.prototype.onWatchAdsSuccess = function () {
                                var i = this;
                                this.updatingBtnStatus = !0;
                                var e = new u.NormalEvent();
                                (e.type = u.NormalEventType.WATCH_ADS),
                                    (e.extra = this.mSkinTaskItem.skinId),
                                    u.default.Ins().notifyNormalEvent(e, function (e) {
                                        e
                                            ? u.default.Ins().getTaskReward(
                                                  i.mSkinTaskItem.taskId,
                                                  function (e, t) {
                                                      cc.isValid(i, !0) &&
                                                          (e
                                                              ? i.doPieceFlyAnimationCb &&
                                                                i.doPieceFlyAnimationCb(i.pieceIconSprite, t, function () {
                                                                    i.initView(), (i.updatingBtnStatus = !1);
                                                                })
                                                              : (i.showToastTips('No network available', !1), (i.updatingBtnStatus = !1)));
                                                  },
                                                  i.mSkinTaskItem.skinId,
                                              )
                                            : (i.updatingBtnStatus = !1);
                                    });
                            }),
                            (e.prototype.showToastTips = function (e, t) {
                                this.mToastCb && this.mToastCb(e, t);
                            }),
                            (e.prototype.initGoldBuy = function () {
                                var i = this;
                                (this.goldNode.active = !0),
                                    (this.taskNode.active = !1),
                                    (this.proNode.active = !1),
                                    r.default.get(s.GameItemsManager.getIns().getSmallPicByItemId(this.mPieceId), function (e, t) {
                                        t && cc.isValid(i, !0) && (i.pieceIconSprite.spriteFrame = t);
                                    }),
                                    this.updateGoldPieceCount();
                                var e = new cc.Color();
                                e.fromHEX('#FF711B'),
                                    (this.countLabel.node.color = e),
                                    (this.btn.interactable = !0),
                                    r.default.get(n.IMG_UNLOCK_GOLD, function (e, t) {
                                        t && cc.isValid(i, !0) && ((i.btn.getComponent(cc.Sprite).spriteFrame = t), (i.btn.normalSprite = t));
                                    }),
                                    r.default.get(n.IMG_UNLOCK_GOLD_PRESS, function (e, t) {
                                        t && cc.isValid(i, !0) && (i.btn.pressedSprite = t);
                                    }),
                                    null == this.mConvertGoldCb &&
                                        ((this.mConvertGoldCb = new l.default(function () {
                                            i.updatingBtnStatus, i.convertGoldBuy(), i.reportSkinPiece(_.default.ACTION_CLICK_GOLD_BUY);
                                        })),
                                        this.btn.node.on(cc.Node.EventType.TOUCH_END, this.mConvertGoldCb.click, this.mConvertGoldCb),
                                        this.mHasOnStart ? ((this.mHasReportInitType = !0), this.reportSkinPiece(_.default.ACTION_SHOW_GOLD_BUY)) : (this.mInitReportAction = _.default.ACTION_SHOW_GOLD_BUY));
                            }),
                            (e.prototype.updateGoldPieceCount = function () {
                                this.countLabel.string = 'x' + o.default.Ins().getPieceCount(this.mPieceId);
                                var e = ((y.SkinDataMgr.Ins().getSkinItemInfoBySkinId(this.mSkinTaskItem.skinId).piecesTotal - o.default.Ins().getPieceCount(this.mPieceId)) / this.mSkinTaskItem.reward[0]) * this.mSkinTaskItem.step[0];
                                this.goldLabel.string = 'x' + e;
                            }),
                            (e.prototype.convertGoldBuy = function () {
                                var i = this,
                                    e = ((y.SkinDataMgr.Ins().getSkinItemInfoBySkinId(this.mSkinTaskItem.skinId).piecesTotal - o.default.Ins().getPieceCount(this.mPieceId)) / this.mSkinTaskItem.reward[0]) * this.mSkinTaskItem.step[0];
                                if (p.MoneySystem.getGoldCount() >= e) {
                                    (this.updatingBtnStatus = !0), p.MoneySystem.consumeGold(e);
                                    var t = new u.NormalEvent();
                                    (t.type = u.NormalEventType.GOLD_BUY),
                                        (t.extra = this.mSkinTaskItem.skinId),
                                        u.default.Ins().notifyNormalEvent(t, function (e) {
                                            e
                                                ? u.default.Ins().getTaskReward(
                                                      i.mSkinTaskItem.taskId,
                                                      function (e, t) {
                                                          cc.isValid(i, !0) &&
                                                              (e
                                                                  ? i.doPieceFlyAnimationCb &&
                                                                    i.doPieceFlyAnimationCb(i.pieceIconSprite, t, function () {
                                                                        i.updatingBtnStatus = !1;
                                                                    })
                                                                  : (i.showToastTips('No network available', !1), (i.updatingBtnStatus = !1)));
                                                      },
                                                      i.mSkinTaskItem.skinId,
                                                  )
                                                : (i.showToastTips('No network available', !1), (i.updatingBtnStatus = !1));
                                        });
                                } else h.default.fire(f.default.SKIN_TASK_GOLY_BUY_NOT_ENOUGH);
                            }),
                            (e.prototype.setData = function (e, t, i) {
                                (this.mSkinTaskItem = e), (this.mPieceId = t), (this.mIndex = i);
                            }),
                            (e.prototype.reportSkinPiece = function (e) {
                                var t = 0;
                                (t = this.mSkinTaskItem.taskId == a.SKinTaskID.TASK_WATCH_ADS ? _.default.PAGE_TASK_WATCH_ADS : this.mSkinTaskItem.taskId == a.SKinTaskID.TASK_GOLD_BUY ? _.default.PAGE_TASK_GOLD_BUY : 0 == this.mIndex ? _.default.PAGE_TASK_1 : _.default.PAGE_TASK_2), _.default.report(t, y.SkinDataMgr.Ins().getSkinItemInfoBySkinId(this.mSkinTaskItem.skinId).name, e, this.mSource);
                            }),
                            (e.TAG = 'SkinTaskItemPrefab ===>>>'),
                            (e.IMG_GET = '/static_res/skin_chip/skin_task/skin_task_get'),
                            (e.IMG_GET_PRESS = '/static_res/skin_chip/skin_task/skin_task_get_press'),
                            (e.IMG_GO = '/static_res/skin_chip/skin_task/skin_task_go'),
                            (e.IMG_GO_PRESS = '/static_res/skin_chip/skin_task/skin_task_go_press'),
                            (e.IMG_FINISH = '/static_res/skin_chip/skin_task/skin_task_finish'),
                            (e.IMG_PROGRESS_LIGHT = '/static_res/skin_chip/skin_task/skin_task_doing_light'),
                            (e.IMG_PROGRESS_LIGHT_BG = '/static_res/skin_chip/skin_task/skin_task_doing_light_bg'),
                            (e.IMG_PROGRESS_GRAY = '/static_res/skin_chip/skin_task/skin_task_doing_gray'),
                            (e.IMG_PROGRESS_GRAY_BG = '/static_res/skin_chip/skin_task/skin_task_doing_gray_bg'),
                            (e.IMG_UNLOCK_GOLD = '/static_res/skin_chip/skin_task/unlock_gold'),
                            (e.IMG_UNLOCK_GOLD_PRESS = '/static_res/skin_chip/skin_task/unlock_gold_press'),
                            (e.DISABLE_SUFFIX = '_disable'),
                            __decorate([I(cc.Sprite)], e.prototype, 'pieceIconSprite', void 0),
                            __decorate([I(cc.Label)], e.prototype, 'countLabel', void 0),
                            __decorate([I(cc.Node)], e.prototype, 'taskNode', void 0),
                            __decorate([I(cc.RichText)], e.prototype, 'descText', void 0),
                            __decorate([I(cc.Node)], e.prototype, 'proNode', void 0),
                            __decorate([I(cc.Label)], e.prototype, 'proDescLabel', void 0),
                            __decorate([I(cc.Node)], e.prototype, 'proBarNode', void 0),
                            __decorate([I(cc.Label)], e.prototype, 'proLabel', void 0),
                            __decorate([I(cc.Sprite)], e.prototype, 'proBg', void 0),
                            __decorate([I(cc.Sprite)], e.prototype, 'pro', void 0),
                            __decorate([I(cc.Node)], e.prototype, 'goldNode', void 0),
                            __decorate([I(cc.Label)], e.prototype, 'goldLabel', void 0),
                            __decorate([I(cc.Button)], e.prototype, 'btn', void 0),
                            (e = n = __decorate([v], e))
                        );
                    })(cc.Component);
                (i.default = T), cc._RF.pop();
            },
            {
                '../../../modules/MGAdv/scripts/Logic/MGAdvDefine': 'MGAdvDefine',
                '../../../modules/MGAdv/scripts/Logic/MGAdvEntrance': 'MGAdvEntrance',
                '../../base/Log': 'Log',
                '../../infoc/m_p2_skin_piece': 'm_p2_skin_piece',
                '../../util/PU': 'PU',
                '../../util/SUtil': 'SUtil',
                '../Logic/EventBus': 'EventBus',
                '../Logic/GameItemsManager': 'GameItemsManager',
                '../Logic/MoneySystem': 'MoneySystem',
                '../Logic/NotifyEvent': 'NotifyEvent',
                '../Logic/SkinDataManager': 'SkinDataManager',
                '../UI/GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
                '../UI/GameEntraScene/ImgCache': 'ImgCache',
                './SkinPieceMgr': 'SkinPieceMgr',
                './frag/SkinTaskItem': 'SkinTaskItem',
                './frag/SkinTaskMgr': 'SkinTaskMgr',
            },
        ],
        SkinTaskItem: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '93b78SRO0tHf5sIUkO9COMr', 'SkinTaskItem'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n,
                    o,
                    a,
                    r,
                    s = e('../../../util/TimeUtil'),
                    c = e('../../../util/NumberUtil'),
                    l = e('../../../util/StringUtil'),
                    u = e('../../Logic/EventBus'),
                    d = e('../../Logic/NotifyEvent'),
                    p = e('../../../base/Log'),
                    h = e('../SkinPieceMgr'),
                    f = e('../../Logic/SkinDataManager'),
                    m = (function () {
                        function e(e, t) {
                            (this.curStep = 0), (this.status = []), (this.taskId = e), (this.skinId = t);
                        }
                        return (
                            (e.prototype.updateStatus = function (e) {
                                if (this.isGoldConvertTask()) {
                                    var t = f.SkinDataMgr.Ins().getSkinItemInfoBySkinId(this.skinId).piecesTotal - h.default.Ins().getPieceCount(f.SkinDataMgr.Ins().getSkinItemInfoBySkinId(this.skinId).piecesId);
                                    return this.addPiece(t), e(t, n.STATUS_NONE), void p.default.l('SkinTaskItem====>>, updateStatus this = ', this);
                                }
                                for (var i = this.status.length, o = 0; o < i; o++) if (this.status[o] == n.STATUS_SUCCESS) return (this.status[o] = n.STATUS_FINISH), this.addPiece(this.reward[o]), e(this.reward[o], o == i - 1 ? n.STATUS_FINISH : this.status[o + 1]), u.default.fire(d.default.UPDATE_SKIN_PIECES_TIPS, this), void p.default.l('SkinTaskItem====>>, updateStatus this = ', this);
                                p.default.l('SkinTaskItem====>>, updateStatus this = ', this), e(0, n.STATUS_NONE);
                            }),
                            (e.prototype.addPiece = function (e) {
                                var t = new h.Piece(f.SkinDataMgr.Ins().getSkinItemInfoBySkinId(this.skinId).piecesId, e);
                                p.default.i('SkinTaskItem====>>, addPiece piece = ', t), h.default.Ins().addPiece([t]);
                            }),
                            (e.prototype.updateStep = function (e) {
                                if (!(this.isGoldConvertTask() || this.curStep >= this.step[this.step.length - 1])) {
                                    var t = this.curStep;
                                    this.curStep += e;
                                    for (var i = 0, o = 0; o < this.step.length; o++) t < this.step[o] && this.step[o] <= this.curStep && ((this.status[o] = n.STATUS_SUCCESS), (i += this.reward[o]), u.default.fire(d.default.UPDATE_SKIN_PIECES_TIPS, this));
                                    u.default.fire(d.default.SKIN_UPDATE_STEP_UPDATE_UI, this), 0 < i && u.default.fire(d.default.SKIN_TASK_ADD_FRAGS, this.skinId, this.taskId, i), p.default.l('SkinTaskItem====>>, updateStep this = ', this);
                                }
                            }),
                            (e.prototype.initTask = function (e, t) {
                                if (!this.isGoldConvertTask()) {
                                    var i = e.split('*');
                                    if (i[0] == this.taskId && 2 <= i.length && s.default.formatDate(t) == i[1] && (3 <= i.length && (this.curStep = c.default.parseIntFromString(i[2])), 4 <= i.length)) for (var o = i[3], n = 0; n < o.length; n++) this.status[n] = c.default.parseIntFromString(o.charAt(n));
                                }
                            }),
                            (e.prototype.getTaskStr = function (e) {
                                if (this.isGoldConvertTask()) return '';
                                var t = '';
                                t += this.taskId + '*' + e + '*' + this.curStep;
                                var i = '';
                                return (
                                    this.status.forEach(function (e) {
                                        i += e + '';
                                    }),
                                    l.StringUtil.isEmpty(i) || (t += '*' + i),
                                    p.default.i('SkinTaskItem====>>, getTaskStr timeStr = ' + e + ',skinId = ' + this.skinId + ', taskStr = ' + t),
                                    t
                                );
                            }),
                            (e.prototype.isGoldConvertTask = function () {
                                return this.taskId == a.TASK_GOLD_BUY;
                            }),
                            e
                        );
                    })();
                (i.default = m), ((o = n = i.TaskStatus || (i.TaskStatus = {}))[(o.STATUS_NONE = 0)] = 'STATUS_NONE'), (o[(o.STATUS_SUCCESS = 1)] = 'STATUS_SUCCESS'), (o[(o.STATUS_FINISH = 2)] = 'STATUS_FINISH'), ((r = a = i.SKinTaskID || (i.SKinTaskID = {})).TASK_FIGHT_PLAY_COUNT = 'fight_play_count'), (r.TASK_SHARE_FOR_NEW_PLAYER = 'share_for_new_player'), (r.TASK_FIGHT_WIN_COUNT = 'fight_win_count'), (r.TASK_NORMAL_GAIN_CROWN = 'normal_gain_crown'), (r.TASK_NORMAL_RELIVE_TIMES = 'normal_relive_times'), (r.TASK_FIGHT_FRIEND_TIMES = 'fight_friend_times'), (r.TASK_LOTTERY = 'lottery'), (r.TASK_FIGHT_USE_PROP_TIMES = 'fight_use_prop_times'), (r.TASK_WATCH_ADS = 'watch_ads'), (r.TASK_GOLD_BUY = 'gold_buy'), cc._RF.pop();
            },
            {
                '../../../base/Log': 'Log',
                '../../../util/NumberUtil': 'NumberUtil',
                '../../../util/StringUtil': 'StringUtil',
                '../../../util/TimeUtil': 'TimeUtil',
                '../../Logic/EventBus': 'EventBus',
                '../../Logic/NotifyEvent': 'NotifyEvent',
                '../../Logic/SkinDataManager': 'SkinDataManager',
                '../SkinPieceMgr': 'SkinPieceMgr',
            },
        ],
        SkinTaskMgr: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'bb2banfexxCbYUQHvcGdcXw', 'SkinTaskMgr'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var u = e('./SkinTaskItem'),
                    o = e('../../../util/PU'),
                    n = e('../../../util/ResLoader'),
                    d = e('./SkinTask'),
                    a = e('../../Network/Protocol/StorageUtil'),
                    r = e('../../../config/LSKey'),
                    s = e('../../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    p = e('../../../util/StringUtil'),
                    h = e('../../Logic/EventBus'),
                    f = e('../../Logic/NotifyEvent'),
                    m = e('../../../base/Log'),
                    g = e('../../../util/TimeUtil'),
                    _ = e('../../Logic/SkinDataManager'),
                    c = (function () {
                        function l() {
                            (this.mSkinTasks = null), (this.mSkinTaskFinishListeners = []), (this.mTodayStr = null), h.default.register(f.default.SKIN_TASK_ADD_FRAGS, this.finishTaskAddFrags, this);
                        }
                        return (
                            (l.Ins = function () {
                                return null == this.ins && (this.ins = new l()), this.ins;
                            }),
                            (l.prototype.finishTaskAddFrags = function (e, t) {
                                var i = t[0],
                                    o = t[1],
                                    n = t[2];
                                this.mSkinTaskFinishListeners.forEach(function (e) {
                                    switch (o) {
                                        case u.SKinTaskID.TASK_FIGHT_FRIEND_TIMES:
                                            e.fightFriendTaskFinish && e.fightFriendTaskFinish(i, n);
                                            break;
                                        case u.SKinTaskID.TASK_FIGHT_USE_PROP_TIMES:
                                            e.fightUseProsTaskFinish && e.fightUseProsTaskFinish(i, n);
                                            break;
                                        case u.SKinTaskID.TASK_FIGHT_WIN_COUNT:
                                            e.fightWinCountTaskFinish && e.fightWinCountTaskFinish(i, n);
                                            break;
                                        case u.SKinTaskID.TASK_GOLD_BUY:
                                            e.goldBuyTaskFinish && e.goldBuyTaskFinish(i, n);
                                            break;
                                        case u.SKinTaskID.TASK_LOTTERY:
                                            e.lotteryTaskFinish && e.lotteryTaskFinish(i, n);
                                            break;
                                        case u.SKinTaskID.TASK_NORMAL_GAIN_CROWN:
                                            e.normalGainCrownTaskFinish && e.normalGainCrownTaskFinish(i, n);
                                            break;
                                        case u.SKinTaskID.TASK_NORMAL_RELIVE_TIMES:
                                            e.normalReliveTimesTaskFinish && e.normalReliveTimesTaskFinish(i, n);
                                            break;
                                        case u.SKinTaskID.TASK_WATCH_ADS:
                                            e.watchAdsTaskFinish && e.watchAdsTaskFinish(i, n);
                                    }
                                });
                            }),
                            (l.prototype.onDestory = function () {
                                this.mSkinTaskFinishListeners.splice(0, this.mSkinTaskFinishListeners.length), h.default.remove(f.default.SKIN_TASK_ADD_FRAGS, this.finishTaskAddFrags, this);
                            }),
                            (l.prototype.registSkinTaskFinishListener = function (e) {
                                e && -1 == this.mSkinTaskFinishListeners.indexOf(e) && this.mSkinTaskFinishListeners.push(e);
                            }),
                            (l.prototype.unRegistSkinTaskFinishListener = function (e) {
                                if (e) {
                                    var t = this.mSkinTaskFinishListeners.indexOf(e);
                                    -1 != t && this.mSkinTaskFinishListeners.splice(t, 1);
                                }
                            }),
                            (l.prototype.getTaskReward = function (t, o, n) {
                                var a = this;
                                m.default.l(l.TAG + ', getTaskReward taskId = ', t + ', skinId = ' + n),
                                    this.getCurTime(function (e, i) {
                                        e
                                            ? p.StringUtil.isEmpty(n)
                                                ? a.getSkinTasks(i, function (e) {
                                                      e.forEach(function (e) {
                                                          e.task.forEach(function (e) {
                                                              e.taskId == t &&
                                                                  e.updateStatus(function (e, t) {
                                                                      m.default.l(l.TAG + ', 2 getTaskReward updateStatus reward = ' + e + ', nextStatus = ', t), a.saveSkinTasks(i), o(!0, e);
                                                                  });
                                                          });
                                                      });
                                                  })
                                                : a.getSkinTaskById(n, i, function (e) {
                                                      e &&
                                                          e.task.forEach(function (e) {
                                                              e.taskId == t &&
                                                                  e.updateStatus(function (e, t) {
                                                                      m.default.l(l.TAG + ', 1 getTaskReward updateStatus reward = ' + e + ', nextStatus = ', t), a.saveSkinTasks(i), o(!0, e);
                                                                  });
                                                          });
                                                  })
                                            : o(!1, 0);
                                    });
                            }),
                            (l.prototype.hasTaskUnTaken = function (r) {
                                var i = this;
                                this.getCurTime(function (e, t) {
                                    e
                                        ? i.getLockedSkinTasks(t, function (e) {
                                              for (var t = 0; t < e.length; t++) for (var i = e[t].task, o = 0; o < i.length; o++) for (var n = i[o].status, a = 0; a < n.length; a++) if (n[a] == u.TaskStatus.STATUS_SUCCESS) return void r(!0, i[o]);
                                              r(!1);
                                          })
                                        : r(!1);
                                });
                            }),
                            (l.prototype.getLockedSkinTasks = function (e, t) {
                                this.getSkinTasks(e, function (e) {
                                    var i = [];
                                    e.forEach(function (e) {
                                        var t = _.SkinDataMgr.Ins().getOwnedSkin(_.SkinDataMgr.Ins().getSkinItemInfoBySkinId(e.skinId).name);
                                        (null != t && t.isOwnedPermanent()) || i.push(e);
                                    }),
                                        t(i);
                                });
                            }),
                            (l.prototype.getSkinTasks = function (r, s) {
                                var c = this;
                                if (o.default.isCM()) s([]);
                                else if (this.mSkinTasks && !p.StringUtil.isEmpty(this.mTodayStr) && this.mTodayStr == g.default.formatDate(r)) s(this.mSkinTasks);
                                else {
                                    var e = o.default.getResourcePath('resources/skin_task/task_config.json');
                                    n.default.loadJson(e, function (e, t) {
                                        if (e) console.error(l.TAG + 'loadJson error = ', e);
                                        else if (t)
                                            try {
                                                null == c.mSkinTasks ? (c.mSkinTasks = []) : (m.default.w(l.TAG + 'getSkinTasks update cache splice arr'), c.mSkinTasks.splice(0, c.mSkinTasks.length));
                                                for (
                                                    var i = function (e) {
                                                            var o = new d.default();
                                                            o.skinId = e.skinId;
                                                            var n = [];
                                                            e.task.forEach(function (e) {
                                                                var t = new u.default(e.taskId, o.skinId);
                                                                (t.step = e.step), (t.reward = e.reward), (t.desc = e.desc);
                                                                for (var i = 0; i < t.step.length; i++) t.status.push(u.TaskStatus.STATUS_NONE);
                                                                n.push(t);
                                                            }),
                                                                (o.task = n),
                                                                o.initData(r),
                                                                c.mSkinTasks.push(o);
                                                        },
                                                        o = 0,
                                                        n = t;
                                                    o < n.length;
                                                    o++
                                                ) {
                                                    i(n[o]);
                                                }
                                                m.default.l(l.TAG + ', getSkinTasks this.mTodayStr = ' + c.mTodayStr + ',TimeUtil.formatDate(timeStamp) ' + g.default.formatDate(r) + ', this.mSkinTasks = ', c.mSkinTasks);
                                                var a = !1;
                                                p.StringUtil.isEmpty(c.mTodayStr) || c.mTodayStr == g.default.formatDate(r) || (a = !0), (c.mTodayStr = g.default.formatDate(r)), s(c.mSkinTasks), a && h.default.fire(f.default.SKIN_TASK_CACHE_UPDATE_UI);
                                            } catch (e) {
                                                console.error(l.TAG + 'analysis error = ', e);
                                            }
                                    });
                                }
                            }),
                            (l.prototype.notifyShareEvent = function (t, i) {
                                return __awaiter(this, void 0, void 0, function () {
                                    return __generator(this, function (e) {
                                        switch (e.label) {
                                            case 0:
                                                return m.default.l(l.TAG + ', notifyShareEvent shareEvent = ', t), null == t ? [2] : 0 < t.count ? [4, this.updateShareTask(t.skinId, t.count, i)] : [3, 2];
                                            case 1:
                                                return e.sent(), [3, 3];
                                            case 2:
                                                i && i(!1), (e.label = 3);
                                            case 3:
                                                return [2];
                                        }
                                    });
                                });
                            }),
                            (l.prototype.notifyGradeSongEvent = function (e, t) {
                                return __awaiter(this, void 0, void 0, function () {
                                    return __generator(this, function (e) {
                                        return t && t(!0), [2];
                                    });
                                });
                            }),
                            (l.prototype.notifyNormalEvent = function (e, t) {
                                t && t(!0);
                            }),
                            (l.prototype.updateFightTask = function (i) {
                                var o = this;
                                return new Promise(function (t, e) {
                                    o.updateTaskStep(u.SKinTaskID.TASK_FIGHT_PLAY_COUNT, 1, function (e) {
                                        i && i(e), t(!0);
                                    });
                                });
                            }),
                            (l.prototype.updateFightFriendTask = function (i) {
                                var o = this;
                                return new Promise(function (t, e) {
                                    o.updateTaskStep(u.SKinTaskID.TASK_FIGHT_FRIEND_TIMES, 1, function (e) {
                                        i && i(e), t(!0);
                                    });
                                });
                            }),
                            (l.prototype.updateFightUsePropTask = function (i, o) {
                                var n = this;
                                return new Promise(function (t, e) {
                                    n.updateTaskStep(u.SKinTaskID.TASK_FIGHT_USE_PROP_TIMES, i, function (e) {
                                        o && o(e), t(!0);
                                    });
                                });
                            }),
                            (l.prototype.updateFightWin = function (i) {
                                var o = this;
                                return new Promise(function (t, e) {
                                    o.updateTaskStep(u.SKinTaskID.TASK_FIGHT_WIN_COUNT, 1, function (e) {
                                        i && i(e), t(!0);
                                    });
                                });
                            }),
                            (l.prototype.updateLotteryTask = function (i) {
                                var o = this;
                                return new Promise(function (t, e) {
                                    o.updateTaskStep(u.SKinTaskID.TASK_LOTTERY, 1, function (e) {
                                        i && i(e), t(!0);
                                    });
                                });
                            }),
                            (l.prototype.updateGainCrownTask = function (i, o) {
                                var n = this;
                                return new Promise(function (t, e) {
                                    n.updateTaskStep(u.SKinTaskID.TASK_NORMAL_GAIN_CROWN, i, function (e) {
                                        o && o(e), t(!0);
                                    });
                                });
                            }),
                            (l.prototype.updateReliveTimesTask = function (i, o) {
                                var n = this;
                                return new Promise(function (t, e) {
                                    n.updateTaskStep(u.SKinTaskID.TASK_NORMAL_RELIVE_TIMES, i, function (e) {
                                        o && o(e), t(!0);
                                    });
                                });
                            }),
                            (l.prototype.updateWatchAdsTask = function (i, o) {
                                var n = this;
                                return new Promise(function (t, e) {
                                    n.updateTaskStep(
                                        u.SKinTaskID.TASK_WATCH_ADS,
                                        1,
                                        function (e) {
                                            o && o(e), t(!0);
                                        },
                                        i,
                                    );
                                });
                            }),
                            (l.prototype.updateGoldBuyTask = function (i, o) {
                                var n = this;
                                return new Promise(function (t, e) {
                                    n.updateTaskStep(
                                        u.SKinTaskID.TASK_GOLD_BUY,
                                        1,
                                        function (e) {
                                            o && o(e), t(!0);
                                        },
                                        i,
                                    );
                                });
                            }),
                            (l.prototype.updateShareTask = function (i, o, n) {
                                var a = this;
                                return new Promise(function (t, e) {
                                    a.updateTaskStep(
                                        u.SKinTaskID.TASK_SHARE_FOR_NEW_PLAYER,
                                        o,
                                        function (e) {
                                            n && n(e), t(!0);
                                        },
                                        i,
                                    );
                                });
                            }),
                            (l.prototype.updateTaskStep = function (a, r, s, o) {
                                var c = this;
                                this.getCurTime(function (e, n) {
                                    e
                                        ? p.StringUtil.isEmpty(o)
                                            ? c.getSkinTasks(n, function (e) {
                                                  for (var t = 0; t < e.length; t++)
                                                      for (var i = 0; i < e[t].task.length; i++)
                                                          if (e[t].task[i].taskId == a) {
                                                              var o = _.SkinDataMgr.Ins().getOwnedSkin(_.SkinDataMgr.Ins().getSkinItemInfoBySkinId(e[t].task[i].skinId).name);
                                                              return null != o && o.isOwnedPermanent() ? (m.default.w(l.TAG + ',updateTaskStep skin is unLocked Permanent2 skinId = ' + e[t].task[i].skinId + ',taskId = ' + a), void (null != s && null != s && s(!1))) : (e[t].task[i].updateStep(r), c.saveSkinTasks(n), void (null != s && null != s && s(!0)));
                                                          }
                                              })
                                            : c.getSkinTaskById(o, n, function (e) {
                                                  if (e) {
                                                      var t = _.SkinDataMgr.Ins().getOwnedSkin(_.SkinDataMgr.Ins().getSkinItemInfoBySkinId(o).name);
                                                      if (null != t && t.isOwnedPermanent()) return m.default.w(l.TAG + ',updateTaskStep skin is unLocked Permanent1 skinId = ' + o + ',taskId = ' + a), void (null != s && null != s && s(!1));
                                                      for (var i = 0; i < e.task.length; i++) if (e.task[i].taskId == a) return e.task[i].updateStep(r), c.saveSkinTasks(n), void (null != s && null != s && s(!0));
                                                  }
                                              })
                                        : null != s && null != s && s(!1);
                                });
                            }),
                            (l.prototype.getSkinTaskById = function (i, e, o) {
                                this.getSkinTasks(e, function (e) {
                                    for (var t = 0; t < e.length; t++) if (e[t].skinId == i) return void o(e[t]);
                                    o(null);
                                });
                            }),
                            (l.prototype.getSkinTaskItemById = function (e, i, t, o) {
                                this.getSkinTaskById(e, t, function (e) {
                                    if (e) {
                                        for (var t = 0; t < e.task.length; t++) if (e.task[t].taskId == i) return void o(e.task[t]);
                                        o(null);
                                    } else o(null);
                                });
                            }),
                            (l.prototype.saveSkinTasks = function (i) {
                                this.getSkinTasks(i, function (e) {
                                    var t = '';
                                    e.forEach(function (e) {
                                        t += e.getTaskStr(i) + '&';
                                    }),
                                        (t = t.substr(0, t.length - 1)),
                                        m.default.i(l.TAG + ' saveSkinTasks timeStamp = ' + i + ',saveStr = ' + t),
                                        a.default.save(r.default.SKIN_TASK_STEP_STATUS, t);
                                });
                            }),
                            (l.prototype.getCurTime = function (i) {
                                s.MGUser.getCurrentServerRealTime({
                                    complete: function (e, t) {
                                        i(e, t);
                                    },
                                });
                            }),
                            (l.TAG = 'SkinTaskMgr ====>>'),
                            (l.ins = null),
                            l
                        );
                    })();
                i.default = c;
                var l = function () {};
                i.ShareEvent = l;
                var y = function () {};
                i.GradeSongEvent = y;
                var S,
                    v = function () {};
                (i.NormalEvent = v), ((S = i.NormalEventType || (i.NormalEventType = {}))[(S.LOTTERY = 1)] = 'LOTTERY'), (S[(S.WATCH_ADS = 2)] = 'WATCH_ADS'), (S[(S.GOLD_BUY = 3)] = 'GOLD_BUY'), cc._RF.pop();
            },
            {
                '../../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../../base/Log': 'Log',
                '../../../config/LSKey': 'LSKey',
                '../../../util/PU': 'PU',
                '../../../util/ResLoader': 'ResLoader',
                '../../../util/StringUtil': 'StringUtil',
                '../../../util/TimeUtil': 'TimeUtil',
                '../../Logic/EventBus': 'EventBus',
                '../../Logic/NotifyEvent': 'NotifyEvent',
                '../../Logic/SkinDataManager': 'SkinDataManager',
                '../../Network/Protocol/StorageUtil': 'StorageUtil',
                './SkinTask': 'SkinTask',
                './SkinTaskItem': 'SkinTaskItem',
            },
        ],
        SkinTaskPageViewPrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'b1ed0kWXhpPQLH/mcewMt+O', 'SkinTaskPageViewPrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('../UI/GameEntraScene/BasicTouchEvent'),
                    r = e('../Logic/SkinDataManager'),
                    o = e('../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    s = e('../../base/Log'),
                    c = e('./frag/SkinTaskMgr'),
                    l = e('../UI/GameEntraScene/PrefabMgr'),
                    u = e('./SkinTaskPrefab'),
                    d = e('../../infoc/m_p2_skin_piece'),
                    p = e('../shop/DialogOneButtonPrefab'),
                    h = e('../Logic/EventBus'),
                    f = e('../Logic/NotifyEvent'),
                    m = e('../Logic/I18nManager'),
                    n = cc._decorator,
                    g = n.ccclass,
                    _ = n.property,
                    y = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mPageView = null), (e.mContentLayout = null), (e.lastSprite = null), (e.nextSprite = null), (e.mCloseBtn = null), (e.mCloseSprite = null), (e.mLockedTasks = null), (e.mFirstShowSkinInfo = null), (e.mSource = d.default.SOURCE_SKIN_STORE), e;
                        }
                        var n;
                        return (
                            __extends(e, t),
                            ((n = e).prototype.setSource = function (e) {
                                this.mSource = e;
                            }),
                            (e.prototype.setTaskGoingListerer = function (e) {
                                this.mTaskGoingListener = e;
                            }),
                            (e.prototype.setCloseCb = function (e) {
                                this.mCloseCb = e;
                            }),
                            (e.prototype.onLoad = function () {
                                this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                }),
                                    this.initEvent(),
                                    this.initTaskData();
                            }),
                            (e.prototype.update = function () {}),
                            (e.prototype.initEvent = function () {
                                var e = this,
                                    t = new a.default(function () {
                                        e.toLastSkinTask();
                                    });
                                this.lastSprite.node.on(cc.Node.EventType.TOUCH_START, t.click, t);
                                var i = new a.default(function () {
                                    e.toNextSkinTask();
                                });
                                this.nextSprite.node.on(cc.Node.EventType.TOUCH_START, i.click, i);
                                var o = new a.default(function () {
                                    s.default.i(n.TAG + ',closeBtn click '), e.onClose();
                                });
                                this.mCloseBtn.node.on(cc.Node.EventType.TOUCH_END, o.click, o), this.mCloseSprite && this.mCloseSprite.node.on(cc.Node.EventType.TOUCH_END, o.click, o), this.mPageView.node.on('page-turning', this.onPageTurning, this);
                            }),
                            (e.prototype.onClose = function () {
                                this.node.destroy(), this.mCloseCb && this.mCloseCb();
                            }),
                            (e.prototype.onPageTurning = function (e) {
                                var t = this;
                                setTimeout(function () {
                                    cc.isValid(t, !0) && t.updateLastNextBtn();
                                }, 0);
                            }),
                            (e.prototype.updateLastNextBtn = function () {
                                var e = this.mPageView.getCurrentPageIndex(),
                                    t = 0 != e;
                                this.lastSprite.node.active != t && (this.lastSprite.node.active = t), (t = e != this.mLockedTasks.length - 1), this.nextSprite.node.active != t && (this.nextSprite.node.active = t), this.mPageView.getPages()[e].getComponent(u.default).onStart();
                            }),
                            (e.prototype.toLastSkinTask = function () {
                                d.default.report(0, r.SkinDataMgr.Ins().getSkinItemInfoBySkinId(this.mLockedTasks[this.mPageView.getCurrentPageIndex()].skinId).name, d.default.ACTION_CLICK_LEFT, this.mSource), this.mPageView.scrollToPage(this.mPageView.getCurrentPageIndex() - 1, 0.3), this.hideLastNextBtnByScroll();
                            }),
                            (e.prototype.toNextSkinTask = function () {
                                d.default.report(0, r.SkinDataMgr.Ins().getSkinItemInfoBySkinId(this.mLockedTasks[this.mPageView.getCurrentPageIndex()].skinId).name, d.default.ACTION_CLICK_RIGHT, this.mSource), this.mPageView.scrollToPage(this.mPageView.getCurrentPageIndex() + 1, 0.3), this.hideLastNextBtnByScroll();
                            }),
                            (e.prototype.hideLastNextBtnByScroll = function () {
                                var e = this;
                                (this.nextSprite.node.active = !1),
                                    (this.lastSprite.node.active = !1),
                                    this.scheduleOnce(function () {
                                        e.updateLastNextBtn();
                                    }, 0.35);
                            }),
                            (e.prototype.initTaskData = function () {
                                var i = this;
                                o.MGUser.getCurrentServerRealTime({
                                    complete: function (e, t) {
                                        s.default.i(n.TAG + 'onLoad  getCurrentServerRealTime result = ' + e),
                                            e &&
                                                c.default.Ins().getLockedSkinTasks(t, function (e) {
                                                    (i.mLockedTasks = e), i.initPageView();
                                                });
                                    },
                                });
                            }),
                            (e.prototype.initPageView = function () {
                                var a = this;
                                s.default.i(n.TAG + 'initPageView tasks = ', this.mLockedTasks),
                                    (this.mPageView.node.height = n.PAGE_HEIGHT_NO_BUY),
                                    l.default.load('/prefab/SkinTaskPrefab', function (e, t) {
                                        if (cc.isValid(a, !0)) {
                                            for (var i = 0; i < a.mLockedTasks.length; i++) {
                                                var o = cc.instantiate(t),
                                                    n = o.getComponent(u.default);
                                                n.setSkinItemInfo(r.SkinDataMgr.Ins().getSkinItemInfoBySkinId(a.mLockedTasks[i].skinId)),
                                                    n.setPieceEnoughListerer(function (e) {
                                                        a.showPieceToSkinDialog(e);
                                                    }),
                                                    n.setSource(a.mSource),
                                                    a.mTaskGoingListener && n.setTaskGoingListerer(a.mTaskGoingListener.bind(a)),
                                                    a.mPageView.addPage(o);
                                            }
                                            a.scheduleOnce(function () {
                                                a.initPageViewPosition();
                                            }, 0.05);
                                        }
                                    });
                            }),
                            (e.prototype.initPageViewPosition = function () {
                                if (null == this.mFirstShowSkinInfo);
                                else for (var e = 0; e < this.mLockedTasks.length; e++) this.mLockedTasks[e].skinId == this.mFirstShowSkinInfo.skinId && this.mPageView.scrollToPage(e, 0);
                                this.updateLastNextBtn();
                            }),
                            (e.prototype.showSkinTask = function (e) {
                                this.mFirstShowSkinInfo = e;
                            }),
                            (e.prototype.showPieceToSkinDialog = function (o) {
                                var n = this;
                                l.default.load('prefab/shop/DialogOneButtonPrefab', function (e, t) {
                                    var i = t.getComponent(p.default);
                                    m.default.getInstance().isEnglish() ? (i.setContent('<color=3B5D72><size=30>Congratulations, collection of all skin puzzle\n\r' + o.displayName + ' unlock!</size></color>'), i.setBtnTxt('Get')) : (i.setContent('<color=3B5D72><size=30>恭喜您已集齐所有皮肤碎片,\n\r' + o.displayName + '皮肤已永久解锁!</size></color>'), i.setBtnTxt('领取')),
                                        i.setBottonCallback(function (e) {
                                            e.destroy(), n.onTipsConfirm(o);
                                        }),
                                        n.node.addChild(t);
                                });
                            }),
                            (e.prototype.onTipsConfirm = function (e) {
                                h.default.fire(f.default.SKIN_PIECES_UNLOCK, e), this.onClose();
                            }),
                            (e.prototype.onDestroy = function () {}),
                            (e.TAG = '[SkinTaskPageViewPrefab]=====>>>'),
                            (e.PAGE_WIDTH = 677),
                            (e.PAGE_HEIGHT = 1058),
                            (e.PAGE_HEIGHT_NO_BUY = 923),
                            __decorate([_(cc.PageView)], e.prototype, 'mPageView', void 0),
                            __decorate([_(cc.Layout)], e.prototype, 'mContentLayout', void 0),
                            __decorate([_(cc.Sprite)], e.prototype, 'lastSprite', void 0),
                            __decorate([_(cc.Sprite)], e.prototype, 'nextSprite', void 0),
                            __decorate([_(cc.Button)], e.prototype, 'mCloseBtn', void 0),
                            __decorate([_(cc.Sprite)], e.prototype, 'mCloseSprite', void 0),
                            (e = n = __decorate([g], e))
                        );
                    })(cc.Component);
                (i.default = y), cc._RF.pop();
            },
            {
                '../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../base/Log': 'Log',
                '../../infoc/m_p2_skin_piece': 'm_p2_skin_piece',
                '../Logic/EventBus': 'EventBus',
                '../Logic/I18nManager': 'I18nManager',
                '../Logic/NotifyEvent': 'NotifyEvent',
                '../Logic/SkinDataManager': 'SkinDataManager',
                '../UI/GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
                '../UI/GameEntraScene/PrefabMgr': 'PrefabMgr',
                '../shop/DialogOneButtonPrefab': 'DialogOneButtonPrefab',
                './SkinTaskPrefab': 'SkinTaskPrefab',
                './frag/SkinTaskMgr': 'SkinTaskMgr',
            },
        ],
        SkinTaskPrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'a8e66KTHphOY6Q0d9Vqhd9Y', 'SkinTaskPrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./frag/SkinTaskMgr'),
                    n = e('../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    l = e('./SkinTaskItemPrefab'),
                    a = e('../UI/GameEntraScene/ImgCache'),
                    r = e('../Logic/GameItemsManager'),
                    u = e('./SkinPieceMgr'),
                    c = e('../Logic/EventBus'),
                    d = e('../Logic/NotifyEvent'),
                    p = e('../UI/GameEntraScene/ToastPrefab'),
                    h = e('../UI/GameEntraScene/PrefabMgr'),
                    f = e('../../base/Log'),
                    m = e('../propAddition/Define'),
                    g = e('../../util/StringUtil'),
                    _ = e('../../infoc/m_p2_skin_piece'),
                    s = cc._decorator,
                    y = s.ccclass,
                    S = s.property,
                    v = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.rootNode = null), (e.skinIconSprite = null), (e.skinTitleSprite = null), (e.skinPiecesSprite = null), (e.piecesOwnLabel = null), (e.task1Node = null), (e.task2Node = null), (e.task3Node = null), (e.task4Node = null), (e.pieceAnimLabel1 = null), (e.pieceAnimLabel2 = null), (e.effectNode = null), (e.effectRichText = null), (e.mSkinItemInfo = null), (e.mSource = _.default.SOURCE_SKIN_STORE), (e.hasOnStart = !1), (e.hasInitItem = !1), e;
                        }
                        var s;
                        return (
                            __extends(e, t),
                            ((s = e).prototype.setTaskGoingListerer = function (e) {
                                this.mTaskGoingListener = e;
                            }),
                            (e.prototype.setPieceEnoughListerer = function (e) {
                                this.mPieceEnoughListener = e;
                            }),
                            (e.prototype.setSkinItemInfo = function (e) {
                                this.mSkinItemInfo = e;
                            }),
                            (e.prototype.setSource = function (e) {
                                this.mSource = e;
                            }),
                            (e.prototype.onLoad = function () {
                                this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                }),
                                    this.initEvent(),
                                    this.initTaskData(),
                                    this.initView();
                            }),
                            (e.prototype.onStart = function () {
                                (this.hasOnStart = !0), this.hasInitItem && this.onItemStart();
                            }),
                            (e.prototype.onItemStart = function () {
                                for (var e = [this.task1Node, this.task2Node, this.task3Node, this.task4Node], t = 0; t < 4; t++) {
                                    var i = e[t].children[0];
                                    if (i) i.getComponent(l.default).onStart();
                                }
                            }),
                            (e.prototype.initTaskData = function () {
                                var i = this;
                                n.MGUser.getCurrentServerRealTime({
                                    complete: function (e, t) {
                                        f.default.i('[SkinTaskPrefab]===>>>onLoad  getCurrentServerRealTime result = ' + e),
                                            e &&
                                                o.default.Ins().getLockedSkinTasks(t, function (e) {
                                                    e.forEach(function (e) {
                                                        e.skinId == i.mSkinItemInfo.skinId && i.initTasks(e);
                                                    });
                                                });
                                    },
                                });
                            }),
                            (e.prototype.initTasks = function (r) {
                                var s = this;
                                f.default.i('[SkinTaskPrefab]===>>>initTasks task = ', r);
                                var c = [this.task1Node, this.task2Node, this.task3Node, this.task4Node];
                                r &&
                                    r.task &&
                                    0 < r.task.length &&
                                    h.default.load('/prefab/SkinTaskItemPrefab', function (e, t) {
                                        if (t) {
                                            for (var i = cc.instantiate(t), o = 0; o < 4; o++)
                                                if (r.task[o]) {
                                                    var n = cc.instantiate(i),
                                                        a = n.getComponent(l.default);
                                                    a.setTaskGoingListerer(s.mTaskGoingListener), a.setToastCb(s.showToastTips.bind(s)), a.setData(r.task[o], s.mSkinItemInfo.piecesId, o), a.setSource(s.mSource), a.setDoPieceFlyAnimationCb(s.doPieceFly.bind(s)), c[o].removeAllChildren(), c[o].addChild(n);
                                                }
                                            (s.hasInitItem = !0), s.hasOnStart && s.onItemStart();
                                        }
                                    });
                            }),
                            (e.prototype.initView = function () {
                                var e = m.default.getAdditionDesc(this.mSkinItemInfo.skinId);
                                if (g.StringUtil.isEmpty(e)) this.effectNode.active = !1;
                                else {
                                    this.effectNode.active = !0;
                                    var t = e.indexOf('color=#');
                                    -1 != t && (e = e.replace(e.substr(t + 7, 6), 'FFF838')), (this.effectRichText.string = e);
                                }
                                a.default.get2(r.GameItemsManager.getIns().getSmallPicByItemId(this.mSkinItemInfo.skinId), this.skinIconSprite), a.default.get2(r.GameItemsManager.getIns().getSmallPicByItemId(this.mSkinItemInfo.piecesId), this.skinPiecesSprite), a.default.get2(this.getSkinTitle(this.mSkinItemInfo.skinId), this.skinTitleSprite), (this.piecesOwnLabel.string = u.default.Ins().getPieceCount(this.mSkinItemInfo.piecesId) + '/' + this.mSkinItemInfo.piecesTotal), this.invokePieceEnough();
                            }),
                            (e.prototype.invokePieceEnough = function () {
                                u.default.Ins().getPieceCount(this.mSkinItemInfo.piecesId) >= this.mSkinItemInfo.piecesTotal && this.mPieceEnoughListener && this.mPieceEnoughListener(this.mSkinItemInfo);
                            }),
                            (e.prototype.initEvent = function () {
                                c.default.register(d.default.SKIN_TASK_UPDATE_PIECES_UI, this.updatePieces, this), c.default.register(d.default.SKIN_TASK_CACHE_UPDATE_UI, this.initTaskData, this);
                            }),
                            (e.prototype.showToastTips = function (o, n) {
                                var a = this;
                                h.default.load('prefab/ToastPrefab', function (e, t) {
                                    if (t) {
                                        var i = t.getComponent(p.default);
                                        i.showTips(o, function () {
                                            t.destroy();
                                        }),
                                            i.setLong(n),
                                            a.node.addChild(t);
                                    }
                                });
                            }),
                            (e.prototype.buySkin = function () {}),
                            (e.prototype.getSkinTitle = function (e) {
                                return '/static_res/skin_chip/skin_title/skin_title_' + e;
                            }),
                            (e.prototype.onDestroy = function () {
                                this.unRegistEvent();
                            }),
                            (e.prototype.updatePieces = function (e, t) {
                                f.default.i('[SKinTaskPrefab]====>>> updatePieces 更新 界面 碎片数量 params = ', t);
                                var i = t[0];
                                this.playPieceAddAnim(i);
                            }),
                            (e.prototype.playPieceAddAnim = function (c) {
                                return __awaiter(this, void 0, void 0, function () {
                                    var t, i, o, n, a, r, s;
                                    return __generator(this, function (e) {
                                        switch (e.label) {
                                            case 0:
                                                if (this.mSkinItemInfo.piecesId != c.pieceID) return [3, 2];
                                                for ((t = u.default.Ins().getPieceCount(this.mSkinItemInfo.piecesId) - c.count) < 0 && (t = 0), i = u.default.Ins().getPieceCount(this.mSkinItemInfo.piecesId), o = 2 * (i + '').length, n = '', s = 0; s < o; s++) n += ' ';
                                                for (a = 2 * (this.mSkinItemInfo.piecesTotal + '').length + 1, r = '', s = 0; s < a; s++) r += ' ';
                                                return (this.piecesOwnLabel.string = n + '/' + this.mSkinItemInfo.piecesTotal), [4, this.doOneAddAnim(t, r, i)];
                                            case 1:
                                                e.sent(), (this.pieceAnimLabel1.node.active = !1), (this.pieceAnimLabel2.node.active = !1), (this.piecesOwnLabel.string = u.default.Ins().getPieceCount(this.mSkinItemInfo.piecesId) + '/' + this.mSkinItemInfo.piecesTotal), this.invokePieceEnough(), (e.label = 2);
                                            case 2:
                                                return [2];
                                        }
                                    });
                                });
                            }),
                            (e.prototype.doOneAddAnim = function (o, n, a) {
                                var r = this;
                                return new Promise(function (e, t) {
                                    var i = r.rootNode.getComponent(cc.Animation);
                                    (r.pieceAnimLabel1.node.active = !0),
                                        (r.pieceAnimLabel2.node.active = !0),
                                        (r.pieceAnimLabel1.string = a + n),
                                        (r.pieceAnimLabel2.string = o + n),
                                        i.once(
                                            'finished',
                                            function () {
                                                f.default.w('showOff => play add animation finished.'), e(!0);
                                            },
                                            r,
                                        ),
                                        i.play(s.ADD_PIECE_AMIN);
                                });
                            }),
                            (e.prototype.doPieceFly = function (e, t, i) {
                                var o = this;
                                1 == t
                                    ? this.scheduleOnce(function () {
                                          o.playAddPieceSuccessAnim(e, function () {
                                              i && i();
                                          });
                                      }, 0)
                                    : 2 == t
                                    ? (this.scheduleOnce(function () {
                                          o.playAddPieceSuccessAnim(e);
                                      }, 0),
                                      this.scheduleOnce(function () {
                                          o.playAddPieceSuccessAnim(e, function () {
                                              i && i();
                                          });
                                      }, 0.1))
                                    : (this.scheduleOnce(function () {
                                          o.playAddPieceSuccessAnim(e);
                                      }, 0),
                                      this.scheduleOnce(function () {
                                          o.playAddPieceSuccessAnim(e);
                                      }, 0.1),
                                      this.scheduleOnce(function () {
                                          o.playAddPieceSuccessAnim(e, function () {
                                              i && i();
                                          });
                                      }, 0.2));
                            }),
                            (e.prototype.playAddPieceSuccessAnim = function (e, t) {
                                var i = new cc.Node();
                                (i.width = e.node.width), (i.height = e.node.height);
                                var o = e.node.parent.convertToWorldSpaceAR(e.node.getPosition()),
                                    n = this.node.convertToNodeSpaceAR(o);
                                i.setPosition(n);
                                var a = i.addComponent(cc.Sprite);
                                (a.type = cc.Sprite.Type.SIMPLE), (a.sizeMode = cc.Sprite.SizeMode.CUSTOM), (a.spriteFrame = e.spriteFrame);
                                var r = this.skinPiecesSprite.node.parent.convertToWorldSpaceAR(this.skinPiecesSprite.node.getPosition()),
                                    s = this.node.convertToNodeSpaceAR(r);
                                this.node.addChild(i);
                                var c = s.x - i.x,
                                    l = s.y - i.y,
                                    u = [cc.p(s.x - 0.3 * c, s.y - 0.8 * l), cc.p(s.x - 0 * c, s.y - 0.3 * l), cc.p(s.x, s.y)],
                                    d = cc.bezierTo(0.35, u),
                                    p = cc.fadeTo(0.02, 0),
                                    h = cc.scaleTo(0.35, 0.4, 0.4),
                                    f = cc.spawn(d, h),
                                    m = cc.sequence(
                                        f,
                                        p,
                                        cc.callFunc(function () {
                                            i.destroy(), t && t();
                                        }),
                                    );
                                i.runAction(m);
                            }),
                            (e.prototype.unRegistEvent = function () {
                                c.default.remove(d.default.SKIN_TASK_UPDATE_PIECES_UI, this.updatePieces, this), c.default.remove(d.default.SKIN_TASK_CACHE_UPDATE_UI, this.initTaskData, this);
                            }),
                            (e.ADD_PIECE_AMIN = 'skin_task_pieces_add'),
                            __decorate([S(cc.Node)], e.prototype, 'rootNode', void 0),
                            __decorate([S(cc.Sprite)], e.prototype, 'skinIconSprite', void 0),
                            __decorate([S(cc.Sprite)], e.prototype, 'skinTitleSprite', void 0),
                            __decorate([S(cc.Sprite)], e.prototype, 'skinPiecesSprite', void 0),
                            __decorate([S(cc.Label)], e.prototype, 'piecesOwnLabel', void 0),
                            __decorate([S(cc.Node)], e.prototype, 'task1Node', void 0),
                            __decorate([S(cc.Node)], e.prototype, 'task2Node', void 0),
                            __decorate([S(cc.Node)], e.prototype, 'task3Node', void 0),
                            __decorate([S(cc.Node)], e.prototype, 'task4Node', void 0),
                            __decorate([S(cc.Label)], e.prototype, 'pieceAnimLabel1', void 0),
                            __decorate([S(cc.Label)], e.prototype, 'pieceAnimLabel2', void 0),
                            __decorate([S(cc.Node)], e.prototype, 'effectNode', void 0),
                            __decorate([S(cc.RichText)], e.prototype, 'effectRichText', void 0),
                            (e = s = __decorate([y], e))
                        );
                    })(cc.Component);
                (i.default = v), cc._RF.pop();
            },
            {
                '../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../base/Log': 'Log',
                '../../infoc/m_p2_skin_piece': 'm_p2_skin_piece',
                '../../util/StringUtil': 'StringUtil',
                '../Logic/EventBus': 'EventBus',
                '../Logic/GameItemsManager': 'GameItemsManager',
                '../Logic/NotifyEvent': 'NotifyEvent',
                '../UI/GameEntraScene/ImgCache': 'ImgCache',
                '../UI/GameEntraScene/PrefabMgr': 'PrefabMgr',
                '../UI/GameEntraScene/ToastPrefab': 'ToastPrefab',
                '../propAddition/Define': 'Define',
                './SkinPieceMgr': 'SkinPieceMgr',
                './SkinTaskItemPrefab': 'SkinTaskItemPrefab',
                './frag/SkinTaskMgr': 'SkinTaskMgr',
            },
        ],
        SkinTask: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '90771Ed3uFLIoXqHH6j5QW7', 'SkinTask'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('../../Network/Protocol/StorageUtil'),
                    a = e('../../../config/LSKey'),
                    r = e('../../../util/StringUtil'),
                    s = e('../../../util/TimeUtil'),
                    o = e('../../../base/Log'),
                    c = (function () {
                        function e() {}
                        return (
                            (e.prototype.initData = function (e) {
                                this.initTask(e), o.default.l('SkinTask====>>, initData this = ', this);
                            }),
                            (e.prototype.getTaskStr = function (e) {
                                var i = s.default.formatDate(e),
                                    o = this.skinId + ':';
                                return (
                                    this.task.forEach(function (e) {
                                        var t = e.getTaskStr(i);
                                        r.StringUtil.isEmpty(t) || (o += t + ',');
                                    }),
                                    (o = o.substr(0, o.length - 1))
                                );
                            }),
                            (e.prototype.initTask = function (i) {
                                var o = this,
                                    e = n.default.read(a.default.SKIN_TASK_STEP_STATUS);
                                r.StringUtil.isEmpty(e) ||
                                    e.split('&').forEach(function (e) {
                                        var t = e.split(':');
                                        t[0] == o.skinId && o.initTaskReal(t[1], i);
                                    });
                            }),
                            (e.prototype.initTaskReal = function (e, i) {
                                var o = this;
                                r.StringUtil.isEmpty(e) ||
                                    e.split(',').forEach(function (t) {
                                        o.task.forEach(function (e) {
                                            e.initTask(t, i);
                                        });
                                    });
                            }),
                            e
                        );
                    })();
                (i.default = c), cc._RF.pop();
            },
            {
                '../../../base/Log': 'Log',
                '../../../config/LSKey': 'LSKey',
                '../../../util/StringUtil': 'StringUtil',
                '../../../util/TimeUtil': 'TimeUtil',
                '../../Network/Protocol/StorageUtil': 'StorageUtil',
            },
        ],
        SkinTryData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'ad6f96YplFDW5oJvwrLXgC0', 'SkinTryData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {
                        (this.source = e.SOURCE_NONE), (this.itemInfo = null), (this.trySkinFinish = !1);
                    }
                    return (e.SOURCE_NONE = 0), (e.SOURCE_SKIN_STORE = 1), (e.SOURCE_SKIN_STORE_INVITE_POPUP = 2), (e.SOURCE_INVITE_POPUP = 3), e;
                })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        SkinUtils: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'cdcdawc0KxNO7yOIGiMC9IK', 'SkinUtils'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var l = e('../Logic/SkinDataManager'),
                    a = e('../UI/GameEntraScene/ToastPrefab'),
                    u = e('./DownLoadingPrefab'),
                    r = e('../../base/G'),
                    s = e('../../base/State'),
                    c = e('../../gamescene/GameSceneSetting'),
                    d = e('../Logic/Plugin/PluginMgr'),
                    p = e('../Logic/Plugin/IPlugin'),
                    h = e('../../util/PU'),
                    f = e('../UI/GameEntraScene/PrefabMgr'),
                    m = e('../../business/Logic/I18nManager'),
                    o = (function () {
                        function n() {}
                        return (
                            (n.needTryInviteSkinSpecSong = function (e) {
                                return !1;
                            }),
                            (n.isNetWorkConnected = function () {
                                return 'none' != r.G.networkType && 0 != r.G.networkIsConnected;
                            }),
                            (n.trySkinSpecSong = function (t, i) {
                                var o = this,
                                    n = l.SkinDataMgr.Ins().getInviteSkin();
                                cc.sys.isBrowser
                                    ? this.realTrySpecSong(t, n, i)
                                    : l.SkinDataMgr.isSkinExist(n.name, function (e) {
                                          0 == e || n.isNeedUpdate ? (h.default.isWeiXin() && !o.isNetWorkConnected() ? o.realSpecSongStartGame(t) : o.showTrySpecSongDownloadingPopup(t, n, i)) : o.realTrySpecSong(t, n, i);
                                      });
                            }),
                            (n.useSkin = function (t, i, o, n, a, r) {
                                var s = this;
                                cc.sys.isBrowser
                                    ? this.realUse(t, i, a, r)
                                    : l.SkinDataMgr.isSkinExist(t.name, function (e) {
                                          0 == e || t.isNeedUpdate ? s.showUseDownloadingPopup(t, i, o, n, a, r) : s.realUse(t, i, a, r);
                                      });
                            }),
                            (n.trySkin = function (t, i, o, n, a) {
                                var r = this;
                                console.log('[SkinStore] itemTrySkinCallback skin = ' + t),
                                    cc.sys.isBrowser
                                        ? this.realTry(t, i, a)
                                        : l.SkinDataMgr.isSkinExist(t.name, function (e) {
                                              0 == e || t.isNeedUpdate ? r.showTryDownloadingPopup(t, i, o, n, a) : r.realTry(t, i, a);
                                          });
                            }),
                            (n.showTrySpecSongDownloadingPopup = function (i, o, n) {
                                var a = this;
                                console.log('[SkinStore] showTrySpecSongDownloadingPopup skin = ' + o),
                                    f.default.load(this.downloadPrefab, function (e, t) {
                                        t.getComponent(u.default).setCancelCallback(function () {
                                            t.destroy(), l.SkinDataMgr.cancelDownloadSkin(o), a.realSpecSongStartGame(i);
                                        }),
                                            n.addChild(t),
                                            l.SkinDataMgr.downloadSkin(
                                                o.name,
                                                function () {
                                                    t.destroy(), (o.isDownload = !0), (o.isNeedUpdate = !1), a.realTrySpecSong(i, o, n);
                                                },
                                                function () {
                                                    t.destroy(), a.realSpecSongStartGame(i);
                                                },
                                            );
                                    });
                            }),
                            (n.showTryDownloadingPopup = function (i, o, n, a, r) {
                                var s = this;
                                console.log('[SkinStore] showDownloadingPopup skin = ' + i),
                                    f.default.load(this.downloadPrefab, function (e, t) {
                                        t.getComponent(u.default).setCancelCallback(function () {
                                            t.destroy(), l.SkinDataMgr.cancelDownloadSkin(i);
                                        }),
                                            o.addChild(t),
                                            l.SkinDataMgr.downloadSkin(
                                                i.name,
                                                function () {
                                                    t.destroy(), (i.isDownload = !0), (i.isNeedUpdate = !1), n(), s.realTry(i, o, r);
                                                },
                                                function () {
                                                    t.destroy(), m.default.getInstance().isEnglish() ? s.showToast('Download failed, please check the network', o) : s.showToast('下载失败，请检查网络', o), a();
                                                },
                                            );
                                    });
                            }),
                            (n.showUseDownloadingPopup = function (i, o, n, a, r, s) {
                                var c = this;
                                console.log('[SkinStore] showDownloadingPopup skin = ' + i),
                                    f.default.load(this.downloadPrefab, function (e, t) {
                                        t.getComponent(u.default).setCancelCallback(function () {
                                            t.destroy(), l.SkinDataMgr.cancelDownloadSkin(i);
                                        }),
                                            o.addChild(t),
                                            l.SkinDataMgr.downloadSkin(
                                                i.name,
                                                function () {
                                                    t.destroy(), (i.isDownload = !0), (i.isNeedUpdate = !1), n(), c.realUse(i, o, r, s);
                                                },
                                                function () {
                                                    t.destroy(), m.default.getInstance().isEnglish() ? c.showToast('Download failed, please check the network', o) : c.showToast('下载失败，请检查网络', o), a();
                                                },
                                            );
                                    });
                            }),
                            (n.realUse = function (o, e, n, t) {
                                var a = this;
                                console.log('[SkinStore] useSkin skin = ' + o),
                                    this.showLoadingSkinScene(e, function (i) {
                                        l.SkinDataMgr.Ins().changeSkin(
                                            o,
                                            function () {
                                                for (var e = l.SkinDataMgr.Ins().getSkinList().length, t = 0; t < e; t++) l.SkinDataMgr.Ins().getSkinList()[t].isUsing && (l.SkinDataMgr.Ins().getSkinList()[t].isUsing = !1);
                                                i.destroy(), (o.isUsing = !0), n && n();
                                            },
                                            function () {
                                                i.destroy(), m.default.getInstance().isEnglish() ? a.showToast('Failed to load', e) : a.showToast('加载失败', e), t && t();
                                            },
                                        );
                                    });
                            }),
                            (n.realSpecSongStartGame = function (e) {
                                if (e) r.G.Ap.presenter.enterScene(r.G.GAME_SCENE_NAME, r.G.Ap.state.mission.musicId);
                                else {
                                    var t = d.default.Ins().getPlugin(p.default.Plugin_Energy);
                                    r.G.Ap.state.reset(),
                                        (r.G.Ap.state.mission = new s.Mission(n.SPEC_SONG_LEVEL_ID, n.SPEC_SONG_ID, !1)),
                                        r.G.Ap.config.loadMusic(r.G.Ap.state.mission.musicId, function (e) {
                                            t.decreaseEnergy(1), c.default.getInstance().setFromSource(c.FromSource.SOURCE_MUSIC), r.G.Ap.presenter.enterScene(r.G.GAME_SCENE_NAME, r.G.Ap.state.mission.musicId, function () {});
                                        });
                                }
                            }),
                            (n.realTrySpecSong = function (i, t, e) {
                                var o = this;
                                console.log('[SkinStore] trySkin skin = ' + t),
                                    this.showLoadingSkinScene(e, function (e) {
                                        l.SkinDataMgr.Ins().switchTrialSkin(
                                            t,
                                            function () {
                                                if (i) (r.G.Ap.state.mission = new s.ExclusiveSkinMission(n.SPEC_SONG_LEVEL_ID, n.SPEC_SONG_ID)), r.G.Ap.presenter.enterScene(r.G.GAME_SCENE_NAME, r.G.Ap.state.mission.musicId);
                                                else {
                                                    var t = d.default.Ins().getPlugin(p.default.Plugin_Energy);
                                                    r.G.Ap.state.reset(),
                                                        (r.G.Ap.state.mission = new s.ExclusiveSkinMission(n.SPEC_SONG_LEVEL_ID, n.SPEC_SONG_ID)),
                                                        r.G.Ap.config.loadMusic(r.G.Ap.state.mission.musicId, function (e) {
                                                            t.decreaseEnergy(1), c.default.getInstance().setFromSource(c.FromSource.SOURCE_SKIN_TRY), r.G.Ap.presenter.enterScene(r.G.GAME_SCENE_NAME, r.G.Ap.state.mission.musicId);
                                                        });
                                                }
                                                e.destroy();
                                            },
                                            function () {
                                                e.destroy(), o.realSpecSongStartGame(i);
                                            },
                                        );
                                    });
                            }),
                            (n.realTry = function (t, i, o) {
                                var n = this;
                                console.log('[SkinStore] trySkin skin = ' + t),
                                    this.showLoadingSkinScene(i, function (e) {
                                        l.SkinDataMgr.Ins().switchTrialSkin(
                                            t,
                                            function () {
                                                o && o(),
                                                    r.G.Ap.state.reset(),
                                                    (r.G.Ap.state.mission = new s.Mission(400, 200004, !1)),
                                                    (r.G.Ap.state.mission.trial = !0),
                                                    r.G.Ap.config.loadMusic(r.G.Ap.state.mission.musicId, function (e) {
                                                        c.default.getInstance().setFromSource(c.FromSource.SOURCE_SKIN_TRY), r.G.Ap.presenter.enterScene(r.G.GAME_SCENE_NAME, r.G.Ap.state.mission.musicId);
                                                    }),
                                                    e.destroy();
                                            },
                                            function () {
                                                m.default.getInstance().isEnglish() ? n.showToast('Failed to load', i) : n.showToast('加载失败', i), e.destroy();
                                            },
                                        );
                                    });
                            }),
                            (n.showToast = function (i, o) {
                                f.default.load('prefab/ToastPrefab', function (e, t) {
                                    t.getComponent(a.default).showTips(i, function () {
                                        t.destroy();
                                    }),
                                        o.addChild(t);
                                });
                            }),
                            (n.showLoadingSkinScene = function (i, o) {
                                f.default.load('prefab/SkinLoadingprefab', function (e, t) {
                                    i.addChild(t), o(t);
                                });
                            }),
                            (n.SPEC_SONG_ID = 100002),
                            (n.SPEC_SONG_LEVEL_ID = 2),
                            (n.downloadPrefab = 'prefab/DownLoadingPrefab'),
                            n
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../../base/G': 'G',
                '../../base/State': 'State',
                '../../business/Logic/I18nManager': 'I18nManager',
                '../../gamescene/GameSceneSetting': 'GameSceneSetting',
                '../../util/PU': 'PU',
                '../Logic/Plugin/IPlugin': 'IPlugin',
                '../Logic/Plugin/PluginMgr': 'PluginMgr',
                '../Logic/SkinDataManager': 'SkinDataManager',
                '../UI/GameEntraScene/PrefabMgr': 'PrefabMgr',
                '../UI/GameEntraScene/ToastPrefab': 'ToastPrefab',
                './DownLoadingPrefab': 'DownLoadingPrefab',
            },
        ],
        Skin: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '74247ymYo1FMo8UITSQj++g', 'Skin'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./SkinElementPainter'),
                    n = (function () {
                        function t() {
                            this.displayName = '';
                        }
                        return (
                            (t.prototype.clone = function () {
                                var e = new t();
                                return (e.displayName = this.displayName), e;
                            }),
                            (t.prototype.fromJson = function (e) {
                                this.displayName = e.displayName;
                            }),
                            t
                        );
                    })();
                i.SkinProperty = n;
                var a = (function () {
                    function e(e) {
                        (this.skinObject = e), (this.property = new n()), (this.skinElementPainter = new o.default(this.skinObject));
                    }
                    return (
                        (e.prototype.getSkinObject = function () {
                            return this.skinObject;
                        }),
                        (e.prototype.getSkinElementPainter = function () {
                            return this.skinElementPainter;
                        }),
                        (e.prototype.getProperty = function () {
                            return this.property;
                        }),
                        (e.prototype.setProperty = function (e) {
                            this.property = e;
                        }),
                        e
                    );
                })();
                (i.default = a), cc._RF.pop();
            },
            {
                './SkinElementPainter': 'SkinElementPainter',
            },
        ],
        SocialHelper: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'a6ceeJFQaBGL55RRweKr6YH', 'SocialHelper'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('./WXHelper'),
                    p = e('./Bean'),
                    o = e('../business/DB/DBMgr'),
                    h = e('../business/UI/MusicLevelDataLoader'),
                    f = e('../business/Logic/PlayerMgr'),
                    n = e('../base/Log'),
                    r = e('../LogicPlatform/PlatformProxy'),
                    s = e('../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    c = e('../../modules/MGAppShare/scripts/MGAppShare'),
                    l = (function () {
                        function d() {}
                        return (
                            (d.onShowListen = function (e) {
                                r.default.Ins().onShowListen(e);
                            }),
                            (d.offShowListen = function (e) {
                                r.default.Ins().offShowListen(e);
                            }),
                            (d.onHideListen = function (e) {
                                r.default.Ins().onHideListen(e);
                            }),
                            (d.offHideListen = function (e) {
                                r.default.Ins().offHideListen(e);
                            }),
                            (d.getLaunchParameter = function () {
                                return r.default.Ins().getLaunchParameter();
                            }),
                            (d.initShare = function (e, t, i, o, n) {
                                i && 0 < i.length ? (i += '&src=' + o) : (i = 'src=' + o), console.log('initShare = ' + t), c.default.initShare(e, t, i, n);
                            }),
                            (d.shareAppMessageWithDialog = function (e, t, i, o, n, a) {
                                console.log('[SocialHelper] shareAppMessageWithDialog title:' + e + ' imgurl:' + t + ' imglocal:' + i), o && 0 < o.length ? (o += '&src=' + n) : (o = 'src=' + n);
                                var r = {
                                    summary: e,
                                    picUrl: t,
                                    extendInfo: o,
                                    localPicPath: i,
                                };
                                console.log('[SocialHelper] shareAppMessageWithDialog QQVer=' + GameStatusInfo.QQVer),
                                    BK.QQ.share(r, function (e, t, i) {
                                        console.log('[SocialHelper] shareAppMessageWithDialog retCode:' + e + ' shareDest:' + t + ' isFirstShare:' + i), 0 == e ? (0 == t ? console.log('[SocialHelper] shareAppMessageWithDialog 成功分享至QQ') : 1 == t ? console.log('[SocialHelper] shareAppMessageWithDialog 成功分享至空间') : 2 == t ? console.log('[SocialHelper] shareAppMessageWithDialog 成功分享至微信') : 3 == t && console.log('[SocialHelper] shareAppMessageWithDialog 成功分享至朋友圈'), a(!0, t)) : (1 == e ? console.log('[SocialHelper] shareAppMessageWithDialog 分享失败' + e) : 2 == e ? console.log('[SocialHelper] shareAppMessageWithDialog 分享失败，用户取消分享：' + e) : console.log('[SocialHelper] shareAppMessageWithDialog 分享失败，未知错误：' + e), a(!1, t));
                                    });
                            }),
                            (d.shareAppMessageByWx = function (e, t, i, o, n) {
                                i && 0 < i.length ? (i += '&src=' + o) : (i = 'src=' + o), console.log('shareImageUrl = ' + t), a.WXHelper.shareAppMessage(e, t, i, n);
                            }),
                            (d.updatePlayerInfo = function (e) {
                                d.postMessage(p.Message.MSG_UPDATE_PLAYER_INFO, e);
                            }),
                            (d.updatePKRankInfo = function (e) {
                                d.postMessage(p.Message.MSG_UPDATE_PK_RANK_INFO, e);
                            }),
                            (d.updateTotalScore = function (e) {
                                d.postMessage(p.Message.MSG_UPDATE_TOTAL_SCORE, e);
                            }),
                            (d.updateSongScore = function (e) {
                                e.keyId || (e.keyId = d.getMusicKeyID(e.songId)), d.postMessage(p.Message.MSG_UPDATE_SONG_SCORE, e);
                            }),
                            (d.advanceLoadGroupRankData = function (e) {
                                d.postMessage(p.Message.MSG_ADVANCEL_LOAD_GROUP_RNAK_DATA, e);
                            }),
                            (d.refreshSelfRankData = function () {
                                var e = Date.now(),
                                    t = f.default.Ins(),
                                    i = {
                                        crown: t.getTotalCrown(),
                                        star: t.getTotalStar(),
                                        grade: t.getUserLevel(),
                                        score: t.getTotalScore(),
                                    };
                                console.warn('[SocialHelper.refreshSelfRankData] totalScoreData, timecost=' + (Date.now() - e) + 'ms'), (e = Date.now());
                                var o = h.MusicLevelDataLoader.getUnlockItemInfo();
                                console.warn('[SocialHelper.refreshSelfRankData] getUnlockItemInfo, timecost=' + (Date.now() - e) + 'ms'), (e = Date.now());
                                for (var n = new Array(), a = 0; a < o.length; a++) {
                                    var r = o[a],
                                        s = this.getMusicKeyID(r.musicId.toString());
                                    if (0 != r.bestScore && -1 != s) {
                                        var c = 3 < r.bestStar ? r.bestStar - 3 : 0,
                                            l = 3 < r.bestStar ? 0 : r.bestStar;
                                        n.push({
                                            key: s,
                                            songid: r.musicId.toString(),
                                            crown: c,
                                            star: l,
                                            score: r.bestScore,
                                            locked: r.isLocked,
                                        });
                                    }
                                }
                                console.warn('[SocialHelper.refreshSelfRankData] songDataArray, timecost=' + (Date.now() - e) + 'ms');
                                var u = {
                                    total: i,
                                    songs: n,
                                };
                                d.postMessage(p.Message.MSG_REFRESH_SONG_SCORE, u);
                            }),
                            (d.updateCache = function () {
                                d.postMessage(p.Message.MSG_UPDATE_CACHE, {
                                    cachePath: r.default.Ins().getUserDataPath(),
                                });
                            }),
                            (d.drawRanking = function (e) {
                                !e.keyId && e.songId && (e.keyId = d.getMusicKeyID(e.songId)), d.postMessage(p.Message.MSG_DRAW_RANKING, e);
                            }),
                            (d.exitDrawRanking = function (e) {
                                d.postMessage(p.Message.MSG_EXIT_DRAW_RANKING, e);
                            }),
                            (d.syncDrawRanking = function (e) {
                                d.postMessage(p.Message.MSG_SYNC_DRAW_RANKING, e);
                            }),
                            (d.touchRankList = function (e) {
                                d.postMessage(p.Message.MSG_TOUCH_RANK_LIST, e);
                            }),
                            (d.preLoadOpenDataContext = function () {
                                d.postMessage(p.Message.MSG_PRE_LOAD_OPENDATACONTEXT);
                            }),
                            (d.getMusicKeyID = function (e) {
                                var t = o.default.Ins().getDBRow(o.eDataBase.eDB_MusicKey, e),
                                    i = t ? t.getKid() : -1;
                                return i || -1;
                            }),
                            (d.addPlayIdToShareQuery = function (e) {
                                return cc.sys.platform === cc.sys.QQ_PLAY && null != d.sPlayerId && (e && 0 < e.length ? (e += '&playerid=' + d.sPlayerId) : (e = 'playerid=' + d.sPlayerId)), e;
                            }),
                            (d.postMessage = function (e, t) {
                                cc.sys.platform == cc.sys.WECHAT_GAME
                                    ? a.WXHelper.postMessageToOpenData(e, t)
                                    : cc.sys.platform == cc.sys.QQ_PLAY &&
                                      0 == d.sbInitPlatform &&
                                      ((d.sbInitPlatform = !0),
                                      s.MGUser.getUserLoginInfo({
                                          success: function (e) {
                                              e && ((d.sPlayerId = e.sid), n.default.l('set sPlayerId ===>' + d.sPlayerId));
                                          },
                                          fail: function () {
                                              console.error('set sPlayerId error');
                                          },
                                      }));
                            }),
                            (d.SHARE_TYPE_SHARE = 'share'),
                            (d.SHARE_TYPE_RANK = 'rank'),
                            (d.sbInitPlatform = !1),
                            d
                        );
                    })();
                (i.SocialHelper = l), cc._RF.pop();
            },
            {
                '../../modules/MGAppShare/scripts/MGAppShare': 'MGAppShare',
                '../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../LogicPlatform/PlatformProxy': 'PlatformProxy',
                '../base/Log': 'Log',
                '../business/DB/DBMgr': 'DBMgr',
                '../business/Logic/PlayerMgr': 'PlayerMgr',
                '../business/UI/MusicLevelDataLoader': 'MusicLevelDataLoader',
                './Bean': 'Bean',
                './WXHelper': 'WXHelper',
            },
        ],
        SocialManager: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '6ca1bwONg1P5JL6hfdCvmQz', 'SocialManager'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./SocialHelper'),
                    n = e('../business/Logic/Plugin/PluginMgr'),
                    a = e('../business/Logic/Plugin/IPlugin'),
                    r = e('../business/Network/Protocol/StorageUtil'),
                    s = e('../config/LSKey'),
                    c = e('../../modules/MGAppShare/scripts/ShareHelper'),
                    l = e('../base/G'),
                    u = e('../base/State'),
                    d = e('../gamescene/GameSceneSetting'),
                    p = e('../business/Core/GameDefine'),
                    h = e('../business/UI/GameEntraScene/CheckActivityRewardProcessor'),
                    f = e('../util/PU'),
                    m = (function () {
                        function t() {
                            (this.mUpdatedCache = !1), (this.mShowedRankingListPage = !1);
                        }
                        return (
                            (t.getInstance = function () {
                                return t.mInstance || (t.mInstance = new t()), t.mInstance;
                            }),
                            (t.prototype.onShow = function (e) {
                                console.log('[QQGame] ------- onShow launchOption = ', e), this.mUpdatedCache || ((this.mUpdatedCache = !0), o.SocialHelper.updateCache()), t.shouldEnterGameSceneByHotSongShare(e) && (this.enterGameForHotSong(e), r.default.save(s.default.ENTER_GAME_BY_HOT_SONG_SHARE, 'true'));
                            }),
                            (t.prototype.onHide = function () {
                                console.log('[QQGame] ------- onHide'), (this.mShowedRankingListPage = !1), (this.mUpdatedCache = !1);
                            }),
                            (t.prototype.isNeedShowRankingListScene = function (e) {
                                return !f.default.isCM() && (e && e.query && e.query.src && e.shareTicket && !this.mShowedRankingListPage ? ((t = e.query.src == o.SocialHelper.SHARE_TYPE_RANK && (this.mShowedRankingListPage = !0)), console.log('#####isNeedShowRankingListScene,结果:' + t + ',src:' + e.query.src + ',mShowedRankingListPage:' + this.mShowedRankingListPage), t) : (console.log('#####isNeedShowRankingListScene:false'), console.log(e), !1));
                                var t;
                            }),
                            (t.shouldEnterGameSceneByHotSongShare = function (e) {
                                if (!e || !e.query) return !1;
                                var t = e.query,
                                    i = parseInt(t.source) || 0,
                                    o = parseInt(t.levelId) || 0,
                                    n = 'true' === r.default.read(s.default.ENTER_GAME_BY_HOT_SONG_SHARE),
                                    a = 'true' === r.default.read(s.default.HAS_FIRST_PLAY_LITTLE_STAR);
                                return i === c.ShareHelper.SHARE_SOURCE_INVITE_SONG && o >= p.Constant.CHOICENESS_STARTID && !n && !a;
                            }),
                            (t.prototype.enterGameForHotSong = function (e) {
                                if (e) {
                                    var t = parseInt(e.query.musicId) || 0,
                                        i = parseInt(e.query.levelId) || 0;
                                    l.G.Ap.state.reset(),
                                        n.default.Ins().getPlugin(a.default.Plugin_Energy).decreaseEnergy(2),
                                        (l.G.Ap.state.mission = new u.Mission(i, t, !1)),
                                        l.G.Ap.config.loadMusic(t, function (e) {
                                            d.default.getInstance().setFromSource(d.FromSource.SOURCE_RANK_OTHER), l.G.Ap.presenter.enterScene(l.G.GAME_SCENE_NAME, t);
                                        }),
                                        new h.default(null).checkShareForSongInviteeReward();
                                }
                            }),
                            t
                        );
                    })();
                (i.default = m), cc._RF.pop();
            },
            {
                '../../modules/MGAppShare/scripts/ShareHelper': 'ShareHelper',
                '../base/G': 'G',
                '../base/State': 'State',
                '../business/Core/GameDefine': 'GameDefine',
                '../business/Logic/Plugin/IPlugin': 'IPlugin',
                '../business/Logic/Plugin/PluginMgr': 'PluginMgr',
                '../business/Network/Protocol/StorageUtil': 'StorageUtil',
                '../business/UI/GameEntraScene/CheckActivityRewardProcessor': 'CheckActivityRewardProcessor',
                '../config/LSKey': 'LSKey',
                '../gamescene/GameSceneSetting': 'GameSceneSetting',
                '../util/PU': 'PU',
                './SocialHelper': 'SocialHelper',
            },
        ],
        SongBoxManager: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '76c19PhJ5NIZ4tfbCKlnuXc', 'SongBoxManager'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var s = e('../DB/DBMgr'),
                    o = (function () {
                        function e() {}
                        return (
                            (e.Ins = function () {
                                return this.mInstance || (this.mInstance = new e()), this.mInstance;
                            }),
                            (e.prototype.getSongBoxVM = function () {
                                for (var e = [], t = 0, i = s.default.Ins().getDBRows(s.eDataBase.eDB_SongBox); t < i.length; t++) {
                                    var o = i[t],
                                        n = parseInt(o.mRowData[0]);
                                    if (n && 'number' == typeof n) {
                                        var a = new c(),
                                            r = o;
                                        (a.id = r.getId()), (a.frequenceMin = r.getFrequenceMin()), (a.frequenceMax = r.getFrequenceMax()), (a.chance = r.getChance()), (a.coin = r.getCoin()), (a.fragments = r.getFragments()), (a.power = r.getPower()), (a.fixedReward = r.getFixedReward()), e.push(a);
                                    }
                                }
                                return Object.seal(e);
                            }),
                            e
                        );
                    })();
                i.SongBoxMgr = o;
                var c = function () {};
                (i.SongBoxVM = c), cc._RF.pop();
            },
            {
                '../DB/DBMgr': 'DBMgr',
            },
        ],
        SongBox: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'd8adfWy2tBMz7U8ghZ+t+5y', 'SongBox'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.findSongBoxById = function (e) {
                                return this.find('id', e);
                            }),
                            (t.prototype.getRow = function () {
                                return new a();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.SongBox = n;
                var a = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getId = function () {
                            return this.getInt('id');
                        }),
                        (t.prototype.getFrequenceMin = function () {
                            return this.getInt('frequenceMin');
                        }),
                        (t.prototype.getFrequenceMax = function () {
                            return this.getInt('frequenceMax');
                        }),
                        (t.prototype.getChance = function () {
                            return this.getInt('chance');
                        }),
                        (t.prototype.getCoin = function () {
                            return this.getInt('coin');
                        }),
                        (t.prototype.getFragments = function () {
                            return this.getInt('fragments');
                        }),
                        (t.prototype.getPower = function () {
                            return this.getInt('power');
                        }),
                        (t.prototype.getFixedReward = function () {
                            return this.getInt('fixedReward');
                        }),
                        t
                    );
                })(o.default);
                (i.SongBoxRow = a), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        SongTryData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '9afd5C4kKhPuL2gYsifwgQc', 'SongTryData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = function () {
                    (this.songTryListPosition = -1), (this.songTryFinish = !1);
                };
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        Sound: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'e4769ydy3tO1aUx2csK7Szk', 'Sound'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../music/InstrumentFactory'),
                    n = (function () {
                        function e() {
                            this.instrumantFactory = new o.default();
                        }
                        return (
                            (e.prototype.getInstrumentFactory = function () {
                                return this.instrumantFactory;
                            }),
                            e
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../music/InstrumentFactory': 'InstrumentFactory',
            },
        ],
        SplitLine: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'b37c9meN9tMCIVkIvvw1Kz0', 'SplitLine'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('../../../base/G'),
                    o = (function (i) {
                        function e(e) {
                            var t = i.call(this, e) || this;
                            return t.updateLines(a.G.Ap.config.presentScale), t.setColor(new cc.Color(255, 255, 255, 255)), t;
                        }
                        return (
                            __extends(e, i),
                            (e.prototype.updateLines = function (e) {
                                var t = Math.floor(90 * e),
                                    i = [Math.floor(270 * e) - t, Math.floor(450 * e) - t, Math.floor(630 * e) - t],
                                    o = a.G.Ap.config.presentHeight * e,
                                    n = [];
                                n.push(new cc.Vec2(i[0], 0)), n.push(new cc.Vec2(i[0], o)), n.push(new cc.Vec2(i[1], 0)), n.push(new cc.Vec2(i[1], o)), n.push(new cc.Vec2(i[2], 0)), n.push(new cc.Vec2(i[2], o)), this.setLine(n);
                            }),
                            e
                        );
                    })(e('../../MUI/MUILine').default);
                (i.default = o), cc._RF.pop();
            },
            {
                '../../../base/G': 'G',
                '../../MUI/MUILine': 'MUILine',
            },
        ],
        SprintWorker: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '8dce5Y4ytxP4r88yM9ZlFf8', 'SprintWorker'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../workers/WorkerBase'),
                    d = e('../../workers/WorkerState'),
                    a = e('../../../property/PropertyDefines'),
                    r = e('../../../base/G'),
                    p = e('../../../util/runtime/Tween'),
                    n = e('../../GameBus'),
                    s = e('../../../util/runtime/ClassType'),
                    c = e('./../../../base/Log'),
                    l = (function (t) {
                        function e() {
                            var e = t.call(this, 'SprintWorker') || this;
                            return (e.speed = 0), (e.preSpeed = 0), (e.endSpeed = 0), (e.duration = 0), (e.recoveryTime = 0), (e.obtained = !1), (e.sprintProperty = null), (e.startCallback = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.init = function (e, t, i) {
                                var o = e.getSpeed(),
                                    n = r.G.Ap.config.mBaseBlockHeight;
                                (this.speed = t.speed * n || o), (this.duration = t.permanentTime || 0), this.updateAdditionTime(), (this.recoveryTime = 3), (this.endSpeed = 10), (this.stage = e), (this.stage.propertyWorked = !0), this.setPreSpeed(o), this.setStartCallback(i), this.stage.setSpeed(this.speed), (this.sprintProperty = new a.Property(a.PROPERTYTYPE.GAME_DASH)), console.log('--- SprintWorker onStart preSpeed:---', o), this.startCountDown(this.duration);
                            }),
                            (e.prototype.updateAdditionTime = function () {
                                var e = this.duration;
                                (this.duration = r.G.propAddition.getAdditionDashTime(this.duration, r.G.Ap.state.mission.getType().toString())), c.default.e('冲刺 时间加成：' + e + '  => ' + this.duration);
                            }),
                            (e.prototype.onStart = function () {
                                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                                try {
                                    if (e && e.length <= 0) return;
                                    var i = e[0],
                                        o = e[1],
                                        n = e[2];
                                    this.init(i, o, n), r.G.Ap.state.startPropertyWork(this.sprintProperty), console.log('--- SprintWorker onStart args:---', e);
                                } catch (e) {
                                    console.log('--- SprintWorker onStart err:---', e);
                                }
                            }),
                            (e.prototype.onStop = function () {
                                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                                try {
                                    return console.log('--- SprintWorker onStop args:---', e), (this.stage.propertyWorked = !1), void r.G.Ap.state.stopPropertyWork(this.sprintProperty);
                                } catch (e) {
                                    console.log('--- SprintWorker onStop err:---', e);
                                }
                            }),
                            (e.prototype.onPause = function () {
                                console.log('--- SprintWorker onPause---');
                            }),
                            (e.prototype.onResume = function () {
                                console.log('--- SprintWorker onResume---');
                            }),
                            (e.prototype.onStateChanged = function (e) {
                                console.log('--- SprintWorker onStateChanged args:---', e), e.state === d.WorkerState.stopped && this.recovery();
                            }),
                            (e.prototype.reset = function () {
                                (this.speed = 0), (this.preSpeed = 0), (this.endSpeed = 0), (this.duration = 0), (this.recoveryTime = 0), (this.obtained = !1), (this.sprintProperty = null);
                            }),
                            (e.prototype.recovery = function () {
                                try {
                                    cc.sys.platform == cc.sys.QQ_PLAY ? this.workForQQ() : this.workForWechat(requestAnimationFrame, cancelAnimationFrame);
                                } catch (e) {
                                    this.stage.setSpeed(this.preSpeed);
                                }
                            }),
                            (e.prototype.startCountDown = function (e) {
                                var t = this;
                                e &&
                                    n.default.getInstance().scheduler.scheduleOnce(function () {
                                        t.startCallback();
                                    }, e);
                            }),
                            (e.prototype.workForWechat = function (o, n) {
                                var a = this,
                                    r = this.endSpeed,
                                    s = 0,
                                    c = 0,
                                    l = 59 * this.recoveryTime;
                                this.stage.setSpeed(r);
                                var u = function () {
                                    var e = a.preSpeed,
                                        t = a.state;
                                    if (t !== d.WorkerState.pausing && t !== d.WorkerState.paused) {
                                        var i = p.mTween.quadEaseIn(s++, r, e, l);
                                        (i = Math.min(i, e)), s <= l ? (a.stage.setSpeed(i), c && n(c), (c = o(u))) : (a.stage.setSpeed(e), c && n(c), a.reset());
                                    }
                                };
                                u();
                            }),
                            (e.prototype.workForQQ = function () {
                                this.workForWechat(s.Type.getRaf(), s.Type.getCaf());
                            }),
                            (e.prototype.getSpeed = function () {
                                return this.speed;
                            }),
                            (e.prototype.getDuration = function () {
                                return this.duration;
                            }),
                            (e.prototype.setPreSpeed = function (e) {
                                void 0 === e && (e = 0), (this.preSpeed = e);
                            }),
                            (e.prototype.setStartCallback = function (e) {
                                e && (this.startCallback = e);
                            }),
                            e
                        );
                    })(o.WorkerBase);
                (i.default = l), cc._RF.pop();
            },
            {
                '../../../base/G': 'G',
                '../../../property/PropertyDefines': 'PropertyDefines',
                '../../../util/runtime/ClassType': 'ClassType',
                '../../../util/runtime/Tween': 'Tween',
                '../../GameBus': 'GameBus',
                '../../workers/WorkerBase': 'WorkerBase',
                '../../workers/WorkerState': 'WorkerState',
                './../../../base/Log': 'Log',
            },
        ],
        SpriteCacheLoader: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '9fd21p8nVRMc5+xTtQnzR8t', 'SpriteCacheLoader'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./Md5'),
                    n = (function () {
                        function a() {}
                        return (
                            (a.load = function (e, i, o) {
                                var n = this;
                                if ((void 0 === o && (o = null), null != e))
                                    if (cc.sys.QQ_PLAY == cc.sys.platform)
                                        if (e.startsWith('http')) {
                                            var t = a.getLocalPath(e);
                                            if (BK.FileUtil.isFileExist(t)) return console.error('SpriteCacheLoader::local cache ' + e), void this.initSpriteFromDisk(t, i, o);
                                            this.downloadHttpFile(e, function (e, t) {
                                                e && n.initSpriteFromDisk(t, i, o);
                                            });
                                        } else this.initSpriteFromDisk(e, i, o);
                                    else this.initSpriteFromDisk(e, i, o);
                            }),
                            (a.loadMultiImageAsyncForQQ = function (i, o) {
                                if (null != i && 0 != i.length)
                                    for (var n = 0, a = [], e = 0; e < i.length; ++e)
                                        console.log('[zhangfu]SpriteCacheLoader.loadMultiImageAsyncForQQ url index= ' + e + ',url = ' + i[e]),
                                            this.loadImageAsyncForQQ(i[e], function (e, t) {
                                                n++, null != t && '' !== t && a.push(t), n == i.length && o(0 < a.length, a);
                                            });
                                else o && o(!1, null);
                            }),
                            (a.loadImageAsyncForQQ = function (e, i) {
                                if (cc.sys.QQ_PLAY == cc.sys.platform)
                                    if (e.startsWith('GameSandBox://') || e.startsWith('GameRes://')) i(!0, e);
                                    else if (e.startsWith('http')) {
                                        var t = a.getLocalPath(e);
                                        BK.FileUtil.isFileExist(t)
                                            ? i(!0, t)
                                            : this.downloadHttpFile(e, function (e, t) {
                                                  i(e, t);
                                              });
                                    } else i(!1, '');
                                else i(!1, '');
                            }),
                            (a.initSpriteFromDisk = function (i, o, e) {
                                if ((void 0 === e && (e = null), e)) {
                                    var t = document.createElement('canvas'),
                                        n = o.node.width,
                                        a = o.node.height;
                                    (t.width = n), (t.height = a);
                                    var r = t.getContext('2d', null);
                                    r.clearRect(0, 0, t.width, t.height), (r.imageSmoothingEnabled = !0), (r.mozImageSmoothingEnabled = !0), r.drawImage(i, 0, 0, t.width, t.height), e(t);
                                }
                                cc.loader.load(i, function (e, t) {
                                    !e && t ? (o.spriteFrame = new cc.SpriteFrame(t)) : console.error('SpriteCacheLoader::load fail => ' + i);
                                });
                            }),
                            (a.downloadHttpFile = function (o, n) {
                                var e = new BK.HttpUtil(o);
                                e.setHttpMethod('get'),
                                    e.requestAsync(function (e, t) {
                                        if (e && 200 == t) {
                                            var i = a.getLocalPath(o);
                                            console.error('SpriteCacheLoader::http done ' + o + ' => ' + i), BK.FileUtil.writeBufferToFile(i, e), n(!0, i);
                                        } else console.error('SpriteCacheLoader::http fail ' + o), n(!1, null);
                                    });
                            }),
                            (a.getLocalPath = function (e) {
                                return 'GameSandBox://temp/' + o.default.hashStr(e) + '.png';
                            }),
                            a
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                './Md5': 'Md5',
            },
        ],
        SpriteFrameSet: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '97019Q80jpE2Yfz4zbuCZBq', 'SpriteFrameSet');
                var o = cc.Class({
                    name: 'SpriteFrameSet',
                    properties: {
                        language: '',
                        spriteFrame: cc.SpriteFrame,
                    },
                });
                (t.exports = o), cc._RF.pop();
            },
            {},
        ],
        StarCountSwitch: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'de4bdkbhAJJMLvmd2hV6RJj', 'StarCountSwitch'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('./MUI/MUINode'),
                    a = e('../base/G'),
                    r = e('./GameBus'),
                    s = e('./animation/action/MActionFactory'),
                    c = e('./MUI/MUIFactory'),
                    l = e('../util/ObjectPool'),
                    u = e('../util/Utility'),
                    d = (function () {
                        function e(e, t) {
                            var i = this;
                            (this.mBlockTouchEffectAnimationPool = null), (this.mBlockEffectNode = null), (this.mEffectCount = 0), (this.mBlockLongTouchEffectAnimationPool = null), (this.mBlockLongEffectNode = null), (this.mLongEffectCount = 0), (this.mIndex = 0), (this.mSkin = null), (this.mBlockEffectNode = new n.default('mBlockEffectNode')), (this.mBlockLongEffectNode = new n.default('mBlockEffectNode')), t.addChild(this.mBlockEffectNode), t.addChild(this.mBlockLongEffectNode), (this.mSkin = e);
                            var o = this.mSkin.getSkinObject();
                            o && ((this.mEffectCount = o.skinRaw.getBlockEffectCount()), (this.mLongEffectCount = o.skinRaw.getBlockEffectCount())),
                                (this.mBlockTouchEffectAnimationPool = new l.default(function () {
                                    var e = i.mSkin.getSkinObject();
                                    return e ? e.skinRaw.createBlockEffectAction(e, s.default.instance, i.mIndex) : null;
                                })),
                                (this.mBlockLongTouchEffectAnimationPool = new l.default(function () {
                                    var e = i.mSkin.getSkinObject();
                                    return e ? e.skinRaw.createBlockLongEffectAction(e, s.default.instance, i.mIndex) : null;
                                })),
                                this.switch(0);
                        }
                        return (
                            (e.prototype.switch = function (e) {
                                e >= this.mEffectCount || ((this.mIndex = e), this.mBlockEffectNode.removeAllChildren(), this.mBlockTouchEffectAnimationPool.clear(), this.mBlockLongEffectNode.removeAllChildren(), this.mBlockLongTouchEffectAnimationPool.clear());
                            }),
                            (e.prototype.putAction = function (e, t) {
                                if (0 === this.mEffectCount && t !== u.Utility.BLOCKTYPE.LONG) return null;
                                if (t === u.Utility.BLOCKTYPE.LONG) {
                                    if (0 === this.mLongEffectCount) return null;
                                    this.mBlockLongTouchEffectAnimationPool.put(e);
                                } else this.mBlockTouchEffectAnimationPool.put(e);
                            }),
                            (e.prototype.getAction = function (e) {
                                return 0 === this.mEffectCount && e !== u.Utility.BLOCKTYPE.LONG ? null : e === u.Utility.BLOCKTYPE.LONG ? (0 === this.mLongEffectCount ? null : this.mBlockLongTouchEffectAnimationPool.get()) : this.mBlockTouchEffectAnimationPool.get();
                            }),
                            (e.prototype.getNode = function (e) {
                                if (0 === this.mEffectCount && e !== u.Utility.BLOCKTYPE.LONG) return null;
                                if (e === u.Utility.BLOCKTYPE.LONG && 0 === this.mLongEffectCount) return null;
                                for (var t, i = null, o = 0, n = (t = e === u.Utility.BLOCKTYPE.LONG ? this.mBlockLongEffectNode.getAllChildren() : this.mBlockEffectNode.getAllChildren()).length; o < n; ++o)
                                    if (!t[o].getVisible()) {
                                        i = t[o];
                                        break;
                                    }
                                if (!i) {
                                    var a = this.mSkin.getSkinObject();
                                    if (!a) return null;
                                    e === u.Utility.BLOCKTYPE.LONG ? (i = a.skinRaw.createBlockLongEffectNode(a, c.default.instance, this.mIndex)) && this.mBlockLongEffectNode.addChild(i) : (i = a.skinRaw.createBlockEffectNode(a, c.default.instance, this.mIndex)) && this.mBlockEffectNode.addChild(i);
                                }
                                return i;
                            }),
                            e
                        );
                    })();
                i.BlockEffectSwitch = d;
                var p = (function () {
                    function e(e, t) {
                        (this.mBgEffectNode = t), (this.mSkin = e);
                        var i = this.mSkin.getSkinObject();
                        (this.mEffectItems = i.skinRaw.createBackgroundEffects('game', i, c.default.instance, s.default.instance)), this.switch(0);
                    }
                    return (
                        (e.prototype.switch = function (e) {
                            if (!(a.G.Ap.config.debugNoBackgroundAnim || !this.mEffectItems || e >= this.mEffectItems.length)) {
                                this.mLastNode && r.default.getInstance().animationMgr.stopTargetActions(this.mLastNode), this.mBgEffectNode.removeAllChildren();
                                var t = this.mEffectItems[e];
                                this.mBgEffectNode.addChild(t.node);
                                for (var i = 0, o = t.actions.length; i < o; ++i) r.default.getInstance().animationMgr.runActionRepeat(t.node, t.actions[i]);
                                this.mLastNode = t.node;
                            }
                        }),
                        e
                    );
                })();
                i.BackgroundEffectSwitch = p;
                var h = (function () {
                    function e(e, t) {
                        (this.mBgNode = t), (this.mSkin = e);
                        var i = this.mSkin.getSkinObject();
                        (this.mActions = i.skinRaw.createBackgroundLoopActions(i, s.default.instance)), this.switch(0);
                    }
                    return (
                        (e.prototype.switch = function (e) {
                            if (!a.G.Ap.config.debugNoBackgroundAnim && this.mActions && !(e >= this.mActions.length)) {
                                r.default.getInstance().animationMgr.stopTargetActions(this.mBgNode);
                                var t = this.mActions[e];
                                r.default.getInstance().animationMgr.runActionRepeat(this.mBgNode, t);
                            }
                        }),
                        e
                    );
                })();
                i.BackgroundLoopSwitch = h;
                var f = (function () {
                    function e(e, t) {
                        (this.mBgNode = t), (this.mSkin = e);
                        var i = this.mSkin.getSkinObject();
                        this.mActions = i.skinRaw.createBackgroundChangeActions(i, s.default.instance);
                    }
                    return (
                        (e.prototype.switch = function (e) {
                            if (!a.G.Ap.config.debugNoBackgroundSwitch)
                                switch (e) {
                                    case 1:
                                        this.animationToNewBackground(0);
                                        break;
                                    case 2:
                                        this.animationToNewBackground(1);
                                }
                        }),
                        (e.prototype.animationToNewBackground = function (e) {
                            if (this.mActions && !(e >= this.mActions.length)) {
                                var t = this.mActions[e];
                                r.default.getInstance().animationMgr.runAction(this.mBgNode, t);
                            }
                        }),
                        e
                    );
                })();
                i.BackgroundSwitch = f;
                var o = (function () {
                    function e(e, t, i, o) {
                        (this.mSwitchList = []), this.mSwitchList.push(new f(e, t)), this.mSwitchList.push(new h(e, t)), this.mSwitchList.push(new p(e, i)), (this.mBlockEffectSwitch = new d(e, o)), this.mSwitchList.push(this.mBlockEffectSwitch);
                    }
                    return (
                        (e.prototype.changeStarCount = function (e) {
                            for (var t = 0, i = this.mSwitchList; t < i.length; t++) {
                                i[t].switch(e);
                            }
                        }),
                        (e.prototype.getCurrentBlockEffect = function () {
                            return this.mBlockEffectSwitch;
                        }),
                        e
                    );
                })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../base/G': 'G',
                '../util/ObjectPool': 'ObjectPool',
                '../util/Utility': 'Utility',
                './GameBus': 'GameBus',
                './MUI/MUIFactory': 'MUIFactory',
                './MUI/MUINode': 'MUINode',
                './animation/action/MActionFactory': 'MActionFactory',
            },
        ],
        StartBlockNode: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '51011TBH1pNTZrwFmq2YYtM', 'StartBlockNode'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var r = e('../loader/BlockSkinFrameLoader'),
                    o = e('./BlockNode'),
                    s = e('../../MUI/MUISprite'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.createLayers = function () {
                                this.setPosition(this.mBlock.rect.x, this.mBlock.rect.y), this.setContentSize(this.mBlock.rect.width, this.mBlock.rect.height);
                                var e = r.default.getInstance().getStartBlockBackground();
                                (this.imageItem = e), (this.imageData = r.default.getInstance().getAtlas());
                                var t = r.default.getInstance().getStartLabel(),
                                    i = this.mBlock.rect.width / t.rect.width,
                                    o = this.mBlock.rect.width,
                                    n = t.rect.height * i,
                                    a = new s.default();
                                (a.imageData = r.default.getInstance().getAtlas()), (a.imageItem = t), a.move(0, (this.mBlock.rect.height - n) / 2, o, n), this.addChild(a);
                            }),
                            (t.prototype.updateTouchState = function (e) {
                                this.opacity = e ? 0.2 : 1;
                            }),
                            t
                        );
                    })(o.default);
                (i.default = n), cc._RF.pop();
            },
            {
                '../../MUI/MUISprite': 'MUISprite',
                '../loader/BlockSkinFrameLoader': 'BlockSkinFrameLoader',
                './BlockNode': 'BlockNode',
            },
        ],
        Startup: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '11cc89hIIlCGIZvuisyW/IS', 'Startup'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {}
                    return (e.isColdStart = !0), (e.enterTimeStamp = 0), (e.hasReportTimecost = !1), e;
                })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        State: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '62e23QbdBxGQK8gg9C+nS1j', 'State'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a,
                    o,
                    n = e('../util/Utility'),
                    r = e('../business/Logic/BattleSettlement'),
                    s = e('../business/Logic/ChestManager'),
                    c = e('./G'),
                    l = e('../anticheat/AntiCheatProbe'),
                    u = e('../util/Dictionary'),
                    d = e('../property/PropertyDefines');
                ((o = a = i.MISSIONTYPE || (i.MISSIONTYPE = {}))[(o.None = 0)] = 'None'), (o[(o.Normal = 1)] = 'Normal'), (o[(o.TrySkin = 2)] = 'TrySkin'), (o[(o.TrySong = 3)] = 'TrySong'), (o[(o.Rank = 4)] = 'Rank'), (o[(o.ExclusiveSkin = 5)] = 'ExclusiveSkin'), (o[(o.Battle = 6)] = 'Battle'), (o[(o.BattleFriend = 7)] = 'BattleFriend'), (o[(o.BattleWorldChat = 8)] = 'BattleWorldChat'), (o[(o.TryPiano = 9)] = 'TryPiano');
                var p = function () {
                    (this.originCount = 0), (this.count = 0);
                };
                i.State_PropertyItem = p;
                var h = function () {
                    (this.tempory = !1), (this.accumulation = !1);
                };
                i.State_PropertyWork = h;
                var f = (function () {
                        function e(e, t, i) {
                            (this.levelId = 0), (this.musicId = 0), (this.pass = !1), (this.trial = !1), (this.trialSong = !1), (this.tryPiano = !1), (this.levelId = e), (this.musicId = t), (this.pass = i);
                        }
                        return (
                            (e.prototype.reset = function () {
                                (this.musicId = 0), (this.pass = !1), (this.trial = !1), (this.trialSong = !1), (this.tryPiano = !1);
                            }),
                            (e.prototype.getType = function () {
                                return a.Normal;
                            }),
                            (e.prototype.isBattle = function () {
                                return !0;
                            }),
                            e
                        );
                    })(),
                    m = (function (o) {
                        function e(e, t, i) {
                            return o.call(this, e, t, i) || this;
                        }
                        return (
                            __extends(e, o),
                            (e.prototype.getType = function () {
                                return a.Normal;
                            }),
                            e
                        );
                    })((i.Mission = f));
                i.NormalMission = m;
                var g = (function (n) {
                    function e(e, t, i) {
                        var o = n.call(this, e, t, i) || this;
                        return (o.trial = !0), o;
                    }
                    return (
                        __extends(e, n),
                        (e.prototype.getType = function () {
                            return a.TrySkin;
                        }),
                        (e.prototype.isBattle = function () {
                            return !1;
                        }),
                        e
                    );
                })(f);
                i.TrySkinMission = g;
                var _ = (function (n) {
                    function e(e, t, i) {
                        var o = n.call(this, e, t, i) || this;
                        return (o.trialSong = !0), o;
                    }
                    return (
                        __extends(e, n),
                        (e.prototype.getType = function () {
                            return a.TrySong;
                        }),
                        (e.prototype.isBattle = function () {
                            return !1;
                        }),
                        e
                    );
                })(f);
                i.TrySongMission = _;
                var y = (function (n) {
                    function e(e, t, i) {
                        var o = n.call(this, e, t, i) || this;
                        return (o.tryPiano = !0), o;
                    }
                    return (
                        __extends(e, n),
                        (e.prototype.getType = function () {
                            return a.TryPiano;
                        }),
                        (e.prototype.isBattle = function () {
                            return !1;
                        }),
                        e
                    );
                })(f);
                i.TryPianoMission = y;
                var S = (function (n) {
                    function e(e, t, i) {
                        var o = n.call(this, 0, 0, !1) || this;
                        return o.reset(), (o.musicId = e), (o.musicName = t), (o.musicDisplayName = i), o;
                    }
                    return (
                        __extends(e, n),
                        (e.prototype.getType = function () {
                            return a.Rank;
                        }),
                        (e.prototype.reset = function () {
                            n.prototype.reset.call(this), (this.musicId = 0), (this.musicName = ''), (this.musicDisplayName = ''), (this.todayScore = 0), (this.honors = []);
                        }),
                        (e.prototype.isBattle = function () {
                            return !1;
                        }),
                        e
                    );
                })(f);
                i.RankMission = S;
                var v = (function (i) {
                    function e(e, t) {
                        return i.call(this, e, t, !1) || this;
                    }
                    return (
                        __extends(e, i),
                        (e.prototype.getType = function () {
                            return a.ExclusiveSkin;
                        }),
                        e
                    );
                })(f);
                i.ExclusiveSkinMission = v;
                var I = (function (i) {
                        function e(e) {
                            var t = i.call(this, 0, e, !1) || this;
                            return (t.startSpeed = 0), (t.endSpeed = 0), (t.baseBeats = 0), (t.increasePecentage = 0), (t.deductPercentage = 0), (t.beginningCountDown = 3), (t.playingCountDown = 180), t;
                        }
                        return (
                            __extends(e, i),
                            (e.prototype.getType = function () {
                                return a.Battle;
                            }),
                            (e.prototype.isBattle = function () {
                                return !1;
                            }),
                            (e.prototype.reset = function () {
                                i.prototype.reset.call(this);
                            }),
                            e
                        );
                    })(f),
                    T = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.getType = function () {
                                return a.BattleFriend;
                            }),
                            t
                        );
                    })((i.BattleMission = I));
                i.BattleFriendMission = T;
                var C = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getType = function () {
                            return a.BattleWorldChat;
                        }),
                        t
                    );
                })(I);
                i.WorldChatBattleMission = C;
                var E = (function () {
                    function e() {
                        (this.running = !1), (this.attainScore = 0), (this.attainCrowns = 0), (this.attainStars = 0), (this.attainMoney = 0), (this.attainGifts = []), (this.perfectScore = 0), (this.dropScore = 0), (this.reliveTime = 0), (this.gameTime = 0), (this.gameStage = n.Utility.GAMESTAGE.NONE), (this.mBattleSettlement = new r.default()), (this.carryProperties = new u.Dictionary2(d.Property.compare)), (this.temporyProperties = new u.Dictionary2(d.Property.compare)), (this.workingProperties = new u.Dictionary2(d.Property.compare));
                    }
                    return (
                        (e.prototype.reset = function (e) {
                            void 0 === e && (e = !0), e && this.mission && this.mission.reset(), (this.running = !1), (this.attainScore = 0), (this.attainCrowns = 0), (this.attainStars = 0), (this.attainMoney = 0), (this.attainGifts = []), (this.perfectScore = 0), (this.dropScore = 0), (this.reliveTime = 0), (this.gameTime = 0), (this.gameStage = n.Utility.GAMESTAGE.NONE), this.carryProperties.clear(), this.temporyProperties.clear(), this.workingProperties.clear();
                        }),
                        (e.prototype.pause = function () {
                            this.running = !1;
                        }),
                        (e.prototype.resume = function () {
                            this.running = !0;
                        }),
                        (e.prototype.isPaused = function () {
                            return !this.running;
                        }),
                        (e.prototype.gameStart = function () {
                            var e = this.getMission(),
                                t = c.G.Ap.antiCheat;
                            if (e) {
                                var i = e.getType();
                                e.isBattle() ? (this.mBattleSettlement.giveBattle(this.mission.levelId, 0, 0), s.default.getInstance().preLoad(this.mission.levelId, this.perfectScore), t.begin()) : i === a.Rank && t.begin(), CMPlay.GameState.onGameStart();
                            }
                        }),
                        (e.prototype.gameOver = function () {
                            var e = this.getMission(),
                                t = c.G.Ap.antiCheat,
                                i = t.getStatus(),
                                o = c.G.Ap.performanceCounter;
                            if (e) {
                                var n = e.getType();
                                e.isBattle() ? this.mBattleSettlement.battleOver() : n === a.Rank && t.setSkipReset(!0), i === l.STATUS.Begin && t.end(), this.disposeProperty(), o.reset(), CMPlay.GameState.onGameStop();
                            }
                        }),
                        (e.prototype.addScore = function (e) {
                            (this.attainScore += e), this.mBattleSettlement.setScore(this.attainScore);
                        }),
                        (e.prototype.addStar = function () {
                            this.attainStars++, this.mBattleSettlement.setStar(this.attainStars), 3 == this.attainStars && this.mission && 0 <= this.mission.levelId && CMPlay.GameState.onGameLevelPass(this.mission.levelId);
                        }),
                        (e.prototype.addCrown = function () {
                            this.attainCrowns++, this.mBattleSettlement.setCrown(this.attainCrowns);
                        }),
                        (e.prototype.addMoney = function () {
                            return this.attainMoney++, this.mBattleSettlement.setGainedGold(this.attainMoney), this.attainMoney;
                        }),
                        (e.prototype.addGift = function (e) {
                            return this.attainGifts.push(e), this.attainGifts.length;
                        }),
                        (e.prototype.getMoney = function () {
                            return this.attainMoney;
                        }),
                        (e.prototype.enterGameStage = function (e) {
                            this.gameStage = e;
                        }),
                        (e.prototype.getGameStage = function () {
                            return this.gameStage;
                        }),
                        (e.prototype.addReliveTimes = function () {
                            this.reliveTime++, this.mBattleSettlement.addReliveTimes(this.reliveTime);
                        }),
                        (e.prototype.getReliveTimes = function () {
                            return this.reliveTime;
                        }),
                        (e.prototype.addGameTime = function (e) {
                            (this.gameTime = e), this.mBattleSettlement.addGameTime(this.gameTime);
                        }),
                        (e.prototype.getGameTime = function () {
                            return this.gameTime;
                        }),
                        (e.prototype.getMission = function () {
                            return this.mission;
                        }),
                        (e.prototype.addCarryProperty = function (e, t) {
                            void 0 === t && (t = 0);
                            var i = this.carryProperties.get(e);
                            null === i && (((i = new p()).count = 0), (i.originCount = 0), this.carryProperties.put(e.clone(), i)), (i.count += t), (i.originCount += t);
                        }),
                        (e.prototype.getCarryPropertyCount = function (e) {
                            var t = this.carryProperties.get(e);
                            return null === t ? 0 : t.count;
                        }),
                        (e.prototype.removeCarryProperty = function (e) {
                            this.carryProperties.remove(e);
                        }),
                        (e.prototype.removeAllCarryProperty = function () {
                            this.carryProperties.clear();
                        }),
                        (e.prototype.resumeCarryProperty = function (e) {
                            var t = this.carryProperties.get(e);
                            return !(null === t || t.count <= 0) && (t.count--, !0);
                        }),
                        (e.prototype.getCarryProperties = function () {
                            for (var e = [], t = this.carryProperties.getPairs(), i = 0, o = t.length; i < o; ++i) {
                                var n = t[i].key;
                                e.push(n.clone());
                            }
                            return e;
                        }),
                        (e.prototype.addTemporyProperty = function (e, t) {
                            void 0 === t && (t = 0);
                            var i = this.temporyProperties.get(e);
                            null === i && (((i = new p()).count = 0), this.temporyProperties.put(e.clone(), i)), (i.count += t);
                        }),
                        (e.prototype.resumeTemporyProperty = function (e) {
                            var t = this.temporyProperties.get(e);
                            return !(null === t || t.count <= 0) && (t.count--, !0);
                        }),
                        (e.prototype.isPropertyWorking = function (e) {
                            return null !== this.temporyProperties.get(e);
                        }),
                        (e.prototype.startPropertyWork = function (e, t) {
                            void 0 === t && (t = !1);
                            var i = this.workingProperties.get(d.Property);
                            null == i ? (((i = new h()).tempory = t), this.workingProperties.put(e.clone(), i)) : console.warn('property working, type is ' + e.type);
                        }),
                        (e.prototype.accumulatePropertyWork = function (e) {
                            var t = this.workingProperties.get(d.Property);
                            null !== t ? (t.accumulation = !0) : console.warn('property is not working, type is ' + e.type);
                        }),
                        (e.prototype.stopPropertyWork = function (e) {
                            this.workingProperties.remove(e);
                        }),
                        (e.prototype.disposeProperty = function () {
                            if (0 !== this.carryProperties.size()) {
                                for (var e = !1, t = this.carryProperties.getPairs(), i = 0, o = t.length; i < o; ++i) {
                                    var n = t[i].value,
                                        a = t[i].key,
                                        r = Math.max(n.originCount - n.count, 0);
                                    0 < r && (c.G.Ap.propertyPack.getPlayProperty().decreaseProperty(a, r), (e = !0));
                                }
                                e && c.G.Ap.propertyPack.save();
                            }
                        }),
                        (e.HONORS = [1, 2, 3, 4, 6, 9]),
                        e
                    );
                })();
                (i.default = E), cc._RF.pop();
            },
            {
                '../anticheat/AntiCheatProbe': 'AntiCheatProbe',
                '../business/Logic/BattleSettlement': 'BattleSettlement',
                '../business/Logic/ChestManager': 'ChestManager',
                '../property/PropertyDefines': 'PropertyDefines',
                '../util/Dictionary': 'Dictionary',
                '../util/Utility': 'Utility',
                './G': 'G',
            },
        ],
        StorageUtil: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '878c1XhHhtMjZeV4VMLYUDl', 'StorageUtil'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var u = e('../../../base/Log'),
                    d = e('../../../config/LSKey'),
                    p = e('../../../util/StringUtil'),
                    h = e('../../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    f = e('../../../base/PullDataStatus'),
                    o = e('./MemCache'),
                    m = e('../../../../modules/MGCloudStorage/scripts/Logic/MGCloudStorageEntrance'),
                    n = (function () {
                        function l() {}
                        return (
                            (l.save = function (e, t) {
                                try {
                                    (t += ''), 0 <= d.default.KEYS_NEED_SYNC.indexOf(e) && ((l._isDataChanged = !0), (this.sObj[e] = t)), o.MemCache.Ins().save(e, t);
                                } catch (e) {
                                    u.default.e('save', e);
                                }
                            }),
                            (l.read = function (e, t) {
                                void 0 === t && (t = null);
                                try {
                                    var i = o.MemCache.Ins().read(e, t);
                                    return p.StringUtil.isNullOrUndefined(i) ? t : i;
                                } catch (e) {
                                    return u.default.e('read', e), t;
                                }
                            }),
                            (l.remove = function (t) {
                                try {
                                    o.MemCache.Ins().remove(t), l.sObj && t in l.sObj && delete l.sObj[t];
                                } catch (e) {
                                    u.default.e('removeFromCache error', t, e);
                                }
                            }),
                            (l.isNeedPush = function () {
                                return 'repush' == l.read(d.default.NEED_REPUSH);
                            }),
                            (l.pushAsync = function (o, n) {
                                if (f.PullDataStatus.isPullDataSuccess) {
                                    var e = l.isNeedPush();
                                    if ((u.default.l('推送数据到云端 _isPushing=' + l._isPushing + '  isNeedPush=' + e + ' _isDataChanged=' + l._isDataChanged), l._isPushing || (!l._isDataChanged && !e))) n && n();
                                    else {
                                        (l._isPushing = !0), (l._isDataChanged = !1);
                                        var t = l.read(d.default.STORAGE_VERSION);
                                        p.StringUtil.isEmpty(t) && (t = '0');
                                        var i = parseInt(t);
                                        i++, l.save(d.default.STORAGE_VERSION, i + '');
                                        for (var a = new Object(), r = 0; r < d.default.KEYS_NEED_SYNC.length; r++) {
                                            var s = d.default.KEYS_NEED_SYNC[r],
                                                c = l.read(s);
                                            (a[s] = c), l.sObj && s in l.sObj && ((a[s] = l.sObj[s]), delete l.sObj[s]);
                                        }
                                        h.MGUser.getUserBasicInfo({
                                            complete: function (e) {
                                                var t = '';
                                                e && (t = e.nickName), p.StringUtil.isEmpty(t) || (t = t.replace('"', '&quot;').replace("'", '&apos;')), (a.nickname = t);
                                                var i = a;
                                                m.MGCloudStorage.setStorage({
                                                    kvDatas: i,
                                                    complete: function (e) {
                                                        u.default.l('push to net, success=' + e, a), (l._isPushing = !1), l._isDataChanged || !e ? l.save(d.default.NEED_REPUSH, 'repush') : l.remove(d.default.NEED_REPUSH), e ? o && o() : n && n();
                                                    },
                                                });
                                            },
                                        });
                                    }
                                } else u.default.w('下拉数据失败，不允许推送。');
                            }),
                            (l.readFromNet = function (e, t, i) {
                                e && 0 != e.length
                                    ? m.MGCloudStorage.getStorage({
                                          keys: e,
                                          success: function (e) {
                                              t && t(e);
                                          },
                                          fail: function () {
                                              i && i();
                                          },
                                      })
                                    : i && i();
                            }),
                            (l.sObj = new Object()),
                            (l._isPushing = !1),
                            (l._isDataChanged = !0),
                            l
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../../../../modules/MGCloudStorage/scripts/Logic/MGCloudStorageEntrance': 'MGCloudStorageEntrance',
                '../../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../../base/Log': 'Log',
                '../../../base/PullDataStatus': 'PullDataStatus',
                '../../../config/LSKey': 'LSKey',
                '../../../util/StringUtil': 'StringUtil',
                './MemCache': 'MemCache',
            },
        ],
        StringUtil: [
            function (e, t, i) {
                'use strict';
                var o;
                cc._RF.push(t, '6ae34c1j4JEtYXfaiwoTaDW', 'StringUtil'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    ((o = i.StringUtil || (i.StringUtil = {})).isNullOrUndefined = function (e) {
                        return null == e || null == e;
                    }),
                    (o.isEmpty = function (e) {
                        return null == e || null == e || 0 == e.length;
                    }),
                    (o.replaceAll = function (e, t, i) {
                        return o.isNullOrUndefined(e) || o.isEmpty(t) ? e : e.replace(new RegExp(t, 'g'), i);
                    }),
                    (o.replaceEmoji = function (e, t) {
                        return void 0 === t && (t = ''), o.isNullOrUndefined(e) ? e : e.replace(new RegExp('(?:[✀-➿]|(?:\ud83c[\udde6-\uddff]){2}|[\ud800-\udbff][\udc00-\udfff]|[#-9]️?⃣|㊙|㊗|〽|〰|Ⓜ|\ud83c[\udd70-\udd71]|\ud83c[\udd7e-\udd7f]|🆎|\ud83c[\udd91-\udd9a]|\ud83c[\udde6-\uddff]|[🈁-\ude02]|🈚|🈯|[🈲-\ude3a]|[🉐-\ude51]|‼|⁉|[▪-▫]|▶|◀|[◻-◾]|©|®|™|ℹ|🀄|[☀-⛿]|⬅|⬆|⬇|⬛|⬜|⭐|⭕|⌚|⌛|⌨|⏏|[⏩-⏳]|[⏸-⏺]|🃏|⤴|⤵|[←-⇿])*', 'g'), t);
                    }),
                    (o.getFixedlengthStr = function (e, t) {
                        if (null == e || null == e) return e;
                        for (var i = 0, o = e.length, n = 0, a = 0, r = 0; r < o; r++) {
                            n++;
                            var s = e.charCodeAt(r);
                            if ((0 <= s && s <= 127 ? (i++, (a = 0)) : ((i += 2), (a = 1)), t < i)) break;
                        }
                        return t < i ? (1 == a ? e.substring(0, n - 2) + '...' : e.substring(0, n - 3) + '...') : e;
                    }),
                    (o.getQueryString = function (e, t) {
                        var i = e.indexOf('?');
                        i < 0 && (i = 0);
                        var o = e.substr(i + 1).split('&'),
                            n = '';
                        if (!o) return n;
                        for (var a = 0, r = o; a < r.length; a++) {
                            var s = r[a].split('=');
                            if (s && 2 == s.length && unescape(s[0]) === t) {
                                n = unescape(s[1]);
                                break;
                            }
                        }
                        return n;
                    }),
                    (o.format = function (e) {
                        for (var t, i = [], o = 1; o < arguments.length; o++) i[o - 1] = arguments[o];
                        return (t = cc.js).formatStr.apply(t, [e].concat(i));
                    }),
                    cc._RF.pop();
            },
            {},
        ],
        SubscriptionUtils: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'cfdf3FeKHtAgK4VfsrJDbJ7', 'SubscriptionUtils'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('./util/PU'),
                    o = (function () {
                        function n() {}
                        return (
                            (n.followSubscription = function () {
                                if (a.default.isQQ()) BK.QQ.enterPubAccountCard(n.QQ_PUIN);
                                else if (a.default.isWeiXin() && wx.openCustomerServiceConversation) {
                                    var e = {
                                        sessionFrom: 'follow_icon',
                                        showMessageCard: !1,
                                        complete: function () {
                                            console.log(' customerParam is opened ');
                                        },
                                    };
                                    wx.openCustomerServiceConversation(e);
                                }
                                n.isOpenFromDialog = !0;
                            }),
                            (n.checkPubState = function (o) {
                                a.default.isQQ() &&
                                    BK.QQ.checkPubAccountState(n.QQ_PUIN, function (e, t, i) {
                                        console.log(' callback errCode = ' + e + ' cmd = ' + t + ' data = ' + JSON.stringify(i)), 1 == i.is_follow ? ((n.isOpenFromDialog = !1), o && o(!0)) : o && o(!1);
                                    }),
                                    o && o(!1);
                            }),
                            (n.QQ_PUIN = '1751365861'),
                            (n.isOpenFromDialog = !1),
                            (n.REWARD_DIAMOND = 10),
                            (n.REWARD_COIN = 100),
                            (n.REWARD_SKIN = '星空环游'),
                            (n.REWARD_DIAMOND_SGIN = 5),
                            n
                        );
                    })();
                (i.SubscriptionUtils = o), cc._RF.pop();
            },
            {
                './util/PU': 'PU',
            },
        ],
        SwitchWorker: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '4c7416JcCJK1rWxJRVrHO2H', 'SwitchWorker'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../gamescene/workers/WorkerBase'),
                    n = e('../LotteryRoll'),
                    y = e('../LotteryVM'),
                    a = e('../LotteryEnum'),
                    S = e('../../Logic/GameItemsManager'),
                    r = e('../../../util/SceneMusicMgr'),
                    s = e('../../looper/Looper'),
                    c = (function (t) {
                        function e() {
                            var e = t.call(this, 'SwitchWorker') || this;
                            return (e.lotteryHandler = null), (e.itemNodes = []), (e.roll = null), (e.prizeData = null), (e.adBackStatus = null), (e.looper = null), (e.audioId = null), (e.MIN_ROLLING_SPEED = 70), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.init = function (e, t, i) {
                                (this.lotteryHandler = e), (this.roll = new n.LotteryRoll()), (this.itemNodes = t), (this.adBackStatus = i), this.adBackStatus === a.AD_STATUS.SKIP_AD ? (this.prizeData = this.getPrizeVMForAd()) : (this.prizeData = this.getPrizeVM());
                            }),
                            (e.prototype.onStart = function () {
                                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                                try {
                                    if (e && e.length <= 0) return;
                                    var i = e[0],
                                        o = e[1],
                                        n = e[2];
                                    this.init(i, o, n), this.removeActiveItem(), this.startRool();
                                } catch (e) {
                                    console.log('--- SwitchWorker onStart err:---', e);
                                }
                            }),
                            (e.prototype.onStop = function () {
                                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                                try {
                                    return this.stopLooper(), void this.reset();
                                } catch (e) {
                                    console.log('--- SwitchWorker onStop err:---', e);
                                }
                            }),
                            (e.prototype.onStateChanged = function (e) {}),
                            (e.prototype.getPrizeVM = function () {
                                var e = this.lotteryHandler.getLotteryVMList();
                                if (e) {
                                    var t = -1,
                                        i = new y.LotteryVM(),
                                        o = Math.ceil(1e4 * Math.random()) || 0;
                                    console.log('--- getPrizeVM random ---', o);
                                    for (var n = 0, a = e; n < a.length; n++) {
                                        var r = a[n];
                                        t++;
                                        var s = r.getChanceMin() || 0,
                                            c = r.getChanceMax() || 99;
                                        if (s <= o && o <= c) {
                                            (i = r).setIndex(t);
                                            break;
                                        }
                                    }
                                    return i;
                                }
                            }),
                            (e.prototype.getPrizeVMForAd = function () {
                                var e = Math.ceil(1e4 * Math.random()) || 0,
                                    t = new y.LotteryVM(),
                                    i = this.lotteryHandler.getLotteryVMList(),
                                    o = [],
                                    n = 0,
                                    a = [],
                                    r = [];
                                if (i) {
                                    for (var s = 0, c = i; s < c.length; s++) {
                                        var l = (m = c[s]),
                                            u = l.getId(),
                                            d = S.GameItemsManager.getIns().isDiamondsType(u),
                                            p = S.GameItemsManager.getIns().isGoldType(u);
                                        d ? (l.setIndex(n), l.setChanceMin(0), l.setChanceMax(5e3), a.push(l)) : p && (l.setIndex(n), l.setChanceMin(5001), l.setChanceMax(1e4), r.push(l)), n++;
                                    }
                                    a.sort(function (e, t) {
                                        return e.getCount() - t.getCount();
                                    }),
                                        r.sort(function (e, t) {
                                            return e.getCount() - t.getCount();
                                        }),
                                        o.push(a[0]),
                                        o.push(r[0]);
                                    for (var h = 0, f = o; h < f.length; h++) {
                                        var m,
                                            g = (m = f[h]).getChanceMin() || 0,
                                            _ = m.getChanceMax() || 99;
                                        if (g <= e && e <= _) {
                                            t = m;
                                            break;
                                        }
                                    }
                                    return t;
                                }
                            }),
                            (e.prototype.startRool = function () {
                                try {
                                    (this.looper = new s.default()), this.looper.setWork(this.doRoll.bind(this)), this.looper.start(0);
                                } catch (e) {
                                    console.log('--- startRool err---', e);
                                }
                            }),
                            (e.prototype.doRoll = function () {
                                try {
                                    var e = this.roll;
                                    if (!e) return;
                                    if ((e.times++, e.times > e.cycle + 10 && e.prize === e.index)) return (e.prize = -1), (e.times = 0), void this.stopRoll();
                                    if (e.times < e.cycle) e.speed -= 10;
                                    else if (e.times === e.cycle) {
                                        var t = this.prizeData && this.prizeData.getIndex() ? this.prizeData.getIndex() : 0;
                                        e.prize = t;
                                    } else e.times > e.cycle + 10 && ((0 === e.prize && 7 === e.index) || e.prize === e.index + 1) ? (e.speed += 110) : (e.speed += 20);
                                    (e.speed = e.speed < this.MIN_ROLLING_SPEED ? this.MIN_ROLLING_SPEED : e.speed), e.speed && this.looper.setInterval(e.speed / 1e3), e.start(this.itemNodes), this.playAudio();
                                } catch (e) {
                                    console.log('--- doRoll err ---', e);
                                }
                            }),
                            (e.prototype.stopRoll = function () {
                                console.log('--- stopRoll ---');
                                try {
                                    this.looper.stop(), this.lotteryHandler.rollingEndCallback(this.prizeData), this.lotteryHandler.stopSwitchWorker();
                                } catch (e) {
                                    console.log('--- stopRoll err:---', e);
                                }
                            }),
                            (e.prototype.stopLooper = function () {
                                this.looper && this.looper.stop();
                            }),
                            (e.prototype.removeActiveItem = function () {
                                if (this.itemNodes)
                                    for (var e = 0, t = this.itemNodes; e < t.length; e++) {
                                        var i = t[e].getChildByName('active');
                                        i.active && (i.active = !i.active);
                                    }
                            }),
                            (e.prototype.playAudio = function () {
                                this.audioId = cc.audioEngine.play(cc.url.raw(r.default.PATH_LOTTERY_ROLLING_MOVE), !1, 1);
                            }),
                            (e.prototype.stopAudio = function () {
                                this.audioId && cc.audioEngine.stop(this.audioId);
                            }),
                            (e.prototype.reset = function () {
                                (this.itemNodes = null), (this.roll = null), (this.prizeData = null), (this.adBackStatus = null), (this.looper = null);
                            }),
                            (e.prototype.onPause = function () {
                                console.log('--- SwitchWorker onPause---');
                            }),
                            (e.prototype.onResume = function () {
                                console.log('--- SwitchWorker onResume---');
                            }),
                            e
                        );
                    })(o.WorkerBase);
                (i.default = c), cc._RF.pop();
            },
            {
                '../../../gamescene/workers/WorkerBase': 'WorkerBase',
                '../../../util/SceneMusicMgr': 'SceneMusicMgr',
                '../../Logic/GameItemsManager': 'GameItemsManager',
                '../../looper/Looper': 'Looper',
                '../LotteryEnum': 'LotteryEnum',
                '../LotteryRoll': 'LotteryRoll',
                '../LotteryVM': 'LotteryVM',
            },
        ],
        SystemInfo: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '9c4f6n8dM9Is5nRiSYkMhRU', 'SystemInfo'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = function () {};
                (i.SystemInfo = o), cc._RF.pop();
            },
            {},
        ],
        TaskFactory: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '0dc2dUZEkhIAa94rgqIZVIP', 'TaskFactory'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../TaskItem'),
                    n = e('./FirstSongTask'),
                    a = e('./LevelThreeTask'),
                    r = e('./AttendChallengeTask'),
                    s = e('./GameShareTask'),
                    c = e('./UnlockHotSongTask'),
                    l = (function () {
                        function e() {}
                        return (
                            (e.createTask = function (e) {
                                switch (e) {
                                    case o.TaskID.TASK_ID_LITTLE_STAR:
                                        return new n.default(e);
                                    case o.TaskID.TASK_ID_LEVEL_THREE:
                                        return new a.default(e);
                                    case o.TaskID.TASK_ID_ATTEND_CHALLENGE:
                                        return new r.default(e);
                                    case o.TaskID.TASK_ID_GAME_SHARE:
                                        return new s.default(e);
                                    case o.TaskID.TASK_ID_UNLOCK_HOT_SONG:
                                        return new c.default(e);
                                }
                                return null;
                            }),
                            e
                        );
                    })();
                (i.default = l), cc._RF.pop();
            },
            {
                '../TaskItem': 'TaskItem',
                './AttendChallengeTask': 'AttendChallengeTask',
                './FirstSongTask': 'FirstSongTask',
                './GameShareTask': 'GameShareTask',
                './LevelThreeTask': 'LevelThreeTask',
                './UnlockHotSongTask': 'UnlockHotSongTask',
            },
        ],
        TaskItemImpl: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '3715aTLrqtBsZay8WJcBNBh', 'TaskItemImpl'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (i) {
                    function e(e) {
                        var t = i.call(this) || this;
                        return (t.id = e), t;
                    }
                    return __extends(e, i), (e.prototype.update = function () {}), e;
                })(e('../TaskItem').TaskItem);
                (i.default = o), cc._RF.pop();
            },
            {
                '../TaskItem': 'TaskItem',
            },
        ],
        TaskItem: [
            function (e, t, i) {
                'use strict';
                var o, n, a;
                cc._RF.push(t, '6ceb5c1Iw1MvZnz4ptadJW+', 'TaskItem'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    ((o = i.TaskID || (i.TaskID = {}))[(o.TASK_ID_LITTLE_STAR = 1)] = 'TASK_ID_LITTLE_STAR'),
                    (o[(o.TASK_ID_LEVEL_THREE = 2)] = 'TASK_ID_LEVEL_THREE'),
                    (o[(o.TASK_ID_ATTEND_CHALLENGE = 3)] = 'TASK_ID_ATTEND_CHALLENGE'),
                    (o[(o.TASK_ID_GAME_SHARE = 4)] = 'TASK_ID_GAME_SHARE'),
                    (o[(o.TASK_ID_UNLOCK_HOT_SONG = 5)] = 'TASK_ID_UNLOCK_HOT_SONG'),
                    ((n = i.TaskStatus || (i.TaskStatus = {}))[(n.TASK_STATUS_NONE = 0)] = 'TASK_STATUS_NONE'),
                    (n[(n.TASK_STATUS_DOING = 1)] = 'TASK_STATUS_DOING'),
                    (n[(n.TASK_STATUS_SUCCESS = 2)] = 'TASK_STATUS_SUCCESS'),
                    (n[(n.TASK_STATUS_FAILED = 3)] = 'TASK_STATUS_FAILED'),
                    ((a = i.TaskRewardType || (i.TaskRewardType = {}))[(a.TASK_REWARD_NONE = 0)] = 'TASK_REWARD_NONE'),
                    (a[(a.TASK_REWARD_ENERGY = 3)] = 'TASK_REWARD_ENERGY'),
                    (a[(a.TASK_REWARD_GOLD = 4)] = 'TASK_REWARD_GOLD'),
                    (a[(a.TASK_REWARD_DIAMOND = 5)] = 'TASK_REWARD_DIAMOND');
                var r = function () {};
                (i.TaskItem = r), cc._RF.pop();
            },
            {},
        ],
        TaskListManager: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '3771fDW4XdBp5m9cRzqYQXH', 'TaskListManager'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('./TaskItem'),
                    o = e('../DB/DBMgr'),
                    r = e('./taskimpl/TaskFactory'),
                    n = e('./TaskRewardStorage'),
                    s = (function () {
                        function e() {
                            (this.mTaskRewardStorage = new n.default()), (this.mTaskList = []);
                        }
                        return (
                            (e.prototype.loadConfigData = function (t) {
                                var i = this;
                                0 === this.mTaskList.length
                                    ? o.default
                                          .Ins()
                                          .loadDb(o.eDataBase.eDB_PlayerTask)
                                          .then(function () {
                                              var e = o.default.Ins().getDBRows(o.eDataBase.eDB_PlayerTask);
                                              e ? (i.parseConfig(e), i.mTaskRewardStorage.load(), i.updateTaskData(), t(!0)) : t && t(!1);
                                          })
                                    : (this.updateTaskData(), t(!0));
                            }),
                            (e.prototype.parseConfig = function (e) {
                                for (var t = 0, i = e; t < i.length; t++) {
                                    var o = i[t],
                                        n = r.default.createTask(o.getID());
                                    if (n) {
                                        switch (((n.name = o.getName()), (n.currentStep = 0), (n.totalStep = o.getStep()), (n.rewardType = o.getRewardType()), n.rewardType)) {
                                            case a.TaskRewardType.TASK_REWARD_ENERGY:
                                                n.rewardValue = o.getRewardEnergy();
                                                break;
                                            case a.TaskRewardType.TASK_REWARD_GOLD:
                                                n.rewardValue = o.getRewardGold();
                                                break;
                                            case a.TaskRewardType.TASK_REWARD_DIAMOND:
                                                n.rewardValue = o.getRewardDiamond();
                                        }
                                        (n.rewardTaken = !1), (n.status = a.TaskStatus.TASK_STATUS_NONE), this.mTaskList.push(n);
                                    } else console.error('task config item error, id=' + o.getID());
                                }
                            }),
                            (e.prototype.updateTaskData = function () {
                                for (var e = 0, t = this.mTaskList; e < t.length; e++) {
                                    var i = t[e];
                                    this.mTaskRewardStorage.isTaskRewardTaken(i.id) ? ((i.rewardTaken = !0), (i.currentStep = i.totalStep), (i.status = a.TaskStatus.TASK_STATUS_SUCCESS)) : i.update();
                                }
                            }),
                            (e.prototype.getTaskList = function () {
                                return this.mTaskList;
                            }),
                            (e.prototype.getTaskItem = function (e) {
                                for (var t = 0, i = this.mTaskList; t < i.length; t++) {
                                    var o = i[t];
                                    if (o.id === e) return o;
                                }
                                return null;
                            }),
                            (e.prototype.updateTaskStatus = function (e) {
                                for (var t = 0, i = this.mTaskList; t < i.length; t++) {
                                    var o = i[t];
                                    if (o.id === e) return o.update(), !0;
                                }
                                return !1;
                            }),
                            (e.prototype.setTaskRewardTaken = function (e, t) {
                                for (var i = 0, o = this.mTaskList; i < o.length; i++) {
                                    var n = o[i];
                                    if (n.id === e) return (!t || (n.status === a.TaskStatus.TASK_STATUS_SUCCESS && !n.rewardTaken)) && ((n.rewardTaken = t), this.mTaskRewardStorage.setTaskRewardTaken(e, t), !0);
                                }
                                return !1;
                            }),
                            e
                        );
                    })();
                (i.default = s), cc._RF.pop();
            },
            {
                '../DB/DBMgr': 'DBMgr',
                './TaskItem': 'TaskItem',
                './TaskRewardStorage': 'TaskRewardStorage',
                './taskimpl/TaskFactory': 'TaskFactory',
            },
        ],
        TaskRewardStorage: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '5c5d2xA3nZIQJaw3XWSPTJe', 'TaskRewardStorage'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var r = e('../Network/Protocol/StorageUtil'),
                    s = e('../../config/LSKey'),
                    o = (function () {
                        function e() {
                            this.mRewardIdSet = new Set();
                        }
                        return (
                            (e.prototype.load = function () {
                                var e = r.default.read(s.default.PLAYER_TASK_REWARD_TAKEN, '');
                                if (e) {
                                    var t = e.split('@');
                                    if (t && 0 < t.length)
                                        for (var i = 0, o = t; i < o.length; i++) {
                                            var n = o[i],
                                                a = parseInt(n);
                                            a && !isNaN(a) && this.mRewardIdSet.add(a);
                                        }
                                }
                            }),
                            (e.prototype.save = function () {
                                var i = '';
                                this.mRewardIdSet.forEach(function (e) {
                                    var t = e.toString();
                                    (i += t), (i += '@');
                                }),
                                    0 < i.length && (i = i.substring(0, i.length - 1)),
                                    r.default.save(s.default.PLAYER_TASK_REWARD_TAKEN, i);
                            }),
                            (e.prototype.setTaskRewardTaken = function (e, t) {
                                t ? this.mRewardIdSet.add(e) : this.mRewardIdSet.delete(e), this.save(), r.default.pushAsync();
                            }),
                            (e.prototype.isTaskRewardTaken = function (e) {
                                return this.mRewardIdSet.has(e);
                            }),
                            e
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../../config/LSKey': 'LSKey',
                '../Network/Protocol/StorageUtil': 'StorageUtil',
            },
        ],
        TaskSystem: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '45d3dpcS7dGsp1Aue9FYB79', 'TaskSystem'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./TaskListManager'),
                    n = e('../Network/Protocol/StorageUtil'),
                    a = e('../../config/LSKey'),
                    r = e('../Logic/PlayerMgr'),
                    s = (function () {
                        function e() {
                            (this.mNeedShowEntry = void 0), (this.mTaskListManager = new o.default());
                        }
                        return (
                            (e.Ins = function () {
                                return e.sInstance || (e.sInstance = new e()), e.sInstance;
                            }),
                            (e.prototype.isNeedShowTaskSystemEntry = function () {
                                return !1;
                            }),
                            (e.prototype.checkTaskEntryCondition = function () {
                                if (void 0 === this.mNeedShowEntry) {
                                    var e = this.isNewUser();
                                    if (e) this.setNeedShowTaskEntry(e);
                                    else this.isNeedShowTaskEntry() && (this.mNeedShowEntry = !0);
                                }
                            }),
                            (e.prototype.isNewUser = function () {
                                var e = r.default.Ins();
                                return 1 === e.getUserLevel() && 0 === e.getUserCurrentExp();
                            }),
                            (e.prototype.isNeedShowTaskEntry = function () {
                                return 'true' === n.default.read(a.default.SHOW_PLAYER_TASK_ENTRY, 'false');
                            }),
                            (e.prototype.setNeedShowTaskEntry = function (e) {
                                e && !this.mNeedShowEntry ? (n.default.save(a.default.SHOW_PLAYER_TASK_ENTRY, 'true'), (this.mNeedShowEntry = !0)) : !e && this.mNeedShowEntry && (n.default.save(a.default.SHOW_PLAYER_TASK_ENTRY, 'false'), (this.mNeedShowEntry = !1));
                            }),
                            (e.prototype.loadData = function (e) {
                                this.mTaskListManager.loadConfigData(e);
                            }),
                            (e.prototype.updateData = function () {
                                this.mTaskListManager.updateTaskData();
                            }),
                            (e.prototype.getTaskList = function () {
                                return Object.freeze(this.mTaskListManager.getTaskList());
                            }),
                            (e.prototype.getTaskItem = function (e) {
                                return this.mTaskListManager.getTaskItem(e);
                            }),
                            (e.prototype.getTaskDetail = function (e) {
                                return Object.seal(this.getTaskItem(e));
                            }),
                            (e.prototype.updateTaskStatus = function (e) {
                                return this.mTaskListManager.updateTaskStatus(e);
                            }),
                            (e.prototype.setRewardTaken = function (e, t) {
                                void 0 === t && (t = !0);
                                var i = this.mTaskListManager.setTaskRewardTaken(e, t);
                                return i && this.isAllTaskRewardTaken() && this.setNeedShowTaskEntry(!1), i;
                            }),
                            (e.prototype.isAllTaskRewardTaken = function () {
                                for (var e = 0, t = this.mTaskListManager.getTaskList(); e < t.length; e++) {
                                    if (!t[e].rewardTaken) return !1;
                                }
                                return !0;
                            }),
                            (e.sInstance = null),
                            e
                        );
                    })();
                (i.default = s), cc._RF.pop();
            },
            {
                '../../config/LSKey': 'LSKey',
                '../Logic/PlayerMgr': 'PlayerMgr',
                '../Network/Protocol/StorageUtil': 'StorageUtil',
                './TaskListManager': 'TaskListManager',
            },
        ],
        TimeUtil: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '8baf3Mse0dPnLjGO8b5U7ng', 'TimeUtil'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('../base/Log'),
                    o = (function () {
                        function e() {}
                        return (
                            (e.getDate = function (e) {
                                return new Date(e).getDate();
                            }),
                            (e.getHours = function (e) {
                                return new Date(e).getHours();
                            }),
                            (e.getChatTime = function (e, t) {
                                void 0 === t && (t = !0);
                                var i = new Date(e);
                                if (t) return ((o = i.getHours()) < 10 ? '0' + o : o + '') + ':' + ((n = i.getMinutes()) < 10 ? '0' + n : n + '');
                                var o,
                                    n,
                                    a = i.getMonth() + 1,
                                    r = a < 10 ? '0' + a : a + '',
                                    s = i.getDate();
                                return r + '月' + (s < 10 ? '0' + s : s + '') + '日 ' + ((o = i.getHours()) < 10 ? '0' + o : o + '') + ':' + ((n = i.getMinutes()) < 10 ? '0' + n : n + '');
                            }),
                            (e.formatDate = function (e) {
                                var t = new Date(e),
                                    i = t.getFullYear(),
                                    o = t.getMonth() + 1,
                                    n = o < 10 ? '0' + o : o + '',
                                    a = t.getDate();
                                return i + '-' + n + '-' + (a < 10 ? '0' + a : a + '');
                            }),
                            (e.formatDateTime = function (e) {
                                var t = e.getFullYear(),
                                    i = e.getMonth() + 1,
                                    o = i < 10 ? '0' + i : i + '',
                                    n = e.getDate();
                                return t + '-' + o + '-' + (n < 10 ? '0' + n : n + '') + ' ' + e.getHours() + ':' + e.getMinutes() + ':' + e.getSeconds() + ',' + e.getMilliseconds();
                            }),
                            (e.getTodayFormatDate = function () {
                                var e = new Date(),
                                    t = e.getFullYear(),
                                    i = e.getMonth() + 1,
                                    o = i < 10 ? '0' + i : i + '',
                                    n = e.getDate();
                                return t + '-' + o + '-' + (n < 10 ? '0' + n : n + '');
                            }),
                            (e.getPastTime = function (e, t) {
                                void 0 === t && (t = '');
                                var i = new Date(e),
                                    o = new Date().getTime() - i.getTime();
                                if (isNaN(o) || e < 0) return t;
                                if (0 == e) return a.default.w('the past time is 0 '), '刚刚';
                                if (o < 0) return a.default.w('the diff time is less than 0 '), '刚刚';
                                var n = Math.floor(o / 2592e6);
                                return 0 < n ? '一月前' : 0 < (n = Math.floor(o / 864e5)) ? n + '天前' : 0 < (n = Math.floor(o / 36e5)) ? n + '小时前' : (n = Math.ceil(o / 6e4)) + '分钟前';
                            }),
                            (e.convertSecondToMinutesSecond = function (e, t) {
                                void 0 === t && (t = !0);
                                var i = Math.floor(e / 60),
                                    o = e % 60;
                                return (i < 10 && t ? '0' + i : '' + i) + ':' + (o < 10 && t ? '0' + o : o + '');
                            }),
                            (e.isSameDay = function (e, t) {
                                return !(!e || !t) && e.getUTCFullYear() === t.getUTCFullYear() && e.getUTCMonth() === t.getUTCMonth() && e.getUTCDate() === t.getUTCDate();
                            }),
                            (e.convertTimeToZero = function (e) {
                                console.log('[convertTimeToZero] mms:' + e);
                                var t = new Date(e);
                                return t.setMinutes(0), t.setSeconds(0), t.setMilliseconds(0), console.log('[convertTimeToZero] zero:' + t.getTime()), t.getTime();
                            }),
                            (e.isBeyondOneDay = function (e, t) {
                                var i = e.getFullYear(),
                                    o = e.getMonth(),
                                    n = e.getDate();
                                console.log('czx ' + i + ' ' + o + ' ' + n);
                                var a = t.getFullYear(),
                                    r = t.getMonth(),
                                    s = t.getDate();
                                return console.log('czx ' + a + ' ' + r + ' ' + s), i < a || (!(a < i) && (o < r || (!(r < o) && n < s)));
                            }),
                            e
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../base/Log': 'Log',
            },
        ],
        TipsDialog: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '8b73aVZq0hIMYXG5PeYOUeI', 'TipsDialog'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../UI/GameEntraScene/BasicTouchEvent'),
                    n = cc._decorator,
                    a = n.ccclass,
                    r = n.property,
                    s = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.onLoad = function () {
                                var e = this;
                                (this.mBottomBtTouchCb = new o.default(function () {
                                    e.mBottomBtnCb && e.mBottomBtnCb();
                                })),
                                    this.mBottomBtn.node.on(cc.Node.EventType.TOUCH_END, this.mBottomBtTouchCb.click, this.mBottomBtTouchCb),
                                    this.mShowCloseBtn
                                        ? ((this.mCloseBtn.node.active = !0),
                                          (this.mCloseTouchCb = new o.default(function () {
                                              e.mCloseBtnCb && e.mCloseBtnCb(), e.node.destroy();
                                          })),
                                          this.mCloseBtn.node.on(cc.Node.EventType.TOUCH_END, this.mCloseTouchCb.click, this.mCloseTouchCb))
                                        : (this.mCloseBtn.node.active = !1);
                            }),
                            (t.prototype.start = function () {
                                (this.mBottomBtnLabel.string = this.mBottomBtnContent), (this.mContentLabel.string = this.mMainContent), this.mContentPanel.getComponent(cc.Animation).play('avator_pop_out');
                            }),
                            (t.prototype.setShowCloseBtn = function (e) {
                                (this.mShowCloseBtn = e), this.mShowCloseBtn ? (this.mCloseBtn.node.active = !0) : (this.mCloseBtn.node.active = !1);
                            }),
                            (t.prototype.setCloseBtnCallback = function (e) {
                                this.mCloseBtnCb = e;
                            }),
                            (t.prototype.setBottomBtnCallback = function (e) {
                                this.mBottomBtnCb = e;
                            }),
                            (t.prototype.setBottomBtnLabel = function (e) {
                                this.mBottomBtnContent = e;
                            }),
                            (t.prototype.setContent = function (e) {
                                this.mMainContent = e;
                            }),
                            __decorate([r(cc.Label)], t.prototype, 'mContentLabel', void 0),
                            __decorate([r(cc.Button)], t.prototype, 'mBottomBtn', void 0),
                            __decorate([r(cc.Label)], t.prototype, 'mBottomBtnLabel', void 0),
                            __decorate([r(cc.Button)], t.prototype, 'mCloseBtn', void 0),
                            __decorate([r(cc.Sprite)], t.prototype, 'mContentPanel', void 0),
                            (t = __decorate([a], t))
                        );
                    })(cc.Component);
                (i.default = s), cc._RF.pop();
            },
            {
                '../UI/GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
            },
        ],
        TitleRedspotPrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '4a94eaPB/9Gvo8BOBt+Wuqy', 'TitleRedspotPrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../ImgCache'),
                    n = cc._decorator,
                    a = n.ccclass,
                    r = n.property,
                    s = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.iconSprite = null), (e.redSpotSprite = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.setIconUrl = function (e) {
                                o.default.get2(e, this.iconSprite, function (e, t) {});
                            }),
                            (e.prototype.setHasRedspot = function (e) {
                                cc.isValid(this, !0) && this.redSpotSprite && (this.redSpotSprite.node.active = e);
                            }),
                            __decorate([r(cc.Sprite)], e.prototype, 'iconSprite', void 0),
                            __decorate([r(cc.Sprite)], e.prototype, 'redSpotSprite', void 0),
                            (e = __decorate([a], e))
                        );
                    })(cc.Component);
                (i.default = s), cc._RF.pop();
            },
            {
                '../ImgCache': 'ImgCache',
            },
        ],
        ToastMgr: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '5b01er+1+5O3Y6j/tIYGNId', 'ToastMgr'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var s = e('./PrefabMgr'),
                    c = e('./ToastPrefab'),
                    o = (function () {
                        function e() {}
                        return (
                            (e.showToast = function (o, n, a) {
                                void 0 === a && (a = !0);
                                var r = cc.director.getScene();
                                r &&
                                    s.default.load('prefab/ToastPrefab', function (e, t) {
                                        if (t) {
                                            var i = t.getComponent(c.default);
                                            i.setLong(a),
                                                i.showTips(o, function () {
                                                    t.destroy(), n && n();
                                                }),
                                                r.addChild(t);
                                        }
                                    });
                            }),
                            e
                        );
                    })();
                (i.ToastMgr = o), cc._RF.pop();
            },
            {
                './PrefabMgr': 'PrefabMgr',
                './ToastPrefab': 'ToastPrefab',
            },
        ],
        ToastPopManager: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '64b5br5ZcBGa6HSJr2bk5k7', 'ToastPopManager'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('../../../base/Log'),
                    o = (function () {
                        function e() {
                            (this.mParentNode = null), (this.mShowCount = 0);
                        }
                        return (
                            (e.getIns = function () {
                                return null == this.sInstance && (this.sInstance = new e()), this.sInstance;
                            }),
                            (e.prototype.init = function (e) {
                                e && (this.mParentNode = e);
                            }),
                            (e.prototype.showDynamic = function (e, i, o) {
                                this.mParentNode || console.error('ToastPopManager show error: parentLayout is null'), a.default.l('ToastPopManager showPopupDlgDynamic:  ' + e);
                                var n = this;
                                cc.loader.loadRes(e, cc.Prefab, function (e, t) {
                                    n.show(t, i, o);
                                });
                            }),
                            (e.prototype.showWithNode = function (e, t, i) {
                                this.mParentNode ? (t && t(e), this.mParentNode.addChild(e), i && i(e), this.addShowCount()) : console.error('ToastPopManager show error: parentLayout is null');
                            }),
                            (e.prototype.show = function (e, t, i) {
                                var o = cc.instantiate(e);
                                this.showWithNode(o, t, i);
                            }),
                            (e.prototype.dismiss = function (e, t) {
                                e.destroy(), t && t(), this.removeShowCount();
                            }),
                            (e.prototype.destroy = function () {
                                (this.mParentNode = null), (e.sInstance = null);
                            }),
                            (e.prototype.addShowCount = function () {
                                this.mShowCount++;
                            }),
                            (e.prototype.removeShowCount = function () {
                                this.mShowCount--;
                            }),
                            (e.prototype.isHasShowingToastPop = function () {
                                return !(this.mShowCount <= 0);
                            }),
                            (e.sInstance = null),
                            e
                        );
                    })();
                (i.ToastPopManager = o), cc._RF.pop();
            },
            {
                '../../../base/Log': 'Log',
            },
        ],
        ToastPrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'bb917lQDB9MWbVR7chKF+5f', 'ToastPrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('../../Network/Protocol/UserUtil'),
                    o = cc._decorator,
                    a = o.ccclass,
                    r = o.property,
                    s = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.contenxt = null), (e.diamondCountLabel = null), (e.diamondLayout = null), (e.labelPre = null), (e.labelSuffix = null), (e.diamondSprite = null), (e.littleStarDiamondLayout = null), (e.littleStarDianmondLabel = null), (e.mPadding = 8), (e.loadLayout = null), (e.loadLabel = null), (e.loadFailLayout = null), (e.loadFailLabel = null), (e.mAutoClickHide = !0), (e.isLong = !0), (e.mResolve = null), (e.isShowing = !1), (e.scheduleCallback = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.setLong = function (e) {
                                this.isLong = e;
                            }),
                            (e.prototype.onLoad = function () {
                                var t = this;
                                this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                }),
                                    this.node.on(cc.Node.EventType.TOUCH_END, function (e) {
                                        t.mAutoClickHide && t.autoHide();
                                    });
                            }),
                            (e.prototype.setTips = function (e) {
                                this.contenxt && (this.contenxt.string = e);
                            }),
                            (e.prototype.setAwardCount = function (e) {
                                if (this.diamondCountLabel) {
                                    this.diamondCountLabel.string = '' + e;
                                    var t = (this.diamondLayout.node.width - (this.labelPre.node.width + this.labelSuffix.node.width + this.diamondSprite.node.width + 2 * this.mPadding)) / 2,
                                        i = t + this.labelPre.node.width + this.mPadding,
                                        o = i + this.diamondSprite.node.width + this.mPadding;
                                    (this.labelPre.getComponent(cc.Widget).left = t), (this.diamondSprite.getComponent(cc.Widget).left = i), (this.labelSuffix.getComponent(cc.Widget).left = o);
                                }
                            }),
                            (e.prototype.setLittleStarAwardCount = function (e) {
                                this.littleStarDianmondLabel && (this.littleStarDianmondLabel.string = 'x ' + e);
                            }),
                            (e.prototype.setLoadTips = function (e) {
                                e && (this.loadLabel.string = e);
                            }),
                            (e.prototype.showReliveAward = function (e, t) {
                                this.autoHide(), (this.mAutoClickHide = !0), (this.mResolve = t), this.showAwardUI(), this.setAwardCount(e), this.show();
                            }),
                            (e.prototype.showTips = function (e, t) {
                                this.autoHide(), (this.mAutoClickHide = !0), (this.mResolve = t), this.showInviteUI(), this.setTips(e), this.show();
                            }),
                            (e.prototype.showLittleStarAward = function (e, t) {
                                this.autoHide(), (this.mAutoClickHide = !0), (this.mResolve = t), this.showLittleStarAwardUI(), this.setLittleStarAwardCount(e), this.show();
                            }),
                            (e.prototype.showLoading = function (e) {
                                this.autoHide(), (this.mAutoClickHide = !1), this.showLoadLayout(), e && this.setLoadTips(e), (this.isShowing = !0);
                            }),
                            (e.prototype.showLoadFail = function (e) {
                                this.autoHide(), (this.mAutoClickHide = !0), (this.mResolve = e), this.showLoadFaillayout(), this.show();
                            }),
                            (e.prototype.show = function () {
                                var t = this;
                                if (!this.isShowing) {
                                    this.isShowing = !0;
                                    var i = n.default.getCurSysTime(),
                                        o = this.isLong ? 3 : 1.5;
                                    null == this.scheduleCallback &&
                                        (this.scheduleCallback = function () {
                                            var e = n.default.getCurSysTime();
                                            o < e - i && t.autoHide();
                                        }),
                                        (this.scheduler = cc.director.getScheduler()),
                                        this.scheduler.scheduleUpdate(this, cc.Scheduler.PRIORITY_NON_SYSTEM, !1, this.scheduleCallback);
                                }
                            }),
                            (e.prototype.autoHide = function () {
                                (this.isShowing = !1), this.scheduler && this.scheduler.unscheduleUpdate(this), this.mResolve && this.mResolve();
                            }),
                            (e.prototype.showAwardUI = function () {
                                this.contenxt && (this.contenxt.node.active = !1), this.diamondLayout && (this.diamondLayout.node.active = !0), this.littleStarDiamondLayout && (this.littleStarDiamondLayout.node.active = !1), this.loadLayout && (this.loadLayout.node.active = !1), this.loadFailLayout && (this.loadFailLayout.node.active = !1);
                            }),
                            (e.prototype.showInviteUI = function () {
                                this.contenxt && (this.contenxt.node.active = !0), this.diamondLayout && (this.diamondLayout.node.active = !1), this.littleStarDiamondLayout && (this.littleStarDiamondLayout.node.active = !1), this.loadLayout && (this.loadLayout.node.active = !1), this.loadFailLayout && (this.loadFailLayout.node.active = !1);
                            }),
                            (e.prototype.showLittleStarAwardUI = function () {
                                this.contenxt && (this.contenxt.node.active = !1), this.diamondLayout && (this.diamondLayout.node.active = !1), this.littleStarDiamondLayout && (this.littleStarDiamondLayout.node.active = !0), this.loadLayout && (this.loadLayout.node.active = !1), this.loadFailLayout && (this.loadFailLayout.node.active = !1);
                            }),
                            (e.prototype.showLoadLayout = function () {
                                (this.contenxt && (this.contenxt.node.active = !1), this.diamondLayout && (this.diamondLayout.node.active = !1), this.littleStarDiamondLayout && (this.littleStarDiamondLayout.node.active = !1), this.loadLayout) && ((this.loadLayout.node.active = !0), this.loadLayout.getComponent(cc.Animation).play('save_image_loading'));
                                this.loadFailLayout && (this.loadFailLayout.node.active = !1);
                            }),
                            (e.prototype.showLoadFaillayout = function () {
                                this.contenxt && (this.contenxt.node.active = !1), this.diamondLayout && (this.diamondLayout.node.active = !1), this.littleStarDiamondLayout && (this.littleStarDiamondLayout.node.active = !1), this.loadLayout && (this.loadLayout.node.active = !1), this.loadFailLayout && (this.loadFailLayout.node.active = !0);
                            }),
                            __decorate([r(cc.Label)], e.prototype, 'contenxt', void 0),
                            __decorate([r(cc.Label)], e.prototype, 'diamondCountLabel', void 0),
                            __decorate([r(cc.Layout)], e.prototype, 'diamondLayout', void 0),
                            __decorate([r(cc.Label)], e.prototype, 'labelPre', void 0),
                            __decorate([r(cc.Label)], e.prototype, 'labelSuffix', void 0),
                            __decorate([r(cc.Sprite)], e.prototype, 'diamondSprite', void 0),
                            __decorate([r(cc.Layout)], e.prototype, 'littleStarDiamondLayout', void 0),
                            __decorate([r(cc.Label)], e.prototype, 'littleStarDianmondLabel', void 0),
                            __decorate([r(cc.Layout)], e.prototype, 'loadLayout', void 0),
                            __decorate([r(cc.Label)], e.prototype, 'loadLabel', void 0),
                            __decorate([r(cc.Layout)], e.prototype, 'loadFailLayout', void 0),
                            __decorate([r(cc.Label)], e.prototype, 'loadFailLabel', void 0),
                            (e = __decorate([a], e))
                        );
                    })(cc.Component);
                (i.default = s), cc._RF.pop();
            },
            {
                '../../Network/Protocol/UserUtil': 'UserUtil',
            },
        ],
        ToggleBean: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '77185dLwQJFa5gynXIsexhs', 'ToggleBean'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function s() {
                        this.toggle = null;
                    }
                    return (
                        (s.parseFromJson = function (e) {
                            if (!e) return null;
                            for (var t = new s(), i = new Array(), o = 0, n = e; o < n.length; o++) {
                                var a = n[o],
                                    r = new c();
                                (r.toggleKey = a.toggleKey), (r.curStatus = a.curStatus), (r.otherStatus = a.otherStatus), (r.startTime = a.startTime), (r.endTime = a.endTime), (r.platform = a.platform), (r.extra = a.extra), i.push(r);
                            }
                            return (t.toggle = i), t;
                        }),
                        s
                    );
                })();
                i.default = o;
                var n,
                    c = function () {};
                (i.Toggle = c), ((n = i.ToggleKey || (i.ToggleKey = {})).RESULT_SKIN = 'result_skin'), (n.RESULT_SONG = 'result_song'), (n.RESULT_SHARE_GIFT = 'result_share_gift'), (n.TMALL_PROMOTION_ENTRANCE = 'tmall_1111_entrance'), (n.SINGLE_SONG_SHOWOFF_QQ_BANNER = 'ss_showoff_qqbanner'), (n.SINGLE_SONG_RESULT_DYNAMIC_BANNER = 'ss_result_qqbanner_dynamic'), (n.WX_REWARDED_VIDEO_PRELOAD = 'wx_rewarded_video_preload'), (n.SUBSCRIPTION_ICON = 'subscription_icon'), (n.CHRITMAS_ELEC_PIANO = 'christmas_elec_piano'), (n.SINGLE_SONG_RESULT_BANNER_DELAY = 'ss_result_banner_delay'), (n.BANNER_DELAY_REWARD_PAGE = 'banner_delay_reward_page'), (n.BANNER_DELAY_DAILY_ATTENDANCE = 'banner_delay_daily_attendance'), (n.BANNER_DELAY_FIGHT_RESULT = 'banner_delay_fight_result'), (n.BANNER_DELAY_FIGHT_SHOW_OFF = 'banner_delay_fight_show_off'), (n.BANNER_DELAY_NORMAL_RESULT_SHOW_OFF = 'banner_delay_normal_result_show_off'), (n.BANNER_DELAY_LOTTERY_PAGE = 'banner_delay_lottery_page'), (n.BANNER_DELAY_RELIVE_PAGE = 'banner_delay_relive_page'), (n.BANNER_DELAY_CHALLENGE_SHOW_OFF = 'banner_delay_challenge_show_off'), cc._RF.pop();
            },
            {},
        ],
        ToggleChecker: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '501f4CJozBL+5cbjJnR0IVF', 'ToggleChecker'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('./ToggleBean'),
                    r = e('../LogicPlatform/PlatformProxy'),
                    s = e('../../modules/MGBasic/scripts/Logic/MGBasicEntrance'),
                    c = e('../base/Log'),
                    o = e('../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    l = e('../util/PU'),
                    n = (function () {
                        function n() {
                            (this.mToggleUrl = 'https://piano-weixin-game.cmcm.com/pianotiles2/cfg/toggle_cfg.json'), (this.mToggleBean = null), (this.isInited = !1);
                        }
                        return (
                            (n.ins = function () {
                                return this.mChecker || (this.mChecker = new n()), this.mChecker;
                            }),
                            (n.prototype.init = function (e) {
                                this.downLoad(e, e);
                            }),
                            (n.prototype.getToggleBean = function () {
                                return this.mToggleBean;
                            }),
                            (n.prototype.getToggle = function (e) {
                                if (this.mToggleBean && this.mToggleBean.toggle) {
                                    c.default.i(n.TAG + ' getToggle. toggleKey = ' + e + ',this.mToggleBean.toggle = ', this.mToggleBean.toggle);
                                    for (var t = 0, i = this.mToggleBean.toggle; t < i.length; t++) {
                                        var o = i[t];
                                        if (o.toggleKey == e) return o;
                                    }
                                }
                                return null;
                            }),
                            (n.prototype.getToggleStatus = function (e, t, i) {
                                var o = n.ins().getToggle(e);
                                if (o) {
                                    if (o.platform.includes('all')) return this.handleStatus(o);
                                    if (o.platform.includes('qq')) return l.default.isQQ() ? this.handleStatus(o) : i;
                                    if (o.platform.includes('wx')) return l.default.isWeiXin() ? this.handleStatus(o) : i;
                                }
                                return t;
                            }),
                            (n.prototype.handleStatus = function (e) {
                                var t = o.MGUser.getCurrentServerTime();
                                return t >= e.startTime && t <= e.endTime ? e.curStatus : e.otherStatus;
                            }),
                            (n.prototype.downLoad = function (t, i) {
                                var o = this;
                                this.isInited
                                    ? t && t()
                                    : r.default.Ins().downloadFile(
                                          this.mToggleUrl,
                                          function (e) {
                                              s.MGBasic.readFile({
                                                  filePath: e,
                                                  encoding: 'utf8',
                                                  success: function (e) {
                                                      c.default.i(n.TAG + ' readFile success data = ', e), (o.mToggleBean = a.default.parseFromJson(e)), (o.isInited = !0), t();
                                                  },
                                                  fail: function () {
                                                      i(), c.default.e(n.TAG + ' readFile failed.' + o.mToggleUrl);
                                                  },
                                              });
                                          },
                                          function () {
                                              c.default.e(n.TAG + ' download failed.' + o.mToggleUrl), i();
                                          },
                                          0,
                                          !1,
                                      );
                            }),
                            (n.TAG = 'ToggleChecker ====>'),
                            (n.mChecker = null),
                            n
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../../modules/MGBasic/scripts/Logic/MGBasicEntrance': 'MGBasicEntrance',
                '../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../LogicPlatform/PlatformProxy': 'PlatformProxy',
                '../base/Log': 'Log',
                '../util/PU': 'PU',
                './ToggleBean': 'ToggleBean',
            },
        ],
        TouchHandler: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '76be2wjCUdCi4gBqJsQidt7', 'TouchHandler'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var l = e('../util/Utility'),
                    u = e('../base/G'),
                    a = e('../LogicPlatform/PlatformProxy'),
                    o = e('../base/Log'),
                    n = (function () {
                        function e(e, t) {
                            (this.canvas = null), (this.pos = null), (this.ratio = 0), (this.listener = null), (this._mousePressed = !1), (this._latestTouchs = null), (this.bindStart = null), (this.bindMove = null), (this.bindEnd = null), (this.enabled = !0), (this.rootNode = null), (this.platform = 0), (this.platform = cc.sys.platform), (this.rootNode = e), (this.canvas = cc.game.canvas), (this.pos = this.getCanvasPosition(this.canvas)), (this.ratio = cc.view.getDevicePixelRatio()), (this.listener = t), cc.sys.isMobile ? (this.platform == cc.sys.QQ_PLAY ? ((this.bindStart = this.onCCTouchStart.bind(this)), (this.bindMove = this.onCCTouchMove.bind(this)), (this.bindEnd = this.onCCTouchEnd.bind(this))) : ((this.bindStart = this.onTouchStart.bind(this)), (this.bindMove = this.onTouchMove.bind(this)), (this.bindEnd = this.onTouchEnd.bind(this)))) : ((this.bindStart = this.onCCMouseDown.bind(this)), (this.bindMove = this.onCCMouseMove.bind(this)), (this.bindEnd = this.onCCMouseEUp.bind(this)));
                        }
                        return (
                            (e.prototype.enable = function (e) {
                                cc.sys.isMobile ? (this.enabled = e) : (this.enabled = !0);
                            }),
                            (e.prototype.isEnabled = function () {
                                return this.enabled;
                            }),
                            (e.prototype.updateRatio = function () {
                                this.ratio = cc.view.getDevicePixelRatio();
                            }),
                            (e.prototype.registerListener = function () {
                                cc.sys.isMobile ? (this.platform == cc.sys.QQ_PLAY ? (this.rootNode.on(cc.Node.EventType.TOUCH_START, this.bindStart), this.rootNode.on(cc.Node.EventType.TOUCH_MOVE, this.bindMove), this.rootNode.on(cc.Node.EventType.TOUCH_END, this.bindEnd)) : (this.canvas.addEventListener('touchstart', this.bindStart), this.canvas.addEventListener('touchmove', this.bindMove), this.canvas.addEventListener('touchend', this.bindEnd))) : (this.rootNode.on(cc.Node.EventType.MOUSE_DOWN, this.bindStart), this.rootNode.on(cc.Node.EventType.MOUSE_MOVE, this.bindMove), this.rootNode.on(cc.Node.EventType.MOUSE_UP, this.bindEnd)), this.rootNode.on('cm_touchstart', this.onCMTouchStart, this), this.rootNode.on('cm_touchend', this.onCMTouchEnd, this);
                            }),
                            (e.prototype.unregisterListener = function () {
                                cc.sys.isMobile ? (this.platform == cc.sys.QQ_PLAY ? (this.rootNode.off(cc.Node.EventType.TOUCH_START, this.bindStart), this.rootNode.off(cc.Node.EventType.TOUCH_MOVE, this.bindMove), this.rootNode.off(cc.Node.EventType.TOUCH_END, this.bindEnd)) : (this.canvas.removeEventListener('touchstart', this.bindStart), this.canvas.removeEventListener('touchmove', this.bindMove), this.canvas.removeEventListener('touchend', this.bindEnd))) : (this.rootNode.off(cc.Node.EventType.MOUSE_DOWN, this.bindStart), this.rootNode.off(cc.Node.EventType.MOUSE_MOVE, this.bindMove), this.rootNode.off(cc.Node.EventType.MOUSE_UP, this.bindEnd)), this.rootNode.off('cm_touchstart', this.onCMTouchStart, this), this.rootNode.off('cm_touchend', this.onCMTouchEnd, this);
                            }),
                            (e.prototype.onCMTouchStart = function (e) {
                                var t = this.getCMTouchesByCMTouchEvent(e.detail);
                                this.listener && this.listener.onTouchStart(t);
                            }),
                            (e.prototype.onCMTouchEnd = function (e) {
                                var t = this.getCMTouchesByCMTouchEvent(e.detail);
                                this.listener && this.listener.onTouchEnd(t);
                            }),
                            (e.prototype.onCCTouchStart = function (e) {
                                if (this.enabled) {
                                    o.default.l('onCCTouchStart enable');
                                    var t = this.getCCTouchesByTouchEvent(e);
                                    this.listener && this.listener.onTouchStart(t), (this._latestTouchs = t), e.stopPropagation();
                                } else o.default.l('onCCTouchStart disable');
                            }),
                            (e.prototype.onCCTouchMove = function (e) {
                                if (this.enabled) {
                                    var t = this.getCCTouchesByTouchEvent(e);
                                    this.listener && this.listener.onTouchMove(t), e.stopPropagation();
                                }
                            }),
                            (e.prototype.onCCTouchEnd = function (e) {
                                if (this.enabled) {
                                    var t = this.getCCTouchesByTouchEvent(e);
                                    this.listener && this.listener.onTouchEnd(t), (this._latestTouchs = null), e.stopPropagation();
                                }
                            }),
                            (e.prototype.onCCMouseDown = function (e) {
                                if (this.enabled) {
                                    this._mousePressed = !0;
                                    var t = this.getCCTouchesByMouseEvent(e);
                                    this.listener && this.listener.onTouchStart(t), (this._latestTouchs = t), e.stopPropagation();
                                }
                            }),
                            (e.prototype.onCCMouseMove = function (e) {
                                if (this.enabled && this._mousePressed) {
                                    var t = this.getCCTouchesByMouseEvent(e);
                                    this.listener && this.listener.onTouchMove(t), e.stopPropagation();
                                }
                            }),
                            (e.prototype.onCCMouseEUp = function (e) {
                                if (this.enabled) {
                                    this._mousePressed = !1;
                                    var t = this.getCCTouchesByMouseEvent(e);
                                    this.listener && this.listener.onTouchEnd(t), (this._latestTouchs = null), e.stopPropagation();
                                }
                            }),
                            (e.prototype.onTouchStart = function (e) {
                                if (this.enabled) {
                                    var t = this.getTouchesByTouchEvent(e);
                                    this.listener && this.listener.onTouchStart(t), (this._latestTouchs = t), e.preventDefault(), e.stopPropagation();
                                }
                            }),
                            (e.prototype.onTouchMove = function (e) {
                                if (this.enabled) {
                                    var t = this.getTouchesByTouchEvent(e);
                                    this.listener && this.listener.onTouchMove(t), e.preventDefault(), e.stopPropagation();
                                }
                            }),
                            (e.prototype.onTouchEnd = function (e) {
                                if (this.enabled) {
                                    var t = this.getTouchesByTouchEvent(e);
                                    this.listener && this.listener.onTouchEnd(t), (this._latestTouchs = null), e.preventDefault(), e.stopPropagation();
                                }
                            }),
                            (e.prototype.render = function (e) {
                                var t = this._latestTouchs;
                                if (null !== t) {
                                    e.fillStyle = 'red';
                                    for (var i = 0; i < t.length; i++) {
                                        var o = t[i].clientX * u.G.Ap.config.presentScale,
                                            n = a.default.Ins().getCanvasHeightByContext(e) - t[i].clientY * u.G.Ap.config.presentScale;
                                        e.beginPath(), e.arc(o, n, 10 * this.ratio, 0, 2 * Math.PI, !1), e.closePath(), e.fill();
                                    }
                                }
                            }),
                            (e.prototype.getCMTouchesByCMTouchEvent = function (e) {
                                for (var t, i, o = [], n = e.length, a = 0; a < n; a++) {
                                    var r = e[a];
                                    if (r) {
                                        var s = r.id;
                                        (t = r.x), (i = r.y), o.push(new l.Utility.TouchItem(s, t, i));
                                    }
                                }
                                return o;
                            }),
                            (e.prototype.getCCTouchesByTouchEvent = function (e) {
                                for (var t, i, o = [], n = e.getTouches(), a = n.length, r = 0; r < a; r++) {
                                    var s = n[r];
                                    if (s) {
                                        var c = s._id;
                                        (t = s._point.x), (i = s._point.y), o.push(new l.Utility.TouchItem(c, t, i));
                                    }
                                }
                                return o;
                            }),
                            (e.prototype.getCCTouchesByMouseEvent = function (e) {
                                var t = [],
                                    i = e.getLocation();
                                return i && t.push(new l.Utility.TouchItem(1, i.x, i.y)), t;
                            }),
                            (e.prototype.getTouchesByTouchEvent = function (e) {
                                for (var t, i, o = this.ratio, n = [], a = e.changedTouches.length, r = 0; r < a; r++) {
                                    var s = e.changedTouches[r];
                                    if (s) {
                                        var c = null != s.identifier ? s.identifier : 1;
                                        cc.sys.BROWSER_TYPE_FIREFOX === cc.sys.browserType ? ((t = o * s.pageX), (i = o * (window.innerHeight - s.pageY))) : ((t = o * s.clientX), (i = o * (window.innerHeight - s.clientY))), n.push(new l.Utility.TouchItem(c, t / u.G.Ap.config.presentScale, i / u.G.Ap.config.presentScale));
                                    }
                                }
                                return n;
                            }),
                            (e.prototype.getCanvasPosition = function (e) {
                                if (cc.sys.platform === cc.sys.WECHAT_GAME || cc.sys.platform === cc.sys.QQ_PLAY)
                                    return {
                                        left: 0,
                                        top: 0,
                                        width: window.innerWidth,
                                        height: window.innerHeight,
                                    };
                                var t = document.documentElement,
                                    i = window.pageXOffset - t.clientLeft,
                                    o = window.pageYOffset - t.clientTop;
                                if ('function' == typeof e.getBoundingClientRect) {
                                    var n = e.getBoundingClientRect();
                                    return {
                                        left: n.left + i,
                                        top: n.top + o,
                                        width: n.width,
                                        height: n.height,
                                    };
                                }
                                return e instanceof HTMLCanvasElement
                                    ? {
                                          left: i,
                                          top: o,
                                          width: e.width,
                                          height: e.height,
                                      }
                                    : {
                                          left: i,
                                          top: o,
                                          width: parseInt(e.style.width),
                                          height: parseInt(e.style.height),
                                      };
                            }),
                            e
                        );
                    })();
                (i.default = n), cc._RF.pop();
            },
            {
                '../LogicPlatform/PlatformProxy': 'PlatformProxy',
                '../base/G': 'G',
                '../base/Log': 'Log',
                '../util/Utility': 'Utility',
            },
        ],
        TrialGameScene: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'c7365+AD45NLb6BYjAioli0', 'TrialGameScene'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./GameScene'),
                    n = e('../base/G'),
                    a = e('./element/loader/GameSceneFrameLoader'),
                    r = e('./element/loader/BlockSkinFrameLoader'),
                    s = e('../util/Utility'),
                    c = e('./ctrl/GameStageTrial'),
                    l = e('./view/GameStageNodeView'),
                    u = e('../business/Logic/I18nManager'),
                    d = e('../business/Logic/NotifyEvent'),
                    p = e('../business/Logic/EventBus'),
                    h = (function (i) {
                        function e(e, t) {
                            return i.call(this, e, t) || this;
                        }
                        return (
                            __extends(e, i),
                            (e.prototype.initilize = function () {
                                if (((this.effectiveSkin = n.G.Ap.skinMgr.getTrialSkinItem()), this.effectiveSkin || (this.effectiveSkin = n.G.Ap.skinMgr.getCurrentSkinItem()), (this.atlasGameObject = a.default.getInstance().getAtlas()), this.effectiveSkin)) {
                                    var e = this.effectiveSkin.getSkinObject(),
                                        t = e.skinRaw.getBlockAtlasName();
                                    r.default.getInstance().setAtlas(e.atlasMap[t]), (n.G.Ap.config.longBlockDotAnimEnable = e.skinRaw.getDesign().longBlockDotAnimaion);
                                }
                            }),
                            (e.prototype.getEnableModuleList = function () {
                                return null;
                            }),
                            (e.prototype.updateUI = function () {
                                if (this.effectiveSkin) {
                                    var e = '片段试玩',
                                        t = '皮肤';
                                    u.default.getInstance().isEnglish() && ((e = 'Section trial'), (t = ' Skin')), this.banner.show(this.effectiveSkin.getProperty().displayName + t, e);
                                }
                            }),
                            (e.prototype.createAnimCtrl = function () {}),
                            (e.prototype.initGame = function () {
                                if (this.music) {
                                    this.getGameRegion();
                                    var e = this.getGameNode(),
                                        t = new l.default(e.getChildByTag(s.Utility.GAMESTAGE.MUSIC));
                                    (this.firstStage = new c.default(this, t)), this.firstStage.init(152), this.firstStage.activeNode(!0), (this.currentStage = this.firstStage), this.startGameStageSwitch(s.Utility.GAMESTAGE.MUSIC);
                                }
                            }),
                            (e.prototype.finishGameStage = function (e) {
                                var t = this;
                                n.G.Ap.state.pause(),
                                    this.setSheduleOnce(function () {
                                        t.returnToHomeScene();
                                    }, 1);
                            }),
                            (e.prototype.attainCrown = function () {}),
                            (e.prototype.attainMoney = function (e) {}),
                            (e.prototype.attainGift = function (e) {}),
                            (e.prototype.gameOver = function () {
                                var e = this;
                                n.G.Ap.state.pause(),
                                    this.setSheduleOnce(function () {
                                        e.returnToHomeScene();
                                    }, 1);
                            }),
                            (e.prototype.returnToHomeScene = function () {
                                n.G.skinTryData && (n.G.skinTryData.trySkinFinish = !0), n.G.Ap.presenter.enterScene('MainScene'), p.default.fire(d.default.PLAY_TRIAL_FINISHED);
                            }),
                            e
                        );
                    })(o.default);
                (i.default = h), cc._RF.pop();
            },
            {
                '../base/G': 'G',
                '../business/Logic/EventBus': 'EventBus',
                '../business/Logic/I18nManager': 'I18nManager',
                '../business/Logic/NotifyEvent': 'NotifyEvent',
                '../util/Utility': 'Utility',
                './GameScene': 'GameScene',
                './ctrl/GameStageTrial': 'GameStageTrial',
                './element/loader/BlockSkinFrameLoader': 'BlockSkinFrameLoader',
                './element/loader/GameSceneFrameLoader': 'GameSceneFrameLoader',
                './view/GameStageNodeView': 'GameStageNodeView',
            },
        ],
        TrialItemPrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '53478cxMgVNmItPfbJVtjIE', 'TrialItemPrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('../BasicTouchEvent'),
                    o = cc._decorator,
                    a = o.ccclass,
                    r = o.property,
                    s = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mTitleTxt = null), (e.mDescTxt = null), (e.mRewardTxt = null), (e.mIconSprite = null), (e.mBtnTrialPlay = null), (e.mRewardLayout = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.start = function () {}),
                            (e.prototype.initItem = function (e, t) {
                                if (e && e.mRawData) {
                                    this.mTitleTxt && e.mRawData.title && (this.mTitleTxt.string = e.mRawData.title), this.mDescTxt && e.mRawData.describe && (this.mDescTxt.string = e.mRawData.describe), this.mRewardTxt && e.mRawData.describe2 && (this.mRewardTxt.string = e.mRawData.describe2);
                                    var i = this,
                                        o = new n.default(function () {
                                            t && t(e, i.isNeedAddReward()), i.initUI(e);
                                        });
                                    this.mBtnTrialPlay && this.mBtnTrialPlay.node && this.mBtnTrialPlay.node.on(cc.Node.EventType.TOUCH_END, o.click, o),
                                        this.mIconSprite &&
                                            e.mRawData.iconUrl &&
                                            cc.loader.load(e.mRawData.iconUrl, function (e, t) {
                                                !e && t && cc.isValid(i.mIconSprite, !0) && (i.mIconSprite.spriteFrame = new cc.SpriteFrame(t));
                                            }),
                                        this.initUI(e);
                                }
                            }),
                            (e.prototype.isNeedAddReward = function () {
                                var e = this.mBtnTrialPlay.node.getChildByName('Label');
                                if (!e) return !1;
                                var t = e.getComponent(cc.Label);
                                return !(!t || '试玩' !== t.string);
                            }),
                            (e.prototype.initUI = function (e) {
                                if (e && (this.mRewardLayout && this.mRewardLayout.node && (this.mRewardLayout.node.active = e.isToadyFristTrial()), this.mBtnTrialPlay && this.mBtnTrialPlay.node)) {
                                    var t = this.mBtnTrialPlay.node.getChildByName('Label');
                                    if (!t) return;
                                    var i = t.getComponent(cc.Label);
                                    i && (i.string = e.isToadyFristTrial() ? '试玩' : '去玩'), (this.mBtnTrialPlay.node.y += e.isToadyFristTrial() ? 0 : 10);
                                }
                            }),
                            __decorate([r(cc.Label)], e.prototype, 'mTitleTxt', void 0),
                            __decorate([r(cc.Label)], e.prototype, 'mDescTxt', void 0),
                            __decorate([r(cc.Label)], e.prototype, 'mRewardTxt', void 0),
                            __decorate([r(cc.Sprite)], e.prototype, 'mIconSprite', void 0),
                            __decorate([r(cc.Button)], e.prototype, 'mBtnTrialPlay', void 0),
                            __decorate([r(cc.Layout)], e.prototype, 'mRewardLayout', void 0),
                            (e = __decorate([a], e))
                        );
                    })(cc.Component);
                (i.default = s), cc._RF.pop();
            },
            {
                '../BasicTouchEvent': 'BasicTouchEvent',
            },
        ],
        TrialPrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '4a6e9ENzutPRpr80JbxSrCJ', 'TrialPrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./MainpageBaseComponent'),
                    l = e('./TrialItemPrefab'),
                    n = e('./RcmdGameDataAdapter'),
                    u = e('./../PrefabMgr'),
                    a = e('./../ToastPrefab'),
                    r = cc._decorator,
                    s = r.ccclass,
                    c = r.property,
                    d = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mBkSprite = null), (e.mScrollView = null), (e.mTitleSprite = null), (e.mAdapter = null), (e.mPosId = '1001131'), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.onLoad = function () {
                                this.init();
                            }),
                            (e.prototype.init = function () {
                                this.mAdapter || (this.mAdapter = new n.default()), this.mAdapter.getRcmdGameData(this.mPosId, this.initScrollView.bind(this)), this.mTitleSprite && this.mTitleSprite.node && (this.mTitleSprite.node.active = !1);
                            }),
                            (e.prototype.initScrollView = function (r) {
                                var s = this;
                                if (r && !(r.length <= 0)) {
                                    var c = r.length;
                                    if (this.mScrollView && this.mScrollView.content)
                                        for (
                                            var e = function (a) {
                                                    u.default.load('prefab/mainpage/TrialItemPrefab', function (e, t) {
                                                        if (t && cc.isValid(s, !0)) {
                                                            s.mScrollView.content.height = (t.height + 5) * c - 5;
                                                            var i = t.getComponent(l.default),
                                                                o = -a * (t.height + 5);
                                                            t.setPosition(0, o);
                                                            var n = r[a];
                                                            i && i.initItem(n, s.onItemClick.bind(s)), s.mScrollView.content.addChild(t);
                                                        }
                                                    });
                                                },
                                                t = 0;
                                            t < c;
                                            t++
                                        )
                                            e(t);
                                }
                            }),
                            (e.prototype.onItemClick = function (e, t) {
                                this.mAdapter && e && (this.mAdapter.jumpTo(e, t), t && this.showToastTips(e.getRewardText()));
                            }),
                            (e.prototype.showToastTips = function (o) {
                                var n = this;
                                u.default.load('prefab/ToastPrefab', function (e, t) {
                                    if (t) {
                                        var i = t.getComponent(a.default);
                                        i.showTips(o, function () {
                                            t.destroy();
                                        }),
                                            i.setLong(!1),
                                            n.node.addChild(t);
                                    }
                                });
                            }),
                            __decorate([c(cc.Sprite)], e.prototype, 'mBkSprite', void 0),
                            __decorate([c(cc.ScrollView)], e.prototype, 'mScrollView', void 0),
                            __decorate([c(cc.Sprite)], e.prototype, 'mTitleSprite', void 0),
                            (e = __decorate([s], e))
                        );
                    })(o.default);
                (i.default = d), cc._RF.pop();
            },
            {
                './../PrefabMgr': 'PrefabMgr',
                './../ToastPrefab': 'ToastPrefab',
                './MainpageBaseComponent': 'MainpageBaseComponent',
                './RcmdGameDataAdapter': 'RcmdGameDataAdapter',
                './TrialItemPrefab': 'TrialItemPrefab',
            },
        ],
        TrialSongGameScene: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'd8ac7NwpPZEvZgUvbHMgO4/', 'TrialSongGameScene'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./GameScene'),
                    n = e('../base/G'),
                    a = e('../util/Utility'),
                    r = e('../business/Logic/LangMgr'),
                    s = e('./ctrl/GameStageTrialSong'),
                    c = e('./view/GameStageNodeView'),
                    l = e('../business/Logic/I18nManager'),
                    u = (function (i) {
                        function e(e, t) {
                            return i.call(this, e, t) || this;
                        }
                        return (
                            __extends(e, i),
                            (e.prototype.getEnableModuleList = function () {
                                return null;
                            }),
                            (e.prototype.updateUI = function () {
                                if (this.effectiveSkin) {
                                    var e = '片段试玩';
                                    l.default.getInstance().isEnglish() && (e = 'Section trial');
                                    var t = r.default.gIns().getLanguageByKey(this.music.getName());
                                    this.banner.show(t, e);
                                }
                            }),
                            (e.prototype.createAnimCtrl = function () {}),
                            (e.prototype.initGame = function () {
                                if (this.music) {
                                    this.getGameRegion();
                                    var e = this.getGameNode(),
                                        t = new c.default(e.getChildByTag(a.Utility.GAMESTAGE.MUSIC));
                                    (this.firstStage = new s.default(this, t)), this.firstStage.init(152), this.firstStage.activeNode(!0), (this.currentStage = this.firstStage), this.startGameStageSwitch(a.Utility.GAMESTAGE.MUSIC);
                                }
                            }),
                            (e.prototype.finishGameStage = function (e) {
                                var t = this;
                                n.G.Ap.state.pause(),
                                    this.setSheduleOnce(function () {
                                        t.returnToHomeScene();
                                    }, 1);
                            }),
                            (e.prototype.attainCrown = function () {}),
                            (e.prototype.attainMoney = function (e) {}),
                            (e.prototype.attainGift = function (e) {}),
                            (e.prototype.gameOver = function () {
                                var e = this;
                                n.G.Ap.state.pause(),
                                    this.setSheduleOnce(function () {
                                        e.returnToHomeScene();
                                    }, 1);
                            }),
                            (e.prototype.returnToHomeScene = function () {
                                n.G.songTryData && (n.G.songTryData.songTryFinish = !0), n.G.Ap.presenter.enterScene('MainScene');
                            }),
                            e
                        );
                    })(o.default);
                (i.default = u), cc._RF.pop();
            },
            {
                '../base/G': 'G',
                '../business/Logic/I18nManager': 'I18nManager',
                '../business/Logic/LangMgr': 'LangMgr',
                '../util/Utility': 'Utility',
                './GameScene': 'GameScene',
                './ctrl/GameStageTrialSong': 'GameStageTrialSong',
                './view/GameStageNodeView': 'GameStageNodeView',
            },
        ],
        TryPianoGameScene: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '95e0dOjKLxNg5+QWMnpgFO1', 'TryPianoGameScene'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./GameScene'),
                    n = e('../base/G'),
                    a = e('../util/Utility'),
                    r = e('./ctrl/GameStageTrial'),
                    s = e('./view/GameStageNodeView'),
                    c = e('../business/Logic/I18nManager'),
                    l = (function (i) {
                        function e(e, t) {
                            return i.call(this, e, t) || this;
                        }
                        return (
                            __extends(e, i),
                            (e.prototype.getEnableModuleList = function () {
                                return null;
                            }),
                            (e.prototype.updateUI = function () {
                                if (this.effectiveSkin) {
                                    c.default.getInstance().isEnglish() && 'Section trial';
                                }
                            }),
                            (e.prototype.createAnimCtrl = function () {}),
                            (e.prototype.initGame = function () {
                                if (this.music) {
                                    this.getGameRegion();
                                    var e = this.getGameNode(),
                                        t = new s.default(e.getChildByTag(a.Utility.GAMESTAGE.MUSIC));
                                    (this.firstStage = new r.default(this, t)), this.firstStage.init(152), this.firstStage.activeNode(!0), (this.currentStage = this.firstStage), this.startGameStageSwitch(a.Utility.GAMESTAGE.MUSIC);
                                }
                            }),
                            (e.prototype.finishGameStage = function (e) {
                                var t = this;
                                n.G.Ap.state.pause(),
                                    this.setSheduleOnce(function () {
                                        t.returnToHomeScene();
                                    }, 1);
                            }),
                            (e.prototype.attainCrown = function () {}),
                            (e.prototype.attainMoney = function (e) {}),
                            (e.prototype.attainGift = function (e) {}),
                            (e.prototype.gameOver = function () {
                                var e = this;
                                n.G.Ap.state.pause(),
                                    this.setSheduleOnce(function () {
                                        e.returnToHomeScene();
                                    }, 1);
                            }),
                            (e.prototype.returnToHomeScene = function () {
                                n.G.tryData && (n.G.tryData.tryFinish = !0), n.G.Ap.presenter.enterScene('MainScene');
                            }),
                            e
                        );
                    })(o.default);
                (i.default = l), cc._RF.pop();
            },
            {
                '../base/G': 'G',
                '../business/Logic/I18nManager': 'I18nManager',
                '../util/Utility': 'Utility',
                './GameScene': 'GameScene',
                './ctrl/GameStageTrial': 'GameStageTrial',
                './view/GameStageNodeView': 'GameStageNodeView',
            },
        ],
        Tween: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'a2d528T8ZlJeb2JtHLQfGA+', 'Tween'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {}
                    return (
                        (e.quadEaseIn = function (e, t, i, o) {
                            return i * (e /= o) * e + t;
                        }),
                        (e.quadLinear = function (e, t, i, o) {
                            return (i * e) / o + t;
                        }),
                        e
                    );
                })();
                (i.mTween = o), cc._RF.pop();
            },
            {},
        ],
        TwoBtnDIalogPrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '70dd7cgAJ5IGaK98xPTJiQ+', 'TwoBtnDIalogPrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./BasicTouchEvent'),
                    n = e('../../../util/StringUtil'),
                    a = cc._decorator,
                    r = a.ccclass,
                    s = a.property,
                    c = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.onLoad = function () {
                                var e = this;
                                (this.mCancelBtnCallback = new o.default(function () {
                                    e.mCancelCallback && e.mCancelCallback(), e.node.destroy();
                                })),
                                    this.mCancelBtn.node.on(cc.Node.EventType.TOUCH_END, this.mCancelBtnCallback.click, this.mCancelBtnCallback),
                                    (this.mConfirmBtnCallback = new o.default(function () {
                                        e.mConfirmCallback && e.mConfirmCallback(), e.node.destroy();
                                    })),
                                    this.mConfirmBtn.node.on(cc.Node.EventType.TOUCH_END, this.mConfirmBtnCallback.click, this.mConfirmBtnCallback),
                                    this.node.on(
                                        cc.Node.EventType.TOUCH_END,
                                        function (e) {
                                            e.stopPropagation();
                                        },
                                        this,
                                    );
                            }),
                            (t.prototype.setCancelCallback = function (e, t) {
                                return (this.mCancelCallback = e), n.StringUtil.isEmpty(t) || (this.mCancelBtn.getComponentInChildren(cc.Label).string = t), this;
                            }),
                            (t.prototype.start = function () {
                                this.mContentNode.getComponent(cc.Animation).play('gold_pop_out');
                            }),
                            (t.prototype.setContent = function (e) {
                                return (this.mContentLabel.string = e), this;
                            }),
                            (t.prototype.setConfirmCallback = function (e, t) {
                                return (this.mConfirmCallback = e), n.StringUtil.isEmpty(t) || (this.mConfirmBtn.getComponentInChildren(cc.Label).string = t), this;
                            }),
                            (t.prototype.setTitle = function (e) {
                                return (this.mTileLabel.string = e), this;
                            }),
                            __decorate([s(cc.Label)], t.prototype, 'mTileLabel', void 0),
                            __decorate([s(cc.Label)], t.prototype, 'mContentLabel', void 0),
                            __decorate([s(cc.Button)], t.prototype, 'mCancelBtn', void 0),
                            __decorate([s(cc.Button)], t.prototype, 'mConfirmBtn', void 0),
                            __decorate([s(cc.Node)], t.prototype, 'mContentNode', void 0),
                            (t = __decorate([r], t))
                        );
                    })(cc.Component);
                (i.default = c), cc._RF.pop();
            },
            {
                '../../../util/StringUtil': 'StringUtil',
                './BasicTouchEvent': 'BasicTouchEvent',
            },
        ],
        TypeDefinition: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'a1c122P5FdKWZEZhPfYtCcx', 'TypeDefinition'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {}
                    return (e.PLATFORM_UNKNOWN = -1), (e.PLATFORM_WEB = 0), (e.PLATFORM_WECHAT = 1), (e.PLATFORM_FACEBOOK = 2), (e.PLATFORM_H5SDK = 3), (e.PLATFORM_QQPLAY = 4), (e.PLATFORM_GAMEHALL = 5), (e.PLATFORM_CMPLAY = 7), e;
                })();
                i.PlatformType = o;
                var n = (function () {
                    function e() {}
                    return (
                        (e.prototype.toString = function () {
                            return this.userBasicInfo.toString() + ',' + this.userLoginInfo.toString();
                        }),
                        e
                    );
                })();
                i.UserInfo = n;
                var a = (function () {
                    function e() {}
                    return (
                        (e.prototype.toString = function () {
                            return 'nickName:' + this.nickName + ', avatarUrl:' + this.avatarUrl;
                        }),
                        e
                    );
                })();
                i.UserBasicInfo = a;
                var r = (function () {
                    function e() {}
                    return (
                        (e.prototype.toString = function () {
                            return 'playerId:' + this.playerId + ', token:' + this.token + ',sid:' + this.sid + ',isFirstLogin:' + this.isNewUser;
                        }),
                        e
                    );
                })();
                i.UserLoginInfo = r;
                var s = function () {};
                (i.LaunchOption = s), cc._RF.pop();
            },
            {},
        ],
        UICache: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'a60abg765VCPKqUkplfp67w', 'UICache'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o,
                    n = e('./GameEntranceScene');
                ((o = i.UICache || (i.UICache = {})).musicListView = null),
                    (o.hideMusicView = function () {
                        if (o.musicListView) {
                            o.musicListView.active && (o.musicListView.active = !1), (o.musicListView.x = -1e4);
                            var e = o.musicListView.getChildByName('MainPagePrefab').getComponent(n.default);
                            e.onHide(), e.onStop();
                        }
                    }),
                    (o.showMusicView = function () {
                        if (o.musicListView) {
                            o.musicListView.active || (o.musicListView.active = !0), (o.musicListView.x = 360);
                            var e = o.musicListView.getChildByName('MainPagePrefab').getComponent(n.default);
                            e.onStart(), e.onShow();
                        }
                    }),
                    cc._RF.pop();
            },
            {
                './GameEntranceScene': 'GameEntranceScene',
            },
        ],
        UiPropertyIconPanel: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'ae1abShewFHRaGOMmaFqKKn', 'UiPropertyIconPanel'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var r = e('../MUI/MUINode'),
                    s = e('../MUI/MUISprite'),
                    c = e('../element/loader/GameSceneFrameLoader'),
                    o = e('../../property/PropertyDefines'),
                    n = (function () {
                        function e() {
                            (this.avoid = new a()), (this.conversion = new a()), (this.fanatical = new a()), (this.allPropertes = {});
                        }
                        return (
                            (e.prototype.create = function () {
                                (this.root = new r.default('PropertyIcons')), this.avoid.create('propertyicon29', 'propertyicon29_active'), this.root.addChild(this.avoid.root), (this.allPropertes[o.PROPERTYTYPE.GAME_AVOID] = this.avoid), this.conversion.create('propertyicon30', 'propertyicon30_active'), this.root.addChild(this.conversion.root), (this.allPropertes[o.PROPERTYTYPE.GAME_CONVERSION] = this.conversion), this.fanatical.create('propertyicon31', 'propertyicon31_active'), this.root.addChild(this.fanatical.root), (this.allPropertes[o.PROPERTYTYPE.GAME_FANATICAL] = this.fanatical), this.rearrange();
                            }),
                            (e.prototype.rearrange = function () {
                                var t = 0,
                                    e = function (e) {
                                        e.setPosition(0, 0 + 78 * t * -1), 1 == e.getVisible() && ++t;
                                    };
                                e(this.avoid.root), e(this.conversion.root), e(this.fanatical.root);
                            }),
                            (e.prototype.getProperty = function (e) {
                                return this.allPropertes[e];
                            }),
                            e
                        );
                    })();
                i.UiPropertyIconPanel = n;
                var a = (function () {
                        function e() {}
                        return (
                            (e.prototype.create = function (e, t) {
                                (this.root = new r.default()), this.root.setVisible(!1);
                                var i = c.default.getInstance().getAtlas(),
                                    o = null,
                                    n = new cc.Vec2(62, 62),
                                    a = new cc.Vec2(80, 80);
                                (o = new s.default('icon')).setVisible(!0), o.setOpacity(255), (o.imageData = i), (o.imageItem = i.getItem(e)), o.setContentSize(n.x, n.y), o.setPosition(0, 0), l.resetPositionByAnchor(o, n), this.root.addChild(o), (this.icon = o), (o = new s.default('active')).setVisible(!1), o.setOpacity(255), (o.imageData = i), (o.imageItem = i.getItem(t)), o.setContentSize(a.x, a.y), o.setPosition(0, 0), l.resetPositionByAnchor(o, a), this.root.addChild(o), (this.active = o);
                            }),
                            (e.prototype.showActive = function () {
                                this.icon.setVisible(!0), this.active.setVisible(!0);
                            }),
                            (e.prototype.showNormal = function () {
                                this.icon.setVisible(!0), this.active.setVisible(!1);
                            }),
                            e
                        );
                    })(),
                    l = (function () {
                        function e() {}
                        return (
                            (e.resetPositionByAnchor = function (e, t) {
                                var i = e.getPosition();
                                (i.x += -0.5 * t.x), (i.y += -0.5 * t.y), e.setPosition(i.x, i.y);
                            }),
                            e
                        );
                    })();
                cc._RF.pop();
            },
            {
                '../../property/PropertyDefines': 'PropertyDefines',
                '../MUI/MUINode': 'MUINode',
                '../MUI/MUISprite': 'MUISprite',
                '../element/loader/GameSceneFrameLoader': 'GameSceneFrameLoader',
            },
        ],
        UnlockConfirmDialogPrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'c3f72Yf7ZVMCaNvJwd1hvcn', 'UnlockConfirmDialogPrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../BasicTouchEvent'),
                    n = e('../../../keypad/KeypadNavigator'),
                    a = cc._decorator,
                    r = a.ccclass,
                    s = a.property,
                    c = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.onLoad = function () {
                                var e = this;
                                (this.mCancelBtnCallback = new o.default(function () {
                                    e.mCloseCallback && e.mCloseCallback(), e.node.destroy();
                                })),
                                    this.mCancelBtn.node.on(cc.Node.EventType.TOUCH_END, this.mCancelBtnCallback.click, this.mCancelBtnCallback),
                                    (this.mConfirmBtnCallback = new o.default(function () {
                                        e.mConfirmCallback && e.mConfirmCallback(), e.node.destroy();
                                    })),
                                    this.mConfirmBtn.node.on(cc.Node.EventType.TOUCH_END, this.mConfirmBtnCallback.click, this.mConfirmBtnCallback),
                                    this.node.on(
                                        cc.Node.EventType.TOUCH_END,
                                        function (e) {
                                            e.stopPropagation();
                                        },
                                        this,
                                    ),
                                    n.default.getInstance().pushDialog(this.node);
                            }),
                            (t.prototype.onDestroy = function () {
                                n.default.getInstance().popDialog(this.node);
                            }),
                            (t.prototype.setCloseCallback = function (e) {
                                this.mCloseCallback = e;
                            }),
                            (t.prototype.start = function () {
                                this.mContentNode.getComponent(cc.Animation).play('gold_pop_out');
                            }),
                            (t.prototype.setContent = function (e) {
                                this.mContentLabel.string = e;
                            }),
                            (t.prototype.setConfirmCallback = function (e) {
                                this.mConfirmCallback = e;
                            }),
                            __decorate([s(cc.Label)], t.prototype, 'mContentLabel', void 0),
                            __decorate([s(cc.Button)], t.prototype, 'mCancelBtn', void 0),
                            __decorate([s(cc.Button)], t.prototype, 'mConfirmBtn', void 0),
                            __decorate([s(cc.Node)], t.prototype, 'mContentNode', void 0),
                            (t = __decorate([r], t))
                        );
                    })(cc.Component);
                (i.default = c), cc._RF.pop();
            },
            {
                '../../../keypad/KeypadNavigator': 'KeypadNavigator',
                '../BasicTouchEvent': 'BasicTouchEvent',
            },
        ],
        UnlockHotSongTask: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '8c7aemydqRPZLkNwlChaUJt', 'UnlockHotSongTask'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./TaskItemImpl'),
                    n = e('../TaskItem'),
                    a = e('../../Network/Protocol/StorageUtil'),
                    r = e('../../../config/LSKey'),
                    s = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.update = function () {
                                'true' === a.default.read(r.default.HOT_SONG_UNLOCKED) ? ((this.currentStep = this.totalStep), (this.status = n.TaskStatus.TASK_STATUS_SUCCESS)) : ((this.currentStep = 0), (this.status = n.TaskStatus.TASK_STATUS_DOING));
                            }),
                            t
                        );
                    })(o.default);
                (i.default = s), cc._RF.pop();
            },
            {
                '../../../config/LSKey': 'LSKey',
                '../../Network/Protocol/StorageUtil': 'StorageUtil',
                '../TaskItem': 'TaskItem',
                './TaskItemImpl': 'TaskItemImpl',
            },
        ],
        UnlockPlugin: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '173039RLsRAmZ0NRhbMCOp9', 'UnlockPlugin'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./IPlugin'),
                    n = e('../PlayerMgr'),
                    a = e('../../Core/GameDefine'),
                    r = e('../Level'),
                    s = e('../../../util/Dictionary'),
                    c = e('../../DB/DBMgr'),
                    l = e('../../UI/MusicLevelDataLoader'),
                    u = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.update = function (e) {}),
                            (t.prototype.onLevelChanged = function (e) {
                                for (var t = 1; t <= e; t++) {
                                    l.MusicLevelDataLoader.getMusicLevelsByLv(t).forEach(function (e) {
                                        if (e.levelUnlock.unlockType == r.eUnlockType.UNLOCK_TYPE_LV) {
                                            var t = n.default.Ins().getLevelRecord(e.id);
                                            null == t && (t = n.default.Ins().addNewRecord(e.id, e.music.mid, e.levelUnlock.unlockType)), t.mUnlockFlag == a.eUnlockFlag.FLAG_LOCKED_LV && ((t.mUnlockFlag = a.eUnlockFlag.FLAG_UNLOCK_LV), t.clearData());
                                        }
                                    });
                                }
                                n.default.Ins().saveRecord();
                            }),
                            (t.prototype.getKind = function () {
                                return o.default.Plugin_Unlock;
                            }),
                            (t.prototype.getGoldLevel = function () {
                                var e = c.default.Ins().getData(c.eDataBase.eDB_Level).csvGetRows('Lock', '2'),
                                    o = new s.Dictionary();
                                return (
                                    o &&
                                        e.forEach(function (e) {
                                            var t = e[0],
                                                i = parseInt(t);
                                            o.put(t, i);
                                        }),
                                    o
                                );
                            }),
                            (t.prototype.getDiamondLevel = function () {
                                var e = c.default.Ins().getData(c.eDataBase.eDB_Level).csvGetRows('Lock', '13'),
                                    o = new s.Dictionary();
                                return (
                                    o &&
                                        e.forEach(function (e) {
                                            var t = e[0],
                                                i = parseInt(t);
                                            o.put(t, i);
                                        }),
                                    o
                                );
                            }),
                            (t.prototype.getPayLevel = function () {
                                var e = c.default.Ins().getData(c.eDataBase.eDB_Level),
                                    t = e.csvGetRows('Lock', '13'),
                                    o = new s.Dictionary();
                                return (
                                    t.forEach(function (e) {
                                        var t = e[0],
                                            i = parseInt(t);
                                        o.put(t, i);
                                    }),
                                    (t = e.csvGetRows('Lock', '2')).forEach(function (e) {
                                        var t = e[0],
                                            i = parseInt(t);
                                        o.put(t, i);
                                    }),
                                    o
                                );
                            }),
                            t
                        );
                    })(o.default);
                (i.default = u), cc._RF.pop();
            },
            {
                '../../../util/Dictionary': 'Dictionary',
                '../../Core/GameDefine': 'GameDefine',
                '../../DB/DBMgr': 'DBMgr',
                '../../UI/MusicLevelDataLoader': 'MusicLevelDataLoader',
                '../Level': 'Level',
                '../PlayerMgr': 'PlayerMgr',
                './IPlugin': 'IPlugin',
            },
        ],
        UnlockProcessor: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '41834arjttDr6obKJBbHmac', 'UnlockProcessor'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var s = e('../PlayerMgr'),
                    c = e('../../Core/GameDefine'),
                    l = e('../../UI/MusicLevelDataLoader'),
                    u = e('../../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    d = e('../Level'),
                    p = e('../EventBus'),
                    h = e('../NotifyEvent'),
                    o = (function () {
                        function e() {}
                        return (
                            (e.unlockByVideo = function (e, t) {
                                var i = l.MusicLevelDataLoader.getChoicenessAllItemInfo(),
                                    o = s.default.Ins();
                                if (i && 0 < i.length)
                                    for (var n = 0; n < i.length; n++) {
                                        var a = i[n];
                                        if (a && a.musicId == t && a.mGameComsume && a.mGameComsume.isActive(u.MGUser.getCurrentServerTime())) {
                                            var r = o.getLevelRecordByMid(t);
                                            return null == r && (r = o.addNewRecord(e, t, d.eUnlockType.UNLOCK_TYPE_VIDEO)), (r.mUnlockFlag = c.eUnlockFlag.FLAG_UNLOCKED), r.clearData(), o.saveRecord(), p.default.fire(h.default.NOTIFY_MUSIC_LIBRARY_UPDATE, a.musicId), p.default.fire(h.default.UPDATE_MUSIC_LIST_HEIGHT, 1), !0;
                                        }
                                    }
                                return !1;
                            }),
                            (e.unlockByShare = function (e, t) {
                                var i = l.MusicLevelDataLoader.getChoicenessAllItemInfo(),
                                    o = s.default.Ins();
                                if (i && 0 < i.length)
                                    for (var n = 0; n < i.length; n++) {
                                        var a = i[n];
                                        if (a && a.musicId == t && a.mGameComsume && a.mGameComsume.isActive(u.MGUser.getCurrentServerTime())) {
                                            var r = o.getLevelRecordByMid(t);
                                            return null == r && (r = o.addNewRecord(e, t, d.eUnlockType.UNLOCK_TYPE_DIAMOND)), (r.mUnlockFlag = c.eUnlockFlag.FLAG_UNLOCK_SHARE), r.clearData(), o.saveRecord(), !0;
                                        }
                                    }
                                return !1;
                            }),
                            (e.unlockByDiamond = function (e, t) {
                                var i = s.default.Ins(),
                                    o = i.getLevelRecordByMid(t);
                                return null == o && (o = i.addNewRecord(e, t, d.eUnlockType.UNLOCK_TYPE_DIAMOND)), o.mUnlockFlag == c.eUnlockFlag.FLAG_LOCKED_DIAMOND && ((o.mUnlockFlag = c.eUnlockFlag.FLAG_UNLOCK_DIAMOND), o.clearData(), i.saveRecord(), !0);
                            }),
                            (e.unlockByGold = function (e, t) {
                                var i = s.default.Ins(),
                                    o = i.getLevelRecordByMid(t);
                                return null == o && (o = i.addNewRecord(e, t, d.eUnlockType.UNLOCK_TYPE_GOLD)), o.mUnlockFlag == c.eUnlockFlag.FLAG_LOCKED_GOLD && ((o.mUnlockFlag = c.eUnlockFlag.FLAG_UNLOCK_GOLD), o.clearData(), i.saveRecord(), !0);
                            }),
                            (e.unlockByVIP = function () {
                                var e = s.default.Ins();
                                e.updateLvUnlockRecord();
                                var t = e.getLevelRecords();
                                if (t) {
                                    for (var i = 0, o = t.getPairs(); i < o.length; i++) {
                                        var n = o[i].value;
                                        n.mId < c.Constant.DIAMONDSONG_STARTID && n.mId != c.Constant.TRIAL_SONG_ID && (n.mUnlockFlag = c.eUnlockFlag.FLAG_UNLOCK_BY_VIP);
                                    }
                                    return e.saveRecord(), !0;
                                }
                                return !1;
                            }),
                            (e.TAG = 'UnlockProcessor => '),
                            e
                        );
                    })();
                (i.default = o), cc._RF.pop();
            },
            {
                '../../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../Core/GameDefine': 'GameDefine',
                '../../UI/MusicLevelDataLoader': 'MusicLevelDataLoader',
                '../EventBus': 'EventBus',
                '../Level': 'Level',
                '../NotifyEvent': 'NotifyEvent',
                '../PlayerMgr': 'PlayerMgr',
            },
        ],
        UpdateContent: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '1ae9282sS1BoZ+Tn4VDtE11', 'UpdateContent'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('../UI/MusicLevelDataLoader'),
                    a = e('../../util/SceneMusicUtil'),
                    r = e('../../util/PU'),
                    o = e('../../util/SUtil'),
                    s = e('../UI/GameEntraScene/MusicLib/NormalMusicCardItemPrefb'),
                    c = e('../../util/QQReport'),
                    l = e('../keypad/KeypadNavigator'),
                    u = cc._decorator,
                    d = u.ccclass,
                    p = u.property,
                    h = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mRootNode = null), (e.backBtn = null), (e.musicItemPrefab = null), (e.musicItemContainer = null), (e.mTitleSprite = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.onLoad = function () {
                                var o = this;
                                this.mRootNode.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                }),
                                    this.backBtn.node.on(cc.Node.EventType.TOUCH_END, function () {
                                        a.default.playBtnBeats(), o.mCompleteListener();
                                    });
                                var e = n.MusicLevelDataLoader.getItemInfoByNeedLv(this.mUserLevel);
                                console.error('[gwj.onLoad] itemInfos.length=' + e.length),
                                    (this.mItemSize = e.length),
                                    c.QQReport.reportUnLockSong(this.mItemSize),
                                    e.forEach(function (e) {
                                        var t = cc.instantiate(o.musicItemPrefab),
                                            i = t.getComponent(s.default);
                                        i.setData(e, void 0, !0), i.setSource(s.default.SOURCE_UPDATE_CONTENT), o.musicItemContainer.node.addChild(t);
                                    }),
                                    this.node.on(
                                        cc.Node.EventType.TOUCH_START,
                                        function (e) {
                                            e.stopPropagation();
                                        },
                                        this,
                                    ),
                                    this.initParticleSystem(),
                                    this.resetCloseBtnPosition(),
                                    l.default.getInstance().pushDialog(this.node, 'UpdateContent');
                            }),
                            (e.prototype.onDestroy = function () {
                                l.default.getInstance().popDialog(this.node, 'UpdateContent');
                            }),
                            (e.prototype.resetCloseBtnPosition = function () {
                                4 == this.mItemSize && (o.SUtil.ins().isPuTong() ? o.SUtil.ins().toBottomByPercent(this.backBtn, 5.5) : o.SUtil.ins().isLiuHai() ? o.SUtil.ins().toBottomByPercent(this.backBtn, 14.2) : o.SUtil.ins().isQuanMian() && o.SUtil.ins().toBottomByPercent(this.backBtn, 11.9));
                            }),
                            (e.prototype.initParticleSystem = function () {
                                if (r.default.particalSystemCompat) {
                                    var e = this.node.getChildByName('particles'),
                                        t = e.getChildByName('particle_red').addComponent(cc.ParticleSystem);
                                    (t.playOnLoad = !0), (t.file = r.default.getResourcePath('resources/particle/particle_unlock_red.plist'));
                                    var i = e.getChildByName('particle_green').addComponent(cc.ParticleSystem);
                                    (i.playOnLoad = !0), (i.file = r.default.getResourcePath('resources/particle/particle_unlock_green.plist'));
                                    var o = e.getChildByName('particle_blue').addComponent(cc.ParticleSystem);
                                    (o.playOnLoad = !0), (o.file = r.default.getResourcePath('resources/particle/particle_unlock_blue.plist'));
                                }
                            }),
                            (e.prototype.start = function () {
                                var e = this.node.getComponent(cc.Animation);
                                3 == this.mItemSize ? e.play('update_content_open') : 4 == this.mItemSize && e.play('update_content_open_2');
                            }),
                            (e.prototype.setData = function (e) {
                                this.mUserLevel = e;
                            }),
                            (e.prototype.setListener = function (e) {
                                this.mCompleteListener = e;
                            }),
                            __decorate([p(cc.Node)], e.prototype, 'mRootNode', void 0),
                            __decorate([p(cc.Button)], e.prototype, 'backBtn', void 0),
                            __decorate([p(cc.Prefab)], e.prototype, 'musicItemPrefab', void 0),
                            __decorate([p(cc.Layout)], e.prototype, 'musicItemContainer', void 0),
                            __decorate([p(cc.Sprite)], e.prototype, 'mTitleSprite', void 0),
                            (e = __decorate([d], e))
                        );
                    })(cc.Component);
                (i.default = h), cc._RF.pop();
            },
            {
                '../../util/PU': 'PU',
                '../../util/QQReport': 'QQReport',
                '../../util/SUtil': 'SUtil',
                '../../util/SceneMusicUtil': 'SceneMusicUtil',
                '../UI/GameEntraScene/MusicLib/NormalMusicCardItemPrefb': 'NormalMusicCardItemPrefb',
                '../UI/MusicLevelDataLoader': 'MusicLevelDataLoader',
                '../keypad/KeypadNavigator': 'KeypadNavigator',
            },
        ],
        UpdateDialog: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '84b7dYzcH5CUbpDAGeaJLxk', 'UpdateDialog'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../DB/DBMgr'),
                    n = e('../../util/SceneMusicUtil'),
                    a = e('../../util/SceneMusicMgr'),
                    r = e('../UI/GameEntraScene/BasicTouchEvent'),
                    s = e('../../util/PU'),
                    c = e('../../util/QQReport'),
                    l = e('../keypad/KeypadNavigator'),
                    u = cc._decorator,
                    d = u.ccclass,
                    p = u.property,
                    h = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mRootNode = null), (e.levelLabel = null), (e.updateContentBtn = null), (e.goldLabel = null), (e.mUpdateContentBtnClick = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.onLoad = function () {
                                var e = this;
                                (this.levelLabel.string = this.mUserLevelId + ''),
                                    (this.mUpdateContentBtnClick = new r.default(function () {
                                        e.updateContentBtnClick();
                                    })),
                                    this.updateContentBtn.node.on(cc.Node.EventType.TOUCH_END, this.mUpdateContentBtnClick.click, this.mUpdateContentBtnClick);
                                var t = o.default
                                    .Ins()
                                    .getDBRow(o.eDataBase.eDB_Lv, this.mUserLevelId + '')
                                    .getRewarGold();
                                (this.goldLabel.string = 'x ' + t),
                                    this.node.on(
                                        cc.Node.EventType.TOUCH_START,
                                        function (e) {
                                            e.stopPropagation();
                                        },
                                        this,
                                    ),
                                    c.QQReport.reportGradeUpdate(),
                                    l.default.getInstance().pushDialog(this.node, 'UpdateDialog');
                            }),
                            (e.prototype.onDestroy = function () {
                                l.default.getInstance().popDialog(this.node, 'UpdateDialog');
                            }),
                            (e.prototype.updateContentBtnClick = function () {
                                var e = this;
                                this.mRootNode.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                }),
                                    a.default.stop(a.default.NAME_UPGRADE_PAGE),
                                    n.default.playBtnBeats(),
                                    a.default.play(a.default.NAME_MUSIC_LIST, a.default.PATH_MUSIC_LIST, !1);
                                var t = this.updateContentBtn.getComponent(cc.Animation);
                                t.on(
                                    'finished',
                                    function () {
                                        e.mCompleteListener();
                                    },
                                    this,
                                ),
                                    t.play('reward_click');
                            }),
                            (e.prototype.start = function () {
                                this.playAnim();
                            }),
                            (e.prototype.playAnim = function () {
                                var e = this,
                                    t = this.node.getComponent(cc.Animation);
                                t.play('level_up'),
                                    t.on(
                                        'finished',
                                        function () {
                                            a.default.play(a.default.NAME_UPGRADE_PAGE, a.default.PATH_UPGRADE_PAGE, !1), e.playParticleSystem();
                                        },
                                        this,
                                    );
                            }),
                            (e.prototype.playParticleSystem = function () {
                                if (s.default.particalSystemCompat) {
                                    var e = this.node.getChildByName('left_particle'),
                                        t = e.getChildByName('p_green').addComponent(cc.ParticleSystem);
                                    (t.playOnLoad = !0), (t.file = s.default.getResourcePath('resources/particle/particle_levelupgreen_l.plist'));
                                    var i = e.getChildByName('p_yellow').addComponent(cc.ParticleSystem);
                                    (i.playOnLoad = !0), (i.file = s.default.getResourcePath('resources/particle/particle_levelupyellow_l.plist'));
                                    var o = this.node.getChildByName('right_particle'),
                                        n = o.getChildByName('p_blue').addComponent(cc.ParticleSystem);
                                    (n.playOnLoad = !0), (n.file = s.default.getResourcePath('resources/particle/particle_levelupblue_r.plist'));
                                    var a = o.getChildByName('p_red').addComponent(cc.ParticleSystem);
                                    (a.playOnLoad = !0), (a.file = s.default.getResourcePath('resources/particle/particle_levelupred_r.plist'));
                                }
                            }),
                            (e.prototype.setData = function (e, t, i, o) {
                                (this.mUserLevelId = e), (this.mMusicId = t), (this.mMusicName = i), (this.mScore = o);
                            }),
                            (e.prototype.setListener = function (e) {
                                this.mCompleteListener = e;
                            }),
                            __decorate([p(cc.Node)], e.prototype, 'mRootNode', void 0),
                            __decorate([p(cc.Label)], e.prototype, 'levelLabel', void 0),
                            __decorate([p(cc.Button)], e.prototype, 'updateContentBtn', void 0),
                            __decorate([p(cc.Label)], e.prototype, 'goldLabel', void 0),
                            (e = __decorate([d], e))
                        );
                    })(cc.Component);
                (i.default = h), cc._RF.pop();
            },
            {
                '../../util/PU': 'PU',
                '../../util/QQReport': 'QQReport',
                '../../util/SceneMusicMgr': 'SceneMusicMgr',
                '../../util/SceneMusicUtil': 'SceneMusicUtil',
                '../DB/DBMgr': 'DBMgr',
                '../UI/GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
                '../keypad/KeypadNavigator': 'KeypadNavigator',
            },
        ],
        UserAuthorizePopupPrefab: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '2f588E9VlxANIDBlVYr0IPJ', 'UserAuthorizePopupPrefab'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../social/WXHelper'),
                    n = e('./BasicTouchEvent'),
                    a = e('../../../infoc/m_p2_Uaction'),
                    r = e('../UserInfoBtnManager'),
                    s = cc._decorator,
                    c = s.ccclass,
                    l = s.property,
                    u = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mLayout = null), (e.cancel_btn = null), (e.open_btn = null), (e.mCancelBtnClickCallback = null), (e.mOpenBtnClickCallback = null), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.setCloseCallback = function (e) {
                                this.closeCallback = e;
                            }),
                            (e.prototype.setAuthorizeCallback = function (e) {
                                this.authorizeCallback = e;
                            }),
                            (e.prototype.onLoad = function () {
                                var e = this;
                                this.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                                    e.stopPropagation();
                                }),
                                    this.initEvent(),
                                    (this.mUserInfoBtn = r.UserInfoBtnManager.getInstance().createOnAvator(function () {
                                        e.authorizeCallback && e.authorizeCallback();
                                    }));
                            }),
                            (e.prototype.initEvent = function () {
                                var e = this;
                                (this.mOpenBtnClickCallback = new n.default(function () {
                                    e.openBtnClick();
                                })),
                                    this.open_btn.node.on(cc.Node.EventType.TOUCH_END, this.mOpenBtnClickCallback.click, this.mOpenBtnClickCallback),
                                    (this.mCancelBtnClickCallback = new n.default(function () {
                                        e.cancelBtnClick();
                                    })),
                                    this.cancel_btn.node.on(cc.Node.EventType.TOUCH_END, this.mCancelBtnClickCallback.click, this.mCancelBtnClickCallback);
                            }),
                            (e.prototype.start = function () {
                                this.mLayout.getComponent(cc.Animation).play('user_authorize_popup');
                            }),
                            (e.prototype.openBtnClick = function () {
                                var t = this;
                                a.default.report(0, a.default.ACTION_CLICK_PERMISSION_DIALOG_AVATOR_AGREE),
                                    o.WXHelper.openAuthorize(function (e) {
                                        t.authorizeCallback && (e == o.WXHelper.AUTHORIZE_OPEN && a.default.report(0, a.default.ACTION_OPEN_PERMISSION_SUCC_AVATOR), t.authorizeCallback());
                                    });
                            }),
                            (e.prototype.cancelBtnClick = function () {
                                this.mUserInfoBtn && (this.mUserInfoBtn.destroy(), (this.mUserInfoBtn = null)), this.closeCallback && this.closeCallback();
                            }),
                            __decorate([l(cc.Node)], e.prototype, 'mLayout', void 0),
                            __decorate([l(cc.Button)], e.prototype, 'cancel_btn', void 0),
                            __decorate([l(cc.Button)], e.prototype, 'open_btn', void 0),
                            (e = __decorate([c], e))
                        );
                    })(cc.Component);
                (i.default = u), cc._RF.pop();
            },
            {
                '../../../infoc/m_p2_Uaction': 'm_p2_Uaction',
                '../../../social/WXHelper': 'WXHelper',
                '../UserInfoBtnManager': 'UserInfoBtnManager',
                './BasicTouchEvent': 'BasicTouchEvent',
            },
        ],
        UserHelperCM: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '9a2d1OZMrBAjqqb0DJZD8+u', 'UserHelperCM'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var l = e('../Logic/MGUserHelper'),
                    u = e('../../../MGUtils/TypeDefinition'),
                    o = e('../../../../scripts/business/keypad/KeypadUtil'),
                    n = (function (c) {
                        function e() {
                            return (null !== c && c.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(e, c),
                            (e.prototype.getServiceUrl = function () {
                                return o.default.isOversea() ? e.SERVER_ADDRESS_URL_OVERSEA : c.prototype.isDebug.call(this) ? e.SERVER_ADDRESS_URL_TEST : e.SERVER_ADDRESS_URL;
                            }),
                            (e.prototype.getUrlToRegister = function () {
                                return this.getServiceUrl() + e.REGISTER_URL;
                            }),
                            (e.prototype.getUrlToUploadUserInfo = function () {
                                return this.getServiceUrl() + e.UPLOAD_USERR_INFO_URL;
                            }),
                            (e.prototype.getUrlToUploadUserLevel = function () {
                                return this.getServiceUrl() + e.UPLOAD_USERR_LEVEL_URL;
                            }),
                            (e.prototype.getUrlToGetCurrentServerRealTime = function () {
                                return this.getServiceUrl() + e.GET_SERVER_REAL_TIMES;
                            }),
                            (e.prototype.getUserBaseInfoInner = function (e) {
                                var t = new u.UserBasicInfo();
                                (t.nickName = 'CMPlay'), (t.avatarUrl = ''), l.default.baseInfoCallback(!0, t, e);
                            }),
                            (e.prototype.getUserLoginInfoInner = function (r) {
                                var s = this;
                                CMPlay.login(function (e, t, i, o, n) {
                                    if (e) {
                                        console.log('登录成功 ' + n);
                                        var a = new u.UserLoginInfo();
                                        (a.playerId = t), (a.token = i), (a.isNewUser = 1 == o), c.prototype.setTimeDifference.call(s, new Date().getTime() - 1e3 * n), l.default.loginInfoCallback(!0, a, r);
                                    } else console.log('登录失败'), l.default.loginInfoCallback(!1, null, r);
                                });
                            }),
                            (e.prototype.createUserBaseInfoButton = function (e) {
                                return null;
                            }),
                            (e.prototype.getIsUserBaseAuth = function (e) {
                                e.complete && e.complete(!0), e.success && e.success();
                            }),
                            (e.SERVER_ADDRESS_URL_TEST = 'https://pianotiles-minigame.cmcm.com/'),
                            (e.SERVER_ADDRESS_URL = 'https://minigame.cmcm.com/'),
                            (e.SERVER_ADDRESS_URL_OVERSEA = 'https://h5game_oversea.cmcm.com/'),
                            (e.REGISTER_URL = 'warty/auth/register/cm'),
                            (e.UPLOAD_USERR_INFO_URL = 'warty/auth/userinfo/cm'),
                            (e.UPLOAD_USERR_LEVEL_URL = 'warty/userinfo/save_level'),
                            (e.GET_SERVER_REAL_TIMES = 'common/time'),
                            e
                        );
                    })(l.default);
                (i.default = n), cc._RF.pop();
            },
            {
                '../../../../scripts/business/keypad/KeypadUtil': 'KeypadUtil',
                '../../../MGUtils/TypeDefinition': 'TypeDefinition',
                '../Logic/MGUserHelper': 'MGUserHelper',
            },
        ],
        UserHelperFB: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'fba07N1uTxFuqzotZOe74m/', 'UserHelperFB'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('../Logic/MGUserHelper'),
                    r = e('../../../MGUtils/TypeDefinition'),
                    s = e('../../../MGUtils/FBHelper'),
                    c = e('../../../MGUtils/NetworkUtils'),
                    o = (function (n) {
                        function e() {
                            return (null !== n && n.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(e, n),
                            (e.prototype.getServiceUrl = function () {
                                return n.prototype.isDebug.call(this) ? e.SERVER_ADDRESS_URL_TEST : e.SERVER_ADDRESS_URL;
                            }),
                            (e.prototype.getUrlToRegister = function () {
                                return this.getServiceUrl() + e.REGISTER_URL;
                            }),
                            (e.prototype.getUrlToUploadUserInfo = function () {
                                return '';
                            }),
                            (e.prototype.getUrlToUploadUserLevel = function () {
                                return this.getServiceUrl() + e.UPLOAD_USERR_LEVEL_URL;
                            }),
                            (e.prototype.getUrlToGetCurrentServerRealTime = function () {
                                return this.getServiceUrl() + e.GET_SERVER_REAL_TIMES;
                            }),
                            (e.prototype.getUserBaseInfoInner = function (e) {
                                var t = new r.UserBasicInfo();
                                (t.nickName = s.FBHelper.getNickName()), (t.avatarUrl = s.FBHelper.getPhoto()), a.default.baseInfoCallback(!0, t, e);
                            }),
                            (e.prototype.getUserLoginInfoInner = function (i) {
                                var o = this;
                                this.getUserBaseInfoInner({
                                    success: function (e) {
                                        var t = {
                                            photo: e.avatarUrl,
                                            name: e.nickName,
                                            country: 'china',
                                        };
                                        c.default.request({
                                            platform: n.prototype.getPlatformType.call(o),
                                            url: o.getUrlToRegister(),
                                            data: {
                                                user_info: t,
                                                playerid: s.FBHelper.getID(),
                                                gameid: n.prototype.getGameId,
                                                timestamp: new Date().getTime(),
                                            },
                                            header: {
                                                'content-type': 'text/plain;charset=UTF-8',
                                            },
                                            method: c.default.METHOD_POST,
                                            dataType: 'json',
                                            checkAuthorization: !1,
                                            success: function (e) {
                                                if (e && 0 == e.status && e.result) {
                                                    var t = new r.UserLoginInfo();
                                                    (t.playerId = e.result.playerid), (t.token = e.result.token), n.prototype.setTimeDifference.call(o, new Date().getTime() - 1e3 * e.timestamp), a.default.loginInfoCallback(!0, t, i);
                                                } else a.default.loginInfoCallback(!1, null, i);
                                            },
                                            fail: function (e, t) {
                                                a.default.loginInfoCallback(!1, null, i);
                                            },
                                        });
                                    },
                                });
                            }),
                            (e.SERVER_ADDRESS_URL_TEST = 'https://instantgame.cmcm.com/'),
                            (e.SERVER_ADDRESS_URL = 'https://instantgame.cmcm.com/'),
                            (e.REGISTER_URL = 'auth/register/fb'),
                            (e.UPLOAD_USERR_LEVEL_URL = 'warty/userinfo/save_level'),
                            (e.GET_SERVER_REAL_TIMES = 'common/time'),
                            e
                        );
                    })(a.default);
                (i.default = o), cc._RF.pop();
            },
            {
                '../../../MGUtils/FBHelper': 'FBHelper',
                '../../../MGUtils/NetworkUtils': 'NetworkUtils',
                '../../../MGUtils/TypeDefinition': 'TypeDefinition',
                '../Logic/MGUserHelper': 'MGUserHelper',
            },
        ],
        UserHelperGameHall: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '77299LSDqZKnp6aWszwT5oj', 'UserHelperGameHall'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (a) {
                    function e(e, t, i, o, n) {
                        return a.call(this, e, t, i, o, n) || this;
                    }
                    return (
                        __extends(e, a),
                        (e.prototype.getUrlToRegister = function () {
                            return this.getServiceUrl() + e.REGISTER_URL;
                        }),
                        (e.REGISTER_URL = 'warty/auth/register/gamehall'),
                        e
                    );
                })(e('./UserHelperH5SDK').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './UserHelperH5SDK': 'UserHelperH5SDK',
            },
        ],
        UserHelperH5SDK: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '79881fbHXRIR6WaZzUQKygD', 'UserHelperH5SDK'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./UserHelperWX'),
                    s = e('../../../MGUtils/TypeDefinition'),
                    c = e('../../../MGUtils/NetworkUtils'),
                    l = e('../Logic/MGUserHelper'),
                    u = e('../../../MGUtils/MGLog'),
                    n = (function (r) {
                        function e(e, t, i, o, n) {
                            var a = r.call(this, e, t, i, o, n) || this;
                            return (
                                window.H5SDK.init({
                                    wxappid: i,
                                    gameVersion: o,
                                }),
                                a
                            );
                        }
                        return (
                            __extends(e, r),
                            (e.prototype.getUrlToRegister = function () {
                                return this.getServiceUrl() + e.REGISTER_URL;
                            }),
                            (e.prototype.getUserLoginInfoInner = function (n) {
                                var a = this;
                                window.H5SDK.checkLogin({
                                    success: function (e) {
                                        if ((u.default.l('[UserHelperH5SDK] checkLogin success'), e)) {
                                            var t = e.userInfo;
                                            t && t.h5game_openid && t.h5sdk_sessionid
                                                ? c.default.request({
                                                      platform: r.prototype.getPlatformType.call(a),
                                                      url: a.getUrlToRegister(),
                                                      data: {
                                                          gameid: r.prototype.getGameId.call(a),
                                                          h5game_openid: t.h5game_openid,
                                                          h5sdk_sessionid: t.h5sdk_sessionid,
                                                          encrypted_data: e.encryptedData,
                                                          iv: e.iv,
                                                      },
                                                      header: {
                                                          'content-type': 'application/json',
                                                      },
                                                      method: c.default.METHOD_POST,
                                                      dataType: 'json',
                                                      checkAuthorization: !1,
                                                      success: function (e) {
                                                          if (e && 0 == e.status && e.result) {
                                                              var t = new s.UserLoginInfo();
                                                              (t.playerId = e.result.playerid), (t.token = e.result.token);
                                                              var i = e.result.new_user,
                                                                  o = 0;
                                                              null != i && null != i && 0 < ('' + i).length && (isNaN(Number('' + i)) || (o = Number('' + i))), (t.isNewUser = 1 == o), r.prototype.setTimeDifference.call(a, new Date().getTime() - 1e3 * e.timestamp), l.default.loginInfoCallback(!0, t, n);
                                                          } else l.default.loginInfoCallback(!1, null, n);
                                                      },
                                                      fail: function (e, t) {
                                                          l.default.loginInfoCallback(!1, null, n);
                                                      },
                                                  })
                                                : l.default.loginInfoCallback(!1, null, n);
                                        } else l.default.loginInfoCallback(!1, null, n);
                                    },
                                    fail: function () {
                                        u.default.e('[UserHelperH5SDK] checkLogin failed'), l.default.loginInfoCallback(!1, null, n);
                                    },
                                });
                            }),
                            (e.REGISTER_URL = 'warty/auth/register/h5sdk'),
                            e
                        );
                    })(o.default);
                (i.default = n), cc._RF.pop();
            },
            {
                '../../../MGUtils/MGLog': 'MGLog',
                '../../../MGUtils/NetworkUtils': 'NetworkUtils',
                '../../../MGUtils/TypeDefinition': 'TypeDefinition',
                '../Logic/MGUserHelper': 'MGUserHelper',
                './UserHelperWX': 'UserHelperWX',
            },
        ],
        UserHelperQQ: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '4081aQhnMxLy4Fzeghqgo4I', 'UserHelperQQ'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('../Logic/MGUserHelper'),
                    r = e('../../../MGUtils/TypeDefinition'),
                    s = e('../../../MGUtils/QQHelper'),
                    c = e('../../../MGUtils/NetworkUtils'),
                    o = e('../../../../scripts/business/keypad/KeypadUtil'),
                    n = (function (n) {
                        function e() {
                            return (null !== n && n.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(e, n),
                            (e.prototype.getServiceUrl = function () {
                                return o.default.isOversea() ? e.SERVER_ADDRESS_URL_OVERSEA : n.prototype.isDebug.call(this) ? e.SERVER_ADDRESS_URL_TEST : e.SERVER_ADDRESS_URL;
                            }),
                            (e.prototype.getUrlToRegister = function () {
                                return this.getServiceUrl() + e.REGISTER_URL;
                            }),
                            (e.prototype.getUrlToUploadUserInfo = function () {
                                return this.getServiceUrl() + e.UPLOAD_USERR_INFO_URL;
                            }),
                            (e.prototype.getUrlToGetCurrentServerRealTime = function () {
                                return this.getServiceUrl() + e.GET_SERVER_REAL_TIMES;
                            }),
                            (e.prototype.getUrlToUploadUserLevel = function () {
                                return this.getServiceUrl() + e.UPLOAD_USERR_LEVEL_URL;
                            }),
                            (e.prototype.getUserBaseInfoInner = function (o) {
                                s.QQHelper.getHeadEx(function (i) {
                                    s.QQHelper.getNick(function (e) {
                                        var t = new r.UserBasicInfo();
                                        (t.nickName = e), (t.avatarUrl = i), a.default.baseInfoCallback(!0, t, o);
                                    });
                                });
                            }),
                            (e.prototype.getUserLoginInfoInner = function (i) {
                                var o = this;
                                s.QQHelper.fetchOpenKey({
                                    success: function (e) {
                                        c.default.request({
                                            platform: n.prototype.getPlatformType.call(o),
                                            url: o.getUrlToRegister(),
                                            data: {
                                                appid: n.prototype.getAppId.call(o),
                                                gameid: n.prototype.getGameId.call(o),
                                                openid: GameStatusInfo.openId,
                                                openkey: e,
                                                timestamp: new Date().getTime(),
                                            },
                                            header: {
                                                'content-type': 'application/json',
                                            },
                                            method: c.default.METHOD_POST,
                                            dataType: 'json',
                                            checkAuthorization: !1,
                                            success: function (e) {
                                                if (e && 0 == e.status && e.result) {
                                                    var t = new r.UserLoginInfo();
                                                    (t.playerId = e.result.playerid), (t.token = e.result.token), (t.sid = e.result.qqid), n.prototype.setTimeDifference.call(o, new Date().getTime() - 1e3 * e.timestamp), a.default.loginInfoCallback(!0, t, i);
                                                } else a.default.loginInfoCallback(!1, null, i);
                                            },
                                            fail: function (e, t) {
                                                a.default.loginInfoCallback(!1, null, i);
                                            },
                                        });
                                    },
                                    fail: function () {
                                        a.default.loginInfoCallback(!1, null, i);
                                    },
                                });
                            }),
                            (e.SERVER_ADDRESS_URL_TEST = 'https://pianotiles-minigame.cmcm.com/'),
                            (e.SERVER_ADDRESS_URL = 'https://minigame.cmcm.com/'),
                            (e.SERVER_ADDRESS_URL_OVERSEA = 'https://h5game_oversea.cmcm.com/'),
                            (e.REGISTER_URL = 'warty/auth/register/mqq'),
                            (e.UPLOAD_USERR_INFO_URL = 'warty/auth/userinfo/mqq'),
                            (e.UPLOAD_USERR_LEVEL_URL = 'warty/userinfo/save_level'),
                            (e.GET_SERVER_REAL_TIMES = 'common/time'),
                            e
                        );
                    })(a.default);
                (i.default = n), cc._RF.pop();
            },
            {
                '../../../../scripts/business/keypad/KeypadUtil': 'KeypadUtil',
                '../../../MGUtils/NetworkUtils': 'NetworkUtils',
                '../../../MGUtils/QQHelper': 'QQHelper',
                '../../../MGUtils/TypeDefinition': 'TypeDefinition',
                '../Logic/MGUserHelper': 'MGUserHelper',
            },
        ],
        UserHelperWX: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '9829b3K5ONLKqtJ/dKw6Wha', 'UserHelperWX'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('../Logic/MGUserHelper'),
                    r = e('../../../MGUtils/TypeDefinition'),
                    s = e('../../../MGUtils/WeappHelper'),
                    c = e('../../../MGUtils/NetworkUtils'),
                    o = e('../../../../scripts/business/keypad/KeypadUtil'),
                    n = (function (n) {
                        function e() {
                            return (null !== n && n.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(e, n),
                            (e.prototype.getServiceUrl = function () {
                                return o.default.isOversea() ? e.SERVER_ADDRESS_URL_OVERSEA : n.prototype.isDebug.call(this) ? e.SERVER_ADDRESS_URL_TEST : e.SERVER_ADDRESS_URL;
                            }),
                            (e.prototype.getUrlToRegister = function () {
                                return this.getServiceUrl() + e.REGISTER_URL;
                            }),
                            (e.prototype.getUrlToUploadUserInfo = function () {
                                return this.getServiceUrl() + e.UPLOAD_USERR_INFO_URL;
                            }),
                            (e.prototype.getUrlToGetCurrentServerRealTime = function () {
                                return this.getServiceUrl() + e.GET_SERVER_REAL_TIMES;
                            }),
                            (e.prototype.getUrlToUploadUserLevel = function () {
                                return this.getServiceUrl() + e.UPLOAD_USERR_LEVEL_URL;
                            }),
                            (e.prototype.getUserBaseInfoInner = function (t) {
                                s.WeappHelper.getUserBasicInfo({
                                    success: function (e) {
                                        a.default.baseInfoCallback(!0, e, t);
                                    },
                                    fail: function () {
                                        a.default.baseInfoCallback(!1, null, t);
                                    },
                                });
                            }),
                            (e.prototype.getUserLoginInfoInner = function (i) {
                                var o = this;
                                s.WeappHelper.login({
                                    success: function (e) {
                                        c.default.request({
                                            platform: n.prototype.getPlatformType.call(o),
                                            url: o.getUrlToRegister(),
                                            data: {
                                                jscode: e,
                                                gameid: n.prototype.getGameId.call(o),
                                            },
                                            header: {
                                                'content-type': 'application/json',
                                            },
                                            method: c.default.METHOD_POST,
                                            dataType: 'json',
                                            checkAuthorization: !1,
                                            success: function (e) {
                                                if (e && 0 == e.status && e.result) {
                                                    var t = new r.UserLoginInfo();
                                                    (t.playerId = e.result.playerid), (t.token = e.result.token), n.prototype.setTimeDifference.call(o, new Date().getTime() - 1e3 * e.timestamp), a.default.loginInfoCallback(!0, t, i);
                                                } else a.default.loginInfoCallback(!1, null, i);
                                            },
                                            fail: function (e, t) {
                                                a.default.loginInfoCallback(!1, null, i);
                                            },
                                        });
                                    },
                                    fail: function () {
                                        a.default.loginInfoCallback(!1, null, i);
                                    },
                                });
                            }),
                            (e.SERVER_ADDRESS_URL_TEST = 'https://pianotiles-minigame.cmcm.com/'),
                            (e.SERVER_ADDRESS_URL = 'https://minigame.cmcm.com/'),
                            (e.SERVER_ADDRESS_URL_OVERSEA = 'https://h5game_oversea.cmcm.com/'),
                            (e.REGISTER_URL = 'warty/auth/register/wx'),
                            (e.UPLOAD_USERR_INFO_URL = 'warty/auth/userinfo/wx'),
                            (e.UPLOAD_USERR_LEVEL_URL = 'warty/userinfo/save_level'),
                            (e.GET_SERVER_REAL_TIMES = 'common/time'),
                            e
                        );
                    })(a.default);
                (i.default = n), cc._RF.pop();
            },
            {
                '../../../../scripts/business/keypad/KeypadUtil': 'KeypadUtil',
                '../../../MGUtils/NetworkUtils': 'NetworkUtils',
                '../../../MGUtils/TypeDefinition': 'TypeDefinition',
                '../../../MGUtils/WeappHelper': 'WeappHelper',
                '../Logic/MGUserHelper': 'MGUserHelper',
            },
        ],
        UserHelperWeb: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '512a4wDhklM478vIjTPIvE7', 'UserHelperWeb'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('../../../MGUtils/TypeDefinition'),
                    r = e('../Logic/MGUserHelper'),
                    s = e('../../../MGBasic/scripts/Logic/MGBasicEntrance'),
                    c = e('./UserLoginHelperWeb'),
                    o = e('../../../../scripts/business/keypad/KeypadUtil'),
                    n = (function (n) {
                        function e() {
                            return (null !== n && n.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(e, n),
                            (e.prototype.getUrlToUploadUserLevel = function () {
                                return '';
                            }),
                            (e.prototype.getServiceUrl = function () {
                                return o.default.isOversea() ? e.SERVER_ADDRESS_URL_OVERSEA : n.prototype.isDebug.call(this) ? e.SERVER_ADDRESS_URL_TEST : e.SERVER_ADDRESS_URL;
                            }),
                            (e.prototype.getUrlToRegister = function () {
                                return this.getServiceUrl() + 'warty/auth/h5_auth';
                            }),
                            (e.prototype.getUrlToUploadUserInfo = function () {
                                return '';
                            }),
                            (e.prototype.getUrlToGetCurrentServerRealTime = function () {
                                return '';
                            }),
                            (e.prototype.getUserBaseInfoInner = function (e) {
                                var t = new a.UserBasicInfo();
                                (t.nickName = 'superman'), r.default.baseInfoCallback(!0, t, e);
                            }),
                            (e.prototype.getUserLoginInfoInner = function (i) {
                                var o = this,
                                    e = new a.UserLoginInfo();
                                (e.playerId = ''), (e.token = '');
                                var t = s.MGBasic.getStorage('web_playid');
                                t && 0 < t.length
                                    ? (e.playerId = t)
                                    : c.UserLoginHelperWeb.login({
                                          gameId: n.prototype.getGameId.call(this),
                                          success: function (e) {
                                              var t = new a.UserLoginInfo();
                                              (t.playerId = e.playerId), (t.token = e.token), (t.isNewUser = e.isNewUser), n.prototype.setTimeDifference.call(o, new Date().getTime() - 1e3 * e.timestamp), r.default.loginInfoCallback(!0, t, i);
                                          },
                                          fail: function () {
                                              r.default.loginInfoCallback(!1, null, i);
                                          },
                                      });
                            }),
                            (e.SERVER_ADDRESS_URL_TEST = 'https://pianotiles-minigame.cmcm.com/'),
                            (e.SERVER_ADDRESS_URL = 'https://minigame.cmcm.com/'),
                            (e.SERVER_ADDRESS_URL_OVERSEA = 'https://h5game_oversea.cmcm.com/'),
                            e
                        );
                    })(r.default);
                (i.default = n), cc._RF.pop();
            },
            {
                '../../../../scripts/business/keypad/KeypadUtil': 'KeypadUtil',
                '../../../MGBasic/scripts/Logic/MGBasicEntrance': 'MGBasicEntrance',
                '../../../MGUtils/TypeDefinition': 'TypeDefinition',
                '../Logic/MGUserHelper': 'MGUserHelper',
                './UserLoginHelperWeb': 'UserLoginHelperWeb',
            },
        ],
        UserInfoBtnManager: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'd2357yQ4flK3KlloolePEGO', 'UserInfoBtnManager'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('../../../modules/MGUtils/WeappHelper'),
                    a = e('../../util/Utility'),
                    r = e('../../util/PU'),
                    o = (function () {
                        function e() {
                            this.mIsUserBaseAuth = !0;
                        }
                        return (
                            (e.getInstance = function () {
                                return e.mInstance || (e.mInstance = new e()), e.mInstance;
                            }),
                            (e.prototype.init = function () {
                                var t = this;
                                r.default.isWeiXin() &&
                                    0 <= a.Utility.compareVersion(r.default.SDKVersion, '2.0.1') &&
                                    n.WeappHelper.getIsUserBaseAuth({
                                        complete: function (e) {
                                            e || (t.mIsUserBaseAuth = !1);
                                        },
                                    });
                            }),
                            (e.prototype.createOnGameScene = function (t) {
                                var i = this;
                                if (!this.mIsUserBaseAuth && r.default.isWeiXin() && 0 <= a.Utility.compareVersion(r.default.SDKVersion, '2.0.1')) {
                                    var e = r.default.windowWidth / 720,
                                        o = n.WeappHelper.createUserInfoButton({
                                            type: 'text',
                                            text: '',
                                            withCredentials: !1,
                                            style: {
                                                left: 209 * e,
                                                top: r.default.windowHeight / 2 + 91 * e,
                                                width: 302 * e,
                                                height: 74 * e,
                                                backgroundColor: '#00000000',
                                            },
                                        });
                                    o.onTap(function (e) {
                                        e && e.userInfo && (i.mIsUserBaseAuth = !0), o.destroy(), t();
                                    }),
                                        o.show();
                                }
                            }),
                            (e.prototype.createOnAvator = function (t) {
                                var i = this;
                                if (this.mIsUserBaseAuth) return null;
                                var o = null;
                                if (r.default.isWeiXin() && 0 <= a.Utility.compareVersion(r.default.SDKVersion, '2.0.1')) {
                                    var e = r.default.windowWidth / 720;
                                    (o = n.WeappHelper.createUserInfoButton({
                                        type: 'text',
                                        text: '',
                                        withCredentials: !1,
                                        style: {
                                            left: 371 * e,
                                            top: r.default.windowHeight / 2 + 93 * e,
                                            width: 204 * e,
                                            height: 74 * e,
                                            backgroundColor: '#00000000',
                                        },
                                    })).onTap(function (e) {
                                        e && e.userInfo && (i.mIsUserBaseAuth = !0), o.destroy(), t();
                                    }),
                                        o.show();
                                }
                                return o;
                            }),
                            (e.prototype.createOnFightInvite = function (t) {
                                var i = this;
                                if (this.mIsUserBaseAuth) return null;
                                var o = null;
                                if (r.default.isWeiXin() && 0 <= a.Utility.compareVersion(r.default.SDKVersion, '2.0.1')) {
                                    var e = r.default.windowWidth / 720;
                                    (o = n.WeappHelper.createUserInfoButton({
                                        type: 'text',
                                        text: '',
                                        withCredentials: !1,
                                        style: {
                                            left: 183 * e,
                                            top: r.default.windowHeight / 2 + 134 * e,
                                            width: 354 * e,
                                            height: 116 * e,
                                            backgroundColor: '#00000000',
                                        },
                                    })).onTap(function (e) {
                                        e && e.userInfo && (i.mIsUserBaseAuth = !0), o.destroy(), t();
                                    }),
                                        o.show();
                                }
                                return o;
                            }),
                            e
                        );
                    })();
                (i.UserInfoBtnManager = o), cc._RF.pop();
            },
            {
                '../../../modules/MGUtils/WeappHelper': 'WeappHelper',
                '../../util/PU': 'PU',
                '../../util/Utility': 'Utility',
            },
        ],
        UserInfoLevelMgr: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'a73fdtE/ytN+oE07xKsX/bh', 'UserInfoLevelMgr'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var a = e('../../base/Log'),
                    o = (function () {
                        function n() {}
                        return (
                            (n.queryUserInfoLevel = function (e, i) {
                                var o = this;
                                a.default.i(n.TAG + ' queryUserInfoLevel playerId = ' + e),
                                    cmg.platform.queryUserInfoLevel(e, function (e, t) {
                                        a.default.i(n.TAG + ' queryUserInfoLevel result = ' + e + ', data = ', t), e && t.data ? i(!0, o.convertServerUserInfoLevel(t.data)) : i && i(!1, null);
                                    });
                            }),
                            (n.convertServerUserInfoLevel = function (e) {
                                var t = new r();
                                return e && ((t.nickname = e.nickname), (t.avatarUrl = e.avatar_url), (t.gender = e.gender), (t.city = e.city), (t.province = e.province), (t.country = e.country), (t.level = e.user_level), (t.hornors = e.honors)), t;
                            }),
                            (n.TAG = '[UserInfoMgr]=====>>>'),
                            n
                        );
                    })();
                i.default = o;
                var r = function () {};
                (i.UserInfoLevel = r), cc._RF.pop();
            },
            {
                '../../base/Log': 'Log',
            },
        ],
        UserInfoManager: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '7e7bdOTDNtPi7wDZsONVQRl', 'UserInfoManager'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../Logic/Plugin/PluginMgr'),
                    n = e('../Logic/Plugin/IPlugin'),
                    a = e('../Logic/PlayerMgr'),
                    r = e('../Logic/EventBus'),
                    s = e('../Logic/NotifyEvent'),
                    c = e('../Logic/MoneySystem');
                (function (e) {
                    var t = (function () {
                        function e() {}
                        return (
                            (e.getUserInfo = function () {
                                var e = new i(),
                                    t = a.default.Ins();
                                return (e.level = t.getUserLevel()), (e.hp = t.getHP()), (e.diamond = t.getUserDiamond()), (e.coin = t.getUserCoin()), (e.experience = a.default.Ins().getUserCurrentExp()), e;
                            }),
                            (e.buyCoinByDiamond = function (e) {
                                return c.MoneySystem.costDiamondToCoin(e);
                            }),
                            (e.buyHpByCoin = function (e) {
                                return c.MoneySystem.costCoinToHp(e);
                            }),
                            (e.shareGetHp = function (e) {
                                return isNaN(e) && (e = 2), c.MoneySystem.increaseHp(e);
                            }),
                            (e.shareGetDiamond = function (e) {
                                return isNaN(e) && (e = 6), c.MoneySystem.increaseDiamond(e);
                            }),
                            (e.isAutoReviveHp = function () {
                                return o.default.Ins().getPluginEx(n.default.Plugin_Energy).mRecovery;
                            }),
                            (e.registerHpReviveListener = function (e, t) {
                                r.default.register(s.default.HP_REVIVE, e, t);
                            }),
                            (e.unRegisterHpReviveListener = function (e, t) {
                                r.default.remove(s.default.HP_REVIVE, e, t);
                            }),
                            e
                        );
                    })();
                    e.UserInfoManager = t;
                    var i = function () {
                        (this.diamond = 0), (this.coin = 0), (this.level = 1), (this.experience = 0), (this.hp = -1);
                    };
                    e.Data = i;
                })(i.User || (i.User = {})),
                    cc._RF.pop();
            },
            {
                '../Logic/EventBus': 'EventBus',
                '../Logic/MoneySystem': 'MoneySystem',
                '../Logic/NotifyEvent': 'NotifyEvent',
                '../Logic/PlayerMgr': 'PlayerMgr',
                '../Logic/Plugin/IPlugin': 'IPlugin',
                '../Logic/Plugin/PluginMgr': 'PluginMgr',
            },
        ],
        UserLoginHelperWeb: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '434c80LGapMcI22eIDYFiqp', 'UserLoginHelperWeb'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../MGUtils/MGSha1'),
                    n = e('../../../MGBasic/scripts/LocalStorageHelplerWeb'),
                    a = e('../../../../scripts/business/keypad/KeypadUtil'),
                    r = (function () {
                        function r() {}
                        return (
                            (r.getLoginURL = function () {
                                return a.default.isOversea() ? r.URL_LOGIN_OVERSEA : r.IS_DEBUG ? r.URL_LOGIN_TEST : r.URL_LOGIN;
                            }),
                            (r.getBindURL = function () {
                                return a.default.isOversea() ? r.URL_BIND_OVERSEA : r.IS_DEBUG ? r.URL_BIND_TEST : r.URL_BIND;
                            }),
                            (r.login = function (t) {
                                var e = this,
                                    i = r.getStorage(r.KEY_WEB_PLAYID),
                                    o = r.getGameToken(),
                                    n = r.getIsAnonymous();
                                console.log('cmToken: ' + o + ' isAnonymous: ' + n);
                                var a = function () {
                                    r.doLogin({
                                        gameId: t.gameId,
                                        cmToken: o,
                                        isAnonymous: n,
                                        success: function (e) {
                                            t.success(e);
                                        },
                                        fail: function () {
                                            t.fail && t.fail();
                                        },
                                    });
                                };
                                i && 0 < i.length
                                    ? r.doBind({
                                          gameId: t.gameId,
                                          cmToken: o,
                                          playid: i,
                                          isAnonymous: 1,
                                          success: function () {
                                              e.setStorage(r.KEY_WEB_PLAYID, ''), e.setStorage(r.KEY_WEB_TOKEN, ''), a();
                                          },
                                          fail: function () {
                                              t.fail && t.fail();
                                          },
                                      })
                                    : a();
                            }),
                            (r.doBind = function (i) {
                                r.request({
                                    url: r.getBindURL(),
                                    data: {
                                        gameid: i.gameId,
                                        playerid: i.playid,
                                        cm_token: i.cmToken,
                                        is_anonymous: i.isAnonymous,
                                        timestamp: Date.now(),
                                    },
                                    header: {
                                        'content-type': 'application/json',
                                    },
                                    method: 'POST',
                                    dataType: 'json',
                                    checkAuthorization: !1,
                                    success: function (e) {
                                        e && 0 == e.status ? i.success() : i.fail();
                                    },
                                    fail: function (e, t) {
                                        i.fail();
                                    },
                                });
                            }),
                            (r.doLogin = function (n) {
                                r.request({
                                    url: r.getLoginURL(),
                                    data: {
                                        gameid: n.gameId,
                                        cm_token: n.cmToken,
                                        is_anonymous: n.isAnonymous,
                                        timestamp: Date.now(),
                                    },
                                    header: {
                                        'content-type': 'application/json',
                                    },
                                    method: 'POST',
                                    dataType: 'json',
                                    checkAuthorization: !1,
                                    success: function (e) {
                                        if (e && 0 == e.status && e.result) {
                                            var t = new s();
                                            (t.playerId = e.result.playerid), (t.token = e.result.token);
                                            var i = e.result.is_new_user,
                                                o = 0;
                                            null != i && null != i && 0 < ('' + i).length && (isNaN(Number('' + i)) || (o = Number('' + i))), (t.isNewUser = 1 == o), (t.timestamp = e.timestamp), n.success(t);
                                        } else n.fail();
                                    },
                                    fail: function (e, t) {
                                        n.fail();
                                    },
                                });
                            }),
                            (r.setStorage = function (e, t) {
                                return n.LocalStorageHelperWeb.setItem(e, t), !0;
                            }),
                            (r.getStorage = function (e) {
                                return n.LocalStorageHelperWeb.getItem(e);
                            }),
                            (r.request = function (t) {
                                console.log('[UserLoginHelperWeb] request, parameter:', t);
                                var i = new XMLHttpRequest();
                                for (var e in (i.open(t.method, t.url), t.header)) i.setRequestHeader(e, t.header[e]);
                                i.onreadystatechange = function () {
                                    if (4 == i.readyState)
                                        if (200 == i.status) {
                                            if ((console.log('[UserLoginHelperWeb] request, success:', i.responseText), t.token && t.checkAuthorization && !r.checkAuthorization(i.getAllResponseHeaders(), i.responseText, t.token))) return void t.fail(i.status, i.responseText);
                                            if (t.success)
                                                if ('json' == t.dataType)
                                                    try {
                                                        t.success(JSON.parse(i.responseText));
                                                    } catch (e) {
                                                        t.success(i.responseText);
                                                    }
                                                else t.success(i.responseText);
                                        } else console.log('[UserLoginHelperWeb] request, fail:', i.responseText), t.fail && t.fail(i.status, i.responseText);
                                };
                                var o = t.data ? JSON.stringify(t.data) : '';
                                i.send(o);
                            }),
                            (r.checkAuthorization = function (e, t, i) {
                                return e && (e.Authorization || e.authorization) ? 'CMCM ' + o.hex_hmac_sha1(i, t) === (e.Authorization ? e.Authorization : e.authorization) || (console.error('[UserLoginHelperWeb] checkAuthorization, fail: Invalid authorization.'), !1) : (console.error('[UserLoginHelperWeb] checkAuthorization, fail: Authorization is empty.'), !1);
                            }),
                            (r.getGameToken = function () {
                                return cc.sys.platform == cc.sys.DESKTOP_BROWSER ? 'debug_234f2a66-106d-45e9-9595-3b8c35f7fd24' : window.getGameToken ? window.getGameToken() : '';
                            }),
                            (r.getIsAnonymous = function () {
                                return window.isAnonymous ? (window.isAnonymous() ? 1 : 0) : 1;
                            }),
                            (r.setIsDebug = function (e) {
                                r.IS_DEBUG = e;
                            }),
                            (r.KEY_WEB_PLAYID = 'web_playid'),
                            (r.KEY_WEB_TOKEN = 'web_token'),
                            (r.URL_LOGIN = 'https://minigame.cmcm.com/warty/auth/h5_login'),
                            (r.URL_LOGIN_TEST = 'https://pianotiles-minigame.cmcm.com/warty/auth/h5_login'),
                            (r.URL_LOGIN_DEV = 'http://10.12.198.70/warty/auth/h5_login'),
                            (r.URL_LOGIN_OVERSEA = 'https://h5game_oversea.cmcm.com/warty/auth/h5_login'),
                            (r.URL_BIND = 'https://minigame.cmcm.com/warty/auth/h5_bind'),
                            (r.URL_BIND_TEST = 'https://pianotiles-minigame.cmcm.com/warty/auth/h5_bind'),
                            (r.URL_BIND_OVERSEA = 'https://h5game_oversea.cmcm.com/warty/auth/h5_bind'),
                            (r.IS_DEBUG = !1),
                            r
                        );
                    })();
                i.UserLoginHelperWeb = r;
                var s = function () {
                    (this.playerId = ''), (this.token = ''), (this.isNewUser = !1), (this.timestamp = 0);
                };
                (i.LoginData = s), cc._RF.pop();
            },
            {
                '../../../../scripts/business/keypad/KeypadUtil': 'KeypadUtil',
                '../../../MGBasic/scripts/LocalStorageHelplerWeb': 'LocalStorageHelplerWeb',
                '../../../MGUtils/MGSha1': 'MGSha1',
            },
        ],
        UserLvManager: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '61f305OXEtIUaemypw+YY41', 'UserLvManager'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../DB/DBMgr'),
                    n = (function () {
                        function e() {}
                        return (
                            (e.getUserLv = function (e) {
                                var t = new a(),
                                    i = o.default.Ins().getDBRow(o.eDataBase.eDB_Lv, e + '');
                                return (t.lv = i.getLv()), (t.exp = i.getExp()), (t.rewarGold = i.getRewarGold()), (t.rewarLift = i.getRewarLife()), t;
                            }),
                            e
                        );
                    })();
                i.UserLvManager = n;
                var a = function () {};
                (i.UserLv = a), cc._RF.pop();
            },
            {
                '../DB/DBMgr': 'DBMgr',
            },
        ],
        UserUtil: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '3f220IEuL5IYLV4BFAE2fHJ', 'UserUtil'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {}
                    return (
                        (e.parseUserToString = function (e) {
                            return null == e ? '' : cc.js.formatStr('%s_%s_%s_%s_%s_%s_%s', e.hp, e.coin, e.diamond, e.curUserExp, e.level, e.lastRecovery, e.lastLevelMid);
                        }),
                        (e.parseToUser = function (e, t) {
                            if (null != t && null != e && 0 < e.length) {
                                var i = e.split('_');
                                (null == i && 6 != i.length) || ((t.hp = parseInt(i[0])), (t.coin = parseInt(i[1])), (t.diamond = parseInt(i[2])), (t.curUserExp = parseInt(i[3])), (t.level = parseInt(i[4])), (t.lastRecovery = parseInt(i[5])), (t.lastLevelMid = parseInt(i[6])));
                            }
                        }),
                        (e.getCurSysTime = function () {
                            return Date.now() / 1e3;
                        }),
                        (e.parseLevelRecordToStr = function (e) {
                            if (e) {
                                var t = '';
                                return (
                                    e.forEach(function (e) {
                                        (t += e.mId + '@'), (t += e.mMid + '@'), (t += e.mBestScore + '@'), (t += e.mBestStar + '@'), (t += e.mBestSpeed + '@'), (t += e.mUnlockFlag + '@'), (t += '*');
                                    }),
                                    t
                                );
                            }
                            return '';
                        }),
                        e
                    );
                })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        User: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'af25bhxod9NF5ZQ/lIP3xUU', 'User'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = function () {
                    (this.diamond = 0), (this.coin = 0), (this.level = 1), (this.hp = -1), (this.lastRecovery = 0), (this.curUserExp = 0), (this.lastLevelMid = -1);
                };
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        Utility: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '9cbf2s3pyNM7YcR2f/pkQY0', 'Utility'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    (function (e) {
                        var t;
                        (e.compareVersion = function (e, t) {
                            for (var i = e.split('.'), o = t.split('.'), n = Math.max(i.length, o.length), a = 0; a < n; a++) {
                                var r = a < i.length ? parseInt(i[a]) : 0,
                                    s = a < o.length ? parseInt(o[a]) : 0;
                                if (r !== s) return s < r ? 1 : -1;
                            }
                            return 0;
                        }),
                            (e.evil = function (e, t) {
                                return new Function(e + 'return ' + t)();
                            }),
                            (e.getRandom = function (e, t) {
                                var i = 1 / (t - e + 1),
                                    o = Math.random();
                                return 1 <= o && (o = 0.9999), e + Math.floor(o / i);
                            }),
                            (e.getRandomValue = function () {
                                return Math.random();
                            }),
                            (e.getRandomFromArray = function (e, t) {
                                var i = e,
                                    o = t;
                                o = o > i.length ? i.length : o;
                                for (var n = [].concat(i), a = [], r = 0; r < o; r++) {
                                    var s = Math.floor(Math.random() * n.length);
                                    a.push(n[s]), n.splice(s, 1);
                                }
                                return a;
                            }),
                            (e.getRandoms = function (e, t, i) {
                                for (var o = [], n = e; n <= t; ++n) o.push(n);
                                var a = [];
                                for (n = Math.min(o.length, i) - 1; 0 <= n; --n) {
                                    var r = this.getRandom(0, o.length - 1);
                                    a.push(o[r]), o.splice(r, 1);
                                }
                                return a;
                            }),
                            ((t = e.BLOCKTYPE || (e.BLOCKTYPE = {}))[(t.SHORT = 0)] = 'SHORT'),
                            (t[(t.LONG = 1)] = 'LONG'),
                            (t[(t.MONEY = 2)] = 'MONEY'),
                            (t[(t.GIFT = 3)] = 'GIFT'),
                            (t[(t.BEGIN = 4)] = 'BEGIN'),
                            (t[(t.MISTAKE = 5)] = 'MISTAKE'),
                            (t[(t.TWINS = 6)] = 'TWINS'),
                            (t[(t.BLANKPAUSE = 7)] = 'BLANKPAUSE'),
                            (t[(t.OBSTACLE = 8)] = 'OBSTACLE'),
                            (t[(t.PROPERTY = 9)] = 'PROPERTY');
                        var i,
                            o,
                            n,
                            a,
                            r = (function () {
                                function e(e, t) {
                                    (this.music = !1), (this.accurate = !1), (this.music = e), (this.accurate = t);
                                }
                                return (e.c = [new e(!0, !1), new e(!0, !1), new e(!1, !0), new e(!1, !0), new e(!0, !1), new e(!1, !1), new e(!0, !1), new e(!1, !0), new e(!1, !0), new e(!1, !0)]), e;
                            })();
                        (e.BLOCKTYPECHARACTER = r), ((i = e.SEGMENTTYPE || (e.SEGMENTTYPE = {}))[(i.NONE = 0)] = 'NONE'), (i[(i.BEGIN = 1)] = 'BEGIN'), (i[(i.MEDIUM = 2)] = 'MEDIUM'), (i[(i.DESTINATION = 3)] = 'DESTINATION'), ((o = e.GAMESTAGE || (e.GAMESTAGE = {}))[(o.NONE = 0)] = 'NONE'), (o[(o.GUIDE = 1)] = 'GUIDE'), (o[(o.MUSIC = 2)] = 'MUSIC'), (o[(o.MONEY = 3)] = 'MONEY'), (o[(o.INFINITE = 4)] = 'INFINITE'), ((n = e.SKINSWITCHESULT || (e.SKINSWITCHESULT = {}))[(n.SUCCESS = 0)] = 'SUCCESS'), (n[(n.ERROR = 1)] = 'ERROR'), (n[(n.CANCELED = 2)] = 'CANCELED'), (n[(n.TIMEOUT = 3)] = 'TIMEOUT'), (n[(n.EXISTINSTANCE = 4)] = 'EXISTINSTANCE'), ((a = e.AbnormalReason || (e.AbnormalReason = {}))[(a.NONE = 0)] = 'NONE'), (a[(a.BACKGROUND = 1)] = 'BACKGROUND'), (a[(a.DISMISSGAME = 2)] = 'DISMISSGAME'), (a[(a.WAITENDTIMEOUT = 3)] = 'WAITENDTIMEOUT'), (a[(a.WAITSTARTTIMEOUT = 4)] = 'WAITSTARTTIMEOUT'), (a[(a.OFFLINE = 5)] = 'OFFLINE'), (a[(a.ENEMYOFFLINE = 6)] = 'ENEMYOFFLINE');
                        var s = function (e, t, i) {
                            (this.identifier = e), (this.clientX = t), (this.clientY = i);
                        };
                        e.TouchItem = s;
                        var c = (function () {
                            function e(e, t, i, o) {
                                (this.xMax = 0), (this.yMax = 0), (this.xCenter = 0), (this.yCenter = 0), (this._x = 0), (this._y = 0), (this._width = 0), (this._height = 0), this.set(e, t, i, o);
                            }
                            return (
                                Object.defineProperty(e.prototype, 'x', {
                                    get: function () {
                                        return this._x;
                                    },
                                    set: function (e) {
                                        (this._x = e), this.update();
                                    },
                                    enumerable: !0,
                                    configurable: !0,
                                }),
                                Object.defineProperty(e.prototype, 'y', {
                                    get: function () {
                                        return this._y;
                                    },
                                    set: function (e) {
                                        (this._y = e), this.update();
                                    },
                                    enumerable: !0,
                                    configurable: !0,
                                }),
                                Object.defineProperty(e.prototype, 'width', {
                                    get: function () {
                                        return this._width;
                                    },
                                    set: function (e) {
                                        (this._width = e), this.update();
                                    },
                                    enumerable: !0,
                                    configurable: !0,
                                }),
                                Object.defineProperty(e.prototype, 'height', {
                                    get: function () {
                                        return this._height;
                                    },
                                    set: function (e) {
                                        (this._height = e), this.update();
                                    },
                                    enumerable: !0,
                                    configurable: !0,
                                }),
                                (e.prototype.center = function () {
                                    return new cc.Vec2(this.xCenter, this.yCenter);
                                }),
                                (e.prototype.clone = function () {
                                    return new e(this.x, this.y, this.width, this.height);
                                }),
                                (e.prototype.copy = function (e) {
                                    this.set(e.x, e.y, e.width, e.height);
                                }),
                                (e.prototype.set = function (e, t, i, o) {
                                    (this._x = e), (this._y = t), (this._width = i), (this._height = o), this.update();
                                }),
                                (e.prototype.contains = function (e, t) {
                                    return e >= this._x && e <= this._x + this._width && t >= this._y && t <= this._y + this._height;
                                }),
                                (e.prototype.update = function () {
                                    (this.xMax = this._x + this._width), (this.xCenter = this._x + this._width / 2), (this.yMax = this._y + this._height), (this.yCenter = this._y + this._height / 2);
                                }),
                                e
                            );
                        })();
                        e.Rect = c;
                    })(i.Utility || (i.Utility = {})),
                    cc._RF.pop();
            },
            {},
        ],
        Utils: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '925bcJQHz5MSbxrNN0T2Zof', 'Utils'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var r = e('../../../scripts/base/Log'),
                    o = (function () {
                        function e() {}
                        return (
                            (e.shareAppMessageWX = function (e, t, i, o) {
                                cc.sys.platform == cc.sys.WECHAT_GAME &&
                                    wx.shareAppMessage({
                                        title: e,
                                        imageUrl: t,
                                        query: i,
                                        success: function (e) {
                                            o &&
                                                o({
                                                    result: !0,
                                                    shareTickets: e.shareTickets,
                                                    groupMsgInfos: e.groupMsgInfos,
                                                });
                                        },
                                        fail: function () {
                                            o &&
                                                o({
                                                    result: !1,
                                                });
                                        },
                                    });
                            }),
                            (e.shareAppMessageH5sdk = function (e, t, i, o) {
                                cc.sys.platform == cc.sys.WECHAT_GAME &&
                                    window.H5SDK.shareMessage({
                                        shareInfo: {
                                            title: e,
                                            imageUrl: t,
                                            query: i,
                                        },
                                        success: function (e) {
                                            console.warn('AdapterH5SDK::shareAppMessage => success'),
                                                o &&
                                                    o({
                                                        result: !0,
                                                        shareTickets: e.shareTickets,
                                                        groupMsgInfos: e.groupMsgInfos,
                                                    });
                                        },
                                        fail: function (e) {
                                            console.warn('AdapterH5SDK::shareAppMessage => fail'),
                                                o &&
                                                    o({
                                                        result: !1,
                                                    });
                                        },
                                    });
                            }),
                            (e.shareAppMessageCM = function (e, t, i, o) {
                                var n = isNaN(Number(t)) ? 0 : Number(t);
                                window.onShare(e, n, i, o);
                            }),
                            (e.addPlayIdToShareQuery = function (e) {
                                return cc.sys.platform === cc.sys.QQ_PLAY && null != this.sPlayerId && (e && 0 < e.length ? (e += '&playerid=' + this.sPlayerId) : (e = 'playerid=' + this.sPlayerId)), e;
                            }),
                            (e.shareAppMessageQQ = function (i, e, o, t, n) {
                                var a = this;
                                o && 0 < o.length ? (o += '&src=' + t) : (o = 'src=' + t),
                                    (o = this.addPlayIdToShareQuery(o)),
                                    e.startsWith('GameSandBox') || e.startsWith('GameRes')
                                        ? (console.log('[SocialHelper] shareAppMessage shareImageUrl = ' + e + ', shareTitle: ' + i + ', shareQuery: ' + o),
                                          cmg.platform.uploadFile(e, function (e, t) {
                                              console.log('[SocialHelper] shareAppMessage  = , upload result : ' + e + ', path : ' + t),
                                                  0 == e
                                                      ? a.oldShareToArkQQ(i, t, o, function (e, t) {
                                                            n({
                                                                result: e,
                                                                shareTickets: t ? ['qq_shareTickets'] : null,
                                                            });
                                                        })
                                                      : n({
                                                            result: !1,
                                                        });
                                          }))
                                        : (console.log('[SocialHelper] shareToArk = , shareImageUrl = ' + e + ', shareTitle: ' + i + ', shareQuery: ' + o),
                                          this.oldShareToArkQQ(i, e, o, function (e, t) {
                                              n({
                                                  result: e,
                                                  shareTickets: t ? ['qq_shareTickets'] : null,
                                              });
                                          }));
                            }),
                            (e.shareAppMessageWithDialog = function (e, t, i, o, n, a) {
                                console.log('[SocialHelper] shareAppMessageWithDialog title:' + e + ' imgurl:' + t + ' imglocal:' + i), o && 0 < o.length ? (o += '&src=' + n) : (o = 'src=' + n);
                                var r = {
                                    summary: e,
                                    picUrl: t,
                                    extendInfo: o,
                                    localPicPath: i,
                                };
                                console.log('[SocialHelper] shareAppMessageWithDialog QQVer=' + GameStatusInfo.QQVer),
                                    BK.QQ.share(r, function (e, t, i) {
                                        console.log('[SocialHelper] shareAppMessageWithDialog retCode:' + e + ' shareDest:' + t + ' isFirstShare:' + i),
                                            0 == e
                                                ? (0 == t ? console.log('[SocialHelper] shareAppMessageWithDialog 成功分享至QQ') : 1 == t ? console.log('[SocialHelper] shareAppMessageWithDialog 成功分享至空间') : 2 == t ? console.log('[SocialHelper] shareAppMessageWithDialog 成功分享至微信') : 3 == t && console.log('[SocialHelper] shareAppMessageWithDialog 成功分享至朋友圈'),
                                                  a({
                                                      result: !0,
                                                      dest: t,
                                                  }))
                                                : (1 == e ? console.log('[SocialHelper] shareAppMessageWithDialog 分享失败' + e) : 2 == e ? console.log('[SocialHelper] shareAppMessageWithDialog 分享失败，用户取消分享：' + e) : console.log('[SocialHelper] shareAppMessageWithDialog 分享失败，未知错误：' + e),
                                                  a({
                                                      result: !1,
                                                      dest: t,
                                                  }));
                                    });
                            }),
                            (e.oldShareToArkApiQQ = function (e, t, i, o, n, a) {
                                BK.Misc.compQQVersion(GameStatusInfo.QQVer, '7.5.8')
                                    ? (BK.QQ._oldShareToArk(e, t, i, o, n), a(!0, !0))
                                    : BK.QQ._oldShareToArk(
                                          e,
                                          t,
                                          i,
                                          o,
                                          n,
                                          function (e, t, i) {
                                              console.log('[SocialHelper] oldShareToArk errCode: ' + r.default.toJsonString(e) + ' cmd: ' + r.default.toJsonString(t) + ' data: ' + r.default.toJsonString(i)), 0 === i.ret ? (4 === i.aioType || 5 === i.aioType ? (a(!0, !0), console.log('[SocialHelper] 分享到群 ')) : (a(!0, !1), console.log('[SocialHelper] 分享给个人 '))) : (a(!1, !1), console.log('[SocialHelper] 分享失败 '));
                                          }.bind(this),
                                      );
                            }),
                            (e.oldShareToArkQQ = function (e, t, i, o) {
                                this.oldShareToArkApiQQ(0, e, t, !0, i, o);
                            }),
                            e
                        );
                    })();
                (i.Utils = o), cc._RF.pop();
            },
            {
                '../../../scripts/base/Log': 'Log',
            },
        ],
        VersionBean: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'a8d6aos3kFFHIbdvNy87OP5', 'VersionBean'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../util/StringUtil'),
                    n = e('../util/NumberUtil'),
                    a = e('./IChecker'),
                    r = e('../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    s = e('../LogicPlatform/PlatformProxy'),
                    c = (function () {
                        function i() {
                            (this.localVer = ''), (this.localMd5 = ''), (this.downloadTime = 0), (this.enableTime = 0), (this.endTime = 0), (this.platform = ''), (this.serverVer = ''), (this.key = ''), (this.url = ''), (this.md5 = ''), (this.type = ''), (this.size = 0), (this.downloadTime = 0), (this.localVer = ''), (this.key = ''), (this.md5 = ''), (this.url = ''), (this.size = 0);
                        }
                        return (
                            (i.prototype.isNeedUpdate = function () {
                                return !!s.default.Ins().needDownloadRes() && (this.serverVer != this.localVer || this.md5 != this.localMd5);
                            }),
                            (i.prototype.isInTime = function () {
                                var e = 0 == this.enableTime || this.enableTime <= r.MGUser.getCurrentServerTime(),
                                    t = 0 == this.endTime || this.endTime >= r.MGUser.getCurrentServerTime();
                                return e && t;
                            }),
                            (i.prototype.isDownload = function () {
                                return !s.default.Ins().needDownloadRes() || (!o.StringUtil.isEmpty(this.localVer) && !o.StringUtil.isEmpty(this.localMd5));
                            }),
                            (i.prototype.getUniqueKey = function () {
                                return this.type + '-' + this.key;
                            }),
                            (i.prototype.clearLocalInfo = function () {
                                (this.localMd5 = ''), (this.localVer = '');
                            }),
                            (i.prototype.isPlatformValid = function (e) {
                                return !!o.StringUtil.isEmpty(this.platform) || -1 < this.platform.split('|').indexOf(e);
                            }),
                            (i.parseFormStr = function (e) {
                                if (o.StringUtil.isEmpty(e)) return null;
                                var t = null;
                                try {
                                    t = JSON.parse(e);
                                } catch (e) {}
                                return i.parseFromJson(t);
                            }),
                            (i.parseFromJson = function (e) {
                                if (!e) return null;
                                var t = new i();
                                return (t.localVer = a.default.populateStr(e.localVer)), (t.serverVer = a.default.populateStr(e.serverVer)), (t.downloadTime = n.default.parseNum(e.downloadTime)), (t.localMd5 = a.default.populateStr(e.localMd5)), (t.key = a.default.populateStr(e.key)), (t.url = a.default.populateStr(e.url)), (t.md5 = a.default.populateStr(e.md5)), (t.type = a.default.populateStr(e.type)), (t.enableTime = n.default.parseNum(e.enableTime)), (t.platform = a.default.populateStr(e.platform)), (t.endTime = n.default.parseNum(e.endTime)), t;
                            }),
                            i
                        );
                    })();
                (i.default = c), cc._RF.pop();
            },
            {
                '../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../LogicPlatform/PlatformProxy': 'PlatformProxy',
                '../util/NumberUtil': 'NumberUtil',
                '../util/StringUtil': 'StringUtil',
                './IChecker': 'IChecker',
            },
        ],
        VipData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '27eaaEnJexKAYWUlWckwaUs', 'VipData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./CsvRowData'),
                    n = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.findId = function (e) {
                                return this.find('Level', e);
                            }),
                            (t.prototype.getRow = function () {
                                return new a();
                            }),
                            t
                        );
                    })(e('./BaseCsvFile').default);
                i.VipData = n;
                var a = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(t, e),
                        (t.prototype.getLevel = function () {
                            return this.getInt('Level');
                        }),
                        (t.prototype.getName = function () {
                            return this.getString('Name');
                        }),
                        (t.prototype.getPrice = function () {
                            return this.getInt('Price');
                        }),
                        (t.prototype.getUnlockLevelSong = function () {
                            return this.getInt('UnlockLevelSong');
                        }),
                        (t.prototype.getUnlockHotSong = function () {
                            return this.getInt('UnlockHotSong');
                        }),
                        (t.prototype.getHotSongDiscount = function () {
                            return this.getInt('HotSongDiscount');
                        }),
                        (t.prototype.getSkinDiscount = function () {
                            return this.getInt('SkinDiscount');
                        }),
                        (t.prototype.getEnergyTimeScale = function () {
                            return this.getInt('EnergyTimeScale');
                        }),
                        (t.prototype.getMaxEnergy = function () {
                            return this.getInt('MaxEnergy');
                        }),
                        (t.prototype.getAvatarDecorate = function () {
                            return this.getInt('AvatarDecorate');
                        }),
                        (t.prototype.getOnetimeReward = function () {
                            return this.getString('OnetimeReward');
                        }),
                        (t.prototype.getDailyReward = function () {
                            return this.getString('DailyReward');
                        }),
                        t
                    );
                })(o.default);
                (i.VipRow = a), cc._RF.pop();
            },
            {
                './BaseCsvFile': 'BaseCsvFile',
                './CsvRowData': 'CsvRowData',
            },
        ],
        WXHelper: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '13f663S5VlPRoZiZyCkdo1Z', 'WXHelper'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function o() {}
                    return (
                        (o.postMessageToOpenData = function (e, t) {
                            cc.sys.platform == cc.sys.WECHAT_GAME &&
                                (null == this.sWXOpenDataContext && (this.sWXOpenDataContext = wx.getOpenDataContext()),
                                this.sWXOpenDataContext.postMessage({
                                    message: e,
                                    parameter: t,
                                }));
                        }),
                        (o.shareAppMessage = function (e, t, i, o) {
                            cc.sys.platform == cc.sys.WECHAT_GAME &&
                                wx.shareAppMessage({
                                    title: e,
                                    imageUrl: t,
                                    query: i,
                                    success: function (e) {
                                        o && o(!0, e.shareTickets, e.groupMsgInfos);
                                    },
                                    fail: function () {
                                        o && o(!1, null, null);
                                    },
                                });
                        }),
                        (o.getAuthorize = function (i) {
                            cc.sys.platform == cc.sys.WECHAT_GAME
                                ? wx.getSetting({
                                      success: function (e) {
                                          var t = e.authSetting;
                                          !0 === t['scope.userInfo'] ? i(o.AUTHORIZE_OPEN) : !1 === t['scope.userInfo'] ? i(o.AUTHORIZE_REFUSE) : i(o.AUTHORIZE_NOT_ASK);
                                      },
                                      fail: function () {
                                          i(o.AUTHORIZE_FAIL);
                                      },
                                  })
                                : i(o.AUTHORIZE_FAIL);
                        }),
                        (o.openAuthorize = function (i) {
                            cc.sys.platform == cc.sys.WECHAT_GAME
                                ? wx.openSetting({
                                      success: function (e) {
                                          var t = e.authSetting;
                                          !0 === t['scope.userInfo'] ? i(o.AUTHORIZE_OPEN) : !1 === t['scope.userInfo'] ? i(o.AUTHORIZE_REFUSE) : i(o.AUTHORIZE_NOT_ASK);
                                      },
                                      fail: function () {
                                          i(o.AUTHORIZE_FAIL);
                                      },
                                  })
                                : i(o.AUTHORIZE_FAIL);
                        }),
                        (o.setUserCloudStorage = function (e, t) {
                            e && 0 !== e.length
                                ? wx.setUserCloudStorage({
                                      KVDataList: e,
                                      success: function () {
                                          t && t(!0);
                                      },
                                      fail: function () {
                                          t && t(!1);
                                      },
                                  })
                                : t && t(!1);
                        }),
                        (o.removeUserCloudStorage = function (e, t) {
                            e && 0 !== e.length
                                ? wx.removeUserCloudStorage({
                                      keyList: e,
                                      success: function () {
                                          t && t(!0);
                                      },
                                      fail: function () {
                                          t && t(!1);
                                      },
                                  })
                                : t && t(null);
                        }),
                        (o.saveTmpImgToAlbum = function (e, t, i, o) {
                            wx.saveImageToPhotosAlbum({
                                filePath: e,
                                success: function () {
                                    t && t();
                                },
                                fail: function () {
                                    i && i();
                                },
                                complete: function () {
                                    o && o();
                                },
                            });
                        }),
                        (o.AUTHORIZE_OPEN = 2),
                        (o.AUTHORIZE_NOT_ASK = 1),
                        (o.AUTHORIZE_REFUSE = 0),
                        (o.AUTHORIZE_FAIL = -1),
                        o
                    );
                })();
                (i.WXHelper = o), cc._RF.pop();
            },
            {},
        ],
        WXMusicContext: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '73ec4lnIIFBFbbkjzBvmpI0', 'WXMusicContext'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e(e) {
                        (this.index = 0), (this.ended = !0), (this.timestamp = 0), (this.index = e), (this.context = wx.createInnerAudioContext()), (this.context.volume = 1), this.context.onError(this._onError.bind(this)), this.context.onEnded(this._onEnd.bind(this)), this.context.onStop(this._onStop.bind(this));
                    }
                    return (
                        (e.prototype.getIndex = function () {
                            return this.index;
                        }),
                        (e.prototype.getPath = function () {
                            return '';
                        }),
                        (e.prototype.play = function () {}),
                        (e.prototype.playA = function (e, t) {
                            (this.ended = !1), (this.context.src = e), this.context.play(), (this.context.volume = t), (this.timestamp = Date.now());
                        }),
                        (e.prototype.playB = function (e, t) {
                            (this.ended = !1), this.context.pause(), (this.context.src = e), this.context.play(), (this.context.volume = t), (this.timestamp = Date.now());
                        }),
                        (e.prototype.stop = function () {
                            this.context.stop();
                        }),
                        (e.prototype.pause = function () {
                            this.context.pause();
                        }),
                        (e.prototype.seek = function (e) {
                            this.context.seek(e);
                        }),
                        (e.prototype.getTimeStamp = function () {
                            return this.timestamp;
                        }),
                        (e.prototype.isEnded = function () {
                            return this.ended;
                        }),
                        (e.prototype._onError = function () {
                            (this.ended = !0), (this.timestamp = 0);
                        }),
                        (e.prototype._onEnd = function () {
                            (this.ended = !0), (this.timestamp = 0);
                        }),
                        (e.prototype._onStop = function () {
                            (this.ended = !0), (this.timestamp = 0);
                        }),
                        e
                    );
                })();
                (i.default = o), cc._RF.pop();
            },
            {},
        ],
        WatchAdsTask: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '72a16HOTjdPW48YQR6LgLxA', 'WatchAdsTask'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (e) {
                    function t() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return __extends(t, e), (t.prototype.initTask = function (e) {}), t;
                })(e('../SkinTaskItem').default);
                (i.default = o), cc._RF.pop();
            },
            {
                '../SkinTaskItem': 'SkinTaskItem',
            },
        ],
        WeappHelper: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'd43ca52mt5FrLo1ZIRXHC83', 'WeappHelper'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o,
                    u = e('./MGLog'),
                    n = e('./TypeDefinition'),
                    a = (function () {
                        function e() {}
                        return (
                            (e.postMessageToOpenData = function (e, t) {
                                null == this.sWXOpenDataContext && (this.sWXOpenDataContext = wx.getOpenDataContext()),
                                    this.sWXOpenDataContext.postMessage({
                                        message: e,
                                        parameter: t,
                                    });
                            }),
                            (e.onShow = function (e) {
                                e && wx.onShow(e);
                            }),
                            (e.offShow = function (e) {
                                e && wx.offShow(e);
                            }),
                            (e.onHide = function (e) {
                                e && wx.onHide(e);
                            }),
                            (e.offHide = function (e) {
                                e && wx.offHide(e);
                            }),
                            (e.getLaunchOptionsSync = function () {
                                return wx.getLaunchOptionsSync();
                            }),
                            (e.createCanvas = function () {
                                return wx.createCanvas();
                            }),
                            (e.networkRequest = function (t) {
                                t &&
                                    (u.default.l('WeappHelper networkRequest:' + t.url, t),
                                    wx.request({
                                        url: t.url,
                                        data: t.data,
                                        header: t.header,
                                        method: t.method,
                                        dataType: t.dataType,
                                        success: function (e) {
                                            u.default.l('WeappHelper networkRequest, complete:', t, e), e ? (200 != e.statusCode ? (u.default.e('WeappHelper networkRequest, fail: Code:' + e.statusCode), t.fail && t.fail(e.statusCode, e)) : e.data ? t.success && t.success(e.statusCode, e.data, e.header) : t.fail && t.fail(e.statusCode, e)) : t && t.fail(-1, null);
                                        },
                                        fail: function () {
                                            u.default.e('WeappHelper networkRequest, fail', t), t.fail && t.fail(-1, null);
                                        },
                                    }));
                            }),
                            (e.login = function (t) {
                                wx.login({
                                    success: function (e) {
                                        t.success && t.success(e.code);
                                    },
                                    fail: t.fail,
                                });
                            }),
                            (e.getUserBasicInfo = function (t) {
                                if (t) {
                                    var i = new n.UserBasicInfo();
                                    wx.getUserInfo({
                                        success: function (e) {
                                            e && e.userInfo && t.success ? ((i.nickName = e.userInfo.nickName), (i.avatarUrl = e.userInfo.avatarUrl), (i.language = e.userInfo.language), (i.gender = e.userInfo.gender), (i.country = e.userInfo.country), (i.province = e.userInfo.province), (i.city = e.userInfo.city), t.success(i)) : t.fail && t.fail();
                                        },
                                        fail: function () {
                                            t.fail && t.fail();
                                        },
                                    });
                                }
                            }),
                            (e.showShareMenu = function (e) {
                                wx.showShareMenu(e);
                            }),
                            (e.onShareAppMessage = function (i) {
                                wx.onShareAppMessage(function (e, t) {
                                    return {
                                        title: i.title,
                                        imageUrl: i.imageUrl,
                                        query: i.query,
                                        success: i.success,
                                        fail: i.fail,
                                    };
                                });
                            }),
                            (e.shareAppMessage = function (e) {
                                wx.shareAppMessage(e);
                            }),
                            (e.setStorage = function (e) {
                                o.setStorage(e);
                            }),
                            (e.setStorageSync = function (e, t) {
                                o.setStorageSync(e, t);
                            }),
                            (e.getStorage = function (e) {
                                o.getStorage(e);
                            }),
                            (e.getStorageSync = function (e) {
                                return o.getStorageSync(e);
                            }),
                            (e.removeStorage = function (e) {
                                o.removeStorage(e);
                            }),
                            (e.removeStorageSync = function (e) {
                                o.removeStorageSync(e);
                            }),
                            (e.getSystemInfo = function (e) {
                                wx.getSystemInfo(e);
                            }),
                            (e.createUserInfoButton = function (e) {
                                return wx.createUserInfoButton(e);
                            }),
                            (e.getIsUserBaseAuth = function (t) {
                                wx.getSetting({
                                    success: function (e) {
                                        !0 === e.authSetting['scope.userInfo'] ? (t.complete && t.complete(!0), t.success && t.success()) : (t.complete && t.complete(!1), t.fail && t.fail());
                                    },
                                    fail: function () {
                                        t.complete && t.complete(!1), t.fail && t.fail();
                                    },
                                });
                            }),
                            (e.getFileSystemManager = function () {
                                return wx.getFileSystemManager();
                            }),
                            (e.navigateToMiniProgram = function (e) {
                                if (e && wx.navigateToMiniProgram) return wx.navigateToMiniProgram(e);
                            }),
                            e
                        );
                    })();
                (i.WeappHelper = a),
                    (function (e) {
                        function t() {
                            return cc.sys.platform == cc.sys.WECHAT_GAME;
                        }
                        var i = t() ? wx.getFileSystemManager() : null;
                        i || (i = {});
                        var l = [0, 0, 10];

                        function o(s, c) {
                            return function (n) {
                                var a = 0,
                                    r = n.fail;
                                n.fail = function (e) {
                                    if (a < l.length) {
                                        var t = l[a];
                                        a++;
                                        var i = n.filePath || n.dirPath || n.path || n.oldPath || n.srcPath || n.url || '',
                                            o = n.newPath || n.destPath || n.tempFilePath || '';
                                        if ((1 < a && u.default.e(c + ' 第 ' + a + ' 次尝试:' + i + ' : ' + o), t <= 0)) return s(n);
                                        setTimeout(function () {
                                            return s(n);
                                        }, t);
                                    } else r && r(e);
                                };
                                var t = 0,
                                    i = n.complete;
                                return (
                                    i &&
                                        (n.complete = function (e) {
                                            (-1 === e.errMsg.indexOf('fail') || l.length <= t) && i(e), t++;
                                        }),
                                    s(n)
                                );
                            };
                        }

                        function n(e, r) {
                            return function (t, i, o) {
                                for (var n = r + ' error ! ' + t, a = 0; a < l.length; a++)
                                    try {
                                        return e(t, i, o);
                                    } catch (e) {
                                        (n = e), u.default.e(r + ' 第 ' + (a + 1) + ' 次尝试: arg0=' + t + '; arg1=' + i + '; arg2=' + o);
                                    }
                                throw n;
                            };
                        }
                        (e.getFileInfo = o(i.getFileInfo, 'fs.getFileInfo')), (e.getSavedFileList = o(i.getSavedFileList, 'fs.getSavedFileList')), (e.mkdir = o(i.mkdir, 'fs.mkdir')), (e.saveFile = o(i.saveFile, 'fs.saveFile')), (e.readFile = o(i.readFile, 'fs.readFile')), (e.writeFile = o(i.writeFile, 'fs.writeFile')), (e.mkdir = o(i.mkdir, 'fs.mkdir')), (e.readdir = o(i.readdir, 'fs.readdir')), (e.rmdir = o(i.rmdir, 'fs.rmdir')), (e.access = o(i.access, 'fs.access')), (e.unlink = o(i.unlink, 'fs.unlink')), (e.stat = o(i.stat, 'fs.stat')), (e.rename = o(i.rename, 'fs.rename')), (e.copyFile = o(i.copyFile, 'fs.copyFile')), (e.unzip = o(i.unzip, 'fs.unzip')), (e.getStorage = o(t() ? wx.getStorage : null, 'wx.getStorage')), (e.setStorage = o(t() ? wx.setStorage : null, 'wx.setStorage')), (e.removeStorage = o(t() ? wx.removeStorage : null, 'wx.removeStorage')), (e.readFileSync = n(i.readFileSync, 'fs.readFileSync')), (e.saveFileSync = n(i.saveFileSync, 'fs.saveFileSync')), (e.writeFileSync = n(i.writeFileSync, 'fs.writeFileSync')), (e.mkdirSync = n(i.mkdirSync, 'fs.mkdirSync')), (e.readdirSync = n(i.readdirSync, 'fs.readdirSync')), (e.rmdirSync = n(i.rmdirSync, 'fs.rmdirSync')), (e.accessSync = n(i.accessSync, 'fs.accessSync')), (e.unlinkSync = n(i.unlinkSync, 'fs.unlinkSync')), (e.statSync = n(i.statSync, 'fs.statSync')), (e.renameSync = n(i.renameSync, 'fs.renameSync')), (e.copyFileSync = n(i.copyFileSync, 'fs.copyFileSync')), (e.getStorageSync = n(t() ? wx.getStorageSync : null, 'wx.getStorageSync')), (e.setStorageSync = n(t() ? wx.setStorageSync : null, 'wx.setStorageSync')), (e.removeStorageSync = n(t() ? wx.removeStorageSync : null, 'wx.removeStorageSync')), (e.wxFileSystemManager = i);
                    })((o = i.WXAPI || (i.WXAPI = {}))),
                    cc._RF.pop();
            },
            {
                './MGLog': 'MGLog',
                './TypeDefinition': 'TypeDefinition',
            },
        ],
        WechatGameAdapter: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '49cde+pPuhLnYLdxzsxsdhW', 'WechatGameAdapter'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./DefaultAdapter'),
                    n = e('../../../modules/MGUtils/WeappHelper'),
                    r = e('../../business/Logic/EventBus'),
                    s = e('../../business/Logic/NotifyEvent'),
                    a = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.needDownloadRes = function () {
                                return !0;
                            }),
                            (t.prototype.isSupportDownloadRes = function () {
                                return !0;
                            }),
                            (t.prototype.createCanvas = function () {
                                return wx.createCanvas();
                            }),
                            (t.prototype.createImage = function () {
                                return wx.createImage();
                            }),
                            (t.prototype.onShowListen = function (e) {
                                n.WeappHelper.onShow(e);
                            }),
                            (t.prototype.offShowListen = function (e) {
                                n.WeappHelper.offShow(e);
                            }),
                            (t.prototype.onHideListen = function (e) {
                                n.WeappHelper.onHide(e);
                            }),
                            (t.prototype.offHideListen = function (e) {
                                n.WeappHelper.offHide(e);
                            }),
                            (t.prototype.getLaunchParameter = function () {
                                return n.WeappHelper.getLaunchOptionsSync();
                            }),
                            (t.prototype.getShareCanvas = function () {
                                return wx.getOpenDataContext().canvas;
                            }),
                            (t.prototype.getUserDataPath = function () {
                                return wx.env.USER_DATA_PATH;
                            }),
                            (t.prototype.unZip = function (e, t, i, o) {
                                (null != t && null != t && 0 != t.length) || (t = wx.env.USER_DATA_PATH),
                                    n.WXAPI.wxFileSystemManager.unzip({
                                        zipFilePath: e,
                                        targetPath: t,
                                        success: function () {
                                            i && i();
                                        },
                                        fail: function (e) {
                                            o && o();
                                        },
                                    });
                            }),
                            (t.prototype.downloadFile = function (t, i, o, e, n) {
                                void 0 === e && (e = 0), void 0 === n && (n = !0);
                                var a = wx.downloadFile({
                                    url: t,
                                    header: '',
                                    success: function (e) {
                                        404 === e.statusCode ? o && o() : e.tempFilePath ? i && i(e.tempFilePath) : o();
                                    },
                                    fail: function (e) {
                                        o && o();
                                    },
                                    complete: function () {},
                                });
                                return (
                                    n &&
                                        a.onProgressUpdate(function (e) {
                                            r.default.fire(s.default.LOADING_DOWNLOAD, t, e.progress / 100);
                                        }),
                                    a
                                );
                            }),
                            (t.prototype.getFileSystemManager = function () {
                                return n.WXAPI.wxFileSystemManager;
                            }),
                            (t.prototype.getImageSrc = function (e) {
                                return e;
                            }),
                            (t.prototype.loadImage = function (e) {}),
                            (t.prototype.getSharePath = function (e) {
                                return e;
                            }),
                            (t.prototype.saveShareTmpFile = function (e, t) {
                                return e.toTempFilePathSync(t);
                            }),
                            t
                        );
                    })(o.default);
                (i.default = a), cc._RF.pop();
            },
            {
                '../../../modules/MGUtils/WeappHelper': 'WeappHelper',
                '../../business/Logic/EventBus': 'EventBus',
                '../../business/Logic/NotifyEvent': 'NotifyEvent',
                './DefaultAdapter': 'DefaultAdapter',
            },
        ],
        WelfareController: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'a3f68ZAx+lI44CafdhcLNEp', 'WelfareController'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('../../../../upgrade/VersionBean'),
                    n = e('../../../../upgrade/IChecker'),
                    a = e('../../../../util/NumberUtil'),
                    r = e('../../../../config/LSKey'),
                    s = e('../../../../upgrade/CloudMgr'),
                    c = e('../../../../base/Log'),
                    l = e('../../../../util/SingleWorker'),
                    u = (function () {
                        function e() {
                            (this.mSource = e.SRC_HOME_PAGE_CLICK), (this.up = new d());
                        }
                        return (
                            (e.Ins = function () {
                                return e.s || (e.s = new e()), e.s;
                            }),
                            (e.prototype.init = function (e) {
                                this.up.upgradeInfo(e);
                            }),
                            (e.SRC_HOME_PAGE_CLICK = 1),
                            (e.SRC_SKIN_INVITE_SHOW = 2),
                            (e.SRC_HOME_INVITE_SHOW = 3),
                            (e.SRC_SHOP_FIRST_PAY_AUTO_SHOW = 4),
                            (e.SRC_SKIN_FIRST_PAY_SHOW = 5),
                            (e.SRC_ENTER_FROM_ATTENTION = 6),
                            (e.SRC_SKIN_INVITE_AUTO_SHOW = 7),
                            (e.SRC_COLD_BOOT_POP = 8),
                            (e.SRC_SKIN_ATTENTION_SHOW = 9),
                            e
                        );
                    })();
                i.default = u;
                var d = (function () {
                        function e() {}
                        return (
                            (e.prototype.getOrders = function (e, t) {
                                var i = this;
                                this.cfgMgr
                                    ? t && t(this.filterOrders(e))
                                    : this.upgradeInfo(function () {
                                          t && t(i.filterOrders(e));
                                      });
                            }),
                            (e.prototype.filterOrders = function (t) {
                                var e = this.cfgMgr.filterData(function (e) {
                                    return e && e.order[t] && 'control' === e.type && 'welfare' === e.key && e.isPlatformValid('cmplay');
                                });
                                return e && 0 < e.length ? e[0].order[t] : null;
                            }),
                            (e.prototype.upgradeInfo = function (i) {
                                var t = this;
                                this.cfgMgr || (this.cfgMgr = new s.default(new h('welfare-cfg', r.default.KEY_CLOUD_CFG, 'https://piano-weixin-game.cmcm.com/pianotiles2/cfg/welfare.json'))),
                                    l.default.doWork(
                                        'welfareController-upgradeInfo',
                                        function () {
                                            return new Promise(function (e) {
                                                t.cfgMgr.request(
                                                    function () {
                                                        c.default.l('WELFARE', t.cfgMgr.getData()), e(!0);
                                                    },
                                                    function () {
                                                        e(!1);
                                                    },
                                                );
                                            });
                                        },
                                        function (e, t) {
                                            i && i(e && t);
                                        },
                                    );
                            }),
                            e
                        );
                    })(),
                    p = (function (t) {
                        function e() {
                            var e = t.call(this) || this;
                            return (e.order = {}), e;
                        }
                        return __extends(e, t), e;
                    })(o.default),
                    h = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.onMergeServerToLocal = function (e, t) {}),
                            (t.prototype.validateData = function (e) {
                                return null != e && null != e;
                            }),
                            (t.prototype.populateServerObj = function (e) {
                                if (!e) return null;
                                var t = new p();
                                if (((t.serverVer = n.default.populateStr(e.ver)), (t.key = n.default.populateStr(e.key)), (t.url = n.default.populateStr(e.url)), (t.md5 = n.default.populateStr(e.md5)), (t.type = n.default.populateStr(e.type)), (t.size = a.default.parseNum(e.size)), (t.enableTime = a.default.parseNum(e.enableTime)), (t.endTime = a.default.parseNum(e.endTime)), (t.platform = n.default.populateStr(e.platform)), e.order)) for (var i in e.order) t.order[i] = e.order[i];
                                return t;
                            }),
                            (t.prototype.populateLocalObj = function (e) {
                                var t = new p();
                                if (((t.localVer = n.default.populateStr(e.localVer)), (t.serverVer = n.default.populateStr(e.serverVer)), (t.downloadTime = a.default.parseNum(e.downloadTime)), (t.localMd5 = n.default.populateStr(e.localMd5)), (t.key = n.default.populateStr(e.key)), (t.url = n.default.populateStr(e.url)), (t.md5 = n.default.populateStr(e.md5)), (t.type = n.default.populateStr(e.type)), (t.enableTime = a.default.parseNum(e.enableTime)), (t.endTime = a.default.parseNum(e.endTime)), (t.platform = n.default.populateStr(e.platform)), e.order)) for (var i in e.order) t.order[i] = e.order[i];
                                return t;
                            }),
                            t
                        );
                    })(n.default);
                cc._RF.pop();
            },
            {
                '../../../../base/Log': 'Log',
                '../../../../config/LSKey': 'LSKey',
                '../../../../upgrade/CloudMgr': 'CloudMgr',
                '../../../../upgrade/IChecker': 'IChecker',
                '../../../../upgrade/VersionBean': 'VersionBean',
                '../../../../util/NumberUtil': 'NumberUtil',
                '../../../../util/SingleWorker': 'SingleWorker',
            },
        ],
        WorkerBase: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '55084MApd1GdLUhPqxYMf46', 'WorkerBase'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var n = e('./WorkerState'),
                    a = e('./WorkerStateChangedEventArgs'),
                    o = (function () {
                        function e(e) {
                            (this.STATE_CHANGED = 'StateChanged'), (this._name = e), (this._disabled = !1), (this._canPauseAndContinue = !1), (this._state = n.WorkerState.stopped);
                        }
                        return (
                            Object.defineProperty(e.prototype, 'name', {
                                get: function () {
                                    return this._name;
                                },
                                enumerable: !0,
                                configurable: !0,
                            }),
                            Object.defineProperty(e.prototype, 'state', {
                                get: function () {
                                    return this._state;
                                },
                                enumerable: !0,
                                configurable: !0,
                            }),
                            Object.defineProperty(e.prototype, 'disabled', {
                                get: function () {
                                    return this._disabled;
                                },
                                set: function (e) {
                                    this._disabled !== e && (this._disabled = e) && this.stop();
                                },
                                enumerable: !0,
                                configurable: !0,
                            }),
                            Object.defineProperty(e.prototype, 'canPauseAndContinue', {
                                get: function () {
                                    return this._canPauseAndContinue;
                                },
                                set: function (e) {
                                    this._state, n.WorkerState.stopped, (this._canPauseAndContinue = e);
                                },
                                enumerable: !0,
                                configurable: !0,
                            }),
                            Object.defineProperty(e.prototype, 'stage', {
                                get: function () {
                                    return this._stage;
                                },
                                set: function (e) {
                                    this._stage = e;
                                },
                                enumerable: !0,
                                configurable: !0,
                            }),
                            (e.prototype.start = function () {
                                for (var i = [], e = 0; e < arguments.length; e++) i[e] = arguments[e];
                                return __awaiter(this, void 0, Promise, function () {
                                    var t;
                                    return __generator(this, function (e) {
                                        switch (e.label) {
                                            case 0:
                                                if (this._disabled || this._state !== n.WorkerState.stopped) return [2];
                                                (this._state = n.WorkerState.starting), (e.label = 1);
                                            case 1:
                                                return e.trys.push([1, 3, , 4]), [4, this.onStart.apply(this, i)];
                                            case 2:
                                                return e.sent(), (this._state = n.WorkerState.running), this.onStateChanged(new a.WorkerStateChangedEventArgs(this.STATE_CHANGED, 'start', n.WorkerState.running)), [3, 4];
                                            case 3:
                                                return (t = e.sent()), (this._state = n.WorkerState.stopped), this.onStateChanged(new a.WorkerStateChangedEventArgs(this.STATE_CHANGED, 'start', n.WorkerState.stopped, t)), console.log('--- start ex:---', t), [3, 4];
                                            case 4:
                                                return [2];
                                        }
                                    });
                                });
                            }),
                            (e.prototype.stop = function () {
                                for (var o = [], e = 0; e < arguments.length; e++) o[e] = arguments[e];
                                return __awaiter(this, void 0, Promise, function () {
                                    var t, i;
                                    return __generator(this, function (e) {
                                        switch (e.label) {
                                            case 0:
                                                if (((t = this._state), this._disabled || t === n.WorkerState.stopping || t === n.WorkerState.stopped)) return [2];
                                                (this._state = n.WorkerState.stopping), (e.label = 1);
                                            case 1:
                                                return e.trys.push([1, 3, , 4]), [4, this.onStop.apply(this, o)];
                                            case 2:
                                                return e.sent(), (this._state = n.WorkerState.stopped), this.onStateChanged(new a.WorkerStateChangedEventArgs(this.STATE_CHANGED, 'stop', n.WorkerState.stopped)), [3, 4];
                                            case 3:
                                                return (i = e.sent()), (this._state = t), this.onStateChanged(new a.WorkerStateChangedEventArgs(this.STATE_CHANGED, 'stop', t, i)), console.log('--- stop ex:---', i), [3, 4];
                                            case 4:
                                                return [2];
                                        }
                                    });
                                });
                            }),
                            (e.prototype.pause = function () {
                                return __awaiter(this, void 0, Promise, function () {
                                    var t, i;
                                    return __generator(this, function (e) {
                                        switch (e.label) {
                                            case 0:
                                                if (((t = this._state), this._disabled || !this._canPauseAndContinue)) return [2];
                                                if (t !== n.WorkerState.running) return [2];
                                                (this._state = n.WorkerState.pausing), (e.label = 1);
                                            case 1:
                                                return e.trys.push([1, 3, , 4]), [4, this.onPause()];
                                            case 2:
                                                return e.sent(), (this._state = n.WorkerState.paused), this.onStateChanged(new a.WorkerStateChangedEventArgs(this.STATE_CHANGED, 'pause', n.WorkerState.paused)), [3, 4];
                                            case 3:
                                                return (i = e.sent()), (this._state = t), this.onStateChanged(new a.WorkerStateChangedEventArgs(this.STATE_CHANGED, 'pause', t, i)), console.log('--- stop pause:---', i), [3, 4];
                                            case 4:
                                                return [2];
                                        }
                                    });
                                });
                            }),
                            (e.prototype.resume = function () {
                                return __awaiter(this, void 0, Promise, function () {
                                    var t, i;
                                    return __generator(this, function (e) {
                                        switch (e.label) {
                                            case 0:
                                                if (((t = this._state), this._disabled || !this._canPauseAndContinue)) return [2];
                                                if (t !== n.WorkerState.paused) return [2];
                                                (this._state = n.WorkerState.resuming), (e.label = 1);
                                            case 1:
                                                return e.trys.push([1, 3, , 4]), [4, this.onResume()];
                                            case 2:
                                                return e.sent(), (this._state = n.WorkerState.running), this.onStateChanged(new a.WorkerStateChangedEventArgs(this.STATE_CHANGED, 'resume', n.WorkerState.running)), [3, 4];
                                            case 3:
                                                return (i = e.sent()), (this._state = t), this.onStateChanged(new a.WorkerStateChangedEventArgs(this.STATE_CHANGED, 'resume', t, i)), console.log('--- stop resume:---', i), [3, 4];
                                            case 4:
                                                return [2];
                                        }
                                    });
                                });
                            }),
                            (e.prototype.onPause = function () {
                                return __awaiter(this, void 0, Promise, function () {
                                    return __generator(this, function (e) {
                                        return [2];
                                    });
                                });
                            }),
                            (e.prototype.onResume = function () {
                                return __awaiter(this, void 0, Promise, function () {
                                    return __generator(this, function (e) {
                                        return [2];
                                    });
                                });
                            }),
                            (e.prototype.onStateChanged = function (e) {}),
                            (e.prototype.setPreSpeed = function (e) {}),
                            (e.prototype.reset = function () {}),
                            e
                        );
                    })();
                (i.WorkerBase = o), cc._RF.pop();
            },
            {
                './WorkerState': 'WorkerState',
                './WorkerStateChangedEventArgs': 'WorkerStateChangedEventArgs',
            },
        ],
        WorkerStateChangedEventArgs: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '5f4c4LnKNtDR4f/HzkrB9Op', 'WorkerStateChangedEventArgs'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = function (e, t, i, o) {
                    (this.type = e), (this.actionName = t), (this.state = i), (this.error = o);
                };
                (i.WorkerStateChangedEventArgs = o), cc._RF.pop();
            },
            {},
        ],
        WorkerState: [
            function (e, t, i) {
                'use strict';
                var o;
                cc._RF.push(t, '5d91d09vhxDR59a3lrpMPzJ', 'WorkerState'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    }),
                    ((o = i.WorkerState || (i.WorkerState = {}))[(o.stopped = 0)] = 'stopped'),
                    (o[(o.starting = 1)] = 'starting'),
                    (o[(o.running = 2)] = 'running'),
                    (o[(o.pausing = 3)] = 'pausing'),
                    (o[(o.paused = 4)] = 'paused'),
                    (o[(o.resuming = 5)] = 'resuming'),
                    (o[(o.stopping = 6)] = 'stopping'),
                    cc._RF.pop();
            },
            {},
        ],
        base64: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '720b934jBFL4pwnnvr4ST1F', 'base64'),
                    (i.default = function () {
                        (this._keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='),
                            (this.encode = function (e) {
                                var t,
                                    i,
                                    o,
                                    n,
                                    a,
                                    r,
                                    s,
                                    c = '',
                                    l = 0;
                                for (e = this._utf8_encode(e); l < e.length; ) (n = (t = e.charCodeAt(l++)) >> 2), (a = ((3 & t) << 4) | ((i = e.charCodeAt(l++)) >> 4)), (r = ((15 & i) << 2) | ((o = e.charCodeAt(l++)) >> 6)), (s = 63 & o), isNaN(i) ? (r = s = 64) : isNaN(o) && (s = 64), (c = c + this._keyStr.charAt(n) + this._keyStr.charAt(a) + this._keyStr.charAt(r) + this._keyStr.charAt(s));
                                return c;
                            }),
                            (this.decode = function (e) {
                                var t,
                                    i,
                                    o,
                                    n,
                                    a,
                                    r,
                                    s = '',
                                    c = 0;
                                for (e = e.replace(/[^A-Za-z0-9\+\/\=]/g, ''); c < e.length; ) (t = (this._keyStr.indexOf(e.charAt(c++)) << 2) | ((n = this._keyStr.indexOf(e.charAt(c++))) >> 4)), (i = ((15 & n) << 4) | ((a = this._keyStr.indexOf(e.charAt(c++))) >> 2)), (o = ((3 & a) << 6) | (r = this._keyStr.indexOf(e.charAt(c++)))), (s += String.fromCharCode(t)), 64 != a && (s += String.fromCharCode(i)), 64 != r && (s += String.fromCharCode(o));
                                return (s = this._utf8_decode(s));
                            }),
                            (this._utf8_encode = function (e) {
                                e = e.replace(/\r\n/g, '\n');
                                for (var t = '', i = 0; i < e.length; i++) {
                                    var o = e.charCodeAt(i);
                                    o < 128 ? (t += String.fromCharCode(o)) : (127 < o && o < 2048 ? (t += String.fromCharCode((o >> 6) | 192)) : ((t += String.fromCharCode((o >> 12) | 224)), (t += String.fromCharCode(((o >> 6) & 63) | 128))), (t += String.fromCharCode((63 & o) | 128)));
                                }
                                return t;
                            }),
                            (this._utf8_decode = function (e) {
                                for (var t = '', i = 0, o = 0, n = 0; i < e.length; ) (o = e.charCodeAt(i)) < 128 ? ((t += String.fromCharCode(o)), i++) : 191 < o && o < 224 ? ((n = e.charCodeAt(i + 1)), (t += String.fromCharCode(((31 & o) << 6) | (63 & n))), (i += 2)) : ((n = e.charCodeAt(i + 1)), (c3 = e.charCodeAt(i + 2)), (t += String.fromCharCode(((15 & o) << 12) | ((63 & n) << 6) | (63 & c3))), (i += 3));
                                return t;
                            });
                    }),
                    cc._RF.pop();
            },
            {},
        ],
        'cmg_pay_client.d': [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '2cc6er/b+RFTL1FUz6NffVG', 'cmg_pay_client.d'), cc._RF.pop();
            },
            {},
        ],
        'cmg_platform.d': [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '1f8ffGS/nJB6Y+fKq3uGKCe', 'cmg_platform.d'), cc._RF.pop();
            },
            {},
        ],
        'cmplay.2e834.d': [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '7eed3ZPTapIDJdsZoD5e59L', 'cmplay.2e834.d'), cc._RF.pop();
            },
            {},
        ],
        'configuration.d': [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '36ff2oc2WVMZ7hTOdv1m16d', 'configuration.d'), cc._RF.pop();
            },
            {},
        ],
        en: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '68a70EegqBHj5r4Z5wEL2XR', 'en'),
                    window.i18n || (window.i18n = {}),
                    window.i18n.languages || (window.i18n.languages = {}),
                    (window.i18n.languages.en = {
                        label_text: {
                            dialog_tips: 'Tips',
                            loading_music: 'Loading music resources ',
                            headphones: 'Best With Headphones ',
                            new_song_star: 'Start with your first song!',
                            little_star: 'Little Star',
                            little_star_play: 'Play',
                            view_more: 'View More',
                            invite: 'Invite',
                            home: 'Home',
                            music_lib: 'Music',
                            achievement: 'Rank',
                            level: 'Level',
                            unlock: 'required',
                            rank: 'Rank',
                            rank_share: 'Share',
                            rank_show_group: 'Challenge Friends',
                            rank_challenge: 'Challenge',
                            friend_best_score: 'Best Score',
                            not_ranked: 'Not Ranked',
                            game_bonus_time: 'Bonus Time',
                            game_endless_tiles: 'Endless tiles',
                            game_history_top: 'Best Score：',
                            game_select_boosters: 'Select boosters',
                            need: 'Need ',
                            to_exceed: 'to beat',
                            to_win1: 'to be',
                            champion: 'Champion',
                            runner_up: 'Runner-up',
                            second_runner_up: 'Second-runner-up',
                            get_star: ' more for',
                            get_new_best: 'to creat',
                            new_best: 'New Best',
                            revive_now: 'Revive now',
                            give_up: "Don't give up!\nLet's find your limit!",
                            revive_free: 'Revive for free',
                            revive_diamond: 'Revive now',
                            spfuh: 'Revive for free',
                            djtg: 'Skip',
                            jthk: 'can invite %s friends ',
                            hyzl: 'Revive by Inviting friends',
                            whether_to_continue: "Keep playing with a friend's help?",
                            wait_for_friends: 'has send，friend enter can help',
                            no_share_times_tips: "Today's invitation has been used up. Come back tomorrow",
                            no_diamond_tips: 'Not enough diamonds for revive',
                            nnnn: ' ',
                            single_champion: 'You won the championship！',
                            beat_frineds1: 'You beat ',
                            beat_frineds2: ' friends',
                            no_thanks: 'No thanks',
                            challenge_friends: 'Challenge Friends',
                            god_hand: 'Champion',
                            play_again: 'Play Again',
                            next: 'Next',
                            invite_tips: 'Invitation has been sent.It will unlock when newusers click in',
                            grade_unlock: 'LV %s unlock',
                            level_up: 'Level Up',
                            upgrade_rewards: 'Upgrade Rewards',
                            new_music_unlocked: 'New Music Unlocked',
                            receive_awards: 'Receive Rewards',
                            new_music_wnlocked: 'New Music Unlocked',
                            back: 'Back',
                            Energy: 'Get Energy',
                            time: 'time to next life: ',
                            free_energy: 'Free',
                            three_times: 'no times left',
                            Coins: 'Get Coins',
                            get_diamond: 'Get Diamonds',
                            free_diamond: 'Free',
                            share_fail: 'Sharing Failed',
                            group_get_diamond: 'Share to get diamonds',
                            share_success: 'Sharing Successed',
                            get_jiangli: 'Get',
                            zuanshijiangli: 'diamonds,go to challenge your limit',
                            ok: 'OK',
                            coupon_buy: 'discount',
                            watch_video_invite_tips: 'Watch video to get free diamonds',
                            invite_diamond_tips: 'invite friends to get free diamonds',
                            dia_video: 'no times left ',
                            diamonddouble: 'Double diamonds have been received',
                            doublefaila: 'Drop out the viedo,reward failed',
                            doublefailb: 'No video available, reward failed',
                            no_internet: 'leaderboards  currently unavailable currently, please check your network',
                            loading_failed: 'Loading failed.Please check the network and try again',
                            retry: 'retry',
                            nickname_avatar: "Can't get your nickname and avatar.Please turn on the authorization and try again",
                            cancel: 'cancel',
                            continue: 'Continue',
                            nothing: 'no',
                            unit1: '',
                            unit2: '',
                            more_songs: 'More songs to be expected...',
                            error: 'error message:',
                            jsjd: 'Progress:',
                            cyss: 'Players:',
                            bingxue_tangguo: 'Snow Candy',
                            yh: 'Obtained',
                            sx: 'New',
                            jlpmq: 'need xx more for top 50%',
                            jkhd: ' more for',
                            ssbd: 'Rank',
                            qbbd: 'view more',
                            ljtz: 'Challenge',
                            sycs: 'Times Left: ',
                            hzzj: 'invite friends to get more times ',
                            match_inv: 'No times left.You can get more chance by inviting friends to the competition.',
                            match_inv2: 'Challenge Friends',
                            chanllenge_rules: 'you need level %s to join the chanllenge game',
                            chanllenge_time_out: 'No challenge times left, you can play it tomorrow',
                            wfsm: 'Rules',
                            wfgz: 'Rule',
                            wfgz1: 'Refresh daily at 10:00 pm [San Francisco,United States]',
                            wfgz2: 'Players with the highest score of the challenge are ranked first.',
                            wfgz3: 'At the end of the ranking will be checked, the final ranking is based on actual accounting.',
                            wfgz4: 'Ranking awards are sent by email and are distributed within half an hour of completion',
                            wfgz5: 'Strict use of cheating tools in the game, found after verification to cancel the results and prohibit participation in the platform race',
                            pmjl: 'Reward',
                            pmjl1: 'The top 50% can get skin',
                            mc1: 'Champion',
                            mc2: 'Top 10',
                            mc3: 'Top 100',
                            mc4: 'Top 1000',
                            mc5: 'Top 5000',
                            mc6: 'Top 20%',
                            mc7: 'Top 50%',
                            hgjl: 'Crown Award',
                            star: 'star',
                            crown: 'crown',
                            gift1: 'Primary gift',
                            gift2: 'Intermediate gift',
                            gift3: 'Senior gift',
                            gift4: 'Luxury gift ',
                            gift5: 'Epic gift',
                            brph: 'Today',
                            hc: 'need %s point to be top %s ',
                            wcy: 'Uncommitted',
                            zrph: 'Yesterday',
                            wdzj: 'My record',
                            zjcj: 'Best result: ',
                            wlyc_djcs: 'Network error, click try again! ',
                            nodata_today: 'Today rank list has no score record,go to challenge! ',
                            nodata_yesterday: 'Yesterday rank list has no score record! ',
                            no_challenge: 'You have no records yet',
                            rank_group: 'challenge friends',
                            rank_group_click: 'challenge friends',
                            fhsy: 'Home',
                            cxtz: 'Play Again',
                            new_rank: 'latest ranking   ',
                            rank_into: 'ranking has into   ',
                            ranking: '%sth',
                            top: 'Top %s%',
                            out90: 'out 90%',
                            times: 'times',
                            top_percent: 'top %s%',
                            to_rank_need: '<color=#000000> need <color=#CC562D> %s more </color>to be %s </color>',
                            score: 'score',
                            can_get: 'can win ',
                            reward: 'reward ',
                            chanllenge_rank1: 'Perfect! Ranking 1th in the match!',
                            chanllenge: 'chanllenge',
                            chanllenge_times: 'you can also chanllenge %s times today',
                            zwyj: 'No messmessage yet.',
                            yjbl: 'Messages are kept for 7 days.',
                            jcyj: 'Checking the mailing list...',
                            wlyc: 'Network error, please try again later',
                            mail1: 'receive',
                            mail2: 'open',
                            mail3: 'received',
                            mail4: 'opened',
                            mailGet: 'Successfully received',
                            mtlc: 'refresh at 6:00 am every day',
                            gzsm: 'Rule Details',
                            gzsm1: 'Inviting friends successfully requires that friends should enter piano tiles 2 through your invitation message.',
                            gzsm2: 'You can get rewards upon each successful invitation.Inviting starter doubles the rewards.',
                            gzsm3: 'If you invite your friends successfully, they will also receive 2 diamonds as rewards ',
                            gzsm4: "If you have invited friends successfully 5 times a day,you can't receive rewards any more.",
                            share_reward_tips: 'need 5 persons ',
                            chongci: 'Trigger time: at the start of the game',
                            chongcixg: 'Prop effect: automatic sprint for 12 seconds',
                            bingdong: 'Trigger time: choose to use after Resurrection',
                            bingdongxg: 'Prop effect: the speed of the piano piece falling and falling speed in 15 seconds 50%',
                            hudun: 'Trigger time: when the operation is wrong',
                            hudunxg: 'Prop effect: offset error and invincible 8 seconds',
                            cc: 'Start with sprinting for 12s',
                            js: ' After the resurrection, slow down in 15s',
                            hd: 'Get through missed tiles for 1 time',
                            bj: 'The game uses deceleration props',
                            ljsy: 'use now',
                            sprint: 'sprint',
                            slow: 'slow down',
                            shield: 'shield',
                            day1: 'Day 1',
                            day2: 'Day 2',
                            day3: 'Day 3',
                            day4: 'Day 4',
                            day5: 'Day 5',
                            day6: 'Day 6',
                            day7: 'Day 7',
                            dia_gift: 'Diamond gift',
                            sign_more_gift: 'to get more reward in game',
                            sign: 'Sign',
                            signed: 'Signed',
                            diamond: 'Diamond',
                            piece: 'Piece',
                            own_dia: 'Obtained:',
                            skin_share: 'sharing gift',
                            sys_def: 'default',
                            use_now: 'current',
                            skin_unuse: 'set',
                            skin_trial: 'trial',
                            trial_end: 'Trial end',
                            skin_load: 'Loading skin files',
                            skin_tip: 'Tips',
                            skin_dia_less: 'More diamonds required, you can \nget diamonds in following ways',
                            skin_get: 'get',
                            skin_owned: 'acquired',
                            invite_get: 'obtain by inviting （%s/3）new players',
                            skin_ice: 'Snow Skin',
                            skin_cherry: 'Romantic Cherry',
                            skin_candy: 'Sweet Candy ',
                            skin_soccer: 'World Cup',
                            skin_field: 'Green Field',
                            skin_girl: 'Vivacious Girl',
                            skin_space: 'Space Journey',
                            skin_default: 'Default',
                            skin_sign_get: 'Sign 3 Days for free',
                            skin_first_charge_get: 'Sign 3 Days for free',
                            day: 'd',
                            hours: 'h',
                            freeGet: 'FreeGet',
                            pieceGet: 'PiecesGet',
                            music_tab1: 'Level',
                            music_tab2: 'Hot',
                            music_start: 'Play',
                            music_start1: '1 Play',
                            music_trial: 'Trial',
                            music_unlock: 'Unlock',
                            music_unlock_text1: '50 Unlock',
                            music_unlock_text2: '2 Trial',
                            music_invite_unlock: 'Invite',
                            music_invite_rule: 'Unlock by inviting 1 new player',
                            music_unlock_msg1: 'Need to get %s stars in level %s',
                            music_unlock_msg2: 'Level %s required',
                            music_unlock_msg3: 'Need to get %s crowns in level %s',
                            music_unlock_msg4: 'End point: %sd %sh %sm %ss',
                            lottery_prize1: 'Permanent skin',
                            lottery_prize2: 'Limit Skin',
                            lottery_rule: "Watch 15s' ad for a free wheel",
                            lottery_video: 'Watch the video completely to get rewards',
                            lottery_video_pick: 'close  continue',
                            lottery_reward_sprint: 'Get sprint props ，to use it in game',
                            lottery_waiting: 'Remaining waiting time：00：00：%s',
                            lottery_chance: 'No chance left today',
                            lottery_chance2: 'obtain draw opportunities without AD',
                            new_guide_theme: 'Game Description',
                            new_guide_text1: 'Progress：',
                            new_guide_text2: 'Complete all the goals, you are the piano master!',
                            new_guide_dialog_text: 'Congratulations! You have learned the skills of playing Piano Tiles2，click OK to start your first song',
                            new_guide_btn_text: 'Revive',
                            new_guide_revive_text: 'You missed the black tiles，this will lead to the failure of the game.',
                            new_guide_revive_text2: 'Tips',
                            ljdh: 'Exchange Now',
                            award_page_setting: 'use it>>',
                            award_page_morePieces: ' view>>',
                            award_page_SetSkinAtShop: 'You can use it at skin stroe',
                            award_page_getLowSpeedItem: 'Recieve slowDown props，to use it in game',
                            award_page_getShieldItem: 'Recieve shield props，to use it in game',
                            award_page_piecesTip: 'Collect pieces to get diamonds ',
                            award_page_giftTip: ' ',
                            award_page_transform_diamond: 'the skin have transformed into %s diamond',
                            award_page_award_get: 'reward have received, please check it',
                            award_page_video_diamond: 'video get more',
                            award_page_get_video_diamond: '2 diamonds receive',
                            award_page_close_video_diamond: 'close video early,reward failed',
                            award_page_no_video_diamond: 'no video available, reward failed',
                            unlocked: 'unlocked',
                            unlock_by_invite: 'unlock',
                            more_hot_song: 'more',
                            on_sale_1_day: '50% off today',
                            unlock_by_invite_1_new_palyer: 'need to invite 1 starter',
                            worth_diamond: 'worth %s diamonds',
                            Pieces_piano: 'Piano Pieces',
                            Pieces_reward: 'Collect pieces to get diamonds and skin',
                            Pieces_time: 'Refresh time: %sd%sh%sm%ss',
                            Pieces_get: 'obtain more pieces ',
                            Pieces_get_count: 'invite friends %s/5',
                            Pieces_rule: 'Rule',
                            Pieces_rule_det: 'Rule details',
                            Pieces_rule_one: 'Collecting piano pieces has opportunities to obtain best reward including 500 diamonds and 3,000 coins',
                            Pieces_rule_two: 'You can get piano pieces by daily checking in and opening the gift box in game.',
                            Pieces_rule_thr: 'You can get piano pieces by inviting 5 friends at most to enter the game every day.',
                            Pieces_rule_for: 'Refresh every 15 days .You can get 15 times rewards at most in 15 days. The pieces unused will be cleared. Please be sure to receive the reward before refreshing.',
                            Pieces_bonus: 'Collecting pieces to get numerous diamonds , to get more pieces',
                            Pieces_count_limit: 'You have received the max times,please wait next period',
                            Confirm: 'confirm',
                            Notification: 'TIPS',
                            pieces_obtain: 'Wow,pieces obtained!',
                            Pieces_obtain2: 'Collecting piano pieces can get diamonds package!',
                            pieces_obtain3: 'go！',
                            friend_help_reward: 'help success, reward one more challenge time',
                            friend_help_success_tip: 'help your friend success',
                            friend_help_success_tip2: 'reward',
                            friend_help_create_image: 'image generating ',
                            friend_help_save_failed: 'save failed',
                            unit_10k: '10k+',
                            get_pieces_tips: 'Wow,pieces obtained!',
                            left_help_times: '%s times left',
                            invitation_left_times: '%s  times left',
                            continue_invite: 'Invite more',
                            invite_success: 'Your friend',
                            more_diamond: 'More Diamond',
                            help_success: 'You assisted',
                            help_award_tip: '%successfully，and you obtained ',
                            invite_award_tip: '%shas accepted your invitation.You received %s diamonds! ',
                            same_friend_tip: 'your have used out the help chance today',
                            help_friend_timeout: 'You have used out the chance today',
                            start_game: 'start game',
                            unlock_tip: "You haven't unlocked this song，go unlock it!",
                            shop_tip: 'Tips',
                            shop_tip2: 'Store will come soon',
                            free: 'free',
                            prop_tip1: 'More coins required',
                            prop_tip2: 'More diamonds required',
                            mail_obtain: 'receive',
                            mail_read: 'open',
                            mail_have_read: 'read',
                            mail_have_obtain: 'received',
                            noadrevive: 'Exiting halfway, please try again',
                            noadrevivefree: 'No ADs available，please try again',
                            unlock_energy: 'Energy',
                            unlock_gold: 'Gold',
                            unlock_diamond: 'Diamonds',
                            unlock_unlockTips: 'Unlock',
                            unlock_play: 'play',
                            unlock_trial: 'trial',
                            unlock_str_plus: 'Not enough %s to %s',
                            update_piano: 'Updating piano resources...',
                            unlock_song: ' %s players unlock',
                            later: 'later',
                            challenge_Times_add: ' Your friend has sign in，reward you with one more chance of the competition',
                            Today_best: 'Best Score ',
                            limit_skin_title: 'Limit Skin',
                            limit_skin_content: 'The limit skin %s has expired, you can select a new skin at the skin store',
                            gkspsrdjlfb: 'gkspsrdjlfb',
                            amount: 'amount',
                            props_introduction: 'props introduction',
                            fech: 'friend enter can help',
                            atp: 'Auto tap props',
                            reff: 'Receive for free',
                            unbd: 'Unlock by gold coins',
                            litu: 'Limited time use',
                            wtvfdr: 'Watch the video for double rewards',
                            wwn: 'There is something wrong with network,please check it.',
                            evpm: 'Exiting video playback midway, reviving failed,please try again',
                            nvaa: 'No video ads available,reviving for free',
                            play_game_tips_close_video: 'close video early',
                            play_game_tips_no_ad: 'No video ads available, play now',
                        },
                    }),
                    cc._RF.pop();
            },
            {},
        ],
        example_table: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '6c859c74wFCWJUy2oHCco5L', 'example_table'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (t) {
                    function i() {
                        return (null !== t && t.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(i, t),
                        (i.prototype.getTableID = function () {
                            return 999999;
                        }),
                        (i.prototype.setPage = function (e) {
                            return e && t.prototype.set.call(this, 'page', e), this;
                        }),
                        (i.prototype.setAction = function (e) {
                            return e && t.prototype.set.call(this, 'action', e), this;
                        }),
                        (i.report = function (e, t) {
                            new i().setPage(e).setAction(t).reportData();
                        }),
                        i
                    );
                })(e('./BIReportI').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './BIReportI': 'BIReportI',
            },
        ],
        layout_utils: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '49ecbPM7I9Dp5BDqcSyRVdF', 'layout_utils'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e() {}
                    return (
                        (e.vertical_layout = function (e, t, i, o, n, a) {
                            return void 0 === o && (o = 1), void 0 === n && (n = 0), void 0 === a && (a = 0), [(e % o) * (t + n), -Math.floor(e / o) * (i + a)];
                        }),
                        (e.horizontal_layout = function (e, t, i, o, n, a) {
                            return void 0 === o && (o = 1), void 0 === n && (n = 0), void 0 === a && (a = 0), [Math.floor(e / o) * (t + n), (-e % o) * (i + a)];
                        }),
                        e
                    );
                })();
                (i.LayoutUtil = o), cc._RF.pop();
            },
            {},
        ],
        listview: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '6e7e5pnHedAs7EqtnlA4mxo', 'listview'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var s,
                    o,
                    c = e('./layout_utils'),
                    n = (function () {
                        function e(e) {
                            if (((this._selected_index = -1), (this.scrollview = e.scrollview), (this.mask = e.mask), (this.content = e.content), (this.item_tpl = e.item_tpl), (this.item_tpl.active = !1), (this.item_width = this.item_tpl.width), (this.item_height = this.item_tpl.height), (this.dir = e.direction || s.Vertical), (this.width = e.width || this.mask.width), (this.height = e.height || this.mask.height), (this.gap_x = e.gap_x || 0), (this.gap_y = e.gap_y || 0), (this.row = e.row || 1), (this.col = e.column || 1), (this.cb_host = e.cb_host), (this.item_setter = e.item_setter), (this.recycle_cb = e.recycle_cb), (this.select_cb = e.select_cb), (this.select_setter = e.select_setter), (this.scroll_to_end_cb = e.scroll_to_end_cb), (this.auto_scrolling = e.auto_scrolling || !1), (this.node_pool = []), this.dir == s.Vertical)) {
                                var t = (this.item_width + this.gap_x) * this.col - this.gap_x;
                                t > this.width && (cc.info('real width > width, resize scrollview to realwidth,', this.width, '->', t), (this.width = t)), (this.content.width = this.width);
                            } else {
                                var i = (this.item_height + this.gap_y) * this.row - this.gap_y;
                                i > this.height && (cc.info('real height > height, resize scrollview to realheight,', this.height, '->', i), (this.height = i)), (this.content.height = this.height);
                            }
                            this.mask.setContentSize(this.width, this.height), this.mask.addComponent(cc.Mask), this.scrollview.node.setContentSize(this.width, this.height), (this.scrollview.vertical = this.dir == s.Vertical), (this.scrollview.horizontal = this.dir == s.Horizontal), (this.scrollview.inertia = !0), this.scrollview.node.on('scrolling', this.on_scrolling, this), this.scrollview.node.on('scroll-to-bottom', this.on_scroll_to_end, this), this.scrollview.node.on('scroll-to-right', this.on_scroll_to_end, this);
                        }
                        return (
                            (e.prototype.on_scroll_to_end = function () {
                                this.scroll_to_end_cb && this.scroll_to_end_cb.call(this.cb_host);
                            }),
                            (e.prototype.on_scrolling = function () {
                                if (this.items && this.items.length)
                                    if (this.dir == s.Vertical) {
                                        var e = this.content.y;
                                        e < 0 && (e = 0), e > this.content.height - this.height && (e = this.content.height - this.height);
                                        for (var t = 0, i = this.items.length - 1, o = (a = -e) - this.height; this.items[t].y - this.item_height > a; ) t++;
                                        for (; this.items[i].y < o; ) i--;
                                        t != this.start_index && i != this.stop_index && ((this.start_index = t), (this.stop_index = i), this.render_items());
                                    } else {
                                        var n = this.content.x;
                                        0 < n && (n = 0), n < this.width - this.content.width && (n = this.width - this.content.width);
                                        var a;
                                        for (t = 0, i = this.items.length - 1, o = (a = -n) + this.width; this.items[t].x + this.item_width < a; ) t++;
                                        for (; this.items[i].x > o; ) i--;
                                        t != this.start_index && i != this.stop_index && ((this.start_index = t), (this.stop_index = i), this.render_items());
                                    }
                            }),
                            (e.prototype.select_item = function (e) {
                                e != this._selected_index && (-1 != this._selected_index && this.inner_select_item(this._selected_index, !1), this.inner_select_item(e, !0));
                            }),
                            (e.prototype.inner_select_item = function (e, t) {
                                var i = this.items[e];
                                i ? ((i.is_select = t), i.node && this.select_setter && this.select_setter.call(this.cb_host, i.node, t, e), t && ((this._selected_index = e), this.select_cb && this.select_cb.call(this.cb_host, i.data, e))) : cc.warn('inner_select_item index is out of range{', 0, this.items.length - 1, '}', e);
                            }),
                            (e.prototype.spawn_node = function (e) {
                                var t = this.node_pool.pop();
                                return t || ((t = cc.instantiate(this.item_tpl)).active = !0), (t.parent = this.content), t;
                            }),
                            (e.prototype.recycle_item = function (e, t) {
                                void 0 === t && (t = !1), e.node && cc.isValid(e.node) && (this.recycle_cb && this.recycle_cb.call(this.cb_host, e.node), e.node.removeFromParent(t), this.node_pool.push(e.node), (e.node = null));
                            }),
                            (e.prototype.clear_items = function (t) {
                                var i = this;
                                void 0 === t && (t = !1),
                                    this.items &&
                                        this.items.forEach(function (e) {
                                            i.recycle_item(e, t);
                                        });
                            }),
                            (e.prototype.render_items = function () {
                                for (var e, t = 0; t < this.start_index; t++) (e = this.items[t]).node && this.recycle_item(e);
                                for (t = this.items.length - 1; t > this.stop_index; t--) (e = this.items[t]).node && this.recycle_item(e);
                                for (t = this.start_index; t <= this.stop_index; t++) (e = this.items[t]).node || ((e.node = this.spawn_node(t)), this.item_setter.call(this.cb_host, e.node, e.data, t), this.select_setter && this.select_setter.call(this.cb_host, e.node, e.is_select, t)), e.node.setPosition(e.x, e.y);
                            }),
                            (e.prototype.pack_item = function (e) {
                                return {
                                    x: 0,
                                    y: 0,
                                    data: e,
                                    node: null,
                                    is_select: !1,
                                };
                            }),
                            (e.prototype.layout_items = function (e) {
                                for (var t, i, o = e, n = this.items.length; o < n; o++) {
                                    var a = this.items[o];
                                    this.dir == s.Vertical ? ((t = c.LayoutUtil.vertical_layout(o, this.item_width, this.item_height, this.col, this.gap_x, this.gap_y)), (a.x = t[0]), (a.y = t[1])) : ((i = c.LayoutUtil.horizontal_layout(o, this.item_width, this.item_height, this.row, this.gap_x, this.gap_y)), (a.x = i[0]), (a.y = i[1]));
                                }
                            }),
                            (e.prototype.resize_content = function () {
                                if (this.items.length <= 0) return (this.content.width = 0), void (this.content.height = 0);
                                var e = this.items[this.items.length - 1];
                                this.dir == s.Vertical ? (this.content.height = Math.max(this.height, this.item_height - e.y)) : (this.content.width = Math.max(this.width, e.x + this.item_width));
                            }),
                            (e.prototype.get_data = function () {
                                return this.items;
                            }),
                            (e.prototype.refresh_all = function () {
                                this._datas && this.set_data(this._datas, !1);
                            }),
                            (e.prototype.set_data = function (e, t) {
                                var i = this;
                                void 0 === t && (t = !1),
                                    this.clear_items(t),
                                    (this.items = []),
                                    (this._datas = e).forEach(function (e) {
                                        var t = i.pack_item(e);
                                        i.items.push(t);
                                    }),
                                    this.layout_items(0),
                                    this.resize_content(),
                                    (this.start_index = -1),
                                    (this.stop_index = -1),
                                    this.dir == s.Vertical ? (this.content.y = 0) : (this.content.x = 0),
                                    0 < this.items.length && this.on_scrolling();
                            }),
                            (e.prototype.insert_data = function (e) {
                                for (var t, i, o = this, n = [], a = 1; a < arguments.length; a++) n[a - 1] = arguments[a];
                                if (0 != n.length)
                                    if ((this.items || (this.items = []), this._datas || (this._datas = []), e < 0 || e > this.items.length)) cc.warn('invalid index', e);
                                    else {
                                        var r = e == this.items.length,
                                            s = [];
                                        n.forEach(function (e) {
                                            var t = o.pack_item(e);
                                            s.push(t);
                                        }),
                                            (t = this._datas).splice.apply(t, [e, 0].concat(n)),
                                            (i = this.items).splice.apply(i, [e, 0].concat(s)),
                                            this.layout_items(e),
                                            this.resize_content(),
                                            (this.start_index = -1),
                                            (this.stop_index = -1),
                                            this.auto_scrolling && r && this.scroll_to_end(),
                                            this.on_scrolling();
                                    }
                                else cc.info('nothing to insert');
                            }),
                            (e.prototype.remove_data = function (e, t) {
                                var i = this;
                                if ((void 0 === t && (t = 1), this.items))
                                    if (e < 0 || e >= this.items.length) cc.warn('invalid index', e);
                                    else if (t < 1) cc.info('nothing to remove');
                                    else {
                                        var o = this.items.length,
                                            n = this.items.splice(e, t);
                                        this._datas.splice(e, t),
                                            n.forEach(function (e) {
                                                i.recycle_item(e);
                                            }),
                                            e + t < o && this.layout_items(e),
                                            this.resize_content(),
                                            0 < this.items.length && ((this.start_index = -1), (this.stop_index = -1), this.on_scrolling());
                                    }
                                else cc.info('call set_data before call this method');
                            }),
                            (e.prototype.append_data = function () {
                                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                                this.items || (this.items = []), this.insert_data.apply(this, [this.items.length].concat(e));
                            }),
                            (e.prototype.scroll_to = function (e) {
                                if (this.dir == s.Vertical) {
                                    var t = this.height - this.content.height;
                                    if (0 <= t) return void cc.info('no need to scroll');
                                    var i = c.LayoutUtil.vertical_layout(e, this.item_width, this.item_height, this.col, this.gap_x, this.gap_y),
                                        o = (i[0], i[1]);
                                    o < t && ((o = t), cc.info('content reach bottom')), 0 < o && ((o = 0), cc.info('content reach top')), this.scrollview.setContentPosition(cc.v2(this.content.getPositionX(), -o)), this.on_scrolling();
                                } else {
                                    var n = this.content.width - this.width;
                                    if (n <= 0) return void cc.info('no need to scroll');
                                    var a = c.LayoutUtil.horizontal_layout(e, this.item_width, this.item_height, this.row, this.gap_x, this.gap_y),
                                        r = a[0];
                                    a[1];
                                    n < r && ((r = n), cc.info('content reach right')), r < 0 && ((r = 0), cc.info('content reach left')), this.scrollview.setContentPosition(cc.v2(-r, this.content.getPositionY())), this.on_scrolling();
                                }
                            }),
                            (e.prototype.scroll_to_end = function () {
                                this.dir == s.Vertical ? this.scrollview.scrollToBottom() : this.scrollview.scrollToRight();
                            }),
                            (e.prototype.refresh_item = function (e, t) {
                                if (this.items)
                                    if (e < 0 || e >= this.items.length) cc.warn('invalid index', e);
                                    else {
                                        var i = this.items[e];
                                        (i.data = t), (this._datas[e] = t), i.node && (this.recycle_cb && this.recycle_cb.call(this.cb_host, i.node), this.item_setter.call(this.cb_host, i.node, i.data, e));
                                    }
                                else cc.info('call set_data before call this method');
                            }),
                            (e.prototype.destroy = function () {
                                this.clear_items(),
                                    this.node_pool.forEach(function (e) {
                                        e.destroy();
                                    }),
                                    (this.node_pool = null),
                                    (this.items = null),
                                    (this._datas = null),
                                    cc.isValid(this.scrollview.node) && (this.scrollview.node.off('scrolling', this.on_scrolling, this), this.scrollview.node.off('scroll-to-bottom', this.on_scroll_to_end, this), this.scrollview.node.off('scroll-to-right', this.on_scroll_to_end, this));
                            }),
                            Object.defineProperty(e.prototype, 'datas', {
                                get: function () {
                                    return this._datas;
                                },
                                enumerable: !0,
                                configurable: !0,
                            }),
                            Object.defineProperty(e.prototype, 'selected_index', {
                                get: function () {
                                    return this._selected_index;
                                },
                                enumerable: !0,
                                configurable: !0,
                            }),
                            Object.defineProperty(e.prototype, 'selectd_data', {
                                get: function () {
                                    var e = this.items[this._selected_index];
                                    return e ? e.data : null;
                                },
                                enumerable: !0,
                                configurable: !0,
                            }),
                            e
                        );
                    })();
                (i.ListView = n), ((o = s = i.ListViewDir || (i.ListViewDir = {}))[(o.Vertical = 1)] = 'Vertical'), (o[(o.Horizontal = 2)] = 'Horizontal'), cc._RF.pop();
            },
            {
                './layout_utils': 'layout_utils',
            },
        ],
        m_p2_DL: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '773cbx0QxdAuotbAGIB1tX3', 'm_p2_DL'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./BIReportI'),
                    n = e('../util/StringUtil'),
                    a = (function (e) {
                        function i() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(i, e),
                            (i.reset = function () {
                                (this.downloadType = ''), (this.downloadSize = 0), (this.downloadTotalSize = 0), (this.downloadStatus = ''), (this.localVersion = ''), (this.resType = ''), (this.mShowTime = Date.now());
                            }),
                            (i.prototype.getTableID = function () {
                                return 201;
                            }),
                            (i.setDownloadType = function (e) {
                                this.downloadType = e ? '1' : '2';
                            }),
                            (i.setDownloadTotalSize = function (e) {
                                this.downloadTotalSize = e;
                            }),
                            (i.setDownloadSize = function (e) {
                                this.downloadSize = e;
                            }),
                            (i.setDownloadStatus = function (e) {
                                this.downloadStatus = e ? '1' : '2';
                            }),
                            (i.setLocalVersion = function (e) {
                                n.StringUtil.isNullOrUndefined(e) ? (this.localVersion = '') : (this.localVersion = e);
                            }),
                            (i.setResType = function (e) {
                                this.resType = e;
                            }),
                            (i.start = function () {
                                cc.sys.platform == cc.sys.WECHAT_GAME && i.reset();
                            }),
                            (i.report = function () {
                                if (cc.sys.platform == cc.sys.WECHAT_GAME) {
                                    var e = new i(),
                                        t = Date.now() - this.mShowTime;
                                    e.set('download_type', this.downloadType), e.set('download_size', this.downloadSize), e.set('download_allsize', this.downloadTotalSize), e.set('download_time', t), e.set('download_status', this.downloadStatus), e.set('res_version', this.localVersion), e.set('download_res_type', this.resType), e.reportData();
                                }
                            }),
                            i
                        );
                    })(o.default);
                (i.default = a), cc._RF.pop();
            },
            {
                '../util/StringUtil': 'StringUtil',
                './BIReportI': 'BIReportI',
            },
        ],
        m_p2_HMusic_laxin: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'abe410MNWFNO6+U1dWRMpWU', 'm_p2_HMusic_laxin'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (e) {
                    function o() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(o, e),
                        (o.prototype.getTableID = function () {
                            return 181;
                        }),
                        (o.prototype.setAction = function (e) {
                            return this.set('action', e), this;
                        }),
                        (o.prototype.setSource = function (e) {
                            return this.set('source', e), this;
                        }),
                        (o.prototype.setMusicId = function (e) {
                            return this.set('music_id', e), this;
                        }),
                        (o.report = function (e, t, i) {
                            new o().setSource(e).setAction(t).setMusicId(i).reportData();
                        }),
                        (o.ACTION_SHOW = 1),
                        (o.ACTION_CLICK_INVITE_FRIEND = 2),
                        (o.ACTION_CLICK_CLOSE = 3),
                        (o.ACTION_CLICK_DIAMOND_FRIEND = 4),
                        (o.ACTION_CLICK_TO_HOT_SONG = 5),
                        (o.SOURCE_GAMEOVER = 1),
                        (o.SOURCE_CHALLENGE_RESULT = 2),
                        (o.SOURCE_HOT_MUSIC_RESULT = 3),
                        o
                    );
                })(e('./BIReportI').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './BIReportI': 'BIReportI',
            },
        ],
        m_p2_PData_Dia: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'f67e1iwC+xEWZvxgsYqtZkk', 'm_p2_PData_Dia'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (t) {
                    function o() {
                        return (null !== t && t.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(o, t),
                        (o.prototype.getTableID = function () {
                            return 146;
                        }),
                        (o.prototype.setDiamondCount = function (e) {
                            return t.prototype.set.call(this, 'dia_num', e), this;
                        }),
                        (o.prototype.setSource = function (e) {
                            return t.prototype.set.call(this, 'source', e), this;
                        }),
                        (o.prototype.setAction = function (e) {
                            return t.prototype.set.call(this, 'action', e), this;
                        }),
                        (o.report = function (e, t, i) {
                            new o().setAction(i).setSource(t).setDiamondCount(e).reportData(), console.log('minigame_piano2_playerdata_diamond dimondCount : ' + e + ' source : ' + t + ' action : ' + i);
                        }),
                        (o.ACTION_GET_DIAMOND = 1),
                        (o.ACTION_CONSUME_DIAMOND = 2),
                        (o.SOURCE_HOMEPAGE_TOP_SHARE_GET = 101),
                        (o.SOURCE_GAME_GIFT_BOX_GET = 102),
                        (o.SOURCE_RELIVE_SHARE_GET = 103),
                        (o.SOURCE_HOME_RANK_INVITE_FRIENT_GET = 104),
                        (o.SOURCE_RANK_SHARE_GROUP_GET = 105),
                        (o.SOURCE_GAME_OVER_CHALLENGE_GET = 106),
                        (o.SOURCE_INVITER_GET_REWARD = 107),
                        (o.SOURCE_INVITEE_GET_REWARD = 108),
                        (o.SOURCE_GIFT_BOX_GET_REWARD = 109),
                        (o.SOURCE_GET_ALL_JIGSAW = 110),
                        (o.SOURCE_DAILY_ATTENDANCE = 111),
                        (o.SOURCE_HOME_WATCH_VIDEO_GET_DIAMOND = 112),
                        (o.SOURCE_GET_LOTTERY = 113),
                        (o.SOURCE_HOME_INVITATIONCODE_GET_DIAMOND = 115),
                        (o.SOURCE_BUY_VIP_GET_DIAMOND = 116),
                        (o.SOURCE_VIP_DAILY_GET_DIAMOND = 117),
                        (o.SOURCE_BUY_GOLD_USE = 201),
                        (o.SOURCE_RELIVE_USE = 202),
                        (o.SOURCE_BUY_SKIN = 203),
                        (o.SOURCE_BUG_HOTO_MUSIC = 204),
                        o
                    );
                })(e('./BIReportI').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './BIReportI': 'BIReportI',
            },
        ],
        m_p2_PData: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'f7d11KK/RZGt4tHq0xONwGl', 'm_p2_PData'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (e) {
                    function h() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(h, e),
                        (h.prototype.getTableID = function () {
                            return 144;
                        }),
                        (h.prototype.setSurvivalTime = function (e) {
                            this.set('survival_time', e);
                        }),
                        (h.prototype.setPlayerLevel = function (e) {
                            this.set('player_level', e);
                        }),
                        (h.prototype.setExpNum = function (e) {
                            this.set('exp_num', e);
                        }),
                        (h.prototype.setCoinNum = function (e) {
                            this.set('coin_num', e);
                        }),
                        (h.prototype.setLifeNum = function (e) {
                            this.set('life_num', e);
                        }),
                        (h.prototype.setDiamondtNum = function (e) {
                            this.set('dia_num', e);
                        }),
                        (h.prototype.setCrownNumLeaderboard = function (e) {
                            this.set('crown_num_leadboard', e);
                        }),
                        (h.prototype.setStarNumLeaderboard = function (e) {
                            this.set('star_num_leadboard', e);
                        }),
                        (h.prototype.setState = function (e) {
                            this.set('state', e);
                        }),
                        (h.prototype.setSkin = function (e) {
                            this.set('skin', e);
                        }),
                        (h.prototype.setSkinNum = function (e) {
                            this.set('skin_num', e);
                        }),
                        (h.prototype.setHotSongNum = function (e) {
                            this.set('hotsong_num', e);
                        }),
                        (h.report = function (e, t, i, o, n, a, r, s, c, l, u, d) {
                            var p = new h();
                            p.setSurvivalTime(t), p.setPlayerLevel(i), p.setExpNum(o), p.setCoinNum(n), p.setLifeNum(a), p.setDiamondtNum(r), p.setCrownNumLeaderboard(s), p.setStarNumLeaderboard(c), p.setState(l), p.setSkin(u), p.setSkinNum(d), p.setHotSongNum(0), p.reportData();
                        }),
                        (h.COLD_AWAKE = 1),
                        (h.HOT_AWAKE = 2),
                        (h.QUIT = 3),
                        (h.ENTER_GAME = 1),
                        (h.EXIT_GAME = 2),
                        h
                    );
                })(e('./BIReportI').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './BIReportI': 'BIReportI',
            },
        ],
        m_p2_Uaction: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '06c15HPqLhOSJn2lLYK7DW6', 'm_p2_Uaction'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (t) {
                    function i() {
                        return (null !== t && t.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(i, t),
                        (i.prototype.getTableID = function () {
                            return 149;
                        }),
                        (i.prototype.setMusicId = function (e) {
                            return t.prototype.set.call(this, 'music_id', e), this;
                        }),
                        (i.prototype.setAction = function (e) {
                            return t.prototype.set.call(this, 'action', e), this;
                        }),
                        (i.report = function (e, t) {
                            new i().setAction(t).setMusicId(e).reportData();
                        }),
                        (i.ACTION_CLICK_PERMISSION_AGREE = 101),
                        (i.ACTION_CLICK_PERMISSION_REJECT = 102),
                        (i.ACTION_SHOW_FIRST_LITTLE_STAR = 104),
                        (i.ACTION_CLICK_FIRST_LITTLE_START_START = 105),
                        (i.ACTION_CLICK_HOME_AVATOR = 201),
                        (i.ACTION_CLICK_ENERGY = 202),
                        (i.ACTION_CLICK_GOLD = 203),
                        (i.ACTION_CLICK_DIAMOND = 204),
                        (i.ACTION_SHOW_HOME_TAB = 301),
                        (i.ACTION_CLICK_HOME_START = 302),
                        (i.ACTION_CLICK_HOME_RANK_SEE_ALL = 303),
                        (i.ACTION_CLICK_HOME_RANK_INVITE = 304),
                        (i.ACTION_SHOW_PERMISSION_DIALOG_AVATOR = 306),
                        (i.ACTION_CLICK_PERMISSION_DIALOG_AVATOR_AGREE = 307),
                        (i.ACTION_OPEN_PERMISSION_SUCC_AVATOR = 308),
                        (i.ACTION_SHARE_FOR_GIFT = 309),
                        (i.ACTION_CLICK_PLAYER_CYCLE = 310),
                        (i.ACTION_CLICK_JIGSAW_PUZZLE = 311),
                        (i.ACTION_CLICK_SKIN_STORE = 312),
                        (i.ACTION_CLICK_DAILY_ATTENDANCE = 313),
                        (i.ACTION_CLICK_GIFT_EXCHANGE = 328),
                        (i.ACTION_CLICK_MGPLUGIN_GAME = 314),
                        (i.ACTION_CLICK_HOT_MUSIC = 315),
                        (i.ACTION_CLICK_SHOP = 316),
                        (i.ACTION_SHOW_FIRST_PAY = 320),
                        (i.ACTION_CLICK_FIRST_PAY = 321),
                        (i.ACTION_SHOW_QQ_RED_PACKET = 322),
                        (i.ACTION_CLICK_QQ_RED_PACKET = 323),
                        (i.ACION_CLICK_FULI_BTN = 325),
                        (i.ACTION_CLICK_QQ_GAME = 318),
                        (i.ACTION_CLICK_NEW_TARGET = 319),
                        (i.ACTION_CLICK_CHAT = 345),
                        (i.ACTION_SHOW_LOTTERY_ICON = 329),
                        (i.ACTION_CLICK_LOTTERY_ICON = 330),
                        (i.ACTION_SHOW_WELFARE_LOTTERY_ICON = 331),
                        (i.ACTION_CLICK_WELFARE_LOTTERY_ICON = 332),
                        (i.ACTION_SHOW_LOTTERY_FRAME = 333),
                        (i.ACTION_CLICK_LOTTERY_START = 334),
                        (i.ACTION_SHOW_VIP_ICON = 335),
                        (i.ACTION_CLICK_VIP_ICON = 336),
                        (i.ACTION_SHOW_NORMAL_MUSIC_UNLOCK_ALL = 337),
                        (i.ACTION_CLICK_NORMAL_MUSIC_UNLOCK_ALL = 338),
                        (i.ACTION_SHOW_HOT_MUSIC_SALE_ALL = 339),
                        (i.ACTION_CLICK_HOT_MUSIC_SALE_ALL = 340),
                        (i.ACTION_SHOW_SKIN_PIECE_WITHOUT_GET = 341),
                        (i.ACTION_SHOW_SKIN_PIECE_WITH_GET = 342),
                        (i.ACTION_CLICK_SKIN_PIECE = 343),
                        (i.ACTION_SHOW_MUSICLIB_TAB = 401),
                        (i.ACTION_CLICK_MUSICLIB_START = 402),
                        (i.ACTION_CLICK_MUSICLIB_RANK = 403),
                        (i.ACTION_SHOW_RANK = 501),
                        (i.ACTION_CLICK_SEE_GROUP_RANK = 502),
                        (i.ACTION_CLICK_XUANYAO = 503),
                        (i.ACTION_SHOW_SKIN_SPLASH = 601),
                        (i.ACTION_CLICK_SKIN_SPLASH = 602),
                        (i.ACTION_SHOW_INVITEE_DIALOG = 603),
                        (i.ACTION_INVITEE_DIALOG_CLICK = 604),
                        (i.ACTION_SHOW_INVITER_DIALOG = 605),
                        (i.ACTION_INVITER_DIALOG_CLICK = 606),
                        (i.ACTION_SHOW_MAIL_ICON = 701),
                        (i.ACTION_CLICK_MAIL_ICON = 702),
                        (i.ACTION_SHOW_MAIL_ITEM_RECEIVE = 703),
                        (i.ACTION_CLICK_MAIL_ITEM_RECEIVE = 704),
                        (i.ACTION_CLICK_MAIL_INFO_RECEIVE = 705),
                        (i.ACTION_SHOW_MAIL_ITEM_CHECK = 706),
                        (i.ACTION_CLICK_MAIL_ITEM_CHECK = 707),
                        (i.ACTION_HOMEPAGE_RECOMMEND_GAME_SHOW_A = 1001),
                        (i.ACTION_HOMEPAGE_RECOMMEND_GAME_CLICK_A = 1002),
                        (i.ACTION_HOMEPAGE_RECOMMEND_GAME_SHOW_B = 1003),
                        (i.ACTION_HOMEPAGE_RECOMMEND_GAME_CLICK_B = 1004),
                        (i.ACTION_SHOW_CHALLENGE_COMPETITION = 801),
                        (i.ACTION_CLICK_CHALLENGE_COMPETITION = 802),
                        (i.ACTION_SHOW_HOT_SONG_SPLASH = 901),
                        (i.ACTION_HOT_SONG_SPLASH_PLAY = 902),
                        (i.ACTION_CLICK_FIGHT = 1101),
                        (i.ACTION_CLICK_FRIEND_FIGHT = 1102),
                        (i.ACTION_1111_BUTTON_SHOWN = 1103),
                        (i.ACTION_1111_BUTTON_CLICKED = 1104),
                        (i.ACTION_1111_DIALOG_SHOWN = 1105),
                        (i.ACTION_1111_COPY_BUTTON_CLICKED = 1106),
                        (i.ACTION_1111_COPY_SUCCESSFUL = 1107),
                        (i.ACTION_FOLLOW_ICON_SHOW = 1110),
                        (i.ACTION_FOLLOW_ICON_CLICK = 1111),
                        (i.ACTION_FOLLOW_DIALOG_SHOW = 1112),
                        (i.ACTION_FOLLOW_DIALOG_CLICK = 1113),
                        (i.ACTION_FOLLOW_DIALOG_CLOSE = 1114),
                        (i.ACTION_GAMEBOX_BUTTON_SHOW = 1115),
                        (i.ACTION_GAMEBOX_BUTTON_CLICK = 1116),
                        (i.ACTION_CLICK_2_UNCHECK = 1117),
                        (i.ACTION_CLICK_2_CHECK = 1118),
                        i
                    );
                })(e('./BIReportI').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './BIReportI': 'BIReportI',
            },
        ],
        m_p2_daily_activity: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '379f85/EYpKi7ON3zABdCPT', 'm_p2_daily_activity'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (e) {
                    function i() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(i, e),
                        (i.prototype.getTableID = function () {
                            return 237;
                        }),
                        (i.prototype.setAction = function (e) {
                            return this.set('action', e), this;
                        }),
                        (i.prototype.setSource = function (e) {
                            return this.set('source', e), this;
                        }),
                        (i.report = function (e, t) {
                            new i().setSource(e).setAction(t).reportData();
                        }),
                        (i.ACTION_SHOW = 1),
                        (i.ACTION_CLICK_ATTENTION_TAB = 2),
                        (i.ACTION_CLICK_SKIN_TAB = 3),
                        (i.ACTION_CLICK_FIRST_PAY_TAB = 4),
                        (i.ACTION_CLICK_TRIAL_TAB = 5),
                        (i.ACTION_CLICK_TIME_GIFT = 6),
                        (i.ACTION_SHOW_ATTENTION = 101),
                        (i.ACTION_CLICK_GET = 102),
                        (i.ACTION_SHOW_SKIN = 201),
                        (i.ACTION_CLICK_TRY = 202),
                        (i.ACTION_CLICK_SHARE = 203),
                        (i.ACTION_CLICK_SAVE = 204),
                        (i.ACTION_SHOW_FIRST_PAY = 301),
                        (i.ACTION_CLICK_SHOP = 302),
                        (i.ACTION_SHOW_TRIAL = 401),
                        (i.ACTION_SHOW_TIME_GIFT = 501),
                        (i.ACTION_TIME_GIFT_CLICK_TRY = 502),
                        (i.ACTION_TIME_GIFT_CLICK_UNLOCK = 503),
                        (i.ACTION_TAP_SHOW_COVER = 504),
                        (i.ACTION_TIME_GIFT_TASK1_GAIN = 511),
                        (i.ACTION_TIME_GIFT_TASK2_GO = 521),
                        (i.ACTION_TIME_GIFT_TASK2_GAIN = 522),
                        (i.ACTION_TIME_GIFT_TASK3_GO = 531),
                        (i.ACTION_TIME_GIFT_TASK3_GAIN = 532),
                        (i.SOURCE_HOME_PAGE_CLICK = 1),
                        (i.SOURCE_SKIN_INVITE_SHOW = 2),
                        (i.SOURCE_HOME_INVITE_SHOW = 3),
                        (i.SOURCE_SHOP_FIRST_PAY_AUTO_SHOW = 4),
                        (i.SOURCE_SKIN_FIRST_PAY_SHOW = 5),
                        (i.SOURCE_ENTER_FROM_ATTENTION = 6),
                        (i.SOURCE_SKIN_INVITE_AUTO_SHOW = 7),
                        (i.SOURCE_COLD_BOOT_POP = 8),
                        (i.SOURCE_SKIN_ATTENTION_SHOW = 9),
                        i
                    );
                })(e('./BIReportI').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './BIReportI': 'BIReportI',
            },
        ],
        m_p2_load_f: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '0a6d6N9G2hKyZ2jBYZ4tFxl', 'm_p2_load_f'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (t) {
                    function i() {
                        return (null !== t && t.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(i, t),
                        (i.prototype.getTableID = function () {
                            return 134;
                        }),
                        (i.prototype.setSource = function (e) {
                            return t.prototype.set.call(this, 'source', e), this;
                        }),
                        (i.prototype.setMessage = function (e) {
                            return t.prototype.set.call(this, 'message', e), this;
                        }),
                        (i.report = function (e, t) {
                            new i().setSource(e).setMessage(t).reportData();
                        }),
                        i
                    );
                })(e('./BIReportI').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './BIReportI': 'BIReportI',
            },
        ],
        m_p2_pk_action: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '4f53bBDE3FHkZJ0pMrIysVN', 'm_p2_pk_action'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (t) {
                    function i() {
                        return (null !== t && t.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(i, t),
                        (i.prototype.getTableID = function () {
                            return 209;
                        }),
                        (i.prototype.setAction = function (e) {
                            return t.prototype.set.call(this, 'action', e), this;
                        }),
                        (i.report = function (e) {
                            new i().setAction(e).reportData();
                        }),
                        (i.ACTION_SHOW_FIGHT_MAIN = 1),
                        (i.ACTION_CLICK_MATCHING = 2),
                        (i.ACTION_GO_TO_GAME = 3),
                        (i.ACTION_MATCHING_TIME_OUT = 4),
                        (i.ACTION_CLICK_RANK = 11),
                        (i.ACTION_CLICK_SEASON_REWARD = 12),
                        (i.ACTION_CLICK_RULE = 13),
                        (i.ACTION_CLICK_LEFT_PROP = 21),
                        (i.ACTION_CLICK_MIDDLE_PROP = 22),
                        (i.ACTION_CLICK_RIGHT_PROP = 23),
                        (i.ACTION_SHOW_FRIEND_FIGHT_MATCHING = 31),
                        (i.ACTION_CLICK_INVITE_AGAIN = 32),
                        (i.ACTION_SHOW_GET_DAILY_REWARD = 41),
                        (i.ACTION_CLICK_GET_DAILY_REWARD = 42),
                        (i.ACTION_GET_DAILY_REWARD_SUCCESS = 43),
                        i
                    );
                })(e('./BIReportI').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './BIReportI': 'BIReportI',
            },
        ],
        m_p2_pop_coin: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '0ea9fNYzilDXoCtDD96qjmM', 'm_p2_pop_coin'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (t) {
                    function o() {
                        return (null !== t && t.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(o, t),
                        (o.prototype.setAction = function (e) {
                            return t.prototype.set.call(this, 'action', e), this;
                        }),
                        (o.prototype.setScene = function (e) {
                            return t.prototype.set.call(this, 'sence', e), this;
                        }),
                        (o.prototype.setSource = function (e) {
                            return t.prototype.set.call(this, 'source', e), this;
                        }),
                        (o.prototype.getTableID = function () {
                            return 155;
                        }),
                        (o.report = function (e, t, i) {
                            new o().setAction(i).setScene(e).setSource(t).reportData(), console.log('minigame_pianotile2_popwindow_coin ' + e + ' ' + t + ' ' + i);
                        }),
                        (o.ACTION_DIALOG_SHOW = 1),
                        (o.ACTION_CLICK_DIALOG_CLOSE_BTN = 2),
                        (o.ACTION_CLICK_GET_ENERGY_100_GOLD = 101),
                        (o.ACTION_CLICK_GET_ENERGY_220_GOLD = 102),
                        (o.ACTION_CLICK_GET_ENERGY_430_GOLD = 103),
                        (o.ACTION_CLICK_GET_ENERGY_850_GOLD = 104),
                        (o.ACTION_CLICK_GET_ENERGY_VIDEO_GOLD = 105),
                        (o.ACTION_CLICK_1_DIAMOND = 201),
                        (o.ACTION_CLICK_10_DIAMOND = 202),
                        (o.ACTION_CLICK_100_DIAMOND = 203),
                        (o.ACTION_CLICK_SHARE_FREE_DIAMOND = 301),
                        (o.ACTION_CLICK_WATCH_VIDEO = 302),
                        (o.ACTION_CLICK_COUNT_FULL_BTN = 303),
                        (o.ACTION_CLICK_LOADING_BTN = 304),
                        (o.ACTION_CLICK_SHOP_BTN = 305),
                        (o.SCENE_GET_ENERGY_DIALOG = 1),
                        (o.SCENE_GET_GOLD_DIALOG = 2),
                        (o.SCENE_GET_DIAMOND_DIALOG = 3),
                        (o.SOURCE_HOME_ENERGY = 1),
                        (o.SOURCE_HOME_GOLD = 2),
                        (o.SOURCE_HOME_DIAMOND = 3),
                        (o.SOURCE_ENERGY_NOT_CLICK_START = 4),
                        (o.SOURCE_GOLD_NOT_CLICK_GOLD = 5),
                        (o.SOURCE_DIAMOND_NOT_CLICK_DIAMOND = 6),
                        (o.SOURCE_FIGHT_BUY_PROPERTY = 7),
                        (o.SOURCE_SKIN_PIECE_GOLD_NOT_ENOUGH = 8),
                        (o.SOURCE_BUY_TRUMPET_DIAMOND_NOT_ENOUGH = 9),
                        o
                    );
                })(e('./BIReportI').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './BIReportI': 'BIReportI',
            },
        ],
        m_p2_share: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '70c0aoq1JxBSZBevPHtuReQ', 'm_p2_share'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (t) {
                    function n() {
                        return (null !== t && t.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(n, t),
                        (n.prototype.getTableID = function () {
                            return 156;
                        }),
                        (n.prototype.setSource = function (e) {
                            return t.prototype.set.call(this, 'source', e), this;
                        }),
                        (n.prototype.setAction = function (e) {
                            return t.prototype.set.call(this, 'action', e), this;
                        }),
                        (n.prototype.setCardType = function (e) {
                            return t.prototype.set.call(this, 'card_type', e), this;
                        }),
                        (n.convertCardType = function (e) {
                            if (0 == e) return n.CARD_TYPE_NONE;
                            switch (e) {
                                case 1:
                                    return n.CARD_TYPE_THREE;
                                case 2:
                                    return n.CARD_TYPE_TWO;
                                case 3:
                                    return n.CARD_TYPE_ONE;
                                case 4:
                                    return n.CARD_TYPE_FOUR;
                                case 5:
                                    return n.CARD_TYPE_FIVE;
                                default:
                                    return 0 != e ? e : n.CARD_TYPE_NONE;
                            }
                        }),
                        (n.convertCardTypeForQQ = function (e) {
                            var t = this.CARD_TYPE_QQ_UNKNOWN;
                            switch (e) {
                                case 0:
                                    t = this.CARD_TYPE_QQ_CHAT;
                                    break;
                                case 1:
                                    t = this.CARD_TYPE_QQ_QZONE;
                                    break;
                                case 2:
                                    t = this.CARD_TYPE_QQ_WECHAT;
                                    break;
                                case 3:
                                    t = this.CARD_TYPE_QQ_FRIEND_TIME_LINE;
                            }
                            return t;
                        }),
                        (n.report = function (e, t, i) {
                            var o = n.convertCardType(i);
                            new n().setAction(e).setSource(t).setCardType(o).reportData();
                        }),
                        (n.reportForMultiPlatform = function (e, t, i) {
                            if (cc.sys.platform == cc.sys.WECHAT_GAME) this.report(e, t, i);
                            else if (cc.sys.platform == cc.sys.QQ_PLAY) {
                                var o = this.convertCardTypeForQQ(i);
                                new n().setAction(e).setSource(t).setCardType(o).reportData();
                            }
                        }),
                        (n.ACTION_LAUNCH_SHARE = 1),
                        (n.ACTION_SHARE_SUCCESS = 2),
                        (n.ACTION_SHARE_FAIL = 3),
                        (n.SOURCE_SHOW_OFF = 1),
                        (n.SOURCE_BATTLE_FRIEND = 2),
                        (n.SOURCE_ACHIEVEMENT_SHOW_SELF = 3),
                        (n.SOURCE_ACHIEVEMENT_SHOW_GROUP = 4),
                        (n.SOURCE_SINGLE_SHOW_GROUP = 5),
                        (n.SOURCE_SINGLE_FLAUNT_FRIEND = 51),
                        (n.SOURCE_RELIVE = 6),
                        (n.SOURCE_INVITE_FRIEND = 7),
                        (n.SOURCE_GAIN_ENERGY = 8),
                        (n.SOURCE_GAIN_DIAMOND = 9),
                        (n.SOURCE_INIT = 10),
                        (n.SOURCE_QQ_SHARE_APP = 100),
                        (n.SOURCE_QQ_RELIVE = 101),
                        (n.SOURCE_QQ_RANK_SINGLE = 102),
                        (n.SOURCE_QQ_RANK_ACHIEVEMENT = 103),
                        (n.SOURCE_QQ_BATTLE_FRIEND = 104),
                        (n.SOURCE_QQ_JIGSAW = 105),
                        (n.SOURCE_QQ_RESULT_NEW_RECORD = 106),
                        (n.SOURCE_QQ_RESULT_SINGLE_CHAMP = 107),
                        (n.SOURCE_QQ_RESULT_SHOW_OFF = 108),
                        (n.SOURCE_QQ_SHARE_FOR_GIFT = 109),
                        (n.SOURCE_QQ_RANK_SINGLE_SHOWOFF = 110),
                        (n.SOURCE_QQ_RANK_ACHIEVEMENT_SHOWOFF = 111),
                        (n.SOURCE_QQ_RESULT_BARCODE = 201),
                        (n.SOURCE_QQ_SHARE_FOR_GIFT_BARCODE = 202),
                        (n.CARD_TYPE_QQ_UNKNOWN = 100),
                        (n.CARD_TYPE_QQ_CHAT = 101),
                        (n.CARD_TYPE_QQ_QZONE = 102),
                        (n.CARD_TYPE_QQ_WECHAT = 103),
                        (n.CARD_TYPE_QQ_FRIEND_TIME_LINE = 104),
                        (n.SOURCE_JIGSAW_PUZZLE_INVITE = 11),
                        (n.SOURCE_JIGSAW_POPUP_INVITE = 12),
                        (n.SOURCE_SHARE_GIFT_POPUP_INVITE = 13),
                        (n.SOURCE_RESULT_PAGE_SAVE_IMAGE = 14),
                        (n.SOURCE_SHARE_GIFT_SAVE_IMAGE = 15),
                        (n.SOURCE_SHARE_INVITE_SKIN_SHARE = 16),
                        (n.SOURCE_SHARE_INVITE_SKIN_SAVE_IMAGE = 17),
                        (n.SOURCE_SHARE_INVITE_SONG_SHARE = 18),
                        (n.SOURCE_SHARE_CHALLENGE_INVITE_GAIN_TIMES = 19),
                        (n.SOURCE_SHARE_CHALLENGE_RESULT_SHOW_OFF = 20),
                        (n.SOURCE_SHARE_FIGHT_WIN = 21),
                        (n.SOURCE_SHARE_FIGHT_INVITE_FRIEND = 22),
                        (n.SOURCE_SHARE_FRIEND__FIGHT_SHOW_OFF = 23),
                        (n.SOURCE_SHARE_SKIN_PIECE = 24),
                        (n.SOURCE_SHARE_ADD_FRIEND = 25),
                        (n.SOURCE_SHARE_TONE = 26),
                        (n.CARD_TYPE_NONE = 0),
                        (n.CARD_TYPE_ONE = 1),
                        (n.CARD_TYPE_TWO = 2),
                        (n.CARD_TYPE_THREE = 3),
                        (n.CARD_TYPE_FOUR = 4),
                        (n.CARD_TYPE_FIVE = 5),
                        (n.CARD_TYPE_FIVE_ONE = 51),
                        (n.CARD_TYPE_SIX = 6),
                        (n.CARD_TYPE_SIX_ONE = 61),
                        (n.CARD_TYPE_SEVEN = 7),
                        (n.CARD_TYPE_SEVEN_ONE = 71),
                        (n.CARD_TYPE_EIGHT = 8),
                        (n.CARD_TYPE_EIGHT_ONE = 81),
                        (n.CARD_TYPE_NINE = 9),
                        (n.CARD_TYPE_NINE_ONE = 91),
                        n
                    );
                })(e('./BIReportI').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './BIReportI': 'BIReportI',
            },
        ],
        m_p2_skin_piece: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '1746ayssFxEb5GdlM9Ragbw', 'm_p2_skin_piece'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./BIReportI'),
                    a = e('../base/Log'),
                    n = (function (t) {
                        function n() {
                            return (null !== t && t.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(n, t),
                            (n.prototype.getTableID = function () {
                                return 234;
                            }),
                            (n.prototype.setPage = function (e) {
                                return t.prototype.set.call(this, 'page', e), this;
                            }),
                            (n.prototype.setAction = function (e) {
                                return t.prototype.set.call(this, 'action', e), this;
                            }),
                            (n.prototype.setSkin = function (e) {
                                return t.prototype.set.call(this, 'skin', e), this;
                            }),
                            (n.prototype.setSource = function (e) {
                                return t.prototype.set.call(this, 'source', e), this;
                            }),
                            (n.report = function (e, t, i, o) {
                                new n().setPage(e).setSkin(t).setAction(i).setSource(o).reportData(), a.default.i('m_p2_skin_piece report page : ' + e + ' skin : ' + t + ',action: ' + i + ',source= ' + o);
                            }),
                            (n.PAGE_TASK_1 = 1),
                            (n.PAGE_TASK_2 = 2),
                            (n.PAGE_TASK_WATCH_ADS = 3),
                            (n.PAGE_TASK_GOLD_BUY = 4),
                            (n.ACTION_SHOW_GO = 1),
                            (n.ACTION_CLICK_GO = 2),
                            (n.ACTION_SHOW_GET = 3),
                            (n.ACTION_CLICK_GET = 4),
                            (n.ACTION_SHOW_GOLD_BUY = 5),
                            (n.ACTION_CLICK_GOLD_BUY = 6),
                            (n.ACTION_CLICK_LEFT = 7),
                            (n.ACTION_CLICK_RIGHT = 8),
                            (n.SOURCE_SKIN_STORE = 1),
                            (n.SOURCE_HOME_PAGE_PIECE = 2),
                            n
                        );
                    })(o.default);
                (i.default = n), cc._RF.pop();
            },
            {
                '../base/Log': 'Log',
                './BIReportI': 'BIReportI',
            },
        ],
        mainpage: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'b6d607wDTpAX5HuhgybW6eV', 'mainpage'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var u = e('../UI/GameEntraScene/BasicTouchEvent'),
                    d = e('../Logic/PlayerMgr'),
                    o = e('../UI/UserInfoManager'),
                    p = e('../../util/TimeUtil'),
                    n = e('../Logic/EventBus'),
                    a = e('../Logic/NotifyEvent'),
                    h = e('../../base/G'),
                    f = e('../Logic/LangMgr'),
                    m = e('../UI/GameEntraScene/ImgCache'),
                    g = e('../../util/SceneMusicMgr'),
                    _ = e('../Core/GameDefine'),
                    r = e('./GiftBoxDialog'),
                    s = e('./UpdateDialog'),
                    c = e('./UpdateContent'),
                    l = e('../DB/DBMgr'),
                    y = e('../Logic/Plugin/PluginMgr'),
                    S = e('../Logic/Plugin/IPlugin'),
                    v = e('../UI/MusicLevelDataLoader'),
                    I = e('../../base/State'),
                    T = e('../../util/SceneMusicUtil'),
                    C = e('../UI/GameEntraScene/GameEntranceScene'),
                    E = e('../Logic/LevelMgr'),
                    A = e('../Network/Protocol/StorageUtil'),
                    P = e('../../util/SUtil'),
                    k = e('../Logic/MoneySystem'),
                    M = e('../Logic/ChestManager'),
                    L = e('../UI/GameEntraScene/PopupDlg'),
                    b = e('../UI/GameEntraScene/CheckRewardProcessor'),
                    N = e('../../base/Log'),
                    R = e('../../util/PageHeap'),
                    D = e('../UI/GameEntraScene/ToastPopManager'),
                    w = e('../../config/LSKey'),
                    B = e('../task/TaskSystem'),
                    G = e('../task/TaskItem'),
                    O = e('./GameOverPopupUtil'),
                    U = e('./GameOverInviteSKin'),
                    F = e('./GameOverHotSong'),
                    H = e('../shop/DialogOneButtonPrefab'),
                    x = e('../../../modules/MGAdv/scripts/Logic/MGAdvEntrance'),
                    V = e('../../../modules/MGAdv/scripts/Logic/MGAdvDefine'),
                    K = e('../skin/SkinUtils'),
                    W = e('../../../modules/MGUser/scripts/Logic/MGUserEntrance'),
                    Y = e('../UI/GameEntraScene/gameover/GameOverHotSongShare'),
                    Q = e('../../../modules/MGAppShare/scripts/ShareHelper'),
                    j = e('../UI/GameEntraScene/PrefabMgr'),
                    z = e('../../util/QQReport'),
                    q = e('../../util/StringUtil'),
                    X = e('../Logic/SkinDataManager'),
                    J = e('../UI/GameEntraScene/mainpage/AttentionPrefab'),
                    Z = e('../../util/PU'),
                    $ = e('../../config/RemoteCfgMgr'),
                    ee = e('../../infoc/m_p2_Uaction'),
                    te = e('../../../modules/MGUtils/MGPlatform'),
                    ie = e('../Logic/I18nManager'),
                    oe = e('../challengeCompetition/TipsDialog'),
                    ne = e('../UI/playerInfoPopup/PlayerInfoPopupProfab'),
                    ae = e('../keypad/KeypadNavigator'),
                    re = e('../Logic/I18nManager'),
                    se = e('./LevelVideoGetSkinPrefab'),
                    ce = cc._decorator,
                    le = ce.ccclass,
                    ue = ce.property,
                    de = (function (t) {
                        function e() {
                            var e = (null !== t && t.apply(this, arguments)) || this;
                            return (e.mTopIconPanel = null), (e.mTopEnergyIconPanel = null), (e.mTimeCountdownLabel = null), (e.mTimeCountdownPanel = null), (e.mTopEnergyIcon = null), (e.mTopEnergyCountLabel = null), (e.mTopGoldPanel = null), (e.mTopGoldCountLabel = null), (e.mTopDiamondPanel = null), (e.mTopDiamondLabel = null), (e.mMusicNameLabel = null), (e.mScoreLabel = null), (e.mScoreLabelShadow = null), (e.mRewardStarLayout = null), (e.mRewardCrownLayout = null), (e.mRewardStarIcon1 = null), (e.mRewardStarIcon2 = null), (e.mRewardStarIcon3 = null), (e.mRewardCrownIcon1 = null), (e.mRewardCrownIcon2 = null), (e.mRewardCrownIcon3 = null), (e.mRewardGoldLabel = null), (e.mRewardExpLabel = null), (e.mGoHomeButton = null), (e.mGoNextButton = null), (e.mGoNextLabel = null), (e.mTryAgainButton = null), (e.mGoNextConditionLable = null), (e.mChallengeFriendButton = null), (e.mEnergyAnimPanel = null), (e.mTipsLayout = null), (e.mGlobalRankLayout = null), (e.mRankDialogLayout = null), (e.mToastPopLayout = null), (e.mNextBtnBgSprite = null), (e.mNewRecordIcon = null), (e.mLockNextSprite = null), (e.mRewardPanel = null), (e.mBg = null), (e.mSeeAllBtn = null), (e.mSeeAllLabel = null), (e.mStopEventNode = null), (e.mShareForGiftBg = null), (e.mLoadingIcon = null), (e.mInviteIcon = null), (e.mInviteLayout = null), (e.mHotMusicBattleTips = null), (e.mToHomeBtnRedSpot = null), (e.mAddFavIcon = null), (e.mAddFavIconQQ = null), (e.mDlIcon = null), (e.mGameBoxLayout = null), (e.mGameBoxIcon1 = null), (e.mGameBoxIcon2 = null), (e.mGameBoxIcon3 = null), (e.mGameBoxIcon4 = null), (e.mNextLabelButton = null), (e.mEnergyClickCallback = null), (e.mGoldClickCallback = null), (e.mDiamondClickCallback = null), (e.mGoNextBtnClickCallback = null), (e.mGoHomeBtnClickCallback = null), (e.mTryAgainBtnClickCallback = null), (e.mSeeALlBtnClickCallback = null), (e.mShareForGiftCallback = null), (e.mInviteCallback = null), (e.mLeftTime = 0), (e.mIsNewRecord = !1), (e.mIsQQRedPacket = !1), (e.mCheckRewardProcessor = null), (e.mInviteType = O.InviteType.InviteType_NONE), (e.mbDestroyed = !1), (e.isCurHotMusic = !1), (e.mIsBannerShow = !1), (e.isShareForGiftShow = !1), (e.isNewRecordShow = !1), (e.isGiftBoxShow = !1), (e.isRewardShow = !1), (e.isInviteSongShow = !1), (e.isInviteSkinShow = !1), (e.isFirstPayShow = !1), (e.MUSIC_ID_1 = 100001), (e.MUSIC_ID_2 = 100002), (e.mSSShowOffQQBannerHiddenInit = !1), (e.mSSShowOffQQBannerHidden = !0), (e.mSSResultQQBannerDynamic = !1), (e.mSSResultBannerDelay = 0), (e.mSSResultBannerDelayPopup = 0), (e.isBannerHideForPopup = !1), e;
                        }
                        return (
                            __extends(e, t),
                            (e.prototype.enResLoad = function () {}),
                            (e.prototype.enSpriteSetNull = function () {
                                (this.mGoHomeButton.getComponent(cc.Sprite).spriteFrame = null), (this.mTryAgainButton.getComponent(cc.Sprite).spriteFrame = null), (this.mNextLabelButton.getComponent(cc.Sprite).spriteFrame = null);
                            }),
                            (e.prototype.onLoad = function () {
                                ie.default.getInstance().isEnglish() && this.enResLoad(),
                                    this.applySkin(),
                                    this.adaptorUI(),
                                    this.mTimeCountdownPanel.node && (this.mTimeCountdownPanel.node.active = !1),
                                    d.default.Ins().addUserListener(this),
                                    o.User.UserInfoManager.registerHpReviveListener(this.hpCallback, this),
                                    (this.mDialogManager = new L.PopupDlg()),
                                    this.mDialogManager.setParentLayout(this.mTipsLayout.node),
                                    (this.mRankDialogManager = new L.PopupDlg()),
                                    this.mRankDialogManager.setParentLayout(this.mRankDialogLayout.node),
                                    D.ToastPopManager.getIns().init(this.mToastPopLayout.node),
                                    (this.mCheckRewardProcessor = new b.default(this.mDialogManager)),
                                    this.registerShowRankPageEvent(),
                                    Z.default.isWeiXin() ||
                                        (x.MGAdv.load(V.ADScene.NORMAL_RESULT_REWARD, V.QQ_ADV_TYPE.VIDEO_TYPE_GAME_TASK),
                                        this.scheduleOnce(function () {
                                            x.MGAdv.load(V.ADScene.RELIVE_POPUP, V.QQ_ADV_TYPE.VIDEO_TYPE_GAME_RELIVE);
                                        }, 2)),
                                    (this.mSSShowOffQQBannerHiddenInit = $.default.getIns().isQQBannerHiddenInit()),
                                    (this.mSSShowOffQQBannerHidden = $.default.getIns().isQQBannerHidden()),
                                    (this.mSSResultQQBannerDynamic = $.default.getIns().isQQDynamicBanner()),
                                    (this.mSSResultBannerDelay = $.default.getIns().getBannerDelay()),
                                    (this.mSSResultBannerDelayPopup = $.default.getIns().getBannerDelayPopup()),
                                    this.initGameBox(),
                                    ae.default.getInstance().gotoPage(this.node, 'GameOverPrefab');
                            }),
                            (e.prototype.initGameBox = function () {
                                this.mGameBoxLayout && (Z.default.isWeiXin() || Z.default.isCM() ? (this.mGameBoxLayout.node.active = !1) : (this.playGameBoxAnim(), ee.default.report(0, ee.default.ACTION_GAMEBOX_BUTTON_SHOW)));
                            }),
                            (e.prototype.playGameBoxAnim = function () {
                                if (this.mGameBoxLayout && this.mGameBoxLayout.node) {
                                    var e = this.mGameBoxLayout.getComponent(cc.Animation);
                                    e && e.play('game_rcmd_enter');
                                }
                            }),
                            (e.prototype.stopGameBoxAnim = function () {
                                if (this.mGameBoxLayout && this.mGameBoxLayout.node) {
                                    var e = this.mGameBoxLayout.getComponent(cc.Animation);
                                    e && e.stop('game_rcmd_enter');
                                }
                            }),
                            (e.prototype.getBottomNodeBottomByShowBanner = function () {
                                return P.SUtil.ins().isLiuHai() ? 223 : P.SUtil.ins().isQuanMian() ? 253 : P.SUtil.ins().isPuTong() ? 253 : void 0;
                            }),
                            (e.prototype.adaptorRankPanelForWX = function (e) {
                                e ? (P.SUtil.ins().isLiuHai() ? (P.SUtil.ins().toBottomByPx(this.mSeeAllBtn, 409), P.SUtil.ins().toBottomByPx(this.mGoHomeButton, this.getBottomNodeBottomByShowBanner()), P.SUtil.ins().toBottomByPx(this.mTryAgainButton, this.getBottomNodeBottomByShowBanner()), P.SUtil.ins().toBottomByPx(this.mGoNextButton, this.getBottomNodeBottomByShowBanner()), P.SUtil.ins().toBottomByPx(this.mGoNextConditionLable, this.getBottomNodeBottomByShowBanner() - 34)) : P.SUtil.ins().isQuanMian() ? (P.SUtil.ins().toBottomByPx(this.mSeeAllBtn, 410), P.SUtil.ins().toBottomByPx(this.mGoHomeButton, this.getBottomNodeBottomByShowBanner()), P.SUtil.ins().toBottomByPx(this.mTryAgainButton, this.getBottomNodeBottomByShowBanner()), P.SUtil.ins().toBottomByPx(this.mGoNextButton, this.getBottomNodeBottomByShowBanner()), P.SUtil.ins().toBottomByPx(this.mGoNextConditionLable, this.getBottomNodeBottomByShowBanner() - 34)) : P.SUtil.ins().isPuTong() && (P.SUtil.ins().toBottomByPx(this.mSeeAllBtn, 390), P.SUtil.ins().toBottomByPx(this.mGoHomeButton, this.getBottomNodeBottomByShowBanner()), P.SUtil.ins().toBottomByPx(this.mTryAgainButton, this.getBottomNodeBottomByShowBanner()), P.SUtil.ins().toBottomByPx(this.mGoNextButton, this.getBottomNodeBottomByShowBanner()), P.SUtil.ins().toBottomByPx(this.mGoNextConditionLable, this.getBottomNodeBottomByShowBanner() - 34))) : P.SUtil.ins().isLiuHai() ? (P.SUtil.ins().toBottomByPx(this.mSeeAllBtn, 359), P.SUtil.ins().toBottomByPx(this.mGoHomeButton, 81), P.SUtil.ins().toBottomByPx(this.mTryAgainButton, 81), P.SUtil.ins().toBottomByPx(this.mGoNextButton, 81), P.SUtil.ins().toBottomByPx(this.mGoNextConditionLable, 47)) : P.SUtil.ins().isQuanMian() ? (P.SUtil.ins().toBottomByPx(this.mSeeAllBtn, 310), P.SUtil.ins().toBottomByPx(this.mGoHomeButton, 62), P.SUtil.ins().toBottomByPx(this.mTryAgainButton, 62), P.SUtil.ins().toBottomByPx(this.mGoNextButton, 62), P.SUtil.ins().toBottomByPx(this.mGoNextConditionLable, 28)) : P.SUtil.ins().isPuTong() && (P.SUtil.ins().toBottomByPx(this.mSeeAllBtn, 280), P.SUtil.ins().toBottomByPx(this.mGoHomeButton, 48), P.SUtil.ins().toBottomByPx(this.mTryAgainButton, 48), P.SUtil.ins().toBottomByPx(this.mGoNextButton, 48), P.SUtil.ins().toBottomByPx(this.mGoNextConditionLable, 14)), this.mSeeAllBtn.getComponent(cc.Widget).updateAlignment(), this.mGoHomeButton.getComponent(cc.Widget).updateAlignment(), this.mTryAgainButton.getComponent(cc.Widget).updateAlignment(), this.mGoNextButton.getComponent(cc.Widget).updateAlignment(), this.mGoNextConditionLable.getComponent(cc.Widget).updateAlignment();
                            }),
                            (e.prototype.hideBanner = function (e, t) {
                                (this.isBannerHideForPopup = t), console.log('MGADV hide from : ' + e), x.MGAdv.hideBanner(V.ADScene.GAME_RESULT_BANNER), this.adaptorRankPanelForWX(!1);
                            }),
                            (e.prototype.showBanner = function (e) {
                                var o = this;
                                if (this.mbDestroyed) console.log('in showBanner, this.mbDestroyed is true. return.');
                                else if ((console.warn('MGADV show from : ' + e), Z.default.isQQ())) {
                                    var n = this.mSSResultQQBannerDynamic ? V.ADScene.SOURCE_NORMAL_RESULT_BANNER_DYNAMIC : V.ADScene.GAME_RESULT_BANNER,
                                        t = this.mSSResultQQBannerDynamic ? V.QQ_BANNER_TYPE.DYNAMIC_BANNER : void 0;
                                    x.MGAdv.loadBanner(
                                        0,
                                        0,
                                        0,
                                        function (e, t) {
                                            if (e == V.ADStat.LOAD_SUCCESS) {
                                                var i = !0;
                                                (o.isShareForGiftShow || o.isNewRecordShow || o.isGiftBoxShow || o.isInviteSongShow || o.isInviteSkinShow || o.isFirstPayShow) && (o.hideBanner('各种弹出'), (i = !1)),
                                                    o.mbDestroyed
                                                        ? (x.MGAdv.hideBanner(V.ADScene.GAME_RESULT_BANNER), x.MGAdv.destroyBanner(V.ADScene.GAME_RESULT_BANNER))
                                                        : x.MGAdv.showBanner(n, function (e, t) {
                                                              (o.mIsBannerShow = e == V.ADStat.SHOWING_PAGE), o.adaptorRankPanelForWX(e == V.ADStat.SHOWING_PAGE), i || o.hideBanner('not showbanner ');
                                                          });
                                            } else o.adaptorRankPanelForWX(!1);
                                        },
                                        n,
                                        t,
                                    );
                                } else if (Z.default.isWeiXin())
                                    if (this.mbDestroyed) x.MGAdv.hideBanner(V.ADScene.GAME_RESULT_BANNER), x.MGAdv.destroyBanner(V.ADScene.GAME_RESULT_BANNER);
                                    else {
                                        var i = te.MGPlatform.getSystemInfoSync(),
                                            a = ((P.SUtil.ins().mScreenHeight - this.getBottomNodeBottomByShowBanner() + 10) * i.screenHeight) / P.SUtil.ins().mScreenHeight;
                                        x.MGAdv.loadBanner(
                                            0,
                                            0,
                                            a,
                                            function (e, t) {
                                                if (e == V.ADStat.LOAD_SUCCESS && !o.mbDestroyed) {
                                                    var i = o.isBannerHideForPopup ? o.mSSResultBannerDelayPopup : o.mSSResultBannerDelay;
                                                    N.default.i('RemoteCfgMgr', 'prepare to scheduleOnce delay: ' + i),
                                                        o.scheduleOnce(function () {
                                                            N.default.i('RemoteCfgMgr', 'showBanner scheduleOnce callback'),
                                                                o.mbDestroyed ||
                                                                    x.MGAdv.showBanner(V.ADScene.GAME_RESULT_BANNER, function (e, t) {
                                                                        o.adaptorRankPanelForWX(e == V.ADStat.SHOWING_PAGE);
                                                                    });
                                                        }, i);
                                                }
                                            },
                                            V.ADScene.GAME_RESULT_BANNER,
                                        );
                                    }
                            }),
                            (e.prototype.start = function () {
                                var e = h.G.Ap.state.mBattleSettlement;
                                (this.mIsNewRecord = e.mScore > e.mHistoryBestScore), z.QQReport.reportSongScore(e.mScore), this.startShareGiftAnimation(), Z.default.isCM() ? ((this.mInviteIcon.node.active = !1), this.showInviteSongPopup()) : this.initInviteLayout(), this.initView(), this.initDLIcon(), this.initEvents();
                            }),
                            (e.prototype.initDLIcon = function () {
                                this.mDlIcon.node.active = !1;
                            }),
                            (e.prototype.startShareGiftAnimation = function () {}),
                            (e.prototype.update = function (e) {
                                if (!h.G.Ap.config.debugNoBackgroundAnim) {
                                    var t = h.G.Ap.skinMgr.getCurrentSkinItem();
                                    t && t.getSkinElementPainter().update(e, 'GameoverUpdate');
                                }
                            }),
                            (e.prototype.applySkin = function () {
                                var e = h.G.Ap.skinMgr.getCurrentSkinItem();
                                if (e) {
                                    var t = this.node.getChildByName('Bg'),
                                        i = this.node.getChildByName('animation_bkg');
                                    e.getSkinElementPainter().captureBackground('GameoverUpdate', t, i);
                                }
                            }),
                            (e.prototype.initInviteLayout = function () {
                                var t = this,
                                    e = this.shouldShowHotSongShare();
                                this.mInviteType = e ? O.InviteType.InviteType_HOT_SONG : O.default.getDefaultShowType();
                                var i = W.MGUser.getCurrentServerTime();
                                switch (this.mInviteType) {
                                    case O.InviteType.InviteType_NONE:
                                        (this.mInviteIcon.node.active = !1), (this.mInviteLayout.active = !1);
                                        break;
                                    case O.InviteType.InviteType_SKIN:
                                        (this.mInviteIcon.node.active = !0), (this.mInviteLayout.active = !0);
                                        var o = '/static_res/gameover/invite_skin_icon';
                                        ie.default.getInstance().isEnglish() && (o = '/static_res/gameover/invite_skin_icon_en'),
                                            m.default.get2(o, this.mInviteIcon),
                                            O.default.needActiveShowPopup(h.G.Ap.state.mBattleSettlement.mStar, this.mInviteType) &&
                                                O.default.needShowActivePopupByToggle(this.mInviteType, 1, function (e) {
                                                    e && (A.default.save(w.default.GAME_OVER_INVIE_SKIN_LAST_SHOW_TIME, i + ''), t.showInviteSkinPopup());
                                                }),
                                            A.default.save(w.default.GAME_OVER_LAST_SHOW_TIME, i + '');
                                        break;
                                    case O.InviteType.InviteType_HOT_SONG:
                                        (this.mInviteIcon.node.active = !0), (this.mInviteLayout.active = !0);
                                        var n = '/static_res/gameover/hot_song_icon';
                                        ie.default.getInstance().isEnglish() && (n = '/static_res/gameover/hot_song_icon_en'),
                                            m.default.get2(n, this.mInviteIcon),
                                            (O.default.needActiveShowPopup(h.G.Ap.state.mBattleSettlement.mStar, this.mInviteType) || e) &&
                                                O.default.needShowActivePopupByToggle(this.mInviteType, 1, function (e) {
                                                    e && (A.default.save(w.default.GAME_OVER_INVITE_SONG_LAST_SHOW_TIME, i + ''), t.showInviteSongPopup());
                                                }),
                                            A.default.save(w.default.GAME_OVER_LAST_SHOW_TIME, i + '');
                                }
                                ie.default.getInstance().isEnglish() && ((this.mInviteIcon.node.active = !1), (this.mInviteLayout.active = !1));
                            }),
                            (e.prototype.initNormalUi = function () {
                                var i = this,
                                    e = '/static_res/gameover_challenge1',
                                    t = '/static_res/gameover_challenge1_pressed',
                                    o = '/static_res/gameover_gohome_btn1',
                                    n = '/static_res/gameover_gohome_btn1_pressed';
                                ie.default.getInstance().isEnglish() && ((e = '/static_res/gameover_challenge1_en'), (t = '/static_res/gameover_challenge1_pressed_en'), (o = '/static_res/gameover_gohome_btn_en'), (n = '/static_res/gameover_gohome_btn1_pressed_en')),
                                    m.default.get(e, function (e, t) {
                                        t && cc.isValid(i, !0) && ((i.mChallengeFriendButton.getComponent(cc.Sprite).spriteFrame = t), (i.mChallengeFriendButton.normalSprite = t));
                                    }),
                                    m.default.get(t, function (e, t) {
                                        t && cc.isValid(i, !0) && (i.mChallengeFriendButton.pressedSprite = t);
                                    }),
                                    m.default.get(o, function (e, t) {
                                        t && cc.isValid(i, !0) && ((i.mGoHomeButton.getComponent(cc.Sprite).spriteFrame = t), (i.mGoHomeButton.normalSprite = t));
                                    }),
                                    m.default.get(n, function (e, t) {
                                        t && cc.isValid(i, !0) && (i.mGoHomeButton.pressedSprite = t);
                                    });
                            }),
                            (e.prototype.initHotMusicUi = function () {
                                var i = this;
                                if (((this.isCurHotMusic = !0), Z.default.isCM())) this.mGoNextButton.node.active = !1;
                                else {
                                    var e = '/static_res/gameover_to_hot_music',
                                        t = '/static_res/gameover_to_hot_music_pressed',
                                        o = '/static_res/gameover_invite_fds',
                                        n = '/static_res/gameover_invite_fds_pressed',
                                        a = '/static_res/gameover_hotsong_play_again',
                                        r = '/static_res/gameover_hotsong_play_again_pressed';
                                    ie.default.getInstance().isEnglish() && ((e = '/static_res/gameover_to_hot_music_en'), (t = '/static_res/gameover_to_hot_music_pressed_en'), (o = '/static_res/gameover_invite_fds_en'), (n = '/static_res/gameover_invite_fds_pressed_en'), (a = '/static_res/gameover_hotsong_play_again_en'), (r = '/static_res/gameover_hotsong_play_again_pressed_en')),
                                        m.default.get(e, function (e, t) {
                                            t && cc.isValid(i, !0) && ((i.mChallengeFriendButton.getComponent(cc.Sprite).spriteFrame = t), (i.mChallengeFriendButton.normalSprite = t));
                                        }),
                                        m.default.get(t, function (e, t) {
                                            t && cc.isValid(i, !0) && (i.mChallengeFriendButton.pressedSprite = t);
                                        }),
                                        m.default.get(o, function (e, t) {
                                            t && cc.isValid(i, !0) && ((i.mTryAgainButton.getComponent(cc.Sprite).spriteFrame = t), (i.mTryAgainButton.normalSprite = t));
                                        }),
                                        m.default.get(n, function (e, t) {
                                            t && cc.isValid(i, !0) && (i.mTryAgainButton.pressedSprite = t);
                                        }),
                                        m.default.get(a, function (e, t) {
                                            t && cc.isValid(i, !0) && ((i.mGoNextButton.getComponent(cc.Sprite).spriteFrame = t), (i.mGoNextButton.normalSprite = t));
                                        }),
                                        m.default.get(r, function (e, t) {
                                            t && cc.isValid(i, !0) && (i.mGoNextButton.pressedSprite = t);
                                        }),
                                        (this.mGoNextBtnClickCallback = new u.default(function () {
                                            var e = V.ADScene.PLAY_AGAIN;
                                            x.MGAdv.commercialBreak(e, V.QQ_ADV_TYPE.VIDEO_TYPE_PLAY_AGAIN, function (e) {
                                                i.playAgain();
                                            });
                                        })),
                                        this.mGoNextButton.node.on(cc.Node.EventType.TOUCH_END, this.mGoNextBtnClickCallback.click, this.mGoNextBtnClickCallback),
                                        (this.mGoNextButton.node.getChildByName('NextLabel').active = !1),
                                        this.shouldShowHotMusicBattleTips() && (this.mHotMusicBattleTips.node.active = !0);
                                }
                            }),
                            (e.prototype.initView = function () {
                                var i = this;
                                this.mLoadingIcon.node.active = !1;
                                var e = d.default.Ins();
                                (this.mTopEnergyCountLabel.string = e.getHP() + ''), (this.mTopGoldCountLabel.string = e.getUserCoin() + ''), (this.mTopDiamondLabel.string = e.getUserDiamond() + '');
                                var t = h.G.Ap.state.mBattleSettlement,
                                    o = f.default.gIns().getLanguageByKey(t.mMusicName),
                                    n = v.MusicLevelDataLoader.getIndex(t.mLevel);
                                (this.mMusicNameLabel.string = n + '.' + o), 0 == t.mCrown ? this.showStar(t.mStar) : this.showCrow(t.mCrown), g.default.playStarOrCrownMusic(t.mStar, t.mCrown), (this.mScoreLabel.string = t.mScore + ''), (this.mScoreLabelShadow.string = t.mScore + '');
                                var a = e.getLevelRecordByMid(t.mMid);
                                if (null == a) {
                                    var r = E.LevelMgr.Ins().getLevel(t.mLevel);
                                    a = e.addNewRecord(r.id, r.music.mid, r.levelUnlock.unlockType);
                                }
                                if ((t.mScore >= t.mHistoryBestScore && 1 <= t.mStar && !0, 9e3 <= a.mId)) this.initHotMusicUi();
                                else {
                                    var s = '/static_res/gameover_next_bg';
                                    ie.default.getInstance().isEnglish() && (s = '/static_res/gameover_next_bg_en'),
                                        ((0 == t.mCrown && 2 < t.mStar) || 0 < t.mCrown) &&
                                            m.default.get(s, function (e, t) {
                                                cc.isValid(i, !0) && t && ((i.mNextBtnBgSprite.spriteFrame = t), i.mNextBtnBgSprite.getComponent(cc.Animation).play('gameover_next_rotate'));
                                            }),
                                        this.initNormalUi();
                                    var c,
                                        l = v.MusicLevelDataLoader.getNextLevel(t.mLevel);
                                    if (l) (null == (c = e.getLevelRecord(l.id)) || (c.isRecordLocked() && c.mUnlockFlag == _.eUnlockFlag.FLAG_LOCKED_LV_TRY)) && (l = v.MusicLevelDataLoader.getNextLevel(l.id));
                                    if (l)
                                        null == (c = e.getLevelRecord(l.id)) || c.isRecordLocked()
                                            ? ((this.mLockNextSprite.node.active = !0), (this.mGoNextConditionLable.node.active = !0), (this.mGoNextConditionLable.string = cc.js.formatStr(ie.default.getInstance().getLanguageByKey('label_text.grade_unlock'), l.needLv + '')), (this.mGoNextButton.interactable = !1))
                                            : ((this.mGoNextButton.interactable = !0),
                                              (this.mLockNextSprite.node.active = !1),
                                              (this.mGoNextBtnClickCallback = new u.default(function () {
                                                  var e = V.ADScene.PLAY_AGAIN;
                                                  x.MGAdv.commercialBreak(e, V.QQ_ADV_TYPE.VIDEO_TYPE_PLAY_AGAIN, function (e) {
                                                      y.default.Ins().getPlugin(S.default.Plugin_Energy).isCurEnergyEnough() ? i.playNextMusic(l) : i.toEnergyDialog();
                                                  });
                                              })),
                                              this.mGoNextButton.node.on(cc.Node.EventType.TOUCH_END, this.mGoNextBtnClickCallback.click, this.mGoNextBtnClickCallback),
                                              this.mGoNextLabel.node.on(cc.Node.EventType.TOUCH_END, this.mGoNextBtnClickCallback.click, this.mGoNextBtnClickCallback));
                                    else (this.mGoNextButton.interactable = !1), (this.mLockNextSprite.node.active = !1);
                                    this.addNormalMusicTimes();
                                }
                                this.showHotSongShare(t, function (e) {
                                    i.showResultPopup(t, a, !e);
                                }),
                                    (this.mRewardCoin = a.mCoin),
                                    (this.mRewardExp = a.mExp),
                                    this.showGoldAndExp(),
                                    this.hideEventStopNode(),
                                    Z.default.isCM() || this.showGuide(),
                                    this.debugEnableFlentPage(t, a);
                            }),
                            (e.prototype.debugEnableFlentPage = function (e, t) {
                                var i = this;
                                'true' == A.default.read(w.default.DEBUG_ENABLE_FLAUNT_PAGE) &&
                                    this.mMusicNameLabel.node.on(cc.Node.EventType.TOUCH_END, function () {
                                        (e.mStar = 3), (e.mScore = 832), (e.mHistoryBestScore = 500), i.showResultPopup(e, t, !0);
                                    });
                            }),
                            (e.prototype.showResultPopup = function (e, t, i) {
                                void 0 === i && (i = !0),
                                    e.mScore >= e.mHistoryBestScore &&
                                        ((1 <= e.mStar || 1 <= e.mCrown) &&
                                            this.scheduleOnce(function () {
                                                g.default.play(g.default.NAME_NEW_BEST, g.default.PATH_NEW_BEST, !1);
                                            }, 1),
                                        0 < e.mScore && e.mScore > e.mHistoryBestScore && this.showNewRecordIcon(),
                                        i && 1 <= e.mStar && (R.default.Ins().pop('NewRecordPage'), (this.isNewRecordShow = !1))),
                                    this.showGiftBoxOrUpdateDialog(t);
                            }),
                            (e.prototype.showGuide = function () {
                                'true' !== A.default.read(w.default.HAS_SHOW_HOME_PAGE)
                                    ? B.default.Ins().isNeedShowTaskSystemEntry() &&
                                      B.default.Ins().loadData(function (e) {
                                          for (var t = B.default.Ins().getTaskList(), i = 0; i < t.length; i++)
                                              if ((t[i].id = G.TaskID.TASK_ID_LITTLE_STAR)) {
                                                  t[i].status === G.TaskStatus.TASK_STATUS_SUCCESS && t[i].rewardTaken;
                                                  break;
                                              }
                                      })
                                    : (this.mToHomeBtnRedSpot.node.active = !1);
                            }),
                            (e.prototype.showLoading = function () {
                                (this.mLoadingIcon.node.active = !0), this.mLoadingIcon.getComponent(cc.Animation).play('hot_song_loading');
                            }),
                            (e.prototype.hideLoading = function () {
                                this.mLoadingIcon.getComponent(cc.Animation).stop('hot_song_loading'), (this.mLoadingIcon.node.active = !1);
                            }),
                            (e.prototype.showReportScoreFailDialog = function (e, t) {
                                var o = this;
                                j.default.load('prefab/challengecompetition/TipsDialogPrefab', function (e, t) {
                                    if (cc.isValid(o, !0) && t) {
                                        var i = t.getComponent(oe.default);
                                        i.setContent('网络状况不太好喔，请检查后再重新上传分数！'),
                                            i.setBottomBtnLabel('重试'),
                                            i.setShowCloseBtn(!0),
                                            i.setBottomBtnCallback(function () {
                                                t.destroy();
                                            }),
                                            o.mTipsLayout.node.addChild(t);
                                    }
                                });
                            }),
                            (e.prototype.showNewRecordIcon = function () {
                                this.mNewRecordIcon.node.active = !0;
                                var e = this.mScoreLabel.node.getPosition(),
                                    t = new cc.Vec2();
                                (t.y = e.y), (t.x = e.x + this.mScoreLabel.node.width / 2 + 12), this.mNewRecordIcon.node.setPosition(t), P.SUtil.ins().isLiuHai() ? P.SUtil.ins().toTop(this.mNewRecordIcon, 28.5) : P.SUtil.ins().isQuanMian() && P.SUtil.ins().toTop(this.mNewRecordIcon, 28.1);
                            }),
                            (e.prototype.toEnergyDialog = function () {
                                var o = this;
                                j.default.load('prefab/PlayerInfoPopupProfab', function (e, t) {
                                    if (t) {
                                        if ((o.hideBanner('体力出现'), !cc.isValid(o, !0))) return;
                                        var i = t.getComponent(ne.default);
                                        i.setCloseSelfCallback(function () {
                                            0 == o.mInviteLayout.childrenCount && o.showBanner('体力关闭'), t.destroy();
                                        }),
                                            o.mTipsLayout.node.addChild(t),
                                            i.playerEnergyBtnClick(0);
                                    } else N.default.e('[GameOver] load PlayerInfoPopupProfab error = ' + e);
                                });
                            }),
                            (e.prototype.showStar = function (e) {
                                (this.mRewardStarLayout.node.active = !0), (this.mRewardCrownLayout.node.active = !1), this.loadStarIcon(this.mRewardStarIcon1, 0 < e), this.loadStarIcon(this.mRewardStarIcon2, 1 < e), this.loadStarIcon(this.mRewardStarIcon3, 2 < e);
                            }),
                            (e.prototype.showCrow = function (e) {
                                (this.mRewardStarLayout.node.active = !1), (this.mRewardCrownLayout.node.active = !0), this.loadCrownIcon(this.mRewardCrownIcon1, 0 < e), this.loadCrownIcon(this.mRewardCrownIcon2, 1 < e), this.loadCrownIcon(this.mRewardCrownIcon3, 2 < e);
                            }),
                            (e.prototype.loadStarIcon = function (e, t) {
                                var i = t ? '/gameImage/gameover_star_light' : '/gameImage/gameover_star_gray';
                                m.default.get2(i, e);
                            }),
                            (e.prototype.loadCrownIcon = function (e, t) {
                                var i = t ? '/gameImage/gameover_crown_light' : '/gameImage/gameover_crown_gray';
                                m.default.get2(i, e);
                            }),
                            (e.prototype.initEvents = function () {
                                var t = this;
                                (this.mEnergyClickCallback = new u.default(function () {
                                    t.energyClickCallback();
                                })),
                                    this.mTopEnergyIconPanel.node.on(cc.Node.EventType.TOUCH_END, this.mEnergyClickCallback.click, this.mEnergyClickCallback),
                                    (this.mGoldClickCallback = new u.default(function () {
                                        t.goldClickCallback();
                                    })),
                                    this.mTopGoldPanel.node.on(cc.Node.EventType.TOUCH_END, this.mGoldClickCallback.click, this.mGoldClickCallback),
                                    (this.mDiamondClickCallback = new u.default(function () {
                                        t.diamondClickCallback();
                                    })),
                                    this.mTopDiamondPanel.node.on(cc.Node.EventType.TOUCH_END, this.mDiamondClickCallback.click, this.mDiamondClickCallback),
                                    (this.mGoHomeBtnClickCallback = new u.default(function () {
                                        t.goHomeBtnClickCallback();
                                    })),
                                    this.mGoHomeButton.node.on(cc.Node.EventType.TOUCH_END, this.mGoHomeBtnClickCallback.click, this.mGoHomeBtnClickCallback),
                                    (this.mTryAgainBtnClickCallback = new u.default(function () {
                                        if (t.isCurHotMusic) {
                                            var e = V.ADScene.PLAY_AGAIN;
                                            x.MGAdv.commercialBreak(e, V.QQ_ADV_TYPE.VIDEO_TYPE_PLAY_AGAIN, function (e) {
                                                t.playAgain(void 0, !1);
                                            });
                                        } else {
                                            t.hideBanner('重试');
                                            e = V.ADScene.PLAY_AGAIN;
                                            x.MGAdv.commercialBreak(e, V.QQ_ADV_TYPE.VIDEO_TYPE_PLAY_AGAIN, function (e) {
                                                t.tryAgainBtnClickCallback(!0);
                                            });
                                        }
                                    })),
                                    this.mTryAgainButton.node.on(cc.Node.EventType.TOUCH_END, this.mTryAgainBtnClickCallback.click, this.mTryAgainBtnClickCallback),
                                    (this.mSeeALlBtnClickCallback = new u.default(function () {
                                        t.seeAllBtnClickCallback();
                                    })),
                                    this.mSeeAllLabel.node.on(cc.Node.EventType.TOUCH_START, this.mSeeALlBtnClickCallback.click, this.mSeeALlBtnClickCallback),
                                    (this.mInviteCallback = new u.default(function () {
                                        t.showInvitePopup();
                                    })),
                                    this.mInviteIcon.node.on(cc.Node.EventType.TOUCH_END, this.mInviteCallback.click, this.mInviteCallback),
                                    n.default.register(a.default.SHARE_RESULT_SHOW_INVITE_TIPS, this.showInviteTipsPopup, this),
                                    n.default.register(a.default.SPEC_SONG_TRY_SKIN_RESULT, this.specSongTrySkin, this);
                            }),
                            (e.prototype.specSongTrySkin = function () {
                                K.default.trySkinSpecSong(!1, this.mTipsLayout.node);
                            }),
                            (e.prototype.showInviteTipsPopup = function () {
                                var i = this;
                                this.mDialogManager.showPopupDlgDynamic('prefab/shop/DialogOneButtonPrefab', function (e) {
                                    if (cc.isValid(i, !0) && e) {
                                        var t = e.getComponent(H.default);
                                        t.setContent('<color=3B5D72><size=30>' + ie.default.getInstance().getLanguageByKey('label_text.invite_tips') + '</size></color>'),
                                            t.setBtnTxt(ie.default.getInstance().getLanguageByKey('label_text.ok')),
                                            t.setShowClose(!1),
                                            t.setBottonCallback(function (e) {
                                                i.mDialogManager.dismissDialog(e);
                                            });
                                    }
                                });
                            }),
                            (e.prototype.showInvitePopup = function () {
                                0 == this.mInviteLayout.childrenCount && (this.mInviteType == O.InviteType.InviteType_SKIN ? this.showInviteSkinPopup() : this.mInviteType == O.InviteType.InviteType_HOT_SONG && this.showInviteSongPopup());
                            }),
                            (e.prototype.showInviteSkinPopup = function () {
                                var i = this;
                                ie.default.getInstance().isEnglish() ? ((this.mInviteIcon.node.active = !1), (this.mInviteLayout.active = !1)) : ((this.isInviteSkinShow = !0), (this.mInviteLayout.active = !0)),
                                    this.hideBanner('邀请得皮肤出现', !0),
                                    N.default.i('[zhangfu]GameoverUpdate.showInviteSkinPopup  = '),
                                    j.default.load('prefab/gameover/GameOverInviteSkin', function (e, t) {
                                        cc.isValid(i, !0) &&
                                            t &&
                                            (t.getComponent(U.default).setCloseCallback(function () {
                                                i.showBanner('邀请皮肤关闭'), (i.isInviteSkinShow = !1), t.destroy(), (i.mInviteLayout.active = !1);
                                            }),
                                            i.mInviteLayout.addChild(t));
                                    });
                            }),
                            (e.prototype.showInviteSongPopup = function () {
                                var o = this;
                                N.default.i('[zhangfu]GameoverUpdate.showInviteSongPopup  = '),
                                    ie.default.getInstance().isEnglish() ? ((this.mInviteIcon.node.active = !1), (this.mInviteLayout.active = !1)) : ((this.isInviteSkinShow = !0), (this.mInviteLayout.active = !0)),
                                    this.hideBanner('看视频得歌曲出现', !0),
                                    j.default.load('prefab/gameover/GameOverHotSong', function (e, t) {
                                        if (cc.isValid(o, !0) && t) {
                                            var i = t.getComponent(F.default);
                                            i.setCloseCallback(function () {
                                                t.destroy(), o.showBanner('视频得歌曲关闭'), (o.isInviteSongShow = !1), (o.mInviteLayout.active = !1);
                                            }),
                                                i.setStartGameCallback(function (e) {
                                                    o.playAgain(e);
                                                }),
                                                o.mInviteLayout.addChild(t);
                                        }
                                    });
                            }),
                            (e.prototype.showShareForGiftPrefb = function () {}),
                            (e.prototype.seeAllBtnClickCallback = function () {
                                this.hideBanner('查看全部');
                            }),
                            (e.prototype.tryAgainBtnClickCallback = function (e) {
                                if ((void 0 === e && (e = !0), T.default.playBtnBeats(), 0 == e))
                                    return (
                                        h.G.Ap.state.reset(!1),
                                        void h.G.Ap.config.loadMusic(h.G.Ap.state.mission.musicId, function (e) {
                                            h.G.Ap.presenter.enterScene(h.G.GAME_SCENE_NAME, h.G.Ap.state.mission.musicId);
                                        })
                                    );
                                var t = v.MusicLevelDataLoader.getItemInfoByMid(h.G.Ap.state.mBattleSettlement.mMid);
                                if (t.mGameComsume)
                                    if (k.MoneySystem.getHpCount() >= t.mGameComsume.spendEnergy) {
                                        var i = this.getPlayAgainBtnPos();
                                        this.playEnergyAnim(i, function () {
                                            k.MoneySystem.consumeHp(t.mGameComsume.spendEnergy),
                                                g.default.play(g.default.NAME_CONSUME_LIFE, g.default.PATH_CONSUME_LIFE, !1),
                                                h.G.Ap.state.reset(!1),
                                                h.G.Ap.config.loadMusic(h.G.Ap.state.mission.musicId, function (e) {
                                                    h.G.Ap.presenter.enterScene(h.G.GAME_SCENE_NAME, h.G.Ap.state.mission.musicId);
                                                });
                                        });
                                    } else this.toEnergyDialog();
                                else {
                                    var o = y.default.Ins().getPlugin(S.default.Plugin_Energy);
                                    if (o.isCurEnergyEnough()) {
                                        i = this.getPlayAgainBtnPos();
                                        this.playEnergyAnim(i, function () {
                                            g.default.play(g.default.NAME_CONSUME_LIFE, g.default.PATH_CONSUME_LIFE, !1),
                                                K.default.needTryInviteSkinSpecSong(t.musicId)
                                                    ? n.default.fire(a.default.SPEC_SONG_TRY_SKIN_RESULT)
                                                    : (o.decreaseEnergy(1),
                                                      h.G.Ap.state.reset(!1),
                                                      h.G.Ap.config.loadMusic(h.G.Ap.state.mission.musicId, function (e) {
                                                          h.G.Ap.presenter.enterScene(h.G.GAME_SCENE_NAME, h.G.Ap.state.mission.musicId);
                                                      }));
                                        });
                                    } else this.toEnergyDialog();
                                }
                            }),
                            (e.prototype.playAgain = function (e, t) {
                                void 0 === t && (t = !0);
                                var i = null;
                                if (((i = null == e || null == e ? v.MusicLevelDataLoader.getItemInfoByMid(h.G.Ap.state.mBattleSettlement.mMid) : e), console.warn('playAgain => spendEnergy:' + t), 0 == t))
                                    null == e || null == e ? h.G.Ap.state.reset(!1) : (h.G.Ap.state.reset(), (h.G.Ap.state.mission = new I.Mission(i.id, i.musicId, !1))),
                                        h.G.Ap.config.loadMusic(h.G.Ap.state.mission.musicId, function (e) {
                                            h.G.Ap.presenter.enterScene(h.G.GAME_SCENE_NAME, h.G.Ap.state.mission.musicId);
                                        });
                                else if (i.mGameComsume)
                                    k.MoneySystem.getHpCount() >= i.mGameComsume.spendEnergy
                                        ? (k.MoneySystem.consumeHp(i.mGameComsume.spendEnergy),
                                          g.default.play(g.default.NAME_CONSUME_LIFE, g.default.PATH_CONSUME_LIFE, !1),
                                          null == e || null == e ? h.G.Ap.state.reset(!1) : (h.G.Ap.state.reset(), (h.G.Ap.state.mission = new I.Mission(i.id, i.musicId, !1))),
                                          h.G.Ap.config.loadMusic(h.G.Ap.state.mission.musicId, function (e) {
                                              h.G.Ap.presenter.enterScene(h.G.GAME_SCENE_NAME, h.G.Ap.state.mission.musicId);
                                          }))
                                        : this.toEnergyDialog();
                                else {
                                    var o = y.default.Ins().getPlugin(S.default.Plugin_Energy);
                                    if (o.isCurEnergyEnough()) {
                                        if ((g.default.play(g.default.NAME_CONSUME_LIFE, g.default.PATH_CONSUME_LIFE, !1), K.default.needTryInviteSkinSpecSong(i.musicId))) return void n.default.fire(a.default.SPEC_SONG_TRY_SKIN_RESULT);
                                        o.decreaseEnergy(1),
                                            null == e || null == e ? h.G.Ap.state.reset(!1) : (h.G.Ap.state.reset(), (h.G.Ap.state.mission = new I.Mission(i.id, i.musicId, !1))),
                                            h.G.Ap.config.loadMusic(h.G.Ap.state.mission.musicId, function (e) {
                                                h.G.Ap.presenter.enterScene(h.G.GAME_SCENE_NAME, h.G.Ap.state.mission.musicId);
                                            });
                                    } else this.toEnergyDialog();
                                }
                            }),
                            (e.prototype.goHomeBtnClickCallback = function () {
                                this.hideBanner('去主页');
                                var e = A.default.read(w.default.OPEN_GAMEOVER_FROM);
                                (C.default.DefaultPageIndex = '1' == e ? C.default.GAME_ENTRA_SCENE_INDEX.MUSIC_LIB_INDEX : '2' == e ? C.default.GAME_ENTRA_SCENE_INDEX.TO_HOT_INDEX : C.default.GAME_ENTRA_SCENE_INDEX.HOMEPAGE_INDEX), h.G.Ap.presenter.enterScene('MainScene'), A.default.pushAsync();
                            }),
                            (e.prototype.energyClickCallback = function () {
                                this.toEnergyDialog();
                            }),
                            (e.prototype.goldClickCallback = function () {
                                var o = this;
                                j.default.load('prefab/PlayerInfoPopupProfab', function (e, t) {
                                    if (t && cc.isValid(o, !0)) {
                                        o.hideBanner('金币出现');
                                        var i = t.getComponent(ne.default);
                                        i.setCloseSelfCallback(function () {
                                            t.destroy(), 0 == o.mInviteLayout.childrenCount && o.showBanner('金币关闭');
                                        }),
                                            o.mTipsLayout.node.addChild(t),
                                            i.playerGoldBtnClick(0);
                                    } else N.default.e('[GameOver] load PlayerInfoPopupProfab error = ' + e);
                                });
                            }),
                            (e.prototype.diamondClickCallback = function () {
                                var o = this;
                                j.default.load('prefab/PlayerInfoPopupProfab', function (e, t) {
                                    if (t && cc.isValid(o, !0)) {
                                        o.hideBanner('钻石出现');
                                        var i = t.getComponent(ne.default);
                                        i.setCloseSelfCallback(function () {
                                            t.destroy(), 0 == o.mInviteLayout.childrenCount && o.showBanner('钻石关闭');
                                        }),
                                            o.mTipsLayout.node.addChild(t),
                                            i.playerDiamondBtnClick(0);
                                    } else N.default.e('[GameOver] load PlayerInfoPopupProfab error = ' + e);
                                });
                            }),
                            (e.prototype.hpCallback = function (e, t) {
                                t <= 0 ? (this.mTimeCountdownPanel.node.active = !1) : ((this.mTimeCountdownLabel.string = p.default.convertSecondToMinutesSecond(t)), (this.mTimeCountdownPanel.node.active = !0));
                            }),
                            (e.prototype.onChange = function (e, t, i, o, n) {
                                (this.mTopGoldCountLabel.string = t + ''), (this.mTopEnergyCountLabel.string = e + ''), (this.mTopDiamondLabel.string = i + '');
                            }),
                            (e.prototype.registerShowRankPageEvent = function () {
                                n.default.register(a.default.ON_RESULT_RANK_BACK_CLICK, this.showBanner, this);
                            }),
                            (e.prototype.unRegisterShowRankPageEvent = function () {
                                n.default.remove(a.default.ON_RESULT_RANK_BACK_CLICK, this.showBanner, this);
                            }),
                            (e.prototype.showGiftBoxOrUpdateDialog = function (e) {
                                var t = this;
                                this.isGiftBox()
                                    ? this.showGiftBox(e)
                                    : re.default.getInstance().isEnglish() && 100001 < e.mMid
                                    ? this.levelVideoSkin(e, 0)
                                    : e.mIsUpLevel
                                    ? this.showUpdateDialog(e)
                                    : cc.sys.platform == cc.sys.QQ_PLAY
                                    ? this.onTipsFinish(e)
                                    : this.showDiamondGiftPopup(e, function (e) {
                                          e
                                              ? O.default.needShowShareGiftByToggle(1, function (e) {
                                                    e && t.showShareForGiftPrefb();
                                                })
                                              : (0 == t.mInviteLayout.childrenCount && (t.isShareForGiftShow || t.isNewRecordShow || t.isGiftBoxShow || t.isInviteSongShow || t.isInviteSkinShow || t.isFirstPayShow || t.showBanner(' showGiftBoxOrUpdateDialog 最后一个else')),
                                                t.scheduleOnce(function () {
                                                    ae.default.getInstance().gotoPage(t.node, 'GameOverPrefab');
                                                }, 0.1));
                                      });
                            }),
                            (e.prototype.isGiftBox = function () {
                                return 0 < M.default.getInstance().getGainChestTotal();
                            }),
                            (e.prototype.levelVideoSkin = function (o, n) {
                                var a = this,
                                    e = X.SkinDataMgr.Ins().getSkinListExceptDefault()[5],
                                    t = h.G.Ap.state.mBattleSettlement;
                                e.isLock && (0 < t.mStar || 0 < t.mCrown)
                                    ? j.default.load('prefab/LevelVideoGetSkinPrefab', function (e, t) {
                                          if (t) {
                                              a.mTipsLayout.node.addChild(t);
                                              var i = t.getComponent(se.default);
                                              i &&
                                                  (i.closeCallback = function () {
                                                      a.showOtherPopup.bind(a, o, n), ae.default.getInstance().gotoPage(a.node, 'GameOverPrefab');
                                                  });
                                          }
                                      })
                                    : this.isShareForGiftShow || this.isNewRecordShow || this.isGiftBoxShow || this.isInviteSongShow || this.isInviteSkinShow || this.isFirstPayShow || ae.default.getInstance().gotoPage(this.node, 'GameOverPrefab');
                            }),
                            (e.prototype.showGiftBox = function (o) {
                                var n = this;
                                (this.isGiftBoxShow = !0),
                                    j.default.load('prefab/GiftMaskLayoutPrefb', function (e, i) {
                                        if (i) {
                                            n.hideBanner('礼包动画出现', !0), (i.name = 'giftBox');
                                            var t = i.getComponent(r.default);
                                            t.setOnAwardTipsClickCallback(function (e) {
                                                R.default.Ins().pop('GiftBoxPage'),
                                                    i.destroy(),
                                                    n.toSkinPage(),
                                                    n.scheduleOnce(function () {
                                                        ae.default.getInstance().gotoPage(n.node, 'GameOverPrefab');
                                                    }, 0.1);
                                            }),
                                                t.setOkayListener(function (e, t) {
                                                    R.default.Ins().pop('GiftBoxPage'), i.destroy(), ae.default.getInstance().gotoPage(n.node, 'GameOverPrefab'), t || n.onGiftBoxClose(e, o);
                                                }),
                                                n.mTipsLayout.node.addChild(i),
                                                R.default.Ins().push('GiftBoxPage');
                                        } else N.default.e('[GameOver] load GiftMaskLayoutPrefb error = ' + e), n.showLevelVideoPopup(o, 0);
                                    });
                            }),
                            (e.prototype.toSkinPage = function () {
                                (this.isGiftBoxShow = !1), (C.default.DefaultPageIndex = C.default.GAME_ENTRA_SCENE_INDEX.TO_SKIN_PAGE), h.G.Ap.presenter.enterScene('MainScene');
                            }),
                            (e.prototype.onGiftBoxClose = function (e, t) {
                                if (((this.isGiftBoxShow = !1), console.log('[GameOver Gift] destroy GiftBoxDialog onGiftBoxClose.... reward =' + e), e && e.skinPieces && 0 < e.skinPieces.length)) this.showLevelVideoPopup(t, e.gold);
                                else {
                                    console.log('[GameOver Gift] destroy GiftBoxDialog by okay no jigswa');
                                    var i = e ? e.gold : 0;
                                    this.showLevelVideoPopup(t, i);
                                }
                            }),
                            (e.prototype.showLevelVideoPopup = function (e, t) {
                                console.log('[zhangfu] game over show other popup ... gold = ' + t + ', levelRecord = ' + e), re.default.getInstance().isEnglish() && 100001 < e.mMid ? this.levelVideoSkin(e, t) : e.mIsUpLevel ? this.showUpdateDialog(e) : cc.sys.platform == cc.sys.QQ_PLAY ? this.onTipsFinish(e) : this.isShareForGiftShow || this.isNewRecordShow || this.isGiftBoxShow || this.isInviteSongShow || this.isInviteSkinShow || this.isFirstPayShow || this.showBanner('show other popup 最后一个else'), (this.mRewardCoin += t), this.showGoldAndExp();
                            }),
                            (e.prototype.showOtherPopup = function (e, t) {
                                console.log('[zhangfu] game over show other popup ... gold = ' + t + ', levelRecord = ' + e), e.mIsUpLevel ? this.showUpdateDialog(e) : cc.sys.platform == cc.sys.QQ_PLAY ? this.onTipsFinish(e) : this.isShareForGiftShow || this.isNewRecordShow || this.isGiftBoxShow || this.isInviteSongShow || this.isInviteSkinShow || this.isFirstPayShow || this.showBanner('show other popup 最后一个else'), (this.mRewardCoin += t), this.showGoldAndExp();
                            }),
                            (e.prototype.showUpdateDialog = function (n) {
                                var a = this;
                                j.default.load('prefab/UpdateDialog', function (e, t) {
                                    if (t) {
                                        a.hideBanner('升级出现');
                                        var i = t.getComponent(s.default),
                                            o = d.default.Ins();
                                        i.setData(o.getUserLevel(), h.G.Ap.state.mBattleSettlement.mMusicId, h.G.Ap.state.mBattleSettlement.mMusicName, h.G.Ap.state.mBattleSettlement.mScore),
                                            i.setListener(function () {
                                                R.default.Ins().pop('UpdatePage'),
                                                    t.destroy(),
                                                    j.default.load('prefab/UpdateContent', function (e, t) {
                                                        if (t) {
                                                            var i = t.getComponent(c.default);
                                                            i.setData(o.getUserLevel()),
                                                                i.setListener(function () {
                                                                    R.default.Ins().pop('UpdateContentPage'),
                                                                        t.destroy(),
                                                                        a.onTipsFinish(n),
                                                                        a.scheduleOnce(function () {
                                                                            ae.default.getInstance().gotoPage(a.node, 'GameOverPrefab');
                                                                        }, 0.1);
                                                                }),
                                                                a.mTipsLayout.node.addChild(t),
                                                                R.default.Ins().push('UpdateContentPage');
                                                        } else N.default.e('[GameOver] load UpdateContent error = ' + e);
                                                    });
                                                var e = l.default
                                                    .Ins()
                                                    .getDBRow(l.eDataBase.eDB_Lv, o.getUserLevel() + '')
                                                    .getRewarGold();
                                                y.default.Ins().getPlugin(S.default.Plugin_Economy).gainGold(e), (a.mRewardCoin += e), a.showGoldAndExp();
                                            }),
                                            a.mTipsLayout.node.addChild(t),
                                            R.default.Ins().push('UpdatePage');
                                    } else N.default.e('[GameOver] load UpdateDialog error = ' + e);
                                });
                            }),
                            (e.prototype.showGoldAndExp = function () {
                                (this.mRewardGoldLabel.string = '+ ' + this.mRewardCoin), (this.mRewardExpLabel.string = '+ ' + this.mRewardExp);
                            }),
                            (e.prototype.getPlayAgainBtnPos = function () {
                                var e = this.mTryAgainButton.node.parent.convertToWorldSpaceAR(this.mTryAgainButton.node.getPosition());
                                return this.node.convertToNodeSpaceAR(e);
                            }),
                            (e.prototype.playNextMusic = function (t) {
                                var e = this.getNextMusicBtnPos();
                                this.playEnergyAnim(e, function () {
                                    K.default.needTryInviteSkinSpecSong(t.music.mid)
                                        ? n.default.fire(a.default.SPEC_SONG_TRY_SKIN_RESULT)
                                        : (y.default.Ins().getPlugin(S.default.Plugin_Energy).decreaseEnergy(1),
                                          h.G.Ap.state.reset(),
                                          (h.G.Ap.state.mission = new I.Mission(t.id, t.music.mid, !1)),
                                          h.G.Ap.config.loadMusic(t.music.mid, function (e) {
                                              h.G.Ap.presenter.enterScene(h.G.GAME_SCENE_NAME, t.music.mid);
                                          }));
                                });
                            }),
                            (e.prototype.getNextMusicBtnPos = function () {
                                var e = this.mGoNextButton.node.parent.convertToWorldSpaceAR(this.mGoNextButton.node.getPosition());
                                return this.node.convertToNodeSpaceAR(e);
                            }),
                            (e.prototype.playEnergyAnim = function (i, o) {
                                var n = this;
                                this.showEventStopNode(),
                                    (this.mEnergyAnimPanel.active = !0),
                                    this.scheduleOnce(function () {
                                        var e = cc.moveTo(0.5, i),
                                            t = cc.sequence(
                                                e,
                                                cc.callFunc(function () {
                                                    var e = n.mEnergyAnimPanel.getComponent(cc.Animation);
                                                    e.on(
                                                        'finished',
                                                        function () {
                                                            o(), n.hideEventStopNode(), n.mEnergyAnimPanel.stopAllActions();
                                                        },
                                                        n,
                                                    ),
                                                        e.play('heart_anim');
                                                }),
                                            );
                                        n.mEnergyAnimPanel.runAction(t);
                                    }, 0.02);
                            }),
                            (e.prototype.onDestroy = function () {
                                (this.mbDestroyed = !0), x.MGAdv.hideBanner(V.ADScene.GAME_RESULT_BANNER), x.MGAdv.destroyBanner(V.ADScene.GAME_RESULT_BANNER), D.ToastPopManager.getIns().destroy(), d.default.Ins().removeUserListener(this), o.User.UserInfoManager.unRegisterHpReviveListener(this.hpCallback, this), this.unRegisterShowRankPageEvent(), n.default.remove(a.default.SHARE_RESULT_SHOW_INVITE_TIPS, this.showInviteTipsPopup, this), n.default.remove(a.default.SPEC_SONG_TRY_SKIN_RESULT, this.specSongTrySkin, this), cc.sys.garbageCollect(), this.stopGameBoxAnim(), this.unscheduleAllCallbacks();
                            }),
                            (e.prototype.adaptorUI = function () {
                                P.SUtil.ins().isLiuHai() ? (P.SUtil.ins().toTop(this.mTopIconPanel, 5.6), P.SUtil.ins().toTop(this.mEnergyAnimPanel, 5.2), P.SUtil.ins().toTop(this.mMusicNameLabel, 15.2), P.SUtil.ins().toTop(this.mRewardStarLayout, 19.8), P.SUtil.ins().toTop(this.mRewardCrownLayout, 20.8), P.SUtil.ins().toTop(this.mScoreLabel, 23.5), P.SUtil.ins().toTop(this.mScoreLabelShadow, 23.8), P.SUtil.ins().toTop(this.mRewardPanel, 35.4), P.SUtil.ins().toTop(this.mChallengeFriendButton, 40), P.SUtil.ins().toTop(this.mBg, 0), P.SUtil.ins().toTop(this.mInviteIcon, 34.6), P.SUtil.ins().toBottomByPercent(this.mInviteLayout, 16.2), P.SUtil.ins().toTop(this.mDlIcon, 17.5)) : P.SUtil.ins().isQuanMian() && (P.SUtil.ins().toTop(this.mTopIconPanel, 2.5), P.SUtil.ins().toTop(this.mEnergyAnimPanel, 2.3), P.SUtil.ins().toTop(this.mMusicNameLabel, 14.2), P.SUtil.ins().toTop(this.mRewardStarLayout, 19.8), P.SUtil.ins().toTop(this.mRewardCrownLayout, 19.7), P.SUtil.ins().toTop(this.mScoreLabel, 23.3), P.SUtil.ins().toTop(this.mScoreLabelShadow, 23.5), P.SUtil.ins().toTop(this.mRewardPanel, 34.9), P.SUtil.ins().toTop(this.mChallengeFriendButton, 40.4), P.SUtil.ins().toTop(this.mBg, -2.8), P.SUtil.ins().toTop(this.mInviteIcon, 34.6), P.SUtil.ins().toBottomByPercent(this.mInviteLayout, 14.8), P.SUtil.ins().toTop(this.mDlIcon, 17.5)), this.mTryAgainButton.getComponent(cc.Widget).updateAlignment(), this.mGoNextButton.getComponent(cc.Widget).updateAlignment();
                            }),
                            (e.prototype.showEventStopNode = function () {
                                (this.mStopEventNode.active = !0),
                                    this.mStopEventNode.on(
                                        cc.Node.EventType.TOUCH_START,
                                        function (e) {
                                            e.stopPropagationImmediate();
                                        },
                                        this,
                                    );
                            }),
                            (e.prototype.hideEventStopNode = function () {
                                this.mStopEventNode.active = !1;
                            }),
                            (e.prototype.showInviteSkinDialog = function (e) {
                                0 == this.mInviteLayout.childrenCount && this.showBanner('onTipsFinish ');
                            }),
                            (e.prototype.onTipsFinish = function (e) {
                                var t = this;
                                this.showInviteSkinDialog(e),
                                    this.mCheckRewardProcessor && this.mCheckRewardProcessor.checkInviterReward(),
                                    this.showDiamondGiftPopup(e, function (e) {
                                        e &&
                                            O.default.needShowShareGiftByToggle(1, function (e) {
                                                e && t.showShareForGiftPrefb();
                                            });
                                    });
                            }),
                            (e.prototype.showDiamondGiftPopup = function (e, s) {
                                var c = this;
                                if (e) {
                                    var l = e.mMid,
                                        u = e.mId;
                                    this.getServerTime(function (e, t) {
                                        var i = null;
                                        e && (i = new Date(t));
                                        var o = i ? p.default.formatDate(i.valueOf()) : '',
                                            n = A.default.read(w.default.SHARE_FOR_GIFT_DAILY_SHOWED_DATE) || '',
                                            a = c.getNormalMusicTimes(),
                                            r = o !== n && 1 < a && l !== c.MUSIC_ID_1 && l !== c.MUSIC_ID_2 && u < 9e3;
                                        s(r);
                                    });
                                }
                            }),
                            (e.prototype.addNormalMusicTimes = function () {
                                var e = A.default.read(w.default.RESULT_PAGE_TIME_WITH_NORMAL_MUSIC) || '0',
                                    t = parseInt(e) + 1;
                                A.default.save(w.default.RESULT_PAGE_TIME_WITH_NORMAL_MUSIC, t + '');
                            }),
                            (e.prototype.getNormalMusicTimes = function () {
                                var e = A.default.read(w.default.RESULT_PAGE_TIME_WITH_NORMAL_MUSIC) || '0';
                                return parseInt(e);
                            }),
                            (e.prototype.getServerTime = function (i) {
                                W.MGUser.getCurrentServerRealTime({
                                    complete: function (e, t) {
                                        i(e, t);
                                    },
                                });
                            }),
                            (e.prototype.showHotSongShare = function (a, r) {
                                var s = this;
                                try {
                                    if (!this.shouldShowHotSongShare()) return void r(!1);
                                    Z.default.isCM() ||
                                        j.default.load('prefab/gameover/GameOverHotSongShare', function (e, t) {
                                            if (t) {
                                                var i = t.getComponent(Y.default),
                                                    o = v.MusicLevelDataLoader.getItemInfoByMid(a.mMid),
                                                    n = E.LevelMgr.Ins().getLevelInfo(a.mLevel);
                                                i.setData(a.mMid, a.mLevel, f.default.gIns().getLanguageByKey(a.mMusicName), a.mScore, a.mHistoryBestScore, o ? o.level : 0, n ? n.mUnlockDiamond : 0),
                                                    i.setCompleteFunc(function () {
                                                        R.default.Ins().pop('GameOverHotSongSharePage'), t.destroy(), r(!0);
                                                    }),
                                                    s.mTipsLayout.node.addChild(t),
                                                    R.default.Ins().push('GameOverHotSongSharePage');
                                            } else r(!1);
                                        });
                                } catch (e) {
                                    console.log('--- showHotSongShare err: ---' + e), r(!1);
                                }
                            }),
                            (e.prototype.shouldShowHotSongShare = function () {
                                var e = h.G.Ap.state.mBattleSettlement,
                                    t = d.default.Ins().getLevelRecordByMid(e.mMid),
                                    i = h.G.getLaunchOption(),
                                    o = e.mLevel,
                                    n = t.isRecordLocked(),
                                    a = null !== i && null !== i.query && n && o >= _.Constant.CHOICENESS_STARTID && (parseInt(i.query.source) === Q.ShareHelper.SHARE_SOURCE_INVITE_SONG || parseInt(i.query.source) === Q.ShareHelper.SHARE_SOURCE_BATTLE_FRIEND);
                                return console.log('--- shouldShowHotSongShare valid: --- ' + a), console.log('--- shouldShowHotSongShare levelId: --- ' + o), console.log('--- shouldShowHotSongShare locked: --- ' + n), console.log('--- shouldShowHotSongShare params: --- ', i), a;
                            }),
                            (e.prototype.shouldShowHotMusicBattleTips = function () {
                                return O.default.needShowHotMusicbattleTips() && !this.shouldShowHotSongShare();
                            }),
                            (e.prototype.initGuideToAddFav = function () {
                                var e = A.default.read(w.default.HAS_ENTER_FROM_ATTENTION),
                                    t = X.SkinDataMgr.Ins().getOwnedSkin(J.default.skinName);
                                !q.StringUtil.isEmpty(e) || (t && t.isOwnedPermanent()) || this.showFavGuide();
                            }),
                            (e.prototype.showFavGuide = function () {
                                if (Z.default.isWeiXin()) {
                                    this.mAddFavIcon.node.active = !0;
                                    var e = this.mAddFavIcon.getComponent(cc.Animation);
                                    e &&
                                        this.scheduleOnce(function () {
                                            e.play('guide_to_add_fav');
                                        }, 0.1);
                                } else {
                                    this.mAddFavIconQQ.node.active = !0;
                                    var t = this.mAddFavIconQQ.getComponent(cc.Animation);
                                    t &&
                                        this.scheduleOnce(function () {
                                            t.play('guide_to_add_fav_qq');
                                        }, 0.1);
                                }
                                this.adaptorFav();
                            }),
                            (e.prototype.adaptorFav = function () {
                                var e = P.SUtil.ins();
                                N.default.e('ScreenRatio:' + e.mScreenRatio), Z.default.isWeiXin() ? (e.isLiuHai() ? e.toTopByPx(this.mAddFavIcon, 40) : e.isQuanMian() ? e.toTopByPx(this.mAddFavIcon, 30) : e.isPuTong() && e.toTopByPx(this.mAddFavIcon, 10)) : Z.default.isQQ();
                            }),
                            __decorate([ue(cc.Layout)], e.prototype, 'mTopIconPanel', void 0),
                            __decorate([ue(cc.Button)], e.prototype, 'mTopEnergyIconPanel', void 0),
                            __decorate([ue(cc.Label)], e.prototype, 'mTimeCountdownLabel', void 0),
                            __decorate([ue(cc.Layout)], e.prototype, 'mTimeCountdownPanel', void 0),
                            __decorate([ue(cc.Sprite)], e.prototype, 'mTopEnergyIcon', void 0),
                            __decorate([ue(cc.Label)], e.prototype, 'mTopEnergyCountLabel', void 0),
                            __decorate([ue(cc.Button)], e.prototype, 'mTopGoldPanel', void 0),
                            __decorate([ue(cc.Label)], e.prototype, 'mTopGoldCountLabel', void 0),
                            __decorate([ue(cc.Button)], e.prototype, 'mTopDiamondPanel', void 0),
                            __decorate([ue(cc.Label)], e.prototype, 'mTopDiamondLabel', void 0),
                            __decorate([ue(cc.Label)], e.prototype, 'mMusicNameLabel', void 0),
                            __decorate([ue(cc.Label)], e.prototype, 'mScoreLabel', void 0),
                            __decorate([ue(cc.Label)], e.prototype, 'mScoreLabelShadow', void 0),
                            __decorate([ue(cc.Layout)], e.prototype, 'mRewardStarLayout', void 0),
                            __decorate([ue(cc.Layout)], e.prototype, 'mRewardCrownLayout', void 0),
                            __decorate([ue(cc.Sprite)], e.prototype, 'mRewardStarIcon1', void 0),
                            __decorate([ue(cc.Sprite)], e.prototype, 'mRewardStarIcon2', void 0),
                            __decorate([ue(cc.Sprite)], e.prototype, 'mRewardStarIcon3', void 0),
                            __decorate([ue(cc.Sprite)], e.prototype, 'mRewardCrownIcon1', void 0),
                            __decorate([ue(cc.Sprite)], e.prototype, 'mRewardCrownIcon2', void 0),
                            __decorate([ue(cc.Sprite)], e.prototype, 'mRewardCrownIcon3', void 0),
                            __decorate([ue(cc.Label)], e.prototype, 'mRewardGoldLabel', void 0),
                            __decorate([ue(cc.Label)], e.prototype, 'mRewardExpLabel', void 0),
                            __decorate([ue(cc.Button)], e.prototype, 'mGoHomeButton', void 0),
                            __decorate([ue(cc.Button)], e.prototype, 'mGoNextButton', void 0),
                            __decorate([ue(cc.Button)], e.prototype, 'mGoNextLabel', void 0),
                            __decorate([ue(cc.Button)], e.prototype, 'mTryAgainButton', void 0),
                            __decorate([ue(cc.Label)], e.prototype, 'mGoNextConditionLable', void 0),
                            __decorate([ue(cc.Button)], e.prototype, 'mChallengeFriendButton', void 0),
                            __decorate([ue(cc.Node)], e.prototype, 'mEnergyAnimPanel', void 0),
                            __decorate([ue(cc.Layout)], e.prototype, 'mTipsLayout', void 0),
                            __decorate([ue(cc.Node)], e.prototype, 'mGlobalRankLayout', void 0),
                            __decorate([ue(cc.Layout)], e.prototype, 'mRankDialogLayout', void 0),
                            __decorate([ue(cc.Layout)], e.prototype, 'mToastPopLayout', void 0),
                            __decorate([ue(cc.Sprite)], e.prototype, 'mNextBtnBgSprite', void 0),
                            __decorate([ue(cc.Sprite)], e.prototype, 'mNewRecordIcon', void 0),
                            __decorate([ue(cc.Sprite)], e.prototype, 'mLockNextSprite', void 0),
                            __decorate([ue(cc.Node)], e.prototype, 'mRewardPanel', void 0),
                            __decorate([ue(cc.Sprite)], e.prototype, 'mBg', void 0),
                            __decorate([ue(cc.Sprite)], e.prototype, 'mSeeAllBtn', void 0),
                            __decorate([ue(cc.Label)], e.prototype, 'mSeeAllLabel', void 0),
                            __decorate([ue(cc.Node)], e.prototype, 'mStopEventNode', void 0),
                            __decorate([ue(cc.Sprite)], e.prototype, 'mShareForGiftBg', void 0),
                            __decorate([ue(cc.Sprite)], e.prototype, 'mLoadingIcon', void 0),
                            __decorate([ue(cc.Node)], e.prototype, 'mGuideLayout', void 0),
                            __decorate([ue(cc.Sprite)], e.prototype, 'mInviteIcon', void 0),
                            __decorate([ue(cc.Node)], e.prototype, 'mInviteLayout', void 0),
                            __decorate([ue(cc.Sprite)], e.prototype, 'mHotMusicBattleTips', void 0),
                            __decorate([ue(cc.Sprite)], e.prototype, 'mToHomeBtnRedSpot', void 0),
                            __decorate([ue(cc.Sprite)], e.prototype, 'mAddFavIcon', void 0),
                            __decorate([ue(cc.Sprite)], e.prototype, 'mAddFavIconQQ', void 0),
                            __decorate([ue(cc.Sprite)], e.prototype, 'mDlIcon', void 0),
                            __decorate([ue(cc.Layout)], e.prototype, 'mGameBoxLayout', void 0),
                            __decorate([ue(cc.Sprite)], e.prototype, 'mGameBoxIcon1', void 0),
                            __decorate([ue(cc.Sprite)], e.prototype, 'mGameBoxIcon2', void 0),
                            __decorate([ue(cc.Sprite)], e.prototype, 'mGameBoxIcon3', void 0),
                            __decorate([ue(cc.Sprite)], e.prototype, 'mGameBoxIcon4', void 0),
                            __decorate([ue(cc.Button)], e.prototype, 'mNextLabelButton', void 0),
                            (e = __decorate([le], e))
                        );
                    })(cc.Component);
                (i.default = de), cc._RF.pop();
            },
            {
                '../../../modules/MGAdv/scripts/Logic/MGAdvDefine': 'MGAdvDefine',
                '../../../modules/MGAdv/scripts/Logic/MGAdvEntrance': 'MGAdvEntrance',
                '../../../modules/MGAppShare/scripts/ShareHelper': 'ShareHelper',
                '../../../modules/MGUser/scripts/Logic/MGUserEntrance': 'MGUserEntrance',
                '../../../modules/MGUtils/MGPlatform': 'MGPlatform',
                '../../base/G': 'G',
                '../../base/Log': 'Log',
                '../../base/State': 'State',
                '../../config/LSKey': 'LSKey',
                '../../config/RemoteCfgMgr': 'RemoteCfgMgr',
                '../../infoc/m_p2_Uaction': 'm_p2_Uaction',
                '../../util/PU': 'PU',
                '../../util/PageHeap': 'PageHeap',
                '../../util/QQReport': 'QQReport',
                '../../util/SUtil': 'SUtil',
                '../../util/SceneMusicMgr': 'SceneMusicMgr',
                '../../util/SceneMusicUtil': 'SceneMusicUtil',
                '../../util/StringUtil': 'StringUtil',
                '../../util/TimeUtil': 'TimeUtil',
                '../Core/GameDefine': 'GameDefine',
                '../DB/DBMgr': 'DBMgr',
                '../Logic/ChestManager': 'ChestManager',
                '../Logic/EventBus': 'EventBus',
                '../Logic/I18nManager': 'I18nManager',
                '../Logic/LangMgr': 'LangMgr',
                '../Logic/LevelMgr': 'LevelMgr',
                '../Logic/MoneySystem': 'MoneySystem',
                '../Logic/NotifyEvent': 'NotifyEvent',
                '../Logic/PlayerMgr': 'PlayerMgr',
                '../Logic/Plugin/IPlugin': 'IPlugin',
                '../Logic/Plugin/PluginMgr': 'PluginMgr',
                '../Logic/SkinDataManager': 'SkinDataManager',
                '../Network/Protocol/StorageUtil': 'StorageUtil',
                '../UI/GameEntraScene/BasicTouchEvent': 'BasicTouchEvent',
                '../UI/GameEntraScene/CheckRewardProcessor': 'CheckRewardProcessor',
                '../UI/GameEntraScene/GameEntranceScene': 'GameEntranceScene',
                '../UI/GameEntraScene/ImgCache': 'ImgCache',
                '../UI/GameEntraScene/PopupDlg': 'PopupDlg',
                '../UI/GameEntraScene/PrefabMgr': 'PrefabMgr',
                '../UI/GameEntraScene/ToastPopManager': 'ToastPopManager',
                '../UI/GameEntraScene/gameover/GameOverHotSongShare': 'GameOverHotSongShare',
                '../UI/GameEntraScene/mainpage/AttentionPrefab': 'AttentionPrefab',
                '../UI/MusicLevelDataLoader': 'MusicLevelDataLoader',
                '../UI/UserInfoManager': 'UserInfoManager',
                '../UI/playerInfoPopup/PlayerInfoPopupProfab': 'PlayerInfoPopupProfab',
                '../challengeCompetition/TipsDialog': 'TipsDialog',
                '../keypad/KeypadNavigator': 'KeypadNavigator',
                '../shop/DialogOneButtonPrefab': 'DialogOneButtonPrefab',
                '../skin/SkinUtils': 'SkinUtils',
                '../task/TaskItem': 'TaskItem',
                '../task/TaskSystem': 'TaskSystem',
                './GameOverHotSong': 'GameOverHotSong',
                './GameOverInviteSKin': 'GameOverInviteSKin',
                './GameOverPopupUtil': 'GameOverPopupUtil',
                './GiftBoxDialog': 'GiftBoxDialog',
                './LevelVideoGetSkinPrefab': 'LevelVideoGetSkinPrefab',
                './UpdateContent': 'UpdateContent',
                './UpdateDialog': 'UpdateDialog',
            },
        ],
        'mgb_sdk.d': [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '36ec20IHRRNBomJRwIMel/c', 'mgb_sdk.d'), cc._RF.pop();
            },
            {},
        ],
        'mgrpt_sdk.d': [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '79b82CG1FNBLJHl1p+3Hd3n', 'mgrpt_sdk.d'), cc._RF.pop();
            },
            {},
        ],
        minigame_piano2_arena_fail: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '5686afD/r5BYolL0ZrqL/49', 'minigame_piano2_arena_fail'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = e('./BIReportI'),
                    n = e('../base/G'),
                    a = (function (e) {
                        function t() {
                            return (null !== e && e.apply(this, arguments)) || this;
                        }
                        return (
                            __extends(t, e),
                            (t.prototype.getTableID = function () {
                                return 177;
                            }),
                            (t.prototype.setFailId = function (e) {
                                return this.set('fail_id', e), this;
                            }),
                            (t.prototype.setNetWork = function (e) {
                                return this.set('network_type', e), this;
                            }),
                            (t.report = function (e) {
                                new t().setFailId(e).setNetWork(n.G.networkType).reportData();
                            }),
                            t
                        );
                    })(o.default);
                (i.default = a), cc._RF.pop();
            },
            {
                '../base/G': 'G',
                './BIReportI': 'BIReportI',
            },
        ],
        minigame_piano2_crash: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'f2e9f9B6nRAwZLM34IHjs5X', 'minigame_piano2_crash'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (e) {
                    function l() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(l, e),
                        (l.report = function (e, t, i, o, n, a, r, s) {
                            var c = new l();
                            c.set('bugid', e), c.set('gameid', t), c.set('gameversion', i), c.set('appid', o), c.set('nickname', n), c.set('dumpkey', a), c.set('message', r), c.set('stack', s), c.reportData();
                        }),
                        (l.prototype.getTableID = function () {
                            return 161;
                        }),
                        l
                    );
                })(e('./BIReportI').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './BIReportI': 'BIReportI',
            },
        ],
        minigame_piano2_hotmusic: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '42afeCqycNMKpx4ULWBfuPK', 'minigame_piano2_hotmusic'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (e) {
                    function a() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(a, e),
                        (a.prototype.setAction = function (e) {
                            return this.set('action', e), this;
                        }),
                        (a.prototype.setSource = function (e) {
                            return this.set('source', e), this;
                        }),
                        (a.prototype.setID = function (e) {
                            return this.set('music_id', e + ''), this;
                        }),
                        (a.prototype.setName = function (e) {
                            return this.set('music_name', e), this;
                        }),
                        (a.prototype.setType = function (e) {
                            return this.set('music_type', e), this;
                        }),
                        (a.report = function (e, t, i, o, n) {
                            new a().setAction(e).setSource(t).setID(i).setName(o).setType(n).reportData();
                        }),
                        (a.prototype.getTableID = function () {
                            return 139;
                        }),
                        (a.ACTION_SHOW = 1),
                        (a.ACTION_CLICK_SHARE = 2),
                        (a.ACTION_CLICK_TRY = 3),
                        (a.ACTION_CLICK_START = 4),
                        (a.ACTION_CLICK_DIAMOND_UNLOCK = 6),
                        (a.ACTION_CLICK_GOLD_UNLOCK = 7),
                        (a.ACTION_DIAMOND_UNLOCK_SUCC = 8),
                        (a.ACTION_GOLD_UNLOCK_SUCC = 9),
                        (a.ACTION_INVITE_SUCC = 10),
                        (a.ACTION_SHOW_UNLOCK_CONFIRM_DIALOG = 11),
                        (a.ACTION_SHOW_UNLOCK_CONFIRM_DIALOG_CLICK_CANCEL = 12),
                        (a.ACTION_SHOW_UNLOCK_CONFIRM_DIALOG_CLICK_OK = 13),
                        (a.ACTION_SHOW_BUY_DIAMOND_DIALOG = 14),
                        (a.ACTION_CLICK_UNLOCK_BY_VIDEO = 15),
                        (a.SOURCE_HOME_PAGE = 1),
                        (a.SOURCE_TAB = 2),
                        (a.SOURCE_DIALOG = 3),
                        (a.TYPE_ACTIVITY = 1),
                        (a.TYPE_HOT = 2),
                        a
                    );
                })(e('./BIReportI').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './BIReportI': 'BIReportI',
            },
        ],
        minigame_piano2_leave_page: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '12c780uVSBIVaPuRRQFa/zt', 'minigame_piano2_leave_page'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (e) {
                    function i() {
                        return (null !== e && e.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(i, e),
                        (i.prototype.getTableID = function () {
                            return 166;
                        }),
                        (i.report = function (e) {
                            if (cc.sys.platform == cc.sys.WECHAT_GAME) {
                                var t = new i();
                                t.set('leave_page', e), t.reportData();
                            }
                        }),
                        i
                    );
                })(e('./BIReportI').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './BIReportI': 'BIReportI',
            },
        ],
        minigame_piano2_pintu: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'd42d6JHP49DIL4jtdPOLDOn', 'minigame_piano2_pintu'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function (t) {
                    function a() {
                        return (null !== t && t.apply(this, arguments)) || this;
                    }
                    return (
                        __extends(a, t),
                        (a.report = function (e, t, i, o, n) {
                            new a().setSource(e).setAction(t).setId(i).setUseCount(n).setGetCount(o).reportData();
                        }),
                        (a.prototype.setSource = function (e) {
                            return t.prototype.set.call(this, 'source', e), this;
                        }),
                        (a.prototype.setAction = function (e) {
                            return t.prototype.set.call(this, 'action', e), this;
                        }),
                        (a.prototype.setGetCount = function (e) {
                            return t.prototype.set.call(this, 'pintu_get_num', e), this;
                        }),
                        (a.prototype.setUseCount = function (e) {
                            return t.prototype.set.call(this, 'pintu_use_num', e), this;
                        }),
                        (a.prototype.setId = function (e) {
                            return t.prototype.set.call(this, 'pintu_id', e), this;
                        }),
                        (a.prototype.getTableID = function () {
                            return 143;
                        }),
                        (a.SOURCE_DAILY = 11),
                        (a.SOURCE_GAME_GIFT_BOX = 12),
                        (a.SOURCE_SHARE_GET_CHIP = 13),
                        (a.SOURCE_EXCHANGE_GIFT = 21),
                        (a.ACTION_GET_CHIP = 1),
                        (a.ACTION_USE_CHIP = 2),
                        (a.CHIP_NUMBER_1 = 1),
                        (a.CHIP_NUMBER_2 = 2),
                        (a.CHIP_NUMBER_3 = 3),
                        (a.CHIP_NUMBER_4 = 4),
                        (a.CHIP_NUMBER_5 = 5),
                        (a.CHIP_NUMBER_6 = 6),
                        (a.CHIP_NUMBER_7 = 7),
                        (a.CHIP_NUMBER_8 = 8),
                        (a.CHIP_NUMBER_9 = 9),
                        a
                    );
                })(e('./BIReportI').default);
                (i.default = o), cc._RF.pop();
            },
            {
                './BIReportI': 'BIReportI',
            },
        ],
        'polyglot.min': [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'e26fd9yy65A4q3/JkpVnFYg', 'polyglot.min');
                var o,
                    n,
                    a =
                        'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
                            ? function (e) {
                                  return typeof e;
                              }
                            : function (e) {
                                  return e && 'function' == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : typeof e;
                              };
                (o = void 0),
                    (n = function (t) {
                        function e(e) {
                            (e = e || {}), (this.phrases = {}), this.extend(e.phrases || {}), (this.currentLocale = e.locale || 'en'), (this.allowMissing = !!e.allowMissing), (this.warn = e.warn || i);
                        }

                        function n(e, t, i) {
                            var o, n, a, r, s, c, l;
                            return (
                                null != i && e
                                    ? ((a =
                                          (n = e.split(u))[
                                              ((r = t),
                                              (s = i),
                                              d[
                                                  ((c = r),
                                                  (l = (function (e) {
                                                      var t,
                                                          i,
                                                          o,
                                                          n = {};
                                                      for (t in e) if (e.hasOwnProperty(t)) for (o in (i = e[t])) n[i[o]] = t;
                                                      return n;
                                                  })(p)),
                                                  l[c] || l.en)
                                              ](s))
                                          ] || n[0]),
                                      (o = a.replace(/^\s+|\s+$/g, '')))
                                    : (o = e),
                                o
                            );
                        }

                        function i(e) {
                            t.console && t.console.warn && t.console.warn('WARNING: ' + e);
                        }
                        (e.VERSION = '0.4.3'),
                            (e.prototype.locale = function (e) {
                                return e && (this.currentLocale = e), this.currentLocale;
                            }),
                            (e.prototype.extend = function (e, t) {
                                var i;
                                for (var o in e) e.hasOwnProperty(o) && ((i = e[o]), t && (o = t + '.' + o), 'object' == (void 0 === i ? 'undefined' : a(i)) ? this.extend(i, o) : (this.phrases[o] = i));
                            }),
                            (e.prototype.clear = function () {
                                this.phrases = {};
                            }),
                            (e.prototype.replace = function (e) {
                                this.clear(), this.extend(e);
                            }),
                            (e.prototype.t = function (e, t) {
                                var i, o;
                                return (
                                    'number' == typeof (t = null == t ? {} : t) &&
                                        (t = {
                                            smart_count: t,
                                        }),
                                    'string' == typeof this.phrases[e] ? (i = this.phrases[e]) : 'string' == typeof t._ ? (i = t._) : this.allowMissing ? (i = e) : (this.warn('Missing translation for key: "' + e + '"'), (o = e)),
                                    'string' == typeof i &&
                                        ((t = (function (e) {
                                            var t = {};
                                            for (var i in e) t[i] = e[i];
                                            return t;
                                        })(t)),
                                        (o = (function (e, t) {
                                            for (var i in t) '_' !== i && t.hasOwnProperty(i) && (e = e.replace(new RegExp('%\\{' + i + '\\}', 'g'), t[i]));
                                            return e;
                                        })((o = n(i, this.currentLocale, t.smart_count)), t))),
                                    o
                                );
                            }),
                            (e.prototype.has = function (e) {
                                return e in this.phrases;
                            });
                        var u = '||||',
                            d = {
                                chinese: function (e) {
                                    return 0;
                                },
                                german: function (e) {
                                    return 1 !== e ? 1 : 0;
                                },
                                french: function (e) {
                                    return 1 < e ? 1 : 0;
                                },
                                russian: function (e) {
                                    return e % 10 == 1 && e % 100 != 11 ? 0 : 2 <= e % 10 && e % 10 <= 4 && (e % 100 < 10 || 20 <= e % 100) ? 1 : 2;
                                },
                                czech: function (e) {
                                    return 1 === e ? 0 : 2 <= e && e <= 4 ? 1 : 2;
                                },
                                polish: function (e) {
                                    return 1 === e ? 0 : 2 <= e % 10 && e % 10 <= 4 && (e % 100 < 10 || 20 <= e % 100) ? 1 : 2;
                                },
                                icelandic: function (e) {
                                    return e % 10 != 1 || e % 100 == 11 ? 1 : 0;
                                },
                            },
                            p = {
                                chinese: ['fa', 'id', 'ja', 'ko', 'lo', 'ms', 'th', 'tr', 'zh'],
                                german: ['da', 'de', 'en', 'es', 'fi', 'el', 'he', 'hu', 'it', 'nl', 'no', 'pt', 'sv'],
                                french: ['fr', 'tl', 'pt-br'],
                                russian: ['hr', 'ru'],
                                czech: ['cs'],
                                polish: ['pl'],
                                icelandic: ['is'],
                            };
                        return e;
                    }),
                    'function' == typeof define && define.amd
                        ? define([], function () {
                              return n(o);
                          })
                        : 'object' == (void 0 === i ? 'undefined' : a(i))
                        ? (t.exports = n(o))
                        : (o.Polyglot = n(o)),
                    cc._RF.pop();
            },
            {},
        ],
        'recommender.min': [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'c9c939o4rhC4qFMKbsEXF8a', 'recommender.min');
                var s =
                    'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
                        ? function (e) {
                              return typeof e;
                          }
                        : function (e) {
                              return e && 'function' == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : typeof e;
                          };
                !(function (e, t) {
                    for (var i in t) e[i] = t[i];
                })(
                    window,
                    (function (i) {
                        var o = {};

                        function n(e) {
                            if (o[e]) return o[e].exports;
                            var t = (o[e] = {
                                i: e,
                                l: !1,
                                exports: {},
                            });
                            return i[e].call(t.exports, t, t.exports, n), (t.l = !0), t.exports;
                        }
                        return (
                            (n.m = i),
                            (n.c = o),
                            (n.d = function (e, t, i) {
                                n.o(e, t) ||
                                    Object.defineProperty(e, t, {
                                        enumerable: !0,
                                        get: i,
                                    });
                            }),
                            (n.r = function (e) {
                                'undefined' != typeof Symbol &&
                                    Symbol.toStringTag &&
                                    Object.defineProperty(e, Symbol.toStringTag, {
                                        value: 'Module',
                                    }),
                                    Object.defineProperty(e, '__esModule', {
                                        value: !0,
                                    });
                            }),
                            (n.t = function (t, e) {
                                if ((1 & e && (t = n(t)), 8 & e)) return t;
                                if (4 & e && 'object' == (void 0 === t ? 'undefined' : s(t)) && t && t.__esModule) return t;
                                var i = Object.create(null);
                                if (
                                    (n.r(i),
                                    Object.defineProperty(i, 'default', {
                                        enumerable: !0,
                                        value: t,
                                    }),
                                    2 & e && 'string' != typeof t)
                                )
                                    for (var o in t)
                                        n.d(
                                            i,
                                            o,
                                            function (e) {
                                                return t[e];
                                            }.bind(null, o),
                                        );
                                return i;
                            }),
                            (n.n = function (e) {
                                var t =
                                    e && e.__esModule
                                        ? function () {
                                              return e.default;
                                          }
                                        : function () {
                                              return e;
                                          };
                                return n.d(t, 'a', t), t;
                            }),
                            (n.o = function (e, t) {
                                return Object.prototype.hasOwnProperty.call(e, t);
                            }),
                            (n.p = ''),
                            n((n.s = 2))
                        );
                    })([
                        function (e, t, i) {
                            Object.defineProperty(t, '__esModule', {
                                value: !0,
                            });
                            var a =
                                    'function' == typeof Symbol && 'symbol' == s(Symbol.iterator)
                                        ? function (e) {
                                              return void 0 === e ? 'undefined' : s(e);
                                          }
                                        : function (e) {
                                              return e && 'function' == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : void 0 === e ? 'undefined' : s(e);
                                          },
                                r = '[recommender]';
                            t.default = {
                                isAble: !1,
                                setAble: function (e) {
                                    this.isAble = e;
                                },
                                setPlatform: function (e) {
                                    this.platform = e;
                                },
                                log: function (e) {
                                    for (var t = arguments.length, i = Array(1 < t ? t - 1 : 0), o = 1; o < t; o++) i[o - 1] = arguments[o];
                                    var n;
                                    this.isAble &&
                                        ('qq' == this.platform && 'undefined' != typeof BK && BK.Script && BK.Script.log
                                            ? ((i = i.map(function (e) {
                                                  return 'object' == (void 0 === e ? 'undefined' : a(e)) ? JSON.stringify(e) : e;
                                              })),
                                              'object' == (void 0 === e ? 'undefined' : a(e)) && (e = JSON.stringify(e)),
                                              BK.Script.log(1, 1, e + i.join(' ')))
                                            : (n = console).log.apply(
                                                  n,
                                                  ['', r, e].concat(
                                                      (function (e) {
                                                          if (Array.isArray(e)) {
                                                              for (var t = 0, i = Array(e.length); t < e.length; t++) i[t] = e[t];
                                                              return i;
                                                          }
                                                          return Array.from(e);
                                                      })(i),
                                                  ),
                                              ));
                                },
                                error: function (e) {
                                    if (this.isAble) {
                                        for (var t = arguments.length, i = Array(1 < t ? t - 1 : 0), o = 1; o < t; o++) i[o - 1] = arguments[o];
                                        var n;
                                        'qq' == this.platform && 'undefined' != typeof BK && BK.Script && BK.Script.log ? BK.Script.log(1, 1, e + i.join(' ')) : (n = console).error.apply(n, ['', r, e].concat(i));
                                    }
                                },
                                warn: function (e) {
                                    for (var t = arguments.length, i = Array(1 < t ? t - 1 : 0), o = 1; o < t; o++) i[o - 1] = arguments[o];
                                    var n;
                                    'qq' == this.platform && 'undefined' != typeof BK && BK.Script && BK.Script.log ? BK.Script.log(1, 1, e + i.join(' ')) : (n = console).warn.apply(n, ['', r, e].concat(i));
                                },
                            };
                        },
                        function (e, t, i) {
                            Object.defineProperty(t, '__esModule', {
                                value: !0,
                            }),
                                (t.platform = void 0);
                            var o,
                                n = (function () {
                                    function o(e, t) {
                                        for (var i = 0; i < t.length; i++) {
                                            var o = t[i];
                                            (o.enumerable = o.enumerable || !1), (o.configurable = !0), 'value' in o && (o.writable = !0), Object.defineProperty(e, o.key, o);
                                        }
                                    }
                                    return function (e, t, i) {
                                        return t && o(e.prototype, t), i && o(e, i), e;
                                    };
                                })(),
                                s =
                                    (o = i(0)) && o.__esModule
                                        ? o
                                        : {
                                              default: o,
                                          },
                                a = new ((function () {
                                    function i() {
                                        !(function (e, t) {
                                            if (!(e instanceof i)) throw new TypeError('Cannot call a class as a function');
                                        })(this);
                                    }
                                    return (
                                        n(i, [
                                            {
                                                key: 'request',
                                                value: function (e) {
                                                    var t = e.url,
                                                        i = e.data,
                                                        o = e.method,
                                                        n = e.success,
                                                        a = e.fail;
                                                    if ((s.default.log('开始请求：', t, '数据：', i || ''), 'undefined' == typeof wx)) {
                                                        var r = new XMLHttpRequest();
                                                        (r.onreadystatechange = function () {
                                                            if (4 == r.readyState)
                                                                if (200 <= r.status && r.status < 400) {
                                                                    var e = r.responseText;
                                                                    try {
                                                                        (e = JSON.parse(e)), s.default.log('请求成功：', t, '回包：', e);
                                                                    } catch (e) {
                                                                        s.default.warn('请求失败: ', t), a(e);
                                                                    }
                                                                    n && n(e);
                                                                } else a && a('server error: ' + r.status);
                                                        }),
                                                            r.open(o, t, !0),
                                                            r.setRequestHeader('Content-Type', 'application/json'),
                                                            r.send(i);
                                                    } else
                                                        wx.request({
                                                            url: t,
                                                            data: i || {},
                                                            header: {
                                                                'Content-Type': 'application/json',
                                                            },
                                                            method: o,
                                                            success: function (e) {
                                                                s.default.log('请求成功：', t, '回包：', e), n(e.data);
                                                            },
                                                            fail: function (e) {
                                                                s.default.warn('请求失败: ', t), a(e);
                                                            },
                                                        });
                                                },
                                            },
                                            {
                                                key: 'setStorage',
                                                value: function (e, t) {
                                                    try {
                                                        wx.setStorageSync(e, t);
                                                    } catch (e) {
                                                        s.default.warn('存储错误');
                                                    }
                                                },
                                            },
                                            {
                                                key: 'getStorage',
                                                value: function (e) {
                                                    var t = '';
                                                    try {
                                                        t = wx.getStorageSync(e);
                                                    } catch (e) {
                                                        s.default.warn('缓存获取错误');
                                                    }
                                                    return t;
                                                },
                                            },
                                            {
                                                key: 'setTimeout',
                                                value: (function (i) {
                                                    function e(e, t) {
                                                        return i.apply(this, arguments);
                                                    }
                                                    return (
                                                        (e.toString = function () {
                                                            return i.toString();
                                                        }),
                                                        e
                                                    );
                                                })(function (e, t) {
                                                    return setTimeout(e, t);
                                                }),
                                            },
                                            {
                                                key: 'clearTimeout',
                                                value: (function (t) {
                                                    function e(e) {
                                                        return t.apply(this, arguments);
                                                    }
                                                    return (
                                                        (e.toString = function () {
                                                            return t.toString();
                                                        }),
                                                        e
                                                    );
                                                })(function (e) {
                                                    clearTimeout(e);
                                                }),
                                            },
                                        ]),
                                        i
                                    );
                                })())();
                            t.platform = a;
                        },
                        function (e, t, i) {
                            Object.defineProperty(t, '__esModule', {
                                value: !0,
                            }),
                                (t.Recommender = void 0);
                            var o = (function () {
                                    function o(e, t) {
                                        for (var i = 0; i < t.length; i++) {
                                            var o = t[i];
                                            (o.enumerable = o.enumerable || !1), (o.configurable = !0), 'value' in o && (o.writable = !0), Object.defineProperty(e, o.key, o);
                                        }
                                    }
                                    return function (e, t, i) {
                                        return t && o(e.prototype, t), i && o(e, i), e;
                                    };
                                })(),
                                m = n(i(3)),
                                g = n(i(0)),
                                _ = n(i(5)),
                                y = n(i(6));

                            function n(e) {
                                return e && e.__esModule
                                    ? e
                                    : {
                                          default: e,
                                      };
                            }
                            var d = function (e) {
                                var h = this,
                                    t = e.appid,
                                    i = e.openid,
                                    o = e.debug,
                                    n = void 0 !== o && o,
                                    a = e.env,
                                    r = void 0 === a ? 'prod' : a,
                                    s = e.forceOpen,
                                    c = void 0 !== s && s,
                                    l = e.forceClose,
                                    u = void 0 !== l && l,
                                    d = e.onReady,
                                    p = e.platform,
                                    f = void 0 === p ? 'wx' : p;
                                this.checkInstance(),
                                    g.default.setAble(n),
                                    g.default.setPlatform(f),
                                    t
                                        ? (i || console.warn('请传入当前玩家的openid'),
                                          (this.appid = t),
                                          (this.openid = i),
                                          (this.config = y.default[r]),
                                          (this.env = r),
                                          (this.forceOpen = c),
                                          (this.forceClose = u),
                                          (this.platform = f),
                                          (this.pause = !1),
                                          (this.util = m.default.getInstance(this.platform)),
                                          (this.index = 0),
                                          (this.reporter = new _.default({
                                              appid: this.appid,
                                              openid: this.openid,
                                              svr: this.config.svr,
                                          })),
                                          (this.changeHandler = null),
                                          d && 'function' == typeof d && (this.readyHandler = d),
                                          g.default.log(
                                              '当前插件环境：',
                                              {
                                                  dev: '开发',
                                                  pre: '预发布',
                                                  prod: '正式',
                                              }[r],
                                          ),
                                          g.default.log('当前插件平台:', this.platform),
                                          (this.games = []),
                                          this.checkPlatform()
                                              ? Promise.all([this.getConfig(), this.getBlackList()])
                                                    .then(
                                                        function (e) {
                                                            var t = e[0];
                                                            if (0 === t.result) {
                                                                var i = t.data;
                                                                if (!i || !i.advise_list) return g.default.warn('后台回包错误，插件开关关闭'), void (h.readyHandler && h.readyHandler(!1, null));
                                                                var o = h.isInBlackList(e[1]);
                                                                g.default.log('当前渠道是否为黑名单渠道:', o.result), (o = o && o.disableGames ? o.disableGames : []), g.default.log('当前屏蔽游戏:', o);
                                                                var n = {},
                                                                    a = !0,
                                                                    r = !1,
                                                                    s = void 0;
                                                                try {
                                                                    for (var c, l = o[Symbol.iterator](); !(a = (c = l.next()).done); a = !0) n[c.value] = !0;
                                                                } catch (e) {
                                                                    (r = !0), (s = e);
                                                                } finally {
                                                                    try {
                                                                        !a && l.return && l.return();
                                                                    } finally {
                                                                        if (r) throw s;
                                                                    }
                                                                }
                                                                (i.IsOpen = i.is_open), (h.isLoop = i.is_loop), (h.loopTime = i.loop_time || 8), (h.hejiTime = i.heji_time || 8);
                                                                for (var u = 0; u < i.advise_list.length; ++u) {
                                                                    var d = i.advise_list[u];
                                                                    d.appid &&
                                                                        d.icon &&
                                                                        !n[d.appid] &&
                                                                        h.games.push({
                                                                            appid: d.appid,
                                                                            icon: d.icon,
                                                                            path: d.path,
                                                                        });
                                                                }
                                                                if (h.games.length <= 0) return g.default.warn('有效推荐游戏数为0，插件开关关闭'), void (h.readyHandler && h.readyHandler(!1, null));
                                                                if ((g.default.log('后台配置插件开关：', i.IsOpen ? '开启' : '关闭'), g.default.log('轮播开关', h.isLoop ? '开启' : '关闭'), h.isLoop && (g.default.log('轮播间隔', h.loopTime, '秒'), g.default.log('合集播放时间', h.hejiTime, '秒')), h.forceOpen && (g.default.log('插件开关强制开启'), (i.IsOpen = !0)), h.forceClose && (g.default.log('插件开关强制关闭'), (i.IsOpen = !1)), g.default.log('最终当前插件开关：', i.IsOpen ? '开启' : '关闭'), g.default.log('当前配置推荐游戏个数', i.advise_list.length), g.default.log('当前有效推荐游戏个数', h.games.length), h.initIndex(), h.readyHandler)) {
                                                                    var p = h.games[h.index];
                                                                    p && p.appid && p.icon ? (i.IsOpen && (h.report(p, 0, 100), h.startLoop()), h.readyHandler(i.IsOpen, p)) : (g.default.warn('后台数据错误，插件关闭'), h.readyHandler(!1, null));
                                                                }
                                                            } else g.default.log('后台拒绝，插件开关关闭'), h.readyHandler && h.readyHandler(!1, null);
                                                        },
                                                        function (e) {
                                                            g.default.log('网络错误，插件开关关闭：', e), h.readyHandler && h.readyHandler(!1, null);
                                                        },
                                                    )
                                                    .catch(function (e) {
                                                        throw e;
                                                    })
                                              : ('wx' == this.platform ? g.default.log('当前小游戏基础库版本不支持跳转功能，插件开关关闭，请参照文档 http://open.qqgame.qq.com/mobile/wiki/215/219/219.html 查看兼容相关处理') : g.default.log('当前不在手Q环境或是手Q版本过低，不支持游戏跳转，具体见玩一玩文档 http://hudong.qq.com/docs/engine/userInfo/other.html'),
                                                setTimeout(function () {
                                                    h.readyHandler && h.readyHandler(!1, null);
                                                }, 100)))
                                        : console.error('请传入当前游戏的appid');
                            };
                            (d.prototype = {
                                initIndex: function () {
                                    if (!this.isLoop) {
                                        var e = this.util.getStorage('mgplugin-time'),
                                            t = this.util.getStorage('mgplugin-index');
                                        '' !== e && '' !== t ? (g.default.log('上次跳转的时间', e), g.default.log('上次跳转到的游戏坐标', t), this.checkExpired(e) && t < this.games.length && (g.default.log('设置上次跳转的游戏坐标'), (this.index = t))) : g.default.log('当前无历史游戏坐标记录');
                                    }
                                },
                                setIndex: function (e) {
                                    this.isLoop || (this.util.setStorage('mgplugin-time', Date.now()), this.util.setStorage('mgplugin-index', e), g.default.log('设置本地缓存游戏坐标', e));
                                },
                                isInBlackList: function (e) {
                                    if ('wx' == this.platform && 'undefined' != typeof wx && wx.getLaunchOptionsSync)
                                        if ((g.default.log('当前渠道黑名单', e), e)) {
                                            var t = wx.getLaunchOptionsSync();
                                            if ((g.default.log('启动参数', t), t && t.referrerInfo)) {
                                                var i = t.referrerInfo.appId;
                                                for (var o in (g.default.log('当前来源渠道appid', i), e)) {
                                                    var n = e[o];
                                                    if (n.app_id == i) {
                                                        var a = void 0;
                                                        try {
                                                            a = JSON.parse(n.disable_games);
                                                        } catch (e) {
                                                            a = [];
                                                        }
                                                        return {
                                                            result: !0,
                                                            disableGames: a,
                                                        };
                                                    }
                                                }
                                            } else g.default.log('无来源渠道');
                                        } else g.default.log('黑名单为空');
                                    else g.default.log('非微信平台或平台基础库版本过低');
                                    return {
                                        result: !1,
                                        disableGames: [],
                                    };
                                },
                                checkExpired: function (e) {
                                    var t = new Date(),
                                        i = new Date(e);
                                    return t.getMonth() == i.getMonth() && t.getDate() == i.getDate();
                                },
                                checkInstance: function () {
                                    d.instance && d.instance.stopLoop && d.instance.stopLoop(), (d.instance = this);
                                },
                                getCurrentGame: function () {
                                    return this.games[this.index];
                                },
                                stopLoop: function () {
                                    void 0 !== this.loopInterval && null !== this.loopInterval ? (g.default.log('停止图片轮播', this.loopInterval), (this.pause = !0), this.clearInterval(this.loopInterval), (this.loopInterval = null)) : g.default.log('图片未轮播');
                                },
                                resumeLoop: function () {
                                    this.pause && (g.default.log('恢复轮播'), (this.pause = !1), this.startLoop());
                                },
                                checkPlatform: function () {
                                    if ('wx' == this.platform) return 'undefined' != typeof wx && wx.navigateToMiniProgram;
                                    if ('qq' == this.platform) {
                                        var e = !0;
                                        return ('undefined' != typeof BK && BK.QQ && BK.QQ.skipGame) || (g.default.warn('请引入玩一玩基础库'), (e = !1)), GameStatusInfo && GameStatusInfo.QQVer && '7.7.0' <= GameStatusInfo.QQVer ? (e = !0) : ((e = !1), g.default.log('当前手Q版本过低', GameStatusInfo)), e;
                                    }
                                },
                                changeToNextGame: function () {
                                    if (((this.index = (this.index + 1) % this.games.length), this.setIndex(this.index), 1 < this.games.length)) {
                                        if ((g.default.log('切换到下一个游戏，序号', this.index + 1), this.report(this.games[this.index], this.index, 100), this.changeHandler && 'function' == typeof this.changeHandler)) {
                                            var e = this.games[this.index];
                                            e && e.appid && e.icon ? this.changeHandler(e) : g.default.warn('游戏字段缺失');
                                        }
                                    } else g.default.log('当前游戏配置数为不大于1，不会切换游戏');
                                },
                                jumpToCurrentGame: function () {
                                    if (d.clickable) {
                                        d.clickable = !1;
                                        var e = this.games[this.index];
                                        e && e.icon && e.appid ? (g.default.log('当前跳转游戏', e), this.jumpToGame(e), this.report(e, this.index, 101)) : g.default.warn('游戏不存在');
                                    } else g.default.log('您点击的太快了');
                                },
                                jumpToGame: function (e) {
                                    var t = this;
                                    if (
                                        ('wx' == this.platform &&
                                            (wx.navigateToMiniProgram
                                                ? wx.navigateToMiniProgram({
                                                      appId: e.appid,
                                                      path: e.path || '',
                                                      extraData: e.extraData || {},
                                                      success: function () {
                                                          g.default.log('游戏跳转成功，appid: ' + e.appid);
                                                      },
                                                      fail: function () {
                                                          g.default.warn('游戏跳转失败，appid：', e.appid, '请检查是否和目标跳转小游戏绑定在同一个公众号，或者是当前项目是否使用了正确的小游戏appid。');
                                                      },
                                                      complete: function () {
                                                          setTimeout(function () {
                                                              d.clickable = !0;
                                                          }, 1500),
                                                              t.isLoop || t.changeToNextGame();
                                                      },
                                                  })
                                                : g.default.warn('当前小游戏基础库版本不支持跳转功能，基础库要求在2.2.0以上，请参照文档 http://open.qqgame.qq.com/mobile/wiki/215/219/219.html 查看兼容相关处理')),
                                        'qq' == this.platform)
                                    )
                                        if ('undefined' != typeof BK && BK.QQ && BK.QQ.skipGame) {
                                            var i = parseInt(e.appid);
                                            g.default.log('当前跳转appid ' + i),
                                                i ? BK.QQ.skipGame(i, '') : g.default.log('appid不符合规范'),
                                                setTimeout(function () {
                                                    d.clickable = !0;
                                                }, 1500),
                                                this.isLoop || this.changeToNextGame();
                                        } else g.default.warn('当前不在手Q环境或是手Q版本过低，不支持游戏跳转，具体见玩一玩文档 http://hudong.qq.com/docs/engine/userInfo/other.html');
                                },
                                onChange: function (e) {
                                    'function' == typeof e ? (this.changeHandler = e) : g.default.warn('请传入回调函数');
                                },
                                onReady: function (e) {
                                    'function' == typeof e ? (this.readyHandler = e) : g.default.warn('请传入回调函数');
                                },
                                getConfig: function () {
                                    var o = this;
                                    return new Promise(function (t, i) {
                                        var e = 'qq' == o.platform ? 'qqplay' : 'mgplugin';
                                        o.util.request({
                                            url: o.config.svr + '/' + e + '/getadviselist?appid=' + o.appid,
                                            method: 'GET',
                                            success: function (e) {
                                                t(e);
                                            },
                                            fail: function (e) {
                                                i(e);
                                            },
                                        });
                                    });
                                },
                                getBlackList: function () {
                                    var i = this;
                                    return new Promise(function (t, e) {
                                        i.util.request({
                                            url: i.config.cdn + '/mgplugin/data/blacklist.js',
                                            method: 'GET',
                                            success: function (e) {
                                                t(e);
                                            },
                                            fail: function (e) {
                                                g.default.log('拉取黑名单失败', e), t({});
                                            },
                                        });
                                    });
                                },
                                report: function (e, t, i) {
                                    var o = '未知';
                                    101 == i && (o = '点击'),
                                        100 == i && (o = '曝光'),
                                        g.default.log('触发上报，上报类型：', o, '游戏序号：', t + 1),
                                        this.reporter.report({
                                            iSceneLevel1: 1000001,
                                            iSceneLevel2: 1,
                                            iSceneLevel3: t + 1,
                                            iActionId: i,
                                            iResourceId1: e.appid,
                                        });
                                },
                                setInterval: function (e) {
                                    var t = this,
                                        i = this.intervalTime();
                                    return (
                                        g.default.log(i, '秒后切换到下一个游戏'),
                                        (d.interval = this.loopInterval =
                                            this.util.setTimeout(function () {
                                                e(), t.pause || t.setInterval(e);
                                            }, 1e3 * i)),
                                        g.default.log('设置定时', this.loopInterval),
                                        this.loopInterval
                                    );
                                },
                                clearInterval: function (e) {
                                    this.util.clearTimeout(e);
                                },
                                getQQGameEntry: function (e) {
                                    if ('wx' == this.platform)
                                        var t = new a({
                                            appid: this.appid,
                                            openid: this.openid,
                                            env: this.env,
                                            onLoad: function () {
                                                e && e(t);
                                            },
                                            recommender: this,
                                        });
                                    else
                                        g.default.log('非微信小游戏平台，不开启合集入口'),
                                            e &&
                                                e({
                                                    isOpen: !1,
                                                });
                                },
                                intervalTime: function () {
                                    return 'wxc2cd6f55732dc1f2' == this.getCurrentGame().appid ? (g.default.log('当前游戏为合集，轮播时间为', this.hejiTime, '秒'), this.hejiTime) : this.loopTime;
                                },
                                startLoop: function () {
                                    var e = this;
                                    if (this.isLoop) {
                                        null != d.loopInterval && (g.default.log('存在多个定时器，清除旧定时器'), this.clearInterval(d.loopInterval));
                                        var t = this.setInterval(function () {
                                            e ? (g.default.log('定时切换游戏'), e.changeToNextGame()) : (g.default.log('实例销毁，定时器清除'), e.clearInterval(t));
                                        });
                                    } else g.default.log('轮播未打开，不启动轮播');
                                },
                            }),
                                (d.clickable = !0);
                            var a = (function () {
                                function u(e) {
                                    var i = this,
                                        t = e.appid,
                                        o = void 0 === t ? '' : t,
                                        n = e.openid,
                                        a = void 0 === n ? 'unknown' : n,
                                        r = e.env,
                                        s = void 0 === r ? 'prod' : r,
                                        c = e.onLoad,
                                        l = e.recommender;
                                    !(function (e, t) {
                                        if (!(e instanceof u)) throw new TypeError('Cannot call a class as a function');
                                    })(this),
                                        o
                                            ? ((this.appid = o),
                                              (this.openid = a),
                                              (this.config = y.default[s]),
                                              (this.recommender = l),
                                              (this.reporter = new _.default({
                                                  appid: this.appid,
                                                  openid: this.openid,
                                                  svr: this.config.svr,
                                              })),
                                              (this.util = m.default.getInstance('wx')),
                                              this.recommender &&
                                                  this.recommender.getBlackList().then(function (e) {
                                                      i.recommender.isInBlackList(e).result
                                                          ? (g.default.log('渠道为黑名单渠道，合集入口关闭'), (i.isOpen = !1), c && c())
                                                          : i.getConfig().then(
                                                                function (e) {
                                                                    if (0 == e.result && e.data) {
                                                                        var t = e.data;
                                                                        (i.icon = t.icon), (i.path = t.path), (i.isOpen = t.is_open), g.default.log('当前的合集图标配置', t), g.default.log('当前合集图标开关：', t.is_open ? '开启' : '关闭'), ('undefined' != typeof wx && wx.navigateToMiniProgram) || (g.default.log('当前小游戏基础库版本不支持跳转功能，合集图标开关关闭'), (i.isOpen = !1)), i.isOpen && ((d.clickable = !0), i.report(100)), c && c();
                                                                    } else g.default.log('后台数据错误, 合集图标开关关闭', e), (i.isOpen = !1), c && c();
                                                                },
                                                                function (e) {
                                                                    g.default.log('网络错误，合集图标开关关闭', e), (i.isOpen = !1), onload && c();
                                                                },
                                                            );
                                                  }))
                                            : console.error('请传入当前游戏的appid');
                                }
                                return (
                                    o(u, [
                                        {
                                            key: 'getConfig',
                                            value: function () {
                                                var e = this;
                                                return new Promise(function (t, i) {
                                                    e.util.request({
                                                        url: e.config.svr + '/heji/getconfig?appid=' + e.appid,
                                                        method: 'GET',
                                                        success: function (e) {
                                                            t(e);
                                                        },
                                                        fail: function (e) {
                                                            i(e);
                                                        },
                                                    });
                                                });
                                            },
                                        },
                                        {
                                            key: 'getBlackList',
                                            value: function () {
                                                this.util.request({
                                                    url: this.config.svr + '/mgplugin/data/blacklist.js',
                                                    method: 'GET',
                                                    success: function (e) {
                                                        resolve(e);
                                                    },
                                                    fail: function (e) {
                                                        reject(e);
                                                    },
                                                });
                                            },
                                        },
                                        {
                                            key: 'navigateToMiniProgram',
                                            value: function () {
                                                d.clickable
                                                    ? 'undefined' != typeof wx && wx.navigateToMiniProgram
                                                        ? ((d.clickable = !1),
                                                          this.report(101),
                                                          wx.navigateToMiniProgram({
                                                              appId: 'wxc2cd6f55732dc1f2',
                                                              path: this.path || '',
                                                              extraData: {},
                                                              success: function () {
                                                                  g.default.log('合集跳转成功');
                                                              },
                                                              fail: function () {
                                                                  g.default.warn('合集跳转失败，请检查是否和合集小程序绑定在同一个公众号，或者是当前项目是否使用了正确的小游戏appid。');
                                                              },
                                                              complete: function () {
                                                                  setTimeout(function () {
                                                                      d.clickable = !0;
                                                                  }, 1500);
                                                              },
                                                          }))
                                                        : g.default.warn('当前小游戏基础库版本不支持跳转功能，基础库要求在2.2.0以上，请参照文档 http://open.qqgame.qq.com/mobile/wiki/215/219/219.html 查看兼容相关处理')
                                                    : g.default.log('您点击得太快了');
                                            },
                                        },
                                        {
                                            key: 'report',
                                            value: function (e) {
                                                var t = '未知';
                                                101 == e && (t = '点击'),
                                                    100 == e && (t = '曝光'),
                                                    g.default.log('触发合集上报，类型：', t),
                                                    this.reporter.report({
                                                        iSceneLevel1: 1000001,
                                                        iSceneLevel2: 1,
                                                        iSceneLevel3: 1,
                                                        iActionId: e,
                                                        iResourceId1: 'wxc2cd6f55732dc1f2',
                                                    });
                                            },
                                        },
                                    ]),
                                    u
                                );
                            })();
                            t.Recommender = d;
                        },
                        function (e, t, i) {
                            Object.defineProperty(t, '__esModule', {
                                value: !0,
                            });
                            var o = a(i(1)),
                                n = a(i(4));

                            function a(e) {
                                if (e && e.__esModule) return e;
                                var t = {};
                                if (null != e) for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                                return (t.default = e), t;
                            }
                            t.default = {
                                getInstance: function (e) {
                                    return 'qq' == e ? n.platform : 'wx' == e ? o.platform : void 0;
                                },
                            };
                        },
                        function (e, t, i) {
                            Object.defineProperty(t, '__esModule', {
                                value: !0,
                            }),
                                (t.platform = void 0);
                            var o,
                                n = (function () {
                                    function o(e, t) {
                                        for (var i = 0; i < t.length; i++) {
                                            var o = t[i];
                                            (o.enumerable = o.enumerable || !1), (o.configurable = !0), 'value' in o && (o.writable = !0), Object.defineProperty(e, o.key, o);
                                        }
                                    }
                                    return function (e, t, i) {
                                        return t && o(e.prototype, t), i && o(e, i), e;
                                    };
                                })(),
                                s =
                                    (o = i(0)) && o.__esModule
                                        ? o
                                        : {
                                              default: o,
                                          },
                                r = 'GameSandBox://resource/localStorage',
                                a = 0,
                                c = {},
                                l = new ((function () {
                                    function i() {
                                        !(function (e, t) {
                                            if (!(e instanceof i)) throw new TypeError('Cannot call a class as a function');
                                        })(this);
                                    }
                                    return (
                                        n(i, [
                                            {
                                                key: 'request',
                                                value: function (e) {
                                                    var i = e.url,
                                                        t = e.data,
                                                        o = e.method,
                                                        n = e.success,
                                                        a = e.fail;
                                                    s.default.log('开始请求：', i, '数据：', t || ''), XMLHttpRequest;
                                                    var r = new BK.HttpUtil(i);
                                                    r.setHttpMethod(o),
                                                        r.setHttpHeader('Content-Type', 'application/json'),
                                                        ('post' != o && 'POST' != o) ||
                                                            r.setHttpPostData(
                                                                (function (e) {
                                                                    var t = [];
                                                                    for (var i in e) {
                                                                        var o = e[i];
                                                                        t.push(i + '=' + o);
                                                                    }
                                                                    return t.join('&');
                                                                })(t),
                                                            ),
                                                        r.requestAsync(function (t, e) {
                                                            if (200 <= e && e < 400) {
                                                                t = t.readAsString(!0);
                                                                try {
                                                                    t = JSON.parse(t);
                                                                } catch (e) {
                                                                    s.default.warn('请求失败，解析错误: ', t, e), a && a(e);
                                                                }
                                                                s.default.log('请求成功：', i, '回包：', t), n && n(t);
                                                            } else s.default.warn('请求失败: ', i), a && a(t);
                                                        });
                                                },
                                            },
                                            {
                                                key: 'getStorage',
                                                value: function (e) {
                                                    if (!BK.FileUtil.isFileExist(r)) return '';
                                                    var t = BK.FileUtil.readFile(r).readAsString();
                                                    if (!t) return '';
                                                    var i = void 0;
                                                    try {
                                                        i = JSON.parse(t);
                                                    } catch (e) {
                                                        i = {};
                                                    }
                                                    return i && void 0 !== i[e] ? i[e] : '';
                                                },
                                            },
                                            {
                                                key: 'setStorage',
                                                value: function (e, t) {
                                                    var i = BK.FileUtil.readFile(r).readAsString(),
                                                        o = {};
                                                    if (i) {
                                                        var n = JSON.parse(i);
                                                        n && (o = n);
                                                    }
                                                    o[e] = t;
                                                    var a = JSON.stringify(o);
                                                    return BK.FileUtil.writeFile(r, a), !0;
                                                },
                                            },
                                            {
                                                key: 'setTimeout',
                                                value: function (e, t) {
                                                    var i = a;
                                                    return (
                                                        s.default.log('设置定时', i),
                                                        (c[i] = {
                                                            listener: e,
                                                            delay: t,
                                                        }),
                                                        a++,
                                                        BK.Director.ticker.setTimeout(function () {
                                                            s.default.log('执行定时', i);
                                                            var e = c[i];
                                                            e && e.listener(), delete c[i];
                                                        }, t),
                                                        i
                                                    );
                                                },
                                            },
                                            {
                                                key: 'clearTimeout',
                                                value: function (e) {
                                                    s.default.log('删除定时', e), c[e] && delete c[e];
                                                },
                                            },
                                        ]),
                                        i
                                    );
                                })())();
                            t.platform = l;
                        },
                        function (e, t, i) {
                            Object.defineProperty(t, '__esModule', {
                                value: !0,
                            });
                            var o,
                                a = (function () {
                                    function o(e, t) {
                                        for (var i = 0; i < t.length; i++) {
                                            var o = t[i];
                                            (o.enumerable = o.enumerable || !1), (o.configurable = !0), 'value' in o && (o.writable = !0), Object.defineProperty(e, o.key, o);
                                        }
                                    }
                                    return function (e, t, i) {
                                        return t && o(e.prototype, t), i && o(e, i), e;
                                    };
                                })(),
                                c = i(1),
                                l =
                                    (o = i(0)) && o.__esModule
                                        ? o
                                        : {
                                              default: o,
                                          },
                                r = {
                                    dtLoginTime: -1,
                                    vQimei: -1,
                                    vAppVer: -1,
                                    PlatID: -1,
                                    vOsType: -1,
                                    osversion: -1,
                                    nettype: -1,
                                    model: -1,
                                    iActionId: -1,
                                    iSceneLevel1: -1,
                                    iSceneLevel2: -1,
                                    iSceneLevel3: -1,
                                    iResourceId1: -1,
                                    iResourceId2: -1,
                                    iResourceId3: -1,
                                    iResourceId4: -1,
                                    iResourceId5: -1,
                                    iRet: -1,
                                    vV1: -1,
                                    vV2: -1,
                                    vV3: -1,
                                    vV4: -1,
                                    vV5: -1,
                                    vV6: -1,
                                    vV7: -1,
                                    vV8: -1,
                                    vV9: -1,
                                    vV10: -1,
                                },
                                n = (function () {
                                    function n(e) {
                                        var t = e.appid,
                                            i = e.openid,
                                            o = e.svr;
                                        !(function (e, t) {
                                            if (!(e instanceof n)) throw new TypeError('Cannot call a class as a function');
                                        })(this),
                                            (this.appid = t),
                                            (this.openid = i),
                                            (this.svr = o),
                                            (this.dataTemplate = Object.assign({}, r, {
                                                iResourceId2: this.appid,
                                            }));
                                    }
                                    return (
                                        a(n, [
                                            {
                                                key: 'report',
                                                value: function (r) {
                                                    var s = this;
                                                    return new Promise(function (e, t) {
                                                        (r = Object.assign({}, s.dataTemplate, r)), l.default.log('开始上报：', r);
                                                        var i,
                                                            o,
                                                            n,
                                                            a =
                                                                ((i = {
                                                                    data: [s.genDataString(r)],
                                                                    type: '0',
                                                                    openid: s.openid,
                                                                    appid: s.appid,
                                                                }),
                                                                (o = 'openid'),
                                                                (n = s.openid),
                                                                o in i
                                                                    ? Object.defineProperty(i, o, {
                                                                          value: n,
                                                                          enumerable: !0,
                                                                          configurable: !0,
                                                                          writable: !0,
                                                                      })
                                                                    : (i[o] = n),
                                                                i);
                                                        c.platform.request({
                                                            url: s.svr + '/mpreport/reportplugintlog',
                                                            data: a,
                                                            method: 'POST',
                                                            success: function () {
                                                                l.default.log('上报成功：', r), e();
                                                            },
                                                            fail: function (e) {
                                                                l.default.warn('上报失败：', r, e);
                                                            },
                                                        });
                                                    });
                                                },
                                            },
                                            {
                                                key: 'genDataString',
                                                value: function (t) {
                                                    var i = [];
                                                    return (
                                                        Object.keys(t).forEach(function (e) {
                                                            return i.push(t[e]);
                                                        }),
                                                        i.join('|')
                                                    );
                                                },
                                            },
                                        ]),
                                        n
                                    );
                                })();
                            t.default = n;
                        },
                        function (e, t, i) {
                            Object.defineProperty(t, '__esModule', {
                                value: !0,
                            });
                            var o = r(i(7)),
                                n = r(i(8)),
                                a = r(i(9));

                            function r(e) {
                                return e && e.__esModule
                                    ? e
                                    : {
                                          default: e,
                                      };
                            }
                            t.default = {
                                dev: o.default,
                                prod: n.default,
                                pre: a.default,
                            };
                        },
                        function (e, t, i) {
                            Object.defineProperty(t, '__esModule', {
                                value: !0,
                            }),
                                (t.default = {
                                    svr: 'https://test.ngo.minigame.qq.com',
                                    cdn: 'http://mwebtest.minigame.qq.com',
                                });
                        },
                        function (e, t, i) {
                            Object.defineProperty(t, '__esModule', {
                                value: !0,
                            }),
                                (t.default = {
                                    svr: 'https://goplatform.minigame.qq.com',
                                    cdn: 'https://platform.minigame.qq.com',
                                });
                        },
                        function (e, t, i) {
                            Object.defineProperty(t, '__esModule', {
                                value: !0,
                            }),
                                (t.default = {
                                    svr: 'https://pre.ngo.minigame.qq.com',
                                    cdn: 'http://mwebtest.minigame.qq.com',
                                });
                        },
                    ]),
                ),
                    cc._RF.pop();
            },
            {},
        ],
        scrollview: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'f0071ojRF1MMa2jxek7UiAY', 'scrollview'),
                    Object.defineProperty(i, '__esModule', {
                        value: !0,
                    });
                var o = (function () {
                    function e(e) {
                        var t = this;
                        (this.scrollview = e.scrollview),
                            (this.mask = e.mask),
                            (this.content = e.content),
                            (this.node_pools = new Map()),
                            (this.item_templates = new Map()),
                            e.item_templates.forEach(function (e) {
                                (e.node.active = !1), t.item_templates.set(e.key, e.node);
                            }),
                            (this.dir = e.direction || s.Vertical),
                            (this.width = e.width || this.mask.width),
                            (this.height = e.height || this.mask.height),
                            (this.gap_x = e.gap_x || 0),
                            (this.gap_y = e.gap_y || 0),
                            (this.cb_host = e.cb_host),
                            (this.item_setter = e.item_setter),
                            (this.item_get_size = e.item_get_size),
                            (this.recycle_cb = e.recycle_cb),
                            (this.scroll_to_end_cb = e.scroll_to_end_cb),
                            (this.auto_scrolling = e.auto_scrolling || !1),
                            this.dir == s.Vertical ? (this.content.width = this.width) : (this.content.height = this.height),
                            this.mask.setContentSize(this.width, this.height),
                            this.mask.addComponent(cc.Mask),
                            this.scrollview.node.setContentSize(this.width, this.height),
                            (this.scrollview.vertical = this.dir == s.Vertical),
                            (this.scrollview.horizontal = this.dir == s.Horizontal),
                            (this.scrollview.inertia = !0),
                            this.scrollview.node.on('scrolling', this.on_scrolling, this),
                            this.scrollview.node.on('scroll-to-bottom', this.on_scroll_to_end, this),
                            this.scrollview.node.on('scroll-to-right', this.on_scroll_to_end, this),
                            this.scrollview.node.on('scroll-ended', this.on_scroll_ended, this);
                    }
                    return (
                        (e.prototype.setOnScrollToTopListener = function (e) {
                            this.mOnScorllToHead = e;
                        }),
                        (e.prototype.on_scroll_ended = function (e) {
                            0 == this.start_index && this.mOnScorllToHead && this.mOnScorllToHead();
                        }),
                        (e.prototype.on_scroll_to_end = function (e) {
                            this.scroll_to_end_cb && this.scroll_to_end_cb.call(this.cb_host);
                        }),
                        (e.prototype.on_scrolling = function (e) {
                            if (this.items && this.items.length)
                                if (this.dir == s.Vertical) {
                                    var t = this.content.y;
                                    t < 0 && (t = 0), t > this.content.height - this.height && (t = this.content.height - this.height);
                                    for (var i = 0, o = this.items.length - 1, n = (r = -t) - this.height; this.items[i].y - this.items[i].height > r; ) i++;
                                    for (; this.items[o].y < n; ) o--;
                                    i != this.start_index && o != this.stop_index && ((this.start_index = i), (this.stop_index = o), this.render_items(!1));
                                } else {
                                    var a = this.content.x;
                                    0 < a && (a = 0), a < this.width - this.content.width && (a = this.width - this.content.width);
                                    var r;
                                    for (i = 0, o = this.items.length - 1, n = (r = -a) + this.width; this.items[i].x + this.items[i].width < r; ) i++;
                                    for (; this.items[o].x > n; ) o--;
                                    i != this.start_index && o != this.stop_index && ((this.start_index = i), (this.stop_index = o), this.render_items(!1));
                                }
                        }),
                        (e.prototype.spawn_node = function (e) {
                            var t,
                                i = this.node_pools.get(e);
                            return i && 0 < i.length ? (t = i.pop()) : ((t = cc.instantiate(this.item_templates.get(e))).active = !0), (t.parent = this.content), t;
                        }),
                        (e.prototype.recycle_item = function (e, t) {
                            if ((void 0 === t && (t = !1), e.node && cc.isValid(e.node))) {
                                var i = this.node_pools.get(e.data.key);
                                i || ((i = []), this.node_pools.set(e.data.key, i)), i.push(e.node), this.recycle_cb && this.recycle_cb.call(this.cb_host, e.node, e.data.key), e.node.removeFromParent(t), (e.node = null);
                            }
                        }),
                        (e.prototype.clear_items = function (t) {
                            var i = this;
                            void 0 === t && (t = !1),
                                this.items &&
                                    this.items.forEach(function (e) {
                                        i.recycle_item(e, t);
                                    });
                        }),
                        (e.prototype.render_items = function (e) {
                            for (var t, i = 0; i < this.start_index; i++) (t = this.items[i]).node && this.recycle_item(t, e);
                            for (i = this.items.length - 1; i > this.stop_index; i--) (t = this.items[i]).node && this.recycle_item(t, e);
                            for (i = this.start_index; i <= this.stop_index; i++) (t = this.items[i]).node || ((t.node = this.spawn_node(t.data.key)), this.item_setter.call(this.cb_host, t.node, t.data.key, t.data.data, i)), t.node.setPosition(t.x, t.y);
                        }),
                        (e.prototype.pack_item = function (e, t, i) {
                            var o,
                                n,
                                a = this.spawn_node(t.key),
                                r = [0, 0],
                                s = r[0],
                                c = r[1];
                            this.item_get_size ? ((s = (o = this.item_get_size.call(this.cb_host, a, t.key, t.data, e))[0]), (c = o[1])) : ((s = (n = this.item_setter.call(this.cb_host, a, t.key, t.data, e))[0]), (c = n[1]));
                            var l = {
                                x: 0,
                                y: 0,
                                width: s,
                                height: c,
                                data: t,
                                node: a,
                            };
                            return this.recycle_item(l, i), l;
                        }),
                        (e.prototype.layout_items = function (e) {
                            if (!(this.items.length <= 0)) {
                                var t = 0;
                                if (0 < e) {
                                    var i = this.items[e - 1];
                                    t = this.dir == s.Vertical ? i.y - i.height - this.gap_y : i.x + i.width + this.gap_x;
                                }
                                for (var o = e, n = this.items.length; o < n; o++) {
                                    var a = this.items[o];
                                    this.dir == s.Vertical ? ((a.x = 0), (a.y = t), (t -= a.height + this.gap_y)) : ((a.y = 0), (a.x = t), (t += a.width + this.gap_x));
                                }
                            }
                        }),
                        (e.prototype.resize_content = function () {
                            if (this.items.length <= 0) return (this.content.width = 0), void (this.content.height = 0);
                            var e = this.items[this.items.length - 1];
                            this.dir == s.Vertical ? (this.content.height = Math.max(this.height, e.height - e.y)) : (this.content.width = Math.max(this.width, e.x + e.width));
                        }),
                        (e.prototype.clear_data = function (e) {
                            void 0 === e && (e = !1), this.clear_items(e), (this.items = []), this.resize_content(), (this.start_index = -1), (this.stop_index = -1), this.dir == s.Vertical ? (this.content.y = 0) : (this.content.x = 0);
                        }),
                        (e.prototype.set_data = function (e, o) {
                            var n = this;
                            void 0 === o && (o = !1),
                                this.clear_items(o),
                                (this.items = []),
                                e.forEach(function (e, t) {
                                    var i = n.pack_item(t, e, o);
                                    n.items.push(i);
                                }),
                                this.layout_items(0),
                                this.resize_content(),
                                (this.start_index = -1),
                                (this.stop_index = -1),
                                this.dir == s.Vertical ? (this.content.y = 0) : (this.content.x = 0),
                                0 < this.items.length && this.on_scrolling();
                        }),
                        (e.prototype.insert_data = function (e, t) {
                            var i,
                                o = this;
                            if (0 != t.length)
                                if ((this.items || (this.items = []), e < 0 || e > this.items.length)) cc.warn('invalid index', e);
                                else {
                                    var n = e == this.items.length,
                                        a = [];
                                    t.forEach(function (e, t) {
                                        var i = o.pack_item(t, e, !1);
                                        a.push(i);
                                    }),
                                        (i = this.items).splice.apply(i, [e, 0].concat(a)),
                                        this.layout_items(e),
                                        this.resize_content(),
                                        (this.start_index = -1),
                                        (this.stop_index = -1),
                                        this.auto_scrolling && n && this.scroll_to_end(),
                                        this.on_scrolling();
                                }
                        }),
                        (e.prototype.append_data = function (e) {
                            this.items || (this.items = []), this.insert_data(this.items.length, e);
                        }),
                        (e.prototype.scroll_to_end = function () {
                            this.dir == s.Vertical ? this.scrollview.scrollToBottom() : this.scrollview.scrollToRight();
                        }),
                        (e.prototype.destroy = function () {
                            this.clear_items(),
                                this.node_pools.forEach(function (e, t) {
                                    e.forEach(function (e) {
                                        e.destroy();
                                    });
                                }),
                                (this.node_pools = null),
                                (this.items = null),
                                cc.isValid(this.scrollview.node) && (this.scrollview.node.off('scrolling', this.on_scrolling, this), this.scrollview.node.off('scroll-to-bottom', this.on_scroll_to_end, this), this.scrollview.node.off('scroll-to-right', this.on_scroll_to_end, this), this.scrollview.node.off('scroll-ended', this.on_scroll_ended, this));
                        }),
                        e
                    );
                })();
                i.ScrollView = o;
                var s,
                    n,
                    a = (function () {
                        function e(e) {
                            (this.mDatas = []), (this.mPageCount = 15), (this.mEnableScorllLoad = !1), (this.mPreloadIdx = 0), (this.mScrollView = e), this.mScrollView.setOnScrollToTopListener(this.onLoadMore.bind(this));
                        }
                        return (
                            (e.prototype.setOnLoadMoreListener = function (e) {
                                this.onScorllToHead = e;
                            }),
                            (e.prototype.onLoadMore = function () {
                                this.mEnableScorllLoad && this.splitLoadData(), this.onScorllToHead && this.onScorllToHead();
                            }),
                            (e.prototype.splitLoadData = function () {
                                if (0 != this.mDatas.length) {
                                    var e = this.mPreloadIdx - this.mPageCount,
                                        t = this.mPageCount;
                                    e < 0 && (e = 0), (this.mPreloadIdx -= t), this.mScrollView.insert_data(0, this.mDatas.splice(e, t));
                                }
                            }),
                            (e.prototype.setData = function (e, t, i) {
                                void 0 === t && (t = !1), void 0 === i && (i = 15), 0 < this.mDatas.length && this.mDatas.splice(0, this.mDatas.length), (this.mDatas = e), (this.mPageCount = i < 0 ? 15 : i), (this.mEnableScorllLoad = t), this.mEnableScorllLoad ? ((this.mPreloadIdx = this.mDatas.length), this.mScrollView.clear_data(!1), this.splitLoadData()) : this.mScrollView.set_data(e, !1);
                            }),
                            (e.prototype.appendData = function (e) {
                                this.mScrollView.append_data(e);
                            }),
                            e
                        );
                    })();
                (i.ScrollViewController = a), ((n = s = i.ScrollDirection || (i.ScrollDirection = {}))[(n.Vertical = 1)] = 'Vertical'), (n[(n.Horizontal = 2)] = 'Horizontal'), cc._RF.pop();
            },
            {},
        ],
        'weapp_qrcode.d': [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, '500bep1+z1Gjq7dtDnyQksd', 'weapp_qrcode.d'), cc._RF.pop();
            },
            {},
        ],
        zh: [
            function (e, t, i) {
                'use strict';
                cc._RF.push(t, 'ce4a5kV5exI17A/ek5wQemt', 'zh'),
                    window.i18n || (window.i18n = {}),
                    window.i18n.languages || (window.i18n.languages = {}),
                    (window.i18n.languages.zh = {
                        label_text: {
                            fight_matching: '正在匹配...',
                            fight_estimate_matching_times: '预计匹配时长 %s s',
                            fight_cancel_matching: '取消匹配',
                            fight_matching_success: '匹配成功',
                            fight_pre_badge: '前一段位',
                            fight_suf_badge: '下一段位',
                            fight_cur_badge: '当前段位',
                            fight_next_badge: '下一段位',
                            fight_select_music: '正在抽取对战歌曲...',
                            fight_cur_music_title: '本局弹奏歌曲',
                            fight_matching_net_work_err: '暂未匹配到在线对手\n\r请稍候重试',
                            fight_rank_net_err: '网络异常,点击重试!',
                            fight_rank_no_data: '排行榜还没记录,赶紧去匹配比赛吧!',
                            fight_season_reward: '赛季奖励',
                            limit_day: '限时%s天',
                            limit_infinite: '永久',
                            fight_rule_title: '对战玩法规则说明',
                            fight_no_jion: '未上榜',
                            fight_friend: {
                                matching_invite_tips: '邀请已发送',
                                matching_await_tips: '等待好友点入 .',
                                matching_invite_again: '重新邀请',
                            },
                            dialog_tips: '提示',
                            loading_music: '正在加载音乐资源 ',
                            headphones: '使用耳机效果体验更佳',
                            new_song_star: '快来弹奏您的第一首歌曲吧！',
                            little_star: '小星星',
                            little_star_play: '开始',
                            friends_rank: '好友排行',
                            view_more: '查看全部',
                            invite: '邀请好友',
                            home: '主页',
                            music_lib: '曲库',
                            achievement: '成就榜',
                            level: '等级',
                            unlock: '解锁',
                            rank: '排名',
                            rank_share: '炫耀一下',
                            rank_show_group: '查看群排行',
                            rank_challenge: '立即挑战',
                            friend_best_score: '好友历史最高分',
                            not_ranked: '未上榜',
                            best_score: '历史最高分',
                            game_bonus_time: '收金币',
                            game_endless_tiles: '无尽模式',
                            game_history_top: '历史最高分 ',
                            game_select_boosters: '选择增强道具',
                            need: '还差',
                            to_exceed: '就能超越好友',
                            to_win1: '即可赢得',
                            champion: '第一名',
                            runner_up: '第二名',
                            second_runner_up: '第三名',
                            get_star: '即可获得',
                            get_new_best: '即可创下',
                            new_best: '新纪录',
                            revive_now: '立即复活',
                            give_up: '再坚持一下！看看你的极限在哪里',
                            revive_free: '免费复活',
                            revive_diamond: '钻石复活',
                            spfuh: '看视频复活',
                            djtg: '点击跳过',
                            jthk: '今天还可邀请%s人',
                            hyzl: '好友助力',
                            whether_to_continue: '是否继续?',
                            wait_for_friends: '已发送，好友点入即可助力',
                            no_share_times_tips: '今天邀请机会已用完,明天再来吧',
                            no_diamond_tips: '复活所需钻石不足',
                            nnnn: '分',
                            jsjd: '解锁进度:',
                            cyss: '参与人数:',
                            bingxue_tangguo: '冰雪 糖果',
                            yh: '已获 ',
                            sx: '首上新',
                            single_champion: '恭喜你获得单曲冠军',
                            beat_frineds1: '单曲排名超越',
                            beat_frineds2: '好友',
                            no_thanks: '下次再说',
                            challenge_friends: '挑战好友',
                            god_hand: '神之手',
                            play_again: '再次挑战',
                            next: '下一首',
                            invite_tips: '邀请已发送，新玩家点入\n\r即可解锁！',
                            grade_unlock: '%s级解锁',
                            level_up: '升级啦',
                            upgrade_rewards: '升级奖励',
                            new_music_unlocked: '解锁新歌曲',
                            receive_awards: '领取奖励',
                            new_music_wnlocked: '解锁新歌曲',
                            back: '返回',
                            Energy: '获取体力',
                            time: '剩余复活时间: ',
                            free_energy: '免费体力',
                            three_times: '每天只有三次获得免费体力的机会，明天再来看看吧',
                            Coins: '获取金币',
                            get_diamond: '获取钻石',
                            free_diamond: '免费钻石',
                            share_fail: '分享失败',
                            group_get_diamond: '需要分享到群，才能获得钻石哦',
                            share_success: '分享成功',
                            get_jiangli: '获得',
                            zuanshijiangli: '个钻石奖励，赶快去挑战自己的极限吧',
                            ok: '好的',
                            coupon_buy: '点券购买',
                            watch_video_invite_tips: '看视频免费得钻石哦',
                            no_internet: '未检测到网络，无法查看排行榜',
                            loading_failed: '资源加载失败，请检查网络状态后重试',
                            retry: '重试',
                            nickname_avatar: '获取不到你的昵称和头像，请开启授权后重试',
                            cancel: '取消',
                            continue: '开启',
                            nothing: '无',
                            unit1: '位',
                            unit2: '分',
                            more_songs: '更多歌曲敬请期待',
                            error: '错误信息',
                            jlpmq: '距离排名前50%还差',
                            jkhd: '即可获得',
                            ssbd: '实时榜单',
                            qbbd: '全部榜单',
                            ljtz: '立即挑战',
                            sycs: '今日剩余挑战次数: ',
                            hzzj: '好友互助增加挑战次数 ',
                            wfsm: '擂台挑战玩法说明',
                            wfgz: '玩法规则',
                            wfgz1: '每轮开赛时间为每晚22点，到次日22点结束',
                            wfgz2: '取本轮挑战的最高成绩进行排名，同分数最先到达的玩家排名靠前',
                            wfgz3: '结束时会对排名进行核对，最终排名以实际核算后为准',
                            wfgz4: '排名奖励通过邮件发送，在结束后半小时内发放完毕',
                            wfgz5: '游戏中严谨使用作弊工具，经发现核实后取消成绩并禁止参加擂台赛',
                            pmjl: '排名奖励',
                            pmjl1: '榜单进入前50%都能获得精美皮肤',
                            mc1: '第1名',
                            mc2: '前10名',
                            mc3: '前100名',
                            mc4: '前1000名',
                            mc5: '前5000名',
                            mc6: '前20%',
                            mc7: '前50%',
                            hgjl: '获得皇冠奖励',
                            star: '星星',
                            crown: '皇冠',
                            gift1: '初级奖励礼包',
                            gift2: '中级奖励礼包',
                            gift3: '高级奖励礼包',
                            gift4: '豪华奖励礼包',
                            gift5: '史诗奖励礼包',
                            brph: '本日排行榜',
                            hc: '还差505分可进前50%',
                            wcy: '未参与',
                            zrph: '昨日排行榜',
                            wdzj: '我的战绩',
                            zjcj: '最佳成绩: ',
                            wlyc_djcs: '网络异常,点击重试!',
                            nodata_today: '本日排行榜还没得分记录,赶紧去挑战吧！',
                            nodata_yesterday: '昨日排行榜没有得分记录喔！',
                            no_challenge: '还没参加过擂台赛喔，赶紧去挑战吧！',
                            rank_group: '查看群排行',
                            rank_group_click: '选择群查看排行',
                            fhsy: '返回首页',
                            cxtz: '重新挑战',
                            new_rank: '最新排名   ',
                            rank_into: '排名已经进入   ',
                            ranking: '第%s名',
                            top: '前%s%',
                            out90: '90%外',
                            times: '次',
                            top_percent: '排名前%s%',
                            to_rank_need: '<color=#000000>距离%s还差</color> <color=#CC562D> %s分</color>',
                            score: '分',
                            can_get: '即可获得 ',
                            reward: '可得 ',
                            chanllenge_rank1: '好棒棒！目前排在擂台赛第1名啦！',
                            zwyj: '暂无邮件消息',
                            yjbl: '邮件只保留7天，请及时查收',
                            jcyj: '正在检查邮件列表...',
                            wlyc: '网络异常，请稍后重试',
                            mtlc: '每天凌晨06：00更新',
                            gzsm: '规则说明',
                            gzsm1: '好友点击您发出的邀请连接进入游戏后，即可完成一次好友邀请',
                            gzsm2: '每成功邀请一个玩家，奖励6钻石，邀请新玩家奖励翻倍得12钻石，满5玩家额外可领神秘礼包',
                            gzsm3: '成功邀请后，您的好友也可获得2个钻石奖励',
                            gzsm4: '每天可邀请玩家上限5人，可帮助玩家上限5此，超出上限不再获得钻石奖励',
                            share_reward_tips: '满5人可领',
                            chongci: '触发时机：游戏开始时',
                            chongcixg: '道具效果：自动冲刺12秒',
                            bingdong: '触发时机：复活后选择使用',
                            bingdongxg: '道具效果：15秒内钢琴块下落降速50%',
                            hudun: '触发时机：操作失误时',
                            hudunxg: '道具效果：抵消失误并无敌8秒',
                            cc: '冲刺：开局自动冲刺12秒',
                            js: '减速：复活后，15秒内钢琴块减速',
                            hd: '护盾：抵消1次漏击操作',
                            bj: '本局游戏使用减速道具',
                            ljsy: '立即使用',
                            sprint: '冲刺',
                            slow: '减速',
                            shield: '护盾',
                            day1: '第一天',
                            day2: '第二天',
                            day3: '第三天',
                            day4: '第四天',
                            day5: '第五天',
                            day6: '第六天',
                            day7: '第七天',
                            dia_gift: '钻石大礼包',
                            sign_more_gift: '去游戏中赢取更多礼包吧',
                            sign: '签到',
                            signed: '已签到',
                            diamond: '钻石',
                            piece: '拼图',
                            own_dia: '拥有钻石:',
                            skin_share: '分享有礼',
                            sys_def: '系统默认',
                            use_now: '正在使用',
                            skin_unuse: '立即使用',
                            skin_trial: '试玩',
                            trial_end: '试玩结束',
                            skin_load: '正在加载皮肤文件',
                            skin_tip: '提示',
                            skin_dia_less: '当前钻石不足，你可以通过下列方式\n获得钻石',
                            skin_get: '获取',
                            skin_owned: '已拥有',
                            invite_get: '邀请新玩家可获得（%s/3）',
                            skin_ice: '冰雪奇幻',
                            skin_cherry: '樱花树下',
                            skin_candy: '糖果甜心',
                            skin_soccer: '世界杯',
                            skin_field: '绿野仙踪',
                            skin_girl: '元气少女',
                            skin_space: '星空环游',
                            skin_default: '系统默认',
                            skin_sign_get: '累计签到3天可获得',
                            skin_first_charge_get: '累计签到3天可获得',
                            day: '天',
                            hours: '小时',
                            music_tab1: '等级歌曲',
                            music_tab2: '热曲挑战',
                            music_start: '开始',
                            music_start1: '1 开始',
                            music_trial: '试玩',
                            music_unlock: '解锁',
                            music_unlock_text1: '50 解锁',
                            music_unlock_text2: '2 试玩',
                            music_invite_unlock: '邀请解锁',
                            music_invite_rule: '邀请1名新玩家即可免费解锁',
                            music_unlock_msg1: '需要等级%s中获得%s星',
                            music_unlock_msg2: '等级%s解锁',
                            music_unlock_msg3: '需要等级%s中获得%s皇冠',
                            music_unlock_msg4: '距结束:%s天%s时%s分%s秒',
                            lottery_prize1: '永久皮肤',
                            lottery_prize2: '限时皮肤',
                            lottery_rule: '看15s广告即可免费抽奖',
                            lottery_video: '观看完整视频可获得游戏奖励',
                            lottery_video_pick: '关闭广告 继续观看',
                            lottery_reward_sprint: '获得冲刺道具，可在游戏中使用',
                            lottery_waiting: '00:00:%s后可再次抽奖',
                            lottery_chance: '今日抽奖次数已用完',
                            lottery_chance2: '获得免广告抽奖机会',
                            new_guide_theme: '玩法引导',
                            new_guide_text1: '进度：',
                            new_guide_text2: '完成所有目标，你就是钢琴达人啦！',
                            new_guide_dialog_text: '恭喜您学会了钢琴块2的基础操作，第一首歌快来挑战高分吧！',
                            new_guide_btn_text: '复活',
                            new_guide_revive_text: '黑块没点到会导致游戏失败哦！\n免费帮您复活一次，继续努力吧！',
                            new_guide_revive_text2: '提示',
                            ljdh: '立即兑换',
                            unlocked: '已解锁',
                            unlock_by_invite: '邀请解锁',
                            more_hot_song: '更多热曲',
                            on_sale_1_day: '5折优惠,限时1天',
                            unlock_by_invite_1_new_palyer: '邀请1名新玩家解锁',
                            worth_diamond: '价值%s钻石',
                            award_page_setting: '去设置',
                            award_page_morePieces: '获取更多拼图>>',
                            award_page_SetSkinAtShop: '您可以在皮肤商店设置使用皮肤 ',
                            award_page_getLowSpeedItem: '获得减速道具，可在游戏中使用',
                            award_page_getShieldItem: '获得护盾道具，可在游戏中使用',
                            award_page_piecesTip: '集齐拼图可得钻石大礼包',
                            award_page_giftTip: '去游戏中赢取更多礼包吧',
                            award_page_transform_diamond: '奖励的皮肤为你转为%s个钻石',
                            award_page_award_get: '奖励已直接入账，请注意查收',
                            award_page_video_diamond: '看视频广告额外',
                            award_page_get_video_diamond: '获得2钻石,已成功入账',
                            award_page_close_video_diamond: '中途退出视频播放，钻石获取失败',
                            award_page_no_video_diamond: '暂无可用视频广告，钻石获取失败',
                            Pieces_piano: '钢琴拼图',
                            Pieces_reward: '集齐拼图宝箱，可获得钻石及限时皮肤',
                            Pieces_time: '剩余刷新时间：%s天%s时%s分%s秒',
                            Pieces_get: '邀好友得拼图',
                            Pieces_get_count: '今日已邀请%s/5',
                            Pieces_rule: '规则',
                            Pieces_rule_det: '拼图获取规则',
                            Pieces_rule_one: '集齐钢琴拼图可以获得最多500钻石和3000金币奖励',
                            Pieces_rule_two: '每日登陆、打开游戏过程中的礼包可以获得拼图',
                            Pieces_rule_thr: '邀请好友进入游戏必获得拼图，每天最多可邀请5位好友',
                            Pieces_rule_for: '每15天刷新一次拼图，在15天中最多可获得15次奖励，未兑换的拼图将被清空，请务必在刷新之前把奖励领取哦',
                            Pieces_bonus: '集齐拼图可获得钻石大礼包，获取更多拼图',
                            Pieces_count_limit: '本轮活动内，您已经达到奖励上限15次，不能再获得奖励啦！',
                            Confirm: '我知道了',
                            Notification: '提示',
                            pieces_obtain: '嘿，你发现了钢琴拼图！',
                            Pieces_obtain2: '集齐拼图可兑换钻石大礼包',
                            pieces_obtain3: '去看看！',
                            friend_help_reward: '好友互助成功，增加1次挑战机会',
                            friend_help_success_tip: '成功帮助好友',
                            friend_help_success_tip2: '奖励',
                            friend_help_create_image: '正在生成图片...',
                            friend_help_save_faild: '保存失败',
                            unit_10k: '万+',
                            get_pieces_tips: '嘿 你发现了钢琴拼图',
                            left_help_times: '今日剩余帮助次数：%s',
                            invitation_left_times: '今日还可邀请人数%s',
                            continue_invite: '继续邀请',
                            invite_success: '你已成功邀请',
                            more_diamond: '获取更多钻石',
                            help_success: '你已成功帮助',
                            help_award_tip: '获得钻石奖励，奖励你',
                            invite_award_tip: '人进入游戏，奖励你',
                            same_friend_tip: '相同好友每天最多只能帮1次哦',
                            help_friend_timeout: '您今天帮助好友的机会已用完（0/5）',
                            start_game: '进入游戏',
                            unlock_tips: '啊哦，这首歌曲你还没有解锁哦~快去继续升级解锁它吧！',
                            shop_tip: '提示',
                            shop_tip2: '系统暂时不支持内购，敬请谅解',
                            free: '免费',
                            mail_obtain: '领取',
                            mail_read: '查看',
                            mail_have_read: '已查看',
                            mail_have_obtain: '已领取',
                            unlock_energy: '体力',
                            unlock_gold: '金币',
                            unlock_diamond: '钻石',
                            unlock_unlockTips: '解锁',
                            unlock_play: '开始',
                            unlock_trial: '试玩',
                            unlock_str_plus: '%s不足，无法%s',
                            gkspsrdjlfb: '观看视频使你的奖励翻倍',
                            prop_tip2: '钻石不足',
                            prop_tip1: '金币不足',
                            amount: '数量',
                            props_introduction: '道具说明',
                            fech: 'friend enter can help',
                            atp: '加送冲刺道具',
                            reff: '免费获得',
                            unbd: '金币解锁',
                            litu: '限时使用',
                            wtvfdr: '观看视频使你的奖励翻倍',
                            wwn: '网络不给力，请检查',
                            evpm: '中途退出视频播放，无法复活，请重试',
                            nvaa: '暂无可用视频广告，本次为您免费复活',
                            play_game_tips_close_video: '中途退出视频播放',
                            play_game_tips_no_ad: '暂无可用视频广告，本次为您立马开始',
                        },
                    }),
                    cc._RF.pop();
            },
            {},
        ],
    },
    {},
    ['LanguageData', 'LocalizedLabel', 'LocalizedSprite', 'SpriteFrameSet', 'polyglot.min', 'base64', 'cmg_pay_client.d', 'cmg_platform.d', 'cmplay.2e834.d', 'configuration.d', 'mgb_sdk.d', 'mgrpt_sdk.d', 'weapp_qrcode.d', 'MGAdUnitManager', 'AdvHelperCMplay', 'AdvHelperWeb', 'MGAdvDefine', 'MGAdvEntrance', 'MGAdvHelper', 'MGAppShare', 'MGShareUtil', 'ShareHelper', 'ShareImage', 'ShareImageUtil', 'ShareImageUtils', 'Utils', 'BasicHelperCM', 'BasicHelperFB', 'BasicHelperQQ', 'BasicHelperWX', 'BasicHelperWeb', 'LocalStorageHelplerWeb', 'MGBasicEntrance', 'MGBasicHelper', 'CloudStorageHelperCM', 'CloudStorageHelperFB', 'CloudStorageHelperQQ', 'CloudStorageHelperWX', 'CloudStorageHelperWeb', 'MGCloudStorageEntrance', 'MGCloudStorageHelper', 'UserHelperCM', 'UserHelperFB', 'UserHelperGameHall', 'UserHelperH5SDK', 'UserHelperQQ', 'UserHelperWX', 'UserHelperWeb', 'UserLoginHelperWeb', 'MGUserEntrance', 'MGUserHelper', 'FBHelper', 'MGLog', 'MGPlatform', 'MGSha1', 'NetworkUtils', 'QQHelper', 'SystemInfo', 'TypeDefinition', 'WeappHelper', 'en', 'zh', 'Md5', 'PlatformProxy', 'SpriteCacheLoader', 'CMPlayAdapter', 'DefaultAdapter', 'IAdapter', 'ScoreManagerProxy', 'WechatGameAdapter', 'SubscriptionUtils', 'AntiCheatProbe', 'OperatingCount', 'Config', 'CrashMonitor', 'Data', 'G', 'GameApp', 'GameInfoMgr', 'Lifecycle', 'Log', 'Presenter', 'PullDataStatus', 'Sound', 'Startup', 'State', 'ConstantsRank', 'GameDefine', 'RowNode', 'AdditionData', 'BaseCsvFile', 'CSV', 'CompetitionBasicData', 'CompetitionMusicData', 'CompetitionRewardData', 'CompetitionSettlementData', 'CopyrightData', 'CsvFile', 'CsvOption', 'CsvRowData', 'EffectData', 'ExpData', 'FightRuleData', 'FragmentBox', 'GameItemsData', 'GoldData', 'HolidayTaskData', 'InviteAward', 'LanguageSongData', 'LevelConsumeData', 'LevelData', 'LevelRewardData', 'LifeData', 'LoginReward', 'LotteryData', 'LvData', 'MusicJsonData', 'MusicKeyData', 'PlayerTaskData', 'RankSetData', 'RobotFightData', 'ShopData', 'SkinAdditionData', 'SkinPieceData', 'SongBox', 'VipData', 'DBMgr', 'HolidayTask', 'HolidayTaskItem', 'HolidayTaskMgr', 'ActivityManager', 'BattleSettlement', 'ChestManager', 'CopyrightManager', 'EventBus', 'FragmentBoxManager', 'GameItemsManager', 'GameTryData', 'I18nManager', 'InviteAwardManager', 'InviteSkinManager', 'LangMgr', 'Level', 'LevelMgr', 'LoginRewardManager', 'LotteryDataManager', 'MoneySystem', 'NotifyEvent', 'PlayerMgr', 'PluginScheduler', 'EconomyPlugin', 'EnergyPlugin', 'ExpPlugin', 'IPlugin', 'PluginMgr', 'UnlockPlugin', 'UnlockProcessor', 'ShareRewardController', 'SkinDataManager', 'SkinPieceDataMgr', 'SongBoxManager', 'SongTryData', 'UserInfoLevelMgr', 'UserLvManager', 'MemCache', 'Recod', 'StorageUtil', 'User', 'UserUtil', 'RankAdapter', 'GameClub', 'ActivityInviteTipsPrefab', 'AddShortcutPrefb', 'BasicTouchEvent', 'ChangePlayIdPrefb', 'CheckActivityRewardProcessor', 'CheckRewardProcessor', 'ClickEventSoundPlayer', 'DebugPanelPrefb', 'DeskIconInstrucPrefb', 'GameEntranceScene', 'GameEntranceSceneFirstEnter', 'HomePagePrefb', 'ImgCache', 'InviteTipsPrefab', 'LoadingFailedPrefab', 'LoadingScene', 'MainpageLeftBtnPanel', 'MainpageLeftBtnPanelOld', 'MainpageRecommendPanel', 'MainpageRightBtnPanel', 'HotMusicCMShareController', 'HotMusicCardItemPrefb', 'HotMusicListCtrl', 'HotSongSplash', 'HotSongSplashItem', 'InviteUnlockMusicCountdownUtil', 'LevelMusicListCtrl', 'MusicLibraryManager', 'NormalMusicCardItemPrefb', 'UnlockConfirmDialogPrefab', 'NewRecordPrefb', 'PopupDlg', 'PreLoadAssets', 'PrefabMgr', 'ToastMgr', 'ToastPopManager', 'ToastPrefab', 'TwoBtnDIalogPrefab', 'UICache', 'UserAuthorizePopupPrefab', 'GameOverHotSongShare', 'AttentionPrefab', 'EmptyPagePrefab', 'MainpageBaseComponent', 'NodesPool', 'RcmdGameData', 'RcmdGameDataAdapter', 'ShareSkinController', 'TitleRedspotPrefab', 'TrialItemPrefab', 'TrialPrefab', 'WelfareController', 'HotmusicActivityMgr', 'MGBGiftBoxWrapper', 'MGBSdkInit', 'MgPluginManager', 'MusicLevelDataLoader', 'UserInfoBtnManager', 'UserInfoManager', 'AdvGetPropertyDialog', 'AwardResultCommonPrefab', 'AwardResultDialogPrefabScript', 'AwardResultItemPrefabScript', 'DailyAttendanceItemPrefbScript', 'DailyAttendancePrefbScript', 'IAwardRounter', 'DiamondPopupProfab', 'EnergyBuyDialogItem', 'EnergyPopupProfab', 'GoldPopupProfab', 'PlayerInfoPopupProfab', 'RankRevivePageContainer', 'RankRevivePageQQ', 'AwardController', 'TipsDialog', 'BusinessUtil', 'AttentionUtil', 'AwardInfoFactory', 'DAwardMgr', 'DailyAwardBens', 'DailyAwardGenerator', 'Dialog', 'DialogManager', 'GameOverHotSong', 'GameOverHotSongItem', 'GameOverInviteSKin', 'GameOverPopupUtil', 'GiftBoxDialog', 'LevelVideoGetSkinPrefab', 'QQRedPacketRelive', 'Relive', 'ReliveFreeDialogTipDialog', 'ReliveInterface', 'ReliveNoShare', 'ReliveScoreData', 'ReliveTotal', 'ReviveController', 'SaveSuccessPrefab', 'UpdateContent', 'UpdateDialog', 'mainpage', 'KeypadFocusedUI', 'KeypadNavigator', 'KeypadNavigatorBase', 'KeypadUtil', 'ActivityLooper', 'Looper', 'ShareLooper', 'LotteryEnum', 'LotteryHandler', 'LotteryIndex', 'LotteryItem', 'LotteryProcess', 'LotteryRoll', 'LotteryVM', 'DataEntryWorker', 'SwitchWorker', 'MusicDownLoadPrefab', 'MusicDownloadHandler', 'MusicDownloadProcess', 'MusicDownloadWorker', 'PianoToneMgr', 'Define', 'ActivityBean', 'ActivityRewardManager', 'ActivityRewardRequest', 'RewardBeans', 'RewardManager', 'RewardRequester', 'DialogNoButtonPrefab', 'DialogOneButtonPrefab', 'DialogRechargePrefab', 'PropertyStorePrefab', 'BuySkinDiamondNotEnough', 'CMInviteSkinPrefab', 'DownLoadingPrefab', 'FollowGiftsPrefab', 'InviteSkinPrefab', 'SkinGainPrefab', 'SkinLoading', 'SkinManager', 'SkinPieceMgr', 'SkinStore', 'SkinStoreItem', 'SkinTaskItemPrefab', 'SkinTaskPageViewPrefab', 'SkinTaskPrefab', 'SkinTryData', 'SkinUtils', 'SkinTask', 'SkinTaskItem', 'SkinTaskMgr', 'FightFriendTimesTask', 'FightUsePropTimesTask', 'FightWinCountTask', 'GoldBuyTask', 'LotteryTask', 'NormalGainCrownTask', 'NormalReliveTimesTask', 'SkinTaskFactory', 'WatchAdsTask', 'TaskItem', 'TaskListManager', 'TaskRewardStorage', 'TaskSystem', 'GuidanceInfo', 'NewGuidanceLoader', 'NewGuidancePrefab', 'NewPlayerTargerItemPrefab', 'NewPlayerTargetParentPrefab', 'NewPlayerTargetPrefab', 'AttendChallengeTask', 'FirstSongTask', 'GameShareTask', 'LevelThreeTask', 'TaskFactory', 'TaskItemImpl', 'UnlockHotSongTask', 'InsFactory', 'LRUCache', 'Log4JS', 'LSKey', 'RemoteCfgMgr', 'ExclusiveSkinGameScene', 'FirstSongGuideGameScene', 'GameBus', 'GameScene', 'GameSceneDebugPanel', 'GameSceneEntry', 'GameSceneSetting', 'MUIBoard', 'MUIButton', 'MUIDefines', 'MUIDrawNode', 'MUIFactory', 'MUILabel', 'MUILine', 'MUINineScaleSprite', 'MUINode', 'MUIParticle', 'MUIProgressBar', 'MUISprite', 'MainScene', 'NormalGameScene', 'RenderSwitch', 'OvertakeFriend', 'StarCountSwitch', 'TouchHandler', 'TrialGameScene', 'TrialSongGameScene', 'TryPianoGameScene', 'MAnimationMgr', 'MScheduler', 'AnimationWork', 'MAction', 'MActionFactory', 'MAdvanceAnimation', 'MBlink', 'MCallFunc', 'MChildAction', 'MCircleMoveBy', 'MCircleMoveTo', 'MDelay', 'MFadeTo', 'MFrameSequence', 'MMoveBy', 'MMoveTo', 'MPropValue', 'MRandomChange', 'MRandomFade', 'MRandomMove', 'MRandomScale', 'MResizeBy', 'MResizeTo', 'MScaleBy', 'MScaleTo', 'MSelfDefine', 'MSequence', 'MSetProperty', 'MSpawn', 'CanvasFunction', 'SimpleAtlas', 'SimpleImage', 'GameInterface', 'GameMapGuide', 'GameStage', 'GameStageEventObserver', 'GameStageGuide', 'GameStageMoney', 'GameStageMusic', 'GameStageRankMusic', 'GameStageTrial', 'GameStageTrialSong', 'CMTouchEvent', 'Map', 'MapGenerator', 'BattleDataConfig', 'BattleDataDefines', 'BattleDataMain', 'BattleDataPlayer', 'BattleDataRunning', 'CookieAnimation', 'LongBlockAnimation', 'ScoreAnimation', 'BackButton', 'Banner', 'KeyNode', 'KeyTouchLine', 'MUINumber', 'SplitLine', 'BeginFrameLoader', 'BlockSkinFrameLoader', 'GameSceneFrameLoader', 'KeypadFrameLoader', 'LoaderInit', 'NumberFrameLoader', 'BlankPauseBlockNode', 'BlockNode', 'BlockNodeCache', 'BlockNodeFactory', 'CookiesNodeCache', 'EvilLongBlockNode', 'EvilShortBlockNode', 'GiftBlockNode', 'LongBlockNode', 'MUINodePool', 'MistakeBlockNode', 'MoneyBlockNode', 'NodeCreateHelper', 'PropertyBlockNode', 'ReuseNode', 'ReuseNodePool', 'ShortBlockNode', 'StartBlockNode', 'FPSProcess', 'GameModuleManager', 'IModule', 'OvertakeFriendModule', 'QQRedPacketModule', 'DecelerateConfirm', 'PropertyHandler', 'PropertyInterfaces', 'PropertyIntroduction', 'PropertyProcess', 'PropertyReport', 'PropertySeeing', 'CtrlPropertyManager', 'CtrlAvoid', 'CtrlConversion', 'CtrlFanatical', 'CtrlControl', 'CtrlFog', 'CtrlObstacle', 'DecelerateWorker', 'FogWorker', 'ShieldWorker', 'SprintWorker', 'IServiceBuilder', 'IServiceProvider', 'IServiceProviderFactory', 'IServiceStorage', 'ServiceEntry', 'ServiceProvider', 'ServiceProviderFactory', 'ServiceStorage', 'ServiceStorageBase', 'BattleGameSceneViewImpl', 'BottomStorePanel', 'GameStageNodeView', 'GameStageView', 'IBattleGameSceneView', 'PropertiesPanel', 'RobotBattleGameSceneViewImpl', 'UiPropertyIconPanel', 'IWorker', 'WorkerBase', 'WorkerState', 'WorkerStateChangedEventArgs', 'BIReportI', 'EasyReport', 'Infoc', 'InfocHelper', 'example_table', 'm_p2_DL', 'm_p2_HMusic_laxin', 'm_p2_PData', 'm_p2_PData_Dia', 'm_p2_Uaction', 'm_p2_daily_activity', 'm_p2_load_f', 'm_p2_pk_action', 'm_p2_pop_coin', 'm_p2_share', 'm_p2_skin_piece', 'minigame_piano2_arena_fail', 'minigame_piano2_crash', 'minigame_piano2_hotmusic', 'minigame_piano2_leave_page', 'minigame_piano2_pintu', 'recommender.min', 'IMusicContext', 'QQBKAudioManager', 'QQMusicContext', 'WXMusicContext', 'InstrumentFactory', 'Music', 'MusicBeat', 'MusicBlock', 'MusicCache', 'MusicContext', 'MusicDefines', 'MusicInstrument', 'MusicParser', 'MusicPart', 'MusicPlayCompat', 'MusicPlayer', 'MusicPreloader', 'MusicSyllable', 'MusicThread', 'PropertyBarrel', 'PropertyConfig', 'PropertyDefines', 'PropertyFactory', 'PropertyPack', 'AnimationBackground', 'Background', 'Skin', 'SkinElementPainter', 'SkinMgr', 'SkinObject', 'SkinRaw', 'AvatarUtil', 'Bean', 'SocialHelper', 'SocialManager', 'WXHelper', 'BannerDelayShowToggle', 'BaseVersionChecker', 'CloudMgr', 'CloudResMgr', 'Downloader', 'IChecker', 'ResBean', 'ResMgr', 'ToggleBean', 'ToggleChecker', 'VersionBean', 'AutomaticTest', 'BinaryData', 'DateUtil', 'Delay', 'Dictionary', 'Emitter', 'List', 'LoadingTimecost', 'NodeFacade', 'NumberUtil', 'ObjectPool', 'PU', 'PageHeap', 'ParticleSystemVM', 'Performance', 'QQGameConvertCode', 'QQReport', 'ResLoader', 'SUtil', 'SceneMusicMgr', 'SceneMusicUtil', 'SingleWorker', 'StringUtil', 'TimeUtil', 'Utility', 'EMap', 'Enumerator', 'IEnumerable', 'IEnumerator', 'IMap', 'ISet', 'KeyValuePair', 'Set', 'EnumEntry', 'EnumUtils', 'layout_utils', 'listview', 'scrollview', 'Activator', 'ClassType', 'Tween'],
);
